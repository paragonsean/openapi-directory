/*
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.IndividualUpdate;
import org.openapitools.client.model.Interactions;
import java.time.LocalDate;
import org.openapitools.client.model.ModelConfiguration;
import org.openapitools.client.model.NewUpdate;
import org.openapitools.client.model.Profile;
import org.openapitools.client.model.ProfilesInner;
import org.openapitools.client.model.Schedules;
import org.openapitools.client.model.Shares;
import org.openapitools.client.model.Shuffle;
import org.openapitools.client.model.Success;
import org.openapitools.client.model.Update;
import org.openapitools.client.model.UpdatesArray;
import org.openapitools.client.model.User;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for infoConfigurationmediaTypeExtensionGet
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call infoConfigurationmediaTypeExtensionGetCall(String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/info/configuration{mediaTypeExtension}"
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call infoConfigurationmediaTypeExtensionGetValidateBeforeCall(String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling infoConfigurationmediaTypeExtensionGet(Async)");
        }

        return infoConfigurationmediaTypeExtensionGetCall(mediaTypeExtension, _callback);

    }

    /**
     * 
     * Returns an object with the current configuration that Buffer is using, including supported services, their icons and the varying limits of character and schedules.
     * @param mediaTypeExtension  (required)
     * @return ModelConfiguration
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ModelConfiguration infoConfigurationmediaTypeExtensionGet(String mediaTypeExtension) throws ApiException {
        ApiResponse<ModelConfiguration> localVarResp = infoConfigurationmediaTypeExtensionGetWithHttpInfo(mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns an object with the current configuration that Buffer is using, including supported services, their icons and the varying limits of character and schedules.
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;ModelConfiguration&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelConfiguration> infoConfigurationmediaTypeExtensionGetWithHttpInfo(String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = infoConfigurationmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<ModelConfiguration>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns an object with the current configuration that Buffer is using, including supported services, their icons and the varying limits of character and schedules.
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call infoConfigurationmediaTypeExtensionGetAsync(String mediaTypeExtension, final ApiCallback<ModelConfiguration> _callback) throws ApiException {

        okhttp3.Call localVarCall = infoConfigurationmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<ModelConfiguration>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for linksSharesmediaTypeExtensionGet
     * @param mediaTypeExtension  (required)
     * @param url URL-encoded URL of the page for which the number of shares is requested. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call linksSharesmediaTypeExtensionGetCall(String mediaTypeExtension, String url, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/links/shares{mediaTypeExtension}"
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call linksSharesmediaTypeExtensionGetValidateBeforeCall(String mediaTypeExtension, String url, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling linksSharesmediaTypeExtensionGet(Async)");
        }

        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling linksSharesmediaTypeExtensionGet(Async)");
        }

        return linksSharesmediaTypeExtensionGetCall(mediaTypeExtension, url, _callback);

    }

    /**
     * 
     * Returns an object with a the numbers of shares a link has had using Buffer.
     * @param mediaTypeExtension  (required)
     * @param url URL-encoded URL of the page for which the number of shares is requested. (required)
     * @return Shares
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public Shares linksSharesmediaTypeExtensionGet(String mediaTypeExtension, String url) throws ApiException {
        ApiResponse<Shares> localVarResp = linksSharesmediaTypeExtensionGetWithHttpInfo(mediaTypeExtension, url);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns an object with a the numbers of shares a link has had using Buffer.
     * @param mediaTypeExtension  (required)
     * @param url URL-encoded URL of the page for which the number of shares is requested. (required)
     * @return ApiResponse&lt;Shares&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Shares> linksSharesmediaTypeExtensionGetWithHttpInfo(String mediaTypeExtension, String url) throws ApiException {
        okhttp3.Call localVarCall = linksSharesmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, url, null);
        Type localVarReturnType = new TypeToken<Shares>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns an object with a the numbers of shares a link has had using Buffer.
     * @param mediaTypeExtension  (required)
     * @param url URL-encoded URL of the page for which the number of shares is requested. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call linksSharesmediaTypeExtensionGetAsync(String mediaTypeExtension, String url, final ApiCallback<Shares> _callback) throws ApiException {

        okhttp3.Call localVarCall = linksSharesmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, url, _callback);
        Type localVarReturnType = new TypeToken<Shares>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for profilesIdSchedulesUpdatemediaTypeExtensionPost
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdSchedulesUpdatemediaTypeExtensionPostCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/profiles/{id}/schedules/update{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call profilesIdSchedulesUpdatemediaTypeExtensionPostValidateBeforeCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling profilesIdSchedulesUpdatemediaTypeExtensionPost(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling profilesIdSchedulesUpdatemediaTypeExtensionPost(Async)");
        }

        return profilesIdSchedulesUpdatemediaTypeExtensionPostCall(id, mediaTypeExtension, _callback);

    }

    /**
     * 
     * \&quot;Set the posting schedules for the specified social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return Success
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public Success profilesIdSchedulesUpdatemediaTypeExtensionPost(String id, String mediaTypeExtension) throws ApiException {
        ApiResponse<Success> localVarResp = profilesIdSchedulesUpdatemediaTypeExtensionPostWithHttpInfo(id, mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * \&quot;Set the posting schedules for the specified social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;Success&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Success> profilesIdSchedulesUpdatemediaTypeExtensionPostWithHttpInfo(String id, String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = profilesIdSchedulesUpdatemediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<Success>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * \&quot;Set the posting schedules for the specified social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdSchedulesUpdatemediaTypeExtensionPostAsync(String id, String mediaTypeExtension, final ApiCallback<Success> _callback) throws ApiException {

        okhttp3.Call localVarCall = profilesIdSchedulesUpdatemediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<Success>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for profilesIdSchedulesmediaTypeExtensionGet
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdSchedulesmediaTypeExtensionGetCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/profiles/{id}/schedules{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call profilesIdSchedulesmediaTypeExtensionGetValidateBeforeCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling profilesIdSchedulesmediaTypeExtensionGet(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling profilesIdSchedulesmediaTypeExtensionGet(Async)");
        }

        return profilesIdSchedulesmediaTypeExtensionGetCall(id, mediaTypeExtension, _callback);

    }

    /**
     * 
     * Returns details of the posting schedules associated with a social media profile.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return Schedules
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public Schedules profilesIdSchedulesmediaTypeExtensionGet(String id, String mediaTypeExtension) throws ApiException {
        ApiResponse<Schedules> localVarResp = profilesIdSchedulesmediaTypeExtensionGetWithHttpInfo(id, mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns details of the posting schedules associated with a social media profile.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;Schedules&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Schedules> profilesIdSchedulesmediaTypeExtensionGetWithHttpInfo(String id, String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = profilesIdSchedulesmediaTypeExtensionGetValidateBeforeCall(id, mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<Schedules>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns details of the posting schedules associated with a social media profile.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdSchedulesmediaTypeExtensionGetAsync(String id, String mediaTypeExtension, final ApiCallback<Schedules> _callback) throws ApiException {

        okhttp3.Call localVarCall = profilesIdSchedulesmediaTypeExtensionGetValidateBeforeCall(id, mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<Schedules>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for profilesIdUpdatesPendingmediaTypeExtensionGet
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param since Specifies a unix timestamp which only status updates created after this time will be retrieved. (optional)
     * @param utc If utc is set times will be returned relative to UTC rather than the users associated timezone. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdUpdatesPendingmediaTypeExtensionGetCall(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/profiles/{id}/updates/pending{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (since != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("since", since));
        }

        if (utc != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("utc", utc));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call profilesIdUpdatesPendingmediaTypeExtensionGetValidateBeforeCall(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling profilesIdUpdatesPendingmediaTypeExtensionGet(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling profilesIdUpdatesPendingmediaTypeExtensionGet(Async)");
        }

        return profilesIdUpdatesPendingmediaTypeExtensionGetCall(id, mediaTypeExtension, page, count, since, utc, _callback);

    }

    /**
     * 
     * \&quot;Returns an array of updates that are currently in the buffer for an individual social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param since Specifies a unix timestamp which only status updates created after this time will be retrieved. (optional)
     * @param utc If utc is set times will be returned relative to UTC rather than the users associated timezone. (optional)
     * @return UpdatesArray
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public UpdatesArray profilesIdUpdatesPendingmediaTypeExtensionGet(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc) throws ApiException {
        ApiResponse<UpdatesArray> localVarResp = profilesIdUpdatesPendingmediaTypeExtensionGetWithHttpInfo(id, mediaTypeExtension, page, count, since, utc);
        return localVarResp.getData();
    }

    /**
     * 
     * \&quot;Returns an array of updates that are currently in the buffer for an individual social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param since Specifies a unix timestamp which only status updates created after this time will be retrieved. (optional)
     * @param utc If utc is set times will be returned relative to UTC rather than the users associated timezone. (optional)
     * @return ApiResponse&lt;UpdatesArray&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<UpdatesArray> profilesIdUpdatesPendingmediaTypeExtensionGetWithHttpInfo(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc) throws ApiException {
        okhttp3.Call localVarCall = profilesIdUpdatesPendingmediaTypeExtensionGetValidateBeforeCall(id, mediaTypeExtension, page, count, since, utc, null);
        Type localVarReturnType = new TypeToken<UpdatesArray>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * \&quot;Returns an array of updates that are currently in the buffer for an individual social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param since Specifies a unix timestamp which only status updates created after this time will be retrieved. (optional)
     * @param utc If utc is set times will be returned relative to UTC rather than the users associated timezone. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdUpdatesPendingmediaTypeExtensionGetAsync(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc, final ApiCallback<UpdatesArray> _callback) throws ApiException {

        okhttp3.Call localVarCall = profilesIdUpdatesPendingmediaTypeExtensionGetValidateBeforeCall(id, mediaTypeExtension, page, count, since, utc, _callback);
        Type localVarReturnType = new TypeToken<UpdatesArray>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for profilesIdUpdatesReordermediaTypeExtensionPost
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdUpdatesReordermediaTypeExtensionPostCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/profiles/{id}/updates/reorder{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call profilesIdUpdatesReordermediaTypeExtensionPostValidateBeforeCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling profilesIdUpdatesReordermediaTypeExtensionPost(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling profilesIdUpdatesReordermediaTypeExtensionPost(Async)");
        }

        return profilesIdUpdatesReordermediaTypeExtensionPostCall(id, mediaTypeExtension, _callback);

    }

    /**
     * 
     * Edit the order at which statuses for the specified social media profile will be sent out of the buffer. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return Shuffle
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public Shuffle profilesIdUpdatesReordermediaTypeExtensionPost(String id, String mediaTypeExtension) throws ApiException {
        ApiResponse<Shuffle> localVarResp = profilesIdUpdatesReordermediaTypeExtensionPostWithHttpInfo(id, mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Edit the order at which statuses for the specified social media profile will be sent out of the buffer. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;Shuffle&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Shuffle> profilesIdUpdatesReordermediaTypeExtensionPostWithHttpInfo(String id, String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = profilesIdUpdatesReordermediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<Shuffle>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Edit the order at which statuses for the specified social media profile will be sent out of the buffer. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdUpdatesReordermediaTypeExtensionPostAsync(String id, String mediaTypeExtension, final ApiCallback<Shuffle> _callback) throws ApiException {

        okhttp3.Call localVarCall = profilesIdUpdatesReordermediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<Shuffle>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for profilesIdUpdatesSentmediaTypeExtensionGet
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param since Specifies a unix timestamp which only status updates created after this time will be retrieved. (optional)
     * @param utc If utc is set times will be returned relative to UTC rather than the users associated timezone. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdUpdatesSentmediaTypeExtensionGetCall(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/profiles/{id}/updates/sent{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (since != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("since", since));
        }

        if (utc != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("utc", utc));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call profilesIdUpdatesSentmediaTypeExtensionGetValidateBeforeCall(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling profilesIdUpdatesSentmediaTypeExtensionGet(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling profilesIdUpdatesSentmediaTypeExtensionGet(Async)");
        }

        return profilesIdUpdatesSentmediaTypeExtensionGetCall(id, mediaTypeExtension, page, count, since, utc, _callback);

    }

    /**
     * 
     * Returns an array of updates that have been sent from the buffer for an individual social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param since Specifies a unix timestamp which only status updates created after this time will be retrieved. (optional)
     * @param utc If utc is set times will be returned relative to UTC rather than the users associated timezone. (optional)
     * @return UpdatesArray
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public UpdatesArray profilesIdUpdatesSentmediaTypeExtensionGet(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc) throws ApiException {
        ApiResponse<UpdatesArray> localVarResp = profilesIdUpdatesSentmediaTypeExtensionGetWithHttpInfo(id, mediaTypeExtension, page, count, since, utc);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns an array of updates that have been sent from the buffer for an individual social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param since Specifies a unix timestamp which only status updates created after this time will be retrieved. (optional)
     * @param utc If utc is set times will be returned relative to UTC rather than the users associated timezone. (optional)
     * @return ApiResponse&lt;UpdatesArray&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<UpdatesArray> profilesIdUpdatesSentmediaTypeExtensionGetWithHttpInfo(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc) throws ApiException {
        okhttp3.Call localVarCall = profilesIdUpdatesSentmediaTypeExtensionGetValidateBeforeCall(id, mediaTypeExtension, page, count, since, utc, null);
        Type localVarReturnType = new TypeToken<UpdatesArray>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns an array of updates that have been sent from the buffer for an individual social media profile. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param since Specifies a unix timestamp which only status updates created after this time will be retrieved. (optional)
     * @param utc If utc is set times will be returned relative to UTC rather than the users associated timezone. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdUpdatesSentmediaTypeExtensionGetAsync(String id, String mediaTypeExtension, Integer page, Integer count, LocalDate since, Boolean utc, final ApiCallback<UpdatesArray> _callback) throws ApiException {

        okhttp3.Call localVarCall = profilesIdUpdatesSentmediaTypeExtensionGetValidateBeforeCall(id, mediaTypeExtension, page, count, since, utc, _callback);
        Type localVarReturnType = new TypeToken<UpdatesArray>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for profilesIdUpdatesShufflemediaTypeExtensionPost
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdUpdatesShufflemediaTypeExtensionPostCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/profiles/{id}/updates/shuffle{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call profilesIdUpdatesShufflemediaTypeExtensionPostValidateBeforeCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling profilesIdUpdatesShufflemediaTypeExtensionPost(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling profilesIdUpdatesShufflemediaTypeExtensionPost(Async)");
        }

        return profilesIdUpdatesShufflemediaTypeExtensionPostCall(id, mediaTypeExtension, _callback);

    }

    /**
     * 
     * Randomize the order at which statuses for the specified social media profile will be sent out of the buffer. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return Shuffle
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public Shuffle profilesIdUpdatesShufflemediaTypeExtensionPost(String id, String mediaTypeExtension) throws ApiException {
        ApiResponse<Shuffle> localVarResp = profilesIdUpdatesShufflemediaTypeExtensionPostWithHttpInfo(id, mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Randomize the order at which statuses for the specified social media profile will be sent out of the buffer. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;Shuffle&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Shuffle> profilesIdUpdatesShufflemediaTypeExtensionPostWithHttpInfo(String id, String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = profilesIdUpdatesShufflemediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<Shuffle>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Randomize the order at which statuses for the specified social media profile will be sent out of the buffer. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdUpdatesShufflemediaTypeExtensionPostAsync(String id, String mediaTypeExtension, final ApiCallback<Shuffle> _callback) throws ApiException {

        okhttp3.Call localVarCall = profilesIdUpdatesShufflemediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<Shuffle>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for profilesIdmediaTypeExtensionGet
     * @param mediaTypeExtension  (required)
     * @param id  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdmediaTypeExtensionGetCall(String mediaTypeExtension, String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/profiles/{id}{mediaTypeExtension}"
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()))
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call profilesIdmediaTypeExtensionGetValidateBeforeCall(String mediaTypeExtension, String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling profilesIdmediaTypeExtensionGet(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling profilesIdmediaTypeExtensionGet(Async)");
        }

        return profilesIdmediaTypeExtensionGetCall(mediaTypeExtension, id, _callback);

    }

    /**
     * 
     * Returns details of the single specified social media profile.
     * @param mediaTypeExtension  (required)
     * @param id  (required)
     * @return Profile
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public Profile profilesIdmediaTypeExtensionGet(String mediaTypeExtension, String id) throws ApiException {
        ApiResponse<Profile> localVarResp = profilesIdmediaTypeExtensionGetWithHttpInfo(mediaTypeExtension, id);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns details of the single specified social media profile.
     * @param mediaTypeExtension  (required)
     * @param id  (required)
     * @return ApiResponse&lt;Profile&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Profile> profilesIdmediaTypeExtensionGetWithHttpInfo(String mediaTypeExtension, String id) throws ApiException {
        okhttp3.Call localVarCall = profilesIdmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, id, null);
        Type localVarReturnType = new TypeToken<Profile>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns details of the single specified social media profile.
     * @param mediaTypeExtension  (required)
     * @param id  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesIdmediaTypeExtensionGetAsync(String mediaTypeExtension, String id, final ApiCallback<Profile> _callback) throws ApiException {

        okhttp3.Call localVarCall = profilesIdmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, id, _callback);
        Type localVarReturnType = new TypeToken<Profile>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for profilesmediaTypeExtensionGet
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesmediaTypeExtensionGetCall(String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/profiles{mediaTypeExtension}"
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call profilesmediaTypeExtensionGetValidateBeforeCall(String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling profilesmediaTypeExtensionGet(Async)");
        }

        return profilesmediaTypeExtensionGetCall(mediaTypeExtension, _callback);

    }

    /**
     * 
     * Returns an array of social media profiles connected to a users account.
     * @param mediaTypeExtension  (required)
     * @return List&lt;ProfilesInner&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public List<ProfilesInner> profilesmediaTypeExtensionGet(String mediaTypeExtension) throws ApiException {
        ApiResponse<List<ProfilesInner>> localVarResp = profilesmediaTypeExtensionGetWithHttpInfo(mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns an array of social media profiles connected to a users account.
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;List&lt;ProfilesInner&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<ProfilesInner>> profilesmediaTypeExtensionGetWithHttpInfo(String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = profilesmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<List<ProfilesInner>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns an array of social media profiles connected to a users account.
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call profilesmediaTypeExtensionGetAsync(String mediaTypeExtension, final ApiCallback<List<ProfilesInner>> _callback) throws ApiException {

        okhttp3.Call localVarCall = profilesmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<List<ProfilesInner>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updatesCreatemediaTypeExtensionPost
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesCreatemediaTypeExtensionPostCall(String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/updates/create{mediaTypeExtension}"
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updatesCreatemediaTypeExtensionPostValidateBeforeCall(String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling updatesCreatemediaTypeExtensionPost(Async)");
        }

        return updatesCreatemediaTypeExtensionPostCall(mediaTypeExtension, _callback);

    }

    /**
     * 
     * Create one or more new status updates. 
     * @param mediaTypeExtension  (required)
     * @return NewUpdate
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public NewUpdate updatesCreatemediaTypeExtensionPost(String mediaTypeExtension) throws ApiException {
        ApiResponse<NewUpdate> localVarResp = updatesCreatemediaTypeExtensionPostWithHttpInfo(mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Create one or more new status updates. 
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;NewUpdate&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<NewUpdate> updatesCreatemediaTypeExtensionPostWithHttpInfo(String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = updatesCreatemediaTypeExtensionPostValidateBeforeCall(mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<NewUpdate>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create one or more new status updates. 
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesCreatemediaTypeExtensionPostAsync(String mediaTypeExtension, final ApiCallback<NewUpdate> _callback) throws ApiException {

        okhttp3.Call localVarCall = updatesCreatemediaTypeExtensionPostValidateBeforeCall(mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<NewUpdate>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updatesIdDestroymediaTypeExtensionPost
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdDestroymediaTypeExtensionPostCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/updates/{id}/destroy{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updatesIdDestroymediaTypeExtensionPostValidateBeforeCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updatesIdDestroymediaTypeExtensionPost(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling updatesIdDestroymediaTypeExtensionPost(Async)");
        }

        return updatesIdDestroymediaTypeExtensionPostCall(id, mediaTypeExtension, _callback);

    }

    /**
     * 
     * Permanently delete an existing status update.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return Success
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public Success updatesIdDestroymediaTypeExtensionPost(String id, String mediaTypeExtension) throws ApiException {
        ApiResponse<Success> localVarResp = updatesIdDestroymediaTypeExtensionPostWithHttpInfo(id, mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Permanently delete an existing status update.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;Success&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Success> updatesIdDestroymediaTypeExtensionPostWithHttpInfo(String id, String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = updatesIdDestroymediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<Success>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Permanently delete an existing status update.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdDestroymediaTypeExtensionPostAsync(String id, String mediaTypeExtension, final ApiCallback<Success> _callback) throws ApiException {

        okhttp3.Call localVarCall = updatesIdDestroymediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<Success>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updatesIdInteractionsmediaTypeExtensionGet
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param event Specifies a type of event to be retrieved, for example \&quot;retweet\&quot;, \&quot;like\&quot;, \&quot;comment\&quot;, \&quot;mention\&quot; or \&quot;reshare\&quot;. They can also be plural (e.g., \&quot;reshares\&quot;). Plurality has no effect other than visual semantics. See /info/configuration for more information on supported interaction events.  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdInteractionsmediaTypeExtensionGetCall(String id, String mediaTypeExtension, String event, Integer page, Integer count, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/updates/{id}/interactions{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (event != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("event", event));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updatesIdInteractionsmediaTypeExtensionGetValidateBeforeCall(String id, String mediaTypeExtension, String event, Integer page, Integer count, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updatesIdInteractionsmediaTypeExtensionGet(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling updatesIdInteractionsmediaTypeExtensionGet(Async)");
        }

        // verify the required parameter 'event' is set
        if (event == null) {
            throw new ApiException("Missing the required parameter 'event' when calling updatesIdInteractionsmediaTypeExtensionGet(Async)");
        }

        return updatesIdInteractionsmediaTypeExtensionGetCall(id, mediaTypeExtension, event, page, count, _callback);

    }

    /**
     * 
     * Returns the detailed information on individual interactions with the social media update such as favorites, retweets and likes. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param event Specifies a type of event to be retrieved, for example \&quot;retweet\&quot;, \&quot;like\&quot;, \&quot;comment\&quot;, \&quot;mention\&quot; or \&quot;reshare\&quot;. They can also be plural (e.g., \&quot;reshares\&quot;). Plurality has no effect other than visual semantics. See /info/configuration for more information on supported interaction events.  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @return Interactions
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public Interactions updatesIdInteractionsmediaTypeExtensionGet(String id, String mediaTypeExtension, String event, Integer page, Integer count) throws ApiException {
        ApiResponse<Interactions> localVarResp = updatesIdInteractionsmediaTypeExtensionGetWithHttpInfo(id, mediaTypeExtension, event, page, count);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns the detailed information on individual interactions with the social media update such as favorites, retweets and likes. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param event Specifies a type of event to be retrieved, for example \&quot;retweet\&quot;, \&quot;like\&quot;, \&quot;comment\&quot;, \&quot;mention\&quot; or \&quot;reshare\&quot;. They can also be plural (e.g., \&quot;reshares\&quot;). Plurality has no effect other than visual semantics. See /info/configuration for more information on supported interaction events.  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @return ApiResponse&lt;Interactions&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Interactions> updatesIdInteractionsmediaTypeExtensionGetWithHttpInfo(String id, String mediaTypeExtension, String event, Integer page, Integer count) throws ApiException {
        okhttp3.Call localVarCall = updatesIdInteractionsmediaTypeExtensionGetValidateBeforeCall(id, mediaTypeExtension, event, page, count, null);
        Type localVarReturnType = new TypeToken<Interactions>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns the detailed information on individual interactions with the social media update such as favorites, retweets and likes. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param event Specifies a type of event to be retrieved, for example \&quot;retweet\&quot;, \&quot;like\&quot;, \&quot;comment\&quot;, \&quot;mention\&quot; or \&quot;reshare\&quot;. They can also be plural (e.g., \&quot;reshares\&quot;). Plurality has no effect other than visual semantics. See /info/configuration for more information on supported interaction events.  (required)
     * @param page Specifies the page of status updates to receive. If not specified the first page of results will be returned. (optional)
     * @param count Specifies the number of status updates to receive. If provided, must be between 1 and 100. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdInteractionsmediaTypeExtensionGetAsync(String id, String mediaTypeExtension, String event, Integer page, Integer count, final ApiCallback<Interactions> _callback) throws ApiException {

        okhttp3.Call localVarCall = updatesIdInteractionsmediaTypeExtensionGetValidateBeforeCall(id, mediaTypeExtension, event, page, count, _callback);
        Type localVarReturnType = new TypeToken<Interactions>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updatesIdMoveToTopmediaTypeExtensionPost
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdMoveToTopmediaTypeExtensionPostCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/updates/{id}/move_to_top{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updatesIdMoveToTopmediaTypeExtensionPostValidateBeforeCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updatesIdMoveToTopmediaTypeExtensionPost(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling updatesIdMoveToTopmediaTypeExtensionPost(Async)");
        }

        return updatesIdMoveToTopmediaTypeExtensionPostCall(id, mediaTypeExtension, _callback);

    }

    /**
     * 
     * Move an existing status update to the top of the queue and recalculate times for all updates in the queue. Returns the update with its new posting time.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return Update
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public Update updatesIdMoveToTopmediaTypeExtensionPost(String id, String mediaTypeExtension) throws ApiException {
        ApiResponse<Update> localVarResp = updatesIdMoveToTopmediaTypeExtensionPostWithHttpInfo(id, mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Move an existing status update to the top of the queue and recalculate times for all updates in the queue. Returns the update with its new posting time.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;Update&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Update> updatesIdMoveToTopmediaTypeExtensionPostWithHttpInfo(String id, String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = updatesIdMoveToTopmediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<Update>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Move an existing status update to the top of the queue and recalculate times for all updates in the queue. Returns the update with its new posting time.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdMoveToTopmediaTypeExtensionPostAsync(String id, String mediaTypeExtension, final ApiCallback<Update> _callback) throws ApiException {

        okhttp3.Call localVarCall = updatesIdMoveToTopmediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<Update>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updatesIdSharemediaTypeExtensionPost
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdSharemediaTypeExtensionPostCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/updates/{id}/share{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updatesIdSharemediaTypeExtensionPostValidateBeforeCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updatesIdSharemediaTypeExtensionPost(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling updatesIdSharemediaTypeExtensionPost(Async)");
        }

        return updatesIdSharemediaTypeExtensionPostCall(id, mediaTypeExtension, _callback);

    }

    /**
     * 
     * Immediately shares a single pending update and recalculates times for updates remaining in the queue.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return Success
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public Success updatesIdSharemediaTypeExtensionPost(String id, String mediaTypeExtension) throws ApiException {
        ApiResponse<Success> localVarResp = updatesIdSharemediaTypeExtensionPostWithHttpInfo(id, mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Immediately shares a single pending update and recalculates times for updates remaining in the queue.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;Success&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Success> updatesIdSharemediaTypeExtensionPostWithHttpInfo(String id, String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = updatesIdSharemediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<Success>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Immediately shares a single pending update and recalculates times for updates remaining in the queue.
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdSharemediaTypeExtensionPostAsync(String id, String mediaTypeExtension, final ApiCallback<Success> _callback) throws ApiException {

        okhttp3.Call localVarCall = updatesIdSharemediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<Success>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updatesIdUpdatemediaTypeExtensionPost
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdUpdatemediaTypeExtensionPostCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/updates/{id}/update{mediaTypeExtension}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()))
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updatesIdUpdatemediaTypeExtensionPostValidateBeforeCall(String id, String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updatesIdUpdatemediaTypeExtensionPost(Async)");
        }

        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling updatesIdUpdatemediaTypeExtensionPost(Async)");
        }

        return updatesIdUpdatemediaTypeExtensionPostCall(id, mediaTypeExtension, _callback);

    }

    /**
     * 
     * Edit an existing, individual status update. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return IndividualUpdate
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public IndividualUpdate updatesIdUpdatemediaTypeExtensionPost(String id, String mediaTypeExtension) throws ApiException {
        ApiResponse<IndividualUpdate> localVarResp = updatesIdUpdatemediaTypeExtensionPostWithHttpInfo(id, mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Edit an existing, individual status update. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;IndividualUpdate&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<IndividualUpdate> updatesIdUpdatemediaTypeExtensionPostWithHttpInfo(String id, String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = updatesIdUpdatemediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<IndividualUpdate>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Edit an existing, individual status update. 
     * @param id  (required)
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdUpdatemediaTypeExtensionPostAsync(String id, String mediaTypeExtension, final ApiCallback<IndividualUpdate> _callback) throws ApiException {

        okhttp3.Call localVarCall = updatesIdUpdatemediaTypeExtensionPostValidateBeforeCall(id, mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<IndividualUpdate>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updatesIdmediaTypeExtensionGet
     * @param mediaTypeExtension  (required)
     * @param id  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdmediaTypeExtensionGetCall(String mediaTypeExtension, String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/updates/{id}{mediaTypeExtension}"
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()))
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updatesIdmediaTypeExtensionGetValidateBeforeCall(String mediaTypeExtension, String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling updatesIdmediaTypeExtensionGet(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updatesIdmediaTypeExtensionGet(Async)");
        }

        return updatesIdmediaTypeExtensionGetCall(mediaTypeExtension, id, _callback);

    }

    /**
     * 
     * Returns a single social media update.
     * @param mediaTypeExtension  (required)
     * @param id  (required)
     * @return Update
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public Update updatesIdmediaTypeExtensionGet(String mediaTypeExtension, String id) throws ApiException {
        ApiResponse<Update> localVarResp = updatesIdmediaTypeExtensionGetWithHttpInfo(mediaTypeExtension, id);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns a single social media update.
     * @param mediaTypeExtension  (required)
     * @param id  (required)
     * @return ApiResponse&lt;Update&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Update> updatesIdmediaTypeExtensionGetWithHttpInfo(String mediaTypeExtension, String id) throws ApiException {
        okhttp3.Call localVarCall = updatesIdmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, id, null);
        Type localVarReturnType = new TypeToken<Update>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a single social media update.
     * @param mediaTypeExtension  (required)
     * @param id  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updatesIdmediaTypeExtensionGetAsync(String mediaTypeExtension, String id, final ApiCallback<Update> _callback) throws ApiException {

        okhttp3.Call localVarCall = updatesIdmediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, id, _callback);
        Type localVarReturnType = new TypeToken<Update>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for usermediaTypeExtensionGet
     * @param mediaTypeExtension  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call usermediaTypeExtensionGetCall(String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/user{mediaTypeExtension}"
            .replace("{" + "mediaTypeExtension" + "}", localVarApiClient.escapeString(mediaTypeExtension.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usermediaTypeExtensionGetValidateBeforeCall(String mediaTypeExtension, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'mediaTypeExtension' is set
        if (mediaTypeExtension == null) {
            throw new ApiException("Missing the required parameter 'mediaTypeExtension' when calling usermediaTypeExtensionGet(Async)");
        }

        return usermediaTypeExtensionGetCall(mediaTypeExtension, _callback);

    }

    /**
     * 
     * Returns a single user.
     * @param mediaTypeExtension  (required)
     * @return User
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public User usermediaTypeExtensionGet(String mediaTypeExtension) throws ApiException {
        ApiResponse<User> localVarResp = usermediaTypeExtensionGetWithHttpInfo(mediaTypeExtension);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns a single user.
     * @param mediaTypeExtension  (required)
     * @return ApiResponse&lt;User&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<User> usermediaTypeExtensionGetWithHttpInfo(String mediaTypeExtension) throws ApiException {
        okhttp3.Call localVarCall = usermediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, null);
        Type localVarReturnType = new TypeToken<User>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a single user.
     * @param mediaTypeExtension  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 1003  Parameter not recognized. 1004  Required parameter missing. 1006  Parameter value not within bounds. 1012  Profile did not save successfully. 1016  Profile buffer could not be emptied. 1022  Update did not save successfully. 1025  Update was recently posted, can&#39;t post duplicate content. 1026  Update must be in error status to requeue. 1027  Update must be in buffer and not custom scheduled in order to move to top. 1029  Event type not supported. 1030  Media filetype not supported. 1031  Media filesize out of acceptable range. 1032  Unable to post image to LinkedIn group(s). 1034  Cannot schedule updates in the past. 1033  Comments can only be posted to Facebook at this time. 1042  User did not save successfully.  </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  Permission denied. 1001  Access token required. 1002  Not within application scope. 1011  No authorization to access profile. 1013  Profile schedule limit reached. 1014  Profile limit for user has been reached. 1015  Profile could not be destroyed. 1021  No authorization to access update. 1023  Update limit for profile has been reached. 1024  Update limit for team profile has been reached. 1028  Update soft limit for profile reached. 1051  No authorization to access client.  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404  Endpoint not found. 1010  Profile could not be found. 1020  Update could not be found. 1050  Client could not be found.  </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> 405  Method not allowed.  </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> 1005  Unsupported response format.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An unknown error occurred.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call usermediaTypeExtensionGetAsync(String mediaTypeExtension, final ApiCallback<User> _callback) throws ApiException {

        okhttp3.Call localVarCall = usermediaTypeExtensionGetValidateBeforeCall(mediaTypeExtension, _callback);
        Type localVarReturnType = new TypeToken<User>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
