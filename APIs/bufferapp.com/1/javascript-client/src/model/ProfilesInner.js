/**
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProfilesInnerCounts from './ProfilesInnerCounts';
import ProfilesInnerSchedulesInner from './ProfilesInnerSchedulesInner';
import ProfilesInnerShortener from './ProfilesInnerShortener';
import ProfilesInnerStatistics from './ProfilesInnerStatistics';

/**
 * The ProfilesInner model module.
 * @module model/ProfilesInner
 * @version 1
 */
class ProfilesInner {
    /**
     * Constructs a new <code>ProfilesInner</code>.
     * @alias module:model/ProfilesInner
     */
    constructor() { 
        
        ProfilesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProfilesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfilesInner} obj Optional instance to populate.
     * @return {module:model/ProfilesInner} The populated <code>ProfilesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfilesInner();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
            }
            if (data.hasOwnProperty('avatar_https')) {
                obj['avatar_https'] = ApiClient.convertToType(data['avatar_https'], 'String');
            }
            if (data.hasOwnProperty('counts')) {
                obj['counts'] = ProfilesInnerCounts.constructFromObject(data['counts']);
            }
            if (data.hasOwnProperty('cover_photo')) {
                obj['cover_photo'] = ApiClient.convertToType(data['cover_photo'], 'String');
            }
            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
            }
            if (data.hasOwnProperty('disabled_features')) {
                obj['disabled_features'] = ApiClient.convertToType(data['disabled_features'], [Object]);
            }
            if (data.hasOwnProperty('disconnected')) {
                obj['disconnected'] = ApiClient.convertToType(data['disconnected'], 'String');
            }
            if (data.hasOwnProperty('formatted_service')) {
                obj['formatted_service'] = ApiClient.convertToType(data['formatted_service'], 'String');
            }
            if (data.hasOwnProperty('formatted_username')) {
                obj['formatted_username'] = ApiClient.convertToType(data['formatted_username'], 'String');
            }
            if (data.hasOwnProperty('has_used_suggestions')) {
                obj['has_used_suggestions'] = ApiClient.convertToType(data['has_used_suggestions'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('schedules')) {
                obj['schedules'] = ApiClient.convertToType(data['schedules'], [ProfilesInnerSchedulesInner]);
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('service_id')) {
                obj['service_id'] = ApiClient.convertToType(data['service_id'], 'String');
            }
            if (data.hasOwnProperty('service_type')) {
                obj['service_type'] = ApiClient.convertToType(data['service_type'], 'String');
            }
            if (data.hasOwnProperty('service_username')) {
                obj['service_username'] = ApiClient.convertToType(data['service_username'], 'String');
            }
            if (data.hasOwnProperty('shortener')) {
                obj['shortener'] = ProfilesInnerShortener.constructFromObject(data['shortener']);
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = ProfilesInnerStatistics.constructFromObject(data['statistics']);
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
            if (data.hasOwnProperty('utm_tracking')) {
                obj['utm_tracking'] = ApiClient.convertToType(data['utm_tracking'], 'String');
            }
            if (data.hasOwnProperty('verb')) {
                obj['verb'] = ApiClient.convertToType(data['verb'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProfilesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProfilesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        // ensure the json data is a string
        if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
            throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
        }
        // ensure the json data is a string
        if (data['avatar_https'] && !(typeof data['avatar_https'] === 'string' || data['avatar_https'] instanceof String)) {
            throw new Error("Expected the field `avatar_https` to be a primitive type in the JSON string but got " + data['avatar_https']);
        }
        // validate the optional field `counts`
        if (data['counts']) { // data not null
          ProfilesInnerCounts.validateJSON(data['counts']);
        }
        // ensure the json data is a string
        if (data['cover_photo'] && !(typeof data['cover_photo'] === 'string' || data['cover_photo'] instanceof String)) {
            throw new Error("Expected the field `cover_photo` to be a primitive type in the JSON string but got " + data['cover_photo']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['disabled_features'])) {
            throw new Error("Expected the field `disabled_features` to be an array in the JSON data but got " + data['disabled_features']);
        }
        // ensure the json data is a string
        if (data['disconnected'] && !(typeof data['disconnected'] === 'string' || data['disconnected'] instanceof String)) {
            throw new Error("Expected the field `disconnected` to be a primitive type in the JSON string but got " + data['disconnected']);
        }
        // ensure the json data is a string
        if (data['formatted_service'] && !(typeof data['formatted_service'] === 'string' || data['formatted_service'] instanceof String)) {
            throw new Error("Expected the field `formatted_service` to be a primitive type in the JSON string but got " + data['formatted_service']);
        }
        // ensure the json data is a string
        if (data['formatted_username'] && !(typeof data['formatted_username'] === 'string' || data['formatted_username'] instanceof String)) {
            throw new Error("Expected the field `formatted_username` to be a primitive type in the JSON string but got " + data['formatted_username']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['schedules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['schedules'])) {
                throw new Error("Expected the field `schedules` to be an array in the JSON data but got " + data['schedules']);
            }
            // validate the optional field `schedules` (array)
            for (const item of data['schedules']) {
                ProfilesInnerSchedulesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['service'] && !(typeof data['service'] === 'string' || data['service'] instanceof String)) {
            throw new Error("Expected the field `service` to be a primitive type in the JSON string but got " + data['service']);
        }
        // ensure the json data is a string
        if (data['service_id'] && !(typeof data['service_id'] === 'string' || data['service_id'] instanceof String)) {
            throw new Error("Expected the field `service_id` to be a primitive type in the JSON string but got " + data['service_id']);
        }
        // ensure the json data is a string
        if (data['service_type'] && !(typeof data['service_type'] === 'string' || data['service_type'] instanceof String)) {
            throw new Error("Expected the field `service_type` to be a primitive type in the JSON string but got " + data['service_type']);
        }
        // ensure the json data is a string
        if (data['service_username'] && !(typeof data['service_username'] === 'string' || data['service_username'] instanceof String)) {
            throw new Error("Expected the field `service_username` to be a primitive type in the JSON string but got " + data['service_username']);
        }
        // validate the optional field `shortener`
        if (data['shortener']) { // data not null
          ProfilesInnerShortener.validateJSON(data['shortener']);
        }
        // validate the optional field `statistics`
        if (data['statistics']) { // data not null
          ProfilesInnerStatistics.validateJSON(data['statistics']);
        }
        // ensure the json data is a string
        if (data['timezone'] && !(typeof data['timezone'] === 'string' || data['timezone'] instanceof String)) {
            throw new Error("Expected the field `timezone` to be a primitive type in the JSON string but got " + data['timezone']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }
        // ensure the json data is a string
        if (data['utm_tracking'] && !(typeof data['utm_tracking'] === 'string' || data['utm_tracking'] instanceof String)) {
            throw new Error("Expected the field `utm_tracking` to be a primitive type in the JSON string but got " + data['utm_tracking']);
        }
        // ensure the json data is a string
        if (data['verb'] && !(typeof data['verb'] === 'string' || data['verb'] instanceof String)) {
            throw new Error("Expected the field `verb` to be a primitive type in the JSON string but got " + data['verb']);
        }

        return true;
    }


}



/**
 * @member {String} _id
 */
ProfilesInner.prototype['_id'] = undefined;

/**
 * @member {String} avatar
 */
ProfilesInner.prototype['avatar'] = undefined;

/**
 * @member {String} avatar_https
 */
ProfilesInner.prototype['avatar_https'] = undefined;

/**
 * @member {module:model/ProfilesInnerCounts} counts
 */
ProfilesInner.prototype['counts'] = undefined;

/**
 * @member {String} cover_photo
 */
ProfilesInner.prototype['cover_photo'] = undefined;

/**
 * @member {Boolean} default
 */
ProfilesInner.prototype['default'] = undefined;

/**
 * @member {Array.<Object>} disabled_features
 */
ProfilesInner.prototype['disabled_features'] = undefined;

/**
 * @member {String} disconnected
 */
ProfilesInner.prototype['disconnected'] = undefined;

/**
 * @member {String} formatted_service
 */
ProfilesInner.prototype['formatted_service'] = undefined;

/**
 * @member {String} formatted_username
 */
ProfilesInner.prototype['formatted_username'] = undefined;

/**
 * @member {Boolean} has_used_suggestions
 */
ProfilesInner.prototype['has_used_suggestions'] = undefined;

/**
 * @member {String} id
 */
ProfilesInner.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/ProfilesInnerSchedulesInner>} schedules
 */
ProfilesInner.prototype['schedules'] = undefined;

/**
 * @member {String} service
 */
ProfilesInner.prototype['service'] = undefined;

/**
 * @member {String} service_id
 */
ProfilesInner.prototype['service_id'] = undefined;

/**
 * @member {String} service_type
 */
ProfilesInner.prototype['service_type'] = undefined;

/**
 * @member {String} service_username
 */
ProfilesInner.prototype['service_username'] = undefined;

/**
 * @member {module:model/ProfilesInnerShortener} shortener
 */
ProfilesInner.prototype['shortener'] = undefined;

/**
 * @member {module:model/ProfilesInnerStatistics} statistics
 */
ProfilesInner.prototype['statistics'] = undefined;

/**
 * @member {String} timezone
 */
ProfilesInner.prototype['timezone'] = undefined;

/**
 * @member {String} user_id
 */
ProfilesInner.prototype['user_id'] = undefined;

/**
 * @member {String} utm_tracking
 */
ProfilesInner.prototype['utm_tracking'] = undefined;

/**
 * @member {String} verb
 */
ProfilesInner.prototype['verb'] = undefined;






export default ProfilesInner;

