/**
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Bufferapp);
  }
}(this, function(expect, Bufferapp) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Bufferapp.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('infoConfigurationmediaTypeExtensionGet', function() {
      it('should call infoConfigurationmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test infoConfigurationmediaTypeExtensionGet
        //instance.infoConfigurationmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('linksSharesmediaTypeExtensionGet', function() {
      it('should call linksSharesmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test linksSharesmediaTypeExtensionGet
        //instance.linksSharesmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('profilesIdSchedulesUpdatemediaTypeExtensionPost', function() {
      it('should call profilesIdSchedulesUpdatemediaTypeExtensionPost successfully', function(done) {
        //uncomment below and update the code to test profilesIdSchedulesUpdatemediaTypeExtensionPost
        //instance.profilesIdSchedulesUpdatemediaTypeExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('profilesIdSchedulesmediaTypeExtensionGet', function() {
      it('should call profilesIdSchedulesmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test profilesIdSchedulesmediaTypeExtensionGet
        //instance.profilesIdSchedulesmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('profilesIdUpdatesPendingmediaTypeExtensionGet', function() {
      it('should call profilesIdUpdatesPendingmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test profilesIdUpdatesPendingmediaTypeExtensionGet
        //instance.profilesIdUpdatesPendingmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('profilesIdUpdatesReordermediaTypeExtensionPost', function() {
      it('should call profilesIdUpdatesReordermediaTypeExtensionPost successfully', function(done) {
        //uncomment below and update the code to test profilesIdUpdatesReordermediaTypeExtensionPost
        //instance.profilesIdUpdatesReordermediaTypeExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('profilesIdUpdatesSentmediaTypeExtensionGet', function() {
      it('should call profilesIdUpdatesSentmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test profilesIdUpdatesSentmediaTypeExtensionGet
        //instance.profilesIdUpdatesSentmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('profilesIdUpdatesShufflemediaTypeExtensionPost', function() {
      it('should call profilesIdUpdatesShufflemediaTypeExtensionPost successfully', function(done) {
        //uncomment below and update the code to test profilesIdUpdatesShufflemediaTypeExtensionPost
        //instance.profilesIdUpdatesShufflemediaTypeExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('profilesIdmediaTypeExtensionGet', function() {
      it('should call profilesIdmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test profilesIdmediaTypeExtensionGet
        //instance.profilesIdmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('profilesmediaTypeExtensionGet', function() {
      it('should call profilesmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test profilesmediaTypeExtensionGet
        //instance.profilesmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatesCreatemediaTypeExtensionPost', function() {
      it('should call updatesCreatemediaTypeExtensionPost successfully', function(done) {
        //uncomment below and update the code to test updatesCreatemediaTypeExtensionPost
        //instance.updatesCreatemediaTypeExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatesIdDestroymediaTypeExtensionPost', function() {
      it('should call updatesIdDestroymediaTypeExtensionPost successfully', function(done) {
        //uncomment below and update the code to test updatesIdDestroymediaTypeExtensionPost
        //instance.updatesIdDestroymediaTypeExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatesIdInteractionsmediaTypeExtensionGet', function() {
      it('should call updatesIdInteractionsmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test updatesIdInteractionsmediaTypeExtensionGet
        //instance.updatesIdInteractionsmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatesIdMoveToTopmediaTypeExtensionPost', function() {
      it('should call updatesIdMoveToTopmediaTypeExtensionPost successfully', function(done) {
        //uncomment below and update the code to test updatesIdMoveToTopmediaTypeExtensionPost
        //instance.updatesIdMoveToTopmediaTypeExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatesIdSharemediaTypeExtensionPost', function() {
      it('should call updatesIdSharemediaTypeExtensionPost successfully', function(done) {
        //uncomment below and update the code to test updatesIdSharemediaTypeExtensionPost
        //instance.updatesIdSharemediaTypeExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatesIdUpdatemediaTypeExtensionPost', function() {
      it('should call updatesIdUpdatemediaTypeExtensionPost successfully', function(done) {
        //uncomment below and update the code to test updatesIdUpdatemediaTypeExtensionPost
        //instance.updatesIdUpdatemediaTypeExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatesIdmediaTypeExtensionGet', function() {
      it('should call updatesIdmediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test updatesIdmediaTypeExtensionGet
        //instance.updatesIdmediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usermediaTypeExtensionGet', function() {
      it('should call usermediaTypeExtensionGet successfully', function(done) {
        //uncomment below and update the code to test usermediaTypeExtensionGet
        //instance.usermediaTypeExtensionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
