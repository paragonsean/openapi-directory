# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference_entity_record_all_of_embedded_items_inner_all_of_values import ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues
from openapi_server import util


class PatchReferenceEntityRecordsCodeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, created: str=None, updated: str=None, values: ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues=None):
        """PatchReferenceEntityRecordsCodeRequest - a model defined in OpenAPI

        :param code: The code of this PatchReferenceEntityRecordsCodeRequest.
        :param created: The created of this PatchReferenceEntityRecordsCodeRequest.
        :param updated: The updated of this PatchReferenceEntityRecordsCodeRequest.
        :param values: The values of this PatchReferenceEntityRecordsCodeRequest.
        """
        self.openapi_types = {
            'code': str,
            'created': str,
            'updated': str,
            'values': ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues
        }

        self.attribute_map = {
            'code': 'code',
            'created': 'created',
            'updated': 'updated',
            'values': 'values'
        }

        self._code = code
        self._created = created
        self._updated = updated
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchReferenceEntityRecordsCodeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The patch_reference_entity_records__code__request of this PatchReferenceEntityRecordsCodeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this PatchReferenceEntityRecordsCodeRequest.

        Code of the record

        :return: The code of this PatchReferenceEntityRecordsCodeRequest.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this PatchReferenceEntityRecordsCodeRequest.

        Code of the record

        :param code: The code of this PatchReferenceEntityRecordsCodeRequest.
        :type code: str
        """
        if code is None:
            raise ValueError("Invalid value for `code`, must not be `None`")

        self._code = code

    @property
    def created(self):
        """Gets the created of this PatchReferenceEntityRecordsCodeRequest.

        Date of creation.

        :return: The created of this PatchReferenceEntityRecordsCodeRequest.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this PatchReferenceEntityRecordsCodeRequest.

        Date of creation.

        :param created: The created of this PatchReferenceEntityRecordsCodeRequest.
        :type created: str
        """

        self._created = created

    @property
    def updated(self):
        """Gets the updated of this PatchReferenceEntityRecordsCodeRequest.

        Date of the last update.

        :return: The updated of this PatchReferenceEntityRecordsCodeRequest.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this PatchReferenceEntityRecordsCodeRequest.

        Date of the last update.

        :param updated: The updated of this PatchReferenceEntityRecordsCodeRequest.
        :type updated: str
        """

        self._updated = updated

    @property
    def values(self):
        """Gets the values of this PatchReferenceEntityRecordsCodeRequest.


        :return: The values of this PatchReferenceEntityRecordsCodeRequest.
        :rtype: ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this PatchReferenceEntityRecordsCodeRequest.


        :param values: The values of this PatchReferenceEntityRecordsCodeRequest.
        :type values: ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues
        """

        self._values = values
