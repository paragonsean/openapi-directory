# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_code: List[str]=None):
        """FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements - a model defined in OpenAPI

        :param channel_code: The channel_code of this FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements.
        """
        self.openapi_types = {
            'channel_code': List[str]
        }

        self.attribute_map = {
            'channel_code': 'channelCode'
        }

        self._channel_code = channel_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Families_allOf__embedded_items_inner_allOf_attribute_requirements of this FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_code(self):
        """Gets the channel_code of this FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements.


        :return: The channel_code of this FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements.
        :rtype: List[str]
        """
        return self._channel_code

    @channel_code.setter
    def channel_code(self, channel_code):
        """Sets the channel_code of this FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements.


        :param channel_code: The channel_code of this FamiliesAllOfEmbeddedItemsInnerAllOfAttributeRequirements.
        :type channel_code: List[str]
        """

        self._channel_code = channel_code
