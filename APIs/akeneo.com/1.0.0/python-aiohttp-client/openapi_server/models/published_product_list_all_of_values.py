# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_model_list_all_of_values_attribute_code import ProductModelListAllOfValuesAttributeCode
from openapi_server import util


class PublishedProductListAllOfValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_code: List[ProductModelListAllOfValuesAttributeCode]=None):
        """PublishedProductListAllOfValues - a model defined in OpenAPI

        :param attribute_code: The attribute_code of this PublishedProductListAllOfValues.
        """
        self.openapi_types = {
            'attribute_code': List[ProductModelListAllOfValuesAttributeCode]
        }

        self.attribute_map = {
            'attribute_code': 'attributeCode'
        }

        self._attribute_code = attribute_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishedProductListAllOfValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishedProductList_allOf_values of this PublishedProductListAllOfValues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_code(self):
        """Gets the attribute_code of this PublishedProductListAllOfValues.


        :return: The attribute_code of this PublishedProductListAllOfValues.
        :rtype: List[ProductModelListAllOfValuesAttributeCode]
        """
        return self._attribute_code

    @attribute_code.setter
    def attribute_code(self, attribute_code):
        """Sets the attribute_code of this PublishedProductListAllOfValues.


        :param attribute_code: The attribute_code of this PublishedProductListAllOfValues.
        :type attribute_code: List[ProductModelListAllOfValuesAttributeCode]
        """

        self._attribute_code = attribute_code
