# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, colorspace: str=None, height: int=None, quality: int=None, ratio: int=None, resolution_unit: str=None, resolution_x: int=None, resolution_y: int=None, width: int=None):
        """AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters - a model defined in OpenAPI

        :param colorspace: The colorspace of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :param height: The height of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :param quality: The quality of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :param ratio: The ratio of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :param resolution_unit: The resolution_unit of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :param resolution_x: The resolution_x of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :param resolution_y: The resolution_y of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :param width: The width of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        """
        self.openapi_types = {
            'colorspace': str,
            'height': int,
            'quality': int,
            'ratio': int,
            'resolution_unit': str,
            'resolution_x': int,
            'resolution_y': int,
            'width': int
        }

        self.attribute_map = {
            'colorspace': 'colorspace',
            'height': 'height',
            'quality': 'quality',
            'ratio': 'ratio',
            'resolution_unit': 'resolution-unit',
            'resolution_x': 'resolution-x',
            'resolution_y': 'resolution-y',
            'width': 'width'
        }

        self._colorspace = colorspace
        self._height = height
        self._quality = quality
        self._ratio = ratio
        self._resolution_unit = resolution_unit
        self._resolution_x = resolution_x
        self._resolution_y = resolution_y
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_operations_parameters of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def colorspace(self):
        """Gets the colorspace of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :return: The colorspace of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :rtype: str
        """
        return self._colorspace

    @colorspace.setter
    def colorspace(self, colorspace):
        """Sets the colorspace of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :param colorspace: The colorspace of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :type colorspace: str
        """

        self._colorspace = colorspace

    @property
    def height(self):
        """Gets the height of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :return: The height of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :param height: The height of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :type height: int
        """

        self._height = height

    @property
    def quality(self):
        """Gets the quality of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :return: The quality of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :rtype: int
        """
        return self._quality

    @quality.setter
    def quality(self, quality):
        """Sets the quality of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :param quality: The quality of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :type quality: int
        """

        self._quality = quality

    @property
    def ratio(self):
        """Gets the ratio of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :return: The ratio of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :rtype: int
        """
        return self._ratio

    @ratio.setter
    def ratio(self, ratio):
        """Sets the ratio of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :param ratio: The ratio of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :type ratio: int
        """

        self._ratio = ratio

    @property
    def resolution_unit(self):
        """Gets the resolution_unit of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :return: The resolution_unit of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :rtype: str
        """
        return self._resolution_unit

    @resolution_unit.setter
    def resolution_unit(self, resolution_unit):
        """Sets the resolution_unit of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :param resolution_unit: The resolution_unit of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :type resolution_unit: str
        """

        self._resolution_unit = resolution_unit

    @property
    def resolution_x(self):
        """Gets the resolution_x of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :return: The resolution_x of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :rtype: int
        """
        return self._resolution_x

    @resolution_x.setter
    def resolution_x(self, resolution_x):
        """Sets the resolution_x of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :param resolution_x: The resolution_x of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :type resolution_x: int
        """

        self._resolution_x = resolution_x

    @property
    def resolution_y(self):
        """Gets the resolution_y of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :return: The resolution_y of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :rtype: int
        """
        return self._resolution_y

    @resolution_y.setter
    def resolution_y(self, resolution_y):
        """Sets the resolution_y of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :param resolution_y: The resolution_y of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :type resolution_y: int
        """

        self._resolution_y = resolution_y

    @property
    def width(self):
        """Gets the width of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :return: The width of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.


        :param width: The width of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperationsParameters.
        :type width: int
        """

        self._width = width
