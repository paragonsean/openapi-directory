# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pam_asset_categories_all_of_embedded_items_inner_all_of_links import PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks
from openapi_server.models.product_model_list_all_of_values import ProductModelListAllOfValues
from openapi_server.models.product_models_all_of_embedded_items_inner_all_of_associations import ProductModelsAllOfEmbeddedItemsInnerAllOfAssociations
from openapi_server.models.product_models_all_of_embedded_items_inner_all_of_metadata import ProductModelsAllOfEmbeddedItemsInnerAllOfMetadata
from openapi_server.models.product_models_all_of_embedded_items_inner_all_of_quantified_associations import ProductModelsAllOfEmbeddedItemsInnerAllOfQuantifiedAssociations
from openapi_server import util


class ProductModelList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks=None, associations: ProductModelsAllOfEmbeddedItemsInnerAllOfAssociations=None, categories: List[str]=None, code: str=None, created: str=None, family: str=None, family_variant: str=None, metadata: ProductModelsAllOfEmbeddedItemsInnerAllOfMetadata=None, parent: str='null', quality_scores: object=None, quantified_associations: ProductModelsAllOfEmbeddedItemsInnerAllOfQuantifiedAssociations=None, updated: str=None, values: ProductModelListAllOfValues=None):
        """ProductModelList - a model defined in OpenAPI

        :param links: The links of this ProductModelList.
        :param associations: The associations of this ProductModelList.
        :param categories: The categories of this ProductModelList.
        :param code: The code of this ProductModelList.
        :param created: The created of this ProductModelList.
        :param family: The family of this ProductModelList.
        :param family_variant: The family_variant of this ProductModelList.
        :param metadata: The metadata of this ProductModelList.
        :param parent: The parent of this ProductModelList.
        :param quality_scores: The quality_scores of this ProductModelList.
        :param quantified_associations: The quantified_associations of this ProductModelList.
        :param updated: The updated of this ProductModelList.
        :param values: The values of this ProductModelList.
        """
        self.openapi_types = {
            'links': PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks,
            'associations': ProductModelsAllOfEmbeddedItemsInnerAllOfAssociations,
            'categories': List[str],
            'code': str,
            'created': str,
            'family': str,
            'family_variant': str,
            'metadata': ProductModelsAllOfEmbeddedItemsInnerAllOfMetadata,
            'parent': str,
            'quality_scores': object,
            'quantified_associations': ProductModelsAllOfEmbeddedItemsInnerAllOfQuantifiedAssociations,
            'updated': str,
            'values': ProductModelListAllOfValues
        }

        self.attribute_map = {
            'links': '_links',
            'associations': 'associations',
            'categories': 'categories',
            'code': 'code',
            'created': 'created',
            'family': 'family',
            'family_variant': 'family_variant',
            'metadata': 'metadata',
            'parent': 'parent',
            'quality_scores': 'quality_scores',
            'quantified_associations': 'quantified_associations',
            'updated': 'updated',
            'values': 'values'
        }

        self._links = links
        self._associations = associations
        self._categories = categories
        self._code = code
        self._created = created
        self._family = family
        self._family_variant = family_variant
        self._metadata = metadata
        self._parent = parent
        self._quality_scores = quality_scores
        self._quantified_associations = quantified_associations
        self._updated = updated
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductModelList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductModelList of this ProductModelList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this ProductModelList.


        :return: The links of this ProductModelList.
        :rtype: PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ProductModelList.


        :param links: The links of this ProductModelList.
        :type links: PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks
        """

        self._links = links

    @property
    def associations(self):
        """Gets the associations of this ProductModelList.


        :return: The associations of this ProductModelList.
        :rtype: ProductModelsAllOfEmbeddedItemsInnerAllOfAssociations
        """
        return self._associations

    @associations.setter
    def associations(self, associations):
        """Sets the associations of this ProductModelList.


        :param associations: The associations of this ProductModelList.
        :type associations: ProductModelsAllOfEmbeddedItemsInnerAllOfAssociations
        """

        self._associations = associations

    @property
    def categories(self):
        """Gets the categories of this ProductModelList.

        Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized

        :return: The categories of this ProductModelList.
        :rtype: List[str]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this ProductModelList.

        Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized

        :param categories: The categories of this ProductModelList.
        :type categories: List[str]
        """

        self._categories = categories

    @property
    def code(self):
        """Gets the code of this ProductModelList.

        Product model code

        :return: The code of this ProductModelList.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this ProductModelList.

        Product model code

        :param code: The code of this ProductModelList.
        :type code: str
        """
        if code is None:
            raise ValueError("Invalid value for `code`, must not be `None`")

        self._code = code

    @property
    def created(self):
        """Gets the created of this ProductModelList.

        Date of creation

        :return: The created of this ProductModelList.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ProductModelList.

        Date of creation

        :param created: The created of this ProductModelList.
        :type created: str
        """

        self._created = created

    @property
    def family(self):
        """Gets the family of this ProductModelList.

        <a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)

        :return: The family of this ProductModelList.
        :rtype: str
        """
        return self._family

    @family.setter
    def family(self, family):
        """Sets the family of this ProductModelList.

        <a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)

        :param family: The family of this ProductModelList.
        :type family: str
        """

        self._family = family

    @property
    def family_variant(self):
        """Gets the family_variant of this ProductModelList.

        Family variant code from which the product model inherits its attributes and variant attributes

        :return: The family_variant of this ProductModelList.
        :rtype: str
        """
        return self._family_variant

    @family_variant.setter
    def family_variant(self, family_variant):
        """Sets the family_variant of this ProductModelList.

        Family variant code from which the product model inherits its attributes and variant attributes

        :param family_variant: The family_variant of this ProductModelList.
        :type family_variant: str
        """
        if family_variant is None:
            raise ValueError("Invalid value for `family_variant`, must not be `None`")

        self._family_variant = family_variant

    @property
    def metadata(self):
        """Gets the metadata of this ProductModelList.


        :return: The metadata of this ProductModelList.
        :rtype: ProductModelsAllOfEmbeddedItemsInnerAllOfMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ProductModelList.


        :param metadata: The metadata of this ProductModelList.
        :type metadata: ProductModelsAllOfEmbeddedItemsInnerAllOfMetadata
        """

        self._metadata = metadata

    @property
    def parent(self):
        """Gets the parent of this ProductModelList.

        Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.

        :return: The parent of this ProductModelList.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this ProductModelList.

        Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.

        :param parent: The parent of this ProductModelList.
        :type parent: str
        """

        self._parent = parent

    @property
    def quality_scores(self):
        """Gets the quality_scores of this ProductModelList.

        Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")

        :return: The quality_scores of this ProductModelList.
        :rtype: object
        """
        return self._quality_scores

    @quality_scores.setter
    def quality_scores(self, quality_scores):
        """Sets the quality_scores of this ProductModelList.

        Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")

        :param quality_scores: The quality_scores of this ProductModelList.
        :type quality_scores: object
        """

        self._quality_scores = quality_scores

    @property
    def quantified_associations(self):
        """Gets the quantified_associations of this ProductModelList.


        :return: The quantified_associations of this ProductModelList.
        :rtype: ProductModelsAllOfEmbeddedItemsInnerAllOfQuantifiedAssociations
        """
        return self._quantified_associations

    @quantified_associations.setter
    def quantified_associations(self, quantified_associations):
        """Sets the quantified_associations of this ProductModelList.


        :param quantified_associations: The quantified_associations of this ProductModelList.
        :type quantified_associations: ProductModelsAllOfEmbeddedItemsInnerAllOfQuantifiedAssociations
        """

        self._quantified_associations = quantified_associations

    @property
    def updated(self):
        """Gets the updated of this ProductModelList.

        Date of the last update

        :return: The updated of this ProductModelList.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this ProductModelList.

        Date of the last update

        :param updated: The updated of this ProductModelList.
        :type updated: str
        """

        self._updated = updated

    @property
    def values(self):
        """Gets the values of this ProductModelList.


        :return: The values of this ProductModelList.
        :rtype: ProductModelListAllOfValues
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this ProductModelList.


        :param values: The values of this ProductModelList.
        :type values: ProductModelListAllOfValues
        """

        self._values = values
