# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalogs_all_of_embedded import CatalogsAllOfEmbedded
from openapi_server.models.pam_asset_categories_all_of_links import PAMAssetCategoriesAllOfLinks
from openapi_server import util


class Catalogs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: PAMAssetCategoriesAllOfLinks=None, current_page: int=None, embedded: CatalogsAllOfEmbedded=None):
        """Catalogs - a model defined in OpenAPI

        :param links: The links of this Catalogs.
        :param current_page: The current_page of this Catalogs.
        :param embedded: The embedded of this Catalogs.
        """
        self.openapi_types = {
            'links': PAMAssetCategoriesAllOfLinks,
            'current_page': int,
            'embedded': CatalogsAllOfEmbedded
        }

        self.attribute_map = {
            'links': '_links',
            'current_page': 'current_page',
            'embedded': '_embedded'
        }

        self._links = links
        self._current_page = current_page
        self._embedded = embedded

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Catalogs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Catalogs of this Catalogs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this Catalogs.


        :return: The links of this Catalogs.
        :rtype: PAMAssetCategoriesAllOfLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Catalogs.


        :param links: The links of this Catalogs.
        :type links: PAMAssetCategoriesAllOfLinks
        """

        self._links = links

    @property
    def current_page(self):
        """Gets the current_page of this Catalogs.

        Current page number

        :return: The current_page of this Catalogs.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this Catalogs.

        Current page number

        :param current_page: The current_page of this Catalogs.
        :type current_page: int
        """

        self._current_page = current_page

    @property
    def embedded(self):
        """Gets the embedded of this Catalogs.


        :return: The embedded of this Catalogs.
        :rtype: CatalogsAllOfEmbedded
        """
        return self._embedded

    @embedded.setter
    def embedded(self, embedded):
        """Sets the embedded of this Catalogs.


        :param embedded: The embedded of this Catalogs.
        :type embedded: CatalogsAllOfEmbedded
        """

        self._embedded = embedded
