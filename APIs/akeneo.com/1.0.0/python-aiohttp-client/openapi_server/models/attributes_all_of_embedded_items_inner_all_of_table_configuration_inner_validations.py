# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, decimals_allowed: bool=None, max: float=None, max_length: float=None, min: float=None):
        """AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations - a model defined in OpenAPI

        :param decimals_allowed: The decimals_allowed of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :param max: The max of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :param max_length: The max_length of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :param min: The min of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        """
        self.openapi_types = {
            'decimals_allowed': bool,
            'max': float,
            'max_length': float,
            'min': float
        }

        self.attribute_map = {
            'decimals_allowed': 'decimals_allowed',
            'max': 'max',
            'max_length': 'max_length',
            'min': 'min'
        }

        self._decimals_allowed = decimals_allowed
        self._max = max
        self._max_length = max_length
        self._min = min

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner_validations of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def decimals_allowed(self):
        """Gets the decimals_allowed of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.

        whether the value of a numeric cell can hold a decimal part

        :return: The decimals_allowed of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :rtype: bool
        """
        return self._decimals_allowed

    @decimals_allowed.setter
    def decimals_allowed(self, decimals_allowed):
        """Sets the decimals_allowed of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.

        whether the value of a numeric cell can hold a decimal part

        :param decimals_allowed: The decimals_allowed of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :type decimals_allowed: bool
        """

        self._decimals_allowed = decimals_allowed

    @property
    def max(self):
        """Gets the max of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.

        maximum value of a numeric cell

        :return: The max of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :rtype: float
        """
        return self._max

    @max.setter
    def max(self, max):
        """Sets the max of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.

        maximum value of a numeric cell

        :param max: The max of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :type max: float
        """

        self._max = max

    @property
    def max_length(self):
        """Gets the max_length of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.

        maximum length of a text cell

        :return: The max_length of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :rtype: float
        """
        return self._max_length

    @max_length.setter
    def max_length(self, max_length):
        """Sets the max_length of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.

        maximum length of a text cell

        :param max_length: The max_length of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :type max_length: float
        """

        self._max_length = max_length

    @property
    def min(self):
        """Gets the min of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.

        minimum value of a numeric cell

        :return: The min of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :rtype: float
        """
        return self._min

    @min.setter
    def min(self, min):
        """Sets the min of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.

        minimum value of a numeric cell

        :param min: The min of this AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInnerValidations.
        :type min: float
        """

        self._min = min
