# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetFamilyListAllOfNamingConvention(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abort_asset_creation_on_error: bool=None, pattern: str=None, source: object=None):
        """AssetFamilyListAllOfNamingConvention - a model defined in OpenAPI

        :param abort_asset_creation_on_error: The abort_asset_creation_on_error of this AssetFamilyListAllOfNamingConvention.
        :param pattern: The pattern of this AssetFamilyListAllOfNamingConvention.
        :param source: The source of this AssetFamilyListAllOfNamingConvention.
        """
        self.openapi_types = {
            'abort_asset_creation_on_error': bool,
            'pattern': str,
            'source': object
        }

        self.attribute_map = {
            'abort_asset_creation_on_error': 'abort_asset_creation_on_error',
            'pattern': 'pattern',
            'source': 'source'
        }

        self._abort_asset_creation_on_error = abort_asset_creation_on_error
        self._pattern = pattern
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetFamilyListAllOfNamingConvention':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetFamilyList_allOf_naming_convention of this AssetFamilyListAllOfNamingConvention.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abort_asset_creation_on_error(self):
        """Gets the abort_asset_creation_on_error of this AssetFamilyListAllOfNamingConvention.

        Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>.

        :return: The abort_asset_creation_on_error of this AssetFamilyListAllOfNamingConvention.
        :rtype: bool
        """
        return self._abort_asset_creation_on_error

    @abort_asset_creation_on_error.setter
    def abort_asset_creation_on_error(self, abort_asset_creation_on_error):
        """Sets the abort_asset_creation_on_error of this AssetFamilyListAllOfNamingConvention.

        Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>.

        :param abort_asset_creation_on_error: The abort_asset_creation_on_error of this AssetFamilyListAllOfNamingConvention.
        :type abort_asset_creation_on_error: bool
        """

        self._abort_asset_creation_on_error = abort_asset_creation_on_error

    @property
    def pattern(self):
        """Gets the pattern of this AssetFamilyListAllOfNamingConvention.

        The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>.

        :return: The pattern of this AssetFamilyListAllOfNamingConvention.
        :rtype: str
        """
        return self._pattern

    @pattern.setter
    def pattern(self, pattern):
        """Sets the pattern of this AssetFamilyListAllOfNamingConvention.

        The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>.

        :param pattern: The pattern of this AssetFamilyListAllOfNamingConvention.
        :type pattern: str
        """

        self._pattern = pattern

    @property
    def source(self):
        """Gets the source of this AssetFamilyListAllOfNamingConvention.

        The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>.

        :return: The source of this AssetFamilyListAllOfNamingConvention.
        :rtype: object
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this AssetFamilyListAllOfNamingConvention.

        The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>.

        :param source: The source of this AssetFamilyListAllOfNamingConvention.
        :type source: object
        """

        self._source = source
