# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_families_all_of_embedded_items_inner_all_of_product_link_rules_inner_assign_assets_to_inner import AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner
from openapi_server.models.asset_families_all_of_embedded_items_inner_all_of_product_link_rules_inner_product_selections_inner import AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerProductSelectionsInner
from openapi_server import util


class AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assign_assets_to: List[AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner]=None, product_selections: List[AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerProductSelectionsInner]=None):
        """AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner - a model defined in OpenAPI

        :param assign_assets_to: The assign_assets_to of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.
        :param product_selections: The product_selections of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.
        """
        self.openapi_types = {
            'assign_assets_to': List[AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner],
            'product_selections': List[AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerProductSelectionsInner]
        }

        self.attribute_map = {
            'assign_assets_to': 'assign_assets_to',
            'product_selections': 'product_selections'
        }

        self._assign_assets_to = assign_assets_to
        self._product_selections = product_selections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assign_assets_to(self):
        """Gets the assign_assets_to of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.

        The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.

        :return: The assign_assets_to of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.
        :rtype: List[AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner]
        """
        return self._assign_assets_to

    @assign_assets_to.setter
    def assign_assets_to(self, assign_assets_to):
        """Sets the assign_assets_to of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.

        The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.

        :param assign_assets_to: The assign_assets_to of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.
        :type assign_assets_to: List[AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner]
        """

        self._assign_assets_to = assign_assets_to

    @property
    def product_selections(self):
        """Gets the product_selections of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.

        The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.

        :return: The product_selections of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.
        :rtype: List[AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerProductSelectionsInner]
        """
        return self._product_selections

    @product_selections.setter
    def product_selections(self, product_selections):
        """Sets the product_selections of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.

        The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.

        :param product_selections: The product_selections of this AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.
        :type product_selections: List[AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerProductSelectionsInner]
        """

        self._product_selections = product_selections
