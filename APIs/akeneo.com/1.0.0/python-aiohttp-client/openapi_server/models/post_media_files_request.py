# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostMediaFilesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file: file=None, product: str=None, product_model: str=None):
        """PostMediaFilesRequest - a model defined in OpenAPI

        :param file: The file of this PostMediaFilesRequest.
        :param product: The product of this PostMediaFilesRequest.
        :param product_model: The product_model of this PostMediaFilesRequest.
        """
        self.openapi_types = {
            'file': file,
            'product': str,
            'product_model': str
        }

        self.attribute_map = {
            'file': 'file',
            'product': 'product',
            'product_model': 'product_model'
        }

        self._file = file
        self._product = product
        self._product_model = product_model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostMediaFilesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The post_media_files_request of this PostMediaFilesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file(self):
        """Gets the file of this PostMediaFilesRequest.

        The binaries of the file

        :return: The file of this PostMediaFilesRequest.
        :rtype: file
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this PostMediaFilesRequest.

        The binaries of the file

        :param file: The file of this PostMediaFilesRequest.
        :type file: file
        """
        if file is None:
            raise ValueError("Invalid value for `file`, must not be `None`")

        self._file = file

    @property
    def product(self):
        """Gets the product of this PostMediaFilesRequest.

        The product to which the media file will be associated. It is a JSON string that follows this format '{\"identifier\":\"product_identifier\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product_model` field, but not both at the same time.

        :return: The product of this PostMediaFilesRequest.
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this PostMediaFilesRequest.

        The product to which the media file will be associated. It is a JSON string that follows this format '{\"identifier\":\"product_identifier\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product_model` field, but not both at the same time.

        :param product: The product of this PostMediaFilesRequest.
        :type product: str
        """

        self._product = product

    @property
    def product_model(self):
        """Gets the product_model of this PostMediaFilesRequest.

        The product model to which the media file will be associated. It is a JSON string that follows this format '{\"code\":\"product_model_code\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product` field, but not both at the same time.

        :return: The product_model of this PostMediaFilesRequest.
        :rtype: str
        """
        return self._product_model

    @product_model.setter
    def product_model(self, product_model):
        """Sets the product_model of this PostMediaFilesRequest.

        The product model to which the media file will be associated. It is a JSON string that follows this format '{\"code\":\"product_model_code\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product` field, but not both at the same time.

        :param product_model: The product_model of this PostMediaFilesRequest.
        :type product_model: str
        """

        self._product_model = product_model
