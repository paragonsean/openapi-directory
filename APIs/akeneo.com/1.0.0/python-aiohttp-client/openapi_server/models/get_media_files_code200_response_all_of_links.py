# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.media_files_all_of_embedded_items_inner_all_of_links_download import MediaFilesAllOfEmbeddedItemsInnerAllOfLinksDownload
from openapi_server import util


class GetMediaFilesCode200ResponseAllOfLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, download: MediaFilesAllOfEmbeddedItemsInnerAllOfLinksDownload=None):
        """GetMediaFilesCode200ResponseAllOfLinks - a model defined in OpenAPI

        :param download: The download of this GetMediaFilesCode200ResponseAllOfLinks.
        """
        self.openapi_types = {
            'download': MediaFilesAllOfEmbeddedItemsInnerAllOfLinksDownload
        }

        self.attribute_map = {
            'download': 'download'
        }

        self._download = download

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMediaFilesCode200ResponseAllOfLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_media_files__code__200_response_allOf__links of this GetMediaFilesCode200ResponseAllOfLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def download(self):
        """Gets the download of this GetMediaFilesCode200ResponseAllOfLinks.


        :return: The download of this GetMediaFilesCode200ResponseAllOfLinks.
        :rtype: MediaFilesAllOfEmbeddedItemsInnerAllOfLinksDownload
        """
        return self._download

    @download.setter
    def download(self, download):
        """Sets the download of this GetMediaFilesCode200ResponseAllOfLinks.


        :param download: The download of this GetMediaFilesCode200ResponseAllOfLinks.
        :type download: MediaFilesAllOfEmbeddedItemsInnerAllOfLinksDownload
        """

        self._download = download
