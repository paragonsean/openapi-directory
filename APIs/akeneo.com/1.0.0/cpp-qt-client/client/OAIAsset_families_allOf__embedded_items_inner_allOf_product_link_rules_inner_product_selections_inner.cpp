/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner() {
    this->initializeModel();
}

OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::~OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner() {}

void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::initializeModel() {

    m_channel_isSet = false;
    m_channel_isValid = false;

    m_field_isSet = false;
    m_field_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_r_operator_isSet = false;
    m_r_operator_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::fromJsonObject(QJsonObject json) {

    m_channel_isValid = ::OpenAPI::fromJsonValue(m_channel, json[QString("channel")]);
    m_channel_isSet = !json[QString("channel")].isNull() && m_channel_isValid;

    m_field_isValid = ::OpenAPI::fromJsonValue(m_field, json[QString("field")]);
    m_field_isSet = !json[QString("field")].isNull() && m_field_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_r_operator_isValid = ::OpenAPI::fromJsonValue(m_r_operator, json[QString("operator")]);
    m_r_operator_isSet = !json[QString("operator")].isNull() && m_r_operator_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_isSet) {
        obj.insert(QString("channel"), ::OpenAPI::toJsonValue(m_channel));
    }
    if (m_field_isSet) {
        obj.insert(QString("field"), ::OpenAPI::toJsonValue(m_field));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_r_operator_isSet) {
        obj.insert(QString("operator"), ::OpenAPI::toJsonValue(m_r_operator));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::getChannel() const {
    return m_channel;
}
void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::setChannel(const QString &channel) {
    m_channel = channel;
    m_channel_isSet = true;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_channel_Set() const{
    return m_channel_isSet;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_channel_Valid() const{
    return m_channel_isValid;
}

QString OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::getField() const {
    return m_field;
}
void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::setField(const QString &field) {
    m_field = field;
    m_field_isSet = true;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_field_Set() const{
    return m_field_isSet;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_field_Valid() const{
    return m_field_isValid;
}

QString OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::getLocale() const {
    return m_locale;
}
void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::getROperator() const {
    return m_r_operator;
}
void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::setROperator(const QString &r_operator) {
    m_r_operator = r_operator;
    m_r_operator_isSet = true;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_r_operator_Set() const{
    return m_r_operator_isSet;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_r_operator_Valid() const{
    return m_r_operator_isValid;
}

QString OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::getValue() const {
    return m_value;
}
void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_value_Set() const{
    return m_value_isSet;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_operator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_field_isValid && m_r_operator_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
