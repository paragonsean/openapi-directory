/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProducts_1_allOf__embedded_items_inner_allOf_metadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::OAIProducts_1_allOf__embedded_items_inner_allOf_metadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::OAIProducts_1_allOf__embedded_items_inner_allOf_metadata() {
    this->initializeModel();
}

OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::~OAIProducts_1_allOf__embedded_items_inner_allOf_metadata() {}

void OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::initializeModel() {

    m_workflow_status_isSet = false;
    m_workflow_status_isValid = false;
}

void OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::fromJsonObject(QJsonObject json) {

    m_workflow_status_isValid = ::OpenAPI::fromJsonValue(m_workflow_status, json[QString("workflow_status")]);
    m_workflow_status_isSet = !json[QString("workflow_status")].isNull() && m_workflow_status_isValid;
}

QString OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::asJsonObject() const {
    QJsonObject obj;
    if (m_workflow_status_isSet) {
        obj.insert(QString("workflow_status"), ::OpenAPI::toJsonValue(m_workflow_status));
    }
    return obj;
}

QString OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::getWorkflowStatus() const {
    return m_workflow_status;
}
void OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::setWorkflowStatus(const QString &workflow_status) {
    m_workflow_status = workflow_status;
    m_workflow_status_isSet = true;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::is_workflow_status_Set() const{
    return m_workflow_status_isSet;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::is_workflow_status_Valid() const{
    return m_workflow_status_isValid;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_workflow_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_metadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
