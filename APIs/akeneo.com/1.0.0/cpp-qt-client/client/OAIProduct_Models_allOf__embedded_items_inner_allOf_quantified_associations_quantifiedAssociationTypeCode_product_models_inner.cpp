/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner() {
    this->initializeModel();
}

OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::~OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner() {}

void OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;
}

void OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;
}

QString OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    return obj;
}

QString OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::getCode() const {
    return m_code;
}
void OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::is_code_Set() const{
    return m_code_isSet;
}

bool OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::is_code_Valid() const{
    return m_code_isValid;
}

qint32 OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::getQuantity() const {
    return m_quantity;
}
void OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::is_quantity_Valid() const{
    return m_quantity_isValid;
}

bool OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProduct_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
