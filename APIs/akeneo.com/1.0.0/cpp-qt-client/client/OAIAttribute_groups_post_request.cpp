/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttribute_groups_post_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttribute_groups_post_request::OAIAttribute_groups_post_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttribute_groups_post_request::OAIAttribute_groups_post_request() {
    this->initializeModel();
}

OAIAttribute_groups_post_request::~OAIAttribute_groups_post_request() {}

void OAIAttribute_groups_post_request::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAIAttribute_groups_post_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttribute_groups_post_request::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sort_order")]);
    m_sort_order_isSet = !json[QString("sort_order")].isNull() && m_sort_order_isValid;
}

QString OAIAttribute_groups_post_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttribute_groups_post_request::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_labels.isSet()) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sort_order"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

QList<QString> OAIAttribute_groups_post_request::getAttributes() const {
    return m_attributes;
}
void OAIAttribute_groups_post_request::setAttributes(const QList<QString> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIAttribute_groups_post_request::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIAttribute_groups_post_request::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIAttribute_groups_post_request::getCode() const {
    return m_code;
}
void OAIAttribute_groups_post_request::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIAttribute_groups_post_request::is_code_Set() const{
    return m_code_isSet;
}

bool OAIAttribute_groups_post_request::is_code_Valid() const{
    return m_code_isValid;
}

OAIAttribute_groups_allOf__embedded_items_inner_allOf_labels OAIAttribute_groups_post_request::getLabels() const {
    return m_labels;
}
void OAIAttribute_groups_post_request::setLabels(const OAIAttribute_groups_allOf__embedded_items_inner_allOf_labels &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIAttribute_groups_post_request::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIAttribute_groups_post_request::is_labels_Valid() const{
    return m_labels_isValid;
}

qint32 OAIAttribute_groups_post_request::getSortOrder() const {
    return m_sort_order;
}
void OAIAttribute_groups_post_request::setSortOrder(const qint32 &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIAttribute_groups_post_request::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIAttribute_groups_post_request::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAIAttribute_groups_post_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttribute_groups_post_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_code_isValid && true;
}

} // namespace OpenAPI
