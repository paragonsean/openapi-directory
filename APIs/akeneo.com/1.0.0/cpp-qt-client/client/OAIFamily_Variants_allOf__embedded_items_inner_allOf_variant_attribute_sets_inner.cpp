/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner() {
    this->initializeModel();
}

OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::~OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner() {}

void OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_axes_isSet = false;
    m_axes_isValid = false;

    m_level_isSet = false;
    m_level_isValid = false;
}

void OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_axes_isValid = ::OpenAPI::fromJsonValue(m_axes, json[QString("axes")]);
    m_axes_isSet = !json[QString("axes")].isNull() && m_axes_isValid;

    m_level_isValid = ::OpenAPI::fromJsonValue(m_level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;
}

QString OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_axes.size() > 0) {
        obj.insert(QString("axes"), ::OpenAPI::toJsonValue(m_axes));
    }
    if (m_level_isSet) {
        obj.insert(QString("level"), ::OpenAPI::toJsonValue(m_level));
    }
    return obj;
}

QList<QString> OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::getAttributes() const {
    return m_attributes;
}
void OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::setAttributes(const QList<QString> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QList<QString> OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::getAxes() const {
    return m_axes;
}
void OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::setAxes(const QList<QString> &axes) {
    m_axes = axes;
    m_axes_isSet = true;
}

bool OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::is_axes_Set() const{
    return m_axes_isSet;
}

bool OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::is_axes_Valid() const{
    return m_axes_isValid;
}

qint32 OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::getLevel() const {
    return m_level;
}
void OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::setLevel(const qint32 &level) {
    m_level = level;
    m_level_isSet = true;
}

bool OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::is_level_Set() const{
    return m_level_isSet;
}

bool OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::is_level_Valid() const{
    return m_level_isValid;
}

bool OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_axes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFamily_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_axes_isValid && m_level_isValid && true;
}

} // namespace OpenAPI
