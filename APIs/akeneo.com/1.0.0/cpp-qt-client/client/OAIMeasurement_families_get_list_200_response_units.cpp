/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMeasurement_families_get_list_200_response_units.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMeasurement_families_get_list_200_response_units::OAIMeasurement_families_get_list_200_response_units(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMeasurement_families_get_list_200_response_units::OAIMeasurement_families_get_list_200_response_units() {
    this->initializeModel();
}

OAIMeasurement_families_get_list_200_response_units::~OAIMeasurement_families_get_list_200_response_units() {}

void OAIMeasurement_families_get_list_200_response_units::initializeModel() {

    m_unit_code_isSet = false;
    m_unit_code_isValid = false;
}

void OAIMeasurement_families_get_list_200_response_units::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMeasurement_families_get_list_200_response_units::fromJsonObject(QJsonObject json) {

    m_unit_code_isValid = ::OpenAPI::fromJsonValue(m_unit_code, json[QString("unitCode")]);
    m_unit_code_isSet = !json[QString("unitCode")].isNull() && m_unit_code_isValid;
}

QString OAIMeasurement_families_get_list_200_response_units::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMeasurement_families_get_list_200_response_units::asJsonObject() const {
    QJsonObject obj;
    if (m_unit_code.isSet()) {
        obj.insert(QString("unitCode"), ::OpenAPI::toJsonValue(m_unit_code));
    }
    return obj;
}

OAIMeasurement_families_get_list_200_response_units_unitCode OAIMeasurement_families_get_list_200_response_units::getUnitCode() const {
    return m_unit_code;
}
void OAIMeasurement_families_get_list_200_response_units::setUnitCode(const OAIMeasurement_families_get_list_200_response_units_unitCode &unit_code) {
    m_unit_code = unit_code;
    m_unit_code_isSet = true;
}

bool OAIMeasurement_families_get_list_200_response_units::is_unit_code_Set() const{
    return m_unit_code_isSet;
}

bool OAIMeasurement_families_get_list_200_response_units::is_unit_code_Valid() const{
    return m_unit_code_isValid;
}

bool OAIMeasurement_families_get_list_200_response_units::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_unit_code.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMeasurement_families_get_list_200_response_units::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
