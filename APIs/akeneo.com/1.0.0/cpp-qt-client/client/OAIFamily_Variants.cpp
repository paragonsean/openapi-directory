/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFamily_Variants.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFamily_Variants::OAIFamily_Variants(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFamily_Variants::OAIFamily_Variants() {
    this->initializeModel();
}

OAIFamily_Variants::~OAIFamily_Variants() {}

void OAIFamily_Variants::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_current_page_isSet = false;
    m_current_page_isValid = false;

    m__embedded_isSet = false;
    m__embedded_isValid = false;
}

void OAIFamily_Variants::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFamily_Variants::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_current_page_isValid = ::OpenAPI::fromJsonValue(m_current_page, json[QString("current_page")]);
    m_current_page_isSet = !json[QString("current_page")].isNull() && m_current_page_isValid;

    m__embedded_isValid = ::OpenAPI::fromJsonValue(m__embedded, json[QString("_embedded")]);
    m__embedded_isSet = !json[QString("_embedded")].isNull() && m__embedded_isValid;
}

QString OAIFamily_Variants::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFamily_Variants::asJsonObject() const {
    QJsonObject obj;
    if (m__links.isSet()) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_current_page_isSet) {
        obj.insert(QString("current_page"), ::OpenAPI::toJsonValue(m_current_page));
    }
    if (m__embedded.isSet()) {
        obj.insert(QString("_embedded"), ::OpenAPI::toJsonValue(m__embedded));
    }
    return obj;
}

OAIPAM_Asset_Categories_allOf__links OAIFamily_Variants::getLinks() const {
    return m__links;
}
void OAIFamily_Variants::setLinks(const OAIPAM_Asset_Categories_allOf__links &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIFamily_Variants::is__links_Set() const{
    return m__links_isSet;
}

bool OAIFamily_Variants::is__links_Valid() const{
    return m__links_isValid;
}

qint32 OAIFamily_Variants::getCurrentPage() const {
    return m_current_page;
}
void OAIFamily_Variants::setCurrentPage(const qint32 &current_page) {
    m_current_page = current_page;
    m_current_page_isSet = true;
}

bool OAIFamily_Variants::is_current_page_Set() const{
    return m_current_page_isSet;
}

bool OAIFamily_Variants::is_current_page_Valid() const{
    return m_current_page_isValid;
}

OAIFamily_Variants_allOf__embedded OAIFamily_Variants::getEmbedded() const {
    return m__embedded;
}
void OAIFamily_Variants::setEmbedded(const OAIFamily_Variants_allOf__embedded &_embedded) {
    m__embedded = _embedded;
    m__embedded_isSet = true;
}

bool OAIFamily_Variants::is__embedded_Set() const{
    return m__embedded_isSet;
}

bool OAIFamily_Variants::is__embedded_Valid() const{
    return m__embedded_isValid;
}

bool OAIFamily_Variants::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__embedded.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFamily_Variants::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
