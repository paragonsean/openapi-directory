/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_endpoints_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_endpoints_200_response::OAIGet_endpoints_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_endpoints_200_response::OAIGet_endpoints_200_response() {
    this->initializeModel();
}

OAIGet_endpoints_200_response::~OAIGet_endpoints_200_response() {}

void OAIGet_endpoints_200_response::initializeModel() {

    m_authentication_isSet = false;
    m_authentication_isValid = false;

    m_host_isSet = false;
    m_host_isValid = false;

    m_routes_isSet = false;
    m_routes_isValid = false;
}

void OAIGet_endpoints_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_endpoints_200_response::fromJsonObject(QJsonObject json) {

    m_authentication_isValid = ::OpenAPI::fromJsonValue(m_authentication, json[QString("authentication")]);
    m_authentication_isSet = !json[QString("authentication")].isNull() && m_authentication_isValid;

    m_host_isValid = ::OpenAPI::fromJsonValue(m_host, json[QString("host")]);
    m_host_isSet = !json[QString("host")].isNull() && m_host_isValid;

    m_routes_isValid = ::OpenAPI::fromJsonValue(m_routes, json[QString("routes")]);
    m_routes_isSet = !json[QString("routes")].isNull() && m_routes_isValid;
}

QString OAIGet_endpoints_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_endpoints_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_authentication_isSet) {
        obj.insert(QString("authentication"), ::OpenAPI::toJsonValue(m_authentication));
    }
    if (m_host_isSet) {
        obj.insert(QString("host"), ::OpenAPI::toJsonValue(m_host));
    }
    if (m_routes_isSet) {
        obj.insert(QString("routes"), ::OpenAPI::toJsonValue(m_routes));
    }
    return obj;
}

OAIObject OAIGet_endpoints_200_response::getAuthentication() const {
    return m_authentication;
}
void OAIGet_endpoints_200_response::setAuthentication(const OAIObject &authentication) {
    m_authentication = authentication;
    m_authentication_isSet = true;
}

bool OAIGet_endpoints_200_response::is_authentication_Set() const{
    return m_authentication_isSet;
}

bool OAIGet_endpoints_200_response::is_authentication_Valid() const{
    return m_authentication_isValid;
}

QString OAIGet_endpoints_200_response::getHost() const {
    return m_host;
}
void OAIGet_endpoints_200_response::setHost(const QString &host) {
    m_host = host;
    m_host_isSet = true;
}

bool OAIGet_endpoints_200_response::is_host_Set() const{
    return m_host_isSet;
}

bool OAIGet_endpoints_200_response::is_host_Valid() const{
    return m_host_isValid;
}

OAIObject OAIGet_endpoints_200_response::getRoutes() const {
    return m_routes;
}
void OAIGet_endpoints_200_response::setRoutes(const OAIObject &routes) {
    m_routes = routes;
    m_routes_isSet = true;
}

bool OAIGet_endpoints_200_response::is_routes_Set() const{
    return m_routes_isSet;
}

bool OAIGet_endpoints_200_response::is_routes_Valid() const{
    return m_routes_isValid;
}

bool OAIGet_endpoints_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authentication_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_endpoints_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
