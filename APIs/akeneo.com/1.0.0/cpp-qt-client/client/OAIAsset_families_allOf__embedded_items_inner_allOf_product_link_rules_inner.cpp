/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner() {
    this->initializeModel();
}

OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::~OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner() {}

void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::initializeModel() {

    m_assign_assets_to_isSet = false;
    m_assign_assets_to_isValid = false;

    m_product_selections_isSet = false;
    m_product_selections_isValid = false;
}

void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::fromJsonObject(QJsonObject json) {

    m_assign_assets_to_isValid = ::OpenAPI::fromJsonValue(m_assign_assets_to, json[QString("assign_assets_to")]);
    m_assign_assets_to_isSet = !json[QString("assign_assets_to")].isNull() && m_assign_assets_to_isValid;

    m_product_selections_isValid = ::OpenAPI::fromJsonValue(m_product_selections, json[QString("product_selections")]);
    m_product_selections_isSet = !json[QString("product_selections")].isNull() && m_product_selections_isValid;
}

QString OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_assign_assets_to.size() > 0) {
        obj.insert(QString("assign_assets_to"), ::OpenAPI::toJsonValue(m_assign_assets_to));
    }
    if (m_product_selections.size() > 0) {
        obj.insert(QString("product_selections"), ::OpenAPI::toJsonValue(m_product_selections));
    }
    return obj;
}

QList<OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_assign_assets_to_inner> OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::getAssignAssetsTo() const {
    return m_assign_assets_to;
}
void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::setAssignAssetsTo(const QList<OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_assign_assets_to_inner> &assign_assets_to) {
    m_assign_assets_to = assign_assets_to;
    m_assign_assets_to_isSet = true;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::is_assign_assets_to_Set() const{
    return m_assign_assets_to_isSet;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::is_assign_assets_to_Valid() const{
    return m_assign_assets_to_isValid;
}

QList<OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner> OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::getProductSelections() const {
    return m_product_selections;
}
void OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::setProductSelections(const QList<OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner> &product_selections) {
    m_product_selections = product_selections;
    m_product_selections_isSet = true;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::is_product_selections_Set() const{
    return m_product_selections_isSet;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::is_product_selections_Valid() const{
    return m_product_selections_isValid;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assign_assets_to.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_selections.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAsset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
