/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_reference_entities__code__200_response_allOf__links.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_reference_entities__code__200_response_allOf__links::OAIGet_reference_entities__code__200_response_allOf__links(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_reference_entities__code__200_response_allOf__links::OAIGet_reference_entities__code__200_response_allOf__links() {
    this->initializeModel();
}

OAIGet_reference_entities__code__200_response_allOf__links::~OAIGet_reference_entities__code__200_response_allOf__links() {}

void OAIGet_reference_entities__code__200_response_allOf__links::initializeModel() {

    m_image_download_isSet = false;
    m_image_download_isValid = false;
}

void OAIGet_reference_entities__code__200_response_allOf__links::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_reference_entities__code__200_response_allOf__links::fromJsonObject(QJsonObject json) {

    m_image_download_isValid = ::OpenAPI::fromJsonValue(m_image_download, json[QString("image_download")]);
    m_image_download_isSet = !json[QString("image_download")].isNull() && m_image_download_isValid;
}

QString OAIGet_reference_entities__code__200_response_allOf__links::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_reference_entities__code__200_response_allOf__links::asJsonObject() const {
    QJsonObject obj;
    if (m_image_download.isSet()) {
        obj.insert(QString("image_download"), ::OpenAPI::toJsonValue(m_image_download));
    }
    return obj;
}

OAIReference_Entities_allOf__embedded_items_inner_allOf__links_image_download OAIGet_reference_entities__code__200_response_allOf__links::getImageDownload() const {
    return m_image_download;
}
void OAIGet_reference_entities__code__200_response_allOf__links::setImageDownload(const OAIReference_Entities_allOf__embedded_items_inner_allOf__links_image_download &image_download) {
    m_image_download = image_download;
    m_image_download_isSet = true;
}

bool OAIGet_reference_entities__code__200_response_allOf__links::is_image_download_Set() const{
    return m_image_download_isSet;
}

bool OAIGet_reference_entities__code__200_response_allOf__links::is_image_download_Valid() const{
    return m_image_download_isValid;
}

bool OAIGet_reference_entities__code__200_response_allOf__links::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_download.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_reference_entities__code__200_response_allOf__links::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
