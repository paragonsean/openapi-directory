/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_variation_files__channel_code__locale_code_200_response__link.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_variation_files__channel_code__locale_code_200_response__link::OAIGet_variation_files__channel_code__locale_code_200_response__link(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_variation_files__channel_code__locale_code_200_response__link::OAIGet_variation_files__channel_code__locale_code_200_response__link() {
    this->initializeModel();
}

OAIGet_variation_files__channel_code__locale_code_200_response__link::~OAIGet_variation_files__channel_code__locale_code_200_response__link() {}

void OAIGet_variation_files__channel_code__locale_code_200_response__link::initializeModel() {

    m_download_isSet = false;
    m_download_isValid = false;
}

void OAIGet_variation_files__channel_code__locale_code_200_response__link::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_variation_files__channel_code__locale_code_200_response__link::fromJsonObject(QJsonObject json) {

    m_download_isValid = ::OpenAPI::fromJsonValue(m_download, json[QString("download")]);
    m_download_isSet = !json[QString("download")].isNull() && m_download_isValid;
}

QString OAIGet_variation_files__channel_code__locale_code_200_response__link::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_variation_files__channel_code__locale_code_200_response__link::asJsonObject() const {
    QJsonObject obj;
    if (m_download.isSet()) {
        obj.insert(QString("download"), ::OpenAPI::toJsonValue(m_download));
    }
    return obj;
}

OAIPAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link_download OAIGet_variation_files__channel_code__locale_code_200_response__link::getDownload() const {
    return m_download;
}
void OAIGet_variation_files__channel_code__locale_code_200_response__link::setDownload(const OAIPAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link_download &download) {
    m_download = download;
    m_download_isSet = true;
}

bool OAIGet_variation_files__channel_code__locale_code_200_response__link::is_download_Set() const{
    return m_download_isSet;
}

bool OAIGet_variation_files__channel_code__locale_code_200_response__link::is_download_Valid() const{
    return m_download_isValid;
}

bool OAIGet_variation_files__channel_code__locale_code_200_response__link::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_download.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_variation_files__channel_code__locale_code_200_response__link::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
