/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention.h
 *
 * The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at &lt;a href&#x3D;&#39;/concepts/asset-manager.html#focus-on-the-naming-convention&#39;&gt;here&lt;/a&gt;.
 */

#ifndef OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention_H
#define OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention : public OAIObject {
public:
    OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention();
    OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention(QString json);
    ~OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAbortAssetCreationOnError() const;
    void setAbortAssetCreationOnError(const bool &abort_asset_creation_on_error);
    bool is_abort_asset_creation_on_error_Set() const;
    bool is_abort_asset_creation_on_error_Valid() const;

    QString getPattern() const;
    void setPattern(const QString &pattern);
    bool is_pattern_Set() const;
    bool is_pattern_Valid() const;

    OAIObject getSource() const;
    void setSource(const OAIObject &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_abort_asset_creation_on_error;
    bool m_abort_asset_creation_on_error_isSet;
    bool m_abort_asset_creation_on_error_isValid;

    QString m_pattern;
    bool m_pattern_isSet;
    bool m_pattern_isValid;

    OAIObject m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention)

#endif // OAIAsset_families_allOf__embedded_items_inner_allOf_naming_convention_H
