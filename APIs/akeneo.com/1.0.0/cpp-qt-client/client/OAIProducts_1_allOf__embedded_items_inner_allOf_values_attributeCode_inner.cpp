/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner() {
    this->initializeModel();
}

OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::~OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner() {}

void OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_linked_data_isSet = false;
    m_linked_data_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;
}

void OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_linked_data_isValid = ::OpenAPI::fromJsonValue(m_linked_data, json[QString("linked_data")]);
    m_linked_data_isSet = !json[QString("linked_data")].isNull() && m_linked_data_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;
}

QString OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_data_isSet) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_linked_data.isSet()) {
        obj.insert(QString("linked_data"), ::OpenAPI::toJsonValue(m_linked_data));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    return obj;
}

OAIObject OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::getData() const {
    return m_data;
}
void OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::setData(const OAIObject &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::is_data_Set() const{
    return m_data_isSet;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::is_data_Valid() const{
    return m_data_isValid;
}

OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner_linked_data OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::getLinkedData() const {
    return m_linked_data;
}
void OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::setLinkedData(const OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner_linked_data &linked_data) {
    m_linked_data = linked_data;
    m_linked_data_isSet = true;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::is_linked_data_Set() const{
    return m_linked_data_isSet;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::is_linked_data_Valid() const{
    return m_linked_data_isValid;
}

QString OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::getLocale() const {
    return m_locale;
}
void OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::getScope() const {
    return m_scope;
}
void OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::is_scope_Valid() const{
    return m_scope_isValid;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_linked_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProducts_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
