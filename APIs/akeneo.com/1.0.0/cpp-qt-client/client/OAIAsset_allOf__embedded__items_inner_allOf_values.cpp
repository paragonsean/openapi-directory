/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAsset_allOf__embedded__items_inner_allOf_values.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAsset_allOf__embedded__items_inner_allOf_values::OAIAsset_allOf__embedded__items_inner_allOf_values(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAsset_allOf__embedded__items_inner_allOf_values::OAIAsset_allOf__embedded__items_inner_allOf_values() {
    this->initializeModel();
}

OAIAsset_allOf__embedded__items_inner_allOf_values::~OAIAsset_allOf__embedded__items_inner_allOf_values() {}

void OAIAsset_allOf__embedded__items_inner_allOf_values::initializeModel() {

    m_attribute_code_isSet = false;
    m_attribute_code_isValid = false;
}

void OAIAsset_allOf__embedded__items_inner_allOf_values::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAsset_allOf__embedded__items_inner_allOf_values::fromJsonObject(QJsonObject json) {

    m_attribute_code_isValid = ::OpenAPI::fromJsonValue(m_attribute_code, json[QString("attributeCode")]);
    m_attribute_code_isSet = !json[QString("attributeCode")].isNull() && m_attribute_code_isValid;
}

QString OAIAsset_allOf__embedded__items_inner_allOf_values::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAsset_allOf__embedded__items_inner_allOf_values::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_code.size() > 0) {
        obj.insert(QString("attributeCode"), ::OpenAPI::toJsonValue(m_attribute_code));
    }
    return obj;
}

QList<OAIAsset_allOf__embedded__items_inner_allOf_values_attributeCode_inner> OAIAsset_allOf__embedded__items_inner_allOf_values::getAttributeCode() const {
    return m_attribute_code;
}
void OAIAsset_allOf__embedded__items_inner_allOf_values::setAttributeCode(const QList<OAIAsset_allOf__embedded__items_inner_allOf_values_attributeCode_inner> &attribute_code) {
    m_attribute_code = attribute_code;
    m_attribute_code_isSet = true;
}

bool OAIAsset_allOf__embedded__items_inner_allOf_values::is_attribute_code_Set() const{
    return m_attribute_code_isSet;
}

bool OAIAsset_allOf__embedded__items_inner_allOf_values::is_attribute_code_Valid() const{
    return m_attribute_code_isValid;
}

bool OAIAsset_allOf__embedded__items_inner_allOf_values::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_code.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAsset_allOf__embedded__items_inner_allOf_values::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
