openapi: 3.0.1
info:
  contact: {}
  title: Akeneo PIM REST API
  version: 1.0.0
  x-apisguru-categories:
  - enterprise
  x-logo:
    url: https://twitter.com/akeneopim/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/akeneo/pim-api-docs/master/content/swagger/akeneo-web-api.json
    version: "2.0"
  x-providerName: akeneo.com
servers:
- url: http://demo.akeneo.com/
paths:
  /api/oauth/v1/token:
    post:
      description: This endpoint allows you to get an authentication token. No need
        to be authenticated to use this endpoint.
      operationId: post_token
      parameters:
      - description: "Equal to 'application/json' or 'application/x-www-form-urlencoded',\
          \ no other value allowed"
        in: header
        name: Content-type
        required: true
        schema:
          type: string
      - description: "Equal to 'Basic xx', where 'xx' is the base 64 encoding of the\
          \ client id and secret. Find out how to generate them in the <a href=\"\
          /documentation/authentication.html#client-idsecret-generation\">Client ID/secret\
          \ generation</a> section."
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_token_request'
        required: false
        x-form-data: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_200_response'
            access_token:
              example: ZTZmYjU4ZmQxZWNmMzk1M2NlYzA5NmFhNmIzVjExMzE4NmJmODBkZGIyYTliYmQyNjk2ZDQwZThmNjdiZDQzOQ
            expires_in:
              example: 3600
            refresh_token:
              example: M2FlODI0OTE3ODMyNjViMzRiOWE5ODMyNWViMThkNDU5YzJjNjFiZjNkZWFjMzIyYjc4YTgzZWY1MjE5ZTY5Mw
            token_type:
              example: bearer
          description: Return an authentication token
          x-no-entity: true
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Get authentication token
      tags:
      - Authentication
      x-no-token: true
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - access_token
      - application/json
      - code
      - expires_in
      - message
      - refresh_token
      - token_type
  /api/rest/v1:
    get:
      description: This endpoint allows you to get the list of all the available endpoints.
        No need to be authenticated to use this endpoint.
      operationId: get_endpoints
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_endpoints_200_response'
            authentication:
              example:
                fos_oauth_server_token:
                  methods:
                  - POST
                  route: /api/oauth/v1/token
            host:
              example: https://demo.akeneo.com
            routes:
              example:
                pim_api_category_create:
                  methods:
                  - POST
                  route: /api/rest/v1/categories
                pim_api_category_get:
                  methods:
                  - GET
                  route: "/api/rest/v1/categories/{code}"
                pim_api_category_list:
                  methods:
                  - GET
                  route: /api/rest/v1/categories
                pim_api_category_partial_update:
                  methods:
                  - PATCH
                  route: "/api/rest/v1/categories/{code}"
          description: Return the list of all available endpoints
          x-no-entity: true
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of all endpoints
      tags:
      - Overview
      x-no-token: true
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - authentication
      - code
      - host
      - message
      - routes
  /api/rest/v1/asset-categories:
    get:
      description: This endpoint allows you to get a list of PAM asset categories.
        PAM asset categories are paginated and sorted by `root/left`.
      operationId: get_asset_categories
      parameters:
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PAM_Asset_Categories'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-categories/pictures
                  code: pictures
                  labels:
                    de_DE: Bilder
                    en_US: Pictures
                    fr_FR: Images
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-categories/front_views
                  code: front_views
                  labels:
                    de_DE: Vorderansichten
                    en_US: Front views
                    fr_FR: Vues de face
                  parent: pictures
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-categories/side_views
                  code: side_views
                  labels:
                    de_DE: Profilansichten
                    en_US: Side views
                    fr_FR: Vues de profil
                  parent: pictures
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/asset-categories?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/asset-categories?page=3&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/asset-categories?page=1&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/asset-categories?page=2&limit=3
            current_page:
              example: 2
          description: Returns PAM asset categories paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of PAM asset categories
      tags:
      - PAM asset category
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update several PAM asset categories
        at once.
      operationId: patch_asset_categories
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_asset_categories_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"spring_collection\",\"status_code\"\
                :201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"front_views\",\"status_code\":422,\"\
                message\":\"Asset category \"pitures\" does not exist.\"}"
            x-example-3:
              example: "{\"line\":3,\"code\":\"other_views\",\"status_code\":204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several PAM asset categories
      tags:
      - PAM asset category
      x-body-by-line: "Contains several lines, each line is a category in JSON standard\
        \ format"
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new PAM asset category.
      operationId: post_asset_categories
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_asset_categories_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new PAM asset category
      tags:
      - PAM asset category
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/asset-categories/{code}:
    get:
      description: This endpoint allows you to get the information about a given PAM
        asset category.
      operationId: get_asset_categories__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_asset_categories_request'
          description: OK
          x-details: Returns the content of the asset category in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a PAM asset category
      tags:
      - PAM asset category
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given PAM asset category.\
        \ Know more about <a href=\"/documentation/update.html#update-behavior\">Update\
        \ behavior</a>. Note that if no category exists for the given code, it creates\
        \ it."
      operationId: patch_asset_categories__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_asset_categories_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a PAM asset category
      tags:
      - PAM asset category
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/asset-families:
    get:
      description: This endpoint allows you to get a list of asset families. Asset
        families are paginated.
      operationId: get_asset_families
      parameters:
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset_families'
            _embedded:
              example:
                _items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-families/packshots
                  code: packshots
                  labels:
                    en_US: Packshots
                    fr_FR: Plans produit
                  product_link_rules:
                  - assign_assets_to:
                    - attribute: "{{my_product_attribute}}"
                      mode: add
                    product_selections:
                    - field: sku
                      operator: =
                      value: "{{product_ref}}"
                  transformations:
                  - filename_suffix: _thumbnailBW
                    label: My transformation
                    operations:
                    - parameters:
                        height: 150
                        width: 150
                      type: thumbnail
                    - parameters:
                        colorspace: grey
                      type: colorspace
                    source:
                      attribute: main_image
                    target:
                      attribute: thumbnail
                  “naming_convention”:
                    abort_asset_creation_on_error: true
                    pattern: /(?P<product_ref>.*)\.jpg/
                    source:
                      property: code
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-families/videos
                  code: videos
                  labels:
                    en_US: Videos
                    fr_FR: Vidéos
                  product_link_rules:
                  - assign_assets_to:
                    - attribute: presentation_video
                      locale: "{{locale}}"
                      mode: replace
                    product_selections:
                    - field: categories
                      operator: IN
                      value:
                      - "{{category}}"
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-families/user_guides
                  code: user_guides
                  labels:
                    en_US: User guides
                    fr_FR: Guides utilisateur
                  product_link_rules:
                  - assign_assets_to:
                    - attribute: user_instructions
                      locale: "{{locale}}"
                      mode: replace
                    product_selections:
                    - field: sku
                      operator: =
                      value: "{{product_ref}}"
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/asset-families
                next:
                  href: https://demo.akeneo.com/api/rest/v1/asset-families?search_after=2x055w%3D%3D
                self:
                  href: https://demo.akeneo.com/api/rest/v1/asset-families
          description: Return asset families paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of asset families
      tags:
      - Asset family
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/asset-families/{asset_family_code}/assets:
    get:
      description: This endpoint allows you to get a list of assets of a given asset
        family. Assets are paginated. This endpoint is case sensitive on the asset
        family code.
      operationId: get_assets
      parameters:
      - description: "Filter assets, for more details see the <a href=\"/documentation/filter.html#filter-assets\"\
          >Asset filters</a> section"
        in: query
        name: search
        schema:
          type: string
      - description: "Filter asset values to return scopable asset attributes for\
          \ the given channel as well as the non localizable/non scopable asset attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#asset-values-by-channel\"\
          >Filter asset values by channel</a> section"
        in: query
        name: channel
        schema:
          type: string
      - description: "Filter asset values to return localizable attributes for the\
          \ given locales as well as the non localizable/non scopable asset attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#asset-values-by-locale\"\
          >Filter asset values by locale</a> section"
        in: query
        name: locales
        schema:
          type: string
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
            _embedded:
              example:
                _items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/allie_jean_model_picture
                  code: allie_jean_model_picture
                  created: 2021-05-31T09:23:34+00:00
                  updated: 2021-05-31T09:23:34+00:00
                  values:
                    media_link:
                    - data: allie_jean_model_picture.png
                    model_is_wearing_size:
                    - data: size_27
                    warning_mention:
                    - data: Photo not retouched
                      locale: en_US
                    - data: Photo non retouchée
                      locale: fr_FR
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/amy_socks_model_picture
                  code: amy_socks_model_picture
                  created: 2021-05-31T09:23:34+00:00
                  updated: 2021-05-31T09:23:34+00:00
                  values:
                    media_link:
                    - data: amy_socks_model_picture.png
                    model_is_wearing_size:
                    - data: unique_size
                    warning_mention:
                    - data: Photo not retouched
                      locale: en_US
                    - data: Photo non retouchée
                      locale: fr_FR
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/alice_blouse_model_picture
                  code: alice_blouse_model_picture
                  created: 2021-05-31T09:23:34+00:00
                  updated: 2021-05-31T09:23:34+00:00
                  values:
                    media_link:
                    - data: alice_blouse_model_picture.png
                    model_is_wearing_size:
                    - data: small
                    warning_mention:
                    - data: Photo retouched
                      locale: en_US
                    - data: Photo non retouchée
                      locale: fr_FR
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets
                next:
                  href: https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets?search_after=2x088w%3D%3D
                self:
                  href: https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets
          description: Return the assets of the given asset family paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get the list of the assets of a given asset family
      tags:
      - Asset
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update and/or create several assets\
        \ of one given asset family at once. Learn more about the <a href=\"/documentation/update.html#patch-asset-attribute-values\"\
        >Update behavior</a>. Note that if the asset does not already exist for the\
        \ given asset family, it creates it. This endpoint is case sensitive on the\
        \ asset family code."
      operationId: patch_assets
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              example:
              - code: sku_54628_picture1
                created: 2021-05-31T09:23:34+00:00
                updated: 2021-05-31T09:23:34+00:00
                values:
                  end_of_use_date:
                  - data: 02/03/2021
                  main_colors:
                  - data:
                    - red
                    - purple
                  media_preview:
                  - data: sku_54628_picture1.jpg
                  model_wears_size:
                  - data: s
                  photographer:
                  - data: ben_levy
              - code: sku_54628_picture2
                created: 2021-05-31T09:23:34+00:00
                updated: 2021-05-31T09:23:34+00:00
                values:
                  end_of_use_date:
                  - data: 02/03/2021
                  main_colors:
                  - data:
                    - blue
                    - white
                  media_preview:
                  - data: sku_54628_picture2.jpg
                  model_wears_size:
                  - data: s
                  photographer:
                  - data: ben_levy
              - code: sku_54628_picture3
                created: 2021-05-31T09:23:34+00:00
                updated: 2021-05-31T09:23:34+00:00
                values:
                  end_of_use_date:
                  - data: 02/03/2021
                  main_colors:
                  - data:
                    - purple
                  media_preview:
                  - data: sku_54628_picture3.jpg
                  model_wears_size:
                  - data: s
                  photographer:
                  - data: ben_levy
              items:
                $ref: '#/components/schemas/patch_assets_request_inner'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/patch_assets_200_response_inner'
                type: array
          description: OK
          x-details: Returns an JSON array in which each object gives you the status
            of each asset creation or update
          x-no-entity: true
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several assets
      tags:
      - Asset
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/asset-families/{asset_family_code}/assets/{code}:
    delete:
      description: This endpoint allows you to delete a given asset. This endpoint
        is case sensitive on the asset family code.
      operationId: delete_assets__code_
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No content to return
          x-details: Means that the deletion was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Delete an asset
      tags:
      - Asset
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    get:
      description: This endpoint allows you to get the information about a given asset
        for a given asset family. This endpoint is case sensitive on the asset family
        code.
      operationId: get_assets__code_
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_assets_request_inner'
          description: OK
          x-details: Returns the content of the asset in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an asset of a given asset family
      tags:
      - Asset
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given asset of a given asset\
        \ family. Learn more about the <a href=\"/documentation/update.html#patch-asset-attribute-values\"\
        >Update behavior</a>. Note that if the asset does not already exist for the\
        \ given asset family, it creates it. This endpoint is case sensitive on the\
        \ asset family code."
      operationId: patch_asset__code_
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_assets_request_inner'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an asset
      tags:
      - Asset
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/asset-families/{asset_family_code}/attributes:
    get:
      description: This endpoint allows you to get the list of attributes of a given
        asset family.
      operationId: get_asset_families__code__attributes
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner'
                type: array
          description: Return the attributes of the given asset family
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get the list of attributes of a given asset family
      tags:
      - Asset attribute
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options:
    get:
      description: This endpoint allows you to get a list of attribute options for
        a given asset family.
      operationId: get_asset_family_attributes__attribute_code__options
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_asset_family_attributes__attribute_code__options_200_response_inner'
                type: array
          description: Return the options of the given attribute of the given asset
            family
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a list of attribute options of a given attribute for a given asset
        family
      tags:
      - Asset attribute option
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}:
    get:
      description: This endpoint allows you to get the information about a given asset
        attribute option.
      operationId: get_asset_attributes__attribute_code__options__code_
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_asset_family_attributes__attribute_code__options_200_response_inner'
          description: OK
          x-details: Returns the content of the asset attribute option in JSON format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an attribute option for a given attribute of a given asset family
      tags:
      - Asset attribute option
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given option for a given\
        \ attribute and a given asset family. Learn more about the <a href=\"/documentation/update.html#update-behavior\"\
        >Update behavior</a>. Note that if the option does not already exist for the\
        \ given attribute of the given asset family, it creates it."
      operationId: patch_asset_attributes__attribute_code__options__code_
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/get_asset_family_attributes__attribute_code__options_200_response_inner'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an asset attribute option for a given asset family
      tags:
      - Asset attribute option
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/asset-families/{asset_family_code}/attributes/{code}:
    get:
      description: This endpoint allows you to get the information about a given attribute
        for a given asset family.
      operationId: get_asset_family_attributes__code_
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner'
          description: OK
          x-details: Returns the content of the asset attribute in JSON format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an attribute of a given asset family
      tags:
      - Asset attribute
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given attribute for a given\
        \ asset family. Note that if the attribute does not already exist for the\
        \ given asset family, it creates it."
      operationId: patch_asset_family_attributes__code_
      parameters:
      - description: Code of the asset family
        in: path
        name: asset_family_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an attribute of a given asset family
      tags:
      - Asset attribute
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/asset-families/{code}:
    get:
      description: This endpoint allows you to get the information about a given asset
        family.
      operationId: get_asset_family__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_asset_family__code__200_response'
          description: OK
          x-details: Returns the content of the asset family in JSON format.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an asset family
      tags:
      - Asset family
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given asset family. Note\
        \ that if the asset family does not already exist, it creates it."
      operationId: patch_asset_family__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/get_asset_family__code__200_response'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an asset family
      tags:
      - Asset family
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/asset-media-files:
    post:
      description: This endpoint allows you to create a new media file and associate
        it to a media file attribute value of an asset.
      operationId: post_asset_media_files
      parameters:
      - description: "Equal to 'multipart/form-data', no other value allowed"
        in: header
        name: Content-type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_asset_media_files_request'
        required: false
        x-form-data: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Asset-media-file-code:
              description: Code of the media file
              schema:
                type: string
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the media file creation was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `multipart/form-data`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new media file for an asset
      tags:
      - Asset media file
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/asset-media-files/{code}:
    get:
      description: This endpoint allows you to download a given media file that is
        associated with an asset.
      operationId: get_asset_media_files__code
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
          x-content-type: Mime-type of the media file
          x-details: Returns the binary of the media file
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Download the media file associated to an asset
      tags:
      - Asset media file
      x-content-type: Mime-type of the media file
      x-ee: true
      x-versions:
      - "3.2"
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/asset-tags:
    get:
      description: This endpoint allows you to get a list of PAM asset tags. PAM asset
        tags are paginated.
      operationId: get_asset_tags
      parameters:
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PAM_Asset_Tags'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-tags/tshirt
                  code: tshirt
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-tags/belt
                  code: belt
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/asset-tags/red
                  code: red
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/asset-tags?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/asset-tags?page=3&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/asset-tags?page=1&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/asset-tags?page=2&limit=3
            current_page:
              example: 2
          description: Returns PAM asset tags paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of PAM asset tags
      tags:
      - PAM asset tag
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
  /api/rest/v1/asset-tags/{code}:
    get:
      description: This endpoint allows you to get the information about a given PAM
        asset tag.
      operationId: get_asset_tags__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_asset_tags__code__200_response'
          description: OK
          x-details: Returns the content of the asset tag in JSON format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a PAM asset tag
      tags:
      - PAM asset tag
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given PAM asset tag. Know\
        \ more about <a href=\"/documentation/update.html#update-behavior\">Update\
        \ behavior</a>. Note that if no tag exists for the given code, it creates\
        \ it."
      operationId: patch_asset_tags__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/get_asset_tags__code__200_response'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a PAM asset tag
      tags:
      - PAM asset tag
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/assets:
    get:
      description: This endpoint allows you to get a list of PAM assets. PAM assets
        are paginated.
      operationId: get_pam_assets
      parameters:
      - description: "Pagination method type, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: pagination_type
        schema:
          default: page
          enum:
          - page
          - search_after
          type: string
          x-validation-rules: One of the following values
        x-validation-rules: One of the following values
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PAM_Assets'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture
                  categories:
                  - tshirts_assets
                  code: tshirt_artemis_main_picture
                  description: The main picture of the Artemis t-shirt
                  end_of_use: 2019-09-01T00:00:00+0200
                  localizable: false
                  reference_files:
                  - _link:
                      download:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download
                      self:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale
                    code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg
                  tags:
                  - tshirts
                  - red
                  - summer
                  variation_files:
                  - _link:
                      download:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download
                      self:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale
                    code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg
                    scope: e_commerce
                  - _link:
                      download:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download
                      self:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale
                    code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg
                    scope: print
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture
                  categories:
                  - tshirts_assets
                  code: tshirt_artemis_profile_picture
                  description: The profile picture of the Artemis t-shirt
                  end_of_use: 2019-09-01T00:00:00+0200
                  localizable: false
                  reference_files:
                  - _link:
                      download:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/reference-files/no_locale/download
                      self:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/reference-files/no_locale
                    code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture.jpg
                  tags:
                  - tshirts
                  - red
                  - summer
                  - profile_views
                  variation_files:
                  - _link:
                      download:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/ecommerce/no_locale/download
                      self:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/ecommerce/no_locale
                    code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture_ecommerce.jpg
                    scope: e_commerce
                  - _link:
                      download:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/print/no_locale/download
                      self:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/print/no_locale
                    code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture_print.jpg
                    scope: print
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual
                  categories:
                  - tshirts_assets
                  code: tshirt_artemis_maintenance_manual
                  description: The maintenance manual of the Artemis t-shirt
                  localizable: true
                  reference_files:
                  - _link:
                      download:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/en_US/download
                      self:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/en_US
                    code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_maintenance_manual_en_US.pdf
                    locale: en_US
                  - _link:
                      download:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/fr_FR/download
                      self:
                        href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/fr_FR
                    code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_maintenance_manual_fr_FR.pdf
                    locale: fr_FR
                  tags:
                  - tshirts
                  - manuals
                  variation_files: []
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/assets?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/assets?page=3&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/assets?page=1&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/assets?page=2&limit=3
            current_page:
              example: 2
          description: Returns PAM assets paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of PAM assets
      tags:
      - PAM asset
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update several PAM assets at once.
      operationId: patch_pam_assets
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_pam_assets_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"tshirt_aria_main_picture\",\"status_code\"\
                :201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"tshirt_artemis_maintenance_manual\"\
                ,\"status_code\":422,\"message\":\"Category \"short_sleeve\" does\
                \ not exist.\"}"
            x-example-3:
              example: "{\"line\":3,\"code\":\"tshirt_artemis_main_picture\",\"status_code\"\
                :204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several PAM assets
      tags:
      - PAM asset
      x-body-by-line: "Contains several lines, each line is a PAM asset in JSON format"
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new PAM asset.
      operationId: post_pam_assets
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_pam_assets_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new PAM asset
      tags:
      - PAM asset
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}:
    get:
      description: This endpoint allows you to get the information about a reference
        file of a given PAM asset.
      operationId: get_reference_files__locale_code_
      parameters:
      - description: Code of the asset
        in: path
        name: asset_code
        required: true
        schema:
          type: string
      - description: Code of the locale if the asset is localizable or equal to `no-locale`
          if the asset is not localizable
        in: path
        name: locale_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_reference_files__locale_code__200_response'
          description: OK
          x-details: Returns the content of the reference file in JSON format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a reference file
      tags:
      - PAM asset reference file
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - application/json
      - code
      - message
    post:
      description: This endpoint allows you to upload a new reference file for a given
        PAM asset and locale. It will also automatically generate all the variation
        files corresponding to this reference file.
      operationId: post_reference_files__locale_code_
      parameters:
      - description: Code of the asset
        in: path
        name: asset_code
        required: true
        schema:
          type: string
      - description: Code of the locale if the asset is localizable or equal to `no-locale`
          if the asset is not localizable
        in: path
        name: locale_code
        required: true
        schema:
          type: string
      - description: "Equal to 'multipart/form-data', no other value allowed"
        in: header
        name: Content-type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_reference_files__locale_code__request'
        required: false
        x-form-data: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_reference_files__locale_code__201_response'
          description: Uploaded
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: "Means that the reference file upload was successful. Beware\
            \ that even if the reference file upload is complete, some variation files\
            \ generations could have failed. If so, you will see a warning message\
            \ in the response body."
          x-no-entity: true
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `multipart/form-data`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Upload a new reference file
      tags:
      - PAM asset reference file
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download:
    get:
      description: This endpoint allows you to download a given reference file.
      operationId: get_reference_files__channel_code__locale_code__download
      parameters:
      - description: Code of the asset
        in: path
        name: asset_code
        required: true
        schema:
          type: string
      - description: Code of the locale if the asset is localizable or equal to `no-locale`
          if the asset is not localizable
        in: path
        name: locale_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
          x-content-type: Mime-type of the reference file
          x-details: Returns the binary of the reference file
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Download a reference file
      tags:
      - PAM asset reference file
      x-content-type: Mime-type of the reference file
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}:
    get:
      description: This endpoint allows you to get the information about a variation
        file of a given PAM asset.
      operationId: get_variation_files__channel_code__locale_code
      parameters:
      - description: Code of the asset
        in: path
        name: asset_code
        required: true
        schema:
          type: string
      - description: Code of the channel
        in: path
        name: channel_code
        required: true
        schema:
          type: string
      - description: Code of the locale if the asset is localizable or equal to `no-locale`
          if the asset is not localizable
        in: path
        name: locale_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_variation_files__channel_code__locale_code_200_response'
          description: OK
          x-details: Returns the content of the variation file in JSON format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a variation file
      tags:
      - PAM asset variation file
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - application/json
      - code
      - message
    post:
      description: "This endpoint allows you to upload a new variation file for a\
        \ given PAM asset, channel and locale."
      operationId: post_variation_files__channel_code__locale_code_
      parameters:
      - description: Code of the asset
        in: path
        name: asset_code
        required: true
        schema:
          type: string
      - description: Code of the channel
        in: path
        name: channel_code
        required: true
        schema:
          type: string
      - description: Code of the locale if the asset is localizable or equal to `no-locale`
          if the asset is not localizable
        in: path
        name: locale_code
        required: true
        schema:
          type: string
      - description: "Equal to 'multipart/form-data', no other value allowed"
        in: header
        name: Content-type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_reference_files__locale_code__request'
        required: false
        x-form-data: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `multipart/form-data`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Upload a new variation file
      tags:
      - PAM asset variation file
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}/download:
    get:
      description: This endpoint allows you to download a given variation file.
      operationId: get_variation_files__channel_code__locale_code__download
      parameters:
      - description: Code of the asset
        in: path
        name: asset_code
        required: true
        schema:
          type: string
      - description: Code of the channel
        in: path
        name: channel_code
        required: true
        schema:
          type: string
      - description: Code of the locale if the asset is localizable or equal to `no-locale`
          if the asset is not localizable
        in: path
        name: locale_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
          x-content-type: Mime-type of the variation file
          x-details: Returns the binary of the variation file
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Download a variation file
      tags:
      - PAM asset variation file
      x-content-type: Mime-type of the variation file
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/assets/{code}:
    get:
      description: This endpoint allows you to get the information about a given PAM
        asset.
      operationId: get_pam_assets__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_pam_assets_request'
          description: OK
          x-details: Returns the content of the PAM asset in JSON format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a PAM asset
      tags:
      - PAM asset
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given PAM asset. Know more\
        \ about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>.\
        \ Note that if no asset exists for the given code, it creates it."
      operationId: patch_pam_assets__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_pam_assets_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a PAM asset
      tags:
      - PAM asset
      x-deprecated: true
      x-ee: true
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/association-types:
    get:
      description: This endpoint allows you to get a list of association types. Association
        types are paginated and sorted by code.
      operationId: association_types_get_list
      parameters:
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association_types'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/association-types/X_SELL
                  code: X_SELL
                  is_quantified: false
                  is_two_way: false
                  labels:
                    en_US: Cross sell
                    fr_FR: Vente croisée
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/association-types/UPSELL
                  code: UPSELL
                  is_quantified: false
                  is_two_way: false
                  labels:
                    en_US: Upsell
                    fr_FR: Vente incitative
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/association-types/SUBSTITUTION
                  code: SUBSTITUTION
                  is_quantified: false
                  is_two_way: false
                  labels:
                    en_US: Substitution
                    fr_FR: Remplacement
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/association-types?page=1&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/association-types?page=1&limit=3
            current_page:
              example: 1
          description: Return association types paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a list of association types
      tags:
      - Association type
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update and/or create several association
        types at once.
      operationId: several_association_types_patch
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/several_association_types_patch_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"new_sell\",\"status_code\":201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"substitution\",\"status_code\":422,\"\
                message\":\"Property \\\"type\\\" does not exist. Check the standard\
                \ format documentation.\",\"_links\":{\"documentation\":{\"href\"\
                :\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_association_types__code_\"\
                }"
            x-example-3:
              example: "{\"line\":3,\"code\":\"x_cross_sell\",\"status_code\":204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several association types
      tags:
      - Association type
      x-body-by-line: "Contains several lines, each line is an association type in\
        \ JSON standard format"
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new association type.
      operationId: association_types_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/association_types_post_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new association type
      tags:
      - Association type
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/association-types/{code}:
    get:
      description: This endpoint allows you to get the information about a given association
        type.
      operationId: association_types_get
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/association_types_post_request'
          description: OK
          x-details: Returns the content of the association type in JSON standard
            format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an association type
      tags:
      - Association type
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given association type. Know\
        \ more about <a href=\"/documentation/update.html#update-behavior\">Update\
        \ behavior</a>. Note that if no association type exists for the given code,\
        \ it creates it."
      operationId: association_types_patch
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/association_types_post_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an association type
      tags:
      - Association type
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/attribute-groups:
    get:
      description: This endpoint allows you to get a list of attribute groups. Attribute
        groups are paginated and sorted by code.
      operationId: attribute_groups_get_list
      parameters:
      - description: "Filter attribute groups, for more details see the <a href=\"\
          /documentation/filter.html#filter-attribute-groups\">Filters</a> section."
        in: query
        name: search
        schema:
          type: string
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute_groups'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/attribute-groups/marketing
                  attributes:
                  - sku
                  - name
                  - description
                  - response_time
                  - release_date
                  - price
                  code: marketing
                  labels:
                    en_US: Marketing
                    fr_FR: Marketing
                  sort_order: 4
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/attribute-groups/technical
                  attributes:
                  - weight
                  - maximum_scan_size
                  - color_scanning
                  - power_requirements
                  - maximum_print_size
                  - sensor_type
                  - total_megapixels
                  - optical_zoom
                  - camera_type
                  code: technical
                  labels:
                    en_US: Technical
                    fr_FR: Technique
                  sort_order: 5
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/attribute-groups?page=1&limit=2
                next:
                  href: https://demo.akeneo.com/api/rest/v1/attribute-groups?page=4&limit=2
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/attribute-groups?page=2&limit=2
                self:
                  href: https://demo.akeneo.com/api/rest/v1/attribute-groups?page=3&limit=2
            current_page:
              example: 3
          description: Return attribute groups paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of attribute groups
      tags:
      - Attribute group
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update and/or create several attribute
        groups at once.
      operationId: several_attribute_groups_patch
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/several_attribute_groups_patch_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"technical\",\"status_code\":201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"marketing\",\"status_code\":422,\"\
                message\":\"Property \\\"type\\\" does not exist. Check the standard\
                \ format documentation.\",\"_links\":{\"documentation\":{\"href\"\
                :\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_attribute_groups__code_\"\
                }"
            x-example-3:
              example: "{\"line\":3,\"code\":\"design\",\"status_code\":204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several attribute groups
      tags:
      - Attribute group
      x-body-by-line: "Contains several lines, each line is an attribute group in\
        \ JSON standard format"
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new attribute group.
      operationId: attribute_groups_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/attribute_groups_post_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new attribute group
      tags:
      - Attribute group
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/attribute-groups/{code}:
    get:
      description: This endpoint allows you to get the information about a given attribute
        group.
      operationId: attribute_groups_get
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/attribute_groups_post_request'
          description: OK
          x-details: Returns the content of the attribute group in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an attribute group
      tags:
      - Attribute group
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given attribute group. Know\
        \ more about <a href=\"/documentation/update.html#update-behavior\">Update\
        \ behavior</a>. Note that if no attribute group exists for the given code,\
        \ it creates it."
      operationId: attribute_groups_patch
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/attribute_groups_post_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an attribute group
      tags:
      - Attribute group
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/attributes:
    get:
      description: This endpoint allows you to get a list of attributes. Attributes
        are paginated and sorted by code.
      operationId: get_attributes
      parameters:
      - description: "Filter attributes, for more details see the <a href=\"/documentation/filter.html#filter-attributes\"\
          >Filters</a> section."
        in: query
        name: search
        schema:
          type: string
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      - description: Return the options of 'select' column types (of a table attribute)
          in the response. (Only available since the 7.0 version)
        in: query
        name: with_table_select_options
        schema:
          default: false
          type: boolean
          x-from-version: "7.0"
        x-from-version: "7.0"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attributes'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/attributes/sku
                  allowed_extensions: []
                  available_locales: []
                  code: sku
                  decimals_allowed: false
                  group: other
                  group_labels:
                    en_US: Other
                    fr_FR: Autre
                  labels:
                    en_US: Identifier
                    fr_FR: Identifiant
                  localizable: false
                  negative_allowed: false
                  scopable: false
                  sort_order: 1
                  type: pim_catalog_identifier
                  unique: true
                  useable_as_grid_filter: true
                  wysiwyg_enabled: false
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/attributes/release_date
                  allowed_extensions: []
                  available_locales: []
                  code: release_date
                  date_max: 2017-08-08T22:00:00
                  date_min: 2017-06-28T08:00:00
                  decimals_allowed: false
                  group: marketing
                  labels:
                    en_US: Sale date
                    fr_FR: Date des soldes
                  localizable: false
                  negative_allowed: false
                  scopable: false
                  sort_order: 1
                  type: pim_catalog_date
                  unique: false
                  useable_as_grid_filter: true
                  wysiwyg_enabled: false
                - _links:
                    self:
                      href: http://localhost:8080/api/rest/v1/attributes/food_composition
                  allowed_extensions: []
                  available_locales: []
                  code: food_composition
                  group: product
                  guidelines: {}
                  labels:
                    en_US: Composition
                    fr_FR: Composition
                  localizable: false
                  scopable: false
                  sort_order: 0
                  table_configuration:
                  - code: ingredient
                    data_type: select
                    is_required_for_completeness: true
                    labels:
                      en_US: Ingredient
                      fr_FR: Ingrédient
                    validations: {}
                  - code: percentage
                    data_type: number
                    is_required_for_completeness: true
                    labels:
                      en_US: '%'
                      fr_FR: '%'
                    validations:
                      decimals_allowed: true
                      max: 100
                      min: 0
                  - code: allergen
                    data_type: boolean
                    is_required_for_completeness: false
                    labels:
                      en_US: Allergen
                      fr_FR: Allergène
                    validations: {}
                  type: pim_catalog_table
                  unique: false
                  useable_as_grid_filter: false
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/attributes?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/attributes?page=4&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/attributes?page=2&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/attributes?page=3&limit=3
            current_page:
              example: 3
          description: Return attributes paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of attributes
      tags:
      - Attribute
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update and/or create several attributes
        at once.
      operationId: patch_attributes
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_attributes_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"description\",\"status_code\":201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"short_description\",\"status_code\"\
                :422,\"message\":\"Group \"marketig\" does not exist.\"}"
            x-example-3:
              example: "{\"line\":3,\"code\":\"release_date\",\"status_code\":204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several attributes
      tags:
      - Attribute
      x-body-by-line: "Contains several lines, each line is an attribute in JSON standard\
        \ format"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new attribute.
      operationId: post_attributes
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_attributes_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new attribute
      tags:
      - Attribute
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/attributes/{attribute_code}/options:
    get:
      description: This endpoint allows you to get a list of attribute options. Attribute
        options are paginated and sorted by code.
      operationId: get_attributes__attribute_code__options
      parameters:
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute_Options'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/attributes/color/options/red
                  attribute: a_simple_select
                  code: red
                  labels:
                    en_US: Red
                    fr_FR: Rouge
                  sort_order: 1
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/attributes/color/options/black
                  attribute: a_simple_select
                  code: black
                  labels:
                    en_US: Black
                    fr_FR: Noir
                  sort_order: 2
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/attributes/color/options/purple
                  attribute: a_simple_select
                  code: purple
                  labels:
                    en_US: Purple
                    fr_FR: Violet
                  sort_order: 3
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=4&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=2&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=3&limit=3
            current_page:
              example: 3
          description: Return attribute options paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of attribute options
      tags:
      - Attribute option
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update several attribute options at
        once.
      operationId: patch_attributes__attribute_code__options
      parameters:
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_attributes__attribute_code__options_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"black\",\"status_code\":201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"red\",\"status_code\":422,\"message\"\
                :\"Property \"label\" does not exist. Check the API format documentation.\"\
                }"
            x-example-3:
              example: "{\"line\":3,\"code\":\"yellow\",\"status_code\":204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several attribute options
      tags:
      - Attribute option
      x-body-by-line: "Contains several lines, each line is an attribute option in\
        \ JSON standard format"
      x-versions:
      - "2.1"
      - "2.2"
      - "2.3"
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new attribute option.
      operationId: post_attributes__attribute_code__options
      parameters:
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_attributes__attribute_code__options_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new attribute option
      tags:
      - Attribute option
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/attributes/{attribute_code}/options/{code}:
    get:
      description: This endpoint allows you to get the information about a given attribute
        option.
      operationId: get_attributes__attribute_code__options__code_
      parameters:
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_attributes__attribute_code__options_request'
          description: OK
          x-details: Returns the content of the attribute option in JSON standard
            format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an attribute option
      tags:
      - Attribute option
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given attribute option. Know\
        \ more about <a href=\"/documentation/update.html#update-behavior\">Update\
        \ behavior</a>. Note that if no attribute option exists for the given code,\
        \ it creates it."
      operationId: patch_attributes__attribute_code__options__code_
      parameters:
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_attributes__attribute_code__options_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an attribute option
      tags:
      - Attribute option
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/attributes/{code}:
    get:
      description: This endpoint allows you to get the information about a given attribute.
      operationId: get_attributes__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      - description: Return the options of 'select' column types (of a table attribute)
          in the response. (Only available since the 7.0 version)
        in: query
        name: with_table_select_options
        schema:
          default: false
          type: boolean
          x-from-version: "7.0"
        x-from-version: "7.0"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_attributes_request'
          description: OK
          x-details: Returns the content of the attribute in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an attribute
      tags:
      - Attribute
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given attribute. Know more\
        \ about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>.\
        \ Note that if no attribute exists for the given code, it creates it."
      operationId: patch_attributes__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_attributes_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an attribute
      tags:
      - Attribute
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/catalogs:
    get:
      description: This endpoint allows you to get the list of catalogs you owned.
      operationId: get_app_catalogs
      parameters:
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 100
          maximum: 100
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogs'
          description: Return the paginated catalogs owned by the user making the
            request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
      summary: Get the list of owned catalogs
      tags:
      - Catalogs
      x-app-token: true
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    post:
      description: This endpoint allows you to create a new catalog.
      operationId: post_app_catalog
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_app_catalog_request'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_app_catalog_201_response'
          description: Created
          x-details: Means that the creation was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
          x-examples-per-version:
          - x-example:
              code: 422
              errors:
              - message: This value should not be blank.
                property: name
              - message: This value is too short. It should have 1 character or more.
                property: name
              message: Validation failed.
            x-version: SaaS
      summary: Create a new catalog
      tags:
      - Catalogs
      x-app-token: true
      x-versions:
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/catalogs/{id}:
    delete:
      description: This endpoint allows you to delete a catalog.
      operationId: delete_app_catalog
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: Deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
      summary: Delete a catalog
      tags:
      - Catalogs
      x-app-token: true
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    get:
      description: This endpoint allows you to get the information about a catalog.
      operationId: get_app_catalog
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_app_catalog_201_response'
          description: Return the catalog
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
      summary: Get a catalog
      tags:
      - Catalogs
      x-app-token: true
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: This endpoint allows you to update a catalog.
      operationId: patch_app_catalog
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_app_catalog_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_app_catalog_201_response'
          description: Updated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
          x-examples-per-version:
          - x-example:
              code: 422
              errors:
              - message: This value should not be blank.
                property: name
              - message: This value is too short. It should have 1 character or more.
                property: name
              message: Validation failed.
            x-version: SaaS
      summary: Update a catalog
      tags:
      - Catalogs
      x-app-token: true
      x-versions:
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/catalogs/{id}/mapped-products:
    get:
      description: "This endpoint allows you to get the list of products related to\
        \ a catalog when the mapping is enabled. Please, note that a disabled catalog\
        \ can return an HTTP 200 with a payload containing an error message, for more\
        \ details see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a>\
        \ section."
      operationId: get_app_catalog_mapped_products
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - description: Filter products that have been updated BEFORE the provided date
          (Only available on Catalogs endpoints)
        in: query
        name: updated_before
        schema:
          format: date
          type: string
          x-from-version: SaaS
        x-from-version: SaaS
      - description: Filter products that have been updated AFTER the provided date
          (Only available on Catalogs endpoints)
        in: query
        name: updated_after
        schema:
          format: date
          type: string
          x-from-version: SaaS
        x-from-version: SaaS
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
          description: Return the paginated **mapped** products
          x-examples-per-version:
          - x-example:
              _embedded:
                items:
                - code: sku-1234
                  title: Canon Video Visualiser RE-455X
                  uuid: 04f47a54-8cc9-4c51-90e9-eb9aace0865f
                - code: sku-1235
                  title: Trust Cuby Pro
                  uuid: 06dc8c5b-9e2f-4423-b9dd-31a3aaa0a048
                - code: sku-1236
                  title: Trust Urban Revolt
                  uuid: 0c3635f9-fedc-4bbd-96ab-856f69746b56
                - code: sku-1237
                  title: Microsoft LifeCam Studio
                  uuid: 0e957ed4-fa44-48de-b6c7-7149d890fb3a
              _links:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/catalogs/d259aecf-3ec1-4b07-ae0f-ce234b86c025/mapped-products?limit=100
                self:
                  href: https://demo.akeneo.com/api/rest/v1/catalogs/d259aecf-3ec1-4b07-ae0f-ce234b86c025/mapped-products?limit=100
            x-version: SaaS
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
      summary: Get the list of mapped products related to a catalog
      tags:
      - Catalog products
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/catalogs/{id}/mapping-schemas/product:
    delete:
      description: This endpoint allows you to delete the product mapping schema related
        to a catalog
      operationId: delete_app_catalogs_mapping_schema_product
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: Deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
      summary: Delete the product mapping schema related to a catalog
      tags:
      - Mapping schema for products
      x-app-token: true
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    get:
      description: This endpoint allows you to retrieve the product mapping schema
        related to a catalog
      operationId: get_app_catalogs_mapping_schema_product
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_app_catalogs_mapping_schema_product_200_response'
          description: Return product mapping schema related to a catalog
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
      summary: Get the product mapping schema related to a catalog
      tags:
      - Mapping schema for products
      x-app-token: true
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    put:
      description: This endpoint allows you to create or update the product mapping
        schema related to a catalog
      operationId: put_app_catalogs_mapping_schema_product
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/get_app_catalogs_mapping_schema_product_200_response'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
          x-examples-per-version:
          - x-example:
              code: 422
              errors:
              - message: You must provide a valid schema.
                property: product_mapping_schema
              message: Validation failed.
            x-version: SaaS
      summary: Create or update the product mapping schema related to a catalog
      tags:
      - Mapping schema for products
      x-app-token: true
      x-versions:
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/catalogs/{id}/product-uuids:
    get:
      description: "This endpoint allows you to get the list of uuids of products\
        \ contained in a catalog. Please, note that a disabled catalog can return\
        \ an HTTP 200 with a payload containing an error message, for more details\
        \ see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a> section."
      operationId: get_app_catalog_product_uuids
      parameters:
      - description: Id of the catalog
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - description: Filter products that have been updated BEFORE the provided date
          (Only available on Catalogs endpoints)
        in: query
        name: updated_before
        schema:
          format: date
          type: string
          x-from-version: SaaS
        x-from-version: SaaS
      - description: Filter products that have been updated AFTER the provided date
          (Only available on Catalogs endpoints)
        in: query
        name: updated_after
        schema:
          format: date
          type: string
          x-from-version: SaaS
        x-from-version: SaaS
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product_uuids'
          description: Return the paginated product uuids
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
      summary: Get the list of product uuids
      tags:
      - Catalog products
      x-app-token: true
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/catalogs/{id}/products:
    get:
      description: "This endpoint allows you to get the list of products related to\
        \ a catalog. Products are paginated and they can be filtered. In the Enterprise\
        \ Edition, permissions based on your app settings are applied to the set of\
        \ products you request. Please, note that a disabled catalog can return an\
        \ HTTP 200 with a payload containing an error message, for more details see\
        \ the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a> section."
      operationId: get_app_catalog_products
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - description: Filter products that have been updated BEFORE the provided date
          (Only available on Catalogs endpoints)
        in: query
        name: updated_before
        schema:
          format: date
          type: string
          x-from-version: SaaS
        x-from-version: SaaS
      - description: Filter products that have been updated AFTER the provided date
          (Only available on Catalogs endpoints)
        in: query
        name: updated_after
        schema:
          format: date
          type: string
          x-from-version: SaaS
        x-from-version: SaaS
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
          description: Return the paginated products
          x-examples-per-version:
          - x-example:
              _embedded:
                items:
                - associations:
                    PACK:
                      groups: []
                      product_models: []
                      products: []
                    SUBSTITUTION:
                      groups: []
                      product_models: []
                      products: []
                    UPSELL:
                      groups: []
                      product_models: []
                      products: []
                    X_SELL:
                      groups: []
                      product_models: []
                      products: []
                  categories:
                  - Cloths
                  created: 2022-03-14T15:25:45+00:00
                  enabled: true
                  family: mens_clothing
                  groups: []
                  quantified_associations: {}
                  updated: 2022-06-24T12:54:58+00:00
                  uuid: 00073089-1310-4340-bcf0-9e33e4019b79
                  values:
                    Default_Price:
                    - data:
                      - amount: "10.00"
                        currency: USD
                    Name:
                    - data: Product 416
                    Weight:
                    - data:
                        amount: 10
                        unit: KILOGRAM
                    sku:
                    - data: product_416
                - associations:
                    PACK:
                      groups: []
                      product_models: []
                      products: []
                    SUBSTITUTION:
                      groups: []
                      product_models: []
                      products: []
                    UPSELL:
                      groups: []
                      product_models: []
                      products: []
                    X_SELL:
                      groups: []
                      product_models: []
                      products: []
                  categories:
                  - Cloths
                  created: 2022-03-14T15:25:45+00:00
                  enabled: true
                  family: mens_clothing
                  groups: []
                  quantified_associations: {}
                  updated: 2022-06-24T12:55:01+00:00
                  uuid: 00248acf-f1f7-45cb-b409-c8c4b9a17a86
                  values:
                    Default_Price:
                    - data:
                      - amount: "10.00"
                        currency: USD
                    Name:
                    - data: Product 470
                    Weight:
                    - data:
                        amount: 10
                        unit: KILOGRAM
                    sku:
                    - data: product_470
              _links:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/catalogs/65f5a521-e65c-4d7b-8be8-1f267fa2729c/products?limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/catalogs/65f5a521-e65c-4d7b-8be8-1f267fa2729c/products?search_after=0059d30f-6874-4277-81ed-3b3657c83f5e&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/catalogs/65f5a521-e65c-4d7b-8be8-1f267fa2729c/products?limit=3
            x-version: SaaS
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
      summary: Get the list of products related to a catalog
      tags:
      - Catalog products
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/catalogs/{id}/products/{uuid}:
    get:
      description: "This endpoint allows you to get a specific product related to\
        \ a catalog. In the Enterprise Edition, permissions based on your app settings\
        \ are applied on the product you request. Please, note that a disabled catalog\
        \ can return an HTTP 200 with a payload containing an error message, for more\
        \ details see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a>\
        \ section."
      operationId: get_app_catalog_products_uuid
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Product UUID
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Return the product
          x-examples-per-version:
          - x-example:
              categories: []
              enabled: true
              family: tshirt
              groups: []
              uuid: a5eed606-4f98-4d8c-b926-5b59f8fb0ee7
              values:
                name:
                - data: Top
                  locale: en_US
            x-version: SaaS
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list catalogs.
          description: Access forbidden
          x-details: The app does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist
                or you can't access it.
          description: Catalog not found
          x-details: The catalog id given in the URI does not exist
      summary: Get a product related to a catalog
      tags:
      - Catalog products
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/categories:
    get:
      description: This endpoint allows you to get a list of categories. Categories
        are paginated and sorted by `root/left`.
      operationId: get_categories
      parameters:
      - description: "Filter categories, for more details see the <a href=\"/documentation/filter.html#filter-categories\"\
          >Filters</a> section."
        in: query
        name: search
        schema:
          type: string
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      - description: Return information about category position into its category
          tree (only available since the 7.0 version)
        in: query
        name: with_position
        schema:
          type: boolean
          x-from-version: "7.0"
        x-from-version: "7.0"
      - description: Return attribute values of the category (only available on SaaS
          platforms)
        in: query
        name: with_enriched_attributes
        schema:
          type: boolean
          x-from-version: SaaS
        x-from-version: SaaS
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/categories/winter_collection
                  code: winter_collection
                  labels:
                    de_DE: Winter-Kollektion
                    en_US: Winter collection
                    fr_FR: Collection hiver
                  position: 1
                  updated: 2021-05-21T11:32:00+02:00
                  values:
                    description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US:
                      attribute_code: description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26
                      channel: ecommerce
                      data: |
                        <p>Winter collection description</p>
                      locale: en_US
                      type: textarea
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/categories/woman
                  code: woman
                  labels:
                    de_DE: Damen
                    en_US: Woman
                    fr_FR: Femme
                  parent: winter_collection
                  position: 1
                  updated: 2021-04-21T10:41:02+02:00
                  values: {}
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/categories/man
                  code: man
                  labels:
                    de_DE: Herren
                    en_US: Man
                    fr_FR: Homme
                  parent: winter_collection
                  position: 2
                  updated: 2021-03-02T12:59:59+02:00
                  values: {}
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/categories/kids
                  code: kids
                  labels:
                    de_DE: Kinder
                    en_US: Kids
                    fr_FR: Enfant
                  parent: winter_collection
                  position: 3
                  updated: 2021-01-03T12:40:00+02:00
                  values: {}
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/categories/summer_collection
                  code: summer_collection
                  labels:
                    de_DE: Sommer-Kollektion
                    en_US: Summer collection
                    fr_FR: Collection été
                  position: 1
                  updated: 2021-04-04T09:42:00+02:00
                  values: {}
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/categories?page=1&limit=5
                next:
                  href: https://demo.akeneo.com/api/rest/v1/categories?page=3&limit=5
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/categories?page=1&limit=5
                self:
                  href: https://demo.akeneo.com/api/rest/v1/categories?page=2&limit=5
            current_page:
              example: 2
          description: Return categories paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of categories
      tags:
      - Category
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update several categories at once.
      operationId: patch_categories
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_categories_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"spring_collection\",\"status_code\"\
                :201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"woman\",\"status_code\":422,\"message\"\
                :\"Category \"spring_collectionn\" does not exist.\"}"
            x-example-3:
              example: "{\"line\":3,\"code\":\"man\",\"status_code\":204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several categories
      tags:
      - Category
      x-body-by-line: "Contains several lines, each line is a category in JSON standard\
        \ format"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new category.
      operationId: post_categories
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_categories_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new category
      tags:
      - Category
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/categories/{code}:
    get:
      description: This endpoint allows you to get the information about a given category.
      operationId: get_categories__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      - description: Return information about category position into its category
          tree (only available since the 7.0 version)
        in: query
        name: with_position
        schema:
          type: boolean
          x-from-version: "7.0"
        x-from-version: "7.0"
      - description: Return attribute values of the category (only available on SaaS
          platforms)
        in: query
        name: with_enriched_attributes
        schema:
          type: boolean
          x-from-version: SaaS
        x-from-version: SaaS
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_categories_request'
          description: OK
          x-details: Returns the content of the category in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a category
      tags:
      - Category
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given category. Know more\
        \ about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>.\
        \ Note that if no category exists for the given code, it creates it."
      operationId: patch_categories__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_categories_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a category
      tags:
      - Category
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/category-media-files/{code}/download:
    get:
      description: This endpoint allows you to download a given media file that is
        used as an attribute value of a enriched category.
      operationId: get_category_media_files__code__download
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
          x-content-type: Mime-type of the media file
          x-details: Returns the binary of the media file
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Download a category media file
      tags:
      - Category
      x-content-type: Mime-type of the media file
      x-versions:
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/channels:
    get:
      description: This endpoint allows you to get a list of channels. Channels are
        paginated and sorted by code.
      operationId: get_channels
      parameters:
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channels'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/channels/ecommerce
                  category_tree: master
                  code: ecommerce
                  conversion_units:
                    a_metric: KILOWATT
                    a_metric_negative: CELSIUS
                  currencies:
                  - USD
                  - EUR
                  labels:
                    de_DE: E-commerce
                    en_US: Ecommerce
                    fr_FR: E-commerce
                  locales:
                  - en_US
                  - fr_FR
                  - de_DE
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/channels/mobile
                  category_tree: master
                  code: mobile
                  conversion_units:
                    a_metric: KILOWATT
                    a_metric_negative: CELSIUS
                  currencies:
                  - USD
                  - EUR
                  labels:
                    de_DE: Mobile
                    en_US: Mobile
                    fr_FR: Mobile
                  locales:
                  - en_US
                  - fr_FR
                  - de_DE
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/channels/print
                  category_tree: master
                  code: print
                  conversion_units: {}
                  currencies:
                  - USD
                  - EUR
                  labels:
                    de_DE: Print
                    en_US: Print
                    fr_FR: Print
                  locales:
                  - en_US
                  - fr_FR
                  - de_DE
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/channels?page=1&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/channels?page=1&limit=3
            current_page:
              example: 1
          description: Return channels paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a list of channels
      tags:
      - Channel
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update and/or create several channels
        at once.
      operationId: several_channels_patch
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/several_channels_patch_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"ecommerce_fr\",\"status_code\":201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"ecommerce_ch\",\"status_code\":422,\"\
                message\":\"Property \\\"type\\\" does not exist. Check the standard\
                \ format documentation.\",\"_links\":{\"documentation\":{\"href\"\
                :\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_channels__code_\"\
                }"
            x-example-3:
              example: "{\"line\":3,\"code\":\"tablet\",\"status_code\":204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several channels
      tags:
      - Channel
      x-body-by-line: "Contains several lines, each line is a channel in JSON standard\
        \ format"
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new channel.
      operationId: channels_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/channels_post_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new channel
      tags:
      - Channel
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/channels/{code}:
    get:
      description: This endpoint allows you to get the information about a given channel.
      operationId: get_channels__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channels_post_request'
          description: OK
          x-details: Returns the content of the channel in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a channel
      tags:
      - Channel
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given channel. Know more\
        \ about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>.\
        \ Note that if no channel exists for the given code, it creates it."
      operationId: channels_patch
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/channels_post_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a channel
      tags:
      - Channel
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/currencies:
    get:
      description: This endpoint allows you to get a list of currencies. Currencies
        are paginated and sorted by code.
      operationId: currencies_get_list
      parameters:
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currencies'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/currencies/ADP
                  code: ADP
                  enabled: true
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/currencies/AED
                  code: AED
                  enabled: true
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/currencies/AFA
                  code: AFA
                  enabled: false
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/currencies?page=1&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/currencies?page=1&limit=3
            current_page:
              example: 1
          description: Return currencies paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a list of currencies
      tags:
      - Currency
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
  /api/rest/v1/currencies/{code}:
    get:
      description: This endpoint allows you to get the information about a given currency.
      operationId: currencies_get
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currencies_get_200_response'
          description: OK
          x-details: Returns the content of the currency in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a currency
      tags:
      - Currency
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/families:
    get:
      description: This endpoint allows you to get a list of families. Families are
        paginated and sorted by code.
      operationId: get_families
      parameters:
      - description: "Filter families, for more details see the <a href=\"/documentation/filter.html#filter-families\"\
          >Filters</a> section."
        in: query
        name: search
        schema:
          type: string
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Families'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/families/tshirt
                  attribute_as_image: picture
                  attribute_as_label: name
                  attribute_requirements:
                    ecommerce:
                    - sku
                    - name
                    - description
                    - price
                    - size
                    - color
                    tablet:
                    - sku
                    - name
                    - description
                    - price
                  attributes:
                  - sku
                  - name
                  - description
                  - price
                  - size
                  - color
                  - picture
                  code: tshirt
                  labels:
                    en_US: Tshirt
                    fr_FR: Tshirt
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/families/caps
                  attribute_as_image: picture
                  attribute_as_label: name
                  attribute_requirements:
                    ecommerce:
                    - sku
                    - name
                    - description
                    - price
                    - color
                    tablet:
                    - sku
                    - name
                    - description
                    - price
                  attributes:
                  - sku
                  - name
                  - description
                  - price
                  - color
                  - picture
                  code: caps
                  labels:
                    en_US: Caps
                    fr_FR: Casquettes
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/families?page=1&limit=2
                next:
                  href: https://demo.akeneo.com/api/rest/v1/families?page=3&limit=2
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/families?page=1&limit=2
                self:
                  href: https://demo.akeneo.com/api/rest/v1/families?page=2&limit=2
            current_page:
              example: 2
          description: Return families paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of families
      tags:
      - Family
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    patch:
      description: This endpoint allows you to update and/or create several families
        at once.
      operationId: patch_families
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_families_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"tshirt\",\"status_code\":201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"cap\",\"status_code\":422,\"message\"\
                :\"Attribute \"descripion\" does not exist.\"}"
            x-example-3:
              example: "{\"line\":3,\"code\":\"mug\",\"status_code\":204}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several families
      tags:
      - Family
      x-body-by-line: "Contains several lines, each line is a family in JSON standard\
        \ format"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a new family.
      operationId: post_families
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_families_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new family
      tags:
      - Family
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/families/{code}:
    get:
      description: This endpoint allows you to get the information about a given family.
      operationId: get_families__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_families_request'
          description: OK
          x-details: Returns the content of the family in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a family
      tags:
      - Family
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given family. Know more about\
        \ <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>.\
        \ Note that if no family exists for the given code, it creates it."
      operationId: patch_families__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_families_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a family
      tags:
      - Family
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/families/{family_code}/variants:
    get:
      description: This endpoint allows you to get a list of family variants. Family
        variants are paginated and sorted by code.
      operationId: get_families__family_code__variants
      parameters:
      - description: Code of the family
        in: path
        name: family_code
        required: true
        schema:
          type: string
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family_Variants'
            code:
              example: shoesVariant
            labels:
              example:
                en_US: Shoes variant
                fr_FR: Variante de chaussures
            variant_attribute_sets:
              example:
              - attributes:
                - color
                - material
                axes:
                - color
                level: 1
              - attributes:
                - sku
                - size
                axes:
                - size
                level: 2
          description: Return family variants paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of family variants
      tags:
      - Family variant
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - labels
      - message
      - variant_attribute_sets
    patch:
      description: "This endpoint allows you to update and/or create several family\
        \ variants at once, for a given family."
      operationId: patch_families__family_code__variants
      parameters:
      - description: Code of the family
        in: path
        name: family_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_families__family_code__variants_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"shoes_by_size\",\"status_code\":201}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"shoes_by_color\",\"status_code\":204}"
            x-example-3:
              example: "{\"line\":3,\"code\":\"mug\",\"status_code\":422, \"message\"\
                :\"There should be at least one attribute defined as axis for the\
                \ attribute set for level \"1\"\"}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several family variants
      tags:
      - Family variant
      x-body-by-line: "Contains several lines, each line is a family in JSON standard\
        \ format"
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: This endpoint allows you to create a family variant.
      operationId: post_families__family_code__variants
      parameters:
      - description: Code of the family
        in: path
        name: family_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_families__family_code__variants_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new family variant
      tags:
      - Family
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/families/{family_code}/variants/{code}:
    get:
      description: This endpoint allows you to get the information about a given family
        variant.
      operationId: get_families__family_code__variants__code__
      parameters:
      - description: Code of the family
        in: path
        name: family_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_families__family_code__variants_request'
          description: OK
          x-details: Returns the content of the family variant in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a family variant
      tags:
      - Family variant
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given family variant. Know\
        \ more about <a href=\"/documentation/update.html#update-behavior\">Update\
        \ behavior</a>. Note that if no family variant exists for the given code,\
        \ it creates it."
      operationId: patch_families__family_code__variants__code__
      parameters:
      - description: Code of the family
        in: path
        name: family_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_families__family_code__variants_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a family variant
      tags:
      - Family variant
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/locales:
    get:
      description: This endpoint allows you to get a list of locales. Locales are
        paginated and sorted by code.
      operationId: get_locales
      parameters:
      - description: "Filter locales, for more details see the <a href=\"/documentation/filter.html\"\
          >Filters</a> section"
        in: query
        name: search
        schema:
          type: string
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locales'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/locales/en_US
                  code: en_US
                  enabled: true
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/locales/fr_FR
                  code: fr_FR
                  enabled: true
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/locales/de_DE
                  code: de_DE
                  enabled: true
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/locales/af_ZA
                  code: af_ZA
                  enabled: false
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/locales?page=1&limit=4
                next:
                  href: https://demo.akeneo.com/api/rest/v1/locales?page=2&limit=4
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/locales?page=1&limit=4
                self:
                  href: https://demo.akeneo.com/api/rest/v1/locales?page=2&limit=4
            current_page:
              example: 2
          description: Return locales paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a list of locales
      tags:
      - Locale
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
  /api/rest/v1/locales/{code}:
    get:
      description: This endpoint allows you to get the information about a given locale.
      operationId: get_locales__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_locales__code__200_response'
          description: OK
          x-details: Returns the content of the locale in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a locale
      tags:
      - Locale
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/measure-families:
    get:
      description: This endpoint allows you to get a list of measure families. Measure
        families are paginated and sorted by code.
      operationId: measure_families_get_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure_Families'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/measure-families/Area
                  code: Area
                  standard: SQUARE_METER
                  units:
                  - code: SQUARE_MILLIMETER
                    convert:
                      mul: "0.000001"
                    symbol: mm²
                  - code: SQUARE_CENTIMETER
                    convert:
                      mul: "0.0001"
                    symbol: cm²
                  - code: SQUARE_DECIMETER
                    convert:
                      mul: "0.01"
                    symbol: dm²
                  - code: SQUARE_METER
                    convert:
                      mul: "1"
                    symbol: m²
                  - code: CENTIARE
                    convert:
                      mul: "1"
                    symbol: ca
                  - code: SQUARE_DEKAMETER
                    convert:
                      mul: "100"
                    symbol: dam²
                  - code: ARE
                    convert:
                      mul: "100"
                    symbol: a
                  - code: SQUARE_HECTOMETER
                    convert:
                      mul: "10000"
                    symbol: hm²
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/measure-families?page=1&limit=1
                self:
                  href: https://demo.akeneo.com/api/rest/v1/measure-families?page=1&limit=1
            current_page:
              example: 1
          description: Return measure families paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of measure familiy
      tags:
      - Measure family
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
  /api/rest/v1/measure-families/{code}:
    get:
      description: This endpoint allows you to get the information about a given measure
        family.
      operationId: measure_families_get
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/measure_families_get_200_response'
          description: OK
          x-details: Returns the content of the measure family in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a measure family
      tags:
      - Measure family
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/measurement-families:
    get:
      description: This endpoint allows you to get a list of measurement families.
      operationId: measurement_families_get_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/measurement_families_get_list_200_response'
          description: Return the measurement families
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of measurement families
      tags:
      - Measurement family
      x-versions:
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: This endpoint allows you to update and/or create several measurement
        families at once.
      operationId: patch_measurement_families
      requestBody:
        content:
          '*/*':
            schema:
              example:
              - code: AREA
                labels:
                  en_US: Area
                  fr_FR: Surface
                standard_unit_code: SQUARE_METER
                units:
                  SQUARE_CENTIMETER:
                    code: SQUARE_CENTIMETER
                    convert_from_standard:
                    - operator: mul
                      value: "0.0001"
                    labels:
                      en_US: Square centimeter
                      fr_FR: Centimètre carré
                    symbol: cm²
                  SQUARE_METER:
                    code: SQUARE_METER
                    convert_from_standard:
                    - operator: mul
                      value: "1"
                    labels:
                      en_US: Square meter
                      fr_FR: Mètre carré
                    symbol: m²
                  SQUARE_MILLIMETER:
                    code: SQUARE_MILLIMETER
                    convert_from_standard:
                    - operator: mul
                      value: "0.000001"
                    labels:
                      en_US: Square millimeter
                      fr_FR: Millimètre carré
                    symbol: mm²
              items:
                $ref: '#/components/schemas/measurement_families_get_list_200_response'
              type: array
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/patch_measurement_families_200_response_inner'
                type: array
          description: OK
          x-details: Returns a JSON containing the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several measurement families
      tags:
      - Measurement family
      x-versions:
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/media-files:
    get:
      description: This endpoint allows you to get a list of media files that are
        used as attribute values in products or product models.
      operationId: get_media_files
      parameters:
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaFiles'
            _embedded:
              example:
                items:
                - _links:
                    download:
                      href: https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg/download
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg
                  code: 7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg
                  extension: jpg
                  mime_type: image/jpeg
                  original_filename: 10806799-1356.jpg
                  size: 16070
                - _links:
                    download:
                      href: https://demo.akeneo.com/api/rest/v1/media-files/d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg/download
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/media-files/d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg
                  code: d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg
                  extension: jpg
                  mime_type: image/jpeg
                  original_filename: 10734346-1480.jpg
                  size: 16454
                - _links:
                    download:
                      href: https://demo.akeneo.com/api/rest/v1/media-files/5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg/download
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/media-files/5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg
                  code: 5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg
                  extension: jpg
                  mime_type: image/jpeg
                  original_filename: 12431976-8797.jpg
                  size: 19725
                - _links:
                    download:
                      href: https://demo.akeneo.com/api/rest/v1/media-files/0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg/download
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/media-files/0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg
                  code: 0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg
                  extension: jpg
                  mime_type: image/jpeg
                  original_filename: 107406-9841.jpg
                  size: 17639
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/media-files?page=1&limit=4
                next:
                  href: https://demo.akeneo.com/api/rest/v1/media-files?page=2&limit=4
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/media-files?page=1&limit=4
                self:
                  href: https://demo.akeneo.com/api/rest/v1/media-files?page=2&limit=4
            current_page:
              example: 2
          description: Return media files paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a list of product media files
      tags:
      - Product media file
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
    post:
      description: This endpoint allows you to create a new media file and associate
        it to an attribute value of a given product or product model.
      operationId: post_media_files
      parameters:
      - description: "Equal to 'multipart/form-data', no other value allowed"
        in: header
        name: Content-type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_media_files_request'
        required: false
        x-form-data: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `multipart/form-data`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new product media file
      tags:
      - Product media file
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/media-files/{code}:
    get:
      description: This endpoint allows you to get the information about a given media
        file that is used as an attribute value of a product or a product model.
      operationId: get_media_files__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_media_files__code__200_response'
          description: OK
          x-details: Returns the content of the media file in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a product media file
      tags:
      - Product media file
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/media-files/{code}/download:
    get:
      description: This endpoint allows you to download a given media file that is
        used as an attribute value of a product or a product model.
      operationId: get_media_files__code__download
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
          x-content-type: Mime-type of the media file
          x-details: Returns the binary of the media file
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Download a product media file
      tags:
      - Product media file
      x-content-type: Mime-type of the media file
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/product-models:
    get:
      description: "This endpoint allows you to get a list of product models. Product\
        \ models are paginated. In the Enterprise Edition, since the 2.0, permissions\
        \ based on your user groups are applied to the set of products you request."
      operationId: get_product_models
      parameters:
      - description: "Filter product models, for more details see the <a href=\"/documentation/filter.html\"\
          >Filters</a> section"
        in: query
        name: search
        schema:
          type: string
      - description: "Filter product values to return scopable attributes for the\
          \ given channel as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#via-channel\"\
          >Filter product values via channel</a> section"
        in: query
        name: scope
        schema:
          type: string
      - description: "Filter product values to return localizable attributes for the\
          \ given locales as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#via-locale\"\
          >Filter product values via locale</a> section"
        in: query
        name: locales
        schema:
          type: string
      - description: "Filter product values to only return those concerning the given\
          \ attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\"\
          >Filter on product values</a> section and the <a href=\"/documentation/filter.html#filter-on-product-model-properties\"\
          >Filter on product model properties</a> section"
        in: query
        name: attributes
        schema:
          type: string
      - description: "Pagination method type, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: pagination_type
        schema:
          default: page
          enum:
          - page
          - search_after
          type: string
          x-validation-rules: One of the following values
        x-validation-rules: One of the following values
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      - description: Return product model quality scores in the response. <strong>(Only
          available since the 6.0 version)</strong>
        in: query
        name: with_quality_scores
        schema:
          type: boolean
          x-from-version: "6.0"
        x-from-version: "6.0"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product_Models'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: http://demo.akeneo.com/api/rest/v1/product-models/amarisshoe
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - clothing
                  - shoes
                  code: amarisshoe
                  created: 2017-10-04T18:04:10+02:00
                  family: shoes
                  family_variant: shoes_VariantA1
                  quality_scores:
                  - data: A
                    locale: en_US
                    scope: ecommerce
                  - data: B
                    locale: fr_FR
                    scope: ecommerce
                  - data: D
                    locale: en_US
                    scope: tablet
                  - data: E
                    locale: fr_FR
                    scope: tablet
                  quantified_associations:
                    PRODUCT_SET:
                      product_models:
                      - identifier: model-biker-jacket-leather
                        quantity: 2
                      products:
                      - identifier: cap
                        quantity: 2
                      - identifier: shoes
                        quantity: 1
                  updated: 2017-10-04T18:04:10+02:00
                  values:
                    description:
                    - data: I like shoes!
                      locale: en_US
                      scope: ecommerce
                    price:
                    - data:
                      - amount: "50.00"
                        currency: EUR
                - _links:
                    self:
                      href: http://demo.akeneo.com/api/rest/v1/product-models/Abiloitshirt
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - clothing
                  - tshirt
                  code: Abiloitshirt
                  created: 2017-10-04T18:04:10+02:00
                  family: clothing
                  family_variant: clothing_VariantA1
                  quality_scores:
                  - data: A
                    locale: en_US
                    scope: ecommerce
                  - data: B
                    locale: fr_FR
                    scope: ecommerce
                  - data: D
                    locale: en_US
                    scope: tablet
                  - data: E
                    locale: fr_FR
                    scope: tablet
                  quantified_associations:
                    PRODUCT_SET:
                      product_models: []
                      products:
                      - identifier: cap
                        quantity: 2
                  updated: 2017-10-04T18:04:10+02:00
                  values:
                    description:
                    - data: I like tshirt!
                      locale: en_US
                      scope: ecommerce
                    price:
                    - data:
                      - amount: "50.00"
                        currency: EUR
                - _links:
                    self:
                      href: http://demo.akeneo.com/api/rest/v1/product-models/Astertrousers
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - clothing
                  - trousers
                  code: Astertrousers
                  created: 2017-10-04T18:04:10+02:00
                  family: clothing
                  family_variant: clothing_VariantA1
                  quantified_associations: {}
                  updated: 2017-10-04T18:04:10+02:00
                  values:
                    description:
                    - data: I like trousers!
                      locale: en_US
                      scope: ecommerce
                    price:
                    - data:
                      - amount: "50.00"
                        currency: EUR
            _links:
              example:
                first:
                  href: http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3
                next:
                  href: http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=rw%3D%3D
                self:
                  href: http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=qg%3D%3D
          description: Return product models paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Get list of product models
      tags:
      - Product model
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update and/or create several product\
        \ models at once. Learn more about <a href=\"/documentation/update.html#update-behavior\"\
        >Update behavior</a>. Note that if no product models exists for the given\
        \ code, it creates it. In the Enterprise Edition, since the v2.3, permissions\
        \ based on your user groups are applied to the product models you try to update.\
        \ It may result in the creation of drafts if you only have edit rights through\
        \ the product model's categories."
      operationId: patch_product_models
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_product_models_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"code\":\"sub_sweat_option_a\",\"status_code\"\
                :204}"
            x-example-2:
              example: "{\"line\":2,\"code\":\"sub_sweat_option_b\",\"status_code\"\
                :422,\"message\":\"Validation failed.\",\"errors\":[{\"property\"\
                :\"attribute\",\"message\":\"Cannot set value \\\"Option A\\\" for\
                \ the attribute axis \\\"a_simple_select\\\", as another sibling entity\
                \ already has this value\"}]}"
            x-example-3:
              example: "{\"line\":3,\"code\":\"tshirt\",\"status_code\":201}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several product models
      tags:
      - Product model
      x-body-by-line: "Contains several lines, each line is a product model in JSON\
        \ standard format"
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: "This endpoint allows you to create a new product model. In the\
        \ Enterprise Edition, since the v2.3, permissions based on your user groups\
        \ are applied to the product model you try to create."
      operationId: post_product_models
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_product_models_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new product model
      tags:
      - Product model
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/product-models/{code}:
    delete:
      description: "This endpoint allows you to delete a given product model. All\
        \ its children, product models and variant products, will be also deleted.\
        \ In the Enterprise Edition, the permissions based on your connection user\
        \ group are applied to the product model you try to delete."
      operationId: delete_product_models__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No content to return
          x-details: Means that the deletion was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Delete a product model
      tags:
      - Product model
      x-versions:
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    get:
      description: "This endpoint allows you to get the information about a given\
        \ product model. In the Entreprise Edition, since the v2.0, permissions based\
        \ on your user groups are applied to the product model you request."
      operationId: get_product_models__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      - description: Return product model quality scores in the response. <strong>(Only
          available since the 6.0 version)</strong>
        in: query
        name: with_quality_scores
        schema:
          type: boolean
          x-from-version: "6.0"
        x-from-version: "6.0"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_product_models_request'
          description: OK
          x-details: Returns the content of the product model in JSON standard format.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a product model
      tags:
      - Product model
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given product model. Learn\
        \ more about <a href=\"/documentation/update.html#update-behavior\">Update\
        \ behavior</a>. Note that if no product model exists for the given code, it\
        \ creates it. In the Enterprise Edition PIM since the 2.3, permissions based\
        \ on your user groups are applied to the product model you try to update.\
        \ It may result in the creation of a draft if you only have edit rights through\
        \ the product model's categories."
      operationId: patch_product_models__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_product_models_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a product model
      tags:
      - Product model
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/product-models/{code}/draft:
    get:
      description: This endpoint allows you to get the information about a given product
        model draft.
      operationId: get_product_model_draft__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_product_models_request'
          description: OK
          x-details: Returns the content of the draft in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a draft
      tags:
      - Product model
      x-ee: true
      x-versions:
      - "2.3"
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/product-models/{code}/proposal:
    post:
      description: This endpoint allows you to submit a product model draft for approval.
      operationId: post_product_model_proposal
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: Submitted
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the draft submission was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Submit a draft for approval
      tags:
      - Product model
      x-ee: true
      x-versions:
      - "2.3"
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/products:
    get:
      description: "This endpoint allows you to get a list of products. Products are\
        \ paginated and they can be filtered. In the Enterprise Edition, since the\
        \ 2.0, permissions based on your user groups are applied to the set of products\
        \ you request."
      operationId: get_products
      parameters:
      - description: "Filter products, for more details see the <a href=\"/documentation/filter.html\"\
          >Filters</a> section"
        in: query
        name: search
        schema:
          type: string
      - description: "Filter product values to return scopable attributes for the\
          \ given channel as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#via-channel\"\
          >Filter product values via channel</a> section"
        in: query
        name: scope
        schema:
          type: string
      - description: "Filter product values to return localizable attributes for the\
          \ given locales as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#via-locale\"\
          >Filter product values via locale</a> section"
        in: query
        name: locales
        schema:
          type: string
      - description: "Filter product values to only return those concerning the given\
          \ attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\"\
          >Filter on product values</a> section"
        in: query
        name: attributes
        schema:
          type: string
      - description: "Pagination method type, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: pagination_type
        schema:
          default: page
          enum:
          - page
          - search_after
          type: string
          x-validation-rules: One of the following values
        x-validation-rules: One of the following values
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      - description: Return labels of attribute options in the response. (Only available
          since the 5.0 version)
        in: query
        name: with_attribute_options
        schema:
          default: false
          type: boolean
          x-from-version: "5.0"
        x-from-version: "5.0"
      - description: Return product quality scores in the response. (Only available
          since the 5.0 version)
        in: query
        name: with_quality_scores
        schema:
          default: false
          type: boolean
          x-from-version: "5.0"
        x-from-version: "5.0"
      - description: Return product completenesses in the response. (Only available
          since the 6.0 version)
        in: query
        name: with_completenesses
        schema:
          default: false
          type: boolean
          x-from-version: "6.0"
        x-from-version: "6.0"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products_1'
          description: Return products paginated
          x-examples-per-version:
          - x-example:
              _embedded:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/top
                  associations:
                    PACK:
                      groups: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: tshirt
                  groups: []
                  identifier: top
                  quantified_associations:
                    PRODUCT_SET:
                      products:
                      - identifier: cap
                        quantity: 2
                      - identifier: shoes
                        quantity: 1
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    collection:
                    - data:
                      - winter_2016
                    color:
                    - data: black
                    description:
                    - data: Summer top
                      locale: en_US
                      scope: ecommerce
                    - data: Top
                      locale: en_US
                      scope: tablet
                    - data: Débardeur pour l'été
                      locale: fr_FR
                      scope: ecommerce
                    - data: Débardeur
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Top
                      locale: en_US
                    - data: Débardeur
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "15.5"
                        currency: EUR
                      - amount: "15"
                        currency: USD
                    size:
                    - data: m
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/cap
                  associations:
                    PACK:
                      groups: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: caps
                  groups: []
                  identifier: cap
                  quantified_associations: {}
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    color:
                    - data: black
                    description:
                    - data: Cap unisex
                      locale: en_US
                      scope: ecommerce
                    - data: Cap unisex
                      locale: en_US
                      scope: tablet
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: ecommerce
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Cap
                      locale: en_US
                    - data: Casquette
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "20"
                        currency: EUR
                      - amount: "20"
                        currency: USD
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/sweat
                  associations: {}
                  categories:
                  - winter_collection
                  created: 2016-06-23T11:24:44+02:00
                  enabled: true
                  groups: []
                  identifier: sweat
                  quantified_associations: {}
                  updated: 2016-06-23T11:24:44+02:00
                  values: {}
              _links:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3
              current_page: 3
            x-version: "1.7"
          - x-example:
              _embedded:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/top
                  associations:
                    PACK:
                      groups: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: tshirt
                  groups: []
                  identifier: top
                  quantified_associations:
                    PRODUCT_SET:
                      products:
                      - identifier: cap
                        quantity: 2
                      - identifier: shoes
                        quantity: 1
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    collection:
                    - data:
                      - winter_2016
                    color:
                    - data: black
                    description:
                    - data: Summer top
                      locale: en_US
                      scope: ecommerce
                    - data: Top
                      locale: en_US
                      scope: tablet
                    - data: Débardeur pour l'été
                      locale: fr_FR
                      scope: ecommerce
                    - data: Débardeur
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Top
                      locale: en_US
                    - data: Débardeur
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "15.5"
                        currency: EUR
                      - amount: "15"
                        currency: USD
                    size:
                    - data: m
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/cap
                  associations:
                    PACK:
                      groups: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: caps
                  groups: []
                  identifier: cap
                  quantified_associations: {}
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    color:
                    - data: black
                    description:
                    - data: Cap unisex
                      locale: en_US
                      scope: ecommerce
                    - data: Cap unisex
                      locale: en_US
                      scope: tablet
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: ecommerce
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Cap
                      locale: en_US
                    - data: Casquette
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "20"
                        currency: EUR
                      - amount: "20"
                        currency: USD
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/sweat
                  associations: {}
                  categories:
                  - winter_collection
                  created: 2016-06-23T11:24:44+02:00
                  enabled: true
                  groups: []
                  identifier: sweat
                  quantified_associations: {}
                  updated: 2016-06-23T11:24:44+02:00
                  values: {}
              _links:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3
              current_page: 3
            x-version: "2.0"
          - x-example:
              _embedded:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/top
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: tshirt
                  groups: []
                  identifier: top
                  quantified_associations:
                    PRODUCT_SET:
                      product_models:
                      - identifier: model-biker-jacket-leather
                        quantity: 2
                      products:
                      - identifier: cap
                        quantity: 2
                      - identifier: shoes
                        quantity: 1
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    collection:
                    - data:
                      - winter_2016
                    color:
                    - data: black
                    description:
                    - data: Summer top
                      locale: en_US
                      scope: ecommerce
                    - data: Top
                      locale: en_US
                      scope: tablet
                    - data: Débardeur pour l'été
                      locale: fr_FR
                      scope: ecommerce
                    - data: Débardeur
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Top
                      locale: en_US
                    - data: Débardeur
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "15.5"
                        currency: EUR
                      - amount: "15"
                        currency: USD
                    size:
                    - data: m
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/cap
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: caps
                  groups: []
                  identifier: cap
                  quantified_associations: {}
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    color:
                    - data: black
                    description:
                    - data: Cap unisex
                      locale: en_US
                      scope: ecommerce
                    - data: Cap unisex
                      locale: en_US
                      scope: tablet
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: ecommerce
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Cap
                      locale: en_US
                    - data: Casquette
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "20"
                        currency: EUR
                      - amount: "20"
                        currency: USD
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/sweat
                  associations: {}
                  categories:
                  - winter_collection
                  created: 2016-06-23T11:24:44+02:00
                  enabled: true
                  groups: []
                  identifier: sweat
                  quantified_associations: {}
                  updated: 2016-06-23T11:24:44+02:00
                  values: {}
              _links:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3
              current_page: 3
            x-version: "2.1"
          - x-example:
              _embedded:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/top
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: tshirt
                  groups: []
                  identifier: top
                  quality_scores:
                  - data: A
                    locale: en_US
                    scope: ecommerce
                  - data: B
                    locale: fr_FR
                    scope: ecommerce
                  - data: D
                    locale: en_US
                    scope: tablet
                  - data: E
                    locale: fr_FR
                    scope: tablet
                  quantified_associations:
                    PRODUCT_SET:
                      product_models:
                      - identifier: model-biker-jacket-leather
                        quantity: 2
                      products:
                      - identifier: cap
                        quantity: 2
                      - identifier: shoes
                        quantity: 1
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    collection:
                    - data:
                      - winter_2016
                      linked_data:
                        winter_2016:
                          attribute: collection
                          code: winter_2016
                          labels:
                            en_US: Winter 2016
                            fr_FR: Hiver 2016
                    color:
                    - data: black
                      linked_data:
                        attribute: color
                        code: black
                        labels:
                          en_US: Black
                          fr_FR: Noir
                    description:
                    - data: Summer top
                      locale: en_US
                      scope: ecommerce
                    - data: Top
                      locale: en_US
                      scope: tablet
                    - data: Débardeur pour l'été
                      locale: fr_FR
                      scope: ecommerce
                    - data: Débardeur
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Top
                      locale: en_US
                    - data: Débardeur
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "15.5"
                        currency: EUR
                      - amount: "15"
                        currency: USD
                    size:
                    - data: m
                      linked_data:
                        attribute: size
                        code: m
                        labels:
                          en_US: M
                          fr_FR: M
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/cap
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: caps
                  groups: []
                  identifier: cap
                  quality_scores:
                  - data: A
                    locale: en_US
                    scope: ecommerce
                  - data: B
                    locale: fr_FR
                    scope: ecommerce
                  - data: D
                    locale: en_US
                    scope: tablet
                  - data: E
                    locale: fr_FR
                    scope: tablet
                  quantified_associations: {}
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    color:
                    - data: black
                      linked_data:
                        attribute: color
                        code: black
                        labels:
                          en_US: Black
                          fr_FR: Noir
                    description:
                    - data: Cap unisex
                      locale: en_US
                      scope: ecommerce
                    - data: Cap unisex
                      locale: en_US
                      scope: tablet
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: ecommerce
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Cap
                      locale: en_US
                    - data: Casquette
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "20"
                        currency: EUR
                      - amount: "20"
                        currency: USD
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/sweat
                  associations: {}
                  categories:
                  - winter_collection
                  created: 2016-06-23T11:24:44+02:00
                  enabled: true
                  groups: []
                  identifier: sweat
                  quality_scores: {}
                  quantified_associations: {}
                  updated: 2016-06-23T11:24:44+02:00
                  values: {}
              _links:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3&with_quality_scores=true&with_attribute_options=true
                next:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3&with_quality_scores=true&with_attribute_options=true
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3&with_quality_scores=true&with_attribute_options=true
                self:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3&with_quality_scores=true&with_attribute_options=true
              current_page: 3
            x-version: "5.0"
          - x-example:
              _embedded:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/top
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  completenesses:
                  - data: 20
                    locale: en_US
                    scope: ecommerce
                  - data: 30
                    locale: fr_FR
                    scope: ecommerce
                  - data: 55
                    locale: en_US
                    scope: tablet
                  - data: 70
                    locale: fr_FR
                    scope: tablet
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: tshirt
                  groups: []
                  identifier: top
                  quality_scores:
                  - data: A
                    locale: en_US
                    scope: ecommerce
                  - data: B
                    locale: fr_FR
                    scope: ecommerce
                  - data: D
                    locale: en_US
                    scope: tablet
                  - data: E
                    locale: fr_FR
                    scope: tablet
                  quantified_associations:
                    PRODUCT_SET:
                      product_models:
                      - identifier: model-biker-jacket-leather
                        quantity: 2
                      products:
                      - identifier: cap
                        quantity: 2
                      - identifier: shoes
                        quantity: 1
                  updated: 2016-06-25T17:56:12+02:00
                  uuid: aaf518b2-f91e-40f1-a53a-78ce5e81a6f9
                  values:
                    collection:
                    - data:
                      - winter_2016
                      linked_data:
                        winter_2016:
                          attribute: collection
                          code: winter_2016
                          labels:
                            en_US: Winter 2016
                            fr_FR: Hiver 2016
                    color:
                    - data: black
                      linked_data:
                        attribute: color
                        code: black
                        labels:
                          en_US: Black
                          fr_FR: Noir
                    description:
                    - data: Summer top
                      locale: en_US
                      scope: ecommerce
                    - data: Top
                      locale: en_US
                      scope: tablet
                    - data: Débardeur pour l'été
                      locale: fr_FR
                      scope: ecommerce
                    - data: Débardeur
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Top
                      locale: en_US
                    - data: Débardeur
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "15.5"
                        currency: EUR
                      - amount: "15"
                        currency: USD
                    size:
                    - data: m
                      linked_data:
                        attribute: size
                        code: m
                        labels:
                          en_US: M
                          fr_FR: M
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/cap
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  completenesses:
                  - data: 20
                    locale: en_US
                    scope: ecommerce
                  - data: 30
                    locale: fr_FR
                    scope: ecommerce
                  - data: 55
                    locale: en_US
                    scope: tablet
                  - data: 70
                    locale: fr_FR
                    scope: tablet
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: caps
                  groups: []
                  identifier: cap
                  quality_scores:
                  - data: A
                    locale: en_US
                    scope: ecommerce
                  - data: B
                    locale: fr_FR
                    scope: ecommerce
                  - data: D
                    locale: en_US
                    scope: tablet
                  - data: E
                    locale: fr_FR
                    scope: tablet
                  quantified_associations: {}
                  updated: 2016-06-25T17:56:12+02:00
                  uuid: aec6780b-c813-4bd7-8e24-1a8574471576
                  values:
                    color:
                    - data: black
                      linked_data:
                        attribute: color
                        code: black
                        labels:
                          en_US: Black
                          fr_FR: Noir
                    description:
                    - data: Cap unisex
                      locale: en_US
                      scope: ecommerce
                    - data: Cap unisex
                      locale: en_US
                      scope: tablet
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: ecommerce
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Cap
                      locale: en_US
                    - data: Casquette
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "20"
                        currency: EUR
                      - amount: "20"
                        currency: USD
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/sweat
                  associations: {}
                  categories:
                  - winter_collection
                  completenesses: []
                  created: 2016-06-23T11:24:44+02:00
                  enabled: true
                  groups: []
                  identifier: sweat
                  quality_scores: {}
                  quantified_associations: {}
                  updated: 2016-06-23T11:24:44+02:00
                  uuid: 93f14b03-5ed3-4f23-87c6-ae3806041b6a
                  values: {}
              _links:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
                next:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
                self:
                  href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
              current_page: 3
            x-version: SaaS
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Get list of products
      tags:
      - "Product [identifier]"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _links
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update and/or create several products\
        \ at once. Learn more about <a href=\"/documentation/update.html#update-behavior\"\
        >Update behavior</a>. Note that if no product exists for the given identifier,\
        \ it creates it. In the Enterprise Edition, since the v2.0, permissions based\
        \ on your user groups are applied to the products you try to update. It may\
        \ result in the creation of drafts if you only have edit rights through the\
        \ product's categories."
      operationId: patch_products
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_products_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_asset_categories_200_response'
            x-example-1:
              example: "{\"line\":1,\"identifier\":\"cap\",\"status_code\":204}"
            x-example-2:
              example: "{\"line\":2,\"identifier\":\"mug\",\"status_code\":422,\"\
                message\":\"Property \"group\" does not exist.\"}"
            x-example-3:
              example: "{\"line\":3,\"identifier\":\"tshirt\",\"status_code\":201}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several products
      tags:
      - "Product [identifier]"
      x-body-by-line: "Contains several lines, each line is a product in JSON standard\
        \ format"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: "This endpoint allows you to create a new product. In the Enterprise\
        \ Edition, since the v2.0, permissions based on your user groups are applied\
        \ to the product you try to create."
      operationId: post_products
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_products_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new product
      tags:
      - "Product [identifier]"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/products-uuid:
    get:
      description: "This endpoint allows you to get a list of products. Products are\
        \ paginated and they can be filtered. In the Enterprise Edition, permissions\
        \ based on your user groups are applied to the set of products you request."
      operationId: get_products_uuid
      parameters:
      - description: "Filter products, for more details see the <a href=\"/documentation/filter.html\"\
          >Filters</a> section"
        in: query
        name: search
        schema:
          type: string
      - description: "Filter product values to return scopable attributes for the\
          \ given channel as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#via-channel\"\
          >Filter product values via channel</a> section"
        in: query
        name: scope
        schema:
          type: string
      - description: "Filter product values to return localizable attributes for the\
          \ given locales as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#via-locale\"\
          >Filter product values via locale</a> section"
        in: query
        name: locales
        schema:
          type: string
      - description: "Filter product values to only return those concerning the given\
          \ attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\"\
          >Filter on product values</a> section"
        in: query
        name: attributes
        schema:
          type: string
      - description: "Pagination method type, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: pagination_type
        schema:
          default: page
          enum:
          - page
          - search_after
          type: string
          x-validation-rules: One of the following values
        x-validation-rules: One of the following values
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      - description: Return labels of attribute options in the response. (Only available
          since the 5.0 version)
        in: query
        name: with_attribute_options
        schema:
          default: false
          type: boolean
          x-from-version: "5.0"
        x-from-version: "5.0"
      - description: Return product quality scores in the response. (Only available
          since the 5.0 version)
        in: query
        name: with_quality_scores
        schema:
          default: false
          type: boolean
          x-from-version: "5.0"
        x-from-version: "5.0"
      - description: Return product completenesses in the response. (Only available
          since the 6.0 version)
        in: query
        name: with_completenesses
        schema:
          default: false
          type: boolean
          x-from-version: "6.0"
        x-from-version: "6.0"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products_2'
          description: Return products paginated
          x-examples-per-version:
          - x-example:
              _embedded:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product-uuid/25566245-55c3-42ce-86d9-8610ac459fa8
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - d055527c-0698-4967-8f16-8a5f23f4e5cf
                  categories:
                  - summer_collection
                  completenesses:
                  - data: 20
                    locale: en_US
                    scope: ecommerce
                  - data: 30
                    locale: fr_FR
                    scope: ecommerce
                  - data: 55
                    locale: en_US
                    scope: tablet
                  - data: 70
                    locale: fr_FR
                    scope: tablet
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: tshirt
                  groups: []
                  quality_scores:
                  - data: A
                    locale: en_US
                    scope: ecommerce
                  - data: B
                    locale: fr_FR
                    scope: ecommerce
                  - data: D
                    locale: en_US
                    scope: tablet
                  - data: E
                    locale: fr_FR
                    scope: tablet
                  quantified_associations:
                    PRODUCT_SET:
                      product_models:
                      - identifier: model-biker-jacket-leather
                        quantity: 2
                      products:
                      - quantity: 2
                        uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
                      - quantity: 1
                        uuid: a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc
                  updated: 2016-06-25T17:56:12+02:00
                  uuid: 25566245-55c3-42ce-86d9-8610ac459fa8
                  values:
                    collection:
                    - data:
                      - winter_2016
                      linked_data:
                        winter_2016:
                          attribute: collection
                          code: winter_2016
                          labels:
                            en_US: Winter 2016
                            fr_FR: Hiver 2016
                    color:
                    - data: black
                      linked_data:
                        attribute: color
                        code: black
                        labels:
                          en_US: Black
                          fr_FR: Noir
                    description:
                    - data: Summer top
                      locale: en_US
                      scope: ecommerce
                    - data: Top
                      locale: en_US
                      scope: tablet
                    - data: Débardeur pour l'été
                      locale: fr_FR
                      scope: ecommerce
                    - data: Débardeur
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Top
                      locale: en_US
                    - data: Débardeur
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "15.5"
                        currency: EUR
                      - amount: "15"
                        currency: USD
                    size:
                    - data: m
                      linked_data:
                        attribute: size
                        code: m
                        labels:
                          en_US: M
                          fr_FR: M
                    sku:
                    - data: top
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product/fc24e6c3-933c-4a93-8a81-e5c703d134d5
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - d055527c-0698-4967-8f16-8a5f23f4e5cf
                  categories:
                  - summer_collection
                  completenesses:
                  - data: 20
                    locale: en_US
                    scope: ecommerce
                  - data: 30
                    locale: fr_FR
                    scope: ecommerce
                  - data: 55
                    locale: en_US
                    scope: tablet
                  - data: 70
                    locale: fr_FR
                    scope: tablet
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: caps
                  groups: []
                  quality_scores:
                  - data: A
                    locale: en_US
                    scope: ecommerce
                  - data: B
                    locale: fr_FR
                    scope: ecommerce
                  - data: D
                    locale: en_US
                    scope: tablet
                  - data: E
                    locale: fr_FR
                    scope: tablet
                  quantified_associations: {}
                  updated: 2016-06-25T17:56:12+02:00
                  uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
                  values:
                    color:
                    - data: black
                      linked_data:
                        attribute: color
                        code: black
                        labels:
                          en_US: Black
                          fr_FR: Noir
                    description:
                    - data: Cap unisex
                      locale: en_US
                      scope: ecommerce
                    - data: Cap unisex
                      locale: en_US
                      scope: tablet
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: ecommerce
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Cap
                      locale: en_US
                    - data: Casquette
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "20"
                        currency: EUR
                      - amount: "20"
                        currency: USD
                    sku:
                    - data: cap
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/product-uuid/fa0b115e-46ec-4527-beab-7207452f1b47
                  associations: {}
                  categories:
                  - winter_collection
                  completenesses: []
                  created: 2016-06-23T11:24:44+02:00
                  enabled: true
                  groups: []
                  quality_scores: {}
                  quantified_associations: {}
                  updated: 2016-06-23T11:24:44+02:00
                  uuid: fa0b115e-46ec-4527-beab-7207452f1b47
                  values:
                    sku:
                    - data: sweat
              _links:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/products-uuid?page=1&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
                next:
                  href: https://demo.akeneo.com/api/rest/v1/products-uuid?page=4&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/products-uuid?page=2&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
                self:
                  href: https://demo.akeneo.com/api/rest/v1/products-uuid?page=3&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
              current_page: 3
            x-version: SaaS
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Get list of products
      tags:
      - "Product [uuid]"
      x-versions:
      - "7.0"
      - SaaS
      x-accepts:
      - _links
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update and/or create several products\
        \ at once. Learn more about <a href=\"/documentation/update.html#update-behavior\"\
        >Update behavior</a>. Note that if no product exists for the given uuid, it\
        \ creates it. In the Enterprise Edition, permissions based on your user groups\
        \ are applied to the products you try to update. It may result in the creation\
        \ of drafts if you only have edit rights through the product's categories."
      operationId: patch_products_uuid
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_products_uuid_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_products_uuid_200_response'
            x-example-1:
              example: "{\"line\":1,\"uuid\":\"fc24e6c3-933c-4a93-8a81-e5c703d134d5\"\
                ,\"status_code\":204}"
            x-example-2:
              example: "{\"line\":2,\"uuid\":\"573dd613-0c7f-4143-83d5-63cc5e535966\"\
                ,\"status_code\":422,\"message\":\"Property \"group\" does not exist.\"\
                }"
            x-example-3:
              example: "{\"line\":3,\"uuid\":\"25566245-55c3-42ce-86d9-8610ac459fa8\"\
                ,\"status_code\":201}"
          description: OK
          x-details: Returns a plain text response whose lines are JSON containing
            the status of each update or creation
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create several products
      tags:
      - "Product [uuid]"
      x-body-by-line: "Contains several lines, each line is a product in JSON standard\
        \ format"
      x-versions:
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
      - x-example-1
      - x-example-2
      - x-example-3
    post:
      description: "This endpoint allows you to create a new product. In the Enterprise\
        \ Edition, permissions based on your user groups are applied to the product\
        \ you try to create. If no uuid is provided, the PIM will generate one for\
        \ you."
      operationId: post_products_uuid
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_products_uuid_request'
        required: false
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new product
      tags:
      - "Product [uuid]"
      x-versions:
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/products-uuid/{uuid}:
    delete:
      description: "This endpoint allows you to delete a given product. In the Enterprise\
        \ Edition, permissions based on your user groups are applied to the product\
        \ you try to delete."
      operationId: delete_products_uuid__uuid_
      parameters:
      - description: Uuid of the resource
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No content to return
          x-details: Means that the deletion was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Delete a product
      tags:
      - "Product [uuid]"
      x-versions:
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    get:
      description: "This endpoint allows you to get the information about a given\
        \ product. In the Entreprise Edition, permissions based on your user groups\
        \ are applied to the product you request."
      operationId: get_products_uuid__uuid_
      parameters:
      - description: Uuid of the resource
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Return labels of attribute options in the response. (Only available
          since the 5.0 version)
        in: query
        name: with_attribute_options
        schema:
          default: false
          type: boolean
          x-from-version: "5.0"
        x-from-version: "5.0"
      - description: Return product quality scores in the response. (Only available
          since the 5.0 version)
        in: query
        name: with_quality_scores
        schema:
          default: false
          type: boolean
          x-from-version: "5.0"
        x-from-version: "5.0"
      - description: Return product completenesses in the response. (Only available
          since the 6.0 version)
        in: query
        name: with_completenesses
        schema:
          default: false
          type: boolean
          x-from-version: "6.0"
        x-from-version: "6.0"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_products_uuid_request'
          description: OK
          x-details: Returns the content of the product in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a product
      tags:
      - "Product [uuid]"
      x-versions:
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given product. Learn more\
        \ about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>.\
        \ Note that if no product exists for the given uuid, it creates it. In the\
        \ Entreprise Edition, permissions based on your user groups are applied to\
        \ the product you try to update. It may result in the creation of a draft\
        \ if you only have edit rights through the product's categories."
      operationId: patch_products_uuid__uuid_
      parameters:
      - description: Uuid of the resource
        in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_products_uuid_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a product
      tags:
      - "Product [uuid]"
      x-versions:
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/products-uuid/{uuid}/draft:
    get:
      description: This endpoint allows you to get the information about a given draft.
      operationId: get_draft_uuid__uuid_
      parameters:
      - description: Uuid of the resource
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_products_uuid_request'
          description: OK
          x-details: Returns the content of the draft in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a draft
      tags:
      - "Product [uuid]"
      x-ee: true
      x-versions:
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/products-uuid/{uuid}/proposal:
    post:
      description: This endpoint allows you to submit a draft for approval.
      operationId: post_proposal_uuid
      parameters:
      - description: Uuid of the resource
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: Submitted
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the draft submission was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Submit a draft for approval
      tags:
      - "Product [uuid]"
      x-ee: true
      x-versions:
      - "7.0"
      - SaaS
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/products/{code}:
    delete:
      description: "This endpoint allows you to delete a given product. In the Enterprise\
        \ Edition, since the 2.0, permissions based on your user groups are applied\
        \ to the product you try to delete."
      operationId: delete_products__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No content to return
          x-details: Means that the deletion was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Delete a product
      tags:
      - "Product [identifier]"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    get:
      description: "This endpoint allows you to get the information about a given\
        \ product. In the Entreprise Edition, since the v2.0, permissions based on\
        \ your user groups are applied to the product you request."
      operationId: get_products__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      - description: Return labels of attribute options in the response. (Only available
          since the 5.0 version)
        in: query
        name: with_attribute_options
        schema:
          default: false
          type: boolean
          x-from-version: "5.0"
        x-from-version: "5.0"
      - description: Return product quality scores in the response. (Only available
          since the 5.0 version)
        in: query
        name: with_quality_scores
        schema:
          default: false
          type: boolean
          x-from-version: "5.0"
        x-from-version: "5.0"
      - description: Return product completenesses in the response. (Only available
          since the 6.0 version)
        in: query
        name: with_completenesses
        schema:
          default: false
          type: boolean
          x-from-version: "6.0"
        x-from-version: "6.0"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_products_request'
          description: OK
          x-details: Returns the content of the product in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a product
      tags:
      - "Product [identifier]"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given product. Learn more\
        \ about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>.\
        \ Note that if no product exists for the given identifier, it creates it.\
        \ In the Entreprise Edition, since the v2.0, permissions based on your user\
        \ groups are applied to the product you try to update. It may result in the\
        \ creation of a draft if you only have edit rights through the product's categories."
      operationId: patch_products__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_products_request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a product
      tags:
      - "Product [identifier]"
      x-versions:
      - "1.7"
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/products/{code}/draft:
    get:
      description: This endpoint allows you to get the information about a given draft.
      operationId: get_draft__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_products_request'
          description: OK
          x-details: Returns the content of the draft in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a draft
      tags:
      - "Product [identifier]"
      x-ee: true
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/products/{code}/proposal:
    post:
      description: This endpoint allows you to submit a draft for approval.
      operationId: post_proposal
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: Submitted
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the draft submission was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Submit a draft for approval
      tags:
      - "Product [identifier]"
      x-ee: true
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/published-products:
    get:
      description: This endpoint allows you to get a list of published products. Published
        products are paginated and they can be filtered.
      operationId: get_published_products
      parameters:
      - description: "Filter published products, for more details see the <a href=\"\
          /documentation/filter.html\">Filters</a> section"
        in: query
        name: search
        schema:
          type: string
      - description: "Filter published product values to return scopable attributes\
          \ for the given channel as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#filter-published-product-values\"\
          >Filter on published product values</a> section"
        in: query
        name: scope
        schema:
          type: string
      - description: "Filter published product values to return localizable attributes\
          \ for the given locales as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#filter-published-product-values\"\
          >Filter on published product values</a> section"
        in: query
        name: locales
        schema:
          type: string
      - description: "Filter published product values to only return those concerning\
          \ the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\"\
          >Filter on product values</a> section"
        in: query
        name: attributes
        schema:
          type: string
      - description: "Pagination method type, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: pagination_type
        schema:
          default: page
          enum:
          - page
          - search_after
          type: string
          x-validation-rules: One of the following values
        x-validation-rules: One of the following values
      - description: "Number of the page to retrieve when using the `page` pagination\
          \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
          /documentation/pagination.html#pagination\">Pagination</a> section"
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      - description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      - description: "Return the count of items in the response. Be carefull with\
          \ that, on a big catalog, it can decrease performance in a significative\
          \ way"
        in: query
        name: with_count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Published_products'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/published-products/top
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: tshirt
                  groups: []
                  identifier: top
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    color:
                    - data: black
                    description:
                    - data: Summer top
                      locale: en_US
                      scope: ecommerce
                    - data: Top
                      locale: en_US
                      scope: tablet
                    - data: Débardeur pour l'été
                      locale: fr_FR
                      scope: ecommerce
                    - data: Débardeur
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Top
                      locale: en_US
                    - data: Débardeur
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "15.5"
                        currency: EUR
                      - amount: "15"
                        currency: USD
                    size:
                    - data: m
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/published-products/cap
                  associations:
                    PACK:
                      groups: []
                      product_models: []
                      products:
                      - sunglasses
                  categories:
                  - summer_collection
                  created: 2016-06-23T18:24:44+02:00
                  enabled: true
                  family: caps
                  groups: []
                  identifier: cap
                  updated: 2016-06-25T17:56:12+02:00
                  values:
                    color:
                    - data: black
                    description:
                    - data: Cap unisex
                      locale: en_US
                      scope: ecommerce
                    - data: Cap unisex
                      locale: en_US
                      scope: tablet
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: ecommerce
                    - data: Casquette unisexe
                      locale: fr_FR
                      scope: tablet
                    name:
                    - data: Cap
                      locale: en_US
                    - data: Casquette
                      locale: fr_FR
                    price:
                    - data:
                      - amount: "20"
                        currency: EUR
                      - amount: "20"
                        currency: USD
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/published-products/sweat
                  associations: {}
                  categories:
                  - winter_collection
                  created: 2016-06-23T11:24:44+02:00
                  enabled: true
                  groups: []
                  identifier: sweat
                  updated: 2016-06-23T11:24:44+02:00
                  values: {}
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/published-products?page=1&limit=3
                next:
                  href: https://demo.akeneo.com/api/rest/v1/published-products?page=4&limit=3
                previous:
                  href: https://demo.akeneo.com/api/rest/v1/published-products?page=2&limit=3
                self:
                  href: https://demo.akeneo.com/api/rest/v1/published-products?page=3&limit=3
            current_page:
              example: 3
          description: Return published products paginated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 400
            message:
              example: Invalid JSON message received
          description: Bad request
          x-details: Can be caused by a malformed JSON request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Get list of published products
      tags:
      - Published product
      x-ee: true
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - current_page
      - message
  /api/rest/v1/published-products/{code}:
    get:
      description: This endpoint allows you to get the information about a given published
        product.
      operationId: get_published_products__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_published_products__code__200_response'
          description: OK
          x-details: Returns the content of the published product in JSON standard
            format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 403
            message:
              example: Access forbidden. You are not allowed to list categories.
          description: Access forbidden
          x-details: The user does not have the permission to execute this request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a published product
      tags:
      - Published product
      x-ee: true
      x-versions:
      - 2.x
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities:
    get:
      description: This endpoint allows you to get a list of reference entities. Reference
        entities are paginated.
      operationId: get_reference_entities
      parameters:
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference_Entities'
            _embedded:
              example:
                items:
                - _links:
                    image_download:
                      href: https://demo.akeneo.com/api/rest/v1/reference-entities-media-files/0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/reference-entities/brands
                  code: brands
                  image: 0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png
                  labels:
                    en_US: Brands
                    fr_FR: Marque
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/reference-entities/designers
                  code: designers
                  labels:
                    en_US: Designers
                    fr_FR: Designers
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/reference-entities/colors
                  code: colors
                  labels:
                    en_US: Colors
                    fr_FR: Couleurs
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/reference-entities
                next:
                  href: https://demo.akeneo.com/api/rest/v1/reference-entities?search_after=2x055w%3D%3D
                self:
                  href: https://demo.akeneo.com/api/rest/v1/reference-entities
          description: Return reference entities paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get list of reference entities
      tags:
      - Reference entity
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities-media-files:
    post:
      description: "This endpoint allows you to create a new media file and associate\
        \ it to the image of a reference entity, or to the main image or to an attribute\
        \ value of a record."
      operationId: post_reference_entity_media_files
      parameters:
      - description: "Equal to 'multipart/form-data', no other value allowed"
        in: header
        name: Content-type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/post_asset_media_files_request'
        required: false
        x-form-data: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Reference-entities-media-file-code:
              description: Code of the media file
              schema:
                type: string
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the media file creation was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `multipart/form-data`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Create a new media file for a reference entity or a record
      tags:
      - Reference entity media file
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities-media-files/{code}:
    get:
      description: This endpoint allows you to download a given media file that is
        associated with a reference entity or a record.
      operationId: get_reference_entity_media_files__code
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
          x-content-type: Mime-type of the media file
          x-details: Returns the binary of the media file
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
      summary: Download the media file associated to a reference entity or a record
      tags:
      - Reference entity media file
      x-content-type: Mime-type of the media file
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities/{code}:
    get:
      description: This endpoint allows you to get the information about a given reference
        entity.
      operationId: get_reference_entities__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_reference_entities__code__200_response'
          description: OK
          x-details: Returns the content of the reference entity in JSON format.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a reference entity
      tags:
      - Reference entity
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given reference entity. Note\
        \ that if the reference entity does not already exist, it creates it."
      operationId: patch_reference_entity__code_
      parameters:
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_reference_entity__code__request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a reference entity
      tags:
      - Reference entity
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities/{reference_entity_code}/attributes:
    get:
      description: This endpoint allows you to get the list of attributes of a given
        reference entity.
      operationId: get_reference_entities__code__attributes
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_reference_entities__code__attributes_200_response_inner'
                type: array
          description: Return the attributes of the given reference entity
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get the list of attributes of a given reference entity
      tags:
      - Reference entity attribute
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options:
    get:
      description: This endpoint allows you to get a list of attribute options for
        a given reference entity.
      operationId: get_reference_entity_attributes__attribute_code__options
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_reference_entity_attributes__attribute_code__options_200_response_inner'
                type: array
          description: Return the options of the given attributes of the given reference
            entity
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a list of attribute options of a given attribute for a given reference
        entity
      tags:
      - Reference entity attribute option
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}:
    get:
      description: This endpoint allows you to get the information about a given attribute
        option.
      operationId: get_reference_entity_attributes__attribute_code__options__code_
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_reference_entity_attributes__attribute_code__options_200_response_inner'
          description: OK
          x-details: Returns the content of the reference entity attribute option
            in JSON format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an attribute option for a given attribute of a given reference
        entity
      tags:
      - Reference entity attribute option
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given option for a given\
        \ attribute and a given reference entity. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\"\
        >Update behavior</a>. Note that if the option does not already exist for the\
        \ given attribute of the given reference entity, it creates it."
      operationId: patch_reference_entity_attributes__attribute_code__options__code_
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      - description: Code of the attribute
        in: path
        name: attribute_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/get_reference_entity_attributes__attribute_code__options_200_response_inner'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a reference entity attribute option
      tags:
      - Reference entity attribute option
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}:
    get:
      description: This endpoint allows you to get the information about a given attribute
        for a given reference entity.
      operationId: get_reference_entity_attributes__code_
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_reference_entities__code__attributes_200_response_inner'
          description: OK
          x-details: Returns the content of the reference entity attribute in JSON
            format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get an attribute of a given reference entity
      tags:
      - Reference entity attribute
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given attribute for a given\
        \ renference entity. Note that if the attribute does not already exist for\
        \ the given reference entity, it creates it."
      operationId: patch_reference_entity_attributes__code_
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/get_reference_entities__code__attributes_200_response_inner'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create an attribute of a given reference entity
      tags:
      - Reference entity attribute
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities/{reference_entity_code}/records:
    get:
      description: This endpoint allows you to get a list of records of a given reference
        entity. Records are paginated and can be filtered.
      operationId: get_reference_entity_records
      parameters:
      - description: "Filter records of the reference entity, for more details see\
          \ the <a href=\"/documentation/filter.html#filter-reference-entity-records\"\
          >Filters</a> section"
        in: query
        name: search
        schema:
          type: string
      - description: "Filter attribute values to return scopable attributes for the\
          \ given channel as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#record-values-by-channel\"\
          >Filter attribute values by channel</a> section"
        in: query
        name: channel
        schema:
          type: string
      - description: "Filter attribute values to return localizable attributes for\
          \ the given locales as well as the non localizable/non scopable attributes,\
          \ for more details see the <a href=\"/documentation/filter.html#record-values-by-locale\"\
          >Filter attribute values by locale</a> section"
        in: query
        name: locales
        schema:
          type: string
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      - description: "Cursor when using the `search_after` pagination method type.\
          \ <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
          >Pagination</a> section"
        in: query
        name: search_after
        schema:
          default: cursor to the first page
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference_entity_record'
            _embedded:
              example:
                items:
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/kartell
                  code: kartell
                  created: 2021-01-01T01:23:34+00:00
                  updated: 2021-02-03T23:45:60+00:00
                  values:
                    country:
                    - data: italy
                    description:
                    - data: The contemporary Italian furniture brand
                      locale: en_US
                    - data: L'éditeur de meubles comtemporain italien
                      locale: fr_FR
                    image:
                    - data: 0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg
                    label:
                    - data: Kartell
                      locale: en_US
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/usm
                  code: usm
                  created: 2021-01-01T01:23:34+00:00
                  updated: 2021-02-03T23:45:60+00:00
                  values:
                    country:
                    - data: switzerland
                    description:
                    - data: Modular furniture from Switzerland for your home and office
                      locale: en_US
                    - data: L'éditeur de meubles modulaires suisse pour votre intérieur
                        et pour les entreprises
                      locale: fr_FR
                    image:
                    - data: 9/c/g/1/0cb0c0e115dedba76f8d1ad8343ec897abc43bv4_image.jpg
                    label:
                    - data: USM
                      locale: en_US
                - _links:
                    self:
                      href: https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/ligneroset
                  code: ligneroset
                  created: 2021-01-01T01:23:34+00:00
                  updated: 2021-02-03T23:45:60+00:00
                  values:
                    country:
                    - data: france
                    description:
                    - data: Very well known French brand of modern and luxury furniture
                      locale: en_US
                    - data: La marque renommée des meubles de luxe à la française
                      locale: fr_FR
                    image:
                    - data: 4/b/0/1/0cb0c0e115dedde78b8d1ad8343ec980cd5daa54_image.jpg
                    label:
                    - data: Ligne Roset
                      locale: en_US
            _links:
              example:
                first:
                  href: https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records
                next:
                  href: https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records?search_after=2x088w%3D%3D
                self:
                  href: https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records
          description: Return the records of the given reference entity paginated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get the list of the records of a reference entity
      tags:
      - Reference entity record
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - _embedded
      - _links
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update and/or create several records\
        \ of one given reference entity at once. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\"\
        >Update behavior</a>. Note that if the record does not already exist for the\
        \ given reference entity, it creates it."
      operationId: patch_reference_entity_records
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              example:
              - code: kartell
                values:
                  collection_overview:
                  - data: 5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png
                  country:
                  - data: italy
                  creation_year:
                  - data: "1949"
                  description:
                  - data: "Kartell, the Italian furniture company that sells modern\
                      \ and remarkable pieces of furnitures."
                    locale: en_US
                  - data: "Kartell, l'éditeur de meuble italien spécialisé dans la\
                      \ signature de belle pièces au design contemporain."
                    locale: fr_FR
                  image:
                  - data: 0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg
                  label:
                  - data: Kartell
                    locale: en_US
              - code: ligneroset
                values:
                  country:
                  - data: france
                  creation_year:
                  - data: "1860"
                  description:
                  - data: Very well known French brand of modern and luxury furniture
                    locale: en_US
                  - data: La marque renommée des meubles de luxe à la française
                    locale: fr_FR
                  image:
                  - data: 4/b/0/1/0cb0c0e115dedde78b8d1ad8343ec980cd5daa54_image.jpg
                  label:
                  - data: Ligne Roset
                    locale: en_US
              - code: usm
                values:
                  country:
                  - data: switzerland
                  creation_year:
                  - data: "1885"
                  description:
                  - data: Modular furniture from Switzerland for your home and office
                    locale: en_US
                  - data: L'éditeur de meubles modulaires suisse pour votre intérieur
                      et pour les entreprises
                    locale: fr_FR
                  image:
                  - data: 9/c/g/1/0cb0c0e115dedba76f8d1ad8343ec897abc43bv4_image.jpg
                  label:
                  - data: USM
                    locale: en_US
              items:
                $ref: '#/components/schemas/patch_reference_entity_records_request_inner'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/patch_assets_200_response_inner'
                type: array
          description: OK
          x-details: Returns an JSON array in which each object gives you the status
            of each record creation or update
          x-no-entity: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 413
            message:
              example: "Too many resources to process, 100 is the maximum allowed."
          description: Request Entity Too Large
          x-details: There are too many resources to process (max 100) or the line
            of JSON is too long (max 1 000 000 characters)
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
      summary: Update/create several reference entity records
      tags:
      - Reference entity record
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
      - code
      - message
  /api/rest/v1/reference-entities/{reference_entity_code}/records/{code}:
    get:
      description: This endpoint allows you to get the information about a given record
        for a given reference entity.
      operationId: get_reference_entity_records__code_
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_reference_entity_records_request_inner'
          description: OK
          x-details: Returns the content of the product in JSON standard format
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 404
            message:
              example: Resource `my_resource_code` does not exist.
          description: Resource not found
          x-details: The resource code given in the URI does not correspond to any
            existing PIM resource
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get a record of a given reference entity
      tags:
      - Reference entity record
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - message
    patch:
      description: "This endpoint allows you to update a given record of a given renference\
        \ entity. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\"\
        >Update behavior</a>. Note that if the record does not already exist for the\
        \ given reference entity, it creates it."
      operationId: patch_reference_entity_records__code_
      parameters:
      - description: Code of the reference entity
        in: path
        name: reference_entity_code
        required: true
        schema:
          type: string
      - description: Code of the resource
        in: path
        name: code
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/patch_reference_entity_records__code__request'
        required: true
      responses:
        "201":
          content: {}
          description: Created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          x-details: Means that the creation was successful
        "204":
          content: {}
          description: No content to return
          headers:
            Location:
              description: URI of the updated resource
              schema:
                type: string
          x-details: Means that the update was successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 401
            message:
              example: Authentication is required
          description: Authentication required
          x-details: Can be caused by a missing or expired token
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 415
            message:
              example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
                is allowed.
          description: Unsupported Media type
          x-details: The `Content-type` header has to be `application/json`
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            _links:
              example:
                documentation:
                  href: http://api.akeneo.com/api-reference.html
            code:
              example: 422
            message:
              example: "Property \"labels\" expects an array as data, \"NULL\" given.\
                \ Check the API reference documentation."
          description: Unprocessable entity
          x-details: The validation of the entity given in the body of the request
            failed
      summary: Update/create a record of a given reference entity
      tags:
      - Reference entity record
      x-ee: true
      x-versions:
      - 3.x
      - "4.0"
      - "5.0"
      - "6.0"
      - "7.0"
      - SaaS
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - _links
      - application/json
      - code
      - message
  /api/rest/v1/system-information:
    get:
      description: This endpoint allows you to get the version and the edition of
        the PIM. Example of what you can get <table class="description-table"> <thead>
        <tr> <th align="center">Environment</th> <th align="center">Edition</th> <th
        align="center">Version</th> </tr> </thead> <tbody> <tr> <td align="center">SaaS
        EE</td> <td align="center">Serenity</td> <td align="center">v20230112013744</td>
        </tr> <tr> <td align="center">SaaS CE</td> <td align="center">GE</td> <td
        align="center">v20210526040645</td> </tr> <tr> <td align="center">PaaS or
        onPrem EE</td> <td align="center">EE</td> <td align="center">5.0.28</td> </tr>
        <tr> <td align="center">PaaS or onPrem CE</td> <td align="center">CE</td>
        <td align="center">5.0.28</td> </tr> </tbody> </table>
      operationId: get_system_information
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_system_information_200_response'
            edition:
              example: Serenity
            version:
              example: "20210521041041"
          description: Return the version and the edition of the PIM.
          x-no-entity: true
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_token_400_response'
            code:
              example: 406
            message:
              example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
                is allowed.
          description: Not Acceptable
          x-details: The `Accept` header is not `application/json` but it should
      summary: Get system information
      tags:
      - System
      x-no-token: true
      x-versions:
      - "6.0"
      - "7.0"
      - SaaS
      x-accepts:
      - application/json
      - code
      - edition
      - message
      - version
components:
  parameters:
    asset_code:
      description: Code of the asset
      in: path
      name: asset_code
      required: true
      schema:
        type: string
    asset_family_code:
      description: Code of the asset family
      in: path
      name: asset_family_code
      required: true
      schema:
        type: string
    attribute_code:
      description: Code of the attribute
      in: path
      name: attribute_code
      required: true
      schema:
        type: string
    channel_code:
      description: Code of the channel
      in: path
      name: channel_code
      required: true
      schema:
        type: string
    code:
      description: Code of the resource
      in: path
      name: code
      required: true
      schema:
        type: string
    family_code:
      description: Code of the family
      in: path
      name: family_code
      required: true
      schema:
        type: string
    limit:
      description: "Number of results by page, see <a href=\"/documentation/pagination.html\"\
        >Pagination</a> section"
      in: query
      name: limit
      schema:
        default: 10
        maximum: 100
        minimum: 1
        type: integer
    locale_code:
      description: Code of the locale if the asset is localizable or equal to `no-locale`
        if the asset is not localizable
      in: path
      name: locale_code
      required: true
      schema:
        type: string
    page:
      description: "Number of the page to retrieve when using the `page` pagination\
        \ method type. <strong>Should never be set manually</strong>, see <a href=\"\
        /documentation/pagination.html#pagination\">Pagination</a> section"
      in: query
      name: page
      schema:
        default: 1
        type: integer
    pagination_type:
      description: "Pagination method type, see <a href=\"/documentation/pagination.html\"\
        >Pagination</a> section"
      in: query
      name: pagination_type
      schema:
        default: page
        enum:
        - page
        - search_after
        type: string
        x-validation-rules: One of the following values
      x-validation-rules: One of the following values
    reference_entity_code:
      description: Code of the reference entity
      in: path
      name: reference_entity_code
      required: true
      schema:
        type: string
    search_after:
      description: "Cursor when using the `search_after` pagination method type. <strong>Should\
        \ never be set manually</strong>, see <a href=\"/documentation/pagination.html\"\
        >Pagination</a> section"
      in: query
      name: search_after
      schema:
        default: cursor to the first page
        type: string
    updated_after:
      description: Filter products that have been updated AFTER the provided date
        (Only available on Catalogs endpoints)
      in: query
      name: updated_after
      schema:
        format: date
        type: string
        x-from-version: SaaS
      x-from-version: SaaS
    updated_before:
      description: Filter products that have been updated BEFORE the provided date
        (Only available on Catalogs endpoints)
      in: query
      name: updated_before
      schema:
        format: date
        type: string
        x-from-version: SaaS
      x-from-version: SaaS
    uuid:
      description: Uuid of the resource
      in: path
      name: uuid
      required: true
      schema:
        type: string
    with_attribute_options:
      description: Return labels of attribute options in the response. (Only available
        since the 5.0 version)
      in: query
      name: with_attribute_options
      schema:
        default: false
        type: boolean
        x-from-version: "5.0"
      x-from-version: "5.0"
    with_completenesses:
      description: Return product completenesses in the response. (Only available
        since the 6.0 version)
      in: query
      name: with_completenesses
      schema:
        default: false
        type: boolean
        x-from-version: "6.0"
      x-from-version: "6.0"
    with_count:
      description: "Return the count of items in the response. Be carefull with that,\
        \ on a big catalog, it can decrease performance in a significative way"
      in: query
      name: with_count
      schema:
        default: false
        type: boolean
    with_enriched_attributes:
      description: Return attribute values of the category (only available on SaaS
        platforms)
      in: query
      name: with_enriched_attributes
      schema:
        type: boolean
        x-from-version: SaaS
      x-from-version: SaaS
    with_position:
      description: Return information about category position into its category tree
        (only available since the 7.0 version)
      in: query
      name: with_position
      schema:
        type: boolean
        x-from-version: "7.0"
      x-from-version: "7.0"
    with_quality_scores__product_models:
      description: Return product model quality scores in the response. <strong>(Only
        available since the 6.0 version)</strong>
      in: query
      name: with_quality_scores
      schema:
        type: boolean
        x-from-version: "6.0"
      x-from-version: "6.0"
    with_quality_scores__products:
      description: Return product quality scores in the response. (Only available
        since the 5.0 version)
      in: query
      name: with_quality_scores
      schema:
        default: false
        type: boolean
        x-from-version: "5.0"
      x-from-version: "5.0"
    with_table_select_options:
      description: Return the options of 'select' column types (of a table attribute)
        in the response. (Only available since the 7.0 version)
      in: query
      name: with_table_select_options
      schema:
        default: false
        type: boolean
        x-from-version: "7.0"
      x-from-version: "7.0"
  responses:
    "400Error":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 400
        message:
          example: Invalid JSON message received
      description: Bad request
      x-details: Can be caused by a malformed JSON request
    "401Error":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 401
        message:
          example: Authentication is required
      description: Authentication required
      x-details: Can be caused by a missing or expired token
    "403CatalogError":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 403
        message:
          example: Access forbidden. You are not allowed to list catalogs.
      description: Access forbidden
      x-details: The app does not have the permission to execute this request
    "403Error":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 403
        message:
          example: Access forbidden. You are not allowed to list categories.
      description: Access forbidden
      x-details: The user does not have the permission to execute this request
    "404CatalogError":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 404
        message:
          example: Catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c" does not exist or
            you can't access it.
      description: Catalog not found
      x-details: The catalog id given in the URI does not exist
    "404Error":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 404
        message:
          example: Resource `my_resource_code` does not exist.
      description: Resource not found
      x-details: The resource code given in the URI does not correspond to any existing
        PIM resource
    "406Error":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 406
        message:
          example: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
            is allowed.
      description: Not Acceptable
      x-details: The `Accept` header is not `application/json` but it should
    "413Error":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 413
        message:
          example: "Too many resources to process, 100 is the maximum allowed."
      description: Request Entity Too Large
      x-details: There are too many resources to process (max 100) or the line of
        JSON is too long (max 1 000 000 characters)
    "415Error":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 415
        message:
          example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’
            is allowed.
      description: Unsupported Media type
      x-details: The `Content-type` header has to be `application/json`
    "415ErrorMultipart":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 415
        message:
          example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’
            is allowed.
      description: Unsupported Media type
      x-details: The `Content-type` header has to be `multipart/form-data`
    "415ErrorStream":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        code:
          example: 415
        message:
          example: ‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’
            is allowed.
      description: Unsupported Media type
      x-details: The `Content-type` header has to be `application/vnd.akeneo.collection+json`
    "422Error":
      content:
        application/json:
          schema:
            properties:
              code:
                description: HTTP status code
                type: integer
              message:
                description: Message explaining the error
                type: string
            type: object
        _links:
          example:
            documentation:
              href: http://api.akeneo.com/api-reference.html
        code:
          example: 422
        message:
          example: "Property \"labels\" expects an array as data, \"NULL\" given.\
            \ Check the API reference documentation."
      description: Unprocessable entity
      x-details: The validation of the entity given in the body of the request failed
    AssetMediaFileUploaded:
      content: {}
      description: Created
      headers:
        Asset-media-file-code:
          description: Code of the media file
          schema:
            type: string
        Location:
          description: URI of the created resource
          schema:
            type: string
      x-details: Means that the media file creation was successful
    Created:
      content: {}
      description: Created
      headers:
        Location:
          description: URI of the created resource
          schema:
            type: string
      x-details: Means that the creation was successful
    DeprecatedAssetReferenceFileUploaded:
      content:
        application/json:
          schema:
            properties:
              errors:
                items:
                  properties:
                    channel:
                      description: Channel for which the variation file generation
                        failed
                      type: string
                    locale:
                      description: Locale for which the variation file generation
                        failed
                      type: string
                    message:
                      description: Message explaining why the variation file generation
                        failed
                      type: string
                  type: object
                type: array
              message:
                description: Message explaining the warning
                type: string
            type: object
      description: Uploaded
      headers:
        Location:
          description: URI of the created resource
          schema:
            type: string
      x-details: "Means that the reference file upload was successful. Beware that\
        \ even if the reference file upload is complete, some variation files generations\
        \ could have failed. If so, you will see a warning message in the response\
        \ body."
      x-no-entity: true
    NoContent:
      content: {}
      description: No content to return
      headers:
        Location:
          description: URI of the updated resource
          schema:
            type: string
      x-details: Means that the update was successful
    ReferenceEntityMediaFileUploaded:
      content: {}
      description: Created
      headers:
        Reference-entities-media-file-code:
          description: Code of the media file
          schema:
            type: string
        Location:
          description: URI of the created resource
          schema:
            type: string
      x-details: Means that the media file creation was successful
    Submitted:
      content: {}
      description: Submitted
      headers:
        Location:
          description: URI of the created resource
          schema:
            type: string
      x-details: Means that the draft submission was successful
  schemas:
    AppCatalogList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          enabled: false
          id: 12351d98-200e-4bbc-aa19-7fdda1bd14f2
          name: My app catalog
        properties:
          enabled:
            default: false
            description: Whether the catalog is enabled or not
            type: boolean
          id:
            description: Catalog id
            type: string
            x-immutable: true
          name:
            description: Catalog name
            type: string
        type: object
    AssetAttributeList:
      items:
        $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner'
      type: array
    AssetAttributeOptionList:
      items:
        $ref: '#/components/schemas/get_asset_family_attributes__attribute_code__options_200_response_inner'
      type: array
    AssetFamilyItemList:
      properties:
        _links:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
      type: object
    AssetFamilyList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          attribute_as_main_media: main_image
          code: model_pictures
          labels:
            en_US: Model pictures
            fr_FR: Photographies en pied
          naming_convention:
            abort_asset_creation_on_error: true
            pattern: /(?P<product_ref>.*)-.*/
            source:
              property: code
          product_link_rules:
          - assign_assets_to:
            - attribute: model_pictures
              mode: replace
            product_selections:
            - field: sku
              operator: EQUALS
              value: "{{product_ref}}"
          transformations:
          - filename_suffix: _thumbnailBW
            label: Thumbnail plus black and white transformation
            operations:
            - parameters:
                height: 150
                width: 150
              type: thumbnail
            - parameters:
                colorspace: grey
              type: colorspace
            source:
              attribute: main_image
            target:
              attribute: thumbnail
        properties:
          attribute_as_main_media:
            default: First media file or media link attribute that was created
            description: Attribute code that is used as the main media of the asset
              family.
            type: string
            x-validation-rules: "It should be the code of an attribute that belongs\
              \ to this family, and it must be a media file or a media link attribute\
              \ type."
          code:
            description: Asset family code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_labels'
          naming_convention:
            $ref: '#/components/schemas/AssetFamilyList_allOf_naming_convention'
          product_link_rules:
            description: "The rules that will be run after the asset creation, in\
              \ order to automatically link the assets of this family to a set of\
              \ products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>."
            items:
              $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner'
            type: array
            x-validation-rules: "To know more about the validation of this property,\
              \ take a look at our product link rule format."
          transformations:
            description: "The transformations to perform on source files in order\
              \ to generate new files into your asset attributes (only available since\
              \ v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>."
            items:
              $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_transformations_inner'
            type: array
            x-validation-rules: "To know more about the validation of this property,\
              \ take a look at our transformation format."
            x-from-version: "4.0"
        required:
        - code
        type: object
    AssetItemList:
      properties:
        _links:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
      type: object
    AssetList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: sku_54628_picture1
          created: 2021-05-31T09:23:34+00:00
          updated: 2021-05-31T09:23:34+00:00
          values:
            end_of_use_date:
            - data: 02/03/2021
            main_colors:
            - data:
              - red
              - purple
            media_preview:
            - data: sku_54628_picture1.jpg
            model_wears_size:
            - data: s
            photographer:
            - data: ben_levy
        properties:
          code:
            description: Code of the asset
            type: string
            x-immutable: true
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
            x-from-version: "6.0"
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
            x-from-version: "6.0"
          values:
            $ref: '#/components/schemas/AssetList_allOf_values'
        required:
        - code
        type: object
    AssociationType:
      example:
        code: upsell
        is_quantified: false
        is_two_way: false
        labels:
          en_US: Upsell
          fr_FR: Vente incitative
      properties:
        code:
          description: Association type code
          type: string
          x-immutable: true
        is_quantified:
          default: false
          description: "When true, the association is a quantified association (Only\
            \ available in the PIM Serenity version.)"
          type: boolean
          x-immutable: true
        is_two_way:
          default: false
          description: "When true, the association is a two-way association (Only\
            \ available in the PIM Serenity version.)"
          type: boolean
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Association_types_allOf__embedded_items_inner_allOf_labels'
      required:
      - code
      type: object
    AssociationTypeList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: upsell
          is_quantified: false
          is_two_way: false
          labels:
            en_US: Upsell
            fr_FR: Vente incitative
        properties:
          code:
            description: Association type code
            type: string
            x-immutable: true
          is_quantified:
            default: false
            description: "When true, the association is a quantified association (Only\
              \ available in the PIM Serenity version.)"
            type: boolean
            x-immutable: true
          is_two_way:
            default: false
            description: "When true, the association is a two-way association (Only\
              \ available in the PIM Serenity version.)"
            type: boolean
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Association_types_allOf__embedded_items_inner_allOf_labels'
        required:
        - code
        type: object
    Attribute:
      example:
        allowed_extensions: []
        available_locales: []
        code: release_date
        date_max: 2017-08-08T22:00:00
        date_min: 2017-06-28T08:00:00
        group: marketing
        group_labels:
          en_US: Marketing
          fr_FR: Marketing
        labels:
          en_US: Sale date
          fr_FR: Date des soldes
        localizable: false
        scopable: false
        sort_order: 1
        type: pim_catalog_date
        unique: false
        useable_as_grid_filter: true
      properties:
        allowed_extensions:
          description: Extensions allowed when the attribute type is `pim_catalog_file`
            or `pim_catalog_image`
          items:
            type: string
          type: array
          x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
            types
        available_locales:
          description: "To make the attribute locale specfic, specify here for which\
            \ locales it is specific"
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is an existing and activated
            locale
        code:
          description: Attribute code
          type: string
          x-immutable: true
        date_max:
          description: Maximum date allowed when the attribute type is `pim_catalog_date`
          format: date-time
          type: string
          x-validation-rules: The datetime format follows the ISO-8601 norm
          x-warning: Only for `pim_catalog_date` attribute type
        date_min:
          description: Minimum date allowed when the attribute type is `pim_catalog_date`
          format: date-time
          type: string
          x-validation-rules: The datetime format follows the ISO-8601 norm
          x-warning: Only for `pim_catalog_date` attribute type
        decimals_allowed:
          description: "Whether decimals are allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: boolean
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        default_metric_unit:
          description: Default metric unit when the attribute type is `pim_catalog_metric`
          type: string
          x-validation-rules: Required for `pim_catalog_metric` attribute type
          x-warning: Only for `pim_catalog_metric` attribute type
        default_value:
          description: "Default value for a Yes/No attribute, applied when creating\
            \ a new product or product model (only available since the 5.0)"
          type: boolean
          x-from-version: "5.0"
          x-warning: Only for `pim_catalog_boolean` attribute type
        group:
          description: Attribute group
          type: string
          x-validation-rules: It is the code of an existing group
        group_labels:
          $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_group_labels'
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
        localizable:
          default: false
          description: "Whether the attribute is localizable, i.e. can have one value\
            \ by locale"
          type: boolean
          x-immutable: true
        max_characters:
          description: "Number maximum of characters allowed for the value of the\
            \ attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea`\
            \ or `pim_catalog_identifier`"
          type: integer
          x-warning: "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`\
            \ attribute types"
        max_file_size:
          description: Max file size in MB when the attribute type is `pim_catalog_file`
            or `pim_catalog_image`
          type: string
          x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
            types
        metric_family:
          description: Metric family when the attribute type is `pim_catalog_metric`
          type: string
          x-validation-rules: Required for `pim_catalog_metric` attribute type
          x-immutable: true
          x-warning: Only for `pim_catalog_metric` attribute type
        negative_allowed:
          description: Whether negative values are allowed when the attribute type
            is `pim_catalog_metric` or `pim_catalog_number`
          type: boolean
          x-warning: Only for `pim_catalog_metric` or `pim_catalog_number` attribute
            types
        number_max:
          description: "Maximum integer value allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: string
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        number_min:
          description: "Minimum integer value allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: string
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        reference_data_name:
          description: Reference entity code when the attribute type is `akeneo_reference_entity`
            or `akeneo_reference_entity_collection` OR Asset family code when the
            attribute type is `pim_catalog_asset_collection`
          type: string
          x-validation-rules: Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
            or `pim_catalog_asset_collection` attribute types
          x-warning: Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
            or `pim_catalog_asset_collection` attribute types
        scopable:
          default: false
          description: "Whether the attribute is scopable, i.e. can have one value\
            \ by channel"
          type: boolean
          x-immutable: true
        sort_order:
          description: Order of the attribute in its group
          type: integer
          x-validation-rules: It is a positive integer
        table_configuration:
          description: Configuration of the Table attribute (columns)
          items:
            $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner'
          type: array
          x-validation-rules: Required only for `pim_catalog_table` attribute type
          x-warning: Only for `pim_catalog_table` attribute type
        type:
          description: Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a>
            section for more details.
          enum:
          - pim_catalog_identifier
          - pim_catalog_metric
          - pim_catalog_number
          - pim_catalog_reference_data_multi_select
          - pim_catalog_reference_data_simple_select
          - pim_catalog_simpleselect
          - pim_catalog_multiselect
          - pim_catalog_date
          - pim_catalog_textarea
          - pim_catalog_text
          - pim_catalog_file
          - pim_catalog_image
          - pim_catalog_price_collection
          - pim_catalog_boolean
          - akeneo_reference_entity
          - akeneo_reference_entity_collection
          - pim_catalog_asset_collection
          type: string
          x-validation-rules: The type is one of the following values
          x-immutable: true
        unique:
          description: Whether two values for the attribute cannot be the same
          type: boolean
          x-immutable: true
        useable_as_grid_filter:
          description: Whether the attribute can be used as a filter for the product
            grid in the PIM user interface
          type: boolean
        validation_regexp:
          description: Regexp expression used to validate any attribute value when
            the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
          type: string
          x-validation-rules: Required when the property `validation_rule` is equal
            to `regexp`
          x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
            types
        validation_rule:
          description: Validation rule type used to validate any attribute value when
            the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
          type: string
          x-validation-rules: Equal to `regexp` when the attribute type is equal to
            `pim_catalog_identifier`
          x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
            types
        wysiwyg_enabled:
          description: Whether the WYSIWYG interface is shown when the attribute type
            is `pim_catalog_textarea`
          type: boolean
          x-warning: Only for `pim_catalog_textarea` attribute type
      required:
      - code
      - group
      - type
      type: object
    AttributeGroup:
      example:
        attributes:
        - sku
        - name
        - description
        - response_time
        - release_date
        - price
        code: marketing
        labels:
          en_US: Marketing
          fr_FR: Marketing
        sort_order: 4
      properties:
        attributes:
          description: Attribute codes that compose the attribute group
          items:
            type: string
          type: array
          x-validation-rules: "Each string of the array is an existing attribute code,\
            \ an attribute can only be in one attribute group"
        code:
          description: Attribute group code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Attribute_groups_allOf__embedded_items_inner_allOf_labels'
        sort_order:
          description: Attribute group order among other attribute groups
          type: integer
          x-validation-rules: It is a positive integer
      required:
      - code
      type: object
    AttributeGroupList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          attributes:
          - sku
          - name
          - description
          - response_time
          - release_date
          - price
          code: marketing
          labels:
            en_US: Marketing
            fr_FR: Marketing
          sort_order: 4
        properties:
          attributes:
            description: Attribute codes that compose the attribute group
            items:
              type: string
            type: array
            x-validation-rules: "Each string of the array is an existing attribute\
              \ code, an attribute can only be in one attribute group"
          code:
            description: Attribute group code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Attribute_groups_allOf__embedded_items_inner_allOf_labels'
          sort_order:
            description: Attribute group order among other attribute groups
            type: integer
            x-validation-rules: It is a positive integer
        required:
        - code
        type: object
    AttributeList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          allowed_extensions: []
          available_locales: []
          code: release_date
          date_max: 2017-08-08T22:00:00
          date_min: 2017-06-28T08:00:00
          group: marketing
          group_labels:
            en_US: Marketing
            fr_FR: Marketing
          labels:
            en_US: Sale date
            fr_FR: Date des soldes
          localizable: false
          scopable: false
          sort_order: 1
          type: pim_catalog_date
          unique: false
          useable_as_grid_filter: true
        properties:
          allowed_extensions:
            description: Extensions allowed when the attribute type is `pim_catalog_file`
              or `pim_catalog_image`
            items:
              type: string
            type: array
            x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
              types
          available_locales:
            description: "To make the attribute locale specfic, specify here for which\
              \ locales it is specific"
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is an existing and activated
              locale
          code:
            description: Attribute code
            type: string
            x-immutable: true
          date_max:
            description: Maximum date allowed when the attribute type is `pim_catalog_date`
            format: date-time
            type: string
            x-validation-rules: The datetime format follows the ISO-8601 norm
            x-warning: Only for `pim_catalog_date` attribute type
          date_min:
            description: Minimum date allowed when the attribute type is `pim_catalog_date`
            format: date-time
            type: string
            x-validation-rules: The datetime format follows the ISO-8601 norm
            x-warning: Only for `pim_catalog_date` attribute type
          decimals_allowed:
            description: "Whether decimals are allowed when the attribute type is\
              \ `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            type: boolean
            x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
              \ or `pim_catalog_number` attribute types"
          default_metric_unit:
            description: Default metric unit when the attribute type is `pim_catalog_metric`
            type: string
            x-validation-rules: Required for `pim_catalog_metric` attribute type
            x-warning: Only for `pim_catalog_metric` attribute type
          default_value:
            description: "Default value for a Yes/No attribute, applied when creating\
              \ a new product or product model (only available since the 5.0)"
            type: boolean
            x-from-version: "5.0"
            x-warning: Only for `pim_catalog_boolean` attribute type
          group:
            description: Attribute group
            type: string
            x-validation-rules: It is the code of an existing group
          group_labels:
            $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_group_labels'
          labels:
            $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
          localizable:
            default: false
            description: "Whether the attribute is localizable, i.e. can have one\
              \ value by locale"
            type: boolean
            x-immutable: true
          max_characters:
            description: "Number maximum of characters allowed for the value of the\
              \ attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea`\
              \ or `pim_catalog_identifier`"
            type: integer
            x-warning: "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`\
              \ attribute types"
          max_file_size:
            description: Max file size in MB when the attribute type is `pim_catalog_file`
              or `pim_catalog_image`
            type: string
            x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
              types
          metric_family:
            description: Metric family when the attribute type is `pim_catalog_metric`
            type: string
            x-validation-rules: Required for `pim_catalog_metric` attribute type
            x-immutable: true
            x-warning: Only for `pim_catalog_metric` attribute type
          negative_allowed:
            description: Whether negative values are allowed when the attribute type
              is `pim_catalog_metric` or `pim_catalog_number`
            type: boolean
            x-warning: Only for `pim_catalog_metric` or `pim_catalog_number` attribute
              types
          number_max:
            description: "Maximum integer value allowed when the attribute type is\
              \ `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            type: string
            x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
              \ or `pim_catalog_number` attribute types"
          number_min:
            description: "Minimum integer value allowed when the attribute type is\
              \ `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            type: string
            x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
              \ or `pim_catalog_number` attribute types"
          reference_data_name:
            description: Reference entity code when the attribute type is `akeneo_reference_entity`
              or `akeneo_reference_entity_collection` OR Asset family code when the
              attribute type is `pim_catalog_asset_collection`
            type: string
            x-validation-rules: Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
              or `pim_catalog_asset_collection` attribute types
            x-warning: Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
              or `pim_catalog_asset_collection` attribute types
          scopable:
            default: false
            description: "Whether the attribute is scopable, i.e. can have one value\
              \ by channel"
            type: boolean
            x-immutable: true
          sort_order:
            description: Order of the attribute in its group
            type: integer
            x-validation-rules: It is a positive integer
          table_configuration:
            description: Configuration of the Table attribute (columns)
            items:
              $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner'
            type: array
            x-validation-rules: Required only for `pim_catalog_table` attribute type
            x-warning: Only for `pim_catalog_table` attribute type
          type:
            description: Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a>
              section for more details.
            enum:
            - pim_catalog_identifier
            - pim_catalog_metric
            - pim_catalog_number
            - pim_catalog_reference_data_multi_select
            - pim_catalog_reference_data_simple_select
            - pim_catalog_simpleselect
            - pim_catalog_multiselect
            - pim_catalog_date
            - pim_catalog_textarea
            - pim_catalog_text
            - pim_catalog_file
            - pim_catalog_image
            - pim_catalog_price_collection
            - pim_catalog_boolean
            - akeneo_reference_entity
            - akeneo_reference_entity_collection
            - pim_catalog_asset_collection
            type: string
            x-validation-rules: The type is one of the following values
            x-immutable: true
          unique:
            description: Whether two values for the attribute cannot be the same
            type: boolean
            x-immutable: true
          useable_as_grid_filter:
            description: Whether the attribute can be used as a filter for the product
              grid in the PIM user interface
            type: boolean
          validation_regexp:
            description: Regexp expression used to validate any attribute value when
              the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
            type: string
            x-validation-rules: Required when the property `validation_rule` is equal
              to `regexp`
            x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
              types
          validation_rule:
            description: Validation rule type used to validate any attribute value
              when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
            type: string
            x-validation-rules: Equal to `regexp` when the attribute type is equal
              to `pim_catalog_identifier`
            x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
              types
          wysiwyg_enabled:
            description: Whether the WYSIWYG interface is shown when the attribute
              type is `pim_catalog_textarea`
            type: boolean
            x-warning: Only for `pim_catalog_textarea` attribute type
        required:
        - code
        - group
        - type
        type: object
    AttributeOption:
      example:
        attribute: a_simple_select
        code: black
        labels:
          en_US: Black
          fr_FR: Noir
        sort_order: 2
      properties:
        attribute:
          description: Code of attribute related to the attribute option
          type: string
          x-validation-rules: It is the same attribute code as the one given as path
            parameter
        code:
          description: Code of option
          type: string
        labels:
          $ref: '#/components/schemas/Attribute_Options_allOf__embedded_items_inner_allOf_labels'
        sort_order:
          description: Order of attribute option
          type: integer
          x-validation-rules: It is a positive integer
      required:
      - code
      type: object
    AttributeOptionList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          attribute: a_simple_select
          code: black
          labels:
            en_US: Black
            fr_FR: Noir
          sort_order: 2
        properties:
          attribute:
            description: Code of attribute related to the attribute option
            type: string
            x-validation-rules: It is the same attribute code as the one given as
              path parameter
          code:
            description: Code of option
            type: string
          labels:
            $ref: '#/components/schemas/Attribute_Options_allOf__embedded_items_inner_allOf_labels'
          sort_order:
            description: Order of attribute option
            type: integer
            x-validation-rules: It is a positive integer
        required:
        - code
        type: object
    Category:
      example:
        code: winter_collection
        labels:
          en_US: Winter collection
          fr_FR: Collection hiver
        position: 1
        updated: 2021-05-22T12:48:00+02:00
        values:
          description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US:
            attribute_code: description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26
            channel: ecommerce
            data: |
              <p>Winter collection description</p>
            locale: en_US
            type: textarea
      properties:
        code:
          description: Category code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_labels'
        parent:
          default: "null"
          description: Category code of the parent's category
          type: string
          x-validation-rules: "&bull; It is either equal to `null` or to an existing\
            \ category code. &#10;&bull; If equal to an existing category code, it\
            \ cannot reference itself."
        position:
          description: "Position of the category in its level, start from 1 (only\
            \ available since the 7.0 version and when query parameter \"with_position\"\
            \ is set to \"true\")"
          type: integer
          x-read-only: true
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        values:
          $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      type: object
    CategoryList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: winter_collection
          labels:
            en_US: Winter collection
            fr_FR: Collection hiver
          position: 1
          updated: 2021-05-22T12:48:00+02:00
          values:
            description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US:
              attribute_code: description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26
              channel: ecommerce
              data: |
                <p>Winter collection description</p>
              locale: en_US
              type: textarea
        properties:
          code:
            description: Category code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_labels'
          parent:
            default: "null"
            description: Category code of the parent's category
            type: string
            x-validation-rules: "&bull; It is either equal to `null` or to an existing\
              \ category code. &#10;&bull; If equal to an existing category code,\
              \ it cannot reference itself."
          position:
            description: "Position of the category in its level, start from 1 (only\
              \ available since the 7.0 version and when query parameter \"with_position\"\
              \ is set to \"true\")"
            type: integer
            x-read-only: true
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          values:
            $ref: '#/components/schemas/CategoryList_allOf_values'
        required:
        - code
        type: object
    Channel:
      example:
        category_tree: master
        code: ecommerce
        conversion_units:
          weight: KILOGRAM
        currencies:
        - USD
        - EUR
        labels:
          de_DE: Ecommerce
          en_US: Ecommerce
          fr_FR: Ecommerce
        locales:
        - de_DE
        - en_US
        - fr_FR
      properties:
        category_tree:
          description: Code of the category tree linked to the channel
          type: string
          x-validation-rules: It is the code of an existing category code that is
            a tree (a category without parent)
        code:
          description: Channel code
          type: string
          x-immutable: true
        conversion_units:
          $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_conversion_units'
        currencies:
          description: Codes of activated currencies for the channel
          items:
            type: string
          type: array
          x-validation-rules: '&bull; Each string of the array is an existing currency
            code &#10;&bull; At least one currency in the array'
        labels:
          $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_labels'
        locales:
          description: Codes of activated locales for the channel
          items:
            type: string
          type: array
          x-validation-rules: '&bull; Each string of the array is an existing locale
            code &#10;&bull; At least one locale in the array'
      required:
      - category_tree
      - code
      - currencies
      - locales
      type: object
    ChannelList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          category_tree: master
          code: ecommerce
          conversion_units:
            weight: KILOGRAM
          currencies:
          - USD
          - EUR
          labels:
            de_DE: Ecommerce
            en_US: Ecommerce
            fr_FR: Ecommerce
          locales:
          - de_DE
          - en_US
          - fr_FR
        properties:
          category_tree:
            description: Code of the category tree linked to the channel
            type: string
            x-validation-rules: It is the code of an existing category code that is
              a tree (a category without parent)
          code:
            description: Channel code
            type: string
            x-immutable: true
          conversion_units:
            $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_conversion_units'
          currencies:
            description: Codes of activated currencies for the channel
            items:
              type: string
            type: array
            x-validation-rules: '&bull; Each string of the array is an existing currency
              code &#10;&bull; At least one currency in the array'
          labels:
            $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_labels'
          locales:
            description: Codes of activated locales for the channel
            items:
              type: string
            type: array
            x-validation-rules: '&bull; Each string of the array is an existing locale
              code &#10;&bull; At least one locale in the array'
        required:
        - category_tree
        - code
        - currencies
        - locales
        type: object
    Currency:
      example:
        code: EUR
        enabled: true
      properties:
        code:
          description: Currency code
          type: string
          x-immutable: true
        enabled:
          description: Whether the currency is enabled
          type: boolean
      required:
      - code
      type: object
    CurrencyList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: EUR
          enabled: true
        properties:
          code:
            description: Currency code
            type: string
            x-immutable: true
          enabled:
            description: Whether the currency is enabled
            type: boolean
        required:
        - code
        type: object
    DeprecatedAsset:
      example:
        categories:
        - tshirts_assets
        code: tshirt_artemis_main_picture
        description: The main picture of the Artemis t-shirt
        end_of_use: 2019-09-01T00:00:00+0200
        localizable: false
        reference_files:
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale
          code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg
        tags:
        - tshirts
        - red
        - summer
        variation_files:
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale
          code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg
          scope: e_commerce
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale
          code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg
          scope: print
      properties:
        categories:
          description: Codes of the PAM asset categories in which the asset is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing asset
            category code
        code:
          description: PAM asset code
          type: string
          x-immutable: true
        description:
          description: Description of the PAM asset
          type: string
        end_of_use:
          description: Date on which the PAM asset expire
          format: dateTime
          type: string
          x-validation-rules: The date follows the ISO 8601 format
        localizable:
          default: false
          description: "Whether the asset is localized or not, meaning if you want\
            \ to have different reference files for each of your locale"
          type: boolean
          x-immutable: true
        reference_files:
          description: Reference files of the PAM asset
          items:
            $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner'
          type: array
          x-read-only: true
        tags:
          description: Tags of the PAM asset
          items:
            type: string
          type: array
        variation_files:
          description: Variations of the PAM asset
          items:
            $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner'
          type: array
          x-read-only: true
      required:
      - code
      type: object
    DeprecatedAssetCategory:
      example:
        code: front_views
        labels:
          en_US: Front views
          fr_FR: Vues de face
        parent: pictures
      properties:
        code:
          description: PAM asset category code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf_labels'
        parent:
          default: "null"
          description: PAM ssset category code of the parent's asset category
          type: string
          x-validation-rules: "&bull; It is either equal to `null` or to an existing\
            \ asset category code. &#10;&bull; If equal to an existing asset category\
            \ code, it cannot reference itself."
      required:
      - code
      type: object
    DeprecatedAssetCategoryList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: front_views
          labels:
            en_US: Front views
            fr_FR: Vues de face
          parent: pictures
        properties:
          code:
            description: PAM asset category code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf_labels'
          parent:
            default: "null"
            description: PAM ssset category code of the parent's asset category
            type: string
            x-validation-rules: "&bull; It is either equal to `null` or to an existing\
              \ asset category code. &#10;&bull; If equal to an existing asset category\
              \ code, it cannot reference itself."
        required:
        - code
        type: object
    DeprecatedAssetList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          categories:
          - tshirts_assets
          code: tshirt_artemis_main_picture
          description: The main picture of the Artemis t-shirt
          end_of_use: 2019-09-01T00:00:00+0200
          localizable: false
          reference_files:
          - _link:
              download:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download
              self:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale
            code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg
          tags:
          - tshirts
          - red
          - summer
          variation_files:
          - _link:
              download:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download
              self:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale
            code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg
            scope: e_commerce
          - _link:
              download:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download
              self:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale
            code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg
            scope: print
        properties:
          categories:
            description: Codes of the PAM asset categories in which the asset is classified
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing asset
              category code
          code:
            description: PAM asset code
            type: string
            x-immutable: true
          description:
            description: Description of the PAM asset
            type: string
          end_of_use:
            description: Date on which the PAM asset expire
            format: dateTime
            type: string
            x-validation-rules: The date follows the ISO 8601 format
          localizable:
            default: false
            description: "Whether the asset is localized or not, meaning if you want\
              \ to have different reference files for each of your locale"
            type: boolean
            x-immutable: true
          reference_files:
            description: Reference files of the PAM asset
            items:
              $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner'
            type: array
            x-read-only: true
          tags:
            description: Tags of the PAM asset
            items:
              type: string
            type: array
          variation_files:
            description: Variations of the PAM asset
            items:
              $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner'
            type: array
            x-read-only: true
        required:
        - code
        type: object
    DeprecatedAssetReferenceFile:
      example:
        _link:
          download:
            href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download
        code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg
      properties:
        _link:
          $ref: '#/components/schemas/get_reference_files__locale_code__200_response__link'
        code:
          description: Code of the PAM asset reference file
          type: string
          x-immutable: true
        locale:
          description: "Locale of the PAM asset reference file, equal to `null` if\
            \ the asset is not localizable"
          type: string
      type: object
    DeprecatedAssetReferenceFileUploadWarning:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/post_reference_files__locale_code__201_response_errors_inner'
          type: array
        message:
          description: Message explaining the warning
          type: string
      type: object
    DeprecatedAssetTag:
      example:
        code: tshirt
      properties:
        code:
          description: PAM asset tag code
          type: string
          x-immutable: true
      required:
      - code
      type: object
    DeprecatedAssetTagList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: tshirt
        properties:
          code:
            description: PAM asset tag code
            type: string
            x-immutable: true
        required:
        - code
        type: object
    DeprecatedAssetVariationFile:
      example:
        _link:
          download:
            href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download
        code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg
        scope: ecommerce
      properties:
        _link:
          $ref: '#/components/schemas/get_variation_files__channel_code__locale_code_200_response__link'
        code:
          description: Code of the PAM asset variation file
          type: string
          x-immutable: true
        locale:
          description: "Locale of the PAM asset variation file, equal to `null` if\
            \ the asset is not localizable"
          type: string
        scope:
          description: Channel of the PAM asset variation file
          type: string
      type: object
    Error:
      properties:
        code:
          description: HTTP status code
          type: integer
        message:
          description: Message explaining the error
          type: string
      type: object
    ErrorByLine:
      properties:
        code:
          description: "Resource code, only filled when the resource is not a product"
          type: string
        identifier:
          description: "Resource identifier, only filled when the resource is a product"
          type: string
        line:
          description: Line number
          type: integer
        message:
          description: Message explaining the error
          type: string
        status_code:
          description: "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\"\
            >Client errors</a> to understand the meaning of each code"
          type: integer
      type: object
    ErrorByLineProductUuid:
      properties:
        line:
          description: Line number
          type: integer
        message:
          description: Message explaining the error
          type: string
        status_code:
          description: "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\"\
            >Client errors</a> to understand the meaning of each code"
          type: integer
        uuid:
          description: Product uuid
          type: string
      type: object
    ErrorByObject:
      items:
        $ref: '#/components/schemas/patch_assets_200_response_inner'
      type: array
    Family:
      example:
        attribute_as_image: picture
        attribute_as_label: name
        attribute_requirements:
          ecommerce:
          - sku
          - name
          - description
          - price
          - color
          tablet:
          - sku
          - name
          - description
          - price
        attributes:
        - sku
        - name
        - description
        - price
        - color
        - picture
        code: caps
        labels:
          en_US: Caps
          fr_FR: Casquettes
      properties:
        attribute_as_image:
          default: "null"
          description: Attribute code used as the main picture in the user interface
            (only since v2.0)
          type: string
          x-validation-rules: "&bull; It is equal to an existing attribute code &#10;&bull;\
            \ This attribute code is in the array of the property `attributes` &#10;&bull;\
            \ The type of this attribute is `pim_catalog_image`. Since v2.1, you can\
            \ also use a `pim_assets_collection` attribute type"
          x-from-version: "2.0"
        attribute_as_label:
          description: Attribute code used as label
          type: string
          x-validation-rules: '&bull; It is equal to an existing attribute code &#10;&bull;
            This attribute code is in the array of the property `attributes` &#10;&bull;
            The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`'
        attribute_requirements:
          $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_attribute_requirements'
        attributes:
          description: Attributes codes that compose the family
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is an existing attribute code
        code:
          description: Family code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_labels'
      required:
      - attribute_as_label
      - code
      type: object
    FamilyList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          attribute_as_image: picture
          attribute_as_label: name
          attribute_requirements:
            ecommerce:
            - sku
            - name
            - description
            - price
            - color
            tablet:
            - sku
            - name
            - description
            - price
          attributes:
          - sku
          - name
          - description
          - price
          - color
          - picture
          code: caps
          labels:
            en_US: Caps
            fr_FR: Casquettes
        properties:
          attribute_as_image:
            default: "null"
            description: Attribute code used as the main picture in the user interface
              (only since v2.0)
            type: string
            x-validation-rules: "&bull; It is equal to an existing attribute code\
              \ &#10;&bull; This attribute code is in the array of the property `attributes`\
              \ &#10;&bull; The type of this attribute is `pim_catalog_image`. Since\
              \ v2.1, you can also use a `pim_assets_collection` attribute type"
            x-from-version: "2.0"
          attribute_as_label:
            description: Attribute code used as label
            type: string
            x-validation-rules: '&bull; It is equal to an existing attribute code
              &#10;&bull; This attribute code is in the array of the property `attributes`
              &#10;&bull; The type of this attribute is either `pim_catalog_identifier`
              or `pim_catalog_text`'
          attribute_requirements:
            $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_attribute_requirements'
          attributes:
            description: Attributes codes that compose the family
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is an existing attribute
              code
          code:
            description: Family code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_labels'
        required:
        - attribute_as_label
        - code
        type: object
    FamilyVariant:
      example:
        code: shoesVariant
        labels:
          en_US: Shoes variant
          fr_FR: Variante de chaussures
        variant_attribute_sets:
        - attributes:
          - color
          - material
          axes:
          - color
          level: 1
        - attributes:
          - sku
          - size
          axes:
          - size
          level: 2
      properties:
        code:
          description: Family variant code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_labels'
        variant_attribute_sets:
          description: Attributes distribution according to the enrichment level
          items:
            $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner'
          type: array
      required:
      - code
      - variant_attribute_sets
      type: object
    FamilyVariantList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: shoesVariant
          labels:
            en_US: Shoes variant
            fr_FR: Variante de chaussures
          variant_attribute_sets:
          - attributes:
            - color
            - material
            axes:
            - color
            level: 1
          - attributes:
            - sku
            - size
            axes:
            - size
            level: 2
        properties:
          code:
            description: Family variant code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_labels'
          variant_attribute_sets:
            description: Attributes distribution according to the enrichment level
            items:
              $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner'
            type: array
        required:
        - code
        - variant_attribute_sets
        type: object
    ItemList:
      properties:
        _links:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
      type: object
    Locale:
      example:
        code: en_US
        enable: true
      properties:
        code:
          description: Locale code
          type: string
          x-immutable: true
        enabled:
          default: false
          description: Whether the locale is enabled
          type: boolean
      required:
      - code
      type: object
    LocaleList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: en_US
          enable: true
        properties:
          code:
            description: Locale code
            type: string
            x-immutable: true
          enabled:
            default: false
            description: Whether the locale is enabled
            type: boolean
        required:
        - code
        type: object
    MeasureFamily:
      example:
        code: Area
        standard: SQUARE_METER
        units:
        - code: SQUARE_MILLIMETER
          convert:
            mul: "0.001"
          symbol: mm²
        - code: SQUARE_CENTIMETER
          convert:
            mul: "0.001"
          symbol: cm²
      properties:
        code:
          description: Measure family code
          type: string
          x-immutable: true
        standard:
          description: Measure family standard
          type: string
          x-immutable: true
        units:
          description: Family units
          items:
            $ref: '#/components/schemas/Measure_Families_allOf__embedded_items_inner_allOf_units_inner'
          type: array
      required:
      - code
      type: object
    MeasureFamilyList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: Area
          standard: SQUARE_METER
          units:
          - code: SQUARE_MILLIMETER
            convert:
              mul: "0.001"
            symbol: mm²
          - code: SQUARE_CENTIMETER
            convert:
              mul: "0.001"
            symbol: cm²
        properties:
          code:
            description: Measure family code
            type: string
            x-immutable: true
          standard:
            description: Measure family standard
            type: string
            x-immutable: true
          units:
            description: Family units
            items:
              $ref: '#/components/schemas/MeasureFamilyList_allOf_units'
            type: array
        required:
        - code
        type: object
    MeasurementFamily:
      example:
        code: AREA
        labels:
          en_US: Area
          fr_FR: Surface
        standard_unit_code: SQUARE_METER
        units:
          SQUARE_CENTIMETER:
            code: SQUARE_CENTIMETER
            convert_from_standard:
            - operator: mul
              value: "0.0001"
            labels:
              en_US: Square centimeter
              fr_FR: Centimètre carré
            symbol: cm²
          SQUARE_METER:
            code: SQUARE_METER
            convert_from_standard:
            - operator: mul
              value: "1"
            labels:
              en_US: Square meter
              fr_FR: Mètre carré
            symbol: m²
          SQUARE_MILLIMETER:
            code: SQUARE_MILLIMETER
            convert_from_standard:
            - operator: mul
              value: "0.000001"
            labels:
              en_US: Square millimeter
              fr_FR: Millimètre carré
            symbol: mm²
      properties:
        code:
          description: Measurement family code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/measurement_families_get_list_200_response_labels'
        standard_unit_code:
          description: Unit code used as the standard unit for this measurement family
          type: string
          x-validation-rules: The unit code exists in the list of the property `units`
          x-immutable: true
        units:
          $ref: '#/components/schemas/measurement_families_get_list_200_response_units'
      required:
      - code
      - standard_unit_code
      - units
      type: object
    MeasurementFamilyList:
      example:
        code: AREA
        labels:
          en_US: Area
          fr_FR: Surface
        standard_unit_code: SQUARE_METER
        units:
          SQUARE_CENTIMETER:
            code: SQUARE_CENTIMETER
            convert_from_standard:
            - operator: mul
              value: "0.0001"
            labels:
              en_US: Square centimeter
              fr_FR: Centimètre carré
            symbol: cm²
          SQUARE_METER:
            code: SQUARE_METER
            convert_from_standard:
            - operator: mul
              value: "1"
            labels:
              en_US: Square meter
              fr_FR: Mètre carré
            symbol: m²
          SQUARE_MILLIMETER:
            code: SQUARE_MILLIMETER
            convert_from_standard:
            - operator: mul
              value: "0.000001"
            labels:
              en_US: Square millimeter
              fr_FR: Millimètre carré
            symbol: mm²
      properties:
        code:
          description: Measurement family code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/measurement_families_get_list_200_response_labels'
        standard_unit_code:
          description: Unit code used as the standard unit for this measurement family
          type: string
          x-validation-rules: The unit code exists in the list of the property `units`
          x-immutable: true
        units:
          $ref: '#/components/schemas/measurement_families_get_list_200_response_units'
      required:
      - code
      - standard_unit_code
      - units
      type: object
    MediaFile:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/get_media_files__code__200_response_allOf__links'
        type: object
      - example:
          code: 7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg
          extension: jpg
          mime_type: image/jpeg
          original_filename: 10806799-1356.jpg
          size: 16070
        properties:
          code:
            description: Media file code
            type: string
            x-immutable: true
          extension:
            description: Extension of the media file
            type: string
            x-read-only: true
          mime_type:
            description: Mime type of the media file
            type: string
            x-read-only: true
          original_filename:
            description: Original filename of the media file
            type: string
          size:
            description: Size of the media file
            type: integer
            x-read-only: true
        type: object
    MediaFileItemList:
      properties:
        _links:
          $ref: '#/components/schemas/MediaFiles_allOf__embedded_items_inner_allOf__links'
      type: object
    MediaFileList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/MediaFiles_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: 7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg
          extension: jpg
          mime_type: image/jpeg
          original_filename: 10806799-1356.jpg
          size: 16070
        properties:
          code:
            description: Media file code
            type: string
            x-immutable: true
          extension:
            description: Extension of the media file
            type: string
            x-read-only: true
          mime_type:
            description: Mime type of the media file
            type: string
            x-read-only: true
          original_filename:
            description: Original filename of the media file
            type: string
          size:
            description: Size of the media file
            type: integer
            x-read-only: true
        type: object
    Pagination:
      properties:
        _links:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
        current_page:
          description: Current page number
          type: integer
      type: object
    Product:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - sunglass
        categories:
        - summer_collection
        completenesses:
        - data: 10
          locale: en_US
          scope: ecommerce
        - data: 20
          locale: fr_FR
          scope: ecommerce
        - data: 30
          locale: en_US
          scope: tablet
        - data: 40
          locale: fr_FR
          scope: tablet
        created: 2016-06-23T18:24:44+02:00
        enabled: true
        family: tshirt
        groups: []
        identifier: top
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - identifier: model-biker-jacket-leather
              quantity: 2
            products:
            - identifier: cap
              quantity: 2
            - identifier: shoes
              quantity: 1
        updated: 2016-06-25T17:56:12+02:00
        values:
          collection:
          - data:
            - winter_2016
            linked_data:
              winter_2016:
                attribute: collection
                code: winter_2016
                labels:
                  en_US: Winter 2016
                  fr_FR: Hiver 2016
          color:
          - data: black
            linked_data:
              attribute: color
              code: black
              labels:
                en_US: Black
                fr_FR: Noir
          description:
          - data: Summer top
            locale: en_US
            scope: ecommerce
          - data: Top
            locale: en_US
            scope: tablet
          - data: Débardeur pour l'été
            locale: fr_FR
            scope: ecommerce
          - data: Débardeur
            locale: fr_FR
            scope: tablet
          name:
          - data: Top
            locale: en_US
          - data: Débardeur
            locale: fr_FR
          price:
          - data:
            - amount: "15.5"
              currency: EUR
            - amount: "15"
              currency: USD
          size:
          - data: m
            linked_data:
              attribute: size
              code: m
              labels:
                en_US: M
                fr_FR: M
      properties:
        associations:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        completenesses:
          description: "Product completenesses for each channel/locale combination\
            \ (only available since the 7.0 version, and when the \"with_completenesses\"\
            \ query parameter is set to \"true\")"
          items:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
          type: array
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        enabled:
          default: true
          description: Whether the product is enabled
          type: boolean
        family:
          default: null only in the case of a non variant product
          description: <a href='api-reference.html#Family'>Family</a> code from which
            the product inherits its attributes and attributes requirements.
          type: string
          x-validation-rules: "It is equal to an existing family code. In the case\
            \ of variant product, the given family should be the same as the product\
            \ model family."
        groups:
          description: Codes of the groups to which the product belong
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing group
            code
        identifier:
          description: "Product identifier, i.e. the value of the only `pim_catalog_identifier`\
            \ attribute"
          type: string
        metadata:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a> when the product is a variant (only available since the 2.0).
            This parent can be modified since the 2.3.
          type: string
          x-validation-rules: It is equal to an existing product model code only if
            the product is variant otherwise it's equal to null
          x-from-version: "2.0"
        quality_scores:
          description: Product quality scores for each channel/locale combination
            (only available since the 5.0 and when the "with_quality_scores" query
            parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        quantified_associations:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        uuid:
          description: Product UUID
          type: string
          x-from-version: "7.0"
        values:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values'
      required:
      - identifier
      type: object
    ProductExamples:
      type: object
      x-1.7:
        _embedded:
          items:
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/top
            associations:
              PACK:
                groups: []
                products:
                - sunglasses
            categories:
            - summer_collection
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: tshirt
            groups: []
            identifier: top
            quantified_associations:
              PRODUCT_SET:
                products:
                - identifier: cap
                  quantity: 2
                - identifier: shoes
                  quantity: 1
            updated: 2016-06-25T17:56:12+02:00
            values:
              collection:
              - data:
                - winter_2016
              color:
              - data: black
              description:
              - data: Summer top
                locale: en_US
                scope: ecommerce
              - data: Top
                locale: en_US
                scope: tablet
              - data: Débardeur pour l'été
                locale: fr_FR
                scope: ecommerce
              - data: Débardeur
                locale: fr_FR
                scope: tablet
              name:
              - data: Top
                locale: en_US
              - data: Débardeur
                locale: fr_FR
              price:
              - data:
                - amount: "15.5"
                  currency: EUR
                - amount: "15"
                  currency: USD
              size:
              - data: m
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/cap
            associations:
              PACK:
                groups: []
                products:
                - sunglasses
            categories:
            - summer_collection
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: caps
            groups: []
            identifier: cap
            quantified_associations: {}
            updated: 2016-06-25T17:56:12+02:00
            values:
              color:
              - data: black
              description:
              - data: Cap unisex
                locale: en_US
                scope: ecommerce
              - data: Cap unisex
                locale: en_US
                scope: tablet
              - data: Casquette unisexe
                locale: fr_FR
                scope: ecommerce
              - data: Casquette unisexe
                locale: fr_FR
                scope: tablet
              name:
              - data: Cap
                locale: en_US
              - data: Casquette
                locale: fr_FR
              price:
              - data:
                - amount: "20"
                  currency: EUR
                - amount: "20"
                  currency: USD
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/sweat
            associations: {}
            categories:
            - winter_collection
            created: 2016-06-23T11:24:44+02:00
            enabled: true
            groups: []
            identifier: sweat
            quantified_associations: {}
            updated: 2016-06-23T11:24:44+02:00
            values: {}
        _links:
          first:
            href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3
          next:
            href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3
          previous:
            href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3
          self:
            href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3
        current_page: 3
      x-2.0:
        _embedded:
          items:
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/top
            associations:
              PACK:
                groups: []
                products:
                - sunglasses
            categories:
            - summer_collection
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: tshirt
            groups: []
            identifier: top
            quantified_associations:
              PRODUCT_SET:
                products:
                - identifier: cap
                  quantity: 2
                - identifier: shoes
                  quantity: 1
            updated: 2016-06-25T17:56:12+02:00
            values:
              collection:
              - data:
                - winter_2016
              color:
              - data: black
              description:
              - data: Summer top
                locale: en_US
                scope: ecommerce
              - data: Top
                locale: en_US
                scope: tablet
              - data: Débardeur pour l'été
                locale: fr_FR
                scope: ecommerce
              - data: Débardeur
                locale: fr_FR
                scope: tablet
              name:
              - data: Top
                locale: en_US
              - data: Débardeur
                locale: fr_FR
              price:
              - data:
                - amount: "15.5"
                  currency: EUR
                - amount: "15"
                  currency: USD
              size:
              - data: m
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/cap
            associations:
              PACK:
                groups: []
                products:
                - sunglasses
            categories:
            - summer_collection
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: caps
            groups: []
            identifier: cap
            quantified_associations: {}
            updated: 2016-06-25T17:56:12+02:00
            values:
              color:
              - data: black
              description:
              - data: Cap unisex
                locale: en_US
                scope: ecommerce
              - data: Cap unisex
                locale: en_US
                scope: tablet
              - data: Casquette unisexe
                locale: fr_FR
                scope: ecommerce
              - data: Casquette unisexe
                locale: fr_FR
                scope: tablet
              name:
              - data: Cap
                locale: en_US
              - data: Casquette
                locale: fr_FR
              price:
              - data:
                - amount: "20"
                  currency: EUR
                - amount: "20"
                  currency: USD
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/sweat
            associations: {}
            categories:
            - winter_collection
            created: 2016-06-23T11:24:44+02:00
            enabled: true
            groups: []
            identifier: sweat
            quantified_associations: {}
            updated: 2016-06-23T11:24:44+02:00
            values: {}
        _links:
          first:
            href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3
          next:
            href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3
          previous:
            href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3
          self:
            href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3
        current_page: 3
      x-2.1:
        _embedded:
          items:
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/top
            associations:
              PACK:
                groups: []
                product_models: []
                products:
                - sunglasses
            categories:
            - summer_collection
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: tshirt
            groups: []
            identifier: top
            quantified_associations:
              PRODUCT_SET:
                product_models:
                - identifier: model-biker-jacket-leather
                  quantity: 2
                products:
                - identifier: cap
                  quantity: 2
                - identifier: shoes
                  quantity: 1
            updated: 2016-06-25T17:56:12+02:00
            values:
              collection:
              - data:
                - winter_2016
              color:
              - data: black
              description:
              - data: Summer top
                locale: en_US
                scope: ecommerce
              - data: Top
                locale: en_US
                scope: tablet
              - data: Débardeur pour l'été
                locale: fr_FR
                scope: ecommerce
              - data: Débardeur
                locale: fr_FR
                scope: tablet
              name:
              - data: Top
                locale: en_US
              - data: Débardeur
                locale: fr_FR
              price:
              - data:
                - amount: "15.5"
                  currency: EUR
                - amount: "15"
                  currency: USD
              size:
              - data: m
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/cap
            associations:
              PACK:
                groups: []
                product_models: []
                products:
                - sunglasses
            categories:
            - summer_collection
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: caps
            groups: []
            identifier: cap
            quantified_associations: {}
            updated: 2016-06-25T17:56:12+02:00
            values:
              color:
              - data: black
              description:
              - data: Cap unisex
                locale: en_US
                scope: ecommerce
              - data: Cap unisex
                locale: en_US
                scope: tablet
              - data: Casquette unisexe
                locale: fr_FR
                scope: ecommerce
              - data: Casquette unisexe
                locale: fr_FR
                scope: tablet
              name:
              - data: Cap
                locale: en_US
              - data: Casquette
                locale: fr_FR
              price:
              - data:
                - amount: "20"
                  currency: EUR
                - amount: "20"
                  currency: USD
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/sweat
            associations: {}
            categories:
            - winter_collection
            created: 2016-06-23T11:24:44+02:00
            enabled: true
            groups: []
            identifier: sweat
            quantified_associations: {}
            updated: 2016-06-23T11:24:44+02:00
            values: {}
        _links:
          first:
            href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3
          next:
            href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3
          previous:
            href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3
          self:
            href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3
        current_page: 3
      x-5.0:
        _embedded:
          items:
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/top
            associations:
              PACK:
                groups: []
                product_models: []
                products:
                - sunglasses
            categories:
            - summer_collection
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: tshirt
            groups: []
            identifier: top
            quality_scores:
            - data: A
              locale: en_US
              scope: ecommerce
            - data: B
              locale: fr_FR
              scope: ecommerce
            - data: D
              locale: en_US
              scope: tablet
            - data: E
              locale: fr_FR
              scope: tablet
            quantified_associations:
              PRODUCT_SET:
                product_models:
                - identifier: model-biker-jacket-leather
                  quantity: 2
                products:
                - identifier: cap
                  quantity: 2
                - identifier: shoes
                  quantity: 1
            updated: 2016-06-25T17:56:12+02:00
            values:
              collection:
              - data:
                - winter_2016
                linked_data:
                  winter_2016:
                    attribute: collection
                    code: winter_2016
                    labels:
                      en_US: Winter 2016
                      fr_FR: Hiver 2016
              color:
              - data: black
                linked_data:
                  attribute: color
                  code: black
                  labels:
                    en_US: Black
                    fr_FR: Noir
              description:
              - data: Summer top
                locale: en_US
                scope: ecommerce
              - data: Top
                locale: en_US
                scope: tablet
              - data: Débardeur pour l'été
                locale: fr_FR
                scope: ecommerce
              - data: Débardeur
                locale: fr_FR
                scope: tablet
              name:
              - data: Top
                locale: en_US
              - data: Débardeur
                locale: fr_FR
              price:
              - data:
                - amount: "15.5"
                  currency: EUR
                - amount: "15"
                  currency: USD
              size:
              - data: m
                linked_data:
                  attribute: size
                  code: m
                  labels:
                    en_US: M
                    fr_FR: M
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/cap
            associations:
              PACK:
                groups: []
                product_models: []
                products:
                - sunglasses
            categories:
            - summer_collection
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: caps
            groups: []
            identifier: cap
            quality_scores:
            - data: A
              locale: en_US
              scope: ecommerce
            - data: B
              locale: fr_FR
              scope: ecommerce
            - data: D
              locale: en_US
              scope: tablet
            - data: E
              locale: fr_FR
              scope: tablet
            quantified_associations: {}
            updated: 2016-06-25T17:56:12+02:00
            values:
              color:
              - data: black
                linked_data:
                  attribute: color
                  code: black
                  labels:
                    en_US: Black
                    fr_FR: Noir
              description:
              - data: Cap unisex
                locale: en_US
                scope: ecommerce
              - data: Cap unisex
                locale: en_US
                scope: tablet
              - data: Casquette unisexe
                locale: fr_FR
                scope: ecommerce
              - data: Casquette unisexe
                locale: fr_FR
                scope: tablet
              name:
              - data: Cap
                locale: en_US
              - data: Casquette
                locale: fr_FR
              price:
              - data:
                - amount: "20"
                  currency: EUR
                - amount: "20"
                  currency: USD
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/sweat
            associations: {}
            categories:
            - winter_collection
            created: 2016-06-23T11:24:44+02:00
            enabled: true
            groups: []
            identifier: sweat
            quality_scores: {}
            quantified_associations: {}
            updated: 2016-06-23T11:24:44+02:00
            values: {}
        _links:
          first:
            href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3&with_quality_scores=true&with_attribute_options=true
          next:
            href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3&with_quality_scores=true&with_attribute_options=true
          previous:
            href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3&with_quality_scores=true&with_attribute_options=true
          self:
            href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3&with_quality_scores=true&with_attribute_options=true
        current_page: 3
      x-SaaS:
        _embedded:
          items:
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/top
            associations:
              PACK:
                groups: []
                product_models: []
                products:
                - sunglasses
            categories:
            - summer_collection
            completenesses:
            - data: 20
              locale: en_US
              scope: ecommerce
            - data: 30
              locale: fr_FR
              scope: ecommerce
            - data: 55
              locale: en_US
              scope: tablet
            - data: 70
              locale: fr_FR
              scope: tablet
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: tshirt
            groups: []
            identifier: top
            quality_scores:
            - data: A
              locale: en_US
              scope: ecommerce
            - data: B
              locale: fr_FR
              scope: ecommerce
            - data: D
              locale: en_US
              scope: tablet
            - data: E
              locale: fr_FR
              scope: tablet
            quantified_associations:
              PRODUCT_SET:
                product_models:
                - identifier: model-biker-jacket-leather
                  quantity: 2
                products:
                - identifier: cap
                  quantity: 2
                - identifier: shoes
                  quantity: 1
            updated: 2016-06-25T17:56:12+02:00
            uuid: aaf518b2-f91e-40f1-a53a-78ce5e81a6f9
            values:
              collection:
              - data:
                - winter_2016
                linked_data:
                  winter_2016:
                    attribute: collection
                    code: winter_2016
                    labels:
                      en_US: Winter 2016
                      fr_FR: Hiver 2016
              color:
              - data: black
                linked_data:
                  attribute: color
                  code: black
                  labels:
                    en_US: Black
                    fr_FR: Noir
              description:
              - data: Summer top
                locale: en_US
                scope: ecommerce
              - data: Top
                locale: en_US
                scope: tablet
              - data: Débardeur pour l'été
                locale: fr_FR
                scope: ecommerce
              - data: Débardeur
                locale: fr_FR
                scope: tablet
              name:
              - data: Top
                locale: en_US
              - data: Débardeur
                locale: fr_FR
              price:
              - data:
                - amount: "15.5"
                  currency: EUR
                - amount: "15"
                  currency: USD
              size:
              - data: m
                linked_data:
                  attribute: size
                  code: m
                  labels:
                    en_US: M
                    fr_FR: M
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/cap
            associations:
              PACK:
                groups: []
                product_models: []
                products:
                - sunglasses
            categories:
            - summer_collection
            completenesses:
            - data: 20
              locale: en_US
              scope: ecommerce
            - data: 30
              locale: fr_FR
              scope: ecommerce
            - data: 55
              locale: en_US
              scope: tablet
            - data: 70
              locale: fr_FR
              scope: tablet
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: caps
            groups: []
            identifier: cap
            quality_scores:
            - data: A
              locale: en_US
              scope: ecommerce
            - data: B
              locale: fr_FR
              scope: ecommerce
            - data: D
              locale: en_US
              scope: tablet
            - data: E
              locale: fr_FR
              scope: tablet
            quantified_associations: {}
            updated: 2016-06-25T17:56:12+02:00
            uuid: aec6780b-c813-4bd7-8e24-1a8574471576
            values:
              color:
              - data: black
                linked_data:
                  attribute: color
                  code: black
                  labels:
                    en_US: Black
                    fr_FR: Noir
              description:
              - data: Cap unisex
                locale: en_US
                scope: ecommerce
              - data: Cap unisex
                locale: en_US
                scope: tablet
              - data: Casquette unisexe
                locale: fr_FR
                scope: ecommerce
              - data: Casquette unisexe
                locale: fr_FR
                scope: tablet
              name:
              - data: Cap
                locale: en_US
              - data: Casquette
                locale: fr_FR
              price:
              - data:
                - amount: "20"
                  currency: EUR
                - amount: "20"
                  currency: USD
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/sweat
            associations: {}
            categories:
            - winter_collection
            completenesses: []
            created: 2016-06-23T11:24:44+02:00
            enabled: true
            groups: []
            identifier: sweat
            quality_scores: {}
            quantified_associations: {}
            updated: 2016-06-23T11:24:44+02:00
            uuid: 93f14b03-5ed3-4f23-87c6-ae3806041b6a
            values: {}
        _links:
          first:
            href: https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
          next:
            href: https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
          previous:
            href: https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
          self:
            href: https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
        current_page: 3
    ProductList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          associations:
            PACK:
              groups: []
              product_models: []
              products:
              - sunglass
          categories:
          - summer_collection
          completenesses:
          - data: 10
            locale: en_US
            scope: ecommerce
          - data: 20
            locale: fr_FR
            scope: ecommerce
          - data: 30
            locale: en_US
            scope: tablet
          - data: 40
            locale: fr_FR
            scope: tablet
          created: 2016-06-23T18:24:44+02:00
          enabled: true
          family: tshirt
          groups: []
          identifier: top
          quality_scores:
          - data: A
            locale: en_US
            scope: ecommerce
          - data: B
            locale: fr_FR
            scope: ecommerce
          - data: D
            locale: en_US
            scope: tablet
          - data: E
            locale: fr_FR
            scope: tablet
          quantified_associations:
            PRODUCT_SET:
              product_models:
              - identifier: model-biker-jacket-leather
                quantity: 2
              products:
              - identifier: cap
                quantity: 2
              - identifier: shoes
                quantity: 1
          updated: 2016-06-25T17:56:12+02:00
          values:
            collection:
            - data:
              - winter_2016
              linked_data:
                winter_2016:
                  attribute: collection
                  code: winter_2016
                  labels:
                    en_US: Winter 2016
                    fr_FR: Hiver 2016
            color:
            - data: black
              linked_data:
                attribute: color
                code: black
                labels:
                  en_US: Black
                  fr_FR: Noir
            description:
            - data: Summer top
              locale: en_US
              scope: ecommerce
            - data: Top
              locale: en_US
              scope: tablet
            - data: Débardeur pour l'été
              locale: fr_FR
              scope: ecommerce
            - data: Débardeur
              locale: fr_FR
              scope: tablet
            name:
            - data: Top
              locale: en_US
            - data: Débardeur
              locale: fr_FR
            price:
            - data:
              - amount: "15.5"
                currency: EUR
              - amount: "15"
                currency: USD
            size:
            - data: m
              linked_data:
                attribute: size
                code: m
                labels:
                  en_US: M
                  fr_FR: M
        properties:
          associations:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_associations'
          categories:
            description: Codes of the <a href='api-reference.html#Category'>categories</a>
              in which the product is classified
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing category
              code
          completenesses:
            description: "Product completenesses for each channel/locale combination\
              \ (only available since the 7.0 version, and when the \"with_completenesses\"\
              \ query parameter is set to \"true\")"
            items:
              $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
            type: array
            x-immutable: true
            x-read-only: true
            x-from-version: "7.0"
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
          enabled:
            default: true
            description: Whether the product is enabled
            type: boolean
          family:
            default: null only in the case of a non variant product
            description: <a href='api-reference.html#Family'>Family</a> code from
              which the product inherits its attributes and attributes requirements.
            type: string
            x-validation-rules: "It is equal to an existing family code. In the case\
              \ of variant product, the given family should be the same as the product\
              \ model family."
          groups:
            description: Codes of the groups to which the product belong
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing group
              code
          identifier:
            description: "Product identifier, i.e. the value of the only `pim_catalog_identifier`\
              \ attribute"
            type: string
          metadata:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
          parent:
            default: "null"
            description: Code of the parent <a href='api-reference.html#Productmodel'>product
              model</a> when the product is a variant (only available since the 2.0).
              This parent can be modified since the 2.3.
            type: string
            x-validation-rules: It is equal to an existing product model code only
              if the product is variant otherwise it's equal to null
            x-from-version: "2.0"
          quality_scores:
            $ref: '#/components/schemas/ProductList_allOf_quality_scores'
          quantified_associations:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_quantified_associations'
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          uuid:
            description: Product UUID
            type: string
            x-from-version: "7.0"
          values:
            $ref: '#/components/schemas/ProductList_allOf_values'
        required:
        - identifier
        type: object
    ProductModel:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - sunglass
        categories:
        - summer_collection
        code: model-biker-jacket-leather
        created: 2017-10-02T15:03:55+02:00
        family: clothing
        family_variant: clothing_material_size
        parent: model-biker-jacket
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - code: model-biker-jacket-leather
              quantity: 2
            products:
            - identifier: top
              quantity: 2
            - identifier: cap
              quantity: 1
        updated: 2017-10-02T15:03:55+02:00
        values:
          collection:
          - data:
            - summer_2017
          color:
          - data: antique_white
          description:
          - data: Biker jacket
            locale: en_US
            scope: ecommerce
          material:
          - data: leather
          name:
          - data: Biker jacket
            locale: en_US
          variation_name:
          - data: Biker jacket leather
            locale: en_US
      properties:
        associations:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product model is categorized
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        code:
          description: Product model code
          type: string
          x-immutable: true
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        family:
          description: <a href='api-reference.html#Family'>Family</a> code  from which
            the product inherits its attributes and attributes requirements (since
            the 3.2)
          type: string
          x-validation-rules: It is equal to an existing family code
          x-immutable: true
          x-from-version: "3.2"
        family_variant:
          description: Family variant code from which the product model inherits its
            attributes and variant attributes
          type: string
          x-validation-rules: It is equal to an existing family variant code that
            belong to the family given in the `family` field
          x-immutable: true
        metadata:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a>. This parent can be modified since the 2.3.
          type: string
          x-validation-rules: '&bull; It is equal to an existing product model code&#10;&bull;
            This product model has the same family variant as the one given in the
            `family_variant field`'
          x-from-version: "2.3"
        quality_scores:
          description: Product model quality scores for each channel/locale combination
            (<strong>only available since the 7.0 version</strong> and when the "with_quality_scores"
            query parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        quantified_associations:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        values:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      - family_variant
      type: object
    ProductModelList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          associations:
            PACK:
              groups: []
              product_models: []
              products:
              - sunglass
          categories:
          - summer_collection
          code: model-biker-jacket-leather
          created: 2017-10-02T15:03:55+02:00
          family: clothing
          family_variant: clothing_material_size
          parent: model-biker-jacket
          quality_scores:
          - data: A
            locale: en_US
            scope: ecommerce
          - data: B
            locale: fr_FR
            scope: ecommerce
          - data: D
            locale: en_US
            scope: tablet
          - data: E
            locale: fr_FR
            scope: tablet
          quantified_associations:
            PRODUCT_SET:
              product_models:
              - code: model-biker-jacket-leather
                quantity: 2
              products:
              - identifier: top
                quantity: 2
              - identifier: cap
                quantity: 1
          updated: 2017-10-02T15:03:55+02:00
          values:
            collection:
            - data:
              - summer_2017
            color:
            - data: antique_white
            description:
            - data: Biker jacket
              locale: en_US
              scope: ecommerce
            material:
            - data: leather
            name:
            - data: Biker jacket
              locale: en_US
            variation_name:
            - data: Biker jacket leather
              locale: en_US
        properties:
          associations:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_associations'
          categories:
            description: Codes of the <a href='api-reference.html#Category'>categories</a>
              in which the product model is categorized
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing category
              code
          code:
            description: Product model code
            type: string
            x-immutable: true
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
          family:
            description: <a href='api-reference.html#Family'>Family</a> code  from
              which the product inherits its attributes and attributes requirements
              (since the 3.2)
            type: string
            x-validation-rules: It is equal to an existing family code
            x-immutable: true
            x-from-version: "3.2"
          family_variant:
            description: Family variant code from which the product model inherits
              its attributes and variant attributes
            type: string
            x-validation-rules: It is equal to an existing family variant code that
              belong to the family given in the `family` field
            x-immutable: true
          metadata:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_metadata'
          parent:
            default: "null"
            description: Code of the parent <a href='api-reference.html#Productmodel'>product
              model</a>. This parent can be modified since the 2.3.
            type: string
            x-validation-rules: '&bull; It is equal to an existing product model code&#10;&bull;
              This product model has the same family variant as the one given in the
              `family_variant field`'
            x-from-version: "2.3"
          quality_scores:
            $ref: '#/components/schemas/ProductModelList_allOf_quality_scores'
          quantified_associations:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations'
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          values:
            $ref: '#/components/schemas/ProductModelList_allOf_values'
        required:
        - code
        - family_variant
        type: object
    ProductUuid:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - d055527c-0698-4967-8f16-8a5f23f4e5cf
        categories:
        - summer_collection
        completenesses:
        - data: 10
          locale: en_US
          scope: ecommerce
        - data: 20
          locale: fr_FR
          scope: ecommerce
        - data: 30
          locale: en_US
          scope: tablet
        - data: 40
          locale: fr_FR
          scope: tablet
        created: 2016-06-23T18:24:44+02:00
        enabled: true
        family: tshirt
        groups: []
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - identifier: model-biker-jacket-leather
              quantity: 2
            products:
            - quantity: 2
              uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
            - quantity: 1
              uuid: a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc
        updated: 2016-06-25T17:56:12+02:00
        uuid: 25566245-55c3-42ce-86d9-8610ac459fa8
        values:
          collection:
          - data:
            - winter_2016
            linked_data:
              winter_2016:
                attribute: collection
                code: winter_2016
                labels:
                  en_US: Winter 2016
                  fr_FR: Hiver 2016
          color:
          - data: black
            linked_data:
              attribute: color
              code: black
              labels:
                en_US: Black
                fr_FR: Noir
          description:
          - data: Summer top
            locale: en_US
            scope: ecommerce
          - data: Top
            locale: en_US
            scope: tablet
          - data: Débardeur pour l'été
            locale: fr_FR
            scope: ecommerce
          - data: Débardeur
            locale: fr_FR
            scope: tablet
          name:
          - data: Top
            locale: en_US
          - data: Débardeur
            locale: fr_FR
          price:
          - data:
            - amount: "15.5"
              currency: EUR
            - amount: "15"
              currency: USD
          size:
          - data: m
            linked_data:
              attribute: size
              code: m
              labels:
                en_US: M
                fr_FR: M
          sku:
          - data: top
      properties:
        associations:
          $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        completenesses:
          description: "Product completenesses for each channel/locale combination\
            \ (only available since the 7.0 version, and when the \"with_completenesses\"\
            \ query parameter is set to \"true\")"
          items:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
          type: array
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        enabled:
          default: true
          description: Whether the product is enabled
          type: boolean
        family:
          default: null only in the case of a non variant product
          description: <a href='api-reference.html#Family'>Family</a> code from which
            the product inherits its attributes and attributes requirements.
          type: string
          x-validation-rules: "It is equal to an existing family code. In the case\
            \ of variant product, the given family should be the same as the product\
            \ model family."
        groups:
          description: Codes of the groups to which the product belong
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing group
            code
        metadata:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a> when the product is a variant (only available since the 2.0).
            This parent can be modified since the 2.3.
          type: string
          x-validation-rules: It is equal to an existing product model code only if
            the product is variant otherwise it's equal to null
          x-from-version: "2.0"
        quality_scores:
          description: Product quality scores for each channel/locale combination
            (only available since the 5.0 and when the "with_quality_scores" query
            parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        quantified_associations:
          $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        uuid:
          description: Product uuid
          type: string
        values:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values'
      type: object
    ProductUuidExamples:
      type: object
      x-SaaS:
        _embedded:
          items:
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product-uuid/25566245-55c3-42ce-86d9-8610ac459fa8
            associations:
              PACK:
                groups: []
                product_models: []
                products:
                - d055527c-0698-4967-8f16-8a5f23f4e5cf
            categories:
            - summer_collection
            completenesses:
            - data: 20
              locale: en_US
              scope: ecommerce
            - data: 30
              locale: fr_FR
              scope: ecommerce
            - data: 55
              locale: en_US
              scope: tablet
            - data: 70
              locale: fr_FR
              scope: tablet
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: tshirt
            groups: []
            quality_scores:
            - data: A
              locale: en_US
              scope: ecommerce
            - data: B
              locale: fr_FR
              scope: ecommerce
            - data: D
              locale: en_US
              scope: tablet
            - data: E
              locale: fr_FR
              scope: tablet
            quantified_associations:
              PRODUCT_SET:
                product_models:
                - identifier: model-biker-jacket-leather
                  quantity: 2
                products:
                - quantity: 2
                  uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
                - quantity: 1
                  uuid: a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc
            updated: 2016-06-25T17:56:12+02:00
            uuid: 25566245-55c3-42ce-86d9-8610ac459fa8
            values:
              collection:
              - data:
                - winter_2016
                linked_data:
                  winter_2016:
                    attribute: collection
                    code: winter_2016
                    labels:
                      en_US: Winter 2016
                      fr_FR: Hiver 2016
              color:
              - data: black
                linked_data:
                  attribute: color
                  code: black
                  labels:
                    en_US: Black
                    fr_FR: Noir
              description:
              - data: Summer top
                locale: en_US
                scope: ecommerce
              - data: Top
                locale: en_US
                scope: tablet
              - data: Débardeur pour l'été
                locale: fr_FR
                scope: ecommerce
              - data: Débardeur
                locale: fr_FR
                scope: tablet
              name:
              - data: Top
                locale: en_US
              - data: Débardeur
                locale: fr_FR
              price:
              - data:
                - amount: "15.5"
                  currency: EUR
                - amount: "15"
                  currency: USD
              size:
              - data: m
                linked_data:
                  attribute: size
                  code: m
                  labels:
                    en_US: M
                    fr_FR: M
              sku:
              - data: top
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product/fc24e6c3-933c-4a93-8a81-e5c703d134d5
            associations:
              PACK:
                groups: []
                product_models: []
                products:
                - d055527c-0698-4967-8f16-8a5f23f4e5cf
            categories:
            - summer_collection
            completenesses:
            - data: 20
              locale: en_US
              scope: ecommerce
            - data: 30
              locale: fr_FR
              scope: ecommerce
            - data: 55
              locale: en_US
              scope: tablet
            - data: 70
              locale: fr_FR
              scope: tablet
            created: 2016-06-23T18:24:44+02:00
            enabled: true
            family: caps
            groups: []
            quality_scores:
            - data: A
              locale: en_US
              scope: ecommerce
            - data: B
              locale: fr_FR
              scope: ecommerce
            - data: D
              locale: en_US
              scope: tablet
            - data: E
              locale: fr_FR
              scope: tablet
            quantified_associations: {}
            updated: 2016-06-25T17:56:12+02:00
            uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
            values:
              color:
              - data: black
                linked_data:
                  attribute: color
                  code: black
                  labels:
                    en_US: Black
                    fr_FR: Noir
              description:
              - data: Cap unisex
                locale: en_US
                scope: ecommerce
              - data: Cap unisex
                locale: en_US
                scope: tablet
              - data: Casquette unisexe
                locale: fr_FR
                scope: ecommerce
              - data: Casquette unisexe
                locale: fr_FR
                scope: tablet
              name:
              - data: Cap
                locale: en_US
              - data: Casquette
                locale: fr_FR
              price:
              - data:
                - amount: "20"
                  currency: EUR
                - amount: "20"
                  currency: USD
              sku:
              - data: cap
          - _links:
              self:
                href: https://demo.akeneo.com/api/rest/v1/product-uuid/fa0b115e-46ec-4527-beab-7207452f1b47
            associations: {}
            categories:
            - winter_collection
            completenesses: []
            created: 2016-06-23T11:24:44+02:00
            enabled: true
            groups: []
            quality_scores: {}
            quantified_associations: {}
            updated: 2016-06-23T11:24:44+02:00
            uuid: fa0b115e-46ec-4527-beab-7207452f1b47
            values:
              sku:
              - data: sweat
        _links:
          first:
            href: https://demo.akeneo.com/api/rest/v1/products-uuid?page=1&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
          next:
            href: https://demo.akeneo.com/api/rest/v1/products-uuid?page=4&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
          previous:
            href: https://demo.akeneo.com/api/rest/v1/products-uuid?page=2&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
          self:
            href: https://demo.akeneo.com/api/rest/v1/products-uuid?page=3&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true
        current_page: 3
    ProductUuidList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          associations:
            PACK:
              groups: []
              product_models: []
              products:
              - d055527c-0698-4967-8f16-8a5f23f4e5cf
          categories:
          - summer_collection
          completenesses:
          - data: 10
            locale: en_US
            scope: ecommerce
          - data: 20
            locale: fr_FR
            scope: ecommerce
          - data: 30
            locale: en_US
            scope: tablet
          - data: 40
            locale: fr_FR
            scope: tablet
          created: 2016-06-23T18:24:44+02:00
          enabled: true
          family: tshirt
          groups: []
          quality_scores:
          - data: A
            locale: en_US
            scope: ecommerce
          - data: B
            locale: fr_FR
            scope: ecommerce
          - data: D
            locale: en_US
            scope: tablet
          - data: E
            locale: fr_FR
            scope: tablet
          quantified_associations:
            PRODUCT_SET:
              product_models:
              - identifier: model-biker-jacket-leather
                quantity: 2
              products:
              - quantity: 2
                uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
              - quantity: 1
                uuid: a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc
          updated: 2016-06-25T17:56:12+02:00
          uuid: 25566245-55c3-42ce-86d9-8610ac459fa8
          values:
            collection:
            - data:
              - winter_2016
              linked_data:
                winter_2016:
                  attribute: collection
                  code: winter_2016
                  labels:
                    en_US: Winter 2016
                    fr_FR: Hiver 2016
            color:
            - data: black
              linked_data:
                attribute: color
                code: black
                labels:
                  en_US: Black
                  fr_FR: Noir
            description:
            - data: Summer top
              locale: en_US
              scope: ecommerce
            - data: Top
              locale: en_US
              scope: tablet
            - data: Débardeur pour l'été
              locale: fr_FR
              scope: ecommerce
            - data: Débardeur
              locale: fr_FR
              scope: tablet
            name:
            - data: Top
              locale: en_US
            - data: Débardeur
              locale: fr_FR
            price:
            - data:
              - amount: "15.5"
                currency: EUR
              - amount: "15"
                currency: USD
            size:
            - data: m
              linked_data:
                attribute: size
                code: m
                labels:
                  en_US: M
                  fr_FR: M
            sku:
            - data: top
        properties:
          associations:
            $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_associations'
          categories:
            description: Codes of the <a href='api-reference.html#Category'>categories</a>
              in which the product is classified
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing category
              code
          completenesses:
            description: "Product completenesses for each channel/locale combination\
              \ (only available since the 7.0 version, and when the \"with_completenesses\"\
              \ query parameter is set to \"true\")"
            items:
              $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
            type: array
            x-immutable: true
            x-read-only: true
            x-from-version: "7.0"
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
          enabled:
            default: true
            description: Whether the product is enabled
            type: boolean
          family:
            default: null only in the case of a non variant product
            description: <a href='api-reference.html#Family'>Family</a> code from
              which the product inherits its attributes and attributes requirements.
            type: string
            x-validation-rules: "It is equal to an existing family code. In the case\
              \ of variant product, the given family should be the same as the product\
              \ model family."
          groups:
            description: Codes of the groups to which the product belong
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing group
              code
          metadata:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
          parent:
            default: "null"
            description: Code of the parent <a href='api-reference.html#Productmodel'>product
              model</a> when the product is a variant (only available since the 2.0).
              This parent can be modified since the 2.3.
            type: string
            x-validation-rules: It is equal to an existing product model code only
              if the product is variant otherwise it's equal to null
            x-from-version: "2.0"
          quality_scores:
            $ref: '#/components/schemas/ProductList_allOf_quality_scores'
          quantified_associations:
            $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_quantified_associations'
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          uuid:
            description: Product uuid
            type: string
          values:
            $ref: '#/components/schemas/ProductList_allOf_values'
        type: object
    PublishedProduct:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - sunglass
        categories:
        - summer_collection
        created: 2016-06-23T18:24:44+02:00
        enabled: true
        family: tshirt
        groups: []
        identifier: top
        updated: 2016-06-25T17:56:12+02:00
        values:
          color:
          - data: black
          description:
          - data: Summer top
            locale: en_US
            scope: ecommerce
          - data: Top
            locale: en_US
            scope: tablet
          - data: Débardeur pour l'été
            locale: fr_FR
            scope: ecommerce
          - data: Débardeur
            locale: fr_FR
            scope: tablet
          name:
          - data: Top
            locale: en_US
          - data: Débardeur
            locale: fr_FR
          price:
          - data:
            - amount: "15.5"
              currency: EUR
            - amount: "15"
              currency: USD
          size:
          - data: m
      properties:
        associations:
          $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the published product is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        enabled:
          default: true
          description: Whether the published product is enable
          type: boolean
        family:
          default: "null"
          description: <a href='api-reference.html#Family'>Family</a> code from which
            the published product inherits its attributes and attributes requirements
          type: string
          x-validation-rules: It is equal to an existing family code
        groups:
          description: Codes of the groups to which the published product belong
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing group
            code
        identifier:
          description: "Published product identifier, i.e. the value of the only `pim_catalog_identifier`\
            \ attribute"
          type: string
        quantified_associations:
          description: "Warning: associations with quantities are not compatible with\
            \ the published products. The response will always be empty."
          properties: {}
          type: object
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        values:
          $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner_allOf_values'
      required:
      - identifier
      type: object
    PublishedProductList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          associations:
            PACK:
              groups: []
              product_models: []
              products:
              - sunglass
          categories:
          - summer_collection
          created: 2016-06-23T18:24:44+02:00
          enabled: true
          family: tshirt
          groups: []
          identifier: top
          updated: 2016-06-25T17:56:12+02:00
          values:
            color:
            - data: black
            description:
            - data: Summer top
              locale: en_US
              scope: ecommerce
            - data: Top
              locale: en_US
              scope: tablet
            - data: Débardeur pour l'été
              locale: fr_FR
              scope: ecommerce
            - data: Débardeur
              locale: fr_FR
              scope: tablet
            name:
            - data: Top
              locale: en_US
            - data: Débardeur
              locale: fr_FR
            price:
            - data:
              - amount: "15.5"
                currency: EUR
              - amount: "15"
                currency: USD
            size:
            - data: m
        properties:
          associations:
            $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner_allOf_associations'
          categories:
            description: Codes of the <a href='api-reference.html#Category'>categories</a>
              in which the published product is classified
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing category
              code
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
          enabled:
            default: true
            description: Whether the published product is enable
            type: boolean
          family:
            default: "null"
            description: <a href='api-reference.html#Family'>Family</a> code from
              which the published product inherits its attributes and attributes requirements
            type: string
            x-validation-rules: It is equal to an existing family code
          groups:
            description: Codes of the groups to which the published product belong
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing group
              code
          identifier:
            description: "Published product identifier, i.e. the value of the only\
              \ `pim_catalog_identifier` attribute"
            type: string
          quantified_associations:
            $ref: '#/components/schemas/PublishedProductList_allOf_quantified_associations'
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          values:
            $ref: '#/components/schemas/PublishedProductList_allOf_values'
        required:
        - identifier
        type: object
    ReferenceEntity:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/get_reference_entities__code__200_response_allOf__links'
        type: object
      - example:
          code: brands
          image: 0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png
          labels:
            en_US: Brands
            fr_FR: Marques
        properties:
          code:
            description: Reference entity code
            type: string
            x-immutable: true
          image:
            description: Code of the reference entity image
            type: string
          labels:
            $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf_labels'
        required:
        - code
        type: object
    ReferenceEntityAttribute:
      example:
        code: description
        is_required_for_completeness: true
        is_rich_text_editor: true
        is_textarea: true
        labels:
          en_US: Description
          fr_FR: Description
        type: text
        validation_rule: none
        value_per_channel: false
        value_per_locale: true
      properties:
        allowed_extensions:
          description: Extensions allowed when the attribute type is `image`
          items:
            type: string
          type: array
          x-warning: Only for `image` attribute type
        code:
          description: Attribute code
          type: string
          x-immutable: true
        decimals_allowed:
          default: false
          description: Whether decimals are allowed when the attribute type is `number`
          type: boolean
          x-warning: Only for `number` attribute type
        is_required_for_completeness:
          default: false
          description: Whether the attribute should be part of the record's completeness
            calculation
          type: boolean
        is_rich_text_editor:
          description: Whether the UI should display a rich text editor instead of
            a simple text area when the attribute type is `text`
          type: boolean
          x-validation-rules: Required when the property `is_textarea` is equal to
            `true`
          x-warning: Only for `text` attribute type
        is_textarea:
          default: false
          description: Whether the UI should display a text area instead of a simple
            field when the attribute type is `text`
          type: boolean
          x-warning: Only for `text` attribute type
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
        max_characters:
          description: Maximum number of characters allowed for the value of the attribute
            when the attribute type is `text`
          type: integer
          x-warning: Only for `text` attribute type
        max_file_size:
          description: Max file size in MB when the attribute type is `image`
          type: string
          x-warning: Only for `image` attribute type
        max_value:
          description: Maximum value allowed when the attribute type is `number`
          type: string
          x-validation-rules: The maximum value must be greater than the minimum value
          x-warning: Only for `number` attribute type
        min_value:
          description: Minimum value allowed when the attribute type is `number`
          type: string
          x-validation-rules: The minimum value must be lower than the maximum value
          x-warning: Only for `number` attribute type
        reference_entity_code:
          description: Code of the linked reference entity when the attribute type
            is `reference_entity_single_link` or `reference_entity_multiple_links`
          type: string
          x-validation-rules: Required when the attribute type is either `reference_entity_single_link`
            or `reference_entity_multiple_links`
          x-immutable: true
          x-warning: Only for `reference_entity_single_link` and `reference_entity_multiple_links`
            attribute type
        type:
          description: Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a>
            section for more details.
          enum:
          - text
          - image
          - number
          - single_option
          - multiple_options
          - reference_entity_single_link
          - reference_entity_multiple_links
          type: string
          x-immutable: true
        validation_regexp:
          description: Regexp expression used to validate the attribute value when
            the attribute type is `text`
          type: string
          x-validation-rules: Required when the property `validation_rule` is equal
            to `regexp`
          x-warning: Only for `text` attribute type
        validation_rule:
          default: none
          description: Validation rule type used to validate the attribute value when
            the attribute type is `text`
          enum:
          - email
          - url
          - regexp
          - none
          type: string
          x-warning: Only for `text` attribute type
        value_per_channel:
          default: false
          description: "Whether the attribute is scopable, i.e. can have one value\
            \ by channel"
          type: boolean
          x-immutable: true
        value_per_locale:
          default: false
          description: "Whether the attribute is localizable, i.e. can have one value\
            \ by locale"
          type: boolean
          x-immutable: true
      required:
      - code
      - type
      type: object
    ReferenceEntityAttributeList:
      items:
        $ref: '#/components/schemas/get_reference_entities__code__attributes_200_response_inner'
      type: array
    ReferenceEntityAttributeOption:
      example:
        code: global_nomad
        labels:
          en_US: Global Nomad
          fr_FR: Nomade du Monde
      properties:
        code:
          description: Attribute's option code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
      required:
      - code
      type: object
    ReferenceEntityAttributeOptionList:
      items:
        $ref: '#/components/schemas/get_reference_entity_attributes__attribute_code__options_200_response_inner'
      type: array
    ReferenceEntityItemList:
      properties:
        _links:
          $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf__links'
      type: object
    ReferenceEntityList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: brands
          image: 0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png
          labels:
            en_US: Brands
            fr_FR: Marques
        properties:
          code:
            description: Reference entity code
            type: string
            x-immutable: true
          image:
            description: Code of the reference entity image
            type: string
          labels:
            $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf_labels'
        required:
        - code
        type: object
    ReferenceEntityRecord:
      example:
        code: kartell
        created: 2021-01-01T01:23:34+00:00
        updated: 2021-02-03T23:45:60+00:00
        values:
          collection_overview:
          - data: 5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png
          country:
          - data: italy
          creation_year:
          - data: "1949"
          description:
          - data: "Kartell, the Italian furniture company that sells modern and remarkable\
              \ pieces of furnitures."
            locale: en_US
          - data: "Kartell, l'éditeur de meuble italien spécialisé dans la signature\
              \ de belle pièces au design contemporain."
            locale: fr_FR
          image:
          - data: 0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg
          label:
          - data: Kartell
            locale: en_US
      properties:
        code:
          description: Code of the record
          type: string
          x-immutable: true
        created:
          description: Date of creation.
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        updated:
          description: Date of the last update.
          format: dateTime
          type: string
          x-read-only: true
          x-from-version: "5.0"
        values:
          $ref: '#/components/schemas/Reference_entity_record_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      type: object
    ReferenceEntityRecordItemList:
      properties:
        _links:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
      type: object
    ReferenceEntityRecordList:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: kartell
          created: 2021-01-01T01:23:34+00:00
          updated: 2021-02-03T23:45:60+00:00
          values:
            collection_overview:
            - data: 5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png
            country:
            - data: italy
            creation_year:
            - data: "1949"
            description:
            - data: "Kartell, the Italian furniture company that sells modern and\
                \ remarkable pieces of furnitures."
              locale: en_US
            - data: "Kartell, l'éditeur de meuble italien spécialisé dans la signature\
                \ de belle pièces au design contemporain."
              locale: fr_FR
            image:
            - data: 0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg
            label:
            - data: Kartell
              locale: en_US
        properties:
          code:
            description: Code of the record
            type: string
            x-immutable: true
          created:
            description: Date of creation.
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
            x-from-version: "5.0"
          updated:
            description: Date of the last update.
            format: dateTime
            type: string
            x-read-only: true
            x-from-version: "5.0"
          values:
            $ref: '#/components/schemas/ReferenceEntityRecordList_allOf_values'
        required:
        - code
        type: object
    SearchAfterPagination:
      properties:
        _links:
          $ref: '#/components/schemas/Asset_families_allOf__links'
      type: object
    post_token_request:
      example:
        grant_type: password
        password: admin
        username: admin
      properties:
        grant_type:
          description: Always equal to "password"
          type: string
        password:
          description: Your PIM password
          type: string
        username:
          description: Your PIM username
          type: string
      required:
      - grant_type
      - password
      - username
      type: object
    post_token_200_response:
      example:
        access_token: access_token
        refresh_token: refresh_token
        scope: scope
        token_type: token_type
        expires_in: 0
      properties:
        access_token:
          description: Authentication token that should be given in every authenticated
            request to the API
          type: string
        expires_in:
          description: "Validity of the token given in seconds, 3600s = 1h by default"
          type: integer
        refresh_token:
          description: Use this token when your access token has expired. See <a href="/documentation/authentication.html#refresh-an-expired-token">Refresh
            an expired token</a> section for more details.
          type: string
        scope:
          description: "Unused, always equal to \"null\""
          type: string
        token_type:
          description: "Token type, always equal to \"bearer\""
          type: string
      type: object
    post_token_400_response:
      example:
        code: 6
        message: message
      properties:
        code:
          description: HTTP status code
          type: integer
        message:
          description: Message explaining the error
          type: string
      type: object
    get_endpoints_200_response:
      example:
        routes: "{}"
        host: host
        authentication: "{}"
      properties:
        authentication:
          description: Endpoint to get the authentication token
          properties: {}
          type: object
        host:
          description: Host name
          type: string
        routes:
          description: All the availables endpoints
          properties: {}
          type: object
      type: object
    PAM_Asset_Categories_allOf__links_first:
      example:
        href: href
      properties:
        href:
          description: URI of the first page of resources
          type: string
      type: object
    PAM_Asset_Categories_allOf__links_next:
      example:
        href: href
      properties:
        href:
          description: URI of the next page of resources
          type: string
      type: object
    PAM_Asset_Categories_allOf__links_previous:
      example:
        href: href
      properties:
        href:
          description: URI of the previous page of resources
          type: string
      type: object
    PAM_Asset_Categories_allOf__links_self:
      example:
        href: href
      properties:
        href:
          description: URI of the current page of resources
          type: string
      type: object
    PAM_Asset_Categories_allOf__links:
      example:
        next:
          href: href
        previous:
          href: href
        self:
          href: href
        first:
          href: href
      properties:
        first:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links_first'
        next:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links_next'
        previous:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links_previous'
        self:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links_self'
      type: object
    PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links_self:
      example:
        href: href
      properties:
        href:
          description: URI of the resource
          type: string
      type: object
    PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links:
      example:
        self:
          href: href
      properties:
        self:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links_self'
      type: object
    PAM_Asset_Categories_allOf__embedded_items_inner_allOf_labels:
      description: PAM asset category labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: PAM asset category label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    PAM_Asset_Categories_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: front_views
          labels:
            en_US: Front views
            fr_FR: Vues de face
          parent: pictures
        properties:
          code:
            description: PAM asset category code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf_labels'
          parent:
            default: "null"
            description: PAM ssset category code of the parent's asset category
            type: string
            x-validation-rules: "&bull; It is either equal to `null` or to an existing\
              \ asset category code. &#10;&bull; If equal to an existing asset category\
              \ code, it cannot reference itself."
        required:
        - code
        type: object
      example:
        parent: "null"
        code: code
        _links:
          self:
            href: href
        labels:
          localeCode: localeCode
      type: object
    PAM_Asset_Categories_allOf__embedded:
      example:
        items:
        - parent: "null"
          code: code
          _links:
            self:
              href: href
          labels:
            localeCode: localeCode
        - parent: "null"
          code: code
          _links:
            self:
              href: href
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner'
          type: array
      type: object
    PAM_Asset_Categories:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - parent: "null"
            code: code
            _links:
              self:
                href: href
            labels:
              localeCode: localeCode
          - parent: "null"
            code: code
            _links:
              self:
                href: href
            labels:
              localeCode: localeCode
        current_page: 0
      title: PAM Asset Categories
    post_asset_categories_request:
      example:
        code: front_views
        labels:
          en_US: Front views
          fr_FR: Vues de face
        parent: pictures
      properties:
        code:
          description: PAM asset category code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf_labels'
        parent:
          default: "null"
          description: PAM ssset category code of the parent's asset category
          type: string
          x-validation-rules: "&bull; It is either equal to `null` or to an existing\
            \ asset category code. &#10;&bull; If equal to an existing asset category\
            \ code, it cannot reference itself."
      required:
      - code
      type: object
    patch_asset_categories_request:
      example:
        code: front_views
        labels:
          en_US: Front views
          fr_FR: Vues de face
        parent: pictures
      properties:
        code:
          description: PAM asset category code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf_labels'
        parent:
          default: "null"
          description: PAM ssset category code of the parent's asset category
          type: string
          x-validation-rules: "&bull; It is either equal to `null` or to an existing\
            \ asset category code. &#10;&bull; If equal to an existing asset category\
            \ code, it cannot reference itself."
      required:
      - code
      type: object
      x-examples:
        x-example-1: "{\"code\":\"pictures\",\"parent\":null}"
        x-example-2: "{\"code\":\"front_views\",\"parent\":\"pitures\"}"
        x-example-3: "{\"code\":\"other_views\",\"parent\":\"pictures\"}"
    patch_asset_categories_200_response:
      example:
        identifier: identifier
        code: code
        status_code: 6
        line: 0
        message: message
      properties:
        code:
          description: "Resource code, only filled when the resource is not a product"
          type: string
        identifier:
          description: "Resource identifier, only filled when the resource is a product"
          type: string
        line:
          description: Line number
          type: integer
        message:
          description: Message explaining the error
          type: string
        status_code:
          description: "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\"\
            >Client errors</a> to understand the meaning of each code"
          type: integer
      type: object
    Asset_families_allOf__links:
      example:
        next:
          href: href
        self:
          href: href
        first:
          href: href
      properties:
        first:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links_first'
        next:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links_next'
        self:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links_self'
      type: object
    Asset_families_allOf__embedded_items_inner_allOf_labels:
      description: Asset family labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Asset family label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Asset_families_allOf__embedded_items_inner_allOf_naming_convention:
      description: "The naming convention ran over the asset code or the main media\
        \ filename upon each asset creation, in order to automatically set several\
        \ values in asset attributes. To learn more and see the format of this property,\
        \ take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>."
      example:
        abort_asset_creation_on_error: true
        pattern: pattern
        source: "{}"
      properties:
        abort_asset_creation_on_error:
          description: Whether the asset should be created if the naming convention
            failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>.
          type: boolean
        pattern:
          description: The regular expression that should be applied on the source.
            More details <a href='/concepts/asset-manager.html#pattern'>here</a>.
          type: string
        source:
          description: The string on which the naming convention should be applied.
            More details <a href='/concepts/asset-manager.html#source'>here</a>.
          properties: {}
          type: object
      type: object
      x-validation-rules: "To know more about the validation of this property, take\
        \ a look at our naming convention format."
    Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_assign_assets_to_inner:
      example:
        mode: mode
        channel: channel
        attribute: attribute
        locale: locale
      properties:
        attribute:
          type: string
        channel:
          type: string
        locale:
          type: string
        mode:
          type: string
      required:
      - attribute
      - mode
      type: object
    Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner:
      example:
        field: field
        channel: channel
        locale: locale
        value: value
        operator: operator
      properties:
        channel:
          type: string
        field:
          type: string
        locale:
          type: string
        operator:
          type: string
        value:
          type: string
      required:
      - field
      - operator
      - value
      type: object
    Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner:
      example:
        assign_assets_to:
        - mode: mode
          channel: channel
          attribute: attribute
          locale: locale
        - mode: mode
          channel: channel
          attribute: attribute
          locale: locale
        product_selections:
        - field: field
          channel: channel
          locale: locale
          value: value
          operator: operator
        - field: field
          channel: channel
          locale: locale
          value: value
          operator: operator
      properties:
        assign_assets_to:
          description: The product value in which your assets will be assigned. More
            details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.
          items:
            $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_assign_assets_to_inner'
          type: array
        product_selections:
          description: The product selection to which the assets of the asset family
            to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.
          items:
            $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner_product_selections_inner'
          type: array
      type: object
    Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_operations_parameters:
      example:
        resolution-x: 5
        colorspace: colorspace
        width: 2
        resolution-unit: resolution-unit
        resolution-y: 5
        height: 0
        quality: 6
        ratio: 1
      properties:
        colorspace:
          type: string
        height:
          type: integer
        quality:
          type: integer
        ratio:
          type: integer
        resolution-unit:
          type: string
        resolution-x:
          type: integer
        resolution-y:
          type: integer
        width:
          type: integer
      type: object
    Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_operations:
      description: The transformations that should be applied to your source file
        to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>.
      example:
        type: type
        parameters:
          resolution-x: 5
          colorspace: colorspace
          width: 2
          resolution-unit: resolution-unit
          resolution-y: 5
          height: 0
          quality: 6
          ratio: 1
      properties:
        parameters:
          $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_operations_parameters'
        type:
          type: string
      type: object
      x-validation-rules: Should contain at least one operation
    Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_source:
      description: The attribute value in which is stored the media file you want
        to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>.
      example:
        channel: channel
        attribute: attribute
        locale: locale
      properties:
        attribute:
          type: string
        channel:
          type: string
        locale:
          type: string
      required:
      - attribute
      - channel
      - locale
      type: object
    Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_target:
      description: "The attribute value in which the PIM will generate the new transformed\
        \ file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
      example:
        channel: channel
        attribute: attribute
        locale: locale
      properties:
        attribute:
          type: string
        channel:
          type: string
        locale:
          type: string
      required:
      - attribute
      - channel
      - locale
      type: object
    Asset_families_allOf__embedded_items_inner_allOf_transformations_inner:
      example:
        filename_prefix: filename_prefix
        operations:
          type: type
          parameters:
            resolution-x: 5
            colorspace: colorspace
            width: 2
            resolution-unit: resolution-unit
            resolution-y: 5
            height: 0
            quality: 6
            ratio: 1
        filename_suffix: filename_suffix
        label: label
        source:
          channel: channel
          attribute: attribute
          locale: locale
        target:
          channel: channel
          attribute: attribute
          locale: locale
      properties:
        filename_prefix:
          description: The prefix that will be prepended to the source filename to
            generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>.
          type: string
        filename_suffix:
          description: The suffix that will be appended to the source filename to
            generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>.
          type: string
        label:
          description: The name of the transformation
          type: string
        operations:
          $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_operations'
        source:
          $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_source'
        target:
          $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_transformations_inner_target'
      required:
      - label
      - operations
      - source
      - target
      type: object
    Asset_families_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          attribute_as_main_media: main_image
          code: model_pictures
          labels:
            en_US: Model pictures
            fr_FR: Photographies en pied
          naming_convention:
            abort_asset_creation_on_error: true
            pattern: /(?P<product_ref>.*)-.*/
            source:
              property: code
          product_link_rules:
          - assign_assets_to:
            - attribute: model_pictures
              mode: replace
            product_selections:
            - field: sku
              operator: EQUALS
              value: "{{product_ref}}"
          transformations:
          - filename_suffix: _thumbnailBW
            label: Thumbnail plus black and white transformation
            operations:
            - parameters:
                height: 150
                width: 150
              type: thumbnail
            - parameters:
                colorspace: grey
              type: colorspace
            source:
              attribute: main_image
            target:
              attribute: thumbnail
        properties:
          attribute_as_main_media:
            default: First media file or media link attribute that was created
            description: Attribute code that is used as the main media of the asset
              family.
            type: string
            x-validation-rules: "It should be the code of an attribute that belongs\
              \ to this family, and it must be a media file or a media link attribute\
              \ type."
          code:
            description: Asset family code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_labels'
          naming_convention:
            $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_naming_convention'
          product_link_rules:
            description: "The rules that will be run after the asset creation, in\
              \ order to automatically link the assets of this family to a set of\
              \ products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>."
            items:
              $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner'
            type: array
            x-validation-rules: "To know more about the validation of this property,\
              \ take a look at our product link rule format."
          transformations:
            description: "The transformations to perform on source files in order\
              \ to generate new files into your asset attributes (only available since\
              \ v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>."
            items:
              $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_transformations_inner'
            type: array
            x-validation-rules: "To know more about the validation of this property,\
              \ take a look at our transformation format."
            x-from-version: "4.0"
        required:
        - code
        type: object
      example:
        code: code
        naming_convention:
          abort_asset_creation_on_error: true
          pattern: pattern
          source: "{}"
        _links:
          self:
            href: href
        product_link_rules:
        - assign_assets_to:
          - mode: mode
            channel: channel
            attribute: attribute
            locale: locale
          - mode: mode
            channel: channel
            attribute: attribute
            locale: locale
          product_selections:
          - field: field
            channel: channel
            locale: locale
            value: value
            operator: operator
          - field: field
            channel: channel
            locale: locale
            value: value
            operator: operator
        - assign_assets_to:
          - mode: mode
            channel: channel
            attribute: attribute
            locale: locale
          - mode: mode
            channel: channel
            attribute: attribute
            locale: locale
          product_selections:
          - field: field
            channel: channel
            locale: locale
            value: value
            operator: operator
          - field: field
            channel: channel
            locale: locale
            value: value
            operator: operator
        transformations:
        - filename_prefix: filename_prefix
          operations:
            type: type
            parameters:
              resolution-x: 5
              colorspace: colorspace
              width: 2
              resolution-unit: resolution-unit
              resolution-y: 5
              height: 0
              quality: 6
              ratio: 1
          filename_suffix: filename_suffix
          label: label
          source:
            channel: channel
            attribute: attribute
            locale: locale
          target:
            channel: channel
            attribute: attribute
            locale: locale
        - filename_prefix: filename_prefix
          operations:
            type: type
            parameters:
              resolution-x: 5
              colorspace: colorspace
              width: 2
              resolution-unit: resolution-unit
              resolution-y: 5
              height: 0
              quality: 6
              ratio: 1
          filename_suffix: filename_suffix
          label: label
          source:
            channel: channel
            attribute: attribute
            locale: locale
          target:
            channel: channel
            attribute: attribute
            locale: locale
        attribute_as_main_media: First media file or media link attribute that was
          created
        labels:
          localeCode: localeCode
      type: object
    Asset_families_allOf__embedded:
      example:
        items:
        - code: code
          naming_convention:
            abort_asset_creation_on_error: true
            pattern: pattern
            source: "{}"
          _links:
            self:
              href: href
          product_link_rules:
          - assign_assets_to:
            - mode: mode
              channel: channel
              attribute: attribute
              locale: locale
            - mode: mode
              channel: channel
              attribute: attribute
              locale: locale
            product_selections:
            - field: field
              channel: channel
              locale: locale
              value: value
              operator: operator
            - field: field
              channel: channel
              locale: locale
              value: value
              operator: operator
          - assign_assets_to:
            - mode: mode
              channel: channel
              attribute: attribute
              locale: locale
            - mode: mode
              channel: channel
              attribute: attribute
              locale: locale
            product_selections:
            - field: field
              channel: channel
              locale: locale
              value: value
              operator: operator
            - field: field
              channel: channel
              locale: locale
              value: value
              operator: operator
          transformations:
          - filename_prefix: filename_prefix
            operations:
              type: type
              parameters:
                resolution-x: 5
                colorspace: colorspace
                width: 2
                resolution-unit: resolution-unit
                resolution-y: 5
                height: 0
                quality: 6
                ratio: 1
            filename_suffix: filename_suffix
            label: label
            source:
              channel: channel
              attribute: attribute
              locale: locale
            target:
              channel: channel
              attribute: attribute
              locale: locale
          - filename_prefix: filename_prefix
            operations:
              type: type
              parameters:
                resolution-x: 5
                colorspace: colorspace
                width: 2
                resolution-unit: resolution-unit
                resolution-y: 5
                height: 0
                quality: 6
                ratio: 1
            filename_suffix: filename_suffix
            label: label
            source:
              channel: channel
              attribute: attribute
              locale: locale
            target:
              channel: channel
              attribute: attribute
              locale: locale
          attribute_as_main_media: First media file or media link attribute that was
            created
          labels:
            localeCode: localeCode
        - code: code
          naming_convention:
            abort_asset_creation_on_error: true
            pattern: pattern
            source: "{}"
          _links:
            self:
              href: href
          product_link_rules:
          - assign_assets_to:
            - mode: mode
              channel: channel
              attribute: attribute
              locale: locale
            - mode: mode
              channel: channel
              attribute: attribute
              locale: locale
            product_selections:
            - field: field
              channel: channel
              locale: locale
              value: value
              operator: operator
            - field: field
              channel: channel
              locale: locale
              value: value
              operator: operator
          - assign_assets_to:
            - mode: mode
              channel: channel
              attribute: attribute
              locale: locale
            - mode: mode
              channel: channel
              attribute: attribute
              locale: locale
            product_selections:
            - field: field
              channel: channel
              locale: locale
              value: value
              operator: operator
            - field: field
              channel: channel
              locale: locale
              value: value
              operator: operator
          transformations:
          - filename_prefix: filename_prefix
            operations:
              type: type
              parameters:
                resolution-x: 5
                colorspace: colorspace
                width: 2
                resolution-unit: resolution-unit
                resolution-y: 5
                height: 0
                quality: 6
                ratio: 1
            filename_suffix: filename_suffix
            label: label
            source:
              channel: channel
              attribute: attribute
              locale: locale
            target:
              channel: channel
              attribute: attribute
              locale: locale
          - filename_prefix: filename_prefix
            operations:
              type: type
              parameters:
                resolution-x: 5
                colorspace: colorspace
                width: 2
                resolution-unit: resolution-unit
                resolution-y: 5
                height: 0
                quality: 6
                ratio: 1
            filename_suffix: filename_suffix
            label: label
            source:
              channel: channel
              attribute: attribute
              locale: locale
            target:
              channel: channel
              attribute: attribute
              locale: locale
          attribute_as_main_media: First media file or media link attribute that was
            created
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner'
          type: array
      type: object
    Asset_families:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/Asset_families_allOf__links'
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Asset_families_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            naming_convention:
              abort_asset_creation_on_error: true
              pattern: pattern
              source: "{}"
            _links:
              self:
                href: href
            product_link_rules:
            - assign_assets_to:
              - mode: mode
                channel: channel
                attribute: attribute
                locale: locale
              - mode: mode
                channel: channel
                attribute: attribute
                locale: locale
              product_selections:
              - field: field
                channel: channel
                locale: locale
                value: value
                operator: operator
              - field: field
                channel: channel
                locale: locale
                value: value
                operator: operator
            - assign_assets_to:
              - mode: mode
                channel: channel
                attribute: attribute
                locale: locale
              - mode: mode
                channel: channel
                attribute: attribute
                locale: locale
              product_selections:
              - field: field
                channel: channel
                locale: locale
                value: value
                operator: operator
              - field: field
                channel: channel
                locale: locale
                value: value
                operator: operator
            transformations:
            - filename_prefix: filename_prefix
              operations:
                type: type
                parameters:
                  resolution-x: 5
                  colorspace: colorspace
                  width: 2
                  resolution-unit: resolution-unit
                  resolution-y: 5
                  height: 0
                  quality: 6
                  ratio: 1
              filename_suffix: filename_suffix
              label: label
              source:
                channel: channel
                attribute: attribute
                locale: locale
              target:
                channel: channel
                attribute: attribute
                locale: locale
            - filename_prefix: filename_prefix
              operations:
                type: type
                parameters:
                  resolution-x: 5
                  colorspace: colorspace
                  width: 2
                  resolution-unit: resolution-unit
                  resolution-y: 5
                  height: 0
                  quality: 6
                  ratio: 1
              filename_suffix: filename_suffix
              label: label
              source:
                channel: channel
                attribute: attribute
                locale: locale
              target:
                channel: channel
                attribute: attribute
                locale: locale
            attribute_as_main_media: First media file or media link attribute that
              was created
            labels:
              localeCode: localeCode
          - code: code
            naming_convention:
              abort_asset_creation_on_error: true
              pattern: pattern
              source: "{}"
            _links:
              self:
                href: href
            product_link_rules:
            - assign_assets_to:
              - mode: mode
                channel: channel
                attribute: attribute
                locale: locale
              - mode: mode
                channel: channel
                attribute: attribute
                locale: locale
              product_selections:
              - field: field
                channel: channel
                locale: locale
                value: value
                operator: operator
              - field: field
                channel: channel
                locale: locale
                value: value
                operator: operator
            - assign_assets_to:
              - mode: mode
                channel: channel
                attribute: attribute
                locale: locale
              - mode: mode
                channel: channel
                attribute: attribute
                locale: locale
              product_selections:
              - field: field
                channel: channel
                locale: locale
                value: value
                operator: operator
              - field: field
                channel: channel
                locale: locale
                value: value
                operator: operator
            transformations:
            - filename_prefix: filename_prefix
              operations:
                type: type
                parameters:
                  resolution-x: 5
                  colorspace: colorspace
                  width: 2
                  resolution-unit: resolution-unit
                  resolution-y: 5
                  height: 0
                  quality: 6
                  ratio: 1
              filename_suffix: filename_suffix
              label: label
              source:
                channel: channel
                attribute: attribute
                locale: locale
              target:
                channel: channel
                attribute: attribute
                locale: locale
            - filename_prefix: filename_prefix
              operations:
                type: type
                parameters:
                  resolution-x: 5
                  colorspace: colorspace
                  width: 2
                  resolution-unit: resolution-unit
                  resolution-y: 5
                  height: 0
                  quality: 6
                  ratio: 1
              filename_suffix: filename_suffix
              label: label
              source:
                channel: channel
                attribute: attribute
                locale: locale
              target:
                channel: channel
                attribute: attribute
                locale: locale
            attribute_as_main_media: First media file or media link attribute that
              was created
            labels:
              localeCode: localeCode
      title: Asset families
    Asset_allOf__embedded__items_inner_allOf_values_attributeCode_inner:
      example:
        data: "{}"
        channel: channel
        locale: locale
      properties:
        channel:
          description: Channel code of the asset attribute value
          type: string
        data:
          description: Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the
            `data` format</a> section for more details.
          properties: {}
          type: object
        locale:
          description: Locale code of the asset attribute value
          type: string
      type: object
    Asset_allOf__embedded__items_inner_allOf_values:
      description: "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus\
        \ on the asset values</a> section for more details."
      example:
        attributeCode:
        - data: "{}"
          channel: channel
          locale: locale
        - data: "{}"
          channel: channel
          locale: locale
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/Asset_allOf__embedded__items_inner_allOf_values_attributeCode_inner'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Asset attribute values section
    Asset_allOf__embedded__items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: sku_54628_picture1
          created: 2021-05-31T09:23:34+00:00
          updated: 2021-05-31T09:23:34+00:00
          values:
            end_of_use_date:
            - data: 02/03/2021
            main_colors:
            - data:
              - red
              - purple
            media_preview:
            - data: sku_54628_picture1.jpg
            model_wears_size:
            - data: s
            photographer:
            - data: ben_levy
        properties:
          code:
            description: Code of the asset
            type: string
            x-immutable: true
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
            x-from-version: "6.0"
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
            x-from-version: "6.0"
          values:
            $ref: '#/components/schemas/Asset_allOf__embedded__items_inner_allOf_values'
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        created: created
        values:
          attributeCode:
          - data: "{}"
            channel: channel
            locale: locale
          - data: "{}"
            channel: channel
            locale: locale
        updated: updated
      type: object
    Asset_allOf__embedded:
      example:
        _items:
        - code: code
          _links:
            self:
              href: href
          created: created
          values:
            attributeCode:
            - data: "{}"
              channel: channel
              locale: locale
            - data: "{}"
              channel: channel
              locale: locale
          updated: updated
        - code: code
          _links:
            self:
              href: href
          created: created
          values:
            attributeCode:
            - data: "{}"
              channel: channel
              locale: locale
            - data: "{}"
              channel: channel
              locale: locale
          updated: updated
      properties:
        _items:
          items:
            $ref: '#/components/schemas/Asset_allOf__embedded__items_inner'
          type: array
      type: object
    Asset:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/Asset_families_allOf__links'
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Asset_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          _items:
          - code: code
            _links:
              self:
                href: href
            created: created
            values:
              attributeCode:
              - data: "{}"
                channel: channel
                locale: locale
              - data: "{}"
                channel: channel
                locale: locale
            updated: updated
          - code: code
            _links:
              self:
                href: href
            created: created
            values:
              attributeCode:
              - data: "{}"
                channel: channel
                locale: locale
              - data: "{}"
                channel: channel
                locale: locale
            updated: updated
      title: Asset
    patch_assets_request_inner:
      example:
        code: sku_54628_picture1
        created: 2021-05-31T09:23:34+00:00
        updated: 2021-05-31T09:23:34+00:00
        values:
          end_of_use_date:
          - data: 02/03/2021
          main_colors:
          - data:
            - red
            - purple
          media_preview:
          - data: sku_54628_picture1.jpg
          model_wears_size:
          - data: s
          photographer:
          - data: ben_levy
      properties:
        code:
          description: Code of the asset
          type: string
          x-immutable: true
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
          x-from-version: "6.0"
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
          x-from-version: "6.0"
        values:
          $ref: '#/components/schemas/Asset_allOf__embedded__items_inner_allOf_values'
      required:
      - code
      type: object
    patch_assets_200_response_inner:
      example:
        code: code
        status_code: 0
        message: message
      properties:
        code:
          description: Resource code
          type: string
        message:
          description: Message explaining the error
          type: string
        status_code:
          description: "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\"\
            >Client errors</a> to understand the meaning of each code"
          type: integer
      type: object
    get_asset_families__code__attributes_200_response_inner_labels:
      description: Attribute labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Attribute label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    get_asset_families__code__attributes_200_response_inner:
      example:
        code: model_is_wearing_size
        is_required_for_completeness: true
        labels:
          en_US: Model is wearing size
          fr_FR: Le mannequin porte la taille
        type: single_option
        value_per_channel: false
        value_per_locale: false
      properties:
        allowed_extensions:
          description: Extensions allowed when the attribute type is `media_file`
          items:
            type: string
          type: array
          x-warning: Only for `media_file` attribute type
        code:
          description: Attribute code
          type: string
          x-immutable: true
        decimals_allowed:
          default: false
          description: Whether decimals are allowed when the attribute type is `number`
          type: boolean
          x-warning: Only for `number` attribute type
        is_read_only:
          default: false
          description: "Whether the attribute should be in read only mode only in\
            \ the UI, but you can still update it with the API"
          type: boolean
        is_required_for_completeness:
          default: false
          description: Whether the attribute should be part of the record's completeness
            calculation
          type: boolean
        is_rich_text_editor:
          description: Whether the UI should display a rich text editor instead of
            a simple text area when the attribute type is `text`
          type: boolean
          x-validation-rules: Required when the property `is_textarea` is equal to
            `true`
          x-warning: Only for `text` attribute type
        is_textarea:
          default: false
          description: Whether the UI should display a text area instead of a simple
            field when the attribute type is `text`
          type: boolean
          x-warning: Only for `text` attribute type
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
        max_characters:
          description: Maximum number of characters allowed for the value of the attribute
            when the attribute type is `text`
          type: integer
          x-warning: Only for `text` attribute type
        max_file_size:
          description: Max file size in MB when the attribute type is `media_file`
          type: string
          x-warning: Only for `media_file` attribute type
        max_value:
          description: Maximum value allowed when the attribute type is `number`
          type: string
          x-validation-rules: The maximum value must be greater than the minimum value
          x-warning: Only for `number` attribute type
        media_type:
          description: "For the `media_link` attribute type, it is the type of the\
            \ media behind the url, to allow its preview in the PIM. For the `media_file`\
            \ attribute type, it is the type of the file."
          enum:
          - image
          - pdf
          - youtube
          - vimeo
          - other
          type: string
          x-warning: Only required for `media_link` and `media_file` attribute types
        min_value:
          description: Minimum value allowed when the attribute type is `number`
          type: string
          x-validation-rules: The minimum value must be lower than the maximum value
          x-warning: Only for `number` attribute type
        prefix:
          description: Prefix of the `media_link` attribute type. The common url root
            that prefixes the link to the media
          type: string
          x-warning: Only for `media_link` attribute type
        suffix:
          description: Suffix of the `media_link` attribute type. The common url suffix
            for the media
          type: string
          x-warning: Only for `media_link` attribute type
        type:
          description: Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a>
            section for more details.
          enum:
          - text
          - media_link
          - number
          - media_file
          - single_option
          - multiple_options
          - reference_entity_single_link
          - reference_entity_multiple_links
          - boolean
          type: string
          x-immutable: true
        validation_regexp:
          description: Regexp expression used to validate the attribute value when
            the attribute type is `text`
          type: string
          x-validation-rules: Required when the property `validation_rule` is equal
            to `regexp`
          x-warning: Only for `text` attribute type
        validation_rule:
          default: none
          description: Validation rule type used to validate the attribute value when
            the attribute type is `text`
          enum:
          - email
          - url
          - regexp
          - none
          type: string
          x-warning: Only for `text` attribute type
        value_per_channel:
          default: false
          description: "Whether the attribute is scopable, i.e. can have one value\
            \ by channel"
          type: boolean
          x-immutable: true
        value_per_locale:
          default: false
          description: "Whether the attribute is localizable, i.e. can have one value\
            \ by locale"
          type: boolean
          x-immutable: true
      required:
      - code
      - media_type
      - type
      type: object
    get_asset_family_attributes__attribute_code__options_200_response_inner:
      example:
        code: small
        labels:
          en_US: S
          fr_FR: S
      properties:
        code:
          description: Attribute's option code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
      required:
      - code
      type: object
    get_asset_family__code__200_response:
      example:
        attribute_as_main_media: main_image
        code: model_pictures
        labels:
          en_US: Model pictures
          fr_FR: Photographies en pied
        naming_convention:
          abort_asset_creation_on_error: true
          pattern: /(?P<product_ref>.*)-.*/
          source:
            property: code
        product_link_rules:
        - assign_assets_to:
          - attribute: model_pictures
            mode: replace
          product_selections:
          - field: sku
            operator: EQUALS
            value: "{{product_ref}}"
        transformations:
        - filename_suffix: _thumbnailBW
          label: Thumbnail plus black and white transformation
          operations:
          - parameters:
              height: 150
              width: 150
            type: thumbnail
          - parameters:
              colorspace: grey
            type: colorspace
          source:
            attribute: main_image
          target:
            attribute: thumbnail
      properties:
        attribute_as_main_media:
          default: First media file or media link attribute that was created
          description: Attribute code that is used as the main media of the asset
            family.
          type: string
          x-validation-rules: "It should be the code of an attribute that belongs\
            \ to this family, and it must be a media file or a media link attribute\
            \ type."
        code:
          description: Asset family code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_labels'
        naming_convention:
          $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_naming_convention'
        product_link_rules:
          description: "The rules that will be run after the asset creation, in order\
            \ to automatically link the assets of this family to a set of products.\
            \ To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>."
          items:
            $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_product_link_rules_inner'
          type: array
          x-validation-rules: "To know more about the validation of this property,\
            \ take a look at our product link rule format."
        transformations:
          description: "The transformations to perform on source files in order to\
            \ generate new files into your asset attributes (only available since\
            \ v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>."
          items:
            $ref: '#/components/schemas/Asset_families_allOf__embedded_items_inner_allOf_transformations_inner'
          type: array
          x-validation-rules: "To know more about the validation of this property,\
            \ take a look at our transformation format."
          x-from-version: "4.0"
      required:
      - code
      type: object
    post_asset_media_files_request:
      properties:
        file:
          description: The binary of the media file
          format: binary
          type: string
      required:
      - file
      type: object
    PAM_Asset_Tags_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: tshirt
        properties:
          code:
            description: PAM asset tag code
            type: string
            x-immutable: true
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
      type: object
    PAM_Asset_Tags_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
        - code: code
          _links:
            self:
              href: href
      properties:
        items:
          items:
            $ref: '#/components/schemas/PAM_Asset_Tags_allOf__embedded_items_inner'
          type: array
      type: object
    PAM_Asset_Tags:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/PAM_Asset_Tags_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
          - code: code
            _links:
              self:
                href: href
        current_page: 0
      title: PAM Asset Tags
    get_asset_tags__code__200_response:
      example:
        code: tshirt
      properties:
        code:
          description: PAM asset tag code
          type: string
          x-immutable: true
      required:
      - code
      type: object
    PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner__link_download:
      example:
        href: href
      properties:
        href:
          description: URI to download the reference file
          type: string
      type: object
    PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner__link_self:
      example:
        href: href
      properties:
        href:
          description: URI of the reference file entity
          type: string
      type: object
    PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner__link:
      description: Links to get and download the reference file
      example:
        download:
          href: href
        self:
          href: href
      properties:
        download:
          $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner__link_download'
        self:
          $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner__link_self'
      type: object
    PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner:
      example:
        code: code
        _link:
          download:
            href: href
          self:
            href: href
        locale: locale
      properties:
        _link:
          $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner__link'
        code:
          description: Code of the reference file
          type: string
        locale:
          description: Locale code of the reference file
          type: string
      type: object
    PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link_download:
      example:
        href: href
      properties:
        href:
          description: URI to download the variation file
          type: string
      type: object
    PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link_self:
      example:
        href: href
      properties:
        href:
          description: URI of the variation entity
          type: string
      type: object
    PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link:
      description: Links to get and download the variation file
      example:
        download:
          href: href
        self:
          href: href
      properties:
        download:
          $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link_download'
        self:
          $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link_self'
      type: object
    PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner:
      example:
        code: code
        _link:
          download:
            href: href
          self:
            href: href
        scope: scope
        locale: locale
      properties:
        _link:
          $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link'
        code:
          description: Code of the variation
          type: string
        locale:
          description: Locale code of the variation
          type: string
        scope:
          description: Channel code of the variation
          type: string
      type: object
    PAM_Assets_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          categories:
          - tshirts_assets
          code: tshirt_artemis_main_picture
          description: The main picture of the Artemis t-shirt
          end_of_use: 2019-09-01T00:00:00+0200
          localizable: false
          reference_files:
          - _link:
              download:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download
              self:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale
            code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg
          tags:
          - tshirts
          - red
          - summer
          variation_files:
          - _link:
              download:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download
              self:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale
            code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg
            scope: e_commerce
          - _link:
              download:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download
              self:
                href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale
            code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg
            scope: print
        properties:
          categories:
            description: Codes of the PAM asset categories in which the asset is classified
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing asset
              category code
          code:
            description: PAM asset code
            type: string
            x-immutable: true
          description:
            description: Description of the PAM asset
            type: string
          end_of_use:
            description: Date on which the PAM asset expire
            format: dateTime
            type: string
            x-validation-rules: The date follows the ISO 8601 format
          localizable:
            default: false
            description: "Whether the asset is localized or not, meaning if you want\
              \ to have different reference files for each of your locale"
            type: boolean
            x-immutable: true
          reference_files:
            description: Reference files of the PAM asset
            items:
              $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner'
            type: array
            x-read-only: true
          tags:
            description: Tags of the PAM asset
            items:
              type: string
            type: array
          variation_files:
            description: Variations of the PAM asset
            items:
              $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner'
            type: array
            x-read-only: true
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        variation_files:
        - code: code
          _link:
            download:
              href: href
            self:
              href: href
          scope: scope
          locale: locale
        - code: code
          _link:
            download:
              href: href
            self:
              href: href
          scope: scope
          locale: locale
        end_of_use: end_of_use
        description: description
        localizable: false
        categories:
        - categories
        - categories
        reference_files:
        - code: code
          _link:
            download:
              href: href
            self:
              href: href
          locale: locale
        - code: code
          _link:
            download:
              href: href
            self:
              href: href
          locale: locale
        tags:
        - tags
        - tags
      type: object
    PAM_Assets_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
          variation_files:
          - code: code
            _link:
              download:
                href: href
              self:
                href: href
            scope: scope
            locale: locale
          - code: code
            _link:
              download:
                href: href
              self:
                href: href
            scope: scope
            locale: locale
          end_of_use: end_of_use
          description: description
          localizable: false
          categories:
          - categories
          - categories
          reference_files:
          - code: code
            _link:
              download:
                href: href
              self:
                href: href
            locale: locale
          - code: code
            _link:
              download:
                href: href
              self:
                href: href
            locale: locale
          tags:
          - tags
          - tags
        - code: code
          _links:
            self:
              href: href
          variation_files:
          - code: code
            _link:
              download:
                href: href
              self:
                href: href
            scope: scope
            locale: locale
          - code: code
            _link:
              download:
                href: href
              self:
                href: href
            scope: scope
            locale: locale
          end_of_use: end_of_use
          description: description
          localizable: false
          categories:
          - categories
          - categories
          reference_files:
          - code: code
            _link:
              download:
                href: href
              self:
                href: href
            locale: locale
          - code: code
            _link:
              download:
                href: href
              self:
                href: href
            locale: locale
          tags:
          - tags
          - tags
      properties:
        items:
          items:
            $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner'
          type: array
      type: object
    PAM_Assets:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/PAM_Assets_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
            variation_files:
            - code: code
              _link:
                download:
                  href: href
                self:
                  href: href
              scope: scope
              locale: locale
            - code: code
              _link:
                download:
                  href: href
                self:
                  href: href
              scope: scope
              locale: locale
            end_of_use: end_of_use
            description: description
            localizable: false
            categories:
            - categories
            - categories
            reference_files:
            - code: code
              _link:
                download:
                  href: href
                self:
                  href: href
              locale: locale
            - code: code
              _link:
                download:
                  href: href
                self:
                  href: href
              locale: locale
            tags:
            - tags
            - tags
          - code: code
            _links:
              self:
                href: href
            variation_files:
            - code: code
              _link:
                download:
                  href: href
                self:
                  href: href
              scope: scope
              locale: locale
            - code: code
              _link:
                download:
                  href: href
                self:
                  href: href
              scope: scope
              locale: locale
            end_of_use: end_of_use
            description: description
            localizable: false
            categories:
            - categories
            - categories
            reference_files:
            - code: code
              _link:
                download:
                  href: href
                self:
                  href: href
              locale: locale
            - code: code
              _link:
                download:
                  href: href
                self:
                  href: href
              locale: locale
            tags:
            - tags
            - tags
        current_page: 0
      title: PAM Assets
    post_pam_assets_request:
      example:
        categories:
        - tshirts_assets
        code: tshirt_artemis_main_picture
        description: The main picture of the Artemis t-shirt
        end_of_use: 2019-09-01T00:00:00+0200
        localizable: false
        reference_files:
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale
          code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg
        tags:
        - tshirts
        - red
        - summer
        variation_files:
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale
          code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg
          scope: e_commerce
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale
          code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg
          scope: print
      properties:
        categories:
          description: Codes of the PAM asset categories in which the asset is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing asset
            category code
        code:
          description: PAM asset code
          type: string
          x-immutable: true
        description:
          description: Description of the PAM asset
          type: string
        end_of_use:
          description: Date on which the PAM asset expire
          format: dateTime
          type: string
          x-validation-rules: The date follows the ISO 8601 format
        localizable:
          default: false
          description: "Whether the asset is localized or not, meaning if you want\
            \ to have different reference files for each of your locale"
          type: boolean
          x-immutable: true
        reference_files:
          description: Reference files of the PAM asset
          items:
            $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner'
          type: array
          x-read-only: true
        tags:
          description: Tags of the PAM asset
          items:
            type: string
          type: array
        variation_files:
          description: Variations of the PAM asset
          items:
            $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner'
          type: array
          x-read-only: true
      required:
      - code
      type: object
    patch_pam_assets_request:
      example:
        categories:
        - tshirts_assets
        code: tshirt_artemis_main_picture
        description: The main picture of the Artemis t-shirt
        end_of_use: 2019-09-01T00:00:00+0200
        localizable: false
        reference_files:
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale
          code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg
        tags:
        - tshirts
        - red
        - summer
        variation_files:
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale
          code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg
          scope: e_commerce
        - _link:
            download:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download
            self:
              href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale
          code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg
          scope: print
      properties:
        categories:
          description: Codes of the PAM asset categories in which the asset is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing asset
            category code
        code:
          description: PAM asset code
          type: string
          x-immutable: true
        description:
          description: Description of the PAM asset
          type: string
        end_of_use:
          description: Date on which the PAM asset expire
          format: dateTime
          type: string
          x-validation-rules: The date follows the ISO 8601 format
        localizable:
          default: false
          description: "Whether the asset is localized or not, meaning if you want\
            \ to have different reference files for each of your locale"
          type: boolean
          x-immutable: true
        reference_files:
          description: Reference files of the PAM asset
          items:
            $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner'
          type: array
          x-read-only: true
        tags:
          description: Tags of the PAM asset
          items:
            type: string
          type: array
        variation_files:
          description: Variations of the PAM asset
          items:
            $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner'
          type: array
          x-read-only: true
      required:
      - code
      type: object
      x-examples:
        x-example-1: "{\"code\":\"tshirt_aria_main_picture\",\"categories\":[\"tshirts_assets\"\
          ],\"tags\":[\"tshirts\", \"red\", \"summer\"]}"
        x-example-2: "{\"code\":\"tshirt_artemis_maintenance_manual\",\"categories\"\
          :[\"tshirts_assets\",\"short_sleeve\"]}"
        x-example-3: "{\"code\":\"tshirt_artemis_main_picture\",\"tags\":[\"tshirts\"\
          , \"red\", \"summer\",\"short_sleeve\"]}"
    get_reference_files__locale_code__200_response__link:
      description: Links to get and download the reference file
      properties:
        download:
          $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner__link_download'
      type: object
    get_reference_files__locale_code__200_response:
      example:
        _link:
          download:
            href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download
        code: 7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg
      properties:
        _link:
          $ref: '#/components/schemas/get_reference_files__locale_code__200_response__link'
        code:
          description: Code of the PAM asset reference file
          type: string
          x-immutable: true
        locale:
          description: "Locale of the PAM asset reference file, equal to `null` if\
            \ the asset is not localizable"
          type: string
      type: object
    post_reference_files__locale_code__request:
      properties:
        file:
          description: The binaries of the file
          format: binary
          type: string
      required:
      - file
      type: object
    post_reference_files__locale_code__201_response_errors_inner:
      example:
        channel: channel
        locale: locale
        message: message
      properties:
        channel:
          description: Channel for which the variation file generation failed
          type: string
        locale:
          description: Locale for which the variation file generation failed
          type: string
        message:
          description: Message explaining why the variation file generation failed
          type: string
      type: object
    post_reference_files__locale_code__201_response:
      example:
        message: message
        errors:
        - channel: channel
          locale: locale
          message: message
        - channel: channel
          locale: locale
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/post_reference_files__locale_code__201_response_errors_inner'
          type: array
        message:
          description: Message explaining the warning
          type: string
      type: object
    get_variation_files__channel_code__locale_code_200_response__link:
      description: Links to get and download the reference file
      properties:
        download:
          $ref: '#/components/schemas/PAM_Assets_allOf__embedded_items_inner_allOf_variation_files_inner__link_download'
      type: object
    get_variation_files__channel_code__locale_code_200_response:
      example:
        _link:
          download:
            href: https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download
        code: 7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg
        scope: ecommerce
      properties:
        _link:
          $ref: '#/components/schemas/get_variation_files__channel_code__locale_code_200_response__link'
        code:
          description: Code of the PAM asset variation file
          type: string
          x-immutable: true
        locale:
          description: "Locale of the PAM asset variation file, equal to `null` if\
            \ the asset is not localizable"
          type: string
        scope:
          description: Channel of the PAM asset variation file
          type: string
      type: object
    Association_types_allOf__embedded_items_inner_allOf_labels:
      description: Association type labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Association type label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Association_types_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: upsell
          is_quantified: false
          is_two_way: false
          labels:
            en_US: Upsell
            fr_FR: Vente incitative
        properties:
          code:
            description: Association type code
            type: string
            x-immutable: true
          is_quantified:
            default: false
            description: "When true, the association is a quantified association (Only\
              \ available in the PIM Serenity version.)"
            type: boolean
            x-immutable: true
          is_two_way:
            default: false
            description: "When true, the association is a two-way association (Only\
              \ available in the PIM Serenity version.)"
            type: boolean
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Association_types_allOf__embedded_items_inner_allOf_labels'
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        is_quantified: false
        is_two_way: false
        labels:
          localeCode: localeCode
      type: object
    Association_types_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
          is_quantified: false
          is_two_way: false
          labels:
            localeCode: localeCode
        - code: code
          _links:
            self:
              href: href
          is_quantified: false
          is_two_way: false
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Association_types_allOf__embedded_items_inner'
          type: array
      type: object
    Association_types:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Association_types_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
            is_quantified: false
            is_two_way: false
            labels:
              localeCode: localeCode
          - code: code
            _links:
              self:
                href: href
            is_quantified: false
            is_two_way: false
            labels:
              localeCode: localeCode
        current_page: 0
      title: Association types
    association_types_post_request:
      example:
        code: upsell
        is_quantified: false
        is_two_way: false
        labels:
          en_US: Upsell
          fr_FR: Vente incitative
      properties:
        code:
          description: Association type code
          type: string
          x-immutable: true
        is_quantified:
          default: false
          description: "When true, the association is a quantified association (Only\
            \ available in the PIM Serenity version.)"
          type: boolean
          x-immutable: true
        is_two_way:
          default: false
          description: "When true, the association is a two-way association (Only\
            \ available in the PIM Serenity version.)"
          type: boolean
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Association_types_allOf__embedded_items_inner_allOf_labels'
      required:
      - code
      type: object
    several_association_types_patch_request:
      example:
        code: upsell
        is_quantified: false
        is_two_way: false
        labels:
          en_US: Upsell
          fr_FR: Vente incitative
      properties:
        code:
          description: Association type code
          type: string
          x-immutable: true
        is_quantified:
          default: false
          description: "When true, the association is a quantified association (Only\
            \ available in the PIM Serenity version.)"
          type: boolean
          x-immutable: true
        is_two_way:
          default: false
          description: "When true, the association is a two-way association (Only\
            \ available in the PIM Serenity version.)"
          type: boolean
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Association_types_allOf__embedded_items_inner_allOf_labels'
      required:
      - code
      type: object
      x-examples:
        x-example-1: "{\"code\":\"new_sell\"}"
        x-example-2: "{\"code\":\"substitution\", \"type\":\"bar\"}"
        x-example-3: "{\"code\":\"x_cross_sell\", \"is_two_way\": true, \"is_quantified\"\
          : false}"
    Attribute_groups_allOf__embedded_items_inner_allOf_labels:
      description: Attribute group labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Attribute group label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Attribute_groups_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          attributes:
          - sku
          - name
          - description
          - response_time
          - release_date
          - price
          code: marketing
          labels:
            en_US: Marketing
            fr_FR: Marketing
          sort_order: 4
        properties:
          attributes:
            description: Attribute codes that compose the attribute group
            items:
              type: string
            type: array
            x-validation-rules: "Each string of the array is an existing attribute\
              \ code, an attribute can only be in one attribute group"
          code:
            description: Attribute group code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Attribute_groups_allOf__embedded_items_inner_allOf_labels'
          sort_order:
            description: Attribute group order among other attribute groups
            type: integer
            x-validation-rules: It is a positive integer
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        attributes:
        - attributes
        - attributes
        sort_order: 6
        labels:
          localeCode: localeCode
      type: object
    Attribute_groups_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
          attributes:
          - attributes
          - attributes
          sort_order: 6
          labels:
            localeCode: localeCode
        - code: code
          _links:
            self:
              href: href
          attributes:
          - attributes
          - attributes
          sort_order: 6
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Attribute_groups_allOf__embedded_items_inner'
          type: array
      type: object
    Attribute_groups:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Attribute_groups_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
            attributes:
            - attributes
            - attributes
            sort_order: 6
            labels:
              localeCode: localeCode
          - code: code
            _links:
              self:
                href: href
            attributes:
            - attributes
            - attributes
            sort_order: 6
            labels:
              localeCode: localeCode
        current_page: 0
      title: Attribute groups
    attribute_groups_post_request:
      example:
        attributes:
        - sku
        - name
        - description
        - response_time
        - release_date
        - price
        code: marketing
        labels:
          en_US: Marketing
          fr_FR: Marketing
        sort_order: 4
      properties:
        attributes:
          description: Attribute codes that compose the attribute group
          items:
            type: string
          type: array
          x-validation-rules: "Each string of the array is an existing attribute code,\
            \ an attribute can only be in one attribute group"
        code:
          description: Attribute group code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Attribute_groups_allOf__embedded_items_inner_allOf_labels'
        sort_order:
          description: Attribute group order among other attribute groups
          type: integer
          x-validation-rules: It is a positive integer
      required:
      - code
      type: object
    several_attribute_groups_patch_request:
      example:
        attributes:
        - sku
        - name
        - description
        - response_time
        - release_date
        - price
        code: marketing
        labels:
          en_US: Marketing
          fr_FR: Marketing
        sort_order: 4
      properties:
        attributes:
          description: Attribute codes that compose the attribute group
          items:
            type: string
          type: array
          x-validation-rules: "Each string of the array is an existing attribute code,\
            \ an attribute can only be in one attribute group"
        code:
          description: Attribute group code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Attribute_groups_allOf__embedded_items_inner_allOf_labels'
        sort_order:
          description: Attribute group order among other attribute groups
          type: integer
          x-validation-rules: It is a positive integer
      required:
      - code
      type: object
      x-examples:
        x-example-1: "{\"code\":\"technical\",\"labels\":{\"en_US\": \"Technical\"\
          , \"fr_FR\": \"Technique\"}}"
        x-example-2: "{\"code\":\"marketing\",\"type\":\"bar\"}"
        x-example-3: "{\"code\":\"design\",\"sort_order\":7}"
    Attributes_allOf__embedded_items_inner_allOf_group_labels:
      description: Group labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Group label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
      x-read-only: true
    Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner_labels:
      description: Column labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Column label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner_validations:
      description: User defined validation constraints on the cell content
      example:
        min: 2.3021358869347655
        max: 5.962133916683182
        decimals_allowed: true
        max_length: 5.637376656633329
      properties:
        decimals_allowed:
          description: whether the value of a numeric cell can hold a decimal part
          type: boolean
          x-validation-rules: only for `number` data type columns
        max:
          description: maximum value of a numeric cell
          type: number
          x-validation-rules: only for `number` data type columns
        max_length:
          description: maximum length of a text cell
          type: number
          x-validation-rules: only for `text` data type columns
        min:
          description: minimum value of a numeric cell
          type: number
          x-validation-rules: only for `number` data type columns
      type: object
    Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner:
      example:
        code: code
        data_type: select
        is_required_for_completeness: false
        validations:
          min: 2.3021358869347655
          max: 5.962133916683182
          decimals_allowed: true
          max_length: 5.637376656633329
        labels:
          localeCode: localeCode
      properties:
        code:
          description: Column code
          type: string
        data_type:
          description: Column data type
          enum:
          - select
          - text
          - number
          - boolean
          type: string
        is_required_for_completeness:
          default: false
          description: Defines if the column should be entirely filled for the attribute
            to be considered complete
          type: boolean
          x-warning: This value is always true for the first column in a table configuration
        labels:
          $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner_labels'
        validations:
          $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner_validations'
      required:
      - code
      - data_type
      type: object
    Attributes_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          allowed_extensions: []
          available_locales: []
          code: release_date
          date_max: 2017-08-08T22:00:00
          date_min: 2017-06-28T08:00:00
          group: marketing
          group_labels:
            en_US: Marketing
            fr_FR: Marketing
          labels:
            en_US: Sale date
            fr_FR: Date des soldes
          localizable: false
          scopable: false
          sort_order: 1
          type: pim_catalog_date
          unique: false
          useable_as_grid_filter: true
        properties:
          allowed_extensions:
            description: Extensions allowed when the attribute type is `pim_catalog_file`
              or `pim_catalog_image`
            items:
              type: string
            type: array
            x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
              types
          available_locales:
            description: "To make the attribute locale specfic, specify here for which\
              \ locales it is specific"
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is an existing and activated
              locale
          code:
            description: Attribute code
            type: string
            x-immutable: true
          date_max:
            description: Maximum date allowed when the attribute type is `pim_catalog_date`
            format: date-time
            type: string
            x-validation-rules: The datetime format follows the ISO-8601 norm
            x-warning: Only for `pim_catalog_date` attribute type
          date_min:
            description: Minimum date allowed when the attribute type is `pim_catalog_date`
            format: date-time
            type: string
            x-validation-rules: The datetime format follows the ISO-8601 norm
            x-warning: Only for `pim_catalog_date` attribute type
          decimals_allowed:
            description: "Whether decimals are allowed when the attribute type is\
              \ `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            type: boolean
            x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
              \ or `pim_catalog_number` attribute types"
          default_metric_unit:
            description: Default metric unit when the attribute type is `pim_catalog_metric`
            type: string
            x-validation-rules: Required for `pim_catalog_metric` attribute type
            x-warning: Only for `pim_catalog_metric` attribute type
          default_value:
            description: "Default value for a Yes/No attribute, applied when creating\
              \ a new product or product model (only available since the 5.0)"
            type: boolean
            x-from-version: "5.0"
            x-warning: Only for `pim_catalog_boolean` attribute type
          group:
            description: Attribute group
            type: string
            x-validation-rules: It is the code of an existing group
          group_labels:
            $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_group_labels'
          labels:
            $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
          localizable:
            default: false
            description: "Whether the attribute is localizable, i.e. can have one\
              \ value by locale"
            type: boolean
            x-immutable: true
          max_characters:
            description: "Number maximum of characters allowed for the value of the\
              \ attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea`\
              \ or `pim_catalog_identifier`"
            type: integer
            x-warning: "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`\
              \ attribute types"
          max_file_size:
            description: Max file size in MB when the attribute type is `pim_catalog_file`
              or `pim_catalog_image`
            type: string
            x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
              types
          metric_family:
            description: Metric family when the attribute type is `pim_catalog_metric`
            type: string
            x-validation-rules: Required for `pim_catalog_metric` attribute type
            x-immutable: true
            x-warning: Only for `pim_catalog_metric` attribute type
          negative_allowed:
            description: Whether negative values are allowed when the attribute type
              is `pim_catalog_metric` or `pim_catalog_number`
            type: boolean
            x-warning: Only for `pim_catalog_metric` or `pim_catalog_number` attribute
              types
          number_max:
            description: "Maximum integer value allowed when the attribute type is\
              \ `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            type: string
            x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
              \ or `pim_catalog_number` attribute types"
          number_min:
            description: "Minimum integer value allowed when the attribute type is\
              \ `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`"
            type: string
            x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
              \ or `pim_catalog_number` attribute types"
          reference_data_name:
            description: Reference entity code when the attribute type is `akeneo_reference_entity`
              or `akeneo_reference_entity_collection` OR Asset family code when the
              attribute type is `pim_catalog_asset_collection`
            type: string
            x-validation-rules: Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
              or `pim_catalog_asset_collection` attribute types
            x-warning: Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
              or `pim_catalog_asset_collection` attribute types
          scopable:
            default: false
            description: "Whether the attribute is scopable, i.e. can have one value\
              \ by channel"
            type: boolean
            x-immutable: true
          sort_order:
            description: Order of the attribute in its group
            type: integer
            x-validation-rules: It is a positive integer
          table_configuration:
            description: Configuration of the Table attribute (columns)
            items:
              $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner'
            type: array
            x-validation-rules: Required only for `pim_catalog_table` attribute type
            x-warning: Only for `pim_catalog_table` attribute type
          type:
            description: Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a>
              section for more details.
            enum:
            - pim_catalog_identifier
            - pim_catalog_metric
            - pim_catalog_number
            - pim_catalog_reference_data_multi_select
            - pim_catalog_reference_data_simple_select
            - pim_catalog_simpleselect
            - pim_catalog_multiselect
            - pim_catalog_date
            - pim_catalog_textarea
            - pim_catalog_text
            - pim_catalog_file
            - pim_catalog_image
            - pim_catalog_price_collection
            - pim_catalog_boolean
            - akeneo_reference_entity
            - akeneo_reference_entity_collection
            - pim_catalog_asset_collection
            type: string
            x-validation-rules: The type is one of the following values
            x-immutable: true
          unique:
            description: Whether two values for the attribute cannot be the same
            type: boolean
            x-immutable: true
          useable_as_grid_filter:
            description: Whether the attribute can be used as a filter for the product
              grid in the PIM user interface
            type: boolean
          validation_regexp:
            description: Regexp expression used to validate any attribute value when
              the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
            type: string
            x-validation-rules: Required when the property `validation_rule` is equal
              to `regexp`
            x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
              types
          validation_rule:
            description: Validation rule type used to validate any attribute value
              when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
            type: string
            x-validation-rules: Equal to `regexp` when the attribute type is equal
              to `pim_catalog_identifier`
            x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
              types
          wysiwyg_enabled:
            description: Whether the WYSIWYG interface is shown when the attribute
              type is `pim_catalog_textarea`
            type: boolean
            x-warning: Only for `pim_catalog_textarea` attribute type
        required:
        - code
        - group
        - type
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        number_max: number_max
        group_labels:
          localeCode: localeCode
        type: pim_catalog_identifier
        default_metric_unit: default_metric_unit
        max_file_size: max_file_size
        validation_rule: validation_rule
        max_characters: 6
        table_configuration:
        - code: code
          data_type: select
          is_required_for_completeness: false
          validations:
            min: 2.3021358869347655
            max: 5.962133916683182
            decimals_allowed: true
            max_length: 5.637376656633329
          labels:
            localeCode: localeCode
        - code: code
          data_type: select
          is_required_for_completeness: false
          validations:
            min: 2.3021358869347655
            max: 5.962133916683182
            decimals_allowed: true
            max_length: 5.637376656633329
          labels:
            localeCode: localeCode
        allowed_extensions:
        - allowed_extensions
        - allowed_extensions
        negative_allowed: true
        sort_order: 1
        group: group
        useable_as_grid_filter: true
        date_min: 2000-01-23T04:56:07.000+00:00
        reference_data_name: reference_data_name
        default_value: true
        available_locales:
        - available_locales
        - available_locales
        labels:
          localeCode: localeCode
        metric_family: metric_family
        validation_regexp: validation_regexp
        date_max: 2000-01-23T04:56:07.000+00:00
        unique: true
        wysiwyg_enabled: true
        number_min: number_min
        localizable: false
        scopable: false
        decimals_allowed: true
      type: object
    Attributes_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
          number_max: number_max
          group_labels:
            localeCode: localeCode
          type: pim_catalog_identifier
          default_metric_unit: default_metric_unit
          max_file_size: max_file_size
          validation_rule: validation_rule
          max_characters: 6
          table_configuration:
          - code: code
            data_type: select
            is_required_for_completeness: false
            validations:
              min: 2.3021358869347655
              max: 5.962133916683182
              decimals_allowed: true
              max_length: 5.637376656633329
            labels:
              localeCode: localeCode
          - code: code
            data_type: select
            is_required_for_completeness: false
            validations:
              min: 2.3021358869347655
              max: 5.962133916683182
              decimals_allowed: true
              max_length: 5.637376656633329
            labels:
              localeCode: localeCode
          allowed_extensions:
          - allowed_extensions
          - allowed_extensions
          negative_allowed: true
          sort_order: 1
          group: group
          useable_as_grid_filter: true
          date_min: 2000-01-23T04:56:07.000+00:00
          reference_data_name: reference_data_name
          default_value: true
          available_locales:
          - available_locales
          - available_locales
          labels:
            localeCode: localeCode
          metric_family: metric_family
          validation_regexp: validation_regexp
          date_max: 2000-01-23T04:56:07.000+00:00
          unique: true
          wysiwyg_enabled: true
          number_min: number_min
          localizable: false
          scopable: false
          decimals_allowed: true
        - code: code
          _links:
            self:
              href: href
          number_max: number_max
          group_labels:
            localeCode: localeCode
          type: pim_catalog_identifier
          default_metric_unit: default_metric_unit
          max_file_size: max_file_size
          validation_rule: validation_rule
          max_characters: 6
          table_configuration:
          - code: code
            data_type: select
            is_required_for_completeness: false
            validations:
              min: 2.3021358869347655
              max: 5.962133916683182
              decimals_allowed: true
              max_length: 5.637376656633329
            labels:
              localeCode: localeCode
          - code: code
            data_type: select
            is_required_for_completeness: false
            validations:
              min: 2.3021358869347655
              max: 5.962133916683182
              decimals_allowed: true
              max_length: 5.637376656633329
            labels:
              localeCode: localeCode
          allowed_extensions:
          - allowed_extensions
          - allowed_extensions
          negative_allowed: true
          sort_order: 1
          group: group
          useable_as_grid_filter: true
          date_min: 2000-01-23T04:56:07.000+00:00
          reference_data_name: reference_data_name
          default_value: true
          available_locales:
          - available_locales
          - available_locales
          labels:
            localeCode: localeCode
          metric_family: metric_family
          validation_regexp: validation_regexp
          date_max: 2000-01-23T04:56:07.000+00:00
          unique: true
          wysiwyg_enabled: true
          number_min: number_min
          localizable: false
          scopable: false
          decimals_allowed: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner'
          type: array
      type: object
    Attributes:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Attributes_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
            number_max: number_max
            group_labels:
              localeCode: localeCode
            type: pim_catalog_identifier
            default_metric_unit: default_metric_unit
            max_file_size: max_file_size
            validation_rule: validation_rule
            max_characters: 6
            table_configuration:
            - code: code
              data_type: select
              is_required_for_completeness: false
              validations:
                min: 2.3021358869347655
                max: 5.962133916683182
                decimals_allowed: true
                max_length: 5.637376656633329
              labels:
                localeCode: localeCode
            - code: code
              data_type: select
              is_required_for_completeness: false
              validations:
                min: 2.3021358869347655
                max: 5.962133916683182
                decimals_allowed: true
                max_length: 5.637376656633329
              labels:
                localeCode: localeCode
            allowed_extensions:
            - allowed_extensions
            - allowed_extensions
            negative_allowed: true
            sort_order: 1
            group: group
            useable_as_grid_filter: true
            date_min: 2000-01-23T04:56:07.000+00:00
            reference_data_name: reference_data_name
            default_value: true
            available_locales:
            - available_locales
            - available_locales
            labels:
              localeCode: localeCode
            metric_family: metric_family
            validation_regexp: validation_regexp
            date_max: 2000-01-23T04:56:07.000+00:00
            unique: true
            wysiwyg_enabled: true
            number_min: number_min
            localizable: false
            scopable: false
            decimals_allowed: true
          - code: code
            _links:
              self:
                href: href
            number_max: number_max
            group_labels:
              localeCode: localeCode
            type: pim_catalog_identifier
            default_metric_unit: default_metric_unit
            max_file_size: max_file_size
            validation_rule: validation_rule
            max_characters: 6
            table_configuration:
            - code: code
              data_type: select
              is_required_for_completeness: false
              validations:
                min: 2.3021358869347655
                max: 5.962133916683182
                decimals_allowed: true
                max_length: 5.637376656633329
              labels:
                localeCode: localeCode
            - code: code
              data_type: select
              is_required_for_completeness: false
              validations:
                min: 2.3021358869347655
                max: 5.962133916683182
                decimals_allowed: true
                max_length: 5.637376656633329
              labels:
                localeCode: localeCode
            allowed_extensions:
            - allowed_extensions
            - allowed_extensions
            negative_allowed: true
            sort_order: 1
            group: group
            useable_as_grid_filter: true
            date_min: 2000-01-23T04:56:07.000+00:00
            reference_data_name: reference_data_name
            default_value: true
            available_locales:
            - available_locales
            - available_locales
            labels:
              localeCode: localeCode
            metric_family: metric_family
            validation_regexp: validation_regexp
            date_max: 2000-01-23T04:56:07.000+00:00
            unique: true
            wysiwyg_enabled: true
            number_min: number_min
            localizable: false
            scopable: false
            decimals_allowed: true
        current_page: 0
      title: Attributes
    post_attributes_request:
      example:
        allowed_extensions: []
        available_locales: []
        code: release_date
        date_max: 2017-08-08T22:00:00
        date_min: 2017-06-28T08:00:00
        group: marketing
        group_labels:
          en_US: Marketing
          fr_FR: Marketing
        labels:
          en_US: Sale date
          fr_FR: Date des soldes
        localizable: false
        scopable: false
        sort_order: 1
        type: pim_catalog_date
        unique: false
        useable_as_grid_filter: true
      properties:
        allowed_extensions:
          description: Extensions allowed when the attribute type is `pim_catalog_file`
            or `pim_catalog_image`
          items:
            type: string
          type: array
          x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
            types
        available_locales:
          description: "To make the attribute locale specfic, specify here for which\
            \ locales it is specific"
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is an existing and activated
            locale
        code:
          description: Attribute code
          type: string
          x-immutable: true
        date_max:
          description: Maximum date allowed when the attribute type is `pim_catalog_date`
          format: date-time
          type: string
          x-validation-rules: The datetime format follows the ISO-8601 norm
          x-warning: Only for `pim_catalog_date` attribute type
        date_min:
          description: Minimum date allowed when the attribute type is `pim_catalog_date`
          format: date-time
          type: string
          x-validation-rules: The datetime format follows the ISO-8601 norm
          x-warning: Only for `pim_catalog_date` attribute type
        decimals_allowed:
          description: "Whether decimals are allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: boolean
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        default_metric_unit:
          description: Default metric unit when the attribute type is `pim_catalog_metric`
          type: string
          x-validation-rules: Required for `pim_catalog_metric` attribute type
          x-warning: Only for `pim_catalog_metric` attribute type
        default_value:
          description: "Default value for a Yes/No attribute, applied when creating\
            \ a new product or product model (only available since the 5.0)"
          type: boolean
          x-from-version: "5.0"
          x-warning: Only for `pim_catalog_boolean` attribute type
        group:
          description: Attribute group
          type: string
          x-validation-rules: It is the code of an existing group
        group_labels:
          $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_group_labels'
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
        localizable:
          default: false
          description: "Whether the attribute is localizable, i.e. can have one value\
            \ by locale"
          type: boolean
          x-immutable: true
        max_characters:
          description: "Number maximum of characters allowed for the value of the\
            \ attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea`\
            \ or `pim_catalog_identifier`"
          type: integer
          x-warning: "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`\
            \ attribute types"
        max_file_size:
          description: Max file size in MB when the attribute type is `pim_catalog_file`
            or `pim_catalog_image`
          type: string
          x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
            types
        metric_family:
          description: Metric family when the attribute type is `pim_catalog_metric`
          type: string
          x-validation-rules: Required for `pim_catalog_metric` attribute type
          x-immutable: true
          x-warning: Only for `pim_catalog_metric` attribute type
        negative_allowed:
          description: Whether negative values are allowed when the attribute type
            is `pim_catalog_metric` or `pim_catalog_number`
          type: boolean
          x-warning: Only for `pim_catalog_metric` or `pim_catalog_number` attribute
            types
        number_max:
          description: "Maximum integer value allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: string
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        number_min:
          description: "Minimum integer value allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: string
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        reference_data_name:
          description: Reference entity code when the attribute type is `akeneo_reference_entity`
            or `akeneo_reference_entity_collection` OR Asset family code when the
            attribute type is `pim_catalog_asset_collection`
          type: string
          x-validation-rules: Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
            or `pim_catalog_asset_collection` attribute types
          x-warning: Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
            or `pim_catalog_asset_collection` attribute types
        scopable:
          default: false
          description: "Whether the attribute is scopable, i.e. can have one value\
            \ by channel"
          type: boolean
          x-immutable: true
        sort_order:
          description: Order of the attribute in its group
          type: integer
          x-validation-rules: It is a positive integer
        table_configuration:
          description: Configuration of the Table attribute (columns)
          items:
            $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner'
          type: array
          x-validation-rules: Required only for `pim_catalog_table` attribute type
          x-warning: Only for `pim_catalog_table` attribute type
        type:
          description: Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a>
            section for more details.
          enum:
          - pim_catalog_identifier
          - pim_catalog_metric
          - pim_catalog_number
          - pim_catalog_reference_data_multi_select
          - pim_catalog_reference_data_simple_select
          - pim_catalog_simpleselect
          - pim_catalog_multiselect
          - pim_catalog_date
          - pim_catalog_textarea
          - pim_catalog_text
          - pim_catalog_file
          - pim_catalog_image
          - pim_catalog_price_collection
          - pim_catalog_boolean
          - akeneo_reference_entity
          - akeneo_reference_entity_collection
          - pim_catalog_asset_collection
          type: string
          x-validation-rules: The type is one of the following values
          x-immutable: true
        unique:
          description: Whether two values for the attribute cannot be the same
          type: boolean
          x-immutable: true
        useable_as_grid_filter:
          description: Whether the attribute can be used as a filter for the product
            grid in the PIM user interface
          type: boolean
        validation_regexp:
          description: Regexp expression used to validate any attribute value when
            the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
          type: string
          x-validation-rules: Required when the property `validation_rule` is equal
            to `regexp`
          x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
            types
        validation_rule:
          description: Validation rule type used to validate any attribute value when
            the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
          type: string
          x-validation-rules: Equal to `regexp` when the attribute type is equal to
            `pim_catalog_identifier`
          x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
            types
        wysiwyg_enabled:
          description: Whether the WYSIWYG interface is shown when the attribute type
            is `pim_catalog_textarea`
          type: boolean
          x-warning: Only for `pim_catalog_textarea` attribute type
      required:
      - code
      - group
      - type
      type: object
    patch_attributes_request:
      example:
        allowed_extensions: []
        available_locales: []
        code: release_date
        date_max: 2017-08-08T22:00:00
        date_min: 2017-06-28T08:00:00
        group: marketing
        group_labels:
          en_US: Marketing
          fr_FR: Marketing
        labels:
          en_US: Sale date
          fr_FR: Date des soldes
        localizable: false
        scopable: false
        sort_order: 1
        type: pim_catalog_date
        unique: false
        useable_as_grid_filter: true
      properties:
        allowed_extensions:
          description: Extensions allowed when the attribute type is `pim_catalog_file`
            or `pim_catalog_image`
          items:
            type: string
          type: array
          x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
            types
        available_locales:
          description: "To make the attribute locale specfic, specify here for which\
            \ locales it is specific"
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is an existing and activated
            locale
        code:
          description: Attribute code
          type: string
          x-immutable: true
        date_max:
          description: Maximum date allowed when the attribute type is `pim_catalog_date`
          format: date-time
          type: string
          x-validation-rules: The datetime format follows the ISO-8601 norm
          x-warning: Only for `pim_catalog_date` attribute type
        date_min:
          description: Minimum date allowed when the attribute type is `pim_catalog_date`
          format: date-time
          type: string
          x-validation-rules: The datetime format follows the ISO-8601 norm
          x-warning: Only for `pim_catalog_date` attribute type
        decimals_allowed:
          description: "Whether decimals are allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: boolean
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        default_metric_unit:
          description: Default metric unit when the attribute type is `pim_catalog_metric`
          type: string
          x-validation-rules: Required for `pim_catalog_metric` attribute type
          x-warning: Only for `pim_catalog_metric` attribute type
        default_value:
          description: "Default value for a Yes/No attribute, applied when creating\
            \ a new product or product model (only available since the 5.0)"
          type: boolean
          x-from-version: "5.0"
          x-warning: Only for `pim_catalog_boolean` attribute type
        group:
          description: Attribute group
          type: string
          x-validation-rules: It is the code of an existing group
        group_labels:
          $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_group_labels'
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
        localizable:
          default: false
          description: "Whether the attribute is localizable, i.e. can have one value\
            \ by locale"
          type: boolean
          x-immutable: true
        max_characters:
          description: "Number maximum of characters allowed for the value of the\
            \ attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea`\
            \ or `pim_catalog_identifier`"
          type: integer
          x-warning: "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`\
            \ attribute types"
        max_file_size:
          description: Max file size in MB when the attribute type is `pim_catalog_file`
            or `pim_catalog_image`
          type: string
          x-warning: Only for `pim_catalog_file` or `pim_catalog_image` attribute
            types
        metric_family:
          description: Metric family when the attribute type is `pim_catalog_metric`
          type: string
          x-validation-rules: Required for `pim_catalog_metric` attribute type
          x-immutable: true
          x-warning: Only for `pim_catalog_metric` attribute type
        negative_allowed:
          description: Whether negative values are allowed when the attribute type
            is `pim_catalog_metric` or `pim_catalog_number`
          type: boolean
          x-warning: Only for `pim_catalog_metric` or `pim_catalog_number` attribute
            types
        number_max:
          description: "Maximum integer value allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: string
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        number_min:
          description: "Minimum integer value allowed when the attribute type is `pim_catalog_metric`,\
            \ `pim_catalog_price` or `pim_catalog_number`"
          type: string
          x-warning: "Only for `pim_catalog_metric`, `pim_catalog_price_collection`\
            \ or `pim_catalog_number` attribute types"
        reference_data_name:
          description: Reference entity code when the attribute type is `akeneo_reference_entity`
            or `akeneo_reference_entity_collection` OR Asset family code when the
            attribute type is `pim_catalog_asset_collection`
          type: string
          x-validation-rules: Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
            or `pim_catalog_asset_collection` attribute types
          x-warning: Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection`
            or `pim_catalog_asset_collection` attribute types
        scopable:
          default: false
          description: "Whether the attribute is scopable, i.e. can have one value\
            \ by channel"
          type: boolean
          x-immutable: true
        sort_order:
          description: Order of the attribute in its group
          type: integer
          x-validation-rules: It is a positive integer
        table_configuration:
          description: Configuration of the Table attribute (columns)
          items:
            $ref: '#/components/schemas/Attributes_allOf__embedded_items_inner_allOf_table_configuration_inner'
          type: array
          x-validation-rules: Required only for `pim_catalog_table` attribute type
          x-warning: Only for `pim_catalog_table` attribute type
        type:
          description: Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a>
            section for more details.
          enum:
          - pim_catalog_identifier
          - pim_catalog_metric
          - pim_catalog_number
          - pim_catalog_reference_data_multi_select
          - pim_catalog_reference_data_simple_select
          - pim_catalog_simpleselect
          - pim_catalog_multiselect
          - pim_catalog_date
          - pim_catalog_textarea
          - pim_catalog_text
          - pim_catalog_file
          - pim_catalog_image
          - pim_catalog_price_collection
          - pim_catalog_boolean
          - akeneo_reference_entity
          - akeneo_reference_entity_collection
          - pim_catalog_asset_collection
          type: string
          x-validation-rules: The type is one of the following values
          x-immutable: true
        unique:
          description: Whether two values for the attribute cannot be the same
          type: boolean
          x-immutable: true
        useable_as_grid_filter:
          description: Whether the attribute can be used as a filter for the product
            grid in the PIM user interface
          type: boolean
        validation_regexp:
          description: Regexp expression used to validate any attribute value when
            the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
          type: string
          x-validation-rules: Required when the property `validation_rule` is equal
            to `regexp`
          x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
            types
        validation_rule:
          description: Validation rule type used to validate any attribute value when
            the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
          type: string
          x-validation-rules: Equal to `regexp` when the attribute type is equal to
            `pim_catalog_identifier`
          x-warning: Only for `pim_catalog_text` or `pim_catalog_identifier` attribute
            types
        wysiwyg_enabled:
          description: Whether the WYSIWYG interface is shown when the attribute type
            is `pim_catalog_textarea`
          type: boolean
          x-warning: Only for `pim_catalog_textarea` attribute type
      required:
      - code
      - group
      - type
      type: object
      x-examples:
        x-example-1: "{\"code\":\"description\",\"useable_as_grid_filter\":true}"
        x-example-2: "{\"code\":\"short_description\",\"group\":\"marketig\"}"
        x-example-3: "{\"code\":\"release_date\",\"date_min\":\"2017-06-28T08:00:00\"\
          }"
    Attribute_Options_allOf__embedded_items_inner_allOf_labels:
      description: Attribute option labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Attribute option label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Attribute_Options_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          attribute: a_simple_select
          code: black
          labels:
            en_US: Black
            fr_FR: Noir
          sort_order: 2
        properties:
          attribute:
            description: Code of attribute related to the attribute option
            type: string
            x-validation-rules: It is the same attribute code as the one given as
              path parameter
          code:
            description: Code of option
            type: string
          labels:
            $ref: '#/components/schemas/Attribute_Options_allOf__embedded_items_inner_allOf_labels'
          sort_order:
            description: Order of attribute option
            type: integer
            x-validation-rules: It is a positive integer
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        attribute: attribute
        sort_order: 6
        labels:
          localeCode: localeCode
      type: object
    Attribute_Options_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
          attribute: attribute
          sort_order: 6
          labels:
            localeCode: localeCode
        - code: code
          _links:
            self:
              href: href
          attribute: attribute
          sort_order: 6
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Attribute_Options_allOf__embedded_items_inner'
          type: array
      type: object
    Attribute_Options:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Attribute_Options_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
            attribute: attribute
            sort_order: 6
            labels:
              localeCode: localeCode
          - code: code
            _links:
              self:
                href: href
            attribute: attribute
            sort_order: 6
            labels:
              localeCode: localeCode
        current_page: 0
      title: Attribute Options
    post_attributes__attribute_code__options_request:
      example:
        attribute: a_simple_select
        code: black
        labels:
          en_US: Black
          fr_FR: Noir
        sort_order: 2
      properties:
        attribute:
          description: Code of attribute related to the attribute option
          type: string
          x-validation-rules: It is the same attribute code as the one given as path
            parameter
        code:
          description: Code of option
          type: string
        labels:
          $ref: '#/components/schemas/Attribute_Options_allOf__embedded_items_inner_allOf_labels'
        sort_order:
          description: Order of attribute option
          type: integer
          x-validation-rules: It is a positive integer
      required:
      - code
      type: object
    patch_attributes__attribute_code__options_request:
      example:
        attribute: a_simple_select
        code: black
        labels:
          en_US: Black
          fr_FR: Noir
        sort_order: 2
      properties:
        attribute:
          description: Code of attribute related to the attribute option
          type: string
          x-validation-rules: It is the same attribute code as the one given as path
            parameter
        code:
          description: Code of option
          type: string
        labels:
          $ref: '#/components/schemas/Attribute_Options_allOf__embedded_items_inner_allOf_labels'
        sort_order:
          description: Order of attribute option
          type: integer
          x-validation-rules: It is a positive integer
      required:
      - code
      type: object
      x-examples:
        x-example-1: "{\"code\":\"black\", \"attribute\":\"a_simple_select\", \"labels\"\
          :{\"en_US\": \"Black\",\"fr_FR\": \"Noir\"}}"
        x-example-2: "{\"code\":\"red\", \"label\":{\"en_US\": \"Red\",\"fr_FR\":\
          \ \"Rouge\"}}"
        x-example-3: "{\"code\":\"yellow\", \"labels\":{\"en_US\": \"Yellow\",\"fr_FR\"\
          : \"Jaune\"}}"
    Catalogs_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          enabled: false
          id: 12351d98-200e-4bbc-aa19-7fdda1bd14f2
          name: My app catalog
        properties:
          enabled:
            default: false
            description: Whether the catalog is enabled or not
            type: boolean
          id:
            description: Catalog id
            type: string
            x-immutable: true
          name:
            description: Catalog name
            type: string
        type: object
      example:
        _links:
          self:
            href: href
        name: name
        id: id
        enabled: false
      type: object
    Catalogs_allOf__embedded:
      example:
        items:
        - _links:
            self:
              href: href
          name: name
          id: id
          enabled: false
        - _links:
            self:
              href: href
          name: name
          id: id
          enabled: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/Catalogs_allOf__embedded_items_inner'
          type: array
      type: object
    Catalogs:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Catalogs_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - _links:
              self:
                href: href
            name: name
            id: id
            enabled: false
          - _links:
              self:
                href: href
            name: name
            id: id
            enabled: false
        current_page: 0
      title: Catalogs
    post_app_catalog_request:
      example:
        name: My app catalog
      properties:
        name:
          description: Catalog name
          type: string
      required:
      - name
      type: object
    post_app_catalog_201_response:
      example:
        enabled: false
        id: 12351d98-200e-4bbc-aa19-7fdda1bd14f2
        name: My app catalog
      properties:
        enabled:
          default: false
          description: Whether the catalog is enabled or not
          type: boolean
        id:
          description: Catalog id
          type: string
          x-immutable: true
        name:
          description: Catalog name
          type: string
      type: object
    Products_allOf__embedded:
      example:
        items:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            format: uuid
            type: string
          type: array
      type: object
    Products:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/Asset_families_allOf__links'
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Products_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      title: Products
    get_app_catalogs_mapping_schema_product_200_response:
      example:
        $comment: My schema !
        $id: https://example.com/product
        $schema: https://api.akeneo.com/mapping/product/0.0.6/schema
        description: JSON Schema describing the structure of products expected by
          our application
        properties:
          available:
            description: Used to display when a product is out of stock on your e-commerce
              website.
            title: Is available
            type: boolean
          body_html:
            description: Product description in raw HTML
            maxLength: 255
            minLength: 0
            title: Description (textarea)
            type: string
          main_color:
            description: "The main color of the product, used by grid filters on your\
              \ e-commerce website."
            title: Main color
            type: string
          main_image:
            description: "Format: URI/link"
            format: uri
            title: Main image
            type: string
          name:
            title: Product name
            type: string
          price:
            title: Price (€)
            type: number
          publication_date:
            description: "Format: ISO 8601 standard. \nUsed to filter products that\
              \ must be published on your e-commerce website depending on the current\
              \ date."
            format: date-time
            title: Publication date
            type: string
          sku:
            description: "Selling Partner SKU (stock keeping unit) identifier for\
              \ the listing. \n SKU uniquely identifies a listing for a Selling Partner."
            title: SKU (Stock Keeping Unit)
            type: string
          uuid:
            title: Product UUID
            type: string
          weight:
            title: Weight (g)
            type: number
        title: Product Mapping
        type: object
      properties:
        $comment:
          description: allows you to add a comment
          type: string
        $id:
          description: id of your schema
          type: string
        $schema:
          description: $schema indicates which product mapping schema version your
            app uses
          type: string
        description:
          description: allows you to add a description of your mapping schema
          type: string
        properties:
          description: list and describe the targets your app expects
          properties: {}
          type: object
        title:
          description: allows you to add a title to your mapping schema
          type: string
        type:
          description: should always be "object"
          type: string
      required:
      - $schema
      - properties
      type: object
    Product_uuids:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/Asset_families_allOf__links'
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Products_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      title: Product uuids
    Categories_allOf__embedded_items_inner_allOf_labels:
      description: Category labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Category label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Categories_allOf__embedded_items_inner_allOf_values_attributeCode_attributeUuid_channelCode_localeCode_inner:
      example:
        data: "{}"
        channel: channel
        locale: locale
        type: type
        attribute_code: attribute_code
      properties:
        attribute_code:
          description: The attribute code with its uuid (attributeCode|attributeUuid)
          type: string
        channel:
          description: <a href='api-reference.html#Channel'>Channel</a> code of the
            attribute value
          type: string
        data:
          description: Attribute value
          properties: {}
          type: object
        locale:
          description: <a href='api-reference.html#Locale'>Locale</a> code of the
            attribute value
          type: string
        type:
          description: The attribute type
          type: string
      type: object
    Categories_allOf__embedded_items_inner_allOf_values:
      description: Attribute values
      example:
        attributeCode|attributeUuid|channelCode|localeCode:
        - data: "{}"
          channel: channel
          locale: locale
          type: type
          attribute_code: attribute_code
        - data: "{}"
          channel: channel
          locale: locale
          type: type
          attribute_code: attribute_code
      properties:
        attributeCode|attributeUuid|channelCode|localeCode:
          items:
            $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_values_attributeCode_attributeUuid_channelCode_localeCode_inner'
          type: array
      type: object
      x-read-only: true
    Categories_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: winter_collection
          labels:
            en_US: Winter collection
            fr_FR: Collection hiver
          position: 1
          updated: 2021-05-22T12:48:00+02:00
          values:
            description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US:
              attribute_code: description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26
              channel: ecommerce
              data: |
                <p>Winter collection description</p>
              locale: en_US
              type: textarea
        properties:
          code:
            description: Category code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_labels'
          parent:
            default: "null"
            description: Category code of the parent's category
            type: string
            x-validation-rules: "&bull; It is either equal to `null` or to an existing\
              \ category code. &#10;&bull; If equal to an existing category code,\
              \ it cannot reference itself."
          position:
            description: "Position of the category in its level, start from 1 (only\
              \ available since the 7.0 version and when query parameter \"with_position\"\
              \ is set to \"true\")"
            type: integer
            x-read-only: true
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          values:
            $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_values'
        required:
        - code
        type: object
      example:
        parent: "null"
        code: code
        _links:
          self:
            href: href
        values:
          attributeCode|attributeUuid|channelCode|localeCode:
          - data: "{}"
            channel: channel
            locale: locale
            type: type
            attribute_code: attribute_code
          - data: "{}"
            channel: channel
            locale: locale
            type: type
            attribute_code: attribute_code
        position: 6
        updated: updated
        labels:
          localeCode: localeCode
      type: object
    Categories_allOf__embedded:
      example:
        items:
        - parent: "null"
          code: code
          _links:
            self:
              href: href
          values:
            attributeCode|attributeUuid|channelCode|localeCode:
            - data: "{}"
              channel: channel
              locale: locale
              type: type
              attribute_code: attribute_code
            - data: "{}"
              channel: channel
              locale: locale
              type: type
              attribute_code: attribute_code
          position: 6
          updated: updated
          labels:
            localeCode: localeCode
        - parent: "null"
          code: code
          _links:
            self:
              href: href
          values:
            attributeCode|attributeUuid|channelCode|localeCode:
            - data: "{}"
              channel: channel
              locale: locale
              type: type
              attribute_code: attribute_code
            - data: "{}"
              channel: channel
              locale: locale
              type: type
              attribute_code: attribute_code
          position: 6
          updated: updated
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Categories_allOf__embedded_items_inner'
          type: array
      type: object
    Categories:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Categories_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - parent: "null"
            code: code
            _links:
              self:
                href: href
            values:
              attributeCode|attributeUuid|channelCode|localeCode:
              - data: "{}"
                channel: channel
                locale: locale
                type: type
                attribute_code: attribute_code
              - data: "{}"
                channel: channel
                locale: locale
                type: type
                attribute_code: attribute_code
            position: 6
            updated: updated
            labels:
              localeCode: localeCode
          - parent: "null"
            code: code
            _links:
              self:
                href: href
            values:
              attributeCode|attributeUuid|channelCode|localeCode:
              - data: "{}"
                channel: channel
                locale: locale
                type: type
                attribute_code: attribute_code
              - data: "{}"
                channel: channel
                locale: locale
                type: type
                attribute_code: attribute_code
            position: 6
            updated: updated
            labels:
              localeCode: localeCode
        current_page: 0
      title: Categories
    post_categories_request:
      example:
        code: winter_collection
        labels:
          en_US: Winter collection
          fr_FR: Collection hiver
        position: 1
        updated: 2021-05-22T12:48:00+02:00
        values:
          description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US:
            attribute_code: description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26
            channel: ecommerce
            data: |
              <p>Winter collection description</p>
            locale: en_US
            type: textarea
      properties:
        code:
          description: Category code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_labels'
        parent:
          default: "null"
          description: Category code of the parent's category
          type: string
          x-validation-rules: "&bull; It is either equal to `null` or to an existing\
            \ category code. &#10;&bull; If equal to an existing category code, it\
            \ cannot reference itself."
        position:
          description: "Position of the category in its level, start from 1 (only\
            \ available since the 7.0 version and when query parameter \"with_position\"\
            \ is set to \"true\")"
          type: integer
          x-read-only: true
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        values:
          $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      type: object
    patch_categories_request:
      example:
        code: winter_collection
        labels:
          en_US: Winter collection
          fr_FR: Collection hiver
        position: 1
        updated: 2021-05-22T12:48:00+02:00
        values:
          description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US:
            attribute_code: description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26
            channel: ecommerce
            data: |
              <p>Winter collection description</p>
            locale: en_US
            type: textarea
      properties:
        code:
          description: Category code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_labels'
        parent:
          default: "null"
          description: Category code of the parent's category
          type: string
          x-validation-rules: "&bull; It is either equal to `null` or to an existing\
            \ category code. &#10;&bull; If equal to an existing category code, it\
            \ cannot reference itself."
        position:
          description: "Position of the category in its level, start from 1 (only\
            \ available since the 7.0 version and when query parameter \"with_position\"\
            \ is set to \"true\")"
          type: integer
          x-read-only: true
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        values:
          $ref: '#/components/schemas/Categories_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      type: object
      x-examples:
        x-example-1: "{\"code\":\"spring_collection\",\"parent\":null}"
        x-example-2: "{\"code\":\"woman\",\"parent\":\"spring_collectionn\"}"
        x-example-3: "{\"code\":\"man\",\"parent\":\"spring_collection\"}"
    Channels_allOf__embedded_items_inner_allOf_conversion_units:
      description: Units to which the given metric attributes should be converted
        when exporting products
      example:
        attributeCode: attributeCode
      properties:
        attributeCode:
          description: Conversion unit code used to convert the values of the attribute
            `attributeCode` when exporting via the channel
          type: string
      type: object
      x-validation-rules: '&bull; The `attributeCode` is the code of an existing attribute
        whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit
        codes.'
    Channels_allOf__embedded_items_inner_allOf_labels:
      description: Channel labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Channel label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Channels_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          category_tree: master
          code: ecommerce
          conversion_units:
            weight: KILOGRAM
          currencies:
          - USD
          - EUR
          labels:
            de_DE: Ecommerce
            en_US: Ecommerce
            fr_FR: Ecommerce
          locales:
          - de_DE
          - en_US
          - fr_FR
        properties:
          category_tree:
            description: Code of the category tree linked to the channel
            type: string
            x-validation-rules: It is the code of an existing category code that is
              a tree (a category without parent)
          code:
            description: Channel code
            type: string
            x-immutable: true
          conversion_units:
            $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_conversion_units'
          currencies:
            description: Codes of activated currencies for the channel
            items:
              type: string
            type: array
            x-validation-rules: '&bull; Each string of the array is an existing currency
              code &#10;&bull; At least one currency in the array'
          labels:
            $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_labels'
          locales:
            description: Codes of activated locales for the channel
            items:
              type: string
            type: array
            x-validation-rules: '&bull; Each string of the array is an existing locale
              code &#10;&bull; At least one locale in the array'
        required:
        - category_tree
        - code
        - currencies
        - locales
        type: object
      example:
        locales:
        - locales
        - locales
        code: code
        _links:
          self:
            href: href
        category_tree: category_tree
        conversion_units:
          attributeCode: attributeCode
        currencies:
        - currencies
        - currencies
        labels:
          localeCode: localeCode
      type: object
    Channels_allOf__embedded:
      example:
        items:
        - locales:
          - locales
          - locales
          code: code
          _links:
            self:
              href: href
          category_tree: category_tree
          conversion_units:
            attributeCode: attributeCode
          currencies:
          - currencies
          - currencies
          labels:
            localeCode: localeCode
        - locales:
          - locales
          - locales
          code: code
          _links:
            self:
              href: href
          category_tree: category_tree
          conversion_units:
            attributeCode: attributeCode
          currencies:
          - currencies
          - currencies
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Channels_allOf__embedded_items_inner'
          type: array
      type: object
    Channels:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Channels_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - locales:
            - locales
            - locales
            code: code
            _links:
              self:
                href: href
            category_tree: category_tree
            conversion_units:
              attributeCode: attributeCode
            currencies:
            - currencies
            - currencies
            labels:
              localeCode: localeCode
          - locales:
            - locales
            - locales
            code: code
            _links:
              self:
                href: href
            category_tree: category_tree
            conversion_units:
              attributeCode: attributeCode
            currencies:
            - currencies
            - currencies
            labels:
              localeCode: localeCode
        current_page: 0
      title: Channels
    channels_post_request:
      example:
        category_tree: master
        code: ecommerce
        conversion_units:
          weight: KILOGRAM
        currencies:
        - USD
        - EUR
        labels:
          de_DE: Ecommerce
          en_US: Ecommerce
          fr_FR: Ecommerce
        locales:
        - de_DE
        - en_US
        - fr_FR
      properties:
        category_tree:
          description: Code of the category tree linked to the channel
          type: string
          x-validation-rules: It is the code of an existing category code that is
            a tree (a category without parent)
        code:
          description: Channel code
          type: string
          x-immutable: true
        conversion_units:
          $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_conversion_units'
        currencies:
          description: Codes of activated currencies for the channel
          items:
            type: string
          type: array
          x-validation-rules: '&bull; Each string of the array is an existing currency
            code &#10;&bull; At least one currency in the array'
        labels:
          $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_labels'
        locales:
          description: Codes of activated locales for the channel
          items:
            type: string
          type: array
          x-validation-rules: '&bull; Each string of the array is an existing locale
            code &#10;&bull; At least one locale in the array'
      required:
      - category_tree
      - code
      - currencies
      - locales
      type: object
    several_channels_patch_request:
      example:
        category_tree: master
        code: ecommerce
        conversion_units:
          weight: KILOGRAM
        currencies:
        - USD
        - EUR
        labels:
          de_DE: Ecommerce
          en_US: Ecommerce
          fr_FR: Ecommerce
        locales:
        - de_DE
        - en_US
        - fr_FR
      properties:
        category_tree:
          description: Code of the category tree linked to the channel
          type: string
          x-validation-rules: It is the code of an existing category code that is
            a tree (a category without parent)
        code:
          description: Channel code
          type: string
          x-immutable: true
        conversion_units:
          $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_conversion_units'
        currencies:
          description: Codes of activated currencies for the channel
          items:
            type: string
          type: array
          x-validation-rules: '&bull; Each string of the array is an existing currency
            code &#10;&bull; At least one currency in the array'
        labels:
          $ref: '#/components/schemas/Channels_allOf__embedded_items_inner_allOf_labels'
        locales:
          description: Codes of activated locales for the channel
          items:
            type: string
          type: array
          x-validation-rules: '&bull; Each string of the array is an existing locale
            code &#10;&bull; At least one locale in the array'
      required:
      - category_tree
      - code
      - currencies
      - locales
      type: object
      x-examples:
        x-example-1: "{\"code\":\"ecommerce_fr\", \"category_tree\": \"master\", \"\
          currencies\": [\"EUR\"], \"locales\": [\"fr_FR\"], \"labels\":{\"fr_FR\"\
          : \"Ecommerce Fr\"}}"
        x-example-2: "{\"code\":\"ecommerce_ch\", \"type\":\"bar\"}"
        x-example-3: "{\"code\":\"tablet\", \"labels\":{\"en_US\": \"Tablet\", \"\
          fr_FR\": \"Tablette\"}}"
    Currencies_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: EUR
          enabled: true
        properties:
          code:
            description: Currency code
            type: string
            x-immutable: true
          enabled:
            description: Whether the currency is enabled
            type: boolean
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        enabled: true
      type: object
    Currencies_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
          enabled: true
        - code: code
          _links:
            self:
              href: href
          enabled: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/Currencies_allOf__embedded_items_inner'
          type: array
      type: object
    Currencies:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Currencies_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
            enabled: true
          - code: code
            _links:
              self:
                href: href
            enabled: true
        current_page: 0
      title: Currencies
    currencies_get_200_response:
      example:
        code: EUR
        enabled: true
      properties:
        code:
          description: Currency code
          type: string
          x-immutable: true
        enabled:
          description: Whether the currency is enabled
          type: boolean
      required:
      - code
      type: object
    Families_allOf__embedded_items_inner_allOf_attribute_requirements:
      description: Attributes codes of the family that are required for the completeness
        calculation for each channel
      example:
        channelCode:
        - channelCode
        - channelCode
      properties:
        channelCode:
          items:
            description: Attributes codes of the family that are required for the
              completeness calculation for the channel `channelCode`
            type: string
          type: array
      type: object
      x-validation-rules: '&bull; Each string of these arrays is an existing attribute
        code &#10;&bull; These attribute codes are in the array of the property `attributes`
        &#10;&bull; The `channelCode` is the code of an existing and activated channel'
    Families_allOf__embedded_items_inner_allOf_labels:
      description: Family labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Family label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Families_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          attribute_as_image: picture
          attribute_as_label: name
          attribute_requirements:
            ecommerce:
            - sku
            - name
            - description
            - price
            - color
            tablet:
            - sku
            - name
            - description
            - price
          attributes:
          - sku
          - name
          - description
          - price
          - color
          - picture
          code: caps
          labels:
            en_US: Caps
            fr_FR: Casquettes
        properties:
          attribute_as_image:
            default: "null"
            description: Attribute code used as the main picture in the user interface
              (only since v2.0)
            type: string
            x-validation-rules: "&bull; It is equal to an existing attribute code\
              \ &#10;&bull; This attribute code is in the array of the property `attributes`\
              \ &#10;&bull; The type of this attribute is `pim_catalog_image`. Since\
              \ v2.1, you can also use a `pim_assets_collection` attribute type"
            x-from-version: "2.0"
          attribute_as_label:
            description: Attribute code used as label
            type: string
            x-validation-rules: '&bull; It is equal to an existing attribute code
              &#10;&bull; This attribute code is in the array of the property `attributes`
              &#10;&bull; The type of this attribute is either `pim_catalog_identifier`
              or `pim_catalog_text`'
          attribute_requirements:
            $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_attribute_requirements'
          attributes:
            description: Attributes codes that compose the family
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is an existing attribute
              code
          code:
            description: Family code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_labels'
        required:
        - attribute_as_label
        - code
        type: object
      example:
        attribute_as_image: "null"
        attribute_as_label: attribute_as_label
        code: code
        _links:
          self:
            href: href
        attribute_requirements:
          channelCode:
          - channelCode
          - channelCode
        attributes:
        - attributes
        - attributes
        labels:
          localeCode: localeCode
      type: object
    Families_allOf__embedded:
      example:
        items:
        - attribute_as_image: "null"
          attribute_as_label: attribute_as_label
          code: code
          _links:
            self:
              href: href
          attribute_requirements:
            channelCode:
            - channelCode
            - channelCode
          attributes:
          - attributes
          - attributes
          labels:
            localeCode: localeCode
        - attribute_as_image: "null"
          attribute_as_label: attribute_as_label
          code: code
          _links:
            self:
              href: href
          attribute_requirements:
            channelCode:
            - channelCode
            - channelCode
          attributes:
          - attributes
          - attributes
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Families_allOf__embedded_items_inner'
          type: array
      type: object
    Families:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Families_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - attribute_as_image: "null"
            attribute_as_label: attribute_as_label
            code: code
            _links:
              self:
                href: href
            attribute_requirements:
              channelCode:
              - channelCode
              - channelCode
            attributes:
            - attributes
            - attributes
            labels:
              localeCode: localeCode
          - attribute_as_image: "null"
            attribute_as_label: attribute_as_label
            code: code
            _links:
              self:
                href: href
            attribute_requirements:
              channelCode:
              - channelCode
              - channelCode
            attributes:
            - attributes
            - attributes
            labels:
              localeCode: localeCode
        current_page: 0
      title: Families
    post_families_request:
      example:
        attribute_as_image: picture
        attribute_as_label: name
        attribute_requirements:
          ecommerce:
          - sku
          - name
          - description
          - price
          - color
          tablet:
          - sku
          - name
          - description
          - price
        attributes:
        - sku
        - name
        - description
        - price
        - color
        - picture
        code: caps
        labels:
          en_US: Caps
          fr_FR: Casquettes
      properties:
        attribute_as_image:
          default: "null"
          description: Attribute code used as the main picture in the user interface
            (only since v2.0)
          type: string
          x-validation-rules: "&bull; It is equal to an existing attribute code &#10;&bull;\
            \ This attribute code is in the array of the property `attributes` &#10;&bull;\
            \ The type of this attribute is `pim_catalog_image`. Since v2.1, you can\
            \ also use a `pim_assets_collection` attribute type"
          x-from-version: "2.0"
        attribute_as_label:
          description: Attribute code used as label
          type: string
          x-validation-rules: '&bull; It is equal to an existing attribute code &#10;&bull;
            This attribute code is in the array of the property `attributes` &#10;&bull;
            The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`'
        attribute_requirements:
          $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_attribute_requirements'
        attributes:
          description: Attributes codes that compose the family
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is an existing attribute code
        code:
          description: Family code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_labels'
      required:
      - attribute_as_label
      - code
      type: object
    patch_families_request:
      example:
        attribute_as_image: picture
        attribute_as_label: name
        attribute_requirements:
          ecommerce:
          - sku
          - name
          - description
          - price
          - color
          tablet:
          - sku
          - name
          - description
          - price
        attributes:
        - sku
        - name
        - description
        - price
        - color
        - picture
        code: caps
        labels:
          en_US: Caps
          fr_FR: Casquettes
      properties:
        attribute_as_image:
          default: "null"
          description: Attribute code used as the main picture in the user interface
            (only since v2.0)
          type: string
          x-validation-rules: "&bull; It is equal to an existing attribute code &#10;&bull;\
            \ This attribute code is in the array of the property `attributes` &#10;&bull;\
            \ The type of this attribute is `pim_catalog_image`. Since v2.1, you can\
            \ also use a `pim_assets_collection` attribute type"
          x-from-version: "2.0"
        attribute_as_label:
          description: Attribute code used as label
          type: string
          x-validation-rules: '&bull; It is equal to an existing attribute code &#10;&bull;
            This attribute code is in the array of the property `attributes` &#10;&bull;
            The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`'
        attribute_requirements:
          $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_attribute_requirements'
        attributes:
          description: Attributes codes that compose the family
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is an existing attribute code
        code:
          description: Family code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Families_allOf__embedded_items_inner_allOf_labels'
      required:
      - attribute_as_label
      - code
      type: object
      x-examples:
        x-example-1: "{\"code\":\"tshirt\",\"attributes\":[\"description\",\"size\"\
          ]}"
        x-example-2: "{\"code\":\"cap\",\"attribute_as_label\":\"descripion\"}"
        x-example-3: "{\"code\":\"mug\",\"attributes\":[\"description\",\"short_description\"\
          ]}"
    Family_Variants_allOf__embedded_items_inner_allOf_labels:
      description: Family variant labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Family variant label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Family_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner:
      description: Enrichment level
      example:
        level: 6
        axes:
        - axes
        - axes
        attributes:
        - attributes
        - attributes
      properties:
        attributes:
          description: Codes of attributes bind to this enrichment level
          items:
            type: string
          type: array
          x-validation-rules: '&bull; Should be an array of existing attribute codes
            &#10;&bull; These attributes should belong to the family of the family
            variant &#10;&bull; Attributes used as attribute in one level cannot be
            used as axes or as attributes in the other level &#10;&bull; Attributes
            that are `unique value` or `identifier` are automatically distributed
            to the lower level.'
        axes:
          description: Codes of attributes used as variant axes
          items:
            type: string
          type: array
          x-validation-rules: "&bull; Should be an array of maximum 5 existing attribute\
            \ codes &#10;&bull; These attributes should belong to the family of the\
            \ family variant &#10;&bull; Only the following attribute types are allowed:\
            \ `simple select`, `multi select`, `reference data`, `metric`, `boolean`\
            \ &#10;&bull; Attributes cannot be scopable, nor localizable nor locale\
            \ specific &#10;&bull; Attributes used as axes in one level cannot be\
            \ used as axes or as attributes in the other level"
          x-immutable: true
        level:
          description: Enrichment level
          type: integer
          x-validation-rules: "&bull; Number representing the level of the attribute\
            \ set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify\
            \ the level 2, you have to specify the level 1 as well."
          x-immutable: true
      required:
      - axes
      - level
      type: object
    Family_Variants_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: shoesVariant
          labels:
            en_US: Shoes variant
            fr_FR: Variante de chaussures
          variant_attribute_sets:
          - attributes:
            - color
            - material
            axes:
            - color
            level: 1
          - attributes:
            - sku
            - size
            axes:
            - size
            level: 2
        properties:
          code:
            description: Family variant code
            type: string
            x-immutable: true
          labels:
            $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_labels'
          variant_attribute_sets:
            description: Attributes distribution according to the enrichment level
            items:
              $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner'
            type: array
        required:
        - code
        - variant_attribute_sets
        type: object
      example:
        variant_attribute_sets:
        - level: 6
          axes:
          - axes
          - axes
          attributes:
          - attributes
          - attributes
        - level: 6
          axes:
          - axes
          - axes
          attributes:
          - attributes
          - attributes
        code: code
        _links:
          self:
            href: href
        labels:
          localeCode: localeCode
      type: object
    Family_Variants_allOf__embedded:
      example:
        items:
        - variant_attribute_sets:
          - level: 6
            axes:
            - axes
            - axes
            attributes:
            - attributes
            - attributes
          - level: 6
            axes:
            - axes
            - axes
            attributes:
            - attributes
            - attributes
          code: code
          _links:
            self:
              href: href
          labels:
            localeCode: localeCode
        - variant_attribute_sets:
          - level: 6
            axes:
            - axes
            - axes
            attributes:
            - attributes
            - attributes
          - level: 6
            axes:
            - axes
            - axes
            attributes:
            - attributes
            - attributes
          code: code
          _links:
            self:
              href: href
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner'
          type: array
      type: object
    Family_Variants:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Family_Variants_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - variant_attribute_sets:
            - level: 6
              axes:
              - axes
              - axes
              attributes:
              - attributes
              - attributes
            - level: 6
              axes:
              - axes
              - axes
              attributes:
              - attributes
              - attributes
            code: code
            _links:
              self:
                href: href
            labels:
              localeCode: localeCode
          - variant_attribute_sets:
            - level: 6
              axes:
              - axes
              - axes
              attributes:
              - attributes
              - attributes
            - level: 6
              axes:
              - axes
              - axes
              attributes:
              - attributes
              - attributes
            code: code
            _links:
              self:
                href: href
            labels:
              localeCode: localeCode
        current_page: 0
      title: Family Variants
    post_families__family_code__variants_request:
      example:
        code: shoesVariant
        labels:
          en_US: Shoes variant
          fr_FR: Variante de chaussures
        variant_attribute_sets:
        - attributes:
          - color
          - material
          axes:
          - color
          level: 1
        - attributes:
          - sku
          - size
          axes:
          - size
          level: 2
      properties:
        code:
          description: Family variant code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_labels'
        variant_attribute_sets:
          description: Attributes distribution according to the enrichment level
          items:
            $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner'
          type: array
      required:
      - code
      - variant_attribute_sets
      type: object
    patch_families__family_code__variants_request:
      example:
        code: shoesVariant
        labels:
          en_US: Shoes variant
          fr_FR: Variante de chaussures
        variant_attribute_sets:
        - attributes:
          - color
          - material
          axes:
          - color
          level: 1
        - attributes:
          - sku
          - size
          axes:
          - size
          level: 2
      properties:
        code:
          description: Family variant code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_labels'
        variant_attribute_sets:
          description: Attributes distribution according to the enrichment level
          items:
            $ref: '#/components/schemas/Family_Variants_allOf__embedded_items_inner_allOf_variant_attribute_sets_inner'
          type: array
      required:
      - code
      - variant_attribute_sets
      type: object
      x-examples:
        x-example-1: "{\"code\": \"shoes_by_size\", \"variant_attribute_sets\": [{\"\
          level\": 1, \"axes\": [\"size\"], \"attributes\": [\"color\"]}]}"
        x-example-2: "{\"code\": \"shoes_by_color\",\"labels\": {\"en_US\": \"Shoes\
          \ by color\"}}"
        x-example-3: "{\"code\": \"shoes_without_axes\", \"variant_attribute_sets\"\
          : [{\"level\": 1, \"axes\": [], \"attributes\": [\"color\"]}]}"
    Locales_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: en_US
          enable: true
        properties:
          code:
            description: Locale code
            type: string
            x-immutable: true
          enabled:
            default: false
            description: Whether the locale is enabled
            type: boolean
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        enabled: false
      type: object
    Locales_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
          enabled: false
        - code: code
          _links:
            self:
              href: href
          enabled: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/Locales_allOf__embedded_items_inner'
          type: array
      type: object
    Locales:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Locales_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
            enabled: false
          - code: code
            _links:
              self:
                href: href
            enabled: false
        current_page: 0
      title: Locales
    get_locales__code__200_response:
      example:
        code: en_US
        enable: true
      properties:
        code:
          description: Locale code
          type: string
          x-immutable: true
        enabled:
          default: false
          description: Whether the locale is enabled
          type: boolean
      required:
      - code
      type: object
    Measure_Families_allOf__embedded_items_inner_allOf_units_inner:
      example:
        symbol: symbol
        code: code
        convert: "{}"
      properties:
        code:
          description: Measure code
          type: string
          x-immutable: true
        convert:
          description: Mathematic operation to convert the unit into the standard
            unit
          properties: {}
          type: object
        symbol:
          description: Measure symbol
          type: string
          x-immutable: true
      type: object
    Measure_Families_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: Area
          standard: SQUARE_METER
          units:
          - code: SQUARE_MILLIMETER
            convert:
              mul: "0.001"
            symbol: mm²
          - code: SQUARE_CENTIMETER
            convert:
              mul: "0.001"
            symbol: cm²
        properties:
          code:
            description: Measure family code
            type: string
            x-immutable: true
          standard:
            description: Measure family standard
            type: string
            x-immutable: true
          units:
            description: Family units
            items:
              $ref: '#/components/schemas/Measure_Families_allOf__embedded_items_inner_allOf_units_inner'
            type: array
        required:
        - code
        type: object
      example:
        standard: standard
        code: code
        _links:
          self:
            href: href
        units:
        - symbol: symbol
          code: code
          convert: "{}"
        - symbol: symbol
          code: code
          convert: "{}"
      type: object
    Measure_Families_allOf__embedded:
      example:
        items:
        - standard: standard
          code: code
          _links:
            self:
              href: href
          units:
          - symbol: symbol
            code: code
            convert: "{}"
          - symbol: symbol
            code: code
            convert: "{}"
        - standard: standard
          code: code
          _links:
            self:
              href: href
          units:
          - symbol: symbol
            code: code
            convert: "{}"
          - symbol: symbol
            code: code
            convert: "{}"
      properties:
        items:
          items:
            $ref: '#/components/schemas/Measure_Families_allOf__embedded_items_inner'
          type: array
      type: object
    Measure_Families:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Measure_Families_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - standard: standard
            code: code
            _links:
              self:
                href: href
            units:
            - symbol: symbol
              code: code
              convert: "{}"
            - symbol: symbol
              code: code
              convert: "{}"
          - standard: standard
            code: code
            _links:
              self:
                href: href
            units:
            - symbol: symbol
              code: code
              convert: "{}"
            - symbol: symbol
              code: code
              convert: "{}"
        current_page: 0
      title: Measure Families
    measure_families_get_200_response:
      example:
        code: Area
        standard: SQUARE_METER
        units:
        - code: SQUARE_MILLIMETER
          convert:
            mul: "0.001"
          symbol: mm²
        - code: SQUARE_CENTIMETER
          convert:
            mul: "0.001"
          symbol: cm²
      properties:
        code:
          description: Measure family code
          type: string
          x-immutable: true
        standard:
          description: Measure family standard
          type: string
          x-immutable: true
        units:
          description: Family units
          items:
            $ref: '#/components/schemas/Measure_Families_allOf__embedded_items_inner_allOf_units_inner'
          type: array
      required:
      - code
      type: object
    measurement_families_get_list_200_response_labels:
      description: Measurement family labels for each locale
      properties:
        localeCode:
          description: Measurement family label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    measurement_families_get_list_200_response_units_unitCode_convert_from_standard_inner:
      properties:
        operator:
          description: Operator for a conversion operation to convert the unit in
            the standard unit
          enum:
          - mul
          - div
          - add
          - sub
          type: string
          x-validation-rules: The operator is one of the following values
        value:
          description: Value for a conversion operation to convert the unit in the
            standard unit
          type: string
      type: object
    measurement_families_get_list_200_response_units_unitCode_labels:
      description: Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
      properties:
        localeCode:
          description: Unit label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    measurement_families_get_list_200_response_units_unitCode:
      properties:
        code:
          description: Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
          type: string
          x-immutable: true
        convert_from_standard:
          description: Calculation to convert the unit from the standard unit. More
            details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
          items:
            $ref: '#/components/schemas/measurement_families_get_list_200_response_units_unitCode_convert_from_standard_inner'
          type: array
          x-validation-rules: '&bull; The conversion operations can''t be updated
            when a product attribute is linked to this measurement family &#10;&bull;
            At least one conversion operation per unit is required'
        labels:
          $ref: '#/components/schemas/measurement_families_get_list_200_response_units_unitCode_labels'
        symbol:
          description: Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
          type: string
      type: object
    measurement_families_get_list_200_response_units:
      description: Measurement units for this family with their conversion operations.
        More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
      properties:
        unitCode:
          $ref: '#/components/schemas/measurement_families_get_list_200_response_units_unitCode'
      type: object
      x-validation-rules: A unit can't be added when a product attribute is linked
        to this measurement family
    measurement_families_get_list_200_response:
      example:
        code: AREA
        labels:
          en_US: Area
          fr_FR: Surface
        standard_unit_code: SQUARE_METER
        units:
          SQUARE_CENTIMETER:
            code: SQUARE_CENTIMETER
            convert_from_standard:
            - operator: mul
              value: "0.0001"
            labels:
              en_US: Square centimeter
              fr_FR: Centimètre carré
            symbol: cm²
          SQUARE_METER:
            code: SQUARE_METER
            convert_from_standard:
            - operator: mul
              value: "1"
            labels:
              en_US: Square meter
              fr_FR: Mètre carré
            symbol: m²
          SQUARE_MILLIMETER:
            code: SQUARE_MILLIMETER
            convert_from_standard:
            - operator: mul
              value: "0.000001"
            labels:
              en_US: Square millimeter
              fr_FR: Millimètre carré
            symbol: mm²
      properties:
        code:
          description: Measurement family code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/measurement_families_get_list_200_response_labels'
        standard_unit_code:
          description: Unit code used as the standard unit for this measurement family
          type: string
          x-validation-rules: The unit code exists in the list of the property `units`
          x-immutable: true
        units:
          $ref: '#/components/schemas/measurement_families_get_list_200_response_units'
      required:
      - code
      - standard_unit_code
      - units
      type: object
    patch_measurement_families_200_response_inner_errors_inner:
      example:
        property: property
        message: message
      properties:
        message:
          type: string
        property:
          type: string
      type: object
    patch_measurement_families_200_response_inner:
      example:
        code: code
        status_code: 0
        message: message
        errors:
        - property: property
          message: message
        - property: property
          message: message
      properties:
        code:
          description: Resource code
          type: string
        errors:
          description: List of errors
          items:
            $ref: '#/components/schemas/patch_measurement_families_200_response_inner_errors_inner'
          type: array
        message:
          description: Message explaining the error
          type: string
        status_code:
          description: "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\"\
            >Client errors</a> to understand the meaning of each code"
          type: integer
      type: object
    MediaFiles_allOf__embedded_items_inner_allOf__links_download:
      example:
        href: href
      properties:
        href:
          description: URI to download the binaries of the media file
          type: string
      type: object
    MediaFiles_allOf__embedded_items_inner_allOf__links_self:
      example:
        href: href
      properties:
        href:
          description: URI to get the metadata of the media file
          type: string
      type: object
    MediaFiles_allOf__embedded_items_inner_allOf__links:
      example:
        download:
          href: href
        self:
          href: href
      properties:
        download:
          $ref: '#/components/schemas/MediaFiles_allOf__embedded_items_inner_allOf__links_download'
        self:
          $ref: '#/components/schemas/MediaFiles_allOf__embedded_items_inner_allOf__links_self'
      type: object
    MediaFiles_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/MediaFiles_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: 7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg
          extension: jpg
          mime_type: image/jpeg
          original_filename: 10806799-1356.jpg
          size: 16070
        properties:
          code:
            description: Media file code
            type: string
            x-immutable: true
          extension:
            description: Extension of the media file
            type: string
            x-read-only: true
          mime_type:
            description: Mime type of the media file
            type: string
            x-read-only: true
          original_filename:
            description: Original filename of the media file
            type: string
          size:
            description: Size of the media file
            type: integer
            x-read-only: true
        type: object
      example:
        extension: extension
        code: code
        original_filename: original_filename
        size: 6
        _links:
          download:
            href: href
          self:
            href: href
        mime_type: mime_type
      type: object
    MediaFiles_allOf__embedded:
      example:
        items:
        - extension: extension
          code: code
          original_filename: original_filename
          size: 6
          _links:
            download:
              href: href
            self:
              href: href
          mime_type: mime_type
        - extension: extension
          code: code
          original_filename: original_filename
          size: 6
          _links:
            download:
              href: href
            self:
              href: href
          mime_type: mime_type
      properties:
        items:
          items:
            $ref: '#/components/schemas/MediaFiles_allOf__embedded_items_inner'
          type: array
      type: object
    MediaFiles:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/MediaFiles_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - extension: extension
            code: code
            original_filename: original_filename
            size: 6
            _links:
              download:
                href: href
              self:
                href: href
            mime_type: mime_type
          - extension: extension
            code: code
            original_filename: original_filename
            size: 6
            _links:
              download:
                href: href
              self:
                href: href
            mime_type: mime_type
        current_page: 0
      title: MediaFiles
    post_media_files_request:
      properties:
        file:
          description: The binaries of the file
          format: binary
          type: string
        product:
          description: "The product to which the media file will be associated. It\
            \ is a JSON string that follows this format '{\"identifier\":\"product_identifier\"\
            , \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\"\
            :\"locale_code\"}'. You have to either use this field or the `product_model`\
            \ field, but not both at the same time."
          type: string
        product_model:
          description: "The product model to which the media file will be associated.\
            \ It is a JSON string that follows this format '{\"code\":\"product_model_code\"\
            , \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\"\
            :\"locale_code\"}'. You have to either use this field or the `product`\
            \ field, but not both at the same time."
          type: string
      required:
      - file
      type: object
    get_media_files__code__200_response_allOf__links:
      example:
        download:
          href: href
      properties:
        download:
          $ref: '#/components/schemas/MediaFiles_allOf__embedded_items_inner_allOf__links_download'
      type: object
      x-read-only: true
    get_media_files__code__200_response:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/get_media_files__code__200_response_allOf__links'
        type: object
      - example:
          code: 7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg
          extension: jpg
          mime_type: image/jpeg
          original_filename: 10806799-1356.jpg
          size: 16070
        properties:
          code:
            description: Media file code
            type: string
            x-immutable: true
          extension:
            description: Extension of the media file
            type: string
            x-read-only: true
          mime_type:
            description: Mime type of the media file
            type: string
            x-read-only: true
          original_filename:
            description: Original filename of the media file
            type: string
          size:
            description: Size of the media file
            type: integer
            x-read-only: true
        type: object
      example:
        extension: extension
        code: code
        original_filename: original_filename
        size: 0
        _links:
          download:
            href: href
        mime_type: mime_type
    Product_Models_allOf__embedded_items_inner_allOf_associations_associationTypeCode:
      example:
        product_models:
        - product_models
        - product_models
        groups:
        - groups
        - groups
        products:
        - products
        - products
      properties:
        groups:
          description: Array of groups codes with which the product is in relation
          items:
            type: string
          type: array
        product_models:
          description: Array of product model codes with which the product is in relation
            (only available since the v2.1)
          items:
            type: string
          type: array
          x-from-version: "2.1"
        products:
          description: Array of product identifiers with which the product is in relation
          items:
            type: string
          type: array
      type: object
    Product_Models_allOf__embedded_items_inner_allOf_associations:
      description: "Several associations related to groups, product and/or other product\
        \ models, grouped by association types"
      example:
        associationTypeCode:
          product_models:
          - product_models
          - product_models
          groups:
          - groups
          - groups
          products:
          - products
          - products
      properties:
        associationTypeCode:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_associations_associationTypeCode'
      type: object
      x-validation-rules: '&bull; The `associationTypeCode` is the code of an existing
        association type. &#10;&bull; Each string in the array of the property `groups`
        is the code of an existing group. &#10;&bull; Each string in the array of
        the property `products` is the identifier of an existing product. &#10;&bull;
        Each string in the array of the property `product_models` is the code of an
        existing product model.'
    Product_Models_allOf__embedded_items_inner_allOf_metadata:
      description: More information around the product model (only available since
        the v2.3 in the Enterprise Edition)
      example:
        workflow_status: read_only
      properties:
        workflow_status:
          description: Status of the product model regarding the user permissions
          enum:
          - read_only
          - draft_in_progress
          - proposal_waiting_for_approval
          - working_copy
          type: string
      type: object
      x-immutable: true
      x-read-only: true
      x-from-version: "2.3"
    Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner:
      example:
        code: code
        quantity: 6
      properties:
        code:
          type: string
        quantity:
          type: integer
      type: object
    Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_products_inner:
      example:
        identifier: identifier
        quantity: 1
      properties:
        identifier:
          type: string
        quantity:
          type: integer
      type: object
    Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode:
      example:
        product_models:
        - code: code
          quantity: 6
        - code: code
          quantity: 6
        products:
        - identifier: identifier
          quantity: 1
        - identifier: identifier
          quantity: 1
      properties:
        product_models:
          description: Array of objects containing product model codes and quantities
            with which the product model is in relation
          items:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner'
          type: array
        products:
          description: Array of objects containing product identifiers and quantities
            with which the product model is in relation
          items:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_products_inner'
          type: array
      type: object
    Product_Models_allOf__embedded_items_inner_allOf_quantified_associations:
      description: "Several quantified associations related to products and/or product\
        \ models, grouped by quantified association types (only available since the\
        \ 5.0)"
      example:
        quantifiedAssociationTypeCode:
          product_models:
          - code: code
            quantity: 6
          - code: code
            quantity: 6
          products:
          - identifier: identifier
            quantity: 1
          - identifier: identifier
            quantity: 1
      properties:
        quantifiedAssociationTypeCode:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode'
      type: object
      x-validation-rules: '&bull; The `quantifiedAssociationTypeCode` is the code
        of an existing association type which provides quantity information. &#10;&bull;
        Each object in the array of the property `products` contains the identifier
        of an existing product and the quantity of it. &#10;&bull; Each object in
        the array of the property `product_models` contains the code of an existing
        product model and the quantity of it.'
      x-from-version: "5.0"
    Product_Models_allOf__embedded_items_inner_allOf_values_attributeCode_inner:
      example:
        data: "{}"
        scope: scope
        locale: locale
      properties:
        data:
          description: <a href='api-reference.html#Productuuid'>Product</a> value
          properties: {}
          type: object
        locale:
          description: <a href='api-reference.html#Locale'>Locale</a> code of the
            product value
          type: string
        scope:
          description: <a href='api-reference.html#Channel'>Channel</a> code of the
            product value
          type: string
      type: object
    Product_Models_allOf__embedded_items_inner_allOf_values:
      description: "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product\
        \ values</a> section for more details"
      example:
        attributeCode:
        - data: "{}"
          scope: scope
          locale: locale
        - data: "{}"
          scope: scope
          locale: locale
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_values_attributeCode_inner'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Product values section
    Product_Models_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          associations:
            PACK:
              groups: []
              product_models: []
              products:
              - sunglass
          categories:
          - summer_collection
          code: model-biker-jacket-leather
          created: 2017-10-02T15:03:55+02:00
          family: clothing
          family_variant: clothing_material_size
          parent: model-biker-jacket
          quality_scores:
          - data: A
            locale: en_US
            scope: ecommerce
          - data: B
            locale: fr_FR
            scope: ecommerce
          - data: D
            locale: en_US
            scope: tablet
          - data: E
            locale: fr_FR
            scope: tablet
          quantified_associations:
            PRODUCT_SET:
              product_models:
              - code: model-biker-jacket-leather
                quantity: 2
              products:
              - identifier: top
                quantity: 2
              - identifier: cap
                quantity: 1
          updated: 2017-10-02T15:03:55+02:00
          values:
            collection:
            - data:
              - summer_2017
            color:
            - data: antique_white
            description:
            - data: Biker jacket
              locale: en_US
              scope: ecommerce
            material:
            - data: leather
            name:
            - data: Biker jacket
              locale: en_US
            variation_name:
            - data: Biker jacket leather
              locale: en_US
        properties:
          associations:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_associations'
          categories:
            description: Codes of the <a href='api-reference.html#Category'>categories</a>
              in which the product model is categorized
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing category
              code
          code:
            description: Product model code
            type: string
            x-immutable: true
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
          family:
            description: <a href='api-reference.html#Family'>Family</a> code  from
              which the product inherits its attributes and attributes requirements
              (since the 3.2)
            type: string
            x-validation-rules: It is equal to an existing family code
            x-immutable: true
            x-from-version: "3.2"
          family_variant:
            description: Family variant code from which the product model inherits
              its attributes and variant attributes
            type: string
            x-validation-rules: It is equal to an existing family variant code that
              belong to the family given in the `family` field
            x-immutable: true
          metadata:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_metadata'
          parent:
            default: "null"
            description: Code of the parent <a href='api-reference.html#Productmodel'>product
              model</a>. This parent can be modified since the 2.3.
            type: string
            x-validation-rules: '&bull; It is equal to an existing product model code&#10;&bull;
              This product model has the same family variant as the one given in the
              `family_variant field`'
            x-from-version: "2.3"
          quality_scores:
            $ref: '#/components/schemas/ProductModelList_allOf_quality_scores'
          quantified_associations:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations'
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          values:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_values'
        required:
        - code
        - family_variant
        type: object
      example:
        associations:
          associationTypeCode:
            product_models:
            - product_models
            - product_models
            groups:
            - groups
            - groups
            products:
            - products
            - products
        parent: "null"
        metadata:
          workflow_status: read_only
        code: code
        _links:
          self:
            href: href
        created: created
        values:
          attributeCode:
          - data: "{}"
            scope: scope
            locale: locale
          - data: "{}"
            scope: scope
            locale: locale
        quality_scores: {}
        categories:
        - categories
        - categories
        family: family
        quantified_associations:
          quantifiedAssociationTypeCode:
            product_models:
            - code: code
              quantity: 6
            - code: code
              quantity: 6
            products:
            - identifier: identifier
              quantity: 1
            - identifier: identifier
              quantity: 1
        updated: updated
        family_variant: family_variant
      type: object
    Product_Models_allOf__embedded:
      example:
        items:
        - associations:
            associationTypeCode:
              product_models:
              - product_models
              - product_models
              groups:
              - groups
              - groups
              products:
              - products
              - products
          parent: "null"
          metadata:
            workflow_status: read_only
          code: code
          _links:
            self:
              href: href
          created: created
          values:
            attributeCode:
            - data: "{}"
              scope: scope
              locale: locale
            - data: "{}"
              scope: scope
              locale: locale
          quality_scores: {}
          categories:
          - categories
          - categories
          family: family
          quantified_associations:
            quantifiedAssociationTypeCode:
              product_models:
              - code: code
                quantity: 6
              - code: code
                quantity: 6
              products:
              - identifier: identifier
                quantity: 1
              - identifier: identifier
                quantity: 1
          updated: updated
          family_variant: family_variant
        - associations:
            associationTypeCode:
              product_models:
              - product_models
              - product_models
              groups:
              - groups
              - groups
              products:
              - products
              - products
          parent: "null"
          metadata:
            workflow_status: read_only
          code: code
          _links:
            self:
              href: href
          created: created
          values:
            attributeCode:
            - data: "{}"
              scope: scope
              locale: locale
            - data: "{}"
              scope: scope
              locale: locale
          quality_scores: {}
          categories:
          - categories
          - categories
          family: family
          quantified_associations:
            quantifiedAssociationTypeCode:
              product_models:
              - code: code
                quantity: 6
              - code: code
                quantity: 6
              products:
              - identifier: identifier
                quantity: 1
              - identifier: identifier
                quantity: 1
          updated: updated
          family_variant: family_variant
      properties:
        items:
          items:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner'
          type: array
      type: object
    Product_Models:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Product_Models_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - associations:
              associationTypeCode:
                product_models:
                - product_models
                - product_models
                groups:
                - groups
                - groups
                products:
                - products
                - products
            parent: "null"
            metadata:
              workflow_status: read_only
            code: code
            _links:
              self:
                href: href
            created: created
            values:
              attributeCode:
              - data: "{}"
                scope: scope
                locale: locale
              - data: "{}"
                scope: scope
                locale: locale
            quality_scores: {}
            categories:
            - categories
            - categories
            family: family
            quantified_associations:
              quantifiedAssociationTypeCode:
                product_models:
                - code: code
                  quantity: 6
                - code: code
                  quantity: 6
                products:
                - identifier: identifier
                  quantity: 1
                - identifier: identifier
                  quantity: 1
            updated: updated
            family_variant: family_variant
          - associations:
              associationTypeCode:
                product_models:
                - product_models
                - product_models
                groups:
                - groups
                - groups
                products:
                - products
                - products
            parent: "null"
            metadata:
              workflow_status: read_only
            code: code
            _links:
              self:
                href: href
            created: created
            values:
              attributeCode:
              - data: "{}"
                scope: scope
                locale: locale
              - data: "{}"
                scope: scope
                locale: locale
            quality_scores: {}
            categories:
            - categories
            - categories
            family: family
            quantified_associations:
              quantifiedAssociationTypeCode:
                product_models:
                - code: code
                  quantity: 6
                - code: code
                  quantity: 6
                products:
                - identifier: identifier
                  quantity: 1
                - identifier: identifier
                  quantity: 1
            updated: updated
            family_variant: family_variant
        current_page: 0
      title: Product Models
    post_product_models_request:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - sunglass
        categories:
        - summer_collection
        code: model-biker-jacket-leather
        created: 2017-10-02T15:03:55+02:00
        family: clothing
        family_variant: clothing_material_size
        parent: model-biker-jacket
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - code: model-biker-jacket-leather
              quantity: 2
            products:
            - identifier: top
              quantity: 2
            - identifier: cap
              quantity: 1
        updated: 2017-10-02T15:03:55+02:00
        values:
          collection:
          - data:
            - summer_2017
          color:
          - data: antique_white
          description:
          - data: Biker jacket
            locale: en_US
            scope: ecommerce
          material:
          - data: leather
          name:
          - data: Biker jacket
            locale: en_US
          variation_name:
          - data: Biker jacket leather
            locale: en_US
      properties:
        associations:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product model is categorized
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        code:
          description: Product model code
          type: string
          x-immutable: true
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        family:
          description: <a href='api-reference.html#Family'>Family</a> code  from which
            the product inherits its attributes and attributes requirements (since
            the 3.2)
          type: string
          x-validation-rules: It is equal to an existing family code
          x-immutable: true
          x-from-version: "3.2"
        family_variant:
          description: Family variant code from which the product model inherits its
            attributes and variant attributes
          type: string
          x-validation-rules: It is equal to an existing family variant code that
            belong to the family given in the `family` field
          x-immutable: true
        metadata:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a>. This parent can be modified since the 2.3.
          type: string
          x-validation-rules: '&bull; It is equal to an existing product model code&#10;&bull;
            This product model has the same family variant as the one given in the
            `family_variant field`'
          x-from-version: "2.3"
        quality_scores:
          description: Product model quality scores for each channel/locale combination
            (<strong>only available since the 7.0 version</strong> and when the "with_quality_scores"
            query parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        quantified_associations:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        values:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      - family_variant
      type: object
    patch_product_models_request:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - sunglass
        categories:
        - summer_collection
        code: model-biker-jacket-leather
        created: 2017-10-02T15:03:55+02:00
        family: clothing
        family_variant: clothing_material_size
        parent: model-biker-jacket
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - code: model-biker-jacket-leather
              quantity: 2
            products:
            - identifier: top
              quantity: 2
            - identifier: cap
              quantity: 1
        updated: 2017-10-02T15:03:55+02:00
        values:
          collection:
          - data:
            - summer_2017
          color:
          - data: antique_white
          description:
          - data: Biker jacket
            locale: en_US
            scope: ecommerce
          material:
          - data: leather
          name:
          - data: Biker jacket
            locale: en_US
          variation_name:
          - data: Biker jacket leather
            locale: en_US
      properties:
        associations:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product model is categorized
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        code:
          description: Product model code
          type: string
          x-immutable: true
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        family:
          description: <a href='api-reference.html#Family'>Family</a> code  from which
            the product inherits its attributes and attributes requirements (since
            the 3.2)
          type: string
          x-validation-rules: It is equal to an existing family code
          x-immutable: true
          x-from-version: "3.2"
        family_variant:
          description: Family variant code from which the product model inherits its
            attributes and variant attributes
          type: string
          x-validation-rules: It is equal to an existing family variant code that
            belong to the family given in the `family` field
          x-immutable: true
        metadata:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a>. This parent can be modified since the 2.3.
          type: string
          x-validation-rules: '&bull; It is equal to an existing product model code&#10;&bull;
            This product model has the same family variant as the one given in the
            `family_variant field`'
          x-from-version: "2.3"
        quality_scores:
          description: Product model quality scores for each channel/locale combination
            (<strong>only available since the 7.0 version</strong> and when the "with_quality_scores"
            query parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        quantified_associations:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        values:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      - family_variant
      type: object
      x-examples:
        x-example-1: "{\"code\": \"sub_sweat_option_a\", \"parent\": \"sweat\", \"\
          values\": {\"a_simple_select\": [{\"locale\": null, \"scope\": null, \"\
          data\": \"optionA\"}]}}"
        x-example-2: "{\"code\": \"sub_sweat_option_b\", \"parent\": \"sweat\", \"\
          values\": {\"a_simple_select\": [{\"locale\": null, \"scope\": null, \"\
          data\": \"optionA\"}]}}"
        x-example-3: "{\"code\":\"tshirt\", \"parent\": \"root_tshirt\", \"family_variant\"\
          :\"clothesvariant\",\"values\":{\"description\":[{\"scope\":\"ecommerce\"\
          ,\"locale\":\"en_US\",\"data\":\"My amazing tshirt\"}]}}"
    Products_1_allOf__embedded_items_inner_allOf_associations:
      description: "Several associations related to groups, product models and/or\
        \ other products, grouped by association types"
      example:
        associationTypeCode:
          product_models:
          - product_models
          - product_models
          groups:
          - groups
          - groups
          products:
          - products
          - products
      properties:
        associationTypeCode:
          $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_associations_associationTypeCode'
      type: object
      x-validation-rules: '&bull; The `associationTypeCode` is the code of an existing
        association type. &#10;&bull; Each string in the array of the property `groups`
        is the code of an existing group. &#10;&bull; Each string in the array of
        the property `products` is the identifier of an existing product. &#10;&bull;
        Each string in the array of the property `product_models` is the code of an
        existing product model.'
    Products_1_allOf__embedded_items_inner_allOf_completenesses_inner:
      example:
        data: 6
        scope: scope
        locale: locale
      properties:
        data:
          type: integer
        locale:
          type: string
        scope:
          type: string
      type: object
    Products_1_allOf__embedded_items_inner_allOf_metadata:
      description: More information around the product (only available since the v2.0
        in the Enterprise Edition)
      example:
        workflow_status: read_only
      properties:
        workflow_status:
          description: Status of the product regarding the user permissions
          enum:
          - read_only
          - draft_in_progress
          - proposal_waiting_for_approval
          - working_copy
          type: string
      type: object
      x-immutable: true
      x-read-only: true
      x-from-version: "2.0"
    Products_1_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode:
      example:
        product_models:
        - code: code
          quantity: 6
        - code: code
          quantity: 6
        products:
        - identifier: identifier
          quantity: 1
        - identifier: identifier
          quantity: 1
      properties:
        product_models:
          description: Array of objects containing product model codes and quantities
            with which the product is in relation
          items:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner'
          type: array
        products:
          description: Array of objects containing product identifiers and quantities
            with which the product is in relation
          items:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_products_inner'
          type: array
      type: object
    Products_1_allOf__embedded_items_inner_allOf_quantified_associations:
      description: "Several quantified associations related to products and/or product\
        \ models, grouped by quantified association types (only available since the\
        \ 5.0)"
      example:
        quantifiedAssociationTypeCode:
          product_models:
          - code: code
            quantity: 6
          - code: code
            quantity: 6
          products:
          - identifier: identifier
            quantity: 1
          - identifier: identifier
            quantity: 1
      properties:
        quantifiedAssociationTypeCode:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode'
      type: object
      x-validation-rules: '&bull; The `quantifiedAssociationTypeCode` is the code
        of an existing association type which provides quantity information. &#10;&bull;
        Each object in the array of the property `products` contains the identifier
        of an existing product and the quantity of it.'
      x-from-version: "5.0"
    Products_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner_linked_data:
      description: Object containing labels of attribute options (only available since
        the 5.0 and when query parameter "with_attribute_options" is set to "true").
        See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data`
        format</a> section for more details.
      example:
        code: code
        attribute: attribute
        labels: "{}"
      properties:
        attribute:
          type: string
        code:
          type: string
        labels:
          properties: {}
          type: object
      type: object
      x-read-only: true
      x-from-version: "5.0"
    Products_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner:
      example:
        linked_data:
          code: code
          attribute: attribute
          labels: "{}"
        data: "{}"
        scope: scope
        locale: locale
      properties:
        data:
          description: Product value. See <a href='/concepts/products.html#the-data-format'>the
            `data` format</a> section for more details.
          properties: {}
          type: object
        linked_data:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner_linked_data'
        locale:
          description: <a href='api-reference.html#Locale'>Locale</a> code of the
            product value
          type: string
        scope:
          description: <a href='api-reference.html#Channel'>Channel</a> code of the
            product value
          type: string
      type: object
    Products_1_allOf__embedded_items_inner_allOf_values:
      description: "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product\
        \ values</a> section for more details"
      example:
        attributeCode:
        - linked_data:
            code: code
            attribute: attribute
            labels: "{}"
          data: "{}"
          scope: scope
          locale: locale
        - linked_data:
            code: code
            attribute: attribute
            labels: "{}"
          data: "{}"
          scope: scope
          locale: locale
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Product values section
    Products_1_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          associations:
            PACK:
              groups: []
              product_models: []
              products:
              - sunglass
          categories:
          - summer_collection
          completenesses:
          - data: 10
            locale: en_US
            scope: ecommerce
          - data: 20
            locale: fr_FR
            scope: ecommerce
          - data: 30
            locale: en_US
            scope: tablet
          - data: 40
            locale: fr_FR
            scope: tablet
          created: 2016-06-23T18:24:44+02:00
          enabled: true
          family: tshirt
          groups: []
          identifier: top
          quality_scores:
          - data: A
            locale: en_US
            scope: ecommerce
          - data: B
            locale: fr_FR
            scope: ecommerce
          - data: D
            locale: en_US
            scope: tablet
          - data: E
            locale: fr_FR
            scope: tablet
          quantified_associations:
            PRODUCT_SET:
              product_models:
              - identifier: model-biker-jacket-leather
                quantity: 2
              products:
              - identifier: cap
                quantity: 2
              - identifier: shoes
                quantity: 1
          updated: 2016-06-25T17:56:12+02:00
          values:
            collection:
            - data:
              - winter_2016
              linked_data:
                winter_2016:
                  attribute: collection
                  code: winter_2016
                  labels:
                    en_US: Winter 2016
                    fr_FR: Hiver 2016
            color:
            - data: black
              linked_data:
                attribute: color
                code: black
                labels:
                  en_US: Black
                  fr_FR: Noir
            description:
            - data: Summer top
              locale: en_US
              scope: ecommerce
            - data: Top
              locale: en_US
              scope: tablet
            - data: Débardeur pour l'été
              locale: fr_FR
              scope: ecommerce
            - data: Débardeur
              locale: fr_FR
              scope: tablet
            name:
            - data: Top
              locale: en_US
            - data: Débardeur
              locale: fr_FR
            price:
            - data:
              - amount: "15.5"
                currency: EUR
              - amount: "15"
                currency: USD
            size:
            - data: m
              linked_data:
                attribute: size
                code: m
                labels:
                  en_US: M
                  fr_FR: M
        properties:
          associations:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_associations'
          categories:
            description: Codes of the <a href='api-reference.html#Category'>categories</a>
              in which the product is classified
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing category
              code
          completenesses:
            description: "Product completenesses for each channel/locale combination\
              \ (only available since the 7.0 version, and when the \"with_completenesses\"\
              \ query parameter is set to \"true\")"
            items:
              $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
            type: array
            x-immutable: true
            x-read-only: true
            x-from-version: "7.0"
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
          enabled:
            default: true
            description: Whether the product is enabled
            type: boolean
          family:
            default: null only in the case of a non variant product
            description: <a href='api-reference.html#Family'>Family</a> code from
              which the product inherits its attributes and attributes requirements.
            type: string
            x-validation-rules: "It is equal to an existing family code. In the case\
              \ of variant product, the given family should be the same as the product\
              \ model family."
          groups:
            description: Codes of the groups to which the product belong
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing group
              code
          identifier:
            description: "Product identifier, i.e. the value of the only `pim_catalog_identifier`\
              \ attribute"
            type: string
          metadata:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
          parent:
            default: "null"
            description: Code of the parent <a href='api-reference.html#Productmodel'>product
              model</a> when the product is a variant (only available since the 2.0).
              This parent can be modified since the 2.3.
            type: string
            x-validation-rules: It is equal to an existing product model code only
              if the product is variant otherwise it's equal to null
            x-from-version: "2.0"
          quality_scores:
            $ref: '#/components/schemas/ProductList_allOf_quality_scores'
          quantified_associations:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_quantified_associations'
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          uuid:
            description: Product UUID
            type: string
            x-from-version: "7.0"
          values:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values'
        required:
        - identifier
        type: object
      example:
        associations:
          associationTypeCode:
            product_models:
            - product_models
            - product_models
            groups:
            - groups
            - groups
            products:
            - products
            - products
        identifier: identifier
        parent: "null"
        metadata:
          workflow_status: read_only
        _links:
          self:
            href: href
        created: created
        completenesses:
        - data: 6
          scope: scope
          locale: locale
        - data: 6
          scope: scope
          locale: locale
        values:
          attributeCode:
          - linked_data:
              code: code
              attribute: attribute
              labels: "{}"
            data: "{}"
            scope: scope
            locale: locale
          - linked_data:
              code: code
              attribute: attribute
              labels: "{}"
            data: "{}"
            scope: scope
            locale: locale
        groups:
        - groups
        - groups
        uuid: uuid
        enabled: true
        quality_scores: {}
        categories:
        - categories
        - categories
        family: null only in the case of a non variant product
        quantified_associations:
          quantifiedAssociationTypeCode:
            product_models:
            - code: code
              quantity: 6
            - code: code
              quantity: 6
            products:
            - identifier: identifier
              quantity: 1
            - identifier: identifier
              quantity: 1
        updated: updated
      type: object
    Products_1_allOf__embedded:
      example:
        items:
        - associations:
            associationTypeCode:
              product_models:
              - product_models
              - product_models
              groups:
              - groups
              - groups
              products:
              - products
              - products
          identifier: identifier
          parent: "null"
          metadata:
            workflow_status: read_only
          _links:
            self:
              href: href
          created: created
          completenesses:
          - data: 6
            scope: scope
            locale: locale
          - data: 6
            scope: scope
            locale: locale
          values:
            attributeCode:
            - linked_data:
                code: code
                attribute: attribute
                labels: "{}"
              data: "{}"
              scope: scope
              locale: locale
            - linked_data:
                code: code
                attribute: attribute
                labels: "{}"
              data: "{}"
              scope: scope
              locale: locale
          groups:
          - groups
          - groups
          uuid: uuid
          enabled: true
          quality_scores: {}
          categories:
          - categories
          - categories
          family: null only in the case of a non variant product
          quantified_associations:
            quantifiedAssociationTypeCode:
              product_models:
              - code: code
                quantity: 6
              - code: code
                quantity: 6
              products:
              - identifier: identifier
                quantity: 1
              - identifier: identifier
                quantity: 1
          updated: updated
        - associations:
            associationTypeCode:
              product_models:
              - product_models
              - product_models
              groups:
              - groups
              - groups
              products:
              - products
              - products
          identifier: identifier
          parent: "null"
          metadata:
            workflow_status: read_only
          _links:
            self:
              href: href
          created: created
          completenesses:
          - data: 6
            scope: scope
            locale: locale
          - data: 6
            scope: scope
            locale: locale
          values:
            attributeCode:
            - linked_data:
                code: code
                attribute: attribute
                labels: "{}"
              data: "{}"
              scope: scope
              locale: locale
            - linked_data:
                code: code
                attribute: attribute
                labels: "{}"
              data: "{}"
              scope: scope
              locale: locale
          groups:
          - groups
          - groups
          uuid: uuid
          enabled: true
          quality_scores: {}
          categories:
          - categories
          - categories
          family: null only in the case of a non variant product
          quantified_associations:
            quantifiedAssociationTypeCode:
              product_models:
              - code: code
                quantity: 6
              - code: code
                quantity: 6
              products:
              - identifier: identifier
                quantity: 1
              - identifier: identifier
                quantity: 1
          updated: updated
      properties:
        items:
          items:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner'
          type: array
      type: object
    Products_1:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Products_1_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - associations:
              associationTypeCode:
                product_models:
                - product_models
                - product_models
                groups:
                - groups
                - groups
                products:
                - products
                - products
            identifier: identifier
            parent: "null"
            metadata:
              workflow_status: read_only
            _links:
              self:
                href: href
            created: created
            completenesses:
            - data: 6
              scope: scope
              locale: locale
            - data: 6
              scope: scope
              locale: locale
            values:
              attributeCode:
              - linked_data:
                  code: code
                  attribute: attribute
                  labels: "{}"
                data: "{}"
                scope: scope
                locale: locale
              - linked_data:
                  code: code
                  attribute: attribute
                  labels: "{}"
                data: "{}"
                scope: scope
                locale: locale
            groups:
            - groups
            - groups
            uuid: uuid
            enabled: true
            quality_scores: {}
            categories:
            - categories
            - categories
            family: null only in the case of a non variant product
            quantified_associations:
              quantifiedAssociationTypeCode:
                product_models:
                - code: code
                  quantity: 6
                - code: code
                  quantity: 6
                products:
                - identifier: identifier
                  quantity: 1
                - identifier: identifier
                  quantity: 1
            updated: updated
          - associations:
              associationTypeCode:
                product_models:
                - product_models
                - product_models
                groups:
                - groups
                - groups
                products:
                - products
                - products
            identifier: identifier
            parent: "null"
            metadata:
              workflow_status: read_only
            _links:
              self:
                href: href
            created: created
            completenesses:
            - data: 6
              scope: scope
              locale: locale
            - data: 6
              scope: scope
              locale: locale
            values:
              attributeCode:
              - linked_data:
                  code: code
                  attribute: attribute
                  labels: "{}"
                data: "{}"
                scope: scope
                locale: locale
              - linked_data:
                  code: code
                  attribute: attribute
                  labels: "{}"
                data: "{}"
                scope: scope
                locale: locale
            groups:
            - groups
            - groups
            uuid: uuid
            enabled: true
            quality_scores: {}
            categories:
            - categories
            - categories
            family: null only in the case of a non variant product
            quantified_associations:
              quantifiedAssociationTypeCode:
                product_models:
                - code: code
                  quantity: 6
                - code: code
                  quantity: 6
                products:
                - identifier: identifier
                  quantity: 1
                - identifier: identifier
                  quantity: 1
            updated: updated
        current_page: 0
      title: Products
    post_products_request:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - sunglass
        categories:
        - summer_collection
        completenesses:
        - data: 10
          locale: en_US
          scope: ecommerce
        - data: 20
          locale: fr_FR
          scope: ecommerce
        - data: 30
          locale: en_US
          scope: tablet
        - data: 40
          locale: fr_FR
          scope: tablet
        created: 2016-06-23T18:24:44+02:00
        enabled: true
        family: tshirt
        groups: []
        identifier: top
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - identifier: model-biker-jacket-leather
              quantity: 2
            products:
            - identifier: cap
              quantity: 2
            - identifier: shoes
              quantity: 1
        updated: 2016-06-25T17:56:12+02:00
        values:
          collection:
          - data:
            - winter_2016
            linked_data:
              winter_2016:
                attribute: collection
                code: winter_2016
                labels:
                  en_US: Winter 2016
                  fr_FR: Hiver 2016
          color:
          - data: black
            linked_data:
              attribute: color
              code: black
              labels:
                en_US: Black
                fr_FR: Noir
          description:
          - data: Summer top
            locale: en_US
            scope: ecommerce
          - data: Top
            locale: en_US
            scope: tablet
          - data: Débardeur pour l'été
            locale: fr_FR
            scope: ecommerce
          - data: Débardeur
            locale: fr_FR
            scope: tablet
          name:
          - data: Top
            locale: en_US
          - data: Débardeur
            locale: fr_FR
          price:
          - data:
            - amount: "15.5"
              currency: EUR
            - amount: "15"
              currency: USD
          size:
          - data: m
            linked_data:
              attribute: size
              code: m
              labels:
                en_US: M
                fr_FR: M
      properties:
        associations:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        completenesses:
          description: "Product completenesses for each channel/locale combination\
            \ (only available since the 7.0 version, and when the \"with_completenesses\"\
            \ query parameter is set to \"true\")"
          items:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
          type: array
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        enabled:
          default: true
          description: Whether the product is enabled
          type: boolean
        family:
          default: null only in the case of a non variant product
          description: <a href='api-reference.html#Family'>Family</a> code from which
            the product inherits its attributes and attributes requirements.
          type: string
          x-validation-rules: "It is equal to an existing family code. In the case\
            \ of variant product, the given family should be the same as the product\
            \ model family."
        groups:
          description: Codes of the groups to which the product belong
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing group
            code
        identifier:
          description: "Product identifier, i.e. the value of the only `pim_catalog_identifier`\
            \ attribute"
          type: string
        metadata:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a> when the product is a variant (only available since the 2.0).
            This parent can be modified since the 2.3.
          type: string
          x-validation-rules: It is equal to an existing product model code only if
            the product is variant otherwise it's equal to null
          x-from-version: "2.0"
        quality_scores:
          description: Product quality scores for each channel/locale combination
            (only available since the 5.0 and when the "with_quality_scores" query
            parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        quantified_associations:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        uuid:
          description: Product UUID
          type: string
          x-from-version: "7.0"
        values:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values'
      required:
      - identifier
      type: object
    patch_products_request:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - sunglass
        categories:
        - summer_collection
        completenesses:
        - data: 10
          locale: en_US
          scope: ecommerce
        - data: 20
          locale: fr_FR
          scope: ecommerce
        - data: 30
          locale: en_US
          scope: tablet
        - data: 40
          locale: fr_FR
          scope: tablet
        created: 2016-06-23T18:24:44+02:00
        enabled: true
        family: tshirt
        groups: []
        identifier: top
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - identifier: model-biker-jacket-leather
              quantity: 2
            products:
            - identifier: cap
              quantity: 2
            - identifier: shoes
              quantity: 1
        updated: 2016-06-25T17:56:12+02:00
        values:
          collection:
          - data:
            - winter_2016
            linked_data:
              winter_2016:
                attribute: collection
                code: winter_2016
                labels:
                  en_US: Winter 2016
                  fr_FR: Hiver 2016
          color:
          - data: black
            linked_data:
              attribute: color
              code: black
              labels:
                en_US: Black
                fr_FR: Noir
          description:
          - data: Summer top
            locale: en_US
            scope: ecommerce
          - data: Top
            locale: en_US
            scope: tablet
          - data: Débardeur pour l'été
            locale: fr_FR
            scope: ecommerce
          - data: Débardeur
            locale: fr_FR
            scope: tablet
          name:
          - data: Top
            locale: en_US
          - data: Débardeur
            locale: fr_FR
          price:
          - data:
            - amount: "15.5"
              currency: EUR
            - amount: "15"
              currency: USD
          size:
          - data: m
            linked_data:
              attribute: size
              code: m
              labels:
                en_US: M
                fr_FR: M
      properties:
        associations:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        completenesses:
          description: "Product completenesses for each channel/locale combination\
            \ (only available since the 7.0 version, and when the \"with_completenesses\"\
            \ query parameter is set to \"true\")"
          items:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
          type: array
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        enabled:
          default: true
          description: Whether the product is enabled
          type: boolean
        family:
          default: null only in the case of a non variant product
          description: <a href='api-reference.html#Family'>Family</a> code from which
            the product inherits its attributes and attributes requirements.
          type: string
          x-validation-rules: "It is equal to an existing family code. In the case\
            \ of variant product, the given family should be the same as the product\
            \ model family."
        groups:
          description: Codes of the groups to which the product belong
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing group
            code
        identifier:
          description: "Product identifier, i.e. the value of the only `pim_catalog_identifier`\
            \ attribute"
          type: string
        metadata:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a> when the product is a variant (only available since the 2.0).
            This parent can be modified since the 2.3.
          type: string
          x-validation-rules: It is equal to an existing product model code only if
            the product is variant otherwise it's equal to null
          x-from-version: "2.0"
        quality_scores:
          description: Product quality scores for each channel/locale combination
            (only available since the 5.0 and when the "with_quality_scores" query
            parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        quantified_associations:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        uuid:
          description: Product UUID
          type: string
          x-from-version: "7.0"
        values:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values'
      required:
      - identifier
      type: object
      x-examples:
        x-example-1: "{\"identifier\":\"cap\",\"values\":{\"description\":[{\"scope\"\
          :\"ecommerce\",\"locale\":\"en_US\",\"data\":\"My amazing cap\"}]}}"
        x-example-2: "{\"identifier\":\"mug\",\"group\":[\"promotion\"]}"
        x-example-3: "{\"identifier\":\"tshirt\",\"family\":\"clothes\"}"
    Products_2_allOf__embedded_items_inner_allOf_associations_associationTypeCode:
      example:
        product_models:
        - product_models
        - product_models
        groups:
        - groups
        - groups
        products:
        - products
        - products
      properties:
        groups:
          description: Array of groups codes with which the product is in relation
          items:
            type: string
          type: array
        product_models:
          description: Array of product model codes with which the product is in relation
            (only available since the v2.1)
          items:
            type: string
          type: array
          x-from-version: "2.1"
        products:
          description: Array of product uuids with which the product is in relation
          items:
            type: string
          type: array
      type: object
    Products_2_allOf__embedded_items_inner_allOf_associations:
      description: "Several associations related to groups, product models and/or\
        \ other products, grouped by association types"
      example:
        associationTypeCode:
          product_models:
          - product_models
          - product_models
          groups:
          - groups
          - groups
          products:
          - products
          - products
      properties:
        associationTypeCode:
          $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_associations_associationTypeCode'
      type: object
      x-validation-rules: '&bull; The `associationTypeCode` is the code of an existing
        association type. &#10;&bull; Each string in the array of the property `groups`
        is the code of an existing group. &#10;&bull; Each string in the array of
        the property `products` is the uuid of an existing product. &#10;&bull; Each
        string in the array of the property `product_models` is the code of an existing
        product model.'
    Products_2_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_products_inner:
      example:
        quantity: 6
        uuid: uuid
      properties:
        quantity:
          type: integer
        uuid:
          type: string
      type: object
    Products_2_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode:
      example:
        product_models:
        - code: code
          quantity: 6
        - code: code
          quantity: 6
        products:
        - quantity: 6
          uuid: uuid
        - quantity: 6
          uuid: uuid
      properties:
        product_models:
          description: Array of objects containing product model codes and quantities
            with which the product is in relation
          items:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_product_models_inner'
          type: array
        products:
          description: Array of objects containing product uuids and quantities with
            which the product is in relation
          items:
            $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode_products_inner'
          type: array
      type: object
    Products_2_allOf__embedded_items_inner_allOf_quantified_associations:
      description: "Several quantified associations related to products and/or product\
        \ models, grouped by quantified association types (only available since the\
        \ 5.0)"
      example:
        quantifiedAssociationTypeCode:
          product_models:
          - code: code
            quantity: 6
          - code: code
            quantity: 6
          products:
          - quantity: 6
            uuid: uuid
          - quantity: 6
            uuid: uuid
      properties:
        quantifiedAssociationTypeCode:
          $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_quantified_associations_quantifiedAssociationTypeCode'
      type: object
      x-validation-rules: '&bull; The `quantifiedAssociationTypeCode` is the code
        of an existing association type which provides quantity information. &#10;&bull;
        Each object in the array of the property `products` contains the uuid of an
        existing product and the quantity of it.'
      x-from-version: "5.0"
    Products_2_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          associations:
            PACK:
              groups: []
              product_models: []
              products:
              - d055527c-0698-4967-8f16-8a5f23f4e5cf
          categories:
          - summer_collection
          completenesses:
          - data: 10
            locale: en_US
            scope: ecommerce
          - data: 20
            locale: fr_FR
            scope: ecommerce
          - data: 30
            locale: en_US
            scope: tablet
          - data: 40
            locale: fr_FR
            scope: tablet
          created: 2016-06-23T18:24:44+02:00
          enabled: true
          family: tshirt
          groups: []
          quality_scores:
          - data: A
            locale: en_US
            scope: ecommerce
          - data: B
            locale: fr_FR
            scope: ecommerce
          - data: D
            locale: en_US
            scope: tablet
          - data: E
            locale: fr_FR
            scope: tablet
          quantified_associations:
            PRODUCT_SET:
              product_models:
              - identifier: model-biker-jacket-leather
                quantity: 2
              products:
              - quantity: 2
                uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
              - quantity: 1
                uuid: a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc
          updated: 2016-06-25T17:56:12+02:00
          uuid: 25566245-55c3-42ce-86d9-8610ac459fa8
          values:
            collection:
            - data:
              - winter_2016
              linked_data:
                winter_2016:
                  attribute: collection
                  code: winter_2016
                  labels:
                    en_US: Winter 2016
                    fr_FR: Hiver 2016
            color:
            - data: black
              linked_data:
                attribute: color
                code: black
                labels:
                  en_US: Black
                  fr_FR: Noir
            description:
            - data: Summer top
              locale: en_US
              scope: ecommerce
            - data: Top
              locale: en_US
              scope: tablet
            - data: Débardeur pour l'été
              locale: fr_FR
              scope: ecommerce
            - data: Débardeur
              locale: fr_FR
              scope: tablet
            name:
            - data: Top
              locale: en_US
            - data: Débardeur
              locale: fr_FR
            price:
            - data:
              - amount: "15.5"
                currency: EUR
              - amount: "15"
                currency: USD
            size:
            - data: m
              linked_data:
                attribute: size
                code: m
                labels:
                  en_US: M
                  fr_FR: M
            sku:
            - data: top
        properties:
          associations:
            $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_associations'
          categories:
            description: Codes of the <a href='api-reference.html#Category'>categories</a>
              in which the product is classified
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing category
              code
          completenesses:
            description: "Product completenesses for each channel/locale combination\
              \ (only available since the 7.0 version, and when the \"with_completenesses\"\
              \ query parameter is set to \"true\")"
            items:
              $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
            type: array
            x-immutable: true
            x-read-only: true
            x-from-version: "7.0"
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
          enabled:
            default: true
            description: Whether the product is enabled
            type: boolean
          family:
            default: null only in the case of a non variant product
            description: <a href='api-reference.html#Family'>Family</a> code from
              which the product inherits its attributes and attributes requirements.
            type: string
            x-validation-rules: "It is equal to an existing family code. In the case\
              \ of variant product, the given family should be the same as the product\
              \ model family."
          groups:
            description: Codes of the groups to which the product belong
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing group
              code
          metadata:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
          parent:
            default: "null"
            description: Code of the parent <a href='api-reference.html#Productmodel'>product
              model</a> when the product is a variant (only available since the 2.0).
              This parent can be modified since the 2.3.
            type: string
            x-validation-rules: It is equal to an existing product model code only
              if the product is variant otherwise it's equal to null
            x-from-version: "2.0"
          quality_scores:
            $ref: '#/components/schemas/ProductList_allOf_quality_scores'
          quantified_associations:
            $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_quantified_associations'
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          uuid:
            description: Product uuid
            type: string
          values:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values'
        type: object
      example:
        associations:
          associationTypeCode:
            product_models:
            - product_models
            - product_models
            groups:
            - groups
            - groups
            products:
            - products
            - products
        parent: "null"
        metadata:
          workflow_status: read_only
        _links:
          self:
            href: href
        created: created
        completenesses:
        - data: 6
          scope: scope
          locale: locale
        - data: 6
          scope: scope
          locale: locale
        values:
          attributeCode:
          - linked_data:
              code: code
              attribute: attribute
              labels: "{}"
            data: "{}"
            scope: scope
            locale: locale
          - linked_data:
              code: code
              attribute: attribute
              labels: "{}"
            data: "{}"
            scope: scope
            locale: locale
        groups:
        - groups
        - groups
        uuid: uuid
        enabled: true
        quality_scores: {}
        categories:
        - categories
        - categories
        family: null only in the case of a non variant product
        quantified_associations:
          quantifiedAssociationTypeCode:
            product_models:
            - code: code
              quantity: 6
            - code: code
              quantity: 6
            products:
            - quantity: 6
              uuid: uuid
            - quantity: 6
              uuid: uuid
        updated: updated
      type: object
    Products_2_allOf__embedded:
      example:
        items:
        - associations:
            associationTypeCode:
              product_models:
              - product_models
              - product_models
              groups:
              - groups
              - groups
              products:
              - products
              - products
          parent: "null"
          metadata:
            workflow_status: read_only
          _links:
            self:
              href: href
          created: created
          completenesses:
          - data: 6
            scope: scope
            locale: locale
          - data: 6
            scope: scope
            locale: locale
          values:
            attributeCode:
            - linked_data:
                code: code
                attribute: attribute
                labels: "{}"
              data: "{}"
              scope: scope
              locale: locale
            - linked_data:
                code: code
                attribute: attribute
                labels: "{}"
              data: "{}"
              scope: scope
              locale: locale
          groups:
          - groups
          - groups
          uuid: uuid
          enabled: true
          quality_scores: {}
          categories:
          - categories
          - categories
          family: null only in the case of a non variant product
          quantified_associations:
            quantifiedAssociationTypeCode:
              product_models:
              - code: code
                quantity: 6
              - code: code
                quantity: 6
              products:
              - quantity: 6
                uuid: uuid
              - quantity: 6
                uuid: uuid
          updated: updated
        - associations:
            associationTypeCode:
              product_models:
              - product_models
              - product_models
              groups:
              - groups
              - groups
              products:
              - products
              - products
          parent: "null"
          metadata:
            workflow_status: read_only
          _links:
            self:
              href: href
          created: created
          completenesses:
          - data: 6
            scope: scope
            locale: locale
          - data: 6
            scope: scope
            locale: locale
          values:
            attributeCode:
            - linked_data:
                code: code
                attribute: attribute
                labels: "{}"
              data: "{}"
              scope: scope
              locale: locale
            - linked_data:
                code: code
                attribute: attribute
                labels: "{}"
              data: "{}"
              scope: scope
              locale: locale
          groups:
          - groups
          - groups
          uuid: uuid
          enabled: true
          quality_scores: {}
          categories:
          - categories
          - categories
          family: null only in the case of a non variant product
          quantified_associations:
            quantifiedAssociationTypeCode:
              product_models:
              - code: code
                quantity: 6
              - code: code
                quantity: 6
              products:
              - quantity: 6
                uuid: uuid
              - quantity: 6
                uuid: uuid
          updated: updated
      properties:
        items:
          items:
            $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner'
          type: array
      type: object
    Products_2:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Products_2_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - associations:
              associationTypeCode:
                product_models:
                - product_models
                - product_models
                groups:
                - groups
                - groups
                products:
                - products
                - products
            parent: "null"
            metadata:
              workflow_status: read_only
            _links:
              self:
                href: href
            created: created
            completenesses:
            - data: 6
              scope: scope
              locale: locale
            - data: 6
              scope: scope
              locale: locale
            values:
              attributeCode:
              - linked_data:
                  code: code
                  attribute: attribute
                  labels: "{}"
                data: "{}"
                scope: scope
                locale: locale
              - linked_data:
                  code: code
                  attribute: attribute
                  labels: "{}"
                data: "{}"
                scope: scope
                locale: locale
            groups:
            - groups
            - groups
            uuid: uuid
            enabled: true
            quality_scores: {}
            categories:
            - categories
            - categories
            family: null only in the case of a non variant product
            quantified_associations:
              quantifiedAssociationTypeCode:
                product_models:
                - code: code
                  quantity: 6
                - code: code
                  quantity: 6
                products:
                - quantity: 6
                  uuid: uuid
                - quantity: 6
                  uuid: uuid
            updated: updated
          - associations:
              associationTypeCode:
                product_models:
                - product_models
                - product_models
                groups:
                - groups
                - groups
                products:
                - products
                - products
            parent: "null"
            metadata:
              workflow_status: read_only
            _links:
              self:
                href: href
            created: created
            completenesses:
            - data: 6
              scope: scope
              locale: locale
            - data: 6
              scope: scope
              locale: locale
            values:
              attributeCode:
              - linked_data:
                  code: code
                  attribute: attribute
                  labels: "{}"
                data: "{}"
                scope: scope
                locale: locale
              - linked_data:
                  code: code
                  attribute: attribute
                  labels: "{}"
                data: "{}"
                scope: scope
                locale: locale
            groups:
            - groups
            - groups
            uuid: uuid
            enabled: true
            quality_scores: {}
            categories:
            - categories
            - categories
            family: null only in the case of a non variant product
            quantified_associations:
              quantifiedAssociationTypeCode:
                product_models:
                - code: code
                  quantity: 6
                - code: code
                  quantity: 6
                products:
                - quantity: 6
                  uuid: uuid
                - quantity: 6
                  uuid: uuid
            updated: updated
        current_page: 0
      title: Products
    post_products_uuid_request:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - d055527c-0698-4967-8f16-8a5f23f4e5cf
        categories:
        - summer_collection
        completenesses:
        - data: 10
          locale: en_US
          scope: ecommerce
        - data: 20
          locale: fr_FR
          scope: ecommerce
        - data: 30
          locale: en_US
          scope: tablet
        - data: 40
          locale: fr_FR
          scope: tablet
        created: 2016-06-23T18:24:44+02:00
        enabled: true
        family: tshirt
        groups: []
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - identifier: model-biker-jacket-leather
              quantity: 2
            products:
            - quantity: 2
              uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
            - quantity: 1
              uuid: a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc
        updated: 2016-06-25T17:56:12+02:00
        uuid: 25566245-55c3-42ce-86d9-8610ac459fa8
        values:
          collection:
          - data:
            - winter_2016
            linked_data:
              winter_2016:
                attribute: collection
                code: winter_2016
                labels:
                  en_US: Winter 2016
                  fr_FR: Hiver 2016
          color:
          - data: black
            linked_data:
              attribute: color
              code: black
              labels:
                en_US: Black
                fr_FR: Noir
          description:
          - data: Summer top
            locale: en_US
            scope: ecommerce
          - data: Top
            locale: en_US
            scope: tablet
          - data: Débardeur pour l'été
            locale: fr_FR
            scope: ecommerce
          - data: Débardeur
            locale: fr_FR
            scope: tablet
          name:
          - data: Top
            locale: en_US
          - data: Débardeur
            locale: fr_FR
          price:
          - data:
            - amount: "15.5"
              currency: EUR
            - amount: "15"
              currency: USD
          size:
          - data: m
            linked_data:
              attribute: size
              code: m
              labels:
                en_US: M
                fr_FR: M
          sku:
          - data: top
      properties:
        associations:
          $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        completenesses:
          description: "Product completenesses for each channel/locale combination\
            \ (only available since the 7.0 version, and when the \"with_completenesses\"\
            \ query parameter is set to \"true\")"
          items:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
          type: array
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        enabled:
          default: true
          description: Whether the product is enabled
          type: boolean
        family:
          default: null only in the case of a non variant product
          description: <a href='api-reference.html#Family'>Family</a> code from which
            the product inherits its attributes and attributes requirements.
          type: string
          x-validation-rules: "It is equal to an existing family code. In the case\
            \ of variant product, the given family should be the same as the product\
            \ model family."
        groups:
          description: Codes of the groups to which the product belong
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing group
            code
        metadata:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a> when the product is a variant (only available since the 2.0).
            This parent can be modified since the 2.3.
          type: string
          x-validation-rules: It is equal to an existing product model code only if
            the product is variant otherwise it's equal to null
          x-from-version: "2.0"
        quality_scores:
          description: Product quality scores for each channel/locale combination
            (only available since the 5.0 and when the "with_quality_scores" query
            parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        quantified_associations:
          $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        uuid:
          description: Product uuid
          type: string
        values:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values'
      type: object
    patch_products_uuid_request:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - d055527c-0698-4967-8f16-8a5f23f4e5cf
        categories:
        - summer_collection
        completenesses:
        - data: 10
          locale: en_US
          scope: ecommerce
        - data: 20
          locale: fr_FR
          scope: ecommerce
        - data: 30
          locale: en_US
          scope: tablet
        - data: 40
          locale: fr_FR
          scope: tablet
        created: 2016-06-23T18:24:44+02:00
        enabled: true
        family: tshirt
        groups: []
        quality_scores:
        - data: A
          locale: en_US
          scope: ecommerce
        - data: B
          locale: fr_FR
          scope: ecommerce
        - data: D
          locale: en_US
          scope: tablet
        - data: E
          locale: fr_FR
          scope: tablet
        quantified_associations:
          PRODUCT_SET:
            product_models:
            - identifier: model-biker-jacket-leather
              quantity: 2
            products:
            - quantity: 2
              uuid: fc24e6c3-933c-4a93-8a81-e5c703d134d5
            - quantity: 1
              uuid: a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc
        updated: 2016-06-25T17:56:12+02:00
        uuid: 25566245-55c3-42ce-86d9-8610ac459fa8
        values:
          collection:
          - data:
            - winter_2016
            linked_data:
              winter_2016:
                attribute: collection
                code: winter_2016
                labels:
                  en_US: Winter 2016
                  fr_FR: Hiver 2016
          color:
          - data: black
            linked_data:
              attribute: color
              code: black
              labels:
                en_US: Black
                fr_FR: Noir
          description:
          - data: Summer top
            locale: en_US
            scope: ecommerce
          - data: Top
            locale: en_US
            scope: tablet
          - data: Débardeur pour l'été
            locale: fr_FR
            scope: ecommerce
          - data: Débardeur
            locale: fr_FR
            scope: tablet
          name:
          - data: Top
            locale: en_US
          - data: Débardeur
            locale: fr_FR
          price:
          - data:
            - amount: "15.5"
              currency: EUR
            - amount: "15"
              currency: USD
          size:
          - data: m
            linked_data:
              attribute: size
              code: m
              labels:
                en_US: M
                fr_FR: M
          sku:
          - data: top
      properties:
        associations:
          $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the product is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        completenesses:
          description: "Product completenesses for each channel/locale combination\
            \ (only available since the 7.0 version, and when the \"with_completenesses\"\
            \ query parameter is set to \"true\")"
          items:
            $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_completenesses_inner'
          type: array
          x-immutable: true
          x-read-only: true
          x-from-version: "7.0"
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        enabled:
          default: true
          description: Whether the product is enabled
          type: boolean
        family:
          default: null only in the case of a non variant product
          description: <a href='api-reference.html#Family'>Family</a> code from which
            the product inherits its attributes and attributes requirements.
          type: string
          x-validation-rules: "It is equal to an existing family code. In the case\
            \ of variant product, the given family should be the same as the product\
            \ model family."
        groups:
          description: Codes of the groups to which the product belong
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing group
            code
        metadata:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_metadata'
        parent:
          default: "null"
          description: Code of the parent <a href='api-reference.html#Productmodel'>product
            model</a> when the product is a variant (only available since the 2.0).
            This parent can be modified since the 2.3.
          type: string
          x-validation-rules: It is equal to an existing product model code only if
            the product is variant otherwise it's equal to null
          x-from-version: "2.0"
        quality_scores:
          description: Product quality scores for each channel/locale combination
            (only available since the 5.0 and when the "with_quality_scores" query
            parameter is set to "true")
          properties: {}
          type: object
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        quantified_associations:
          $ref: '#/components/schemas/Products_2_allOf__embedded_items_inner_allOf_quantified_associations'
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        uuid:
          description: Product uuid
          type: string
        values:
          $ref: '#/components/schemas/Products_1_allOf__embedded_items_inner_allOf_values'
      required:
      - uuid
      type: object
      x-examples:
        x-example-1: "{\"uuid\":\"fc24e6c3-933c-4a93-8a81-e5c703d134d5\",\"values\"\
          :{\"description\":[{\"scope\":\"ecommerce\",\"locale\":\"en_US\",\"data\"\
          :\"My amazing cap\"}]}}"
        x-example-2: "{\"uuid\":\"573dd613-0c7f-4143-83d5-63cc5e535966\",\"values\"\
          :{\"sku\":[{\"data\":\"updated_sku\",\"locale\":null,\"scope\":null}]},\
          \ \"group\":[\"promotion\"]}"
        x-example-3: "{\"uuid\":\"25566245-55c3-42ce-86d9-8610ac459fa8\",\"values\"\
          :{\"sku\":[{\"data\":\"new_product\",\"locale\":null,\"scope\":null}]},\"\
          family\":\"clothes\"}"
    patch_products_uuid_200_response:
      example:
        status_code: 6
        line: 0
        message: message
        uuid: uuid
      properties:
        line:
          description: Line number
          type: integer
        message:
          description: Message explaining the error
          type: string
        status_code:
          description: "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\"\
            >Client errors</a> to understand the meaning of each code"
          type: integer
        uuid:
          description: Product uuid
          type: string
      type: object
    Published_products_allOf__embedded_items_inner_allOf_associations_associationTypeCode:
      example:
        product_models:
        - product_models
        - product_models
        groups:
        - groups
        - groups
        products:
        - products
        - products
      properties:
        groups:
          description: Array of groups codes with which the published product is in
            relation
          items:
            type: string
          type: array
        product_models:
          description: Array of product model codes with which the product is in relation
            (only available since the v2.1)
          items:
            type: string
          type: array
          x-from-version: "2.1"
        products:
          description: Array of published product identifiers with which the published
            product is in relation
          items:
            type: string
          type: array
      type: object
    Published_products_allOf__embedded_items_inner_allOf_associations:
      description: "Several associations related to groups and/or other published\
        \ products, grouped by association types"
      example:
        associationTypeCode:
          product_models:
          - product_models
          - product_models
          groups:
          - groups
          - groups
          products:
          - products
          - products
      properties:
        associationTypeCode:
          $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner_allOf_associations_associationTypeCode'
      type: object
      x-validation-rules: '&bull; The `associationTypeCode` is the code of an existing
        association type. &#10;&bull; Each string in the array of the property `groups`
        is the code of an existing group. &#10;&bull; Each string in the array of
        the property `products` is the identifier of an existing product. &#10;&bull;
        Identifiers used in the array of the property `products` cannot be equal to
        the published product identifier.'
    Published_products_allOf__embedded_items_inner_allOf_values:
      description: "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product\
        \ values</a> section for more details"
      example:
        attributeCode:
        - data: "{}"
          scope: scope
          locale: locale
        - data: "{}"
          scope: scope
          locale: locale
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/Product_Models_allOf__embedded_items_inner_allOf_values_attributeCode_inner'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Product values section
    Published_products_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          associations:
            PACK:
              groups: []
              product_models: []
              products:
              - sunglass
          categories:
          - summer_collection
          created: 2016-06-23T18:24:44+02:00
          enabled: true
          family: tshirt
          groups: []
          identifier: top
          updated: 2016-06-25T17:56:12+02:00
          values:
            color:
            - data: black
            description:
            - data: Summer top
              locale: en_US
              scope: ecommerce
            - data: Top
              locale: en_US
              scope: tablet
            - data: Débardeur pour l'été
              locale: fr_FR
              scope: ecommerce
            - data: Débardeur
              locale: fr_FR
              scope: tablet
            name:
            - data: Top
              locale: en_US
            - data: Débardeur
              locale: fr_FR
            price:
            - data:
              - amount: "15.5"
                currency: EUR
              - amount: "15"
                currency: USD
            size:
            - data: m
        properties:
          associations:
            $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner_allOf_associations'
          categories:
            description: Codes of the <a href='api-reference.html#Category'>categories</a>
              in which the published product is classified
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing category
              code
          created:
            description: Date of creation
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
          enabled:
            default: true
            description: Whether the published product is enable
            type: boolean
          family:
            default: "null"
            description: <a href='api-reference.html#Family'>Family</a> code from
              which the published product inherits its attributes and attributes requirements
            type: string
            x-validation-rules: It is equal to an existing family code
          groups:
            description: Codes of the groups to which the published product belong
            items:
              type: string
            type: array
            x-validation-rules: Each string of the array is equal to an existing group
              code
          identifier:
            description: "Published product identifier, i.e. the value of the only\
              \ `pim_catalog_identifier` attribute"
            type: string
          quantified_associations:
            $ref: '#/components/schemas/PublishedProductList_allOf_quantified_associations'
          updated:
            description: Date of the last update
            format: dateTime
            type: string
            x-read-only: true
          values:
            $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner_allOf_values'
        required:
        - identifier
        type: object
      example:
        associations:
          associationTypeCode:
            product_models:
            - product_models
            - product_models
            groups:
            - groups
            - groups
            products:
            - products
            - products
        identifier: identifier
        _links:
          self:
            href: href
        created: created
        values:
          attributeCode:
          - data: "{}"
            scope: scope
            locale: locale
          - data: "{}"
            scope: scope
            locale: locale
        groups:
        - groups
        - groups
        categories:
        - categories
        - categories
        family: "null"
        quantified_associations: {}
        updated: updated
        enabled: true
      type: object
    Published_products_allOf__embedded:
      example:
        items:
        - associations:
            associationTypeCode:
              product_models:
              - product_models
              - product_models
              groups:
              - groups
              - groups
              products:
              - products
              - products
          identifier: identifier
          _links:
            self:
              href: href
          created: created
          values:
            attributeCode:
            - data: "{}"
              scope: scope
              locale: locale
            - data: "{}"
              scope: scope
              locale: locale
          groups:
          - groups
          - groups
          categories:
          - categories
          - categories
          family: "null"
          quantified_associations: {}
          updated: updated
          enabled: true
        - associations:
            associationTypeCode:
              product_models:
              - product_models
              - product_models
              groups:
              - groups
              - groups
              products:
              - products
              - products
          identifier: identifier
          _links:
            self:
              href: href
          created: created
          values:
            attributeCode:
            - data: "{}"
              scope: scope
              locale: locale
            - data: "{}"
              scope: scope
              locale: locale
          groups:
          - groups
          - groups
          categories:
          - categories
          - categories
          family: "null"
          quantified_associations: {}
          updated: updated
          enabled: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner'
          type: array
      type: object
    Published_products:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__links'
          current_page:
            description: Current page number
            type: integer
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Published_products_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          previous:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - associations:
              associationTypeCode:
                product_models:
                - product_models
                - product_models
                groups:
                - groups
                - groups
                products:
                - products
                - products
            identifier: identifier
            _links:
              self:
                href: href
            created: created
            values:
              attributeCode:
              - data: "{}"
                scope: scope
                locale: locale
              - data: "{}"
                scope: scope
                locale: locale
            groups:
            - groups
            - groups
            categories:
            - categories
            - categories
            family: "null"
            quantified_associations: {}
            updated: updated
            enabled: true
          - associations:
              associationTypeCode:
                product_models:
                - product_models
                - product_models
                groups:
                - groups
                - groups
                products:
                - products
                - products
            identifier: identifier
            _links:
              self:
                href: href
            created: created
            values:
              attributeCode:
              - data: "{}"
                scope: scope
                locale: locale
              - data: "{}"
                scope: scope
                locale: locale
            groups:
            - groups
            - groups
            categories:
            - categories
            - categories
            family: "null"
            quantified_associations: {}
            updated: updated
            enabled: true
        current_page: 0
      title: Published products
    get_published_products__code__200_response:
      example:
        associations:
          PACK:
            groups: []
            product_models: []
            products:
            - sunglass
        categories:
        - summer_collection
        created: 2016-06-23T18:24:44+02:00
        enabled: true
        family: tshirt
        groups: []
        identifier: top
        updated: 2016-06-25T17:56:12+02:00
        values:
          color:
          - data: black
          description:
          - data: Summer top
            locale: en_US
            scope: ecommerce
          - data: Top
            locale: en_US
            scope: tablet
          - data: Débardeur pour l'été
            locale: fr_FR
            scope: ecommerce
          - data: Débardeur
            locale: fr_FR
            scope: tablet
          name:
          - data: Top
            locale: en_US
          - data: Débardeur
            locale: fr_FR
          price:
          - data:
            - amount: "15.5"
              currency: EUR
            - amount: "15"
              currency: USD
          size:
          - data: m
      properties:
        associations:
          $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner_allOf_associations'
        categories:
          description: Codes of the <a href='api-reference.html#Category'>categories</a>
            in which the published product is classified
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing category
            code
        created:
          description: Date of creation
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
        enabled:
          default: true
          description: Whether the published product is enable
          type: boolean
        family:
          default: "null"
          description: <a href='api-reference.html#Family'>Family</a> code from which
            the published product inherits its attributes and attributes requirements
          type: string
          x-validation-rules: It is equal to an existing family code
        groups:
          description: Codes of the groups to which the published product belong
          items:
            type: string
          type: array
          x-validation-rules: Each string of the array is equal to an existing group
            code
        identifier:
          description: "Published product identifier, i.e. the value of the only `pim_catalog_identifier`\
            \ attribute"
          type: string
        quantified_associations:
          description: "Warning: associations with quantities are not compatible with\
            \ the published products. The response will always be empty."
          properties: {}
          type: object
        updated:
          description: Date of the last update
          format: dateTime
          type: string
          x-read-only: true
        values:
          $ref: '#/components/schemas/Published_products_allOf__embedded_items_inner_allOf_values'
      required:
      - identifier
      type: object
    Reference_Entities_allOf__embedded_items_inner_allOf__links_image_download:
      example:
        href: href
      properties:
        href:
          description: URI to download the binaries of the reference entity image
            file
          type: string
      type: object
    Reference_Entities_allOf__embedded_items_inner_allOf__links:
      example:
        image_download:
          href: href
        self:
          href: href
      properties:
        image_download:
          $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf__links_image_download'
        self:
          $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links_self'
      type: object
    Reference_Entities_allOf__embedded_items_inner_allOf_labels:
      description: Reference entity labels for each locale
      example:
        localeCode: localeCode
      properties:
        localeCode:
          description: Reference entity label for the locale `localeCode`
          type: string
      type: object
      x-validation-rules: The `localeCode` is the code of an existing and activated
        locale
    Reference_Entities_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: brands
          image: 0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png
          labels:
            en_US: Brands
            fr_FR: Marques
        properties:
          code:
            description: Reference entity code
            type: string
            x-immutable: true
          image:
            description: Code of the reference entity image
            type: string
          labels:
            $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf_labels'
        required:
        - code
        type: object
      example:
        image: image
        code: code
        _links:
          image_download:
            href: href
          self:
            href: href
        labels:
          localeCode: localeCode
      type: object
    Reference_Entities_allOf__embedded:
      example:
        items:
        - image: image
          code: code
          _links:
            image_download:
              href: href
            self:
              href: href
          labels:
            localeCode: localeCode
        - image: image
          code: code
          _links:
            image_download:
              href: href
            self:
              href: href
          labels:
            localeCode: localeCode
      properties:
        items:
          items:
            $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner'
          type: array
      type: object
    Reference_Entities:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/Asset_families_allOf__links'
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Reference_Entities_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - image: image
            code: code
            _links:
              image_download:
                href: href
              self:
                href: href
            labels:
              localeCode: localeCode
          - image: image
            code: code
            _links:
              image_download:
                href: href
              self:
                href: href
            labels:
              localeCode: localeCode
      title: Reference Entities
    get_reference_entities__code__200_response_allOf__links:
      example:
        image_download:
          href: href
      properties:
        image_download:
          $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf__links_image_download'
      type: object
      x-read-only: true
    get_reference_entities__code__200_response:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/get_reference_entities__code__200_response_allOf__links'
        type: object
      - example:
          code: brands
          image: 0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png
          labels:
            en_US: Brands
            fr_FR: Marques
        properties:
          code:
            description: Reference entity code
            type: string
            x-immutable: true
          image:
            description: Code of the reference entity image
            type: string
          labels:
            $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf_labels'
        required:
        - code
        type: object
      example:
        image: image
        code: code
        _links:
          image_download:
            href: href
        labels:
          localeCode: localeCode
    patch_reference_entity__code__request:
      example:
        code: brands
        image: 0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png
        labels:
          en_US: Brands
          fr_FR: Marques
      properties:
        code:
          description: Reference entity code
          type: string
          x-immutable: true
        image:
          description: Code of the reference entity image
          type: string
        labels:
          $ref: '#/components/schemas/Reference_Entities_allOf__embedded_items_inner_allOf_labels'
      required:
      - code
      type: object
    get_reference_entities__code__attributes_200_response_inner:
      example:
        code: description
        is_required_for_completeness: true
        is_rich_text_editor: true
        is_textarea: true
        labels:
          en_US: Description
          fr_FR: Description
        type: text
        validation_rule: none
        value_per_channel: false
        value_per_locale: true
      properties:
        allowed_extensions:
          description: Extensions allowed when the attribute type is `image`
          items:
            type: string
          type: array
          x-warning: Only for `image` attribute type
        code:
          description: Attribute code
          type: string
          x-immutable: true
        decimals_allowed:
          default: false
          description: Whether decimals are allowed when the attribute type is `number`
          type: boolean
          x-warning: Only for `number` attribute type
        is_required_for_completeness:
          default: false
          description: Whether the attribute should be part of the record's completeness
            calculation
          type: boolean
        is_rich_text_editor:
          description: Whether the UI should display a rich text editor instead of
            a simple text area when the attribute type is `text`
          type: boolean
          x-validation-rules: Required when the property `is_textarea` is equal to
            `true`
          x-warning: Only for `text` attribute type
        is_textarea:
          default: false
          description: Whether the UI should display a text area instead of a simple
            field when the attribute type is `text`
          type: boolean
          x-warning: Only for `text` attribute type
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
        max_characters:
          description: Maximum number of characters allowed for the value of the attribute
            when the attribute type is `text`
          type: integer
          x-warning: Only for `text` attribute type
        max_file_size:
          description: Max file size in MB when the attribute type is `image`
          type: string
          x-warning: Only for `image` attribute type
        max_value:
          description: Maximum value allowed when the attribute type is `number`
          type: string
          x-validation-rules: The maximum value must be greater than the minimum value
          x-warning: Only for `number` attribute type
        min_value:
          description: Minimum value allowed when the attribute type is `number`
          type: string
          x-validation-rules: The minimum value must be lower than the maximum value
          x-warning: Only for `number` attribute type
        reference_entity_code:
          description: Code of the linked reference entity when the attribute type
            is `reference_entity_single_link` or `reference_entity_multiple_links`
          type: string
          x-validation-rules: Required when the attribute type is either `reference_entity_single_link`
            or `reference_entity_multiple_links`
          x-immutable: true
          x-warning: Only for `reference_entity_single_link` and `reference_entity_multiple_links`
            attribute type
        type:
          description: Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a>
            section for more details.
          enum:
          - text
          - image
          - number
          - single_option
          - multiple_options
          - reference_entity_single_link
          - reference_entity_multiple_links
          type: string
          x-immutable: true
        validation_regexp:
          description: Regexp expression used to validate the attribute value when
            the attribute type is `text`
          type: string
          x-validation-rules: Required when the property `validation_rule` is equal
            to `regexp`
          x-warning: Only for `text` attribute type
        validation_rule:
          default: none
          description: Validation rule type used to validate the attribute value when
            the attribute type is `text`
          enum:
          - email
          - url
          - regexp
          - none
          type: string
          x-warning: Only for `text` attribute type
        value_per_channel:
          default: false
          description: "Whether the attribute is scopable, i.e. can have one value\
            \ by channel"
          type: boolean
          x-immutable: true
        value_per_locale:
          default: false
          description: "Whether the attribute is localizable, i.e. can have one value\
            \ by locale"
          type: boolean
          x-immutable: true
      required:
      - code
      - type
      type: object
    get_reference_entity_attributes__attribute_code__options_200_response_inner:
      example:
        code: global_nomad
        labels:
          en_US: Global Nomad
          fr_FR: Nomade du Monde
      properties:
        code:
          description: Attribute's option code
          type: string
          x-immutable: true
        labels:
          $ref: '#/components/schemas/get_asset_families__code__attributes_200_response_inner_labels'
      required:
      - code
      type: object
    Reference_entity_record_allOf__embedded_items_inner_allOf_values_attributeCode_inner:
      example:
        data: "{}"
        channel: channel
        locale: locale
      properties:
        channel:
          description: Channel code of the reference entity record value
          type: string
        data:
          description: Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the
            `data` format</a> section for more details.
          properties: {}
          type: object
        locale:
          description: Locale code of the reference entity record value
          type: string
      type: object
    Reference_entity_record_allOf__embedded_items_inner_allOf_values:
      description: "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference\
        \ entity record values</a> section for more details"
      example:
        attributeCode:
        - data: "{}"
          channel: channel
          locale: locale
        - data: "{}"
          channel: channel
          locale: locale
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/Reference_entity_record_allOf__embedded_items_inner_allOf_values_attributeCode_inner'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Reference entity record values
        section
    Reference_entity_record_allOf__embedded_items_inner:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links'
        type: object
      - example:
          code: kartell
          created: 2021-01-01T01:23:34+00:00
          updated: 2021-02-03T23:45:60+00:00
          values:
            collection_overview:
            - data: 5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png
            country:
            - data: italy
            creation_year:
            - data: "1949"
            description:
            - data: "Kartell, the Italian furniture company that sells modern and\
                \ remarkable pieces of furnitures."
              locale: en_US
            - data: "Kartell, l'éditeur de meuble italien spécialisé dans la signature\
                \ de belle pièces au design contemporain."
              locale: fr_FR
            image:
            - data: 0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg
            label:
            - data: Kartell
              locale: en_US
        properties:
          code:
            description: Code of the record
            type: string
            x-immutable: true
          created:
            description: Date of creation.
            format: dateTime
            type: string
            x-immutable: true
            x-read-only: true
            x-from-version: "5.0"
          updated:
            description: Date of the last update.
            format: dateTime
            type: string
            x-read-only: true
            x-from-version: "5.0"
          values:
            $ref: '#/components/schemas/Reference_entity_record_allOf__embedded_items_inner_allOf_values'
        required:
        - code
        type: object
      example:
        code: code
        _links:
          self:
            href: href
        created: created
        values:
          attributeCode:
          - data: "{}"
            channel: channel
            locale: locale
          - data: "{}"
            channel: channel
            locale: locale
        updated: updated
      type: object
    Reference_entity_record_allOf__embedded:
      example:
        items:
        - code: code
          _links:
            self:
              href: href
          created: created
          values:
            attributeCode:
            - data: "{}"
              channel: channel
              locale: locale
            - data: "{}"
              channel: channel
              locale: locale
          updated: updated
        - code: code
          _links:
            self:
              href: href
          created: created
          values:
            attributeCode:
            - data: "{}"
              channel: channel
              locale: locale
            - data: "{}"
              channel: channel
              locale: locale
          updated: updated
      properties:
        items:
          items:
            $ref: '#/components/schemas/Reference_entity_record_allOf__embedded_items_inner'
          type: array
      type: object
    Reference_entity_record:
      allOf:
      - properties:
          _links:
            $ref: '#/components/schemas/Asset_families_allOf__links'
        type: object
      - properties:
          _embedded:
            $ref: '#/components/schemas/Reference_entity_record_allOf__embedded'
        type: object
      example:
        _links:
          next:
            href: href
          self:
            href: href
          first:
            href: href
        _embedded:
          items:
          - code: code
            _links:
              self:
                href: href
            created: created
            values:
              attributeCode:
              - data: "{}"
                channel: channel
                locale: locale
              - data: "{}"
                channel: channel
                locale: locale
            updated: updated
          - code: code
            _links:
              self:
                href: href
            created: created
            values:
              attributeCode:
              - data: "{}"
                channel: channel
                locale: locale
              - data: "{}"
                channel: channel
                locale: locale
            updated: updated
      title: Reference entity record
    patch_reference_entity_records_request_inner:
      example:
        code: kartell
        created: 2021-01-01T01:23:34+00:00
        updated: 2021-02-03T23:45:60+00:00
        values:
          collection_overview:
          - data: 5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png
          country:
          - data: italy
          creation_year:
          - data: "1949"
          description:
          - data: "Kartell, the Italian furniture company that sells modern and remarkable\
              \ pieces of furnitures."
            locale: en_US
          - data: "Kartell, l'éditeur de meuble italien spécialisé dans la signature\
              \ de belle pièces au design contemporain."
            locale: fr_FR
          image:
          - data: 0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg
          label:
          - data: Kartell
            locale: en_US
      properties:
        code:
          description: Code of the record
          type: string
          x-immutable: true
        created:
          description: Date of creation.
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        updated:
          description: Date of the last update.
          format: dateTime
          type: string
          x-read-only: true
          x-from-version: "5.0"
        values:
          $ref: '#/components/schemas/Reference_entity_record_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      type: object
    patch_reference_entity_records__code__request:
      example:
        code: kartell
        values:
          collection_overview:
          - data: 5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png
          country:
          - data: italy
          creation_year:
          - data: "1949"
          description:
          - data: "Kartell, the Italian furniture company that sells modern and remarkable\
              \ pieces of furnitures."
            locale: en_US
          - data: "Kartell, l'éditeur de meuble italien spécialisé dans la signature\
              \ de belle pièces au design contemporain."
            locale: fr_FR
          image:
          - data: 0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg
          label:
          - data: Kartell
            locale: en_US
      properties:
        code:
          description: Code of the record
          type: string
          x-immutable: true
        created:
          description: Date of creation.
          format: dateTime
          type: string
          x-immutable: true
          x-read-only: true
          x-from-version: "5.0"
        updated:
          description: Date of the last update.
          format: dateTime
          type: string
          x-read-only: true
          x-from-version: "5.0"
        values:
          $ref: '#/components/schemas/Reference_entity_record_allOf__embedded_items_inner_allOf_values'
      required:
      - code
      type: object
    get_system_information_200_response:
      example:
        edition: edition
        version: version
      properties:
        edition:
          description: Edition of the PIM
          type: string
        version:
          description: Version of the PIM
          type: string
      type: object
    AssetFamilyList_allOf_naming_convention_source:
      description: The string on which the naming convention should be applied. More
        details <a href='/concepts/asset-manager.html#source'>here</a>.
      properties: {}
      type: object
    AssetFamilyList_allOf_naming_convention:
      description: "The naming convention ran over the asset code or the main media\
        \ filename upon each asset creation, in order to automatically set several\
        \ values in asset attributes. To learn more and see the format of this property,\
        \ take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>."
      properties:
        abort_asset_creation_on_error:
          description: Whether the asset should be created if the naming convention
            failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>.
          type: boolean
        pattern:
          description: The regular expression that should be applied on the source.
            More details <a href='/concepts/asset-manager.html#pattern'>here</a>.
          type: string
        source:
          description: The string on which the naming convention should be applied.
            More details <a href='/concepts/asset-manager.html#source'>here</a>.
          properties: {}
          type: object
      type: object
      x-validation-rules: "To know more about the validation of this property, take\
        \ a look at our naming convention format."
    AssetList_allOf_values_data:
      description: Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the
        `data` format</a> section for more details.
      properties: {}
      type: object
    AssetList_allOf_values_attributeCode:
      properties:
        channel:
          description: Channel code of the asset attribute value
          type: string
        data:
          description: Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the
            `data` format</a> section for more details.
          properties: {}
          type: object
        locale:
          description: Locale code of the asset attribute value
          type: string
      type: object
    AssetList_allOf_values:
      description: "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus\
        \ on the asset values</a> section for more details."
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/AssetList_allOf_values_attributeCode'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Asset attribute values section
    CategoryList_allOf_values_data:
      description: Attribute value
      properties: {}
      type: object
    CategoryList_allOf_values_attributeCode_attributeUuid_channelCode_localeCode:
      properties:
        attribute_code:
          description: The attribute code with its uuid (attributeCode|attributeUuid)
          type: string
        channel:
          description: <a href='api-reference.html#Channel'>Channel</a> code of the
            attribute value
          type: string
        data:
          description: Attribute value
          properties: {}
          type: object
        locale:
          description: <a href='api-reference.html#Locale'>Locale</a> code of the
            attribute value
          type: string
        type:
          description: The attribute type
          type: string
      type: object
    CategoryList_allOf_values:
      description: Attribute values
      properties:
        attributeCode|attributeUuid|channelCode|localeCode:
          items:
            $ref: '#/components/schemas/CategoryList_allOf_values_attributeCode_attributeUuid_channelCode_localeCode'
          type: array
      type: object
      x-read-only: true
    MeasureFamilyList_allOf_convert:
      description: Mathematic operation to convert the unit into the standard unit
      properties: {}
      type: object
    MeasureFamilyList_allOf_units:
      properties:
        code:
          description: Measure code
          type: string
          x-immutable: true
        convert:
          description: Mathematic operation to convert the unit into the standard
            unit
          properties: {}
          type: object
        symbol:
          description: Measure symbol
          type: string
          x-immutable: true
      type: object
    ProductList_allOf_quality_scores:
      description: Product quality scores for each channel/locale combination (only
        available since the 5.0 and when the "with_quality_scores" query parameter
        is set to "true")
      example: {}
      properties: {}
      type: object
      x-immutable: true
      x-read-only: true
      x-from-version: "5.0"
    ProductList_allOf_values_data:
      description: Product value. See <a href='/concepts/products.html#the-data-format'>the
        `data` format</a> section for more details.
      properties: {}
      type: object
    ProductList_allOf_values_linked_data_labels:
      properties: {}
      type: object
    ProductList_allOf_values_linked_data:
      description: Object containing labels of attribute options (only available since
        the 5.0 and when query parameter "with_attribute_options" is set to "true").
        See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data`
        format</a> section for more details.
      properties:
        attribute:
          type: string
        code:
          type: string
        labels:
          properties: {}
          type: object
      type: object
      x-read-only: true
      x-from-version: "5.0"
    ProductList_allOf_values_attributeCode:
      properties:
        data:
          description: Product value. See <a href='/concepts/products.html#the-data-format'>the
            `data` format</a> section for more details.
          properties: {}
          type: object
        linked_data:
          $ref: '#/components/schemas/ProductList_allOf_values_linked_data'
        locale:
          description: <a href='api-reference.html#Locale'>Locale</a> code of the
            product value
          type: string
        scope:
          description: <a href='api-reference.html#Channel'>Channel</a> code of the
            product value
          type: string
      type: object
    ProductList_allOf_values:
      description: "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product\
        \ values</a> section for more details"
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/ProductList_allOf_values_attributeCode'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Product values section
    ProductModelList_allOf_quality_scores:
      description: Product model quality scores for each channel/locale combination
        (<strong>only available since the 7.0 version</strong> and when the "with_quality_scores"
        query parameter is set to "true")
      example: {}
      properties: {}
      type: object
      x-immutable: true
      x-read-only: true
      x-from-version: "7.0"
    ProductModelList_allOf_values_data:
      description: <a href='api-reference.html#Productuuid'>Product</a> value
      properties: {}
      type: object
    ProductModelList_allOf_values_attributeCode:
      properties:
        data:
          description: <a href='api-reference.html#Productuuid'>Product</a> value
          properties: {}
          type: object
        locale:
          description: <a href='api-reference.html#Locale'>Locale</a> code of the
            product value
          type: string
        scope:
          description: <a href='api-reference.html#Channel'>Channel</a> code of the
            product value
          type: string
      type: object
    ProductModelList_allOf_values:
      description: "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product\
        \ values</a> section for more details"
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/ProductModelList_allOf_values_attributeCode'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Product values section
    PublishedProductList_allOf_quantified_associations:
      description: "Warning: associations with quantities are not compatible with\
        \ the published products. The response will always be empty."
      example: {}
      properties: {}
      type: object
    PublishedProductList_allOf_values:
      description: "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product\
        \ values</a> section for more details"
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/ProductModelList_allOf_values_attributeCode'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Product values section
    ReferenceEntityRecordList_allOf_values_data:
      description: Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the
        `data` format</a> section for more details.
      properties: {}
      type: object
    ReferenceEntityRecordList_allOf_values_attributeCode:
      properties:
        channel:
          description: Channel code of the reference entity record value
          type: string
        data:
          description: Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the
            `data` format</a> section for more details.
          properties: {}
          type: object
        locale:
          description: Locale code of the reference entity record value
          type: string
      type: object
    ReferenceEntityRecordList_allOf_values:
      description: "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference\
        \ entity record values</a> section for more details"
      properties:
        attributeCode:
          items:
            $ref: '#/components/schemas/ReferenceEntityRecordList_allOf_values_attributeCode'
          type: array
      type: object
      x-validation-rules: Validation rules detailed in Reference entity record values
        section
x-original-swagger-version: "2.0"

