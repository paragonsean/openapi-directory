/*
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetAssetFamiliesCodeAttributes200ResponseInnerLabels;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReferenceEntityAttribute
 */
public class ReferenceEntityAttributeTest {
    private final ReferenceEntityAttribute model = new ReferenceEntityAttribute();

    /**
     * Model tests for ReferenceEntityAttribute
     */
    @Test
    public void testReferenceEntityAttribute() {
        // TODO: test ReferenceEntityAttribute
    }

    /**
     * Test the property 'allowedExtensions'
     */
    @Test
    public void allowedExtensionsTest() {
        // TODO: test allowedExtensions
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'decimalsAllowed'
     */
    @Test
    public void decimalsAllowedTest() {
        // TODO: test decimalsAllowed
    }

    /**
     * Test the property 'isRequiredForCompleteness'
     */
    @Test
    public void isRequiredForCompletenessTest() {
        // TODO: test isRequiredForCompleteness
    }

    /**
     * Test the property 'isRichTextEditor'
     */
    @Test
    public void isRichTextEditorTest() {
        // TODO: test isRichTextEditor
    }

    /**
     * Test the property 'isTextarea'
     */
    @Test
    public void isTextareaTest() {
        // TODO: test isTextarea
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'maxCharacters'
     */
    @Test
    public void maxCharactersTest() {
        // TODO: test maxCharacters
    }

    /**
     * Test the property 'maxFileSize'
     */
    @Test
    public void maxFileSizeTest() {
        // TODO: test maxFileSize
    }

    /**
     * Test the property 'maxValue'
     */
    @Test
    public void maxValueTest() {
        // TODO: test maxValue
    }

    /**
     * Test the property 'minValue'
     */
    @Test
    public void minValueTest() {
        // TODO: test minValue
    }

    /**
     * Test the property 'referenceEntityCode'
     */
    @Test
    public void referenceEntityCodeTest() {
        // TODO: test referenceEntityCode
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'validationRegexp'
     */
    @Test
    public void validationRegexpTest() {
        // TODO: test validationRegexp
    }

    /**
     * Test the property 'validationRule'
     */
    @Test
    public void validationRuleTest() {
        // TODO: test validationRule
    }

    /**
     * Test the property 'valuePerChannel'
     */
    @Test
    public void valuePerChannelTest() {
        // TODO: test valuePerChannel
    }

    /**
     * Test the property 'valuePerLocale'
     */
    @Test
    public void valuePerLocaleTest() {
        // TODO: test valuePerLocale
    }

}
