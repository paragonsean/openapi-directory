/*
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.LocalDate;
import org.openapitools.client.model.PostToken400Response;
import org.openapitools.client.model.ProductUuids;
import org.openapitools.client.model.Products;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CatalogProductsApi
 */
@Disabled
public class CatalogProductsApiTest {

    private final CatalogProductsApi api = new CatalogProductsApi();

    /**
     * Get the list of mapped products related to a catalog
     *
     * This endpoint allows you to get the list of products related to a catalog when the mapping is enabled. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the &lt;a href&#x3D;\&quot;apps/catalogs.html#troubleshooting\&quot;&gt;App Catalog&lt;/a&gt; section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppCatalogMappedProductsTest() throws ApiException {
        UUID id = null;
        String searchAfter = null;
        Integer limit = null;
        LocalDate updatedBefore = null;
        LocalDate updatedAfter = null;
        Products response = api.getAppCatalogMappedProducts(id, searchAfter, limit, updatedBefore, updatedAfter);
        // TODO: test validations
    }

    /**
     * Get the list of product uuids
     *
     * This endpoint allows you to get the list of uuids of products contained in a catalog. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the &lt;a href&#x3D;\&quot;apps/catalogs.html#troubleshooting\&quot;&gt;App Catalog&lt;/a&gt; section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppCatalogProductUuidsTest() throws ApiException {
        UUID id = null;
        String searchAfter = null;
        Integer limit = null;
        LocalDate updatedBefore = null;
        LocalDate updatedAfter = null;
        ProductUuids response = api.getAppCatalogProductUuids(id, searchAfter, limit, updatedBefore, updatedAfter);
        // TODO: test validations
    }

    /**
     * Get the list of products related to a catalog
     *
     * This endpoint allows you to get the list of products related to a catalog. Products are paginated and they can be filtered. In the Enterprise Edition, permissions based on your app settings are applied to the set of products you request. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the &lt;a href&#x3D;\&quot;apps/catalogs.html#troubleshooting\&quot;&gt;App Catalog&lt;/a&gt; section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppCatalogProductsTest() throws ApiException {
        UUID id = null;
        String searchAfter = null;
        Integer limit = null;
        LocalDate updatedBefore = null;
        LocalDate updatedAfter = null;
        Products response = api.getAppCatalogProducts(id, searchAfter, limit, updatedBefore, updatedAfter);
        // TODO: test validations
    }

    /**
     * Get a product related to a catalog
     *
     * This endpoint allows you to get a specific product related to a catalog. In the Enterprise Edition, permissions based on your app settings are applied on the product you request. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the &lt;a href&#x3D;\&quot;apps/catalogs.html#troubleshooting\&quot;&gt;App Catalog&lt;/a&gt; section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppCatalogProductsUuidTest() throws ApiException {
        UUID id = null;
        UUID uuid = null;
        api.getAppCatalogProductsUuid(id, uuid);
        // TODO: test validations
    }

}
