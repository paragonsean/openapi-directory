/*
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Families;
import org.openapitools.client.model.PatchAssetCategories200Response;
import org.openapitools.client.model.PatchFamiliesRequest;
import org.openapitools.client.model.PostFamiliesFamilyCodeVariantsRequest;
import org.openapitools.client.model.PostFamiliesRequest;
import org.openapitools.client.model.PostToken400Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FamilyApi
 */
@Disabled
public class FamilyApiTest {

    private final FamilyApi api = new FamilyApi();

    /**
     * Get list of families
     *
     * This endpoint allows you to get a list of families. Families are paginated and sorted by code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFamiliesTest() throws ApiException {
        String search = null;
        Integer page = null;
        Integer limit = null;
        Boolean withCount = null;
        Families response = api.getFamilies(search, page, limit, withCount);
        // TODO: test validations
    }

    /**
     * Get a family
     *
     * This endpoint allows you to get the information about a given family.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFamiliesCodeTest() throws ApiException {
        String code = null;
        PostFamiliesRequest response = api.getFamiliesCode(code);
        // TODO: test validations
    }

    /**
     * Update/create several families
     *
     * This endpoint allows you to update and/or create several families at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchFamiliesTest() throws ApiException {
        PatchFamiliesRequest body = null;
        PatchAssetCategories200Response response = api.patchFamilies(body);
        // TODO: test validations
    }

    /**
     * Update/create a family
     *
     * This endpoint allows you to update a given family. Know more about &lt;a href&#x3D;\&quot;/documentation/update.html#update-behavior\&quot;&gt;Update behavior&lt;/a&gt;. Note that if no family exists for the given code, it creates it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchFamiliesCodeTest() throws ApiException {
        String code = null;
        PostFamiliesRequest body = null;
        api.patchFamiliesCode(code, body);
        // TODO: test validations
    }

    /**
     * Create a new family
     *
     * This endpoint allows you to create a new family.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postFamiliesTest() throws ApiException {
        PostFamiliesRequest body = null;
        api.postFamilies(body);
        // TODO: test validations
    }

    /**
     * Create a new family variant
     *
     * This endpoint allows you to create a family variant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postFamiliesFamilyCodeVariantsTest() throws ApiException {
        String familyCode = null;
        PostFamiliesFamilyCodeVariantsRequest body = null;
        api.postFamiliesFamilyCodeVariants(familyCode, body);
        // TODO: test validations
    }

}
