/*
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Channels;
import org.openapitools.client.model.ChannelsPostRequest;
import org.openapitools.client.model.PatchAssetCategories200Response;
import org.openapitools.client.model.PostToken400Response;
import org.openapitools.client.model.SeveralChannelsPatchRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelApi
 */
@Disabled
public class ChannelApiTest {

    private final ChannelApi api = new ChannelApi();

    /**
     * Update/create a channel
     *
     * This endpoint allows you to update a given channel. Know more about &lt;a href&#x3D;\&quot;/documentation/update.html#update-behavior\&quot;&gt;Update behavior&lt;/a&gt;. Note that if no channel exists for the given code, it creates it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void channelsPatchTest() throws ApiException {
        String code = null;
        ChannelsPostRequest body = null;
        api.channelsPatch(code, body);
        // TODO: test validations
    }

    /**
     * Create a new channel
     *
     * This endpoint allows you to create a new channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void channelsPostTest() throws ApiException {
        ChannelsPostRequest body = null;
        api.channelsPost(body);
        // TODO: test validations
    }

    /**
     * Get a list of channels
     *
     * This endpoint allows you to get a list of channels. Channels are paginated and sorted by code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelsTest() throws ApiException {
        Integer page = null;
        Integer limit = null;
        Boolean withCount = null;
        Channels response = api.getChannels(page, limit, withCount);
        // TODO: test validations
    }

    /**
     * Get a channel
     *
     * This endpoint allows you to get the information about a given channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelsCodeTest() throws ApiException {
        String code = null;
        ChannelsPostRequest response = api.getChannelsCode(code);
        // TODO: test validations
    }

    /**
     * Update/create several channels
     *
     * This endpoint allows you to update and/or create several channels at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void severalChannelsPatchTest() throws ApiException {
        SeveralChannelsPatchRequest body = null;
        PatchAssetCategories200Response response = api.severalChannelsPatch(body);
        // TODO: test validations
    }

}
