/*
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Asset;
import org.openapitools.client.model.PatchAssets200ResponseInner;
import org.openapitools.client.model.PatchAssetsRequestInner;
import org.openapitools.client.model.PostToken400Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AssetApi
 */
@Disabled
public class AssetApiTest {

    private final AssetApi api = new AssetApi();

    /**
     * Delete an asset
     *
     * This endpoint allows you to delete a given asset. This endpoint is case sensitive on the asset family code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAssetsCodeTest() throws ApiException {
        String assetFamilyCode = null;
        String code = null;
        api.deleteAssetsCode(assetFamilyCode, code);
        // TODO: test validations
    }

    /**
     * Get the list of the assets of a given asset family
     *
     * This endpoint allows you to get a list of assets of a given asset family. Assets are paginated. This endpoint is case sensitive on the asset family code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetsTest() throws ApiException {
        String assetFamilyCode = null;
        String search = null;
        String channel = null;
        String locales = null;
        String searchAfter = null;
        Asset response = api.getAssets(assetFamilyCode, search, channel, locales, searchAfter);
        // TODO: test validations
    }

    /**
     * Get an asset of a given asset family
     *
     * This endpoint allows you to get the information about a given asset for a given asset family. This endpoint is case sensitive on the asset family code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetsCodeTest() throws ApiException {
        String assetFamilyCode = null;
        String code = null;
        PatchAssetsRequestInner response = api.getAssetsCode(assetFamilyCode, code);
        // TODO: test validations
    }

    /**
     * Update/create an asset
     *
     * This endpoint allows you to update a given asset of a given asset family. Learn more about the &lt;a href&#x3D;\&quot;/documentation/update.html#patch-asset-attribute-values\&quot;&gt;Update behavior&lt;/a&gt;. Note that if the asset does not already exist for the given asset family, it creates it. This endpoint is case sensitive on the asset family code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAssetCodeTest() throws ApiException {
        String assetFamilyCode = null;
        String code = null;
        PatchAssetsRequestInner body = null;
        api.patchAssetCode(assetFamilyCode, code, body);
        // TODO: test validations
    }

    /**
     * Update/create several assets
     *
     * This endpoint allows you to update and/or create several assets of one given asset family at once. Learn more about the &lt;a href&#x3D;\&quot;/documentation/update.html#patch-asset-attribute-values\&quot;&gt;Update behavior&lt;/a&gt;. Note that if the asset does not already exist for the given asset family, it creates it. This endpoint is case sensitive on the asset family code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAssetsTest() throws ApiException {
        String assetFamilyCode = null;
        List<PatchAssetsRequestInner> body = null;
        List<PatchAssets200ResponseInner> response = api.patchAssets(assetFamilyCode, body);
        // TODO: test validations
    }

}
