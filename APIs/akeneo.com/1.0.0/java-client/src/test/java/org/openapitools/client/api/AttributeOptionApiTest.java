/*
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AttributeOptions;
import org.openapitools.client.model.PatchAssetCategories200Response;
import org.openapitools.client.model.PatchAttributesAttributeCodeOptionsRequest;
import org.openapitools.client.model.PostAttributesAttributeCodeOptionsRequest;
import org.openapitools.client.model.PostToken400Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttributeOptionApi
 */
@Disabled
public class AttributeOptionApiTest {

    private final AttributeOptionApi api = new AttributeOptionApi();

    /**
     * Get list of attribute options
     *
     * This endpoint allows you to get a list of attribute options. Attribute options are paginated and sorted by code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributesAttributeCodeOptionsTest() throws ApiException {
        String attributeCode = null;
        Integer page = null;
        Integer limit = null;
        Boolean withCount = null;
        AttributeOptions response = api.getAttributesAttributeCodeOptions(attributeCode, page, limit, withCount);
        // TODO: test validations
    }

    /**
     * Get an attribute option
     *
     * This endpoint allows you to get the information about a given attribute option.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributesAttributeCodeOptionsCodeTest() throws ApiException {
        String attributeCode = null;
        String code = null;
        PostAttributesAttributeCodeOptionsRequest response = api.getAttributesAttributeCodeOptionsCode(attributeCode, code);
        // TODO: test validations
    }

    /**
     * Update/create several attribute options
     *
     * This endpoint allows you to update several attribute options at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAttributesAttributeCodeOptionsTest() throws ApiException {
        String attributeCode = null;
        PatchAttributesAttributeCodeOptionsRequest body = null;
        PatchAssetCategories200Response response = api.patchAttributesAttributeCodeOptions(attributeCode, body);
        // TODO: test validations
    }

    /**
     * Update/create an attribute option
     *
     * This endpoint allows you to update a given attribute option. Know more about &lt;a href&#x3D;\&quot;/documentation/update.html#update-behavior\&quot;&gt;Update behavior&lt;/a&gt;. Note that if no attribute option exists for the given code, it creates it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAttributesAttributeCodeOptionsCodeTest() throws ApiException {
        String attributeCode = null;
        String code = null;
        PostAttributesAttributeCodeOptionsRequest body = null;
        api.patchAttributesAttributeCodeOptionsCode(attributeCode, code, body);
        // TODO: test validations
    }

    /**
     * Create a new attribute option
     *
     * This endpoint allows you to create a new attribute option.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postAttributesAttributeCodeOptionsTest() throws ApiException {
        String attributeCode = null;
        PostAttributesAttributeCodeOptionsRequest body = null;
        api.postAttributesAttributeCodeOptions(attributeCode, body);
        // TODO: test validations
    }

}
