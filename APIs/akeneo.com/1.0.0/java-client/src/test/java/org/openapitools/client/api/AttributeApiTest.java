/*
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Attributes;
import org.openapitools.client.model.PatchAssetCategories200Response;
import org.openapitools.client.model.PatchAttributesRequest;
import org.openapitools.client.model.PostAttributesRequest;
import org.openapitools.client.model.PostToken400Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttributeApi
 */
@Disabled
public class AttributeApiTest {

    private final AttributeApi api = new AttributeApi();

    /**
     * Get list of attributes
     *
     * This endpoint allows you to get a list of attributes. Attributes are paginated and sorted by code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributesTest() throws ApiException {
        String search = null;
        Integer page = null;
        Integer limit = null;
        Boolean withCount = null;
        Boolean withTableSelectOptions = null;
        Attributes response = api.getAttributes(search, page, limit, withCount, withTableSelectOptions);
        // TODO: test validations
    }

    /**
     * Get an attribute
     *
     * This endpoint allows you to get the information about a given attribute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributesCodeTest() throws ApiException {
        String code = null;
        Boolean withTableSelectOptions = null;
        PostAttributesRequest response = api.getAttributesCode(code, withTableSelectOptions);
        // TODO: test validations
    }

    /**
     * Update/create several attributes
     *
     * This endpoint allows you to update and/or create several attributes at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAttributesTest() throws ApiException {
        PatchAttributesRequest body = null;
        PatchAssetCategories200Response response = api.patchAttributes(body);
        // TODO: test validations
    }

    /**
     * Update/create an attribute
     *
     * This endpoint allows you to update a given attribute. Know more about &lt;a href&#x3D;\&quot;/documentation/update.html#update-behavior\&quot;&gt;Update behavior&lt;/a&gt;. Note that if no attribute exists for the given code, it creates it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAttributesCodeTest() throws ApiException {
        String code = null;
        PostAttributesRequest body = null;
        api.patchAttributesCode(code, body);
        // TODO: test validations
    }

    /**
     * Create a new attribute
     *
     * This endpoint allows you to create a new attribute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postAttributesTest() throws ApiException {
        PostAttributesRequest body = null;
        api.postAttributes(body);
        // TODO: test validations
    }

}
