/*
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Catalogs;
import org.openapitools.client.model.PostAppCatalog201Response;
import org.openapitools.client.model.PostAppCatalogRequest;
import org.openapitools.client.model.PostToken400Response;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CatalogsApi
 */
@Disabled
public class CatalogsApiTest {

    private final CatalogsApi api = new CatalogsApi();

    /**
     * Delete a catalog
     *
     * This endpoint allows you to delete a catalog.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppCatalogTest() throws ApiException {
        UUID id = null;
        api.deleteAppCatalog(id);
        // TODO: test validations
    }

    /**
     * Get a catalog
     *
     * This endpoint allows you to get the information about a catalog.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppCatalogTest() throws ApiException {
        UUID id = null;
        PostAppCatalog201Response response = api.getAppCatalog(id);
        // TODO: test validations
    }

    /**
     * Get the list of owned catalogs
     *
     * This endpoint allows you to get the list of catalogs you owned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppCatalogsTest() throws ApiException {
        Integer page = null;
        Integer limit = null;
        Catalogs response = api.getAppCatalogs(page, limit);
        // TODO: test validations
    }

    /**
     * Update a catalog
     *
     * This endpoint allows you to update a catalog.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAppCatalogTest() throws ApiException {
        UUID id = null;
        PostAppCatalogRequest body = null;
        PostAppCatalog201Response response = api.patchAppCatalog(id, body);
        // TODO: test validations
    }

    /**
     * Create a new catalog
     *
     * This endpoint allows you to create a new catalog.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postAppCatalogTest() throws ApiException {
        PostAppCatalogRequest body = null;
        PostAppCatalog201Response response = api.postAppCatalog(body);
        // TODO: test validations
    }

}
