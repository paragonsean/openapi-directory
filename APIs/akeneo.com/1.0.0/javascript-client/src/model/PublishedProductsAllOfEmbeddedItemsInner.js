/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks from './PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks';
import PublishedProductsAllOfEmbeddedItemsInnerAllOfAssociations from './PublishedProductsAllOfEmbeddedItemsInnerAllOfAssociations';
import PublishedProductsAllOfEmbeddedItemsInnerAllOfValues from './PublishedProductsAllOfEmbeddedItemsInnerAllOfValues';

/**
 * The PublishedProductsAllOfEmbeddedItemsInner model module.
 * @module model/PublishedProductsAllOfEmbeddedItemsInner
 * @version 1.0.0
 */
class PublishedProductsAllOfEmbeddedItemsInner {
    /**
     * Constructs a new <code>PublishedProductsAllOfEmbeddedItemsInner</code>.
     * @alias module:model/PublishedProductsAllOfEmbeddedItemsInner
     * @param identifier {String} Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute
     */
    constructor(identifier) { 
        
        PublishedProductsAllOfEmbeddedItemsInner.initialize(this, identifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identifier) { 
        obj['enabled'] = true;
        obj['family'] = 'null';
        obj['identifier'] = identifier;
    }

    /**
     * Constructs a <code>PublishedProductsAllOfEmbeddedItemsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublishedProductsAllOfEmbeddedItemsInner} obj Optional instance to populate.
     * @return {module:model/PublishedProductsAllOfEmbeddedItemsInner} The populated <code>PublishedProductsAllOfEmbeddedItemsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublishedProductsAllOfEmbeddedItemsInner();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('associations')) {
                obj['associations'] = PublishedProductsAllOfEmbeddedItemsInnerAllOfAssociations.constructFromObject(data['associations']);
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('family')) {
                obj['family'] = ApiClient.convertToType(data['family'], 'String');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], ['String']);
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('quantified_associations')) {
                obj['quantified_associations'] = ApiClient.convertToType(data['quantified_associations'], Object);
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = PublishedProductsAllOfEmbeddedItemsInnerAllOfValues.constructFromObject(data['values']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublishedProductsAllOfEmbeddedItemsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublishedProductsAllOfEmbeddedItemsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PublishedProductsAllOfEmbeddedItemsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks.validateJSON(data['_links']);
        }
        // validate the optional field `associations`
        if (data['associations']) { // data not null
          PublishedProductsAllOfEmbeddedItemsInnerAllOfAssociations.validateJSON(data['associations']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['categories'])) {
            throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
        }
        // ensure the json data is a string
        if (data['created'] && !(typeof data['created'] === 'string' || data['created'] instanceof String)) {
            throw new Error("Expected the field `created` to be a primitive type in the JSON string but got " + data['created']);
        }
        // ensure the json data is a string
        if (data['family'] && !(typeof data['family'] === 'string' || data['family'] instanceof String)) {
            throw new Error("Expected the field `family` to be a primitive type in the JSON string but got " + data['family']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['groups'])) {
            throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }
        // validate the optional field `values`
        if (data['values']) { // data not null
          PublishedProductsAllOfEmbeddedItemsInnerAllOfValues.validateJSON(data['values']);
        }

        return true;
    }


}

PublishedProductsAllOfEmbeddedItemsInner.RequiredProperties = ["identifier"];

/**
 * @member {module:model/PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks} _links
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['_links'] = undefined;

/**
 * @member {module:model/PublishedProductsAllOfEmbeddedItemsInnerAllOfAssociations} associations
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['associations'] = undefined;

/**
 * Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified
 * @member {Array.<String>} categories
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['categories'] = undefined;

/**
 * Date of creation
 * @member {String} created
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['created'] = undefined;

/**
 * Whether the published product is enable
 * @member {Boolean} enabled
 * @default true
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['enabled'] = true;

/**
 * <a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements
 * @member {String} family
 * @default 'null'
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['family'] = 'null';

/**
 * Codes of the groups to which the published product belong
 * @member {Array.<String>} groups
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['groups'] = undefined;

/**
 * Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute
 * @member {String} identifier
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['identifier'] = undefined;

/**
 * Warning: associations with quantities are not compatible with the published products. The response will always be empty.
 * @member {Object} quantified_associations
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['quantified_associations'] = undefined;

/**
 * Date of the last update
 * @member {String} updated
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['updated'] = undefined;

/**
 * @member {module:model/PublishedProductsAllOfEmbeddedItemsInnerAllOfValues} values
 */
PublishedProductsAllOfEmbeddedItemsInner.prototype['values'] = undefined;






export default PublishedProductsAllOfEmbeddedItemsInner;

