/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttributesAllOfEmbeddedItemsInnerAllOfGroupLabels from './AttributesAllOfEmbeddedItemsInnerAllOfGroupLabels';
import AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInner from './AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInner';
import GetAssetFamiliesCodeAttributes200ResponseInnerLabels from './GetAssetFamiliesCodeAttributes200ResponseInnerLabels';
import PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks from './PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks';

/**
 * The AttributesAllOfEmbeddedItemsInner model module.
 * @module model/AttributesAllOfEmbeddedItemsInner
 * @version 1.0.0
 */
class AttributesAllOfEmbeddedItemsInner {
    /**
     * Constructs a new <code>AttributesAllOfEmbeddedItemsInner</code>.
     * @alias module:model/AttributesAllOfEmbeddedItemsInner
     * @param code {String} Attribute code
     * @param group {String} Attribute group
     * @param type {module:model/AttributesAllOfEmbeddedItemsInner.TypeEnum} Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.
     */
    constructor(code, group, type) { 
        
        AttributesAllOfEmbeddedItemsInner.initialize(this, code, group, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, group, type) { 
        obj['code'] = code;
        obj['group'] = group;
        obj['localizable'] = false;
        obj['scopable'] = false;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AttributesAllOfEmbeddedItemsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttributesAllOfEmbeddedItemsInner} obj Optional instance to populate.
     * @return {module:model/AttributesAllOfEmbeddedItemsInner} The populated <code>AttributesAllOfEmbeddedItemsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttributesAllOfEmbeddedItemsInner();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('allowed_extensions')) {
                obj['allowed_extensions'] = ApiClient.convertToType(data['allowed_extensions'], ['String']);
            }
            if (data.hasOwnProperty('available_locales')) {
                obj['available_locales'] = ApiClient.convertToType(data['available_locales'], ['String']);
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('date_max')) {
                obj['date_max'] = ApiClient.convertToType(data['date_max'], 'Date');
            }
            if (data.hasOwnProperty('date_min')) {
                obj['date_min'] = ApiClient.convertToType(data['date_min'], 'Date');
            }
            if (data.hasOwnProperty('decimals_allowed')) {
                obj['decimals_allowed'] = ApiClient.convertToType(data['decimals_allowed'], 'Boolean');
            }
            if (data.hasOwnProperty('default_metric_unit')) {
                obj['default_metric_unit'] = ApiClient.convertToType(data['default_metric_unit'], 'String');
            }
            if (data.hasOwnProperty('default_value')) {
                obj['default_value'] = ApiClient.convertToType(data['default_value'], 'Boolean');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('group_labels')) {
                obj['group_labels'] = AttributesAllOfEmbeddedItemsInnerAllOfGroupLabels.constructFromObject(data['group_labels']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = GetAssetFamiliesCodeAttributes200ResponseInnerLabels.constructFromObject(data['labels']);
            }
            if (data.hasOwnProperty('localizable')) {
                obj['localizable'] = ApiClient.convertToType(data['localizable'], 'Boolean');
            }
            if (data.hasOwnProperty('max_characters')) {
                obj['max_characters'] = ApiClient.convertToType(data['max_characters'], 'Number');
            }
            if (data.hasOwnProperty('max_file_size')) {
                obj['max_file_size'] = ApiClient.convertToType(data['max_file_size'], 'String');
            }
            if (data.hasOwnProperty('metric_family')) {
                obj['metric_family'] = ApiClient.convertToType(data['metric_family'], 'String');
            }
            if (data.hasOwnProperty('negative_allowed')) {
                obj['negative_allowed'] = ApiClient.convertToType(data['negative_allowed'], 'Boolean');
            }
            if (data.hasOwnProperty('number_max')) {
                obj['number_max'] = ApiClient.convertToType(data['number_max'], 'String');
            }
            if (data.hasOwnProperty('number_min')) {
                obj['number_min'] = ApiClient.convertToType(data['number_min'], 'String');
            }
            if (data.hasOwnProperty('reference_data_name')) {
                obj['reference_data_name'] = ApiClient.convertToType(data['reference_data_name'], 'String');
            }
            if (data.hasOwnProperty('scopable')) {
                obj['scopable'] = ApiClient.convertToType(data['scopable'], 'Boolean');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'Number');
            }
            if (data.hasOwnProperty('table_configuration')) {
                obj['table_configuration'] = ApiClient.convertToType(data['table_configuration'], [AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInner]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('unique')) {
                obj['unique'] = ApiClient.convertToType(data['unique'], 'Boolean');
            }
            if (data.hasOwnProperty('useable_as_grid_filter')) {
                obj['useable_as_grid_filter'] = ApiClient.convertToType(data['useable_as_grid_filter'], 'Boolean');
            }
            if (data.hasOwnProperty('validation_regexp')) {
                obj['validation_regexp'] = ApiClient.convertToType(data['validation_regexp'], 'String');
            }
            if (data.hasOwnProperty('validation_rule')) {
                obj['validation_rule'] = ApiClient.convertToType(data['validation_rule'], 'String');
            }
            if (data.hasOwnProperty('wysiwyg_enabled')) {
                obj['wysiwyg_enabled'] = ApiClient.convertToType(data['wysiwyg_enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttributesAllOfEmbeddedItemsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttributesAllOfEmbeddedItemsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AttributesAllOfEmbeddedItemsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks.validateJSON(data['_links']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowed_extensions'])) {
            throw new Error("Expected the field `allowed_extensions` to be an array in the JSON data but got " + data['allowed_extensions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['available_locales'])) {
            throw new Error("Expected the field `available_locales` to be an array in the JSON data but got " + data['available_locales']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['default_metric_unit'] && !(typeof data['default_metric_unit'] === 'string' || data['default_metric_unit'] instanceof String)) {
            throw new Error("Expected the field `default_metric_unit` to be a primitive type in the JSON string but got " + data['default_metric_unit']);
        }
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // validate the optional field `group_labels`
        if (data['group_labels']) { // data not null
          AttributesAllOfEmbeddedItemsInnerAllOfGroupLabels.validateJSON(data['group_labels']);
        }
        // validate the optional field `labels`
        if (data['labels']) { // data not null
          GetAssetFamiliesCodeAttributes200ResponseInnerLabels.validateJSON(data['labels']);
        }
        // ensure the json data is a string
        if (data['max_file_size'] && !(typeof data['max_file_size'] === 'string' || data['max_file_size'] instanceof String)) {
            throw new Error("Expected the field `max_file_size` to be a primitive type in the JSON string but got " + data['max_file_size']);
        }
        // ensure the json data is a string
        if (data['metric_family'] && !(typeof data['metric_family'] === 'string' || data['metric_family'] instanceof String)) {
            throw new Error("Expected the field `metric_family` to be a primitive type in the JSON string but got " + data['metric_family']);
        }
        // ensure the json data is a string
        if (data['number_max'] && !(typeof data['number_max'] === 'string' || data['number_max'] instanceof String)) {
            throw new Error("Expected the field `number_max` to be a primitive type in the JSON string but got " + data['number_max']);
        }
        // ensure the json data is a string
        if (data['number_min'] && !(typeof data['number_min'] === 'string' || data['number_min'] instanceof String)) {
            throw new Error("Expected the field `number_min` to be a primitive type in the JSON string but got " + data['number_min']);
        }
        // ensure the json data is a string
        if (data['reference_data_name'] && !(typeof data['reference_data_name'] === 'string' || data['reference_data_name'] instanceof String)) {
            throw new Error("Expected the field `reference_data_name` to be a primitive type in the JSON string but got " + data['reference_data_name']);
        }
        if (data['table_configuration']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['table_configuration'])) {
                throw new Error("Expected the field `table_configuration` to be an array in the JSON data but got " + data['table_configuration']);
            }
            // validate the optional field `table_configuration` (array)
            for (const item of data['table_configuration']) {
                AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['validation_regexp'] && !(typeof data['validation_regexp'] === 'string' || data['validation_regexp'] instanceof String)) {
            throw new Error("Expected the field `validation_regexp` to be a primitive type in the JSON string but got " + data['validation_regexp']);
        }
        // ensure the json data is a string
        if (data['validation_rule'] && !(typeof data['validation_rule'] === 'string' || data['validation_rule'] instanceof String)) {
            throw new Error("Expected the field `validation_rule` to be a primitive type in the JSON string but got " + data['validation_rule']);
        }

        return true;
    }


}

AttributesAllOfEmbeddedItemsInner.RequiredProperties = ["code", "group", "type"];

/**
 * @member {module:model/PAMAssetCategoriesAllOfEmbeddedItemsInnerAllOfLinks} _links
 */
AttributesAllOfEmbeddedItemsInner.prototype['_links'] = undefined;

/**
 * Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`
 * @member {Array.<String>} allowed_extensions
 */
AttributesAllOfEmbeddedItemsInner.prototype['allowed_extensions'] = undefined;

/**
 * To make the attribute locale specfic, specify here for which locales it is specific
 * @member {Array.<String>} available_locales
 */
AttributesAllOfEmbeddedItemsInner.prototype['available_locales'] = undefined;

/**
 * Attribute code
 * @member {String} code
 */
AttributesAllOfEmbeddedItemsInner.prototype['code'] = undefined;

/**
 * Maximum date allowed when the attribute type is `pim_catalog_date`
 * @member {Date} date_max
 */
AttributesAllOfEmbeddedItemsInner.prototype['date_max'] = undefined;

/**
 * Minimum date allowed when the attribute type is `pim_catalog_date`
 * @member {Date} date_min
 */
AttributesAllOfEmbeddedItemsInner.prototype['date_min'] = undefined;

/**
 * Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
 * @member {Boolean} decimals_allowed
 */
AttributesAllOfEmbeddedItemsInner.prototype['decimals_allowed'] = undefined;

/**
 * Default metric unit when the attribute type is `pim_catalog_metric`
 * @member {String} default_metric_unit
 */
AttributesAllOfEmbeddedItemsInner.prototype['default_metric_unit'] = undefined;

/**
 * Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)
 * @member {Boolean} default_value
 */
AttributesAllOfEmbeddedItemsInner.prototype['default_value'] = undefined;

/**
 * Attribute group
 * @member {String} group
 */
AttributesAllOfEmbeddedItemsInner.prototype['group'] = undefined;

/**
 * @member {module:model/AttributesAllOfEmbeddedItemsInnerAllOfGroupLabels} group_labels
 */
AttributesAllOfEmbeddedItemsInner.prototype['group_labels'] = undefined;

/**
 * @member {module:model/GetAssetFamiliesCodeAttributes200ResponseInnerLabels} labels
 */
AttributesAllOfEmbeddedItemsInner.prototype['labels'] = undefined;

/**
 * Whether the attribute is localizable, i.e. can have one value by locale
 * @member {Boolean} localizable
 * @default false
 */
AttributesAllOfEmbeddedItemsInner.prototype['localizable'] = false;

/**
 * Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`
 * @member {Number} max_characters
 */
AttributesAllOfEmbeddedItemsInner.prototype['max_characters'] = undefined;

/**
 * Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`
 * @member {String} max_file_size
 */
AttributesAllOfEmbeddedItemsInner.prototype['max_file_size'] = undefined;

/**
 * Metric family when the attribute type is `pim_catalog_metric`
 * @member {String} metric_family
 */
AttributesAllOfEmbeddedItemsInner.prototype['metric_family'] = undefined;

/**
 * Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`
 * @member {Boolean} negative_allowed
 */
AttributesAllOfEmbeddedItemsInner.prototype['negative_allowed'] = undefined;

/**
 * Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
 * @member {String} number_max
 */
AttributesAllOfEmbeddedItemsInner.prototype['number_max'] = undefined;

/**
 * Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
 * @member {String} number_min
 */
AttributesAllOfEmbeddedItemsInner.prototype['number_min'] = undefined;

/**
 * Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`
 * @member {String} reference_data_name
 */
AttributesAllOfEmbeddedItemsInner.prototype['reference_data_name'] = undefined;

/**
 * Whether the attribute is scopable, i.e. can have one value by channel
 * @member {Boolean} scopable
 * @default false
 */
AttributesAllOfEmbeddedItemsInner.prototype['scopable'] = false;

/**
 * Order of the attribute in its group
 * @member {Number} sort_order
 */
AttributesAllOfEmbeddedItemsInner.prototype['sort_order'] = undefined;

/**
 * Configuration of the Table attribute (columns)
 * @member {Array.<module:model/AttributesAllOfEmbeddedItemsInnerAllOfTableConfigurationInner>} table_configuration
 */
AttributesAllOfEmbeddedItemsInner.prototype['table_configuration'] = undefined;

/**
 * Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.
 * @member {module:model/AttributesAllOfEmbeddedItemsInner.TypeEnum} type
 */
AttributesAllOfEmbeddedItemsInner.prototype['type'] = undefined;

/**
 * Whether two values for the attribute cannot be the same
 * @member {Boolean} unique
 */
AttributesAllOfEmbeddedItemsInner.prototype['unique'] = undefined;

/**
 * Whether the attribute can be used as a filter for the product grid in the PIM user interface
 * @member {Boolean} useable_as_grid_filter
 */
AttributesAllOfEmbeddedItemsInner.prototype['useable_as_grid_filter'] = undefined;

/**
 * Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
 * @member {String} validation_regexp
 */
AttributesAllOfEmbeddedItemsInner.prototype['validation_regexp'] = undefined;

/**
 * Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
 * @member {String} validation_rule
 */
AttributesAllOfEmbeddedItemsInner.prototype['validation_rule'] = undefined;

/**
 * Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`
 * @member {Boolean} wysiwyg_enabled
 */
AttributesAllOfEmbeddedItemsInner.prototype['wysiwyg_enabled'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AttributesAllOfEmbeddedItemsInner['TypeEnum'] = {

    /**
     * value: "pim_catalog_identifier"
     * @const
     */
    "pim_catalog_identifier": "pim_catalog_identifier",

    /**
     * value: "pim_catalog_metric"
     * @const
     */
    "pim_catalog_metric": "pim_catalog_metric",

    /**
     * value: "pim_catalog_number"
     * @const
     */
    "pim_catalog_number": "pim_catalog_number",

    /**
     * value: "pim_catalog_reference_data_multi_select"
     * @const
     */
    "pim_catalog_reference_data_multi_select": "pim_catalog_reference_data_multi_select",

    /**
     * value: "pim_catalog_reference_data_simple_select"
     * @const
     */
    "pim_catalog_reference_data_simple_select": "pim_catalog_reference_data_simple_select",

    /**
     * value: "pim_catalog_simpleselect"
     * @const
     */
    "pim_catalog_simpleselect": "pim_catalog_simpleselect",

    /**
     * value: "pim_catalog_multiselect"
     * @const
     */
    "pim_catalog_multiselect": "pim_catalog_multiselect",

    /**
     * value: "pim_catalog_date"
     * @const
     */
    "pim_catalog_date": "pim_catalog_date",

    /**
     * value: "pim_catalog_textarea"
     * @const
     */
    "pim_catalog_textarea": "pim_catalog_textarea",

    /**
     * value: "pim_catalog_text"
     * @const
     */
    "pim_catalog_text": "pim_catalog_text",

    /**
     * value: "pim_catalog_file"
     * @const
     */
    "pim_catalog_file": "pim_catalog_file",

    /**
     * value: "pim_catalog_image"
     * @const
     */
    "pim_catalog_image": "pim_catalog_image",

    /**
     * value: "pim_catalog_price_collection"
     * @const
     */
    "pim_catalog_price_collection": "pim_catalog_price_collection",

    /**
     * value: "pim_catalog_boolean"
     * @const
     */
    "pim_catalog_boolean": "pim_catalog_boolean",

    /**
     * value: "akeneo_reference_entity"
     * @const
     */
    "akeneo_reference_entity": "akeneo_reference_entity",

    /**
     * value: "akeneo_reference_entity_collection"
     * @const
     */
    "akeneo_reference_entity_collection": "akeneo_reference_entity_collection",

    /**
     * value: "pim_catalog_asset_collection"
     * @const
     */
    "pim_catalog_asset_collection": "pim_catalog_asset_collection"
};



export default AttributesAllOfEmbeddedItemsInner;

