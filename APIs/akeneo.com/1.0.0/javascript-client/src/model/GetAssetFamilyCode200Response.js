/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetFamiliesAllOfEmbeddedItemsInnerAllOfLabels from './AssetFamiliesAllOfEmbeddedItemsInnerAllOfLabels';
import AssetFamiliesAllOfEmbeddedItemsInnerAllOfNamingConvention from './AssetFamiliesAllOfEmbeddedItemsInnerAllOfNamingConvention';
import AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner from './AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner';
import AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner from './AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner';

/**
 * The GetAssetFamilyCode200Response model module.
 * @module model/GetAssetFamilyCode200Response
 * @version 1.0.0
 */
class GetAssetFamilyCode200Response {
    /**
     * Constructs a new <code>GetAssetFamilyCode200Response</code>.
     * @alias module:model/GetAssetFamilyCode200Response
     * @param code {String} Asset family code
     */
    constructor(code) { 
        
        GetAssetFamilyCode200Response.initialize(this, code);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code) { 
        obj['attribute_as_main_media'] = 'First media file or media link attribute that was created';
        obj['code'] = code;
    }

    /**
     * Constructs a <code>GetAssetFamilyCode200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAssetFamilyCode200Response} obj Optional instance to populate.
     * @return {module:model/GetAssetFamilyCode200Response} The populated <code>GetAssetFamilyCode200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAssetFamilyCode200Response();

            if (data.hasOwnProperty('attribute_as_main_media')) {
                obj['attribute_as_main_media'] = ApiClient.convertToType(data['attribute_as_main_media'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = AssetFamiliesAllOfEmbeddedItemsInnerAllOfLabels.constructFromObject(data['labels']);
            }
            if (data.hasOwnProperty('naming_convention')) {
                obj['naming_convention'] = AssetFamiliesAllOfEmbeddedItemsInnerAllOfNamingConvention.constructFromObject(data['naming_convention']);
            }
            if (data.hasOwnProperty('product_link_rules')) {
                obj['product_link_rules'] = ApiClient.convertToType(data['product_link_rules'], [AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner]);
            }
            if (data.hasOwnProperty('transformations')) {
                obj['transformations'] = ApiClient.convertToType(data['transformations'], [AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAssetFamilyCode200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAssetFamilyCode200Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetAssetFamilyCode200Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['attribute_as_main_media'] && !(typeof data['attribute_as_main_media'] === 'string' || data['attribute_as_main_media'] instanceof String)) {
            throw new Error("Expected the field `attribute_as_main_media` to be a primitive type in the JSON string but got " + data['attribute_as_main_media']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `labels`
        if (data['labels']) { // data not null
          AssetFamiliesAllOfEmbeddedItemsInnerAllOfLabels.validateJSON(data['labels']);
        }
        // validate the optional field `naming_convention`
        if (data['naming_convention']) { // data not null
          AssetFamiliesAllOfEmbeddedItemsInnerAllOfNamingConvention.validateJSON(data['naming_convention']);
        }
        if (data['product_link_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['product_link_rules'])) {
                throw new Error("Expected the field `product_link_rules` to be an array in the JSON data but got " + data['product_link_rules']);
            }
            // validate the optional field `product_link_rules` (array)
            for (const item of data['product_link_rules']) {
                AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner.validateJSON(item);
            };
        }
        if (data['transformations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transformations'])) {
                throw new Error("Expected the field `transformations` to be an array in the JSON data but got " + data['transformations']);
            }
            // validate the optional field `transformations` (array)
            for (const item of data['transformations']) {
                AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.validateJSON(item);
            };
        }

        return true;
    }


}

GetAssetFamilyCode200Response.RequiredProperties = ["code"];

/**
 * Attribute code that is used as the main media of the asset family.
 * @member {String} attribute_as_main_media
 * @default 'First media file or media link attribute that was created'
 */
GetAssetFamilyCode200Response.prototype['attribute_as_main_media'] = 'First media file or media link attribute that was created';

/**
 * Asset family code
 * @member {String} code
 */
GetAssetFamilyCode200Response.prototype['code'] = undefined;

/**
 * @member {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfLabels} labels
 */
GetAssetFamilyCode200Response.prototype['labels'] = undefined;

/**
 * @member {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfNamingConvention} naming_convention
 */
GetAssetFamilyCode200Response.prototype['naming_convention'] = undefined;

/**
 * The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.
 * @member {Array.<module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInner>} product_link_rules
 */
GetAssetFamilyCode200Response.prototype['product_link_rules'] = undefined;

/**
 * The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.
 * @member {Array.<module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner>} transformations
 */
GetAssetFamilyCode200Response.prototype['transformations'] = undefined;






export default GetAssetFamilyCode200Response;

