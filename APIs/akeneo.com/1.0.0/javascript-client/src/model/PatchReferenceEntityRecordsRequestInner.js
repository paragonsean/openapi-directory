/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues from './ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues';

/**
 * The PatchReferenceEntityRecordsRequestInner model module.
 * @module model/PatchReferenceEntityRecordsRequestInner
 * @version 1.0.0
 */
class PatchReferenceEntityRecordsRequestInner {
    /**
     * Constructs a new <code>PatchReferenceEntityRecordsRequestInner</code>.
     * @alias module:model/PatchReferenceEntityRecordsRequestInner
     * @param code {String} Code of the record
     */
    constructor(code) { 
        
        PatchReferenceEntityRecordsRequestInner.initialize(this, code);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code) { 
        obj['code'] = code;
    }

    /**
     * Constructs a <code>PatchReferenceEntityRecordsRequestInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchReferenceEntityRecordsRequestInner} obj Optional instance to populate.
     * @return {module:model/PatchReferenceEntityRecordsRequestInner} The populated <code>PatchReferenceEntityRecordsRequestInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchReferenceEntityRecordsRequestInner();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues.constructFromObject(data['values']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchReferenceEntityRecordsRequestInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchReferenceEntityRecordsRequestInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PatchReferenceEntityRecordsRequestInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['created'] && !(typeof data['created'] === 'string' || data['created'] instanceof String)) {
            throw new Error("Expected the field `created` to be a primitive type in the JSON string but got " + data['created']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }
        // validate the optional field `values`
        if (data['values']) { // data not null
          ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues.validateJSON(data['values']);
        }

        return true;
    }


}

PatchReferenceEntityRecordsRequestInner.RequiredProperties = ["code"];

/**
 * Code of the record
 * @member {String} code
 */
PatchReferenceEntityRecordsRequestInner.prototype['code'] = undefined;

/**
 * Date of creation.
 * @member {String} created
 */
PatchReferenceEntityRecordsRequestInner.prototype['created'] = undefined;

/**
 * Date of the last update.
 * @member {String} updated
 */
PatchReferenceEntityRecordsRequestInner.prototype['updated'] = undefined;

/**
 * @member {module:model/ReferenceEntityRecordAllOfEmbeddedItemsInnerAllOfValues} values
 */
PatchReferenceEntityRecordsRequestInner.prototype['values'] = undefined;






export default PatchReferenceEntityRecordsRequestInner;

