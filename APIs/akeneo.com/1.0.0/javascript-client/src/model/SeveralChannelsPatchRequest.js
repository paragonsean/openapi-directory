/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelsAllOfEmbeddedItemsInnerAllOfConversionUnits from './ChannelsAllOfEmbeddedItemsInnerAllOfConversionUnits';
import ChannelsAllOfEmbeddedItemsInnerAllOfLabels from './ChannelsAllOfEmbeddedItemsInnerAllOfLabels';

/**
 * The SeveralChannelsPatchRequest model module.
 * @module model/SeveralChannelsPatchRequest
 * @version 1.0.0
 */
class SeveralChannelsPatchRequest {
    /**
     * Constructs a new <code>SeveralChannelsPatchRequest</code>.
     * @alias module:model/SeveralChannelsPatchRequest
     * @param categoryTree {String} Code of the category tree linked to the channel
     * @param code {String} Channel code
     * @param currencies {Array.<String>} Codes of activated currencies for the channel
     * @param locales {Array.<String>} Codes of activated locales for the channel
     */
    constructor(categoryTree, code, currencies, locales) { 
        
        SeveralChannelsPatchRequest.initialize(this, categoryTree, code, currencies, locales);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, categoryTree, code, currencies, locales) { 
        obj['category_tree'] = categoryTree;
        obj['code'] = code;
        obj['currencies'] = currencies;
        obj['locales'] = locales;
    }

    /**
     * Constructs a <code>SeveralChannelsPatchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SeveralChannelsPatchRequest} obj Optional instance to populate.
     * @return {module:model/SeveralChannelsPatchRequest} The populated <code>SeveralChannelsPatchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SeveralChannelsPatchRequest();

            if (data.hasOwnProperty('category_tree')) {
                obj['category_tree'] = ApiClient.convertToType(data['category_tree'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('conversion_units')) {
                obj['conversion_units'] = ChannelsAllOfEmbeddedItemsInnerAllOfConversionUnits.constructFromObject(data['conversion_units']);
            }
            if (data.hasOwnProperty('currencies')) {
                obj['currencies'] = ApiClient.convertToType(data['currencies'], ['String']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ChannelsAllOfEmbeddedItemsInnerAllOfLabels.constructFromObject(data['labels']);
            }
            if (data.hasOwnProperty('locales')) {
                obj['locales'] = ApiClient.convertToType(data['locales'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SeveralChannelsPatchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SeveralChannelsPatchRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SeveralChannelsPatchRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['category_tree'] && !(typeof data['category_tree'] === 'string' || data['category_tree'] instanceof String)) {
            throw new Error("Expected the field `category_tree` to be a primitive type in the JSON string but got " + data['category_tree']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `conversion_units`
        if (data['conversion_units']) { // data not null
          ChannelsAllOfEmbeddedItemsInnerAllOfConversionUnits.validateJSON(data['conversion_units']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['currencies'])) {
            throw new Error("Expected the field `currencies` to be an array in the JSON data but got " + data['currencies']);
        }
        // validate the optional field `labels`
        if (data['labels']) { // data not null
          ChannelsAllOfEmbeddedItemsInnerAllOfLabels.validateJSON(data['labels']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['locales'])) {
            throw new Error("Expected the field `locales` to be an array in the JSON data but got " + data['locales']);
        }

        return true;
    }


}

SeveralChannelsPatchRequest.RequiredProperties = ["category_tree", "code", "currencies", "locales"];

/**
 * Code of the category tree linked to the channel
 * @member {String} category_tree
 */
SeveralChannelsPatchRequest.prototype['category_tree'] = undefined;

/**
 * Channel code
 * @member {String} code
 */
SeveralChannelsPatchRequest.prototype['code'] = undefined;

/**
 * @member {module:model/ChannelsAllOfEmbeddedItemsInnerAllOfConversionUnits} conversion_units
 */
SeveralChannelsPatchRequest.prototype['conversion_units'] = undefined;

/**
 * Codes of activated currencies for the channel
 * @member {Array.<String>} currencies
 */
SeveralChannelsPatchRequest.prototype['currencies'] = undefined;

/**
 * @member {module:model/ChannelsAllOfEmbeddedItemsInnerAllOfLabels} labels
 */
SeveralChannelsPatchRequest.prototype['labels'] = undefined;

/**
 * Codes of activated locales for the channel
 * @member {Array.<String>} locales
 */
SeveralChannelsPatchRequest.prototype['locales'] = undefined;






export default SeveralChannelsPatchRequest;

