/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner model module.
 * @module model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner
 * @version 1.0.0
 */
class AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner {
    /**
     * Constructs a new <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner</code>.
     * @alias module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner
     * @param attribute {String} 
     * @param mode {String} 
     */
    constructor(attribute, mode) { 
        
        AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner.initialize(this, attribute, mode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attribute, mode) { 
        obj['attribute'] = attribute;
        obj['mode'] = mode;
    }

    /**
     * Constructs a <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner} obj Optional instance to populate.
     * @return {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner} The populated <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner();

            if (data.hasOwnProperty('attribute')) {
                obj['attribute'] = ApiClient.convertToType(data['attribute'], 'String');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['attribute'] && !(typeof data['attribute'] === 'string' || data['attribute'] instanceof String)) {
            throw new Error("Expected the field `attribute` to be a primitive type in the JSON string but got " + data['attribute']);
        }
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }

        return true;
    }


}

AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner.RequiredProperties = ["attribute", "mode"];

/**
 * @member {String} attribute
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner.prototype['attribute'] = undefined;

/**
 * @member {String} channel
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner.prototype['channel'] = undefined;

/**
 * @member {String} locale
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner.prototype['locale'] = undefined;

/**
 * @member {String} mode
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner.prototype['mode'] = undefined;






export default AssetFamiliesAllOfEmbeddedItemsInnerAllOfProductLinkRulesInnerAssignAssetsToInner;

