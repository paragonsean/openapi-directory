/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperations from './AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperations';
import AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerSource from './AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerSource';
import AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerTarget from './AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerTarget';

/**
 * The AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner model module.
 * @module model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner
 * @version 1.0.0
 */
class AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner {
    /**
     * Constructs a new <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner</code>.
     * @alias module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner
     * @param label {String} The name of the transformation
     * @param operations {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperations} 
     * @param source {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerSource} 
     * @param target {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerTarget} 
     */
    constructor(label, operations, source, target) { 
        
        AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.initialize(this, label, operations, source, target);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, label, operations, source, target) { 
        obj['label'] = label;
        obj['operations'] = operations;
        obj['source'] = source;
        obj['target'] = target;
    }

    /**
     * Constructs a <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner} obj Optional instance to populate.
     * @return {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner} The populated <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner();

            if (data.hasOwnProperty('filename_prefix')) {
                obj['filename_prefix'] = ApiClient.convertToType(data['filename_prefix'], 'String');
            }
            if (data.hasOwnProperty('filename_suffix')) {
                obj['filename_suffix'] = ApiClient.convertToType(data['filename_suffix'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('operations')) {
                obj['operations'] = AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperations.constructFromObject(data['operations']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerTarget.constructFromObject(data['target']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['filename_prefix'] && !(typeof data['filename_prefix'] === 'string' || data['filename_prefix'] instanceof String)) {
            throw new Error("Expected the field `filename_prefix` to be a primitive type in the JSON string but got " + data['filename_prefix']);
        }
        // ensure the json data is a string
        if (data['filename_suffix'] && !(typeof data['filename_suffix'] === 'string' || data['filename_suffix'] instanceof String)) {
            throw new Error("Expected the field `filename_suffix` to be a primitive type in the JSON string but got " + data['filename_suffix']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // validate the optional field `operations`
        if (data['operations']) { // data not null
          AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperations.validateJSON(data['operations']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerSource.validateJSON(data['source']);
        }
        // validate the optional field `target`
        if (data['target']) { // data not null
          AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerTarget.validateJSON(data['target']);
        }

        return true;
    }


}

AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.RequiredProperties = ["label", "operations", "source", "target"];

/**
 * The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>.
 * @member {String} filename_prefix
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.prototype['filename_prefix'] = undefined;

/**
 * The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>.
 * @member {String} filename_suffix
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.prototype['filename_suffix'] = undefined;

/**
 * The name of the transformation
 * @member {String} label
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.prototype['label'] = undefined;

/**
 * @member {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerOperations} operations
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.prototype['operations'] = undefined;

/**
 * @member {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerSource} source
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.prototype['source'] = undefined;

/**
 * @member {module:model/AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInnerTarget} target
 */
AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner.prototype['target'] = undefined;






export default AssetFamiliesAllOfEmbeddedItemsInnerAllOfTransformationsInner;

