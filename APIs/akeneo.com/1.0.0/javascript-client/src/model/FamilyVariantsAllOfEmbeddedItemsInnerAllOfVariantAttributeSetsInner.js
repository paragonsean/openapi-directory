/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner model module.
 * @module model/FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner
 * @version 1.0.0
 */
class FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner {
    /**
     * Constructs a new <code>FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner</code>.
     * Enrichment level
     * @alias module:model/FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner
     * @param axes {Array.<String>} Codes of attributes used as variant axes
     * @param level {Number} Enrichment level
     */
    constructor(axes, level) { 
        
        FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner.initialize(this, axes, level);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, axes, level) { 
        obj['axes'] = axes;
        obj['level'] = level;
    }

    /**
     * Constructs a <code>FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner} obj Optional instance to populate.
     * @return {module:model/FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner} The populated <code>FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], ['String']);
            }
            if (data.hasOwnProperty('axes')) {
                obj['axes'] = ApiClient.convertToType(data['axes'], ['String']);
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['attributes'])) {
            throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['axes'])) {
            throw new Error("Expected the field `axes` to be an array in the JSON data but got " + data['axes']);
        }

        return true;
    }


}

FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner.RequiredProperties = ["axes", "level"];

/**
 * Codes of attributes bind to this enrichment level
 * @member {Array.<String>} attributes
 */
FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner.prototype['attributes'] = undefined;

/**
 * Codes of attributes used as variant axes
 * @member {Array.<String>} axes
 */
FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner.prototype['axes'] = undefined;

/**
 * Enrichment level
 * @member {Number} level
 */
FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner.prototype['level'] = undefined;






export default FamilyVariantsAllOfEmbeddedItemsInnerAllOfVariantAttributeSetsInner;

