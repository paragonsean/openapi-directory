/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostAssetMediaFilesRequest model module.
 * @module model/PostAssetMediaFilesRequest
 * @version 1.0.0
 */
class PostAssetMediaFilesRequest {
    /**
     * Constructs a new <code>PostAssetMediaFilesRequest</code>.
     * @alias module:model/PostAssetMediaFilesRequest
     * @param file {File} The binary of the media file
     */
    constructor(file) { 
        
        PostAssetMediaFilesRequest.initialize(this, file);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, file) { 
        obj['file'] = file;
    }

    /**
     * Constructs a <code>PostAssetMediaFilesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostAssetMediaFilesRequest} obj Optional instance to populate.
     * @return {module:model/PostAssetMediaFilesRequest} The populated <code>PostAssetMediaFilesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostAssetMediaFilesRequest();

            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], File);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostAssetMediaFilesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostAssetMediaFilesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostAssetMediaFilesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PostAssetMediaFilesRequest.RequiredProperties = ["file"];

/**
 * The binary of the media file
 * @member {File} file
 */
PostAssetMediaFilesRequest.prototype['file'] = undefined;






export default PostAssetMediaFilesRequest;

