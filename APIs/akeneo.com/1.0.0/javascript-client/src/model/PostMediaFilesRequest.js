/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostMediaFilesRequest model module.
 * @module model/PostMediaFilesRequest
 * @version 1.0.0
 */
class PostMediaFilesRequest {
    /**
     * Constructs a new <code>PostMediaFilesRequest</code>.
     * @alias module:model/PostMediaFilesRequest
     * @param file {File} The binaries of the file
     */
    constructor(file) { 
        
        PostMediaFilesRequest.initialize(this, file);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, file) { 
        obj['file'] = file;
    }

    /**
     * Constructs a <code>PostMediaFilesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostMediaFilesRequest} obj Optional instance to populate.
     * @return {module:model/PostMediaFilesRequest} The populated <code>PostMediaFilesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostMediaFilesRequest();

            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], File);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ApiClient.convertToType(data['product'], 'String');
            }
            if (data.hasOwnProperty('product_model')) {
                obj['product_model'] = ApiClient.convertToType(data['product_model'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostMediaFilesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostMediaFilesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostMediaFilesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['product'] && !(typeof data['product'] === 'string' || data['product'] instanceof String)) {
            throw new Error("Expected the field `product` to be a primitive type in the JSON string but got " + data['product']);
        }
        // ensure the json data is a string
        if (data['product_model'] && !(typeof data['product_model'] === 'string' || data['product_model'] instanceof String)) {
            throw new Error("Expected the field `product_model` to be a primitive type in the JSON string but got " + data['product_model']);
        }

        return true;
    }


}

PostMediaFilesRequest.RequiredProperties = ["file"];

/**
 * The binaries of the file
 * @member {File} file
 */
PostMediaFilesRequest.prototype['file'] = undefined;

/**
 * The product to which the media file will be associated. It is a JSON string that follows this format '{\"identifier\":\"product_identifier\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product_model` field, but not both at the same time.
 * @member {String} product
 */
PostMediaFilesRequest.prototype['product'] = undefined;

/**
 * The product model to which the media file will be associated. It is a JSON string that follows this format '{\"code\":\"product_model_code\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product` field, but not both at the same time.
 * @member {String} product_model
 */
PostMediaFilesRequest.prototype['product_model'] = undefined;






export default PostMediaFilesRequest;

