/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductListAllOfValuesLinkedData model module.
 * @module model/ProductListAllOfValuesLinkedData
 * @version 1.0.0
 */
class ProductListAllOfValuesLinkedData {
    /**
     * Constructs a new <code>ProductListAllOfValuesLinkedData</code>.
     * Object containing labels of attribute options (only available since the 5.0 and when query parameter \&quot;with_attribute_options\&quot; is set to \&quot;true\&quot;). See &lt;a href&#x3D;&#39;/concepts/products.html#the-linked_data-format&#39;&gt;the &#x60;linked_data&#x60; format&lt;/a&gt; section for more details.
     * @alias module:model/ProductListAllOfValuesLinkedData
     */
    constructor() { 
        
        ProductListAllOfValuesLinkedData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductListAllOfValuesLinkedData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductListAllOfValuesLinkedData} obj Optional instance to populate.
     * @return {module:model/ProductListAllOfValuesLinkedData} The populated <code>ProductListAllOfValuesLinkedData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductListAllOfValuesLinkedData();

            if (data.hasOwnProperty('attribute')) {
                obj['attribute'] = ApiClient.convertToType(data['attribute'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductListAllOfValuesLinkedData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductListAllOfValuesLinkedData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['attribute'] && !(typeof data['attribute'] === 'string' || data['attribute'] instanceof String)) {
            throw new Error("Expected the field `attribute` to be a primitive type in the JSON string but got " + data['attribute']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }

        return true;
    }


}



/**
 * @member {String} attribute
 */
ProductListAllOfValuesLinkedData.prototype['attribute'] = undefined;

/**
 * @member {String} code
 */
ProductListAllOfValuesLinkedData.prototype['code'] = undefined;

/**
 * @member {Object} labels
 */
ProductListAllOfValuesLinkedData.prototype['labels'] = undefined;






export default ProductListAllOfValuesLinkedData;

