/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetAppCatalogsMappingSchemaProduct200Response model module.
 * @module model/GetAppCatalogsMappingSchemaProduct200Response
 * @version 1.0.0
 */
class GetAppCatalogsMappingSchemaProduct200Response {
    /**
     * Constructs a new <code>GetAppCatalogsMappingSchemaProduct200Response</code>.
     * @alias module:model/GetAppCatalogsMappingSchemaProduct200Response
     * @param schema {String} $schema indicates which product mapping schema version your app uses
     * @param properties {Object} list and describe the targets your app expects
     */
    constructor(schema, properties) { 
        
        GetAppCatalogsMappingSchemaProduct200Response.initialize(this, schema, properties);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, schema, properties) { 
        obj['$schema'] = schema;
        obj['properties'] = properties;
    }

    /**
     * Constructs a <code>GetAppCatalogsMappingSchemaProduct200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAppCatalogsMappingSchemaProduct200Response} obj Optional instance to populate.
     * @return {module:model/GetAppCatalogsMappingSchemaProduct200Response} The populated <code>GetAppCatalogsMappingSchemaProduct200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAppCatalogsMappingSchemaProduct200Response();

            if (data.hasOwnProperty('$comment')) {
                obj['$comment'] = ApiClient.convertToType(data['$comment'], 'String');
            }
            if (data.hasOwnProperty('$id')) {
                obj['$id'] = ApiClient.convertToType(data['$id'], 'String');
            }
            if (data.hasOwnProperty('$schema')) {
                obj['$schema'] = ApiClient.convertToType(data['$schema'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], Object);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAppCatalogsMappingSchemaProduct200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAppCatalogsMappingSchemaProduct200Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetAppCatalogsMappingSchemaProduct200Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['$comment'] && !(typeof data['$comment'] === 'string' || data['$comment'] instanceof String)) {
            throw new Error("Expected the field `$comment` to be a primitive type in the JSON string but got " + data['$comment']);
        }
        // ensure the json data is a string
        if (data['$id'] && !(typeof data['$id'] === 'string' || data['$id'] instanceof String)) {
            throw new Error("Expected the field `$id` to be a primitive type in the JSON string but got " + data['$id']);
        }
        // ensure the json data is a string
        if (data['$schema'] && !(typeof data['$schema'] === 'string' || data['$schema'] instanceof String)) {
            throw new Error("Expected the field `$schema` to be a primitive type in the JSON string but got " + data['$schema']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

GetAppCatalogsMappingSchemaProduct200Response.RequiredProperties = ["$schema", "properties"];

/**
 * allows you to add a comment
 * @member {String} $comment
 */
GetAppCatalogsMappingSchemaProduct200Response.prototype['$comment'] = undefined;

/**
 * id of your schema
 * @member {String} $id
 */
GetAppCatalogsMappingSchemaProduct200Response.prototype['$id'] = undefined;

/**
 * $schema indicates which product mapping schema version your app uses
 * @member {String} $schema
 */
GetAppCatalogsMappingSchemaProduct200Response.prototype['$schema'] = undefined;

/**
 * allows you to add a description of your mapping schema
 * @member {String} description
 */
GetAppCatalogsMappingSchemaProduct200Response.prototype['description'] = undefined;

/**
 * list and describe the targets your app expects
 * @member {Object} properties
 */
GetAppCatalogsMappingSchemaProduct200Response.prototype['properties'] = undefined;

/**
 * allows you to add a title to your mapping schema
 * @member {String} title
 */
GetAppCatalogsMappingSchemaProduct200Response.prototype['title'] = undefined;

/**
 * should always be \"object\"
 * @member {String} type
 */
GetAppCatalogsMappingSchemaProduct200Response.prototype['type'] = undefined;






export default GetAppCatalogsMappingSchemaProduct200Response;

