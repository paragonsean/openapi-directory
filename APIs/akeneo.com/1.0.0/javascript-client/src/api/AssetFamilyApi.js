/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssetFamilies from '../model/AssetFamilies';
import GetAssetFamilyCode200Response from '../model/GetAssetFamilyCode200Response';
import PostToken400Response from '../model/PostToken400Response';

/**
* AssetFamily service.
* @module api/AssetFamilyApi
* @version 1.0.0
*/
export default class AssetFamilyApi {

    /**
    * Constructs a new AssetFamilyApi. 
    * @alias module:api/AssetFamilyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAssetFamilies operation.
     * @callback module:api/AssetFamilyApi~getAssetFamiliesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssetFamilies} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of asset families
     * This endpoint allows you to get a list of asset families. Asset families are paginated.
     * @param {Object} opts Optional parameters
     * @param {String} [searchAfter = 'cursor to the first page')] Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section
     * @param {module:api/AssetFamilyApi~getAssetFamiliesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssetFamilies}
     */
    getAssetFamilies(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'search_after': opts['searchAfter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', '_embedded', '_links', 'code', 'message'];
      let returnType = AssetFamilies;
      return this.apiClient.callApi(
        '/api/rest/v1/asset-families', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetFamilyCode operation.
     * @callback module:api/AssetFamilyApi~getAssetFamilyCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAssetFamilyCode200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an asset family
     * This endpoint allows you to get the information about a given asset family.
     * @param {String} code Code of the resource
     * @param {module:api/AssetFamilyApi~getAssetFamilyCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAssetFamilyCode200Response}
     */
    getAssetFamilyCode(code, callback) {
      let postBody = null;
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getAssetFamilyCode");
      }

      let pathParams = {
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = GetAssetFamilyCode200Response;
      return this.apiClient.callApi(
        '/api/rest/v1/asset-families/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchAssetFamilyCode operation.
     * @callback module:api/AssetFamilyApi~patchAssetFamilyCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update/create an asset family
     * This endpoint allows you to update a given asset family. Note that if the asset family does not already exist, it creates it.
     * @param {String} code Code of the resource
     * @param {module:model/GetAssetFamilyCode200Response} body 
     * @param {module:api/AssetFamilyApi~patchAssetFamilyCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    patchAssetFamilyCode(code, body, callback) {
      let postBody = body;
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling patchAssetFamilyCode");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchAssetFamilyCode");
      }

      let pathParams = {
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message', '_links'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/rest/v1/asset-families/{code}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
