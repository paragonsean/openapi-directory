/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PostToken200Response from '../model/PostToken200Response';
import PostToken400Response from '../model/PostToken400Response';
import PostTokenRequest from '../model/PostTokenRequest';

/**
* Authentication service.
* @module api/AuthenticationApi
* @version 1.0.0
*/
export default class AuthenticationApi {

    /**
    * Constructs a new AuthenticationApi. 
    * @alias module:api/AuthenticationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postToken operation.
     * @callback module:api/AuthenticationApi~postTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostToken200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get authentication token
     * This endpoint allows you to get an authentication token. No need to be authenticated to use this endpoint.
     * @param {String} contentType Equal to 'application/json' or 'application/x-www-form-urlencoded', no other value allowed
     * @param {String} authorization Equal to 'Basic xx', where 'xx' is the base 64 encoding of the client id and secret. Find out how to generate them in the <a href=\"/documentation/authentication.html#client-idsecret-generation\">Client ID/secret generation</a> section.
     * @param {Object} opts Optional parameters
     * @param {module:model/PostTokenRequest} [body] 
     * @param {module:api/AuthenticationApi~postTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostToken200Response}
     */
    postToken(contentType, authorization, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling postToken");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling postToken");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-type': contentType,
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'access_token', 'expires_in', 'refresh_token', 'token_type', 'code', 'message', '_links'];
      let returnType = PostToken200Response;
      return this.apiClient.callApi(
        '/api/oauth/v1/token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
