/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MeasurementFamiliesGetList200Response from '../model/MeasurementFamiliesGetList200Response';
import PatchMeasurementFamilies200ResponseInner from '../model/PatchMeasurementFamilies200ResponseInner';
import PostToken400Response from '../model/PostToken400Response';

/**
* MeasurementFamily service.
* @module api/MeasurementFamilyApi
* @version 1.0.0
*/
export default class MeasurementFamilyApi {

    /**
    * Constructs a new MeasurementFamilyApi. 
    * @alias module:api/MeasurementFamilyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the measurementFamiliesGetList operation.
     * @callback module:api/MeasurementFamilyApi~measurementFamiliesGetListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MeasurementFamiliesGetList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of measurement families
     * This endpoint allows you to get a list of measurement families.
     * @param {module:api/MeasurementFamilyApi~measurementFamiliesGetListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MeasurementFamiliesGetList200Response}
     */
    measurementFamiliesGetList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = MeasurementFamiliesGetList200Response;
      return this.apiClient.callApi(
        '/api/rest/v1/measurement-families', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMeasurementFamilies operation.
     * @callback module:api/MeasurementFamilyApi~patchMeasurementFamiliesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PatchMeasurementFamilies200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update/create several measurement families
     * This endpoint allows you to update and/or create several measurement families at once.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/MeasurementFamiliesGetList200Response>} [body] 
     * @param {module:api/MeasurementFamilyApi~patchMeasurementFamiliesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PatchMeasurementFamilies200ResponseInner>}
     */
    patchMeasurementFamilies(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = [PatchMeasurementFamilies200ResponseInner];
      return this.apiClient.callApi(
        '/api/rest/v1/measurement-families', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
