/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetAppCatalogsMappingSchemaProduct200Response from '../model/GetAppCatalogsMappingSchemaProduct200Response';
import PostToken400Response from '../model/PostToken400Response';

/**
* MappingSchemaForProducts service.
* @module api/MappingSchemaForProductsApi
* @version 1.0.0
*/
export default class MappingSchemaForProductsApi {

    /**
    * Constructs a new MappingSchemaForProductsApi. 
    * @alias module:api/MappingSchemaForProductsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteAppCatalogsMappingSchemaProduct operation.
     * @callback module:api/MappingSchemaForProductsApi~deleteAppCatalogsMappingSchemaProductCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the product mapping schema related to a catalog
     * This endpoint allows you to delete the product mapping schema related to a catalog
     * @param {String} id Catalog ID
     * @param {module:api/MappingSchemaForProductsApi~deleteAppCatalogsMappingSchemaProductCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAppCatalogsMappingSchemaProduct(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteAppCatalogsMappingSchemaProduct");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/rest/v1/catalogs/{id}/mapping-schemas/product', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAppCatalogsMappingSchemaProduct operation.
     * @callback module:api/MappingSchemaForProductsApi~getAppCatalogsMappingSchemaProductCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAppCatalogsMappingSchemaProduct200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the product mapping schema related to a catalog
     * This endpoint allows you to retrieve the product mapping schema related to a catalog
     * @param {String} id Catalog ID
     * @param {module:api/MappingSchemaForProductsApi~getAppCatalogsMappingSchemaProductCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAppCatalogsMappingSchemaProduct200Response}
     */
    getAppCatalogsMappingSchemaProduct(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getAppCatalogsMappingSchemaProduct");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = GetAppCatalogsMappingSchemaProduct200Response;
      return this.apiClient.callApi(
        '/api/rest/v1/catalogs/{id}/mapping-schemas/product', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putAppCatalogsMappingSchemaProduct operation.
     * @callback module:api/MappingSchemaForProductsApi~putAppCatalogsMappingSchemaProductCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update the product mapping schema related to a catalog
     * This endpoint allows you to create or update the product mapping schema related to a catalog
     * @param {String} id Catalog ID
     * @param {Object} opts Optional parameters
     * @param {module:model/GetAppCatalogsMappingSchemaProduct200Response} [body] 
     * @param {module:api/MappingSchemaForProductsApi~putAppCatalogsMappingSchemaProductCallback} callback The callback function, accepting three arguments: error, data, response
     */
    putAppCatalogsMappingSchemaProduct(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling putAppCatalogsMappingSchemaProduct");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/rest/v1/catalogs/{id}/mapping-schemas/product', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
