/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner from '../model/GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner';
import PostToken400Response from '../model/PostToken400Response';

/**
* AssetAttributeOption service.
* @module api/AssetAttributeOptionApi
* @version 1.0.0
*/
export default class AssetAttributeOptionApi {

    /**
    * Constructs a new AssetAttributeOptionApi. 
    * @alias module:api/AssetAttributeOptionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAssetAttributesAttributeCodeOptionsCode operation.
     * @callback module:api/AssetAttributeOptionApi~getAssetAttributesAttributeCodeOptionsCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an attribute option for a given attribute of a given asset family
     * This endpoint allows you to get the information about a given asset attribute option.
     * @param {String} assetFamilyCode Code of the asset family
     * @param {String} attributeCode Code of the attribute
     * @param {String} code Code of the resource
     * @param {module:api/AssetAttributeOptionApi~getAssetAttributesAttributeCodeOptionsCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner}
     */
    getAssetAttributesAttributeCodeOptionsCode(assetFamilyCode, attributeCode, code, callback) {
      let postBody = null;
      // verify the required parameter 'assetFamilyCode' is set
      if (assetFamilyCode === undefined || assetFamilyCode === null) {
        throw new Error("Missing the required parameter 'assetFamilyCode' when calling getAssetAttributesAttributeCodeOptionsCode");
      }
      // verify the required parameter 'attributeCode' is set
      if (attributeCode === undefined || attributeCode === null) {
        throw new Error("Missing the required parameter 'attributeCode' when calling getAssetAttributesAttributeCodeOptionsCode");
      }
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getAssetAttributesAttributeCodeOptionsCode");
      }

      let pathParams = {
        'asset_family_code': assetFamilyCode,
        'attribute_code': attributeCode,
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner;
      return this.apiClient.callApi(
        '/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetFamilyAttributesAttributeCodeOptions operation.
     * @callback module:api/AssetAttributeOptionApi~getAssetFamilyAttributesAttributeCodeOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of attribute options of a given attribute for a given asset family
     * This endpoint allows you to get a list of attribute options for a given asset family.
     * @param {String} assetFamilyCode Code of the asset family
     * @param {String} attributeCode Code of the attribute
     * @param {module:api/AssetAttributeOptionApi~getAssetFamilyAttributesAttributeCodeOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner>}
     */
    getAssetFamilyAttributesAttributeCodeOptions(assetFamilyCode, attributeCode, callback) {
      let postBody = null;
      // verify the required parameter 'assetFamilyCode' is set
      if (assetFamilyCode === undefined || assetFamilyCode === null) {
        throw new Error("Missing the required parameter 'assetFamilyCode' when calling getAssetFamilyAttributesAttributeCodeOptions");
      }
      // verify the required parameter 'attributeCode' is set
      if (attributeCode === undefined || attributeCode === null) {
        throw new Error("Missing the required parameter 'attributeCode' when calling getAssetFamilyAttributesAttributeCodeOptions");
      }

      let pathParams = {
        'asset_family_code': assetFamilyCode,
        'attribute_code': attributeCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = [GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner];
      return this.apiClient.callApi(
        '/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchAssetAttributesAttributeCodeOptionsCode operation.
     * @callback module:api/AssetAttributeOptionApi~patchAssetAttributesAttributeCodeOptionsCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update/create an asset attribute option for a given asset family
     * This endpoint allows you to update a given option for a given attribute and a given asset family. Learn more about the <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given asset family, it creates it.
     * @param {String} assetFamilyCode Code of the asset family
     * @param {String} attributeCode Code of the attribute
     * @param {String} code Code of the resource
     * @param {module:model/GetAssetFamilyAttributesAttributeCodeOptions200ResponseInner} body 
     * @param {module:api/AssetAttributeOptionApi~patchAssetAttributesAttributeCodeOptionsCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    patchAssetAttributesAttributeCodeOptionsCode(assetFamilyCode, attributeCode, code, body, callback) {
      let postBody = body;
      // verify the required parameter 'assetFamilyCode' is set
      if (assetFamilyCode === undefined || assetFamilyCode === null) {
        throw new Error("Missing the required parameter 'assetFamilyCode' when calling patchAssetAttributesAttributeCodeOptionsCode");
      }
      // verify the required parameter 'attributeCode' is set
      if (attributeCode === undefined || attributeCode === null) {
        throw new Error("Missing the required parameter 'attributeCode' when calling patchAssetAttributesAttributeCodeOptionsCode");
      }
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling patchAssetAttributesAttributeCodeOptionsCode");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchAssetAttributesAttributeCodeOptionsCode");
      }

      let pathParams = {
        'asset_family_code': assetFamilyCode,
        'attribute_code': attributeCode,
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message', '_links'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
