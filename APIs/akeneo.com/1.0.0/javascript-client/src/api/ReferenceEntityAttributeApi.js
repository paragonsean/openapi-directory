/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetReferenceEntitiesCodeAttributes200ResponseInner from '../model/GetReferenceEntitiesCodeAttributes200ResponseInner';
import PostToken400Response from '../model/PostToken400Response';

/**
* ReferenceEntityAttribute service.
* @module api/ReferenceEntityAttributeApi
* @version 1.0.0
*/
export default class ReferenceEntityAttributeApi {

    /**
    * Constructs a new ReferenceEntityAttributeApi. 
    * @alias module:api/ReferenceEntityAttributeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getReferenceEntitiesCodeAttributes operation.
     * @callback module:api/ReferenceEntityAttributeApi~getReferenceEntitiesCodeAttributesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetReferenceEntitiesCodeAttributes200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of attributes of a given reference entity
     * This endpoint allows you to get the list of attributes of a given reference entity.
     * @param {String} referenceEntityCode Code of the reference entity
     * @param {module:api/ReferenceEntityAttributeApi~getReferenceEntitiesCodeAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetReferenceEntitiesCodeAttributes200ResponseInner>}
     */
    getReferenceEntitiesCodeAttributes(referenceEntityCode, callback) {
      let postBody = null;
      // verify the required parameter 'referenceEntityCode' is set
      if (referenceEntityCode === undefined || referenceEntityCode === null) {
        throw new Error("Missing the required parameter 'referenceEntityCode' when calling getReferenceEntitiesCodeAttributes");
      }

      let pathParams = {
        'reference_entity_code': referenceEntityCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = [GetReferenceEntitiesCodeAttributes200ResponseInner];
      return this.apiClient.callApi(
        '/api/rest/v1/reference-entities/{reference_entity_code}/attributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getReferenceEntityAttributesCode operation.
     * @callback module:api/ReferenceEntityAttributeApi~getReferenceEntityAttributesCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetReferenceEntitiesCodeAttributes200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an attribute of a given reference entity
     * This endpoint allows you to get the information about a given attribute for a given reference entity.
     * @param {String} referenceEntityCode Code of the reference entity
     * @param {String} code Code of the resource
     * @param {module:api/ReferenceEntityAttributeApi~getReferenceEntityAttributesCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetReferenceEntitiesCodeAttributes200ResponseInner}
     */
    getReferenceEntityAttributesCode(referenceEntityCode, code, callback) {
      let postBody = null;
      // verify the required parameter 'referenceEntityCode' is set
      if (referenceEntityCode === undefined || referenceEntityCode === null) {
        throw new Error("Missing the required parameter 'referenceEntityCode' when calling getReferenceEntityAttributesCode");
      }
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getReferenceEntityAttributesCode");
      }

      let pathParams = {
        'reference_entity_code': referenceEntityCode,
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = GetReferenceEntitiesCodeAttributes200ResponseInner;
      return this.apiClient.callApi(
        '/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchReferenceEntityAttributesCode operation.
     * @callback module:api/ReferenceEntityAttributeApi~patchReferenceEntityAttributesCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update/create an attribute of a given reference entity
     * This endpoint allows you to update a given attribute for a given renference entity. Note that if the attribute does not already exist for the given reference entity, it creates it.
     * @param {String} referenceEntityCode Code of the reference entity
     * @param {String} code Code of the resource
     * @param {module:model/GetReferenceEntitiesCodeAttributes200ResponseInner} body 
     * @param {module:api/ReferenceEntityAttributeApi~patchReferenceEntityAttributesCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    patchReferenceEntityAttributesCode(referenceEntityCode, code, body, callback) {
      let postBody = body;
      // verify the required parameter 'referenceEntityCode' is set
      if (referenceEntityCode === undefined || referenceEntityCode === null) {
        throw new Error("Missing the required parameter 'referenceEntityCode' when calling patchReferenceEntityAttributesCode");
      }
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling patchReferenceEntityAttributesCode");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling patchReferenceEntityAttributesCode");
      }

      let pathParams = {
        'reference_entity_code': referenceEntityCode,
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message', '_links'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
