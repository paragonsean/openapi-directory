/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetLocalesCode200Response from '../model/GetLocalesCode200Response';
import Locales from '../model/Locales';
import PostToken400Response from '../model/PostToken400Response';

/**
* Locale service.
* @module api/LocaleApi
* @version 1.0.0
*/
export default class LocaleApi {

    /**
    * Constructs a new LocaleApi. 
    * @alias module:api/LocaleApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getLocales operation.
     * @callback module:api/LocaleApi~getLocalesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Locales} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of locales
     * This endpoint allows you to get a list of locales. Locales are paginated and sorted by code.
     * @param {Object} opts Optional parameters
     * @param {String} [search] Filter locales, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section
     * @param {Number} [page = 1)] Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section
     * @param {Number} [limit = 10)] Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section
     * @param {Boolean} [withCount = false)] Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way
     * @param {module:api/LocaleApi~getLocalesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Locales}
     */
    getLocales(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'search': opts['search'],
        'page': opts['page'],
        'limit': opts['limit'],
        'with_count': opts['withCount']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', '_embedded', '_links', 'current_page', 'code', 'message'];
      let returnType = Locales;
      return this.apiClient.callApi(
        '/api/rest/v1/locales', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLocalesCode operation.
     * @callback module:api/LocaleApi~getLocalesCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetLocalesCode200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a locale
     * This endpoint allows you to get the information about a given locale.
     * @param {String} code Code of the resource
     * @param {module:api/LocaleApi~getLocalesCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetLocalesCode200Response}
     */
    getLocalesCode(code, callback) {
      let postBody = null;
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getLocalesCode");
      }

      let pathParams = {
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = GetLocalesCode200Response;
      return this.apiClient.callApi(
        '/api/rest/v1/locales/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
