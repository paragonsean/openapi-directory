/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PostAssetMediaFilesRequest from '../model/PostAssetMediaFilesRequest';
import PostToken400Response from '../model/PostToken400Response';

/**
* ReferenceEntityMediaFile service.
* @module api/ReferenceEntityMediaFileApi
* @version 1.0.0
*/
export default class ReferenceEntityMediaFileApi {

    /**
    * Constructs a new ReferenceEntityMediaFileApi. 
    * @alias module:api/ReferenceEntityMediaFileApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getReferenceEntityMediaFilesCode operation.
     * @callback module:api/ReferenceEntityMediaFileApi~getReferenceEntityMediaFilesCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download the media file associated to a reference entity or a record
     * This endpoint allows you to download a given media file that is associated with a reference entity or a record.
     * @param {String} code Code of the resource
     * @param {module:api/ReferenceEntityMediaFileApi~getReferenceEntityMediaFilesCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getReferenceEntityMediaFilesCode(code, callback) {
      let postBody = null;
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getReferenceEntityMediaFilesCode");
      }

      let pathParams = {
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/rest/v1/reference-entities-media-files/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postReferenceEntityMediaFiles operation.
     * @callback module:api/ReferenceEntityMediaFileApi~postReferenceEntityMediaFilesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new media file for a reference entity or a record
     * This endpoint allows you to create a new media file and associate it to the image of a reference entity, or to the main image or to an attribute value of a record.
     * @param {String} contentType Equal to 'multipart/form-data', no other value allowed
     * @param {Object} opts Optional parameters
     * @param {module:model/PostAssetMediaFilesRequest} [body] 
     * @param {module:api/ReferenceEntityMediaFileApi~postReferenceEntityMediaFilesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postReferenceEntityMediaFiles(contentType, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling postReferenceEntityMediaFiles");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-type': contentType
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'code', 'message', '_links'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/rest/v1/reference-entities-media-files', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
