/**
 * OpenTrials API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFile_allOf_pages.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFile_allOf_pages::OAIFile_allOf_pages(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFile_allOf_pages::OAIFile_allOf_pages() {
    this->initializeModel();
}

OAIFile_allOf_pages::~OAIFile_allOf_pages() {}

void OAIFile_allOf_pages::initializeModel() {

    m_num_isSet = false;
    m_num_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIFile_allOf_pages::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFile_allOf_pages::fromJsonObject(QJsonObject json) {

    m_num_isValid = ::OpenAPI::fromJsonValue(m_num, json[QString("num")]);
    m_num_isSet = !json[QString("num")].isNull() && m_num_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIFile_allOf_pages::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFile_allOf_pages::asJsonObject() const {
    QJsonObject obj;
    if (m_num_isSet) {
        obj.insert(QString("num"), ::OpenAPI::toJsonValue(m_num));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

qint32 OAIFile_allOf_pages::getNum() const {
    return m_num;
}
void OAIFile_allOf_pages::setNum(const qint32 &num) {
    m_num = num;
    m_num_isSet = true;
}

bool OAIFile_allOf_pages::is_num_Set() const{
    return m_num_isSet;
}

bool OAIFile_allOf_pages::is_num_Valid() const{
    return m_num_isValid;
}

QString OAIFile_allOf_pages::getText() const {
    return m_text;
}
void OAIFile_allOf_pages::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIFile_allOf_pages::is_text_Set() const{
    return m_text_isSet;
}

bool OAIFile_allOf_pages::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIFile_allOf_pages::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_num_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFile_allOf_pages::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_num_isValid && m_text_isValid && true;
}

} // namespace OpenAPI
