/**
 * OpenTrials API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileSummary::OAIFileSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileSummary::OAIFileSummary() {
    this->initializeModel();
}

OAIFileSummary::~OAIFileSummary() {}

void OAIFileSummary::initializeModel() {

    m_documentcloud_id_isSet = false;
    m_documentcloud_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_sha1_isSet = false;
    m_sha1_isValid = false;

    m_source_url_isSet = false;
    m_source_url_isValid = false;
}

void OAIFileSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileSummary::fromJsonObject(QJsonObject json) {

    m_documentcloud_id_isValid = ::OpenAPI::fromJsonValue(m_documentcloud_id, json[QString("documentcloud_id")]);
    m_documentcloud_id_isSet = !json[QString("documentcloud_id")].isNull() && m_documentcloud_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_sha1_isValid = ::OpenAPI::fromJsonValue(m_sha1, json[QString("sha1")]);
    m_sha1_isSet = !json[QString("sha1")].isNull() && m_sha1_isValid;

    m_source_url_isValid = ::OpenAPI::fromJsonValue(m_source_url, json[QString("source_url")]);
    m_source_url_isSet = !json[QString("source_url")].isNull() && m_source_url_isValid;
}

QString OAIFileSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_documentcloud_id_isSet) {
        obj.insert(QString("documentcloud_id"), ::OpenAPI::toJsonValue(m_documentcloud_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_sha1_isSet) {
        obj.insert(QString("sha1"), ::OpenAPI::toJsonValue(m_sha1));
    }
    if (m_source_url_isSet) {
        obj.insert(QString("source_url"), ::OpenAPI::toJsonValue(m_source_url));
    }
    return obj;
}

QString OAIFileSummary::getDocumentcloudId() const {
    return m_documentcloud_id;
}
void OAIFileSummary::setDocumentcloudId(const QString &documentcloud_id) {
    m_documentcloud_id = documentcloud_id;
    m_documentcloud_id_isSet = true;
}

bool OAIFileSummary::is_documentcloud_id_Set() const{
    return m_documentcloud_id_isSet;
}

bool OAIFileSummary::is_documentcloud_id_Valid() const{
    return m_documentcloud_id_isValid;
}

QString OAIFileSummary::getId() const {
    return m_id;
}
void OAIFileSummary::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIFileSummary::is_id_Set() const{
    return m_id_isSet;
}

bool OAIFileSummary::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIFileSummary::getSha1() const {
    return m_sha1;
}
void OAIFileSummary::setSha1(const QString &sha1) {
    m_sha1 = sha1;
    m_sha1_isSet = true;
}

bool OAIFileSummary::is_sha1_Set() const{
    return m_sha1_isSet;
}

bool OAIFileSummary::is_sha1_Valid() const{
    return m_sha1_isValid;
}

QString OAIFileSummary::getSourceUrl() const {
    return m_source_url;
}
void OAIFileSummary::setSourceUrl(const QString &source_url) {
    m_source_url = source_url;
    m_source_url_isSet = true;
}

bool OAIFileSummary::is_source_url_Set() const{
    return m_source_url_isSet;
}

bool OAIFileSummary::is_source_url_Valid() const{
    return m_source_url_isValid;
}

bool OAIFileSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_documentcloud_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sha1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
