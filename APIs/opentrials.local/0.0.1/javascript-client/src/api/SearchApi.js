/**
 * OpenTrials API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AutocompleteResults from '../model/AutocompleteResults';
import ErrorResponse from '../model/ErrorResponse';
import FDADocumentSearchResults from '../model/FDADocumentSearchResults';

/**
* Search service.
* @module api/SearchApi
* @version 0.0.1
*/
export default class SearchApi {

    /**
    * Constructs a new SearchApi. 
    * @alias module:api/SearchApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the autocomplete operation.
     * @callback module:api/SearchApi~autocompleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutocompleteResults} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Autocomplete search feature for supported database entities (`location`). It has the same options as a regular `search` operation, with an extra **required** `in` parameter indicating the entity type to search.
     * @param {module:model/String} _in The entity to search for
     * @param {Object} opts Optional parameters
     * @param {String} [q] The search query
     * @param {Number} [page = 1)] The page number
     * @param {Number} [perPage = 20)] Number of items per page
     * @param {module:api/SearchApi~autocompleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutocompleteResults}
     */
    autocomplete(_in, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter '_in' is set
      if (_in === undefined || _in === null) {
        throw new Error("Missing the required parameter '_in' when calling autocomplete");
      }

      let pathParams = {
        'in': _in
      };
      let queryParams = {
        'q': opts['q'],
        'page': opts['page'],
        'per_page': opts['perPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AutocompleteResults;
      return this.apiClient.callApi(
        '/search/autocomplete/{in}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchFDADocuments operation.
     * @callback module:api/SearchApi~searchFDADocumentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FDADocumentSearchResults} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search the FDA documents
     * @param {Object} opts Optional parameters
     * @param {String} [q] The search query (follows the [ElasticSearch Query String](https://www.elastic.co/guide/en/elasticsearch/reference/2.3/query-dsl-query-string-query.html#query-string-syntax) syntax)
     * @param {String} [text] Search query on the documents file's text (follows the [ElasticSearch Simple Query String](https://www.elastic.co/guide/en/elasticsearch/reference/2.3/query-dsl-simple-query-string-query.html#_simple_query_string_syntax) syntax)
     * @param {Number} [page = 1)] The page number
     * @param {Number} [perPage = 20)] Number of items per page
     * @param {module:api/SearchApi~searchFDADocumentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FDADocumentSearchResults}
     */
    searchFDADocuments(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'q': opts['q'],
        'text': opts['text'],
        'page': opts['page'],
        'per_page': opts['perPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FDADocumentSearchResults;
      return this.apiClient.callApi(
        '/search/fda_documents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
