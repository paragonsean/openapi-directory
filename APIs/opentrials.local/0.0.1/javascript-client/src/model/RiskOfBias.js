/**
 * OpenTrials API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RiskOfBiasCriteria from './RiskOfBiasCriteria';

/**
 * The RiskOfBias model module.
 * @module model/RiskOfBias
 * @version 0.0.1
 */
class RiskOfBias {
    /**
     * Constructs a new <code>RiskOfBias</code>.
     * @alias module:model/RiskOfBias
     * @param id {String} 
     * @param sourceId {String} 
     * @param sourceUrl {String} 
     * @param studyId {String} 
     */
    constructor(id, sourceId, sourceUrl, studyId) { 
        
        RiskOfBias.initialize(this, id, sourceId, sourceUrl, studyId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, sourceId, sourceUrl, studyId) { 
        obj['id'] = id;
        obj['source_id'] = sourceId;
        obj['source_url'] = sourceUrl;
        obj['study_id'] = studyId;
    }

    /**
     * Constructs a <code>RiskOfBias</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskOfBias} obj Optional instance to populate.
     * @return {module:model/RiskOfBias} The populated <code>RiskOfBias</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskOfBias();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('risk_of_bias_criteria')) {
                obj['risk_of_bias_criteria'] = ApiClient.convertToType(data['risk_of_bias_criteria'], [RiskOfBiasCriteria]);
            }
            if (data.hasOwnProperty('source_id')) {
                obj['source_id'] = ApiClient.convertToType(data['source_id'], 'String');
            }
            if (data.hasOwnProperty('source_url')) {
                obj['source_url'] = ApiClient.convertToType(data['source_url'], 'String');
            }
            if (data.hasOwnProperty('study_id')) {
                obj['study_id'] = ApiClient.convertToType(data['study_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskOfBias</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskOfBias</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RiskOfBias.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['risk_of_bias_criteria']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['risk_of_bias_criteria'])) {
                throw new Error("Expected the field `risk_of_bias_criteria` to be an array in the JSON data but got " + data['risk_of_bias_criteria']);
            }
            // validate the optional field `risk_of_bias_criteria` (array)
            for (const item of data['risk_of_bias_criteria']) {
                RiskOfBiasCriteria.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['source_id'] && !(typeof data['source_id'] === 'string' || data['source_id'] instanceof String)) {
            throw new Error("Expected the field `source_id` to be a primitive type in the JSON string but got " + data['source_id']);
        }
        // ensure the json data is a string
        if (data['source_url'] && !(typeof data['source_url'] === 'string' || data['source_url'] instanceof String)) {
            throw new Error("Expected the field `source_url` to be a primitive type in the JSON string but got " + data['source_url']);
        }
        // ensure the json data is a string
        if (data['study_id'] && !(typeof data['study_id'] === 'string' || data['study_id'] instanceof String)) {
            throw new Error("Expected the field `study_id` to be a primitive type in the JSON string but got " + data['study_id']);
        }

        return true;
    }


}

RiskOfBias.RequiredProperties = ["id", "source_id", "source_url", "study_id"];

/**
 * @member {String} id
 */
RiskOfBias.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/RiskOfBiasCriteria>} risk_of_bias_criteria
 */
RiskOfBias.prototype['risk_of_bias_criteria'] = undefined;

/**
 * @member {String} source_id
 */
RiskOfBias.prototype['source_id'] = undefined;

/**
 * @member {String} source_url
 */
RiskOfBias.prototype['source_url'] = undefined;

/**
 * @member {String} study_id
 */
RiskOfBias.prototype['study_id'] = undefined;






export default RiskOfBias;

