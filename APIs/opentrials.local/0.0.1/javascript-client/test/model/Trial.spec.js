/**
 * OpenTrials API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenTrialsApi);
  }
}(this, function(expect, OpenTrialsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenTrialsApi.Trial();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Trial', function() {
    it('should create an instance of Trial', function() {
      // uncomment below and update the code to test Trial
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be.a(OpenTrialsApi.Trial);
    });

    it('should have the property ageRange (base name: "age_range")', function() {
      // uncomment below and update the code to test the property ageRange
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property briefSummary (base name: "brief_summary")', function() {
      // uncomment below and update the code to test the property briefSummary
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property completionDate (base name: "completion_date")', function() {
      // uncomment below and update the code to test the property completionDate
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property conditions (base name: "conditions")', function() {
      // uncomment below and update the code to test the property conditions
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property discrepancies (base name: "discrepancies")', function() {
      // uncomment below and update the code to test the property discrepancies
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property documents (base name: "documents")', function() {
      // uncomment below and update the code to test the property documents
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property hasPublishedResults (base name: "has_published_results")', function() {
      // uncomment below and update the code to test the property hasPublishedResults
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property identifiers (base name: "identifiers")', function() {
      // uncomment below and update the code to test the property identifiers
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property interventions (base name: "interventions")', function() {
      // uncomment below and update the code to test the property interventions
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property locations (base name: "locations")', function() {
      // uncomment below and update the code to test the property locations
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property organisations (base name: "organisations")', function() {
      // uncomment below and update the code to test the property organisations
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property persons (base name: "persons")', function() {
      // uncomment below and update the code to test the property persons
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property publicTitle (base name: "public_title")', function() {
      // uncomment below and update the code to test the property publicTitle
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property publications (base name: "publications")', function() {
      // uncomment below and update the code to test the property publications
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property records (base name: "records")', function() {
      // uncomment below and update the code to test the property records
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property recruitmentStatus (base name: "recruitment_status")', function() {
      // uncomment below and update the code to test the property recruitmentStatus
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property registrationDate (base name: "registration_date")', function() {
      // uncomment below and update the code to test the property registrationDate
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property resultsExemptionDate (base name: "results_exemption_date")', function() {
      // uncomment below and update the code to test the property resultsExemptionDate
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property risksOfBias (base name: "risks_of_bias")', function() {
      // uncomment below and update the code to test the property risksOfBias
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property sourceId (base name: "source_id")', function() {
      // uncomment below and update the code to test the property sourceId
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property sources (base name: "sources")', function() {
      // uncomment below and update the code to test the property sources
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property studyPhase (base name: "study_phase")', function() {
      // uncomment below and update the code to test the property studyPhase
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property targetSampleSize (base name: "target_sample_size")', function() {
      // uncomment below and update the code to test the property targetSampleSize
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new OpenTrialsApi.Trial();
      //expect(instance).to.be();
    });

  });

}));
