# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_all_of_pages import FileAllOfPages
from openapi_server import util


class File(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documentcloud_id: str=None, id: str=None, sha1: str=None, source_url: str=None, pages: List[FileAllOfPages]=None):
        """File - a model defined in OpenAPI

        :param documentcloud_id: The documentcloud_id of this File.
        :param id: The id of this File.
        :param sha1: The sha1 of this File.
        :param source_url: The source_url of this File.
        :param pages: The pages of this File.
        """
        self.openapi_types = {
            'documentcloud_id': str,
            'id': str,
            'sha1': str,
            'source_url': str,
            'pages': List[FileAllOfPages]
        }

        self.attribute_map = {
            'documentcloud_id': 'documentcloud_id',
            'id': 'id',
            'sha1': 'sha1',
            'source_url': 'source_url',
            'pages': 'pages'
        }

        self._documentcloud_id = documentcloud_id
        self._id = id
        self._sha1 = sha1
        self._source_url = source_url
        self._pages = pages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'File':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The File of this File.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documentcloud_id(self):
        """Gets the documentcloud_id of this File.


        :return: The documentcloud_id of this File.
        :rtype: str
        """
        return self._documentcloud_id

    @documentcloud_id.setter
    def documentcloud_id(self, documentcloud_id):
        """Sets the documentcloud_id of this File.


        :param documentcloud_id: The documentcloud_id of this File.
        :type documentcloud_id: str
        """

        self._documentcloud_id = documentcloud_id

    @property
    def id(self):
        """Gets the id of this File.

        ID of the file

        :return: The id of this File.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this File.

        ID of the file

        :param id: The id of this File.
        :type id: str
        """

        self._id = id

    @property
    def sha1(self):
        """Gets the sha1 of this File.


        :return: The sha1 of this File.
        :rtype: str
        """
        return self._sha1

    @sha1.setter
    def sha1(self, sha1):
        """Sets the sha1 of this File.


        :param sha1: The sha1 of this File.
        :type sha1: str
        """

        self._sha1 = sha1

    @property
    def source_url(self):
        """Gets the source_url of this File.

        URL of origin for this file

        :return: The source_url of this File.
        :rtype: str
        """
        return self._source_url

    @source_url.setter
    def source_url(self, source_url):
        """Sets the source_url of this File.

        URL of origin for this file

        :param source_url: The source_url of this File.
        :type source_url: str
        """

        self._source_url = source_url

    @property
    def pages(self):
        """Gets the pages of this File.

        Array with text of each of the file's pages

        :return: The pages of this File.
        :rtype: List[FileAllOfPages]
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this File.

        Array with text of each of the file's pages

        :param pages: The pages of this File.
        :type pages: List[FileAllOfPages]
        """

        self._pages = pages
