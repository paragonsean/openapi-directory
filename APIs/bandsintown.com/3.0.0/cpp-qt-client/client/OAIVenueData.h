/**
 * Bandsintown API
 * # What is the Bandsintown API? The Bandsintown API is designed for artists and enterprises representing artists.  It offers read-only access to artist info and artist events: - artist info: returns the link to the Bandsintown artist page, the link to the artist photo, the current number of trackers and more - artist events: returns the list of events including their date and time, venue name and location, ticket links, lineup, description and the link to the Bandsintown event page  Note you can specify if you only want to return upcoming events, past events, all events, or events within a given date range.  # Getting Started - In order to use the Bandsintown API, you must read and accept our Terms and Conditions below and you must have written consent from Bandsintown Inc. Any other use of the Bandsintown API is prohibited. [Contact Bandsintown](http://help.bandsintown.com/) to tell us what you plan to do and request your personal application ID. - Find out about the API methods available and the format of the API responses below. Select the method you wish to use and try it out online with the app ID provided to you. - Call our Bandsintown API with the app ID provided straight from your website or back-end platform and choose which element of the API response you wish to display. Scroll to the bottom of this page to find out about the Models used. 
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVenueData.h
 *
 * 
 */

#ifndef OAIVenueData_H
#define OAIVenueData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVenueData : public OAIObject {
public:
    OAIVenueData();
    OAIVenueData(QString json);
    ~OAIVenueData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getLatitude() const;
    void setLatitude(const QString &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    QString getLongitude() const;
    void setLongitude(const QString &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    QString m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVenueData)

#endif // OAIVenueData_H
