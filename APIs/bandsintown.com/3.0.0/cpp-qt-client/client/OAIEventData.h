/**
 * Bandsintown API
 * # What is the Bandsintown API? The Bandsintown API is designed for artists and enterprises representing artists.  It offers read-only access to artist info and artist events: - artist info: returns the link to the Bandsintown artist page, the link to the artist photo, the current number of trackers and more - artist events: returns the list of events including their date and time, venue name and location, ticket links, lineup, description and the link to the Bandsintown event page  Note you can specify if you only want to return upcoming events, past events, all events, or events within a given date range.  # Getting Started - In order to use the Bandsintown API, you must read and accept our Terms and Conditions below and you must have written consent from Bandsintown Inc. Any other use of the Bandsintown API is prohibited. [Contact Bandsintown](http://help.bandsintown.com/) to tell us what you plan to do and request your personal application ID. - Find out about the API methods available and the format of the API responses below. Select the method you wish to use and try it out online with the app ID provided to you. - Call our Bandsintown API with the app ID provided straight from your website or back-end platform and choose which element of the API response you wish to display. Scroll to the bottom of this page to find out about the Models used. 
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventData.h
 *
 * 
 */

#ifndef OAIEventData_H
#define OAIEventData_H

#include <QJsonObject>

#include "OAIOfferData.h"
#include "OAIVenueData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOfferData;
class OAIVenueData;

class OAIEventData : public OAIObject {
public:
    OAIEventData();
    OAIEventData(QString json);
    ~OAIEventData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getArtistId() const;
    void setArtistId(const qint32 &artist_id);
    bool is_artist_id_Set() const;
    bool is_artist_id_Valid() const;

    QString getDatetime() const;
    void setDatetime(const QString &datetime);
    bool is_datetime_Set() const;
    bool is_datetime_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getLineup() const;
    void setLineup(const QList<QString> &lineup);
    bool is_lineup_Set() const;
    bool is_lineup_Valid() const;

    QList<OAIOfferData> getOffers() const;
    void setOffers(const QList<OAIOfferData> &offers);
    bool is_offers_Set() const;
    bool is_offers_Valid() const;

    QString getOnSaleDatetime() const;
    void setOnSaleDatetime(const QString &on_sale_datetime);
    bool is_on_sale_datetime_Set() const;
    bool is_on_sale_datetime_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIVenueData getVenue() const;
    void setVenue(const OAIVenueData &venue);
    bool is_venue_Set() const;
    bool is_venue_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_artist_id;
    bool m_artist_id_isSet;
    bool m_artist_id_isValid;

    QString m_datetime;
    bool m_datetime_isSet;
    bool m_datetime_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_lineup;
    bool m_lineup_isSet;
    bool m_lineup_isValid;

    QList<OAIOfferData> m_offers;
    bool m_offers_isSet;
    bool m_offers_isValid;

    QString m_on_sale_datetime;
    bool m_on_sale_datetime_isSet;
    bool m_on_sale_datetime_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIVenueData m_venue;
    bool m_venue_isSet;
    bool m_venue_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventData)

#endif // OAIEventData_H
