openapi: 3.0.1
info:
  contact:
    name: Bandsintown
    url: https://bandsintown.com/
  description: |
    # What is the Bandsintown API?
    The Bandsintown API is designed for artists and enterprises representing artists.

    It offers read-only access to artist info and artist events:
    - artist info: returns the link to the Bandsintown artist page, the link to the artist photo, the current number of trackers and more
    - artist events: returns the list of events including their date and time, venue name and location, ticket links, lineup, description and the link to the Bandsintown event page

    Note you can specify if you only want to return upcoming events, past events, all events, or events within a given date range.

    # Getting Started
    - In order to use the Bandsintown API, you must read and accept our Terms and Conditions below and you must have written consent from Bandsintown Inc. Any other use of the Bandsintown API is prohibited. [Contact Bandsintown](http://help.bandsintown.com/) to tell us what you plan to do and request your personal application ID.
    - Find out about the API methods available and the format of the API responses below. Select the method you wish to use and try it out online with the app ID provided to you.
    - Call our Bandsintown API with the app ID provided straight from your website or back-end platform and choose which element of the API response you wish to display. Scroll to the bottom of this page to find out about the Models used.
  license:
    name: Terms and Conditions
    url: https://corp.bandsintown.com/data-applications-terms
  title: Bandsintown API
  version: 3.0.0
  x-apisguru-categories:
  - social
  x-logo:
    url: https://twitter.com/Bandsintown/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://api.swaggerhub.com/apis/Bandsintown/PublicAPI/3.0.0/swagger.yaml
    version: "2.0"
  x-providerName: bandsintown.com
servers:
- url: https://rest.bandsintown.com/
paths:
  /artists/{artistname}:
    get:
      description: |
        Get artist information
      operationId: artist
      parameters:
      - description: "The name of the artist. If it contains one of the special characters\
          \ below, please be sure to replace it by the corresponding code: for / use\
          \ %252F, for ? use %253F, for * use %252A, and for \" use %27C"
        in: path
        name: artistname
        required: true
        schema:
          type: string
      - description: The application ID assigned to you by Bandsintown
        in: query
        name: app_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistData'
          description: 200 response
      summary: Get artist information
      tags:
      - artist information
      x-openapi-router-controller: openapi_server.controllers.artist_information_controller
  /artists/{artistname}/events:
    get:
      description: |
        artist events
      operationId: artist_events
      parameters:
      - description: "The name of the artist. If it contains one of the special characters\
          \ below, please be sure to replace it by the corresponding code: for / use\
          \ %252F, for ? use %253F, for * use %252A, and for \" use %27C"
        in: path
        name: artistname
        required: true
        schema:
          type: string
      - description: The application ID assigned to you by Bandsintown
        in: query
        name: app_id
        required: true
        schema:
          type: string
      - description: "Can be one of the following values: \"upcoming\", \"past\",\
          \ \"all\", or a date range e.g. \"2015-05-05,2017-05-05\". If not specified,\
          \ only upcoming shows are returned"
        in: query
        name: date
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventData'
                type: array
          description: Shows within a date range for the selected artist
      summary: "Get upcoming, past, or all artist events, or events within a date\
        \ range"
      tags:
      - artist events
      x-openapi-router-controller: openapi_server.controllers.artist_events_controller
components:
  schemas:
    ArtistData:
      example:
        thumb_url: https://s3.amazonaws.com/bit-photos/thumb/7481529.jpeg
        mbid: 0ab49580-c84f-44d4-875f-d83760ea2cfe
        facebook_page_url: https://www.facebook.com/maroon5
        image_url: https://s3.amazonaws.com/bit-photos/large/7481529.jpeg
        name: Maroon 5
        id: 510
        tracker_count: 0
        upcoming_event_count: 6
        url: http://www.bandsintown.com/Maroon5?came_from=67
      properties:
        facebook_page_url:
          example: https://www.facebook.com/maroon5
          format: url
          title: facebook_page_url
          type: string
        id:
          example: 510
          title: id
          type: integer
        image_url:
          example: https://s3.amazonaws.com/bit-photos/large/7481529.jpeg
          format: url
          title: image_url
          type: string
        mbid:
          example: 0ab49580-c84f-44d4-875f-d83760ea2cfe
          title: mbid
          type: string
        name:
          example: Maroon 5
          title: name
          type: string
        thumb_url:
          example: https://s3.amazonaws.com/bit-photos/thumb/7481529.jpeg
          format: url
          title: thumb_url
          type: string
        tracker_count:
          title: tracker_count
          type: integer
        upcoming_event_count:
          title: upcoming_event_count
          type: integer
        url:
          example: http://www.bandsintown.com/Maroon5?came_from=67
          format: url
          title: url
          type: string
      required:
      - facebook_page_url
      - image_url
      - mbid
      - name
      - thumb_url
      - tracker_count
      - upcoming_event_count
      - url
      title: ArtistData
      type: object
    EventData:
      example:
        offers:
        - type: Tickets
          url: http://www.bandsintown.com/event/13722599/buy_tickets?app_id=foo&artist=Skrillex&came_from=67
          status: available
        - type: Tickets
          url: http://www.bandsintown.com/event/13722599/buy_tickets?app_id=foo&artist=Skrillex&came_from=67
          status: available
        venue:
          country: United States
          city: Las Vegas
          latitude: "36.12714"
          name: Encore Beach Club
          region: NV
          longitude: "-115.1629562"
        datetime: 2017-03-19T11:00:00
        on_sale_datetime: 2017-03-01T18:00:00
        description: This is a description
        lineup:
        - lineup
        - lineup
        id: "13722599"
        artist_id: "438314"
        url: http://www.bandsintown.com/event/13722599?app_id=foo&artist=Skrillex&came_from=67
      properties:
        artist_id:
          example: "438314"
          format: integer
          title: artist_id
          type: string
        datetime:
          example: 2017-03-19T11:00:00
          format: datetime
          title: datetime
          type: string
        description:
          example: This is a description
          title: description
          type: string
        id:
          example: "13722599"
          format: integer
          title: id
          type: string
        lineup:
          items:
            type: string
          title: lineup
          type: array
        offers:
          items:
            $ref: '#/components/schemas/OfferData'
          title: offers
          type: array
        on_sale_datetime:
          example: 2017-03-01T18:00:00
          format: datetime
          title: on_sale_datetime
          type: string
        url:
          example: http://www.bandsintown.com/event/13722599?app_id=foo&artist=Skrillex&came_from=67
          format: url
          title: url
          type: string
        venue:
          $ref: '#/components/schemas/VenueData'
      required:
      - artist_id
      - datetime
      - id
      - lineup
      - offers
      - on_sale_datetime
      - url
      - venue
      title: EventData
      type: object
    OfferData:
      example:
        type: Tickets
        url: http://www.bandsintown.com/event/13722599/buy_tickets?app_id=foo&artist=Skrillex&came_from=67
        status: available
      properties:
        status:
          example: available
          title: status
          type: string
        type:
          example: Tickets
          title: type
          type: string
        url:
          example: http://www.bandsintown.com/event/13722599/buy_tickets?app_id=foo&artist=Skrillex&came_from=67
          format: url
          title: url
          type: string
      required:
      - status
      - type
      - url
      title: OfferData
      type: object
    VenueData:
      example:
        country: United States
        city: Las Vegas
        latitude: "36.12714"
        name: Encore Beach Club
        region: NV
        longitude: "-115.1629562"
      properties:
        city:
          example: Las Vegas
          title: city
          type: string
        country:
          example: United States
          title: country
          type: string
        latitude:
          example: "36.12714"
          format: double
          title: latitude
          type: string
        longitude:
          example: "-115.1629562"
          format: double
          title: longitude
          type: string
        name:
          example: Encore Beach Club
          title: name
          type: string
        region:
          example: NV
          title: region
          type: string
      required:
      - city
      - country
      - latitude
      - longitude
      - name
      - region
      title: VenueData
      type: object
x-original-swagger-version: "2.0"
