# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.campaign_event_result import CampaignEventResult
from openapi_server import util


class GetCampaignEventResult200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_result: List[CampaignEventResult]=None):
        """GetCampaignEventResult200ResponseData - a model defined in OpenAPI

        :param event_result: The event_result of this GetCampaignEventResult200ResponseData.
        """
        self.openapi_types = {
            'event_result': List[CampaignEventResult]
        }

        self.attribute_map = {
            'event_result': 'eventResult'
        }

        self._event_result = event_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCampaignEventResult200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getCampaignEventResult_200_response_data of this GetCampaignEventResult200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_result(self):
        """Gets the event_result of this GetCampaignEventResult200ResponseData.


        :return: The event_result of this GetCampaignEventResult200ResponseData.
        :rtype: List[CampaignEventResult]
        """
        return self._event_result

    @event_result.setter
    def event_result(self, event_result):
        """Sets the event_result of this GetCampaignEventResult200ResponseData.


        :param event_result: The event_result of this GetCampaignEventResult200ResponseData.
        :type event_result: List[CampaignEventResult]
        """
        if event_result is None:
            raise ValueError("Invalid value for `event_result`, must not be `None`")

        self._event_result = event_result
