# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_directives_compliance200_response_data_directives_compliance import GetDirectivesCompliance200ResponseDataDirectivesCompliance
from openapi_server import util


class GetDirectivesCompliance200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, directives_compliance: GetDirectivesCompliance200ResponseDataDirectivesCompliance=None):
        """GetDirectivesCompliance200ResponseData - a model defined in OpenAPI

        :param directives_compliance: The directives_compliance of this GetDirectivesCompliance200ResponseData.
        """
        self.openapi_types = {
            'directives_compliance': GetDirectivesCompliance200ResponseDataDirectivesCompliance
        }

        self.attribute_map = {
            'directives_compliance': 'directivesCompliance'
        }

        self._directives_compliance = directives_compliance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDirectivesCompliance200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getDirectivesCompliance_200_response_data of this GetDirectivesCompliance200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def directives_compliance(self):
        """Gets the directives_compliance of this GetDirectivesCompliance200ResponseData.


        :return: The directives_compliance of this GetDirectivesCompliance200ResponseData.
        :rtype: GetDirectivesCompliance200ResponseDataDirectivesCompliance
        """
        return self._directives_compliance

    @directives_compliance.setter
    def directives_compliance(self, directives_compliance):
        """Sets the directives_compliance of this GetDirectivesCompliance200ResponseData.


        :param directives_compliance: The directives_compliance of this GetDirectivesCompliance200ResponseData.
        :type directives_compliance: GetDirectivesCompliance200ResponseDataDirectivesCompliance
        """
        if directives_compliance is None:
            raise ValueError("Invalid value for `directives_compliance`, must not be `None`")

        self._directives_compliance = directives_compliance
