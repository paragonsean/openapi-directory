# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_directives_compliance200_response_data_directives_compliance import GetDirectivesCompliance200ResponseDataDirectivesCompliance
from openapi_server import util


class ComplianceDirectiveIdData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, directive_compliance: GetDirectivesCompliance200ResponseDataDirectivesCompliance=None):
        """ComplianceDirectiveIdData - a model defined in OpenAPI

        :param directive_compliance: The directive_compliance of this ComplianceDirectiveIdData.
        """
        self.openapi_types = {
            'directive_compliance': GetDirectivesCompliance200ResponseDataDirectivesCompliance
        }

        self.attribute_map = {
            'directive_compliance': 'directiveCompliance'
        }

        self._directive_compliance = directive_compliance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceDirectiveIdData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The compliance_directive_id_data of this ComplianceDirectiveIdData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def directive_compliance(self):
        """Gets the directive_compliance of this ComplianceDirectiveIdData.


        :return: The directive_compliance of this ComplianceDirectiveIdData.
        :rtype: GetDirectivesCompliance200ResponseDataDirectivesCompliance
        """
        return self._directive_compliance

    @directive_compliance.setter
    def directive_compliance(self, directive_compliance):
        """Sets the directive_compliance of this ComplianceDirectiveIdData.


        :param directive_compliance: The directive_compliance of this ComplianceDirectiveIdData.
        :type directive_compliance: GetDirectivesCompliance200ResponseDataDirectivesCompliance
        """
        if directive_compliance is None:
            raise ValueError("Invalid value for `directive_compliance`, must not be `None`")

        self._directive_compliance = directive_compliance
