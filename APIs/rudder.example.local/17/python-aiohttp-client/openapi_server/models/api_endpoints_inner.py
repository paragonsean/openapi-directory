# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiEndpointsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_name: str=None, http_verb: object=None):
        """ApiEndpointsInner - a model defined in OpenAPI

        :param endpoint_name: The endpoint_name of this ApiEndpointsInner.
        :param http_verb: The http_verb of this ApiEndpointsInner.
        """
        self.openapi_types = {
            'endpoint_name': str,
            'http_verb': object
        }

        self.attribute_map = {
            'endpoint_name': 'endpointName',
            'http_verb': 'httpVerb'
        }

        self._endpoint_name = endpoint_name
        self._http_verb = http_verb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiEndpointsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api_endpoints_inner of this ApiEndpointsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_name(self):
        """Gets the endpoint_name of this ApiEndpointsInner.

        The endpoint name for key and its description for value

        :return: The endpoint_name of this ApiEndpointsInner.
        :rtype: str
        """
        return self._endpoint_name

    @endpoint_name.setter
    def endpoint_name(self, endpoint_name):
        """Sets the endpoint_name of this ApiEndpointsInner.

        The endpoint name for key and its description for value

        :param endpoint_name: The endpoint_name of this ApiEndpointsInner.
        :type endpoint_name: str
        """

        self._endpoint_name = endpoint_name

    @property
    def http_verb(self):
        """Gets the http_verb of this ApiEndpointsInner.


        :return: The http_verb of this ApiEndpointsInner.
        :rtype: object
        """
        return self._http_verb

    @http_verb.setter
    def http_verb(self, http_verb):
        """Sets the http_verb of this ApiEndpointsInner.


        :param http_verb: The http_verb of this ApiEndpointsInner.
        :type http_verb: object
        """

        self._http_verb = http_verb
