# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeFullManagementTechnologyDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cfengine_keys: List[str]=None, cfengine_user: str=None):
        """NodeFullManagementTechnologyDetails - a model defined in OpenAPI

        :param cfengine_keys: The cfengine_keys of this NodeFullManagementTechnologyDetails.
        :param cfengine_user: The cfengine_user of this NodeFullManagementTechnologyDetails.
        """
        self.openapi_types = {
            'cfengine_keys': List[str],
            'cfengine_user': str
        }

        self.attribute_map = {
            'cfengine_keys': 'cfengineKeys',
            'cfengine_user': 'cfengineUser'
        }

        self._cfengine_keys = cfengine_keys
        self._cfengine_user = cfengine_user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeFullManagementTechnologyDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The node_full_managementTechnologyDetails of this NodeFullManagementTechnologyDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cfengine_keys(self):
        """Gets the cfengine_keys of this NodeFullManagementTechnologyDetails.

        Certificates used by the agent

        :return: The cfengine_keys of this NodeFullManagementTechnologyDetails.
        :rtype: List[str]
        """
        return self._cfengine_keys

    @cfengine_keys.setter
    def cfengine_keys(self, cfengine_keys):
        """Sets the cfengine_keys of this NodeFullManagementTechnologyDetails.

        Certificates used by the agent

        :param cfengine_keys: The cfengine_keys of this NodeFullManagementTechnologyDetails.
        :type cfengine_keys: List[str]
        """

        self._cfengine_keys = cfengine_keys

    @property
    def cfengine_user(self):
        """Gets the cfengine_user of this NodeFullManagementTechnologyDetails.

        Local user account used by the agent

        :return: The cfengine_user of this NodeFullManagementTechnologyDetails.
        :rtype: str
        """
        return self._cfengine_user

    @cfengine_user.setter
    def cfengine_user(self, cfengine_user):
        """Sets the cfengine_user of this NodeFullManagementTechnologyDetails.

        Local user account used by the agent

        :param cfengine_user: The cfengine_user of this NodeFullManagementTechnologyDetails.
        :type cfengine_user: str
        """

        self._cfengine_user = cfengine_user
