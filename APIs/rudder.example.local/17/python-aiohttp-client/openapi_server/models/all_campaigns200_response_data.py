# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.campaign_details import CampaignDetails
from openapi_server import util


class AllCampaigns200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaigns: List[CampaignDetails]=None):
        """AllCampaigns200ResponseData - a model defined in OpenAPI

        :param campaigns: The campaigns of this AllCampaigns200ResponseData.
        """
        self.openapi_types = {
            'campaigns': List[CampaignDetails]
        }

        self.attribute_map = {
            'campaigns': 'campaigns'
        }

        self._campaigns = campaigns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllCampaigns200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The allCampaigns_200_response_data of this AllCampaigns200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaigns(self):
        """Gets the campaigns of this AllCampaigns200ResponseData.


        :return: The campaigns of this AllCampaigns200ResponseData.
        :rtype: List[CampaignDetails]
        """
        return self._campaigns

    @campaigns.setter
    def campaigns(self, campaigns):
        """Sets the campaigns of this AllCampaigns200ResponseData.


        :param campaigns: The campaigns of this AllCampaigns200ResponseData.
        :type campaigns: List[CampaignDetails]
        """
        if campaigns is None:
            raise ValueError("Invalid value for `campaigns`, must not be `None`")

        self._campaigns = campaigns
