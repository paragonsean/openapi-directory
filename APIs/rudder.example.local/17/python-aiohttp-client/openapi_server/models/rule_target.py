# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RuleTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SPECIAL_COLON_ALL = 'special:all'
    SPECIAL_COLON_ALL_EXCEPT_POLICY_SERVERS = 'special:all_exceptPolicyServers'
    SPECIAL_COLON_ALL_POLICY_SERVERS = 'special:all_policyServers'
    POLICY_SERVER_COLON_DOLLAR_LEFT_CURLY_BRACKET_POLICY_SERVER_ID_RIGHT_CURLY_BRACKET = 'policyServer:${policyServerId}'
    GROUP_COLON_DOLLAR_LEFT_CURLY_BRACKET_NODE_GROUP_ID_RIGHT_CURLY_BRACKET = 'group:${nodeGroupId}'

    def __init__(self):
        """RuleTarget - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rule-target of this RuleTarget.
        """
        return util.deserialize_model(dikt, cls)
