# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_targets_inner_exclude import RuleTargetsInnerExclude
from openapi_server.models.rule_targets_inner_include import RuleTargetsInnerInclude
from openapi_server import util


class RuleTargetsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclude: RuleTargetsInnerExclude=None, include: RuleTargetsInnerInclude=None):
        """RuleTargetsInner - a model defined in OpenAPI

        :param exclude: The exclude of this RuleTargetsInner.
        :param include: The include of this RuleTargetsInner.
        """
        self.openapi_types = {
            'exclude': RuleTargetsInnerExclude,
            'include': RuleTargetsInnerInclude
        }

        self.attribute_map = {
            'exclude': 'exclude',
            'include': 'include'
        }

        self._exclude = exclude
        self._include = include

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleTargetsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rule_targets_inner of this RuleTargetsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclude(self):
        """Gets the exclude of this RuleTargetsInner.


        :return: The exclude of this RuleTargetsInner.
        :rtype: RuleTargetsInnerExclude
        """
        return self._exclude

    @exclude.setter
    def exclude(self, exclude):
        """Sets the exclude of this RuleTargetsInner.


        :param exclude: The exclude of this RuleTargetsInner.
        :type exclude: RuleTargetsInnerExclude
        """
        if exclude is None:
            raise ValueError("Invalid value for `exclude`, must not be `None`")

        self._exclude = exclude

    @property
    def include(self):
        """Gets the include of this RuleTargetsInner.


        :return: The include of this RuleTargetsInner.
        :rtype: RuleTargetsInnerInclude
        """
        return self._include

    @include.setter
    def include(self, include):
        """Sets the include of this RuleTargetsInner.


        :param include: The include of this RuleTargetsInner.
        :type include: RuleTargetsInnerInclude
        """
        if include is None:
            raise ValueError("Invalid value for `include`, must not be `None`")

        self._include = include
