# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeFullMemoriesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capacity: int=None, caption: str=None, description: str=None, name: str=None, quantity: int=None, serial_number: str=None, slot_number: int=None, speed: int=None, type: str=None):
        """NodeFullMemoriesInner - a model defined in OpenAPI

        :param capacity: The capacity of this NodeFullMemoriesInner.
        :param caption: The caption of this NodeFullMemoriesInner.
        :param description: The description of this NodeFullMemoriesInner.
        :param name: The name of this NodeFullMemoriesInner.
        :param quantity: The quantity of this NodeFullMemoriesInner.
        :param serial_number: The serial_number of this NodeFullMemoriesInner.
        :param slot_number: The slot_number of this NodeFullMemoriesInner.
        :param speed: The speed of this NodeFullMemoriesInner.
        :param type: The type of this NodeFullMemoriesInner.
        """
        self.openapi_types = {
            'capacity': int,
            'caption': str,
            'description': str,
            'name': str,
            'quantity': int,
            'serial_number': str,
            'slot_number': int,
            'speed': int,
            'type': str
        }

        self.attribute_map = {
            'capacity': 'capacity',
            'caption': 'caption',
            'description': 'description',
            'name': 'name',
            'quantity': 'quantity',
            'serial_number': 'serialNumber',
            'slot_number': 'slotNumber',
            'speed': 'speed',
            'type': 'type'
        }

        self._capacity = capacity
        self._caption = caption
        self._description = description
        self._name = name
        self._quantity = quantity
        self._serial_number = serial_number
        self._slot_number = slot_number
        self._speed = speed
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeFullMemoriesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The node_full_memories_inner of this NodeFullMemoriesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capacity(self):
        """Gets the capacity of this NodeFullMemoriesInner.

        Size of modules

        :return: The capacity of this NodeFullMemoriesInner.
        :rtype: int
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity):
        """Sets the capacity of this NodeFullMemoriesInner.

        Size of modules

        :param capacity: The capacity of this NodeFullMemoriesInner.
        :type capacity: int
        """

        self._capacity = capacity

    @property
    def caption(self):
        """Gets the caption of this NodeFullMemoriesInner.

        Manufacturer provided information about the module

        :return: The caption of this NodeFullMemoriesInner.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this NodeFullMemoriesInner.

        Manufacturer provided information about the module

        :param caption: The caption of this NodeFullMemoriesInner.
        :type caption: str
        """

        self._caption = caption

    @property
    def description(self):
        """Gets the description of this NodeFullMemoriesInner.

        System provided description

        :return: The description of this NodeFullMemoriesInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NodeFullMemoriesInner.

        System provided description

        :param description: The description of this NodeFullMemoriesInner.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this NodeFullMemoriesInner.

        Name of the memory slot or memory module

        :return: The name of this NodeFullMemoriesInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NodeFullMemoriesInner.

        Name of the memory slot or memory module

        :param name: The name of this NodeFullMemoriesInner.
        :type name: str
        """

        self._name = name

    @property
    def quantity(self):
        """Gets the quantity of this NodeFullMemoriesInner.

        Number of modules in that slot

        :return: The quantity of this NodeFullMemoriesInner.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this NodeFullMemoriesInner.

        Number of modules in that slot

        :param quantity: The quantity of this NodeFullMemoriesInner.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def serial_number(self):
        """Gets the serial_number of this NodeFullMemoriesInner.

        Serial number of the module

        :return: The serial_number of this NodeFullMemoriesInner.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this NodeFullMemoriesInner.

        Serial number of the module

        :param serial_number: The serial_number of this NodeFullMemoriesInner.
        :type serial_number: str
        """

        self._serial_number = serial_number

    @property
    def slot_number(self):
        """Gets the slot_number of this NodeFullMemoriesInner.

        Slot number

        :return: The slot_number of this NodeFullMemoriesInner.
        :rtype: int
        """
        return self._slot_number

    @slot_number.setter
    def slot_number(self, slot_number):
        """Sets the slot_number of this NodeFullMemoriesInner.

        Slot number

        :param slot_number: The slot_number of this NodeFullMemoriesInner.
        :type slot_number: int
        """

        self._slot_number = slot_number

    @property
    def speed(self):
        """Gets the speed of this NodeFullMemoriesInner.

        Memory speed (frequency)

        :return: The speed of this NodeFullMemoriesInner.
        :rtype: int
        """
        return self._speed

    @speed.setter
    def speed(self, speed):
        """Sets the speed of this NodeFullMemoriesInner.

        Memory speed (frequency)

        :param speed: The speed of this NodeFullMemoriesInner.
        :type speed: int
        """

        self._speed = speed

    @property
    def type(self):
        """Gets the type of this NodeFullMemoriesInner.

        Memory slot type

        :return: The type of this NodeFullMemoriesInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this NodeFullMemoriesInner.

        Memory slot type

        :param type: The type of this NodeFullMemoriesInner.
        :type type: str
        """

        self._type = type
