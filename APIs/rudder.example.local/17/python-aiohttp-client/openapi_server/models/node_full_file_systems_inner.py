# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeFullFileSystemsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, file_count: int=None, free_space: int=None, mount_point: str=None, name: str=None, total_space: int=None):
        """NodeFullFileSystemsInner - a model defined in OpenAPI

        :param description: The description of this NodeFullFileSystemsInner.
        :param file_count: The file_count of this NodeFullFileSystemsInner.
        :param free_space: The free_space of this NodeFullFileSystemsInner.
        :param mount_point: The mount_point of this NodeFullFileSystemsInner.
        :param name: The name of this NodeFullFileSystemsInner.
        :param total_space: The total_space of this NodeFullFileSystemsInner.
        """
        self.openapi_types = {
            'description': str,
            'file_count': int,
            'free_space': int,
            'mount_point': str,
            'name': str,
            'total_space': int
        }

        self.attribute_map = {
            'description': 'description',
            'file_count': 'fileCount',
            'free_space': 'freeSpace',
            'mount_point': 'mountPoint',
            'name': 'name',
            'total_space': 'totalSpace'
        }

        self._description = description
        self._file_count = file_count
        self._free_space = free_space
        self._mount_point = mount_point
        self._name = name
        self._total_space = total_space

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeFullFileSystemsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The node_full_fileSystems_inner of this NodeFullFileSystemsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this NodeFullFileSystemsInner.

        Description of the file system

        :return: The description of this NodeFullFileSystemsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NodeFullFileSystemsInner.

        Description of the file system

        :param description: The description of this NodeFullFileSystemsInner.
        :type description: str
        """

        self._description = description

    @property
    def file_count(self):
        """Gets the file_count of this NodeFullFileSystemsInner.

        Number of files

        :return: The file_count of this NodeFullFileSystemsInner.
        :rtype: int
        """
        return self._file_count

    @file_count.setter
    def file_count(self, file_count):
        """Sets the file_count of this NodeFullFileSystemsInner.

        Number of files

        :param file_count: The file_count of this NodeFullFileSystemsInner.
        :type file_count: int
        """

        self._file_count = file_count

    @property
    def free_space(self):
        """Gets the free_space of this NodeFullFileSystemsInner.

        Free space remaining

        :return: The free_space of this NodeFullFileSystemsInner.
        :rtype: int
        """
        return self._free_space

    @free_space.setter
    def free_space(self, free_space):
        """Sets the free_space of this NodeFullFileSystemsInner.

        Free space remaining

        :param free_space: The free_space of this NodeFullFileSystemsInner.
        :type free_space: int
        """

        self._free_space = free_space

    @property
    def mount_point(self):
        """Gets the mount_point of this NodeFullFileSystemsInner.

        Mount point

        :return: The mount_point of this NodeFullFileSystemsInner.
        :rtype: str
        """
        return self._mount_point

    @mount_point.setter
    def mount_point(self, mount_point):
        """Sets the mount_point of this NodeFullFileSystemsInner.

        Mount point

        :param mount_point: The mount_point of this NodeFullFileSystemsInner.
        :type mount_point: str
        """

        self._mount_point = mount_point

    @property
    def name(self):
        """Gets the name of this NodeFullFileSystemsInner.

        Type of file system (`ext4`, `swap`, etc.)

        :return: The name of this NodeFullFileSystemsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NodeFullFileSystemsInner.

        Type of file system (`ext4`, `swap`, etc.)

        :param name: The name of this NodeFullFileSystemsInner.
        :type name: str
        """

        self._name = name

    @property
    def total_space(self):
        """Gets the total_space of this NodeFullFileSystemsInner.

        Total space

        :return: The total_space of this NodeFullFileSystemsInner.
        :rtype: int
        """
        return self._total_space

    @total_space.setter
    def total_space(self, total_space):
        """Sets the total_space of this NodeFullFileSystemsInner.

        Total space

        :param total_space: The total_space of this NodeFullFileSystemsInner.
        :type total_space: int
        """

        self._total_space = total_space
