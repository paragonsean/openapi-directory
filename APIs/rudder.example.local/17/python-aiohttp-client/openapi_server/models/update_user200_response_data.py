# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_user200_response_data_updated_user import UpdateUser200ResponseDataUpdatedUser
from openapi_server import util


class UpdateUser200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, updated_user: UpdateUser200ResponseDataUpdatedUser=None):
        """UpdateUser200ResponseData - a model defined in OpenAPI

        :param updated_user: The updated_user of this UpdateUser200ResponseData.
        """
        self.openapi_types = {
            'updated_user': UpdateUser200ResponseDataUpdatedUser
        }

        self.attribute_map = {
            'updated_user': 'updatedUser'
        }

        self._updated_user = updated_user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUser200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateUser_200_response_data of this UpdateUser200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def updated_user(self):
        """Gets the updated_user of this UpdateUser200ResponseData.


        :return: The updated_user of this UpdateUser200ResponseData.
        :rtype: UpdateUser200ResponseDataUpdatedUser
        """
        return self._updated_user

    @updated_user.setter
    def updated_user(self, updated_user):
        """Sets the updated_user of this UpdateUser200ResponseData.


        :param updated_user: The updated_user of this UpdateUser200ResponseData.
        :type updated_user: UpdateUser200ResponseDataUpdatedUser
        """
        if updated_user is None:
            raise ValueError("Invalid value for `updated_user`, must not be `None`")

        self._updated_user = updated_user
