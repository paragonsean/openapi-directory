# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_user200_response_data_added_user import AddUser200ResponseDataAddedUser
from openapi_server import util


class AddUser200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added_user: AddUser200ResponseDataAddedUser=None):
        """AddUser200ResponseData - a model defined in OpenAPI

        :param added_user: The added_user of this AddUser200ResponseData.
        """
        self.openapi_types = {
            'added_user': AddUser200ResponseDataAddedUser
        }

        self.attribute_map = {
            'added_user': 'addedUser'
        }

        self._added_user = added_user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddUser200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The addUser_200_response_data of this AddUser200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added_user(self):
        """Gets the added_user of this AddUser200ResponseData.


        :return: The added_user of this AddUser200ResponseData.
        :rtype: AddUser200ResponseDataAddedUser
        """
        return self._added_user

    @added_user.setter
    def added_user(self, added_user):
        """Sets the added_user of this AddUser200ResponseData.


        :param added_user: The added_user of this AddUser200ResponseData.
        :type added_user: AddUser200ResponseDataAddedUser
        """
        if added_user is None:
            raise ValueError("Invalid value for `added_user`, must not be `None`")

        self._added_user = added_user
