# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateCVERequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url: str=None, years: List[str]=None):
        """UpdateCVERequest - a model defined in OpenAPI

        :param url: The url of this UpdateCVERequest.
        :param years: The years of this UpdateCVERequest.
        """
        self.openapi_types = {
            'url': str,
            'years': List[str]
        }

        self.attribute_map = {
            'url': 'url',
            'years': 'years'
        }

        self._url = url
        self._years = years

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCVERequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateCVE_request of this UpdateCVERequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self):
        """Gets the url of this UpdateCVERequest.

        Url used to update CVE, will default to one set in config

        :return: The url of this UpdateCVERequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this UpdateCVERequest.

        Url used to update CVE, will default to one set in config

        :param url: The url of this UpdateCVERequest.
        :type url: str
        """

        self._url = url

    @property
    def years(self):
        """Gets the years of this UpdateCVERequest.


        :return: The years of this UpdateCVERequest.
        :rtype: List[str]
        """
        return self._years

    @years.setter
    def years(self, years):
        """Sets the years of this UpdateCVERequest.


        :param years: The years of this UpdateCVERequest.
        :type years: List[str]
        """

        self._years = years
