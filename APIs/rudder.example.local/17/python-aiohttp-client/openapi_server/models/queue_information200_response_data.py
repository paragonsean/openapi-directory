# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueueInformation200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue_max_size: int=None, queue_saturated: bool=None):
        """QueueInformation200ResponseData - a model defined in OpenAPI

        :param queue_max_size: The queue_max_size of this QueueInformation200ResponseData.
        :param queue_saturated: The queue_saturated of this QueueInformation200ResponseData.
        """
        self.openapi_types = {
            'queue_max_size': int,
            'queue_saturated': bool
        }

        self.attribute_map = {
            'queue_max_size': 'queueMaxSize',
            'queue_saturated': 'queueSaturated'
        }

        self._queue_max_size = queue_max_size
        self._queue_saturated = queue_saturated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueueInformation200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The queueInformation_200_response_data of this QueueInformation200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_max_size(self):
        """Gets the queue_max_size of this QueueInformation200ResponseData.


        :return: The queue_max_size of this QueueInformation200ResponseData.
        :rtype: int
        """
        return self._queue_max_size

    @queue_max_size.setter
    def queue_max_size(self, queue_max_size):
        """Sets the queue_max_size of this QueueInformation200ResponseData.


        :param queue_max_size: The queue_max_size of this QueueInformation200ResponseData.
        :type queue_max_size: int
        """
        if queue_max_size is None:
            raise ValueError("Invalid value for `queue_max_size`, must not be `None`")

        self._queue_max_size = queue_max_size

    @property
    def queue_saturated(self):
        """Gets the queue_saturated of this QueueInformation200ResponseData.

        Is the inventory queue full

        :return: The queue_saturated of this QueueInformation200ResponseData.
        :rtype: bool
        """
        return self._queue_saturated

    @queue_saturated.setter
    def queue_saturated(self, queue_saturated):
        """Sets the queue_saturated of this QueueInformation200ResponseData.

        Is the inventory queue full

        :param queue_saturated: The queue_saturated of this QueueInformation200ResponseData.
        :type queue_saturated: bool
        """
        if queue_saturated is None:
            raise ValueError("Invalid value for `queue_saturated`, must not be `None`")

        self._queue_saturated = queue_saturated
