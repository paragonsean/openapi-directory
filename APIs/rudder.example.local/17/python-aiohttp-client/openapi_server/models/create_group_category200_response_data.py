# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.group_category import GroupCategory
from openapi_server import util


class CreateGroupCategory200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_categories: List[GroupCategory]=None):
        """CreateGroupCategory200ResponseData - a model defined in OpenAPI

        :param group_categories: The group_categories of this CreateGroupCategory200ResponseData.
        """
        self.openapi_types = {
            'group_categories': List[GroupCategory]
        }

        self.attribute_map = {
            'group_categories': 'groupCategories'
        }

        self._group_categories = group_categories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGroupCategory200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateGroupCategory_200_response_data of this CreateGroupCategory200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_categories(self):
        """Gets the group_categories of this CreateGroupCategory200ResponseData.


        :return: The group_categories of this CreateGroupCategory200ResponseData.
        :rtype: List[GroupCategory]
        """
        return self._group_categories

    @group_categories.setter
    def group_categories(self, group_categories):
        """Sets the group_categories of this CreateGroupCategory200ResponseData.


        :param group_categories: The group_categories of this CreateGroupCategory200ResponseData.
        :type group_categories: List[GroupCategory]
        """
        if group_categories is None:
            raise ValueError("Invalid value for `group_categories`, must not be `None`")

        self._group_categories = group_categories
