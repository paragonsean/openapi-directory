# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_all_secrets200_response_data_secrets_inner import GetAllSecrets200ResponseDataSecretsInner
from openapi_server import util


class GetAllSecrets200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, secrets: List[GetAllSecrets200ResponseDataSecretsInner]=None):
        """GetAllSecrets200ResponseData - a model defined in OpenAPI

        :param secrets: The secrets of this GetAllSecrets200ResponseData.
        """
        self.openapi_types = {
            'secrets': List[GetAllSecrets200ResponseDataSecretsInner]
        }

        self.attribute_map = {
            'secrets': 'secrets'
        }

        self._secrets = secrets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAllSecrets200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getAllSecrets_200_response_data of this GetAllSecrets200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secrets(self):
        """Gets the secrets of this GetAllSecrets200ResponseData.

        List of API version and status

        :return: The secrets of this GetAllSecrets200ResponseData.
        :rtype: List[GetAllSecrets200ResponseDataSecretsInner]
        """
        return self._secrets

    @secrets.setter
    def secrets(self, secrets):
        """Sets the secrets of this GetAllSecrets200ResponseData.

        List of API version and status

        :param secrets: The secrets of this GetAllSecrets200ResponseData.
        :type secrets: List[GetAllSecrets200ResponseDataSecretsInner]
        """
        if secrets is None:
            raise ValueError("Invalid value for `secrets`, must not be `None`")

        self._secrets = secrets
