# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reload_user_conf200_response_data_reload import ReloadUserConf200ResponseDataReload
from openapi_server import util


class ReloadUserConf200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reload: ReloadUserConf200ResponseDataReload=None):
        """ReloadUserConf200ResponseData - a model defined in OpenAPI

        :param reload: The reload of this ReloadUserConf200ResponseData.
        """
        self.openapi_types = {
            'reload': ReloadUserConf200ResponseDataReload
        }

        self.attribute_map = {
            'reload': 'reload'
        }

        self._reload = reload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReloadUserConf200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The reloadUserConf_200_response_data of this ReloadUserConf200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reload(self):
        """Gets the reload of this ReloadUserConf200ResponseData.


        :return: The reload of this ReloadUserConf200ResponseData.
        :rtype: ReloadUserConf200ResponseDataReload
        """
        return self._reload

    @reload.setter
    def reload(self, reload):
        """Sets the reload of this ReloadUserConf200ResponseData.


        :param reload: The reload of this ReloadUserConf200ResponseData.
        :type reload: ReloadUserConf200ResponseDataReload
        """
        if reload is None:
            raise ValueError("Invalid value for `reload`, must not be `None`")

        self._reload = reload
