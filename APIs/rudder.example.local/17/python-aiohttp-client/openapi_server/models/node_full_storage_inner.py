# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeFullStorageInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, firmware: str=None, manufacturer: str=None, model: str=None, name: str=None, quantity: int=None, serial_number: str=None, size: int=None, type: str=None):
        """NodeFullStorageInner - a model defined in OpenAPI

        :param description: The description of this NodeFullStorageInner.
        :param firmware: The firmware of this NodeFullStorageInner.
        :param manufacturer: The manufacturer of this NodeFullStorageInner.
        :param model: The model of this NodeFullStorageInner.
        :param name: The name of this NodeFullStorageInner.
        :param quantity: The quantity of this NodeFullStorageInner.
        :param serial_number: The serial_number of this NodeFullStorageInner.
        :param size: The size of this NodeFullStorageInner.
        :param type: The type of this NodeFullStorageInner.
        """
        self.openapi_types = {
            'description': str,
            'firmware': str,
            'manufacturer': str,
            'model': str,
            'name': str,
            'quantity': int,
            'serial_number': str,
            'size': int,
            'type': str
        }

        self.attribute_map = {
            'description': 'description',
            'firmware': 'firmware',
            'manufacturer': 'manufacturer',
            'model': 'model',
            'name': 'name',
            'quantity': 'quantity',
            'serial_number': 'serialNumber',
            'size': 'size',
            'type': 'type'
        }

        self._description = description
        self._firmware = firmware
        self._manufacturer = manufacturer
        self._model = model
        self._name = name
        self._quantity = quantity
        self._serial_number = serial_number
        self._size = size
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeFullStorageInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The node_full_storage_inner of this NodeFullStorageInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this NodeFullStorageInner.

        System provided information about the storage

        :return: The description of this NodeFullStorageInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NodeFullStorageInner.

        System provided information about the storage

        :param description: The description of this NodeFullStorageInner.
        :type description: str
        """

        self._description = description

    @property
    def firmware(self):
        """Gets the firmware of this NodeFullStorageInner.

        Storage firmware information

        :return: The firmware of this NodeFullStorageInner.
        :rtype: str
        """
        return self._firmware

    @firmware.setter
    def firmware(self, firmware):
        """Sets the firmware of this NodeFullStorageInner.

        Storage firmware information

        :param firmware: The firmware of this NodeFullStorageInner.
        :type firmware: str
        """

        self._firmware = firmware

    @property
    def manufacturer(self):
        """Gets the manufacturer of this NodeFullStorageInner.

        Storage manufacturer

        :return: The manufacturer of this NodeFullStorageInner.
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this NodeFullStorageInner.

        Storage manufacturer

        :param manufacturer: The manufacturer of this NodeFullStorageInner.
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def model(self):
        """Gets the model of this NodeFullStorageInner.

        Storage model

        :return: The model of this NodeFullStorageInner.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this NodeFullStorageInner.

        Storage model

        :param model: The model of this NodeFullStorageInner.
        :type model: str
        """

        self._model = model

    @property
    def name(self):
        """Gets the name of this NodeFullStorageInner.

        Storage name

        :return: The name of this NodeFullStorageInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NodeFullStorageInner.

        Storage name

        :param name: The name of this NodeFullStorageInner.
        :type name: str
        """

        self._name = name

    @property
    def quantity(self):
        """Gets the quantity of this NodeFullStorageInner.

        Quantity of similar storage

        :return: The quantity of this NodeFullStorageInner.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this NodeFullStorageInner.

        Quantity of similar storage

        :param quantity: The quantity of this NodeFullStorageInner.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def serial_number(self):
        """Gets the serial_number of this NodeFullStorageInner.

        Storage serial number

        :return: The serial_number of this NodeFullStorageInner.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this NodeFullStorageInner.

        Storage serial number

        :param serial_number: The serial_number of this NodeFullStorageInner.
        :type serial_number: str
        """

        self._serial_number = serial_number

    @property
    def size(self):
        """Gets the size of this NodeFullStorageInner.

        Storage size in MB

        :return: The size of this NodeFullStorageInner.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this NodeFullStorageInner.

        Storage size in MB

        :param size: The size of this NodeFullStorageInner.
        :type size: int
        """

        self._size = size

    @property
    def type(self):
        """Gets the type of this NodeFullStorageInner.

        Storage type

        :return: The type of this NodeFullStorageInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this NodeFullStorageInner.

        Storage type

        :param type: The type of this NodeFullStorageInner.
        :type type: str
        """

        self._type = type
