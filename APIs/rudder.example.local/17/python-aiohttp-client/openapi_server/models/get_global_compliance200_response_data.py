# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_global_compliance200_response_data_global_compliance import GetGlobalCompliance200ResponseDataGlobalCompliance
from openapi_server import util


class GetGlobalCompliance200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_compliance: GetGlobalCompliance200ResponseDataGlobalCompliance=None):
        """GetGlobalCompliance200ResponseData - a model defined in OpenAPI

        :param global_compliance: The global_compliance of this GetGlobalCompliance200ResponseData.
        """
        self.openapi_types = {
            'global_compliance': GetGlobalCompliance200ResponseDataGlobalCompliance
        }

        self.attribute_map = {
            'global_compliance': 'globalCompliance'
        }

        self._global_compliance = global_compliance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetGlobalCompliance200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getGlobalCompliance_200_response_data of this GetGlobalCompliance200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_compliance(self):
        """Gets the global_compliance of this GetGlobalCompliance200ResponseData.


        :return: The global_compliance of this GetGlobalCompliance200ResponseData.
        :rtype: GetGlobalCompliance200ResponseDataGlobalCompliance
        """
        return self._global_compliance

    @global_compliance.setter
    def global_compliance(self, global_compliance):
        """Sets the global_compliance of this GetGlobalCompliance200ResponseData.


        :param global_compliance: The global_compliance of this GetGlobalCompliance200ResponseData.
        :type global_compliance: GetGlobalCompliance200ResponseDataGlobalCompliance
        """
        if global_compliance is None:
            raise ValueError("Invalid value for `global_compliance`, must not be `None`")

        self._global_compliance = global_compliance
