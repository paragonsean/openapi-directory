# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegeneratePolicies200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policies: str=None):
        """RegeneratePolicies200ResponseData - a model defined in OpenAPI

        :param policies: The policies of this RegeneratePolicies200ResponseData.
        """
        self.openapi_types = {
            'policies': str
        }

        self.attribute_map = {
            'policies': 'policies'
        }

        self._policies = policies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegeneratePolicies200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The regeneratePolicies_200_response_data of this RegeneratePolicies200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policies(self):
        """Gets the policies of this RegeneratePolicies200ResponseData.


        :return: The policies of this RegeneratePolicies200ResponseData.
        :rtype: str
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this RegeneratePolicies200ResponseData.


        :param policies: The policies of this RegeneratePolicies200ResponseData.
        :type policies: str
        """
        allowed_values = ["Started"]  # noqa: E501
        if policies not in allowed_values:
            raise ValueError(
                "Invalid value for `policies` ({0}), must be one of {1}"
                .format(policies, allowed_values)
            )

        self._policies = policies
