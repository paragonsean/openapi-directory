# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplyPolicyAllNodes200ResponseDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hostname: str=None, id: str=None, result: str=None):
        """ApplyPolicyAllNodes200ResponseDataInner - a model defined in OpenAPI

        :param hostname: The hostname of this ApplyPolicyAllNodes200ResponseDataInner.
        :param id: The id of this ApplyPolicyAllNodes200ResponseDataInner.
        :param result: The result of this ApplyPolicyAllNodes200ResponseDataInner.
        """
        self.openapi_types = {
            'hostname': str,
            'id': str,
            'result': str
        }

        self.attribute_map = {
            'hostname': 'hostname',
            'id': 'id',
            'result': 'result'
        }

        self._hostname = hostname
        self._id = id
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplyPolicyAllNodes200ResponseDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The applyPolicyAllNodes_200_response_data_inner of this ApplyPolicyAllNodes200ResponseDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hostname(self):
        """Gets the hostname of this ApplyPolicyAllNodes200ResponseDataInner.

        Node hostname

        :return: The hostname of this ApplyPolicyAllNodes200ResponseDataInner.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this ApplyPolicyAllNodes200ResponseDataInner.

        Node hostname

        :param hostname: The hostname of this ApplyPolicyAllNodes200ResponseDataInner.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def id(self):
        """Gets the id of this ApplyPolicyAllNodes200ResponseDataInner.

        Rudder id of the node

        :return: The id of this ApplyPolicyAllNodes200ResponseDataInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApplyPolicyAllNodes200ResponseDataInner.

        Rudder id of the node

        :param id: The id of this ApplyPolicyAllNodes200ResponseDataInner.
        :type id: str
        """

        self._id = id

    @property
    def result(self):
        """Gets the result of this ApplyPolicyAllNodes200ResponseDataInner.

        Result or policy application trigger

        :return: The result of this ApplyPolicyAllNodes200ResponseDataInner.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this ApplyPolicyAllNodes200ResponseDataInner.

        Result or policy application trigger

        :param result: The result of this ApplyPolicyAllNodes200ResponseDataInner.
        :type result: str
        """

        self._result = result
