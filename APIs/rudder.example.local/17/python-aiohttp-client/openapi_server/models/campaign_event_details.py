# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.campaign_event_details_status import CampaignEventDetailsStatus
from openapi_server import util


class CampaignEventDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_id: str=None, campaign_type: str=None, end: str=None, id: str=None, name: str=None, start: str=None, status: CampaignEventDetailsStatus=None):
        """CampaignEventDetails - a model defined in OpenAPI

        :param campaign_id: The campaign_id of this CampaignEventDetails.
        :param campaign_type: The campaign_type of this CampaignEventDetails.
        :param end: The end of this CampaignEventDetails.
        :param id: The id of this CampaignEventDetails.
        :param name: The name of this CampaignEventDetails.
        :param start: The start of this CampaignEventDetails.
        :param status: The status of this CampaignEventDetails.
        """
        self.openapi_types = {
            'campaign_id': str,
            'campaign_type': str,
            'end': str,
            'id': str,
            'name': str,
            'start': str,
            'status': CampaignEventDetailsStatus
        }

        self.attribute_map = {
            'campaign_id': 'campaignId',
            'campaign_type': 'campaignType',
            'end': 'end',
            'id': 'id',
            'name': 'name',
            'start': 'start',
            'status': 'status'
        }

        self._campaign_id = campaign_id
        self._campaign_type = campaign_type
        self._end = end
        self._id = id
        self._name = name
        self._start = start
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CampaignEventDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The campaign-event-details of this CampaignEventDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_id(self):
        """Gets the campaign_id of this CampaignEventDetails.

        Id of the campaign for this event

        :return: The campaign_id of this CampaignEventDetails.
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this CampaignEventDetails.

        Id of the campaign for this event

        :param campaign_id: The campaign_id of this CampaignEventDetails.
        :type campaign_id: str
        """

        self._campaign_id = campaign_id

    @property
    def campaign_type(self):
        """Gets the campaign_type of this CampaignEventDetails.

        Type of campaign

        :return: The campaign_type of this CampaignEventDetails.
        :rtype: str
        """
        return self._campaign_type

    @campaign_type.setter
    def campaign_type(self, campaign_type):
        """Sets the campaign_type of this CampaignEventDetails.

        Type of campaign

        :param campaign_type: The campaign_type of this CampaignEventDetails.
        :type campaign_type: str
        """

        self._campaign_type = campaign_type

    @property
    def end(self):
        """Gets the end of this CampaignEventDetails.

        Campaign event end date

        :return: The end of this CampaignEventDetails.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this CampaignEventDetails.

        Campaign event end date

        :param end: The end of this CampaignEventDetails.
        :type end: str
        """

        self._end = end

    @property
    def id(self):
        """Gets the id of this CampaignEventDetails.

        Campaign event id

        :return: The id of this CampaignEventDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CampaignEventDetails.

        Campaign event id

        :param id: The id of this CampaignEventDetails.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CampaignEventDetails.

        Campaign event name

        :return: The name of this CampaignEventDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CampaignEventDetails.

        Campaign event name

        :param name: The name of this CampaignEventDetails.
        :type name: str
        """

        self._name = name

    @property
    def start(self):
        """Gets the start of this CampaignEventDetails.

        Campaign event start date

        :return: The start of this CampaignEventDetails.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this CampaignEventDetails.

        Campaign event start date

        :param start: The start of this CampaignEventDetails.
        :type start: str
        """

        self._start = start

    @property
    def status(self):
        """Gets the status of this CampaignEventDetails.


        :return: The status of this CampaignEventDetails.
        :rtype: CampaignEventDetailsStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CampaignEventDetails.


        :param status: The status of this CampaignEventDetails.
        :type status: CampaignEventDetailsStatus
        """

        self._status = status
