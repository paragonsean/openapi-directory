# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetAllowedNetworks200ResponseDataSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_networks: List[str]=None):
        """GetAllowedNetworks200ResponseDataSettings - a model defined in OpenAPI

        :param allowed_networks: The allowed_networks of this GetAllowedNetworks200ResponseDataSettings.
        """
        self.openapi_types = {
            'allowed_networks': List[str]
        }

        self.attribute_map = {
            'allowed_networks': 'allowed_networks'
        }

        self._allowed_networks = allowed_networks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAllowedNetworks200ResponseDataSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getAllowedNetworks_200_response_data_settings of this GetAllowedNetworks200ResponseDataSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_networks(self):
        """Gets the allowed_networks of this GetAllowedNetworks200ResponseDataSettings.

        Array of allowed networks

        :return: The allowed_networks of this GetAllowedNetworks200ResponseDataSettings.
        :rtype: List[str]
        """
        return self._allowed_networks

    @allowed_networks.setter
    def allowed_networks(self, allowed_networks):
        """Sets the allowed_networks of this GetAllowedNetworks200ResponseDataSettings.

        Array of allowed networks

        :param allowed_networks: The allowed_networks of this GetAllowedNetworks200ResponseDataSettings.
        :type allowed_networks: List[str]
        """
        if allowed_networks is None:
            raise ValueError("Invalid value for `allowed_networks`, must not be `None`")

        self._allowed_networks = allowed_networks
