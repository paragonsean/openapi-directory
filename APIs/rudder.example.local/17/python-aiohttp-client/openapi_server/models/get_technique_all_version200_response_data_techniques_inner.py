# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.editor_technique import EditorTechnique
from openapi_server import util


class GetTechniqueAllVersion200ResponseDataTechniquesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jr_editor_technique: EditorTechnique=None):
        """GetTechniqueAllVersion200ResponseDataTechniquesInner - a model defined in OpenAPI

        :param jr_editor_technique: The jr_editor_technique of this GetTechniqueAllVersion200ResponseDataTechniquesInner.
        """
        self.openapi_types = {
            'jr_editor_technique': EditorTechnique
        }

        self.attribute_map = {
            'jr_editor_technique': 'JREditorTechnique'
        }

        self._jr_editor_technique = jr_editor_technique

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTechniqueAllVersion200ResponseDataTechniquesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getTechniqueAllVersion_200_response_data_techniques_inner of this GetTechniqueAllVersion200ResponseDataTechniquesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jr_editor_technique(self):
        """Gets the jr_editor_technique of this GetTechniqueAllVersion200ResponseDataTechniquesInner.


        :return: The jr_editor_technique of this GetTechniqueAllVersion200ResponseDataTechniquesInner.
        :rtype: EditorTechnique
        """
        return self._jr_editor_technique

    @jr_editor_technique.setter
    def jr_editor_technique(self, jr_editor_technique):
        """Sets the jr_editor_technique of this GetTechniqueAllVersion200ResponseDataTechniquesInner.


        :param jr_editor_technique: The jr_editor_technique of this GetTechniqueAllVersion200ResponseDataTechniquesInner.
        :type jr_editor_technique: EditorTechnique
        """
        if jr_editor_technique is None:
            raise ValueError("Invalid value for `jr_editor_technique`, must not be `None`")

        self._jr_editor_technique = jr_editor_technique
