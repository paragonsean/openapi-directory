# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateCVE200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cves: int=None):
        """UpdateCVE200ResponseData - a model defined in OpenAPI

        :param cves: The cves of this UpdateCVE200ResponseData.
        """
        self.openapi_types = {
            'cves': int
        }

        self.attribute_map = {
            'cves': 'CVEs'
        }

        self._cves = cves

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCVE200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateCVE_200_response_data of this UpdateCVE200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cves(self):
        """Gets the cves of this UpdateCVE200ResponseData.


        :return: The cves of this UpdateCVE200ResponseData.
        :rtype: int
        """
        return self._cves

    @cves.setter
    def cves(self, cves):
        """Sets the cves of this UpdateCVE200ResponseData.


        :param cves: The cves of this UpdateCVE200ResponseData.
        :type cves: int
        """
        if cves is None:
            raise ValueError("Invalid value for `cves`, must not be `None`")

        self._cves = cves
