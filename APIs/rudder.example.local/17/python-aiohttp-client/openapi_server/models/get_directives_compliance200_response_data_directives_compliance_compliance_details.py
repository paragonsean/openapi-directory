# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: float=None, no_report: float=None, success_already_ok: float=None, success_not_applicable: float=None, success_repaired: float=None, unexpected_missing_component: float=None, unexpected_unknown_component: float=None):
        """GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails - a model defined in OpenAPI

        :param error: The error of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :param no_report: The no_report of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :param success_already_ok: The success_already_ok of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :param success_not_applicable: The success_not_applicable of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :param success_repaired: The success_repaired of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :param unexpected_missing_component: The unexpected_missing_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :param unexpected_unknown_component: The unexpected_unknown_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        """
        self.openapi_types = {
            'error': float,
            'no_report': float,
            'success_already_ok': float,
            'success_not_applicable': float,
            'success_repaired': float,
            'unexpected_missing_component': float,
            'unexpected_unknown_component': float
        }

        self.attribute_map = {
            'error': 'error',
            'no_report': 'noReport',
            'success_already_ok': 'successAlreadyOK',
            'success_not_applicable': 'successNotApplicable',
            'success_repaired': 'successRepaired',
            'unexpected_missing_component': 'unexpectedMissingComponent',
            'unexpected_unknown_component': 'unexpectedUnknownComponent'
        }

        self._error = error
        self._no_report = no_report
        self._success_already_ok = success_already_ok
        self._success_not_applicable = success_not_applicable
        self._success_repaired = success_repaired
        self._unexpected_missing_component = unexpected_missing_component
        self._unexpected_unknown_component = unexpected_unknown_component

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getDirectivesCompliance_200_response_data_directivesCompliance_complianceDetails of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :return: The error of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :rtype: float
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :param error: The error of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :type error: float
        """

        self._error = error

    @property
    def no_report(self):
        """Gets the no_report of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :return: The no_report of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :rtype: float
        """
        return self._no_report

    @no_report.setter
    def no_report(self, no_report):
        """Sets the no_report of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :param no_report: The no_report of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :type no_report: float
        """

        self._no_report = no_report

    @property
    def success_already_ok(self):
        """Gets the success_already_ok of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :return: The success_already_ok of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :rtype: float
        """
        return self._success_already_ok

    @success_already_ok.setter
    def success_already_ok(self, success_already_ok):
        """Sets the success_already_ok of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :param success_already_ok: The success_already_ok of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :type success_already_ok: float
        """

        self._success_already_ok = success_already_ok

    @property
    def success_not_applicable(self):
        """Gets the success_not_applicable of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :return: The success_not_applicable of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :rtype: float
        """
        return self._success_not_applicable

    @success_not_applicable.setter
    def success_not_applicable(self, success_not_applicable):
        """Sets the success_not_applicable of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :param success_not_applicable: The success_not_applicable of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :type success_not_applicable: float
        """

        self._success_not_applicable = success_not_applicable

    @property
    def success_repaired(self):
        """Gets the success_repaired of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :return: The success_repaired of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :rtype: float
        """
        return self._success_repaired

    @success_repaired.setter
    def success_repaired(self, success_repaired):
        """Sets the success_repaired of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :param success_repaired: The success_repaired of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :type success_repaired: float
        """

        self._success_repaired = success_repaired

    @property
    def unexpected_missing_component(self):
        """Gets the unexpected_missing_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :return: The unexpected_missing_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :rtype: float
        """
        return self._unexpected_missing_component

    @unexpected_missing_component.setter
    def unexpected_missing_component(self, unexpected_missing_component):
        """Sets the unexpected_missing_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :param unexpected_missing_component: The unexpected_missing_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :type unexpected_missing_component: float
        """

        self._unexpected_missing_component = unexpected_missing_component

    @property
    def unexpected_unknown_component(self):
        """Gets the unexpected_unknown_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :return: The unexpected_unknown_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :rtype: float
        """
        return self._unexpected_unknown_component

    @unexpected_unknown_component.setter
    def unexpected_unknown_component(self, unexpected_unknown_component):
        """Sets the unexpected_unknown_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.


        :param unexpected_unknown_component: The unexpected_unknown_component of this GetDirectivesCompliance200ResponseDataDirectivesComplianceComplianceDetails.
        :type unexpected_unknown_component: float
        """

        self._unexpected_unknown_component = unexpected_unknown_component
