# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SaveWorkflowUserRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, validated_users: List[str]=None):
        """SaveWorkflowUserRequest - a model defined in OpenAPI

        :param validated_users: The validated_users of this SaveWorkflowUserRequest.
        """
        self.openapi_types = {
            'validated_users': List[str]
        }

        self.attribute_map = {
            'validated_users': 'validatedUsers'
        }

        self._validated_users = validated_users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SaveWorkflowUserRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The saveWorkflowUser_request of this SaveWorkflowUserRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def validated_users(self):
        """Gets the validated_users of this SaveWorkflowUserRequest.

        list of user to put in validated list

        :return: The validated_users of this SaveWorkflowUserRequest.
        :rtype: List[str]
        """
        return self._validated_users

    @validated_users.setter
    def validated_users(self, validated_users):
        """Sets the validated_users of this SaveWorkflowUserRequest.

        list of user to put in validated list

        :param validated_users: The validated_users of this SaveWorkflowUserRequest.
        :type validated_users: List[str]
        """
        if validated_users is None:
            raise ValueError("Invalid value for `validated_users`, must not be `None`")

        self._validated_users = validated_users
