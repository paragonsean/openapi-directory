# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSystemInfo200ResponseDataRudder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_time: date=None, full_version: str=None, major_version: str=None):
        """GetSystemInfo200ResponseDataRudder - a model defined in OpenAPI

        :param build_time: The build_time of this GetSystemInfo200ResponseDataRudder.
        :param full_version: The full_version of this GetSystemInfo200ResponseDataRudder.
        :param major_version: The major_version of this GetSystemInfo200ResponseDataRudder.
        """
        self.openapi_types = {
            'build_time': date,
            'full_version': str,
            'major_version': str
        }

        self.attribute_map = {
            'build_time': 'build-time',
            'full_version': 'full-version',
            'major_version': 'major-version'
        }

        self._build_time = build_time
        self._full_version = full_version
        self._major_version = major_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSystemInfo200ResponseDataRudder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getSystemInfo_200_response_data_rudder of this GetSystemInfo200ResponseDataRudder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_time(self):
        """Gets the build_time of this GetSystemInfo200ResponseDataRudder.


        :return: The build_time of this GetSystemInfo200ResponseDataRudder.
        :rtype: date
        """
        return self._build_time

    @build_time.setter
    def build_time(self, build_time):
        """Sets the build_time of this GetSystemInfo200ResponseDataRudder.


        :param build_time: The build_time of this GetSystemInfo200ResponseDataRudder.
        :type build_time: date
        """
        if build_time is None:
            raise ValueError("Invalid value for `build_time`, must not be `None`")

        self._build_time = build_time

    @property
    def full_version(self):
        """Gets the full_version of this GetSystemInfo200ResponseDataRudder.


        :return: The full_version of this GetSystemInfo200ResponseDataRudder.
        :rtype: str
        """
        return self._full_version

    @full_version.setter
    def full_version(self, full_version):
        """Sets the full_version of this GetSystemInfo200ResponseDataRudder.


        :param full_version: The full_version of this GetSystemInfo200ResponseDataRudder.
        :type full_version: str
        """
        if full_version is None:
            raise ValueError("Invalid value for `full_version`, must not be `None`")

        self._full_version = full_version

    @property
    def major_version(self):
        """Gets the major_version of this GetSystemInfo200ResponseDataRudder.


        :return: The major_version of this GetSystemInfo200ResponseDataRudder.
        :rtype: str
        """
        return self._major_version

    @major_version.setter
    def major_version(self, major_version):
        """Sets the major_version of this GetSystemInfo200ResponseDataRudder.


        :param major_version: The major_version of this GetSystemInfo200ResponseDataRudder.
        :type major_version: str
        """
        if major_version is None:
            raise ValueError("Invalid value for `major_version`, must not be `None`")

        self._major_version = major_version
