# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entitlement_unavailable_message: str=None):
        """DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock - a model defined in OpenAPI

        :param entitlement_unavailable_message: The entitlement_unavailable_message of this DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock.
        """
        self.openapi_types = {
            'entitlement_unavailable_message': str
        }

        self.attribute_map = {
            'entitlement_unavailable_message': 'entitlementUnavailableMessage'
        }

        self._entitlement_unavailable_message = entitlement_unavailable_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Presentation.DestinyPresentationNodeRequirementsBlock of this DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entitlement_unavailable_message(self):
        """Gets the entitlement_unavailable_message of this DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock.

        If this node is not accessible due to Entitlements (for instance, you don't own the required game expansion), this is the message to show.

        :return: The entitlement_unavailable_message of this DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock.
        :rtype: str
        """
        return self._entitlement_unavailable_message

    @entitlement_unavailable_message.setter
    def entitlement_unavailable_message(self, entitlement_unavailable_message):
        """Sets the entitlement_unavailable_message of this DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock.

        If this node is not accessible due to Entitlements (for instance, you don't own the required game expansion), this is the message to show.

        :param entitlement_unavailable_message: The entitlement_unavailable_message of this DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock.
        :type entitlement_unavailable_message: str
        """

        self._entitlement_unavailable_message = entitlement_unavailable_message
