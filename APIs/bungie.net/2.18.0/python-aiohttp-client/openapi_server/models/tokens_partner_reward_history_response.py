# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tokens_partner_offer_sku_history_response import TokensPartnerOfferSkuHistoryResponse
from openapi_server.models.tokens_twitch_drop_history_response import TokensTwitchDropHistoryResponse
from openapi_server import util


class TokensPartnerRewardHistoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, partner_offers: List[TokensPartnerOfferSkuHistoryResponse]=None, twitch_drops: List[TokensTwitchDropHistoryResponse]=None):
        """TokensPartnerRewardHistoryResponse - a model defined in OpenAPI

        :param partner_offers: The partner_offers of this TokensPartnerRewardHistoryResponse.
        :param twitch_drops: The twitch_drops of this TokensPartnerRewardHistoryResponse.
        """
        self.openapi_types = {
            'partner_offers': List[TokensPartnerOfferSkuHistoryResponse],
            'twitch_drops': List[TokensTwitchDropHistoryResponse]
        }

        self.attribute_map = {
            'partner_offers': 'PartnerOffers',
            'twitch_drops': 'TwitchDrops'
        }

        self._partner_offers = partner_offers
        self._twitch_drops = twitch_drops

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TokensPartnerRewardHistoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tokens.PartnerRewardHistoryResponse of this TokensPartnerRewardHistoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def partner_offers(self):
        """Gets the partner_offers of this TokensPartnerRewardHistoryResponse.


        :return: The partner_offers of this TokensPartnerRewardHistoryResponse.
        :rtype: List[TokensPartnerOfferSkuHistoryResponse]
        """
        return self._partner_offers

    @partner_offers.setter
    def partner_offers(self, partner_offers):
        """Sets the partner_offers of this TokensPartnerRewardHistoryResponse.


        :param partner_offers: The partner_offers of this TokensPartnerRewardHistoryResponse.
        :type partner_offers: List[TokensPartnerOfferSkuHistoryResponse]
        """

        self._partner_offers = partner_offers

    @property
    def twitch_drops(self):
        """Gets the twitch_drops of this TokensPartnerRewardHistoryResponse.


        :return: The twitch_drops of this TokensPartnerRewardHistoryResponse.
        :rtype: List[TokensTwitchDropHistoryResponse]
        """
        return self._twitch_drops

    @twitch_drops.setter
    def twitch_drops(self, twitch_drops):
        """Sets the twitch_drops of this TokensPartnerRewardHistoryResponse.


        :param twitch_drops: The twitch_drops of this TokensPartnerRewardHistoryResponse.
        :type twitch_drops: List[TokensTwitchDropHistoryResponse]
        """

        self._twitch_drops = twitch_drops
