# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server import util


class DestinyDefinitionsDestinyGenderDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, gender_type: int=None, hash: int=None, index: int=None, redacted: bool=None):
        """DestinyDefinitionsDestinyGenderDefinition - a model defined in OpenAPI

        :param display_properties: The display_properties of this DestinyDefinitionsDestinyGenderDefinition.
        :param gender_type: The gender_type of this DestinyDefinitionsDestinyGenderDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinyGenderDefinition.
        :param index: The index of this DestinyDefinitionsDestinyGenderDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinyGenderDefinition.
        """
        self.openapi_types = {
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'gender_type': int,
            'hash': int,
            'index': int,
            'redacted': bool
        }

        self.attribute_map = {
            'display_properties': 'displayProperties',
            'gender_type': 'genderType',
            'hash': 'hash',
            'index': 'index',
            'redacted': 'redacted'
        }

        self._display_properties = display_properties
        self._gender_type = gender_type
        self._hash = hash
        self._index = index
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyGenderDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyGenderDefinition of this DestinyDefinitionsDestinyGenderDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinyGenderDefinition.


        :return: The display_properties of this DestinyDefinitionsDestinyGenderDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinyGenderDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsDestinyGenderDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def gender_type(self):
        """Gets the gender_type of this DestinyDefinitionsDestinyGenderDefinition.

        This is a quick reference enumeration for all of the currently defined Genders. We use the enumeration for quicker lookups in related data, like DestinyClassDefinition.genderedClassNames.

        :return: The gender_type of this DestinyDefinitionsDestinyGenderDefinition.
        :rtype: int
        """
        return self._gender_type

    @gender_type.setter
    def gender_type(self, gender_type):
        """Sets the gender_type of this DestinyDefinitionsDestinyGenderDefinition.

        This is a quick reference enumeration for all of the currently defined Genders. We use the enumeration for quicker lookups in related data, like DestinyClassDefinition.genderedClassNames.

        :param gender_type: The gender_type of this DestinyDefinitionsDestinyGenderDefinition.
        :type gender_type: int
        """

        self._gender_type = gender_type

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinyGenderDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinyGenderDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinyGenderDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinyGenderDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinyGenderDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinyGenderDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinyGenderDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinyGenderDefinition.
        :type index: int
        """

        self._index = index

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinyGenderDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinyGenderDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinyGenderDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinyGenderDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
