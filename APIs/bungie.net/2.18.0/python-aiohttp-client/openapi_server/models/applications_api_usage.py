# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.applications_series import ApplicationsSeries
from openapi_server import util


class ApplicationsApiUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_calls: List[ApplicationsSeries]=None, throttled_requests: List[ApplicationsSeries]=None):
        """ApplicationsApiUsage - a model defined in OpenAPI

        :param api_calls: The api_calls of this ApplicationsApiUsage.
        :param throttled_requests: The throttled_requests of this ApplicationsApiUsage.
        """
        self.openapi_types = {
            'api_calls': List[ApplicationsSeries],
            'throttled_requests': List[ApplicationsSeries]
        }

        self.attribute_map = {
            'api_calls': 'apiCalls',
            'throttled_requests': 'throttledRequests'
        }

        self._api_calls = api_calls
        self._throttled_requests = throttled_requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationsApiUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Applications.ApiUsage of this ApplicationsApiUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_calls(self):
        """Gets the api_calls of this ApplicationsApiUsage.

        Counts for on API calls made for the time range.

        :return: The api_calls of this ApplicationsApiUsage.
        :rtype: List[ApplicationsSeries]
        """
        return self._api_calls

    @api_calls.setter
    def api_calls(self, api_calls):
        """Sets the api_calls of this ApplicationsApiUsage.

        Counts for on API calls made for the time range.

        :param api_calls: The api_calls of this ApplicationsApiUsage.
        :type api_calls: List[ApplicationsSeries]
        """

        self._api_calls = api_calls

    @property
    def throttled_requests(self):
        """Gets the throttled_requests of this ApplicationsApiUsage.

        Instances of blocked requests or requests that crossed the warn threshold during the time range.

        :return: The throttled_requests of this ApplicationsApiUsage.
        :rtype: List[ApplicationsSeries]
        """
        return self._throttled_requests

    @throttled_requests.setter
    def throttled_requests(self, throttled_requests):
        """Sets the throttled_requests of this ApplicationsApiUsage.

        Instances of blocked requests or requests that crossed the warn threshold during the time range.

        :param throttled_requests: The throttled_requests of this ApplicationsApiUsage.
        :type throttled_requests: List[ApplicationsSeries]
        """

        self._throttled_requests = throttled_requests
