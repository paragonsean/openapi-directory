# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_challenge_activity_definition import DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_quest_definition import DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_reward_category_definition import DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_value_definition import DestinyDefinitionsMilestonesDestinyMilestoneValueDefinition
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_vendor_definition import DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition
from openapi_server import util


class DestinyDefinitionsMilestonesDestinyMilestoneDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activities: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition]=None, default_order: int=None, display_preference: int=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, explore_prioritizes_activity_image: bool=None, friendly_name: str=None, has_predictable_dates: bool=None, hash: int=None, image: str=None, index: int=None, is_in_game_milestone: bool=None, milestone_type: int=None, quests: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition]=None, recruitable: bool=None, redacted: bool=None, rewards: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition]=None, show_in_explorer: bool=None, show_in_milestones: bool=None, values: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneValueDefinition]=None, vendors: List[DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition]=None, vendors_display_title: str=None):
        """DestinyDefinitionsMilestonesDestinyMilestoneDefinition - a model defined in OpenAPI

        :param activities: The activities of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param default_order: The default_order of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param display_preference: The display_preference of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param explore_prioritizes_activity_image: The explore_prioritizes_activity_image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param friendly_name: The friendly_name of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param has_predictable_dates: The has_predictable_dates of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param hash: The hash of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param image: The image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param index: The index of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param is_in_game_milestone: The is_in_game_milestone of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param milestone_type: The milestone_type of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param quests: The quests of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param recruitable: The recruitable of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param redacted: The redacted of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param rewards: The rewards of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param show_in_explorer: The show_in_explorer of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param show_in_milestones: The show_in_milestones of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param values: The values of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param vendors: The vendors of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :param vendors_display_title: The vendors_display_title of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        """
        self.openapi_types = {
            'activities': List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition],
            'default_order': int,
            'display_preference': int,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'explore_prioritizes_activity_image': bool,
            'friendly_name': str,
            'has_predictable_dates': bool,
            'hash': int,
            'image': str,
            'index': int,
            'is_in_game_milestone': bool,
            'milestone_type': int,
            'quests': Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition],
            'recruitable': bool,
            'redacted': bool,
            'rewards': Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition],
            'show_in_explorer': bool,
            'show_in_milestones': bool,
            'values': Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneValueDefinition],
            'vendors': List[DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition],
            'vendors_display_title': str
        }

        self.attribute_map = {
            'activities': 'activities',
            'default_order': 'defaultOrder',
            'display_preference': 'displayPreference',
            'display_properties': 'displayProperties',
            'explore_prioritizes_activity_image': 'explorePrioritizesActivityImage',
            'friendly_name': 'friendlyName',
            'has_predictable_dates': 'hasPredictableDates',
            'hash': 'hash',
            'image': 'image',
            'index': 'index',
            'is_in_game_milestone': 'isInGameMilestone',
            'milestone_type': 'milestoneType',
            'quests': 'quests',
            'recruitable': 'recruitable',
            'redacted': 'redacted',
            'rewards': 'rewards',
            'show_in_explorer': 'showInExplorer',
            'show_in_milestones': 'showInMilestones',
            'values': 'values',
            'vendors': 'vendors',
            'vendors_display_title': 'vendorsDisplayTitle'
        }

        self._activities = activities
        self._default_order = default_order
        self._display_preference = display_preference
        self._display_properties = display_properties
        self._explore_prioritizes_activity_image = explore_prioritizes_activity_image
        self._friendly_name = friendly_name
        self._has_predictable_dates = has_predictable_dates
        self._hash = hash
        self._image = image
        self._index = index
        self._is_in_game_milestone = is_in_game_milestone
        self._milestone_type = milestone_type
        self._quests = quests
        self._recruitable = recruitable
        self._redacted = redacted
        self._rewards = rewards
        self._show_in_explorer = show_in_explorer
        self._show_in_milestones = show_in_milestones
        self._values = values
        self._vendors = vendors
        self._vendors_display_title = vendors_display_title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsMilestonesDestinyMilestoneDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Milestones.DestinyMilestoneDefinition of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activities(self):
        """Gets the activities of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        A Milestone can now be represented by one or more activities directly (without a backing Quest), and that activity can have many challenges, modifiers, and related to it.

        :return: The activities of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition]
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """Sets the activities of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        A Milestone can now be represented by one or more activities directly (without a backing Quest), and that activity can have many challenges, modifiers, and related to it.

        :param activities: The activities of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type activities: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition]
        """

        self._activities = activities

    @property
    def default_order(self):
        """Gets the default_order of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.


        :return: The default_order of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: int
        """
        return self._default_order

    @default_order.setter
    def default_order(self, default_order):
        """Sets the default_order of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.


        :param default_order: The default_order of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type default_order: int
        """

        self._default_order = default_order

    @property
    def display_preference(self):
        """Gets the display_preference of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        A hint to the UI to indicate what to show as the display properties for this Milestone when showing \"Live\" milestone data. Feel free to show more than this if desired: this hint is meant to simplify our own UI, but it may prove useful to you as well.

        :return: The display_preference of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: int
        """
        return self._display_preference

    @display_preference.setter
    def display_preference(self, display_preference):
        """Sets the display_preference of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        A hint to the UI to indicate what to show as the display properties for this Milestone when showing \"Live\" milestone data. Feel free to show more than this if desired: this hint is meant to simplify our own UI, but it may prove useful to you as well.

        :param display_preference: The display_preference of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type display_preference: int
        """

        self._display_preference = display_preference

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.


        :return: The display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def explore_prioritizes_activity_image(self):
        """Gets the explore_prioritizes_activity_image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If TRUE, \"Explore Destiny\" (the front page of BNet and the companion app) prioritize using the activity image over any overriding Quest or Milestone image provided. This unfortunate hack is brought to you by Trials of The Nine.

        :return: The explore_prioritizes_activity_image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: bool
        """
        return self._explore_prioritizes_activity_image

    @explore_prioritizes_activity_image.setter
    def explore_prioritizes_activity_image(self, explore_prioritizes_activity_image):
        """Sets the explore_prioritizes_activity_image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If TRUE, \"Explore Destiny\" (the front page of BNet and the companion app) prioritize using the activity image over any overriding Quest or Milestone image provided. This unfortunate hack is brought to you by Trials of The Nine.

        :param explore_prioritizes_activity_image: The explore_prioritizes_activity_image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type explore_prioritizes_activity_image: bool
        """

        self._explore_prioritizes_activity_image = explore_prioritizes_activity_image

    @property
    def friendly_name(self):
        """Gets the friendly_name of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If the milestone has a friendly identifier for association with other features - such as Recruiting - that identifier can be found here. This is \"friendly\" in that it looks better in a URL than whatever the identifier for the Milestone actually is.

        :return: The friendly_name of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If the milestone has a friendly identifier for association with other features - such as Recruiting - that identifier can be found here. This is \"friendly\" in that it looks better in a URL than whatever the identifier for the Milestone actually is.

        :param friendly_name: The friendly_name of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def has_predictable_dates(self):
        """Gets the has_predictable_dates of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        A shortcut for clients - and the server - to understand whether we can predict the start and end dates for this event. In practice, there are multiple ways that an event could have predictable date ranges, but not all events will be able to be predicted via any mechanism (for instance, events that are manually triggered on and off)

        :return: The has_predictable_dates of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: bool
        """
        return self._has_predictable_dates

    @has_predictable_dates.setter
    def has_predictable_dates(self, has_predictable_dates):
        """Sets the has_predictable_dates of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        A shortcut for clients - and the server - to understand whether we can predict the start and end dates for this event. In practice, there are multiple ways that an event could have predictable date ranges, but not all events will be able to be predicted via any mechanism (for instance, events that are manually triggered on and off)

        :param has_predictable_dates: The has_predictable_dates of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type has_predictable_dates: bool
        """

        self._has_predictable_dates = has_predictable_dates

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def image(self):
        """Gets the image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        A custom image someone made just for the milestone. Isn't that special?

        :return: The image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        A custom image someone made just for the milestone. Isn't that special?

        :param image: The image of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type image: str
        """

        self._image = image

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type index: int
        """

        self._index = index

    @property
    def is_in_game_milestone(self):
        """Gets the is_in_game_milestone of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        Some milestones are explicit objectives that you can see and interact with in the game. Some milestones are more conceptual, built by BNet to help advise you on activities and events that happen in-game but that aren't explicitly shown in game as Milestones. If this is TRUE, you can see this as a milestone in the game. If this is FALSE, it's an event or activity you can participate in, but you won't see it as a Milestone in the game's UI.

        :return: The is_in_game_milestone of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: bool
        """
        return self._is_in_game_milestone

    @is_in_game_milestone.setter
    def is_in_game_milestone(self, is_in_game_milestone):
        """Sets the is_in_game_milestone of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        Some milestones are explicit objectives that you can see and interact with in the game. Some milestones are more conceptual, built by BNet to help advise you on activities and events that happen in-game but that aren't explicitly shown in game as Milestones. If this is TRUE, you can see this as a milestone in the game. If this is FALSE, it's an event or activity you can participate in, but you won't see it as a Milestone in the game's UI.

        :param is_in_game_milestone: The is_in_game_milestone of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type is_in_game_milestone: bool
        """

        self._is_in_game_milestone = is_in_game_milestone

    @property
    def milestone_type(self):
        """Gets the milestone_type of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        An enumeration listing one of the possible types of milestones. Check out the DestinyMilestoneType enum for more info!

        :return: The milestone_type of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: int
        """
        return self._milestone_type

    @milestone_type.setter
    def milestone_type(self, milestone_type):
        """Sets the milestone_type of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        An enumeration listing one of the possible types of milestones. Check out the DestinyMilestoneType enum for more info!

        :param milestone_type: The milestone_type of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type milestone_type: int
        """

        self._milestone_type = milestone_type

    @property
    def quests(self):
        """Gets the quests of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        The full set of possible Quests that give the overview of the Milestone event/activity in question. Only one of these can be active at a time for a given Conceptual Milestone, but many of them may be \"available\" for the user to choose from. (for instance, with Milestones you can choose from the three available Quests, but only one can be active at a time) Keyed by the quest item.  As of Forsaken (~September 2018), Quest-style Milestones are being removed for many types of activities. There will likely be further revisions to the Milestone concept in the future.

        :return: The quests of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition]
        """
        return self._quests

    @quests.setter
    def quests(self, quests):
        """Sets the quests of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        The full set of possible Quests that give the overview of the Milestone event/activity in question. Only one of these can be active at a time for a given Conceptual Milestone, but many of them may be \"available\" for the user to choose from. (for instance, with Milestones you can choose from the three available Quests, but only one can be active at a time) Keyed by the quest item.  As of Forsaken (~September 2018), Quest-style Milestones are being removed for many types of activities. There will likely be further revisions to the Milestone concept in the future.

        :param quests: The quests of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type quests: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition]
        """

        self._quests = quests

    @property
    def recruitable(self):
        """Gets the recruitable of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If True, then the Milestone has been integrated with BNet's recruiting feature.

        :return: The recruitable of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: bool
        """
        return self._recruitable

    @recruitable.setter
    def recruitable(self, recruitable):
        """Sets the recruitable of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If True, then the Milestone has been integrated with BNet's recruiting feature.

        :param recruitable: The recruitable of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type recruitable: bool
        """

        self._recruitable = recruitable

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def rewards(self):
        """Gets the rewards of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If this milestone can provide rewards, this will define the categories into which the individual reward entries are placed.  This is keyed by the Category's hash, which is only guaranteed to be unique within a given Milestone.

        :return: The rewards of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition]
        """
        return self._rewards

    @rewards.setter
    def rewards(self, rewards):
        """Sets the rewards of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If this milestone can provide rewards, this will define the categories into which the individual reward entries are placed.  This is keyed by the Category's hash, which is only guaranteed to be unique within a given Milestone.

        :param rewards: The rewards of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type rewards: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition]
        """

        self._rewards = rewards

    @property
    def show_in_explorer(self):
        """Gets the show_in_explorer of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If TRUE, this entry should be returned in the list of milestones for the \"Explore Destiny\" (i.e. new BNet homepage) features of Bungie.net (as long as the underlying event is active) Note that this is a property specifically used by BNet and the companion app for the \"Live Events\" feature of the front page/welcome view: it's not a reflection of what you see in-game.

        :return: The show_in_explorer of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: bool
        """
        return self._show_in_explorer

    @show_in_explorer.setter
    def show_in_explorer(self, show_in_explorer):
        """Sets the show_in_explorer of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If TRUE, this entry should be returned in the list of milestones for the \"Explore Destiny\" (i.e. new BNet homepage) features of Bungie.net (as long as the underlying event is active) Note that this is a property specifically used by BNet and the companion app for the \"Live Events\" feature of the front page/welcome view: it's not a reflection of what you see in-game.

        :param show_in_explorer: The show_in_explorer of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type show_in_explorer: bool
        """

        self._show_in_explorer = show_in_explorer

    @property
    def show_in_milestones(self):
        """Gets the show_in_milestones of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        Determines whether we'll show this Milestone in the user's personal Milestones list.

        :return: The show_in_milestones of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: bool
        """
        return self._show_in_milestones

    @show_in_milestones.setter
    def show_in_milestones(self, show_in_milestones):
        """Sets the show_in_milestones of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        Determines whether we'll show this Milestone in the user's personal Milestones list.

        :param show_in_milestones: The show_in_milestones of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type show_in_milestones: bool
        """

        self._show_in_milestones = show_in_milestones

    @property
    def values(self):
        """Gets the values of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        Sometimes, milestones will have arbitrary values associated with them that are of interest to us or to third party developers. This is the collection of those values' definitions, keyed by the identifier of the value and providing useful definition information such as localizable names and descriptions for the value.

        :return: The values of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneValueDefinition]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        Sometimes, milestones will have arbitrary values associated with them that are of interest to us or to third party developers. This is the collection of those values' definitions, keyed by the identifier of the value and providing useful definition information such as localizable names and descriptions for the value.

        :param values: The values of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type values: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneValueDefinition]
        """

        self._values = values

    @property
    def vendors(self):
        """Gets the vendors of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        Sometimes, milestones will have rewards provided by Vendors. This definition gives the information needed to understand which vendors are relevant, the order in which they should be returned if order matters, and the conditions under which the Vendor is relevant to the user.

        :return: The vendors of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: List[DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition]
        """
        return self._vendors

    @vendors.setter
    def vendors(self, vendors):
        """Sets the vendors of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        Sometimes, milestones will have rewards provided by Vendors. This definition gives the information needed to understand which vendors are relevant, the order in which they should be returned if order matters, and the conditions under which the Vendor is relevant to the user.

        :param vendors: The vendors of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type vendors: List[DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition]
        """

        self._vendors = vendors

    @property
    def vendors_display_title(self):
        """Gets the vendors_display_title of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If you're going to show Vendors for the Milestone, you can use this as a localized \"header\" for the section where you show that vendor data. It'll provide a more context-relevant clue about what the vendor's role is in the Milestone.

        :return: The vendors_display_title of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :rtype: str
        """
        return self._vendors_display_title

    @vendors_display_title.setter
    def vendors_display_title(self, vendors_display_title):
        """Sets the vendors_display_title of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.

        If you're going to show Vendors for the Milestone, you can use this as a localized \"header\" for the section where you show that vendor data. It'll provide a more context-relevant clue about what the vendor's role is in the Milestone.

        :param vendors_display_title: The vendors_display_title of this DestinyDefinitionsMilestonesDestinyMilestoneDefinition.
        :type vendors_display_title: str
        """

        self._vendors_display_title = vendors_display_title
