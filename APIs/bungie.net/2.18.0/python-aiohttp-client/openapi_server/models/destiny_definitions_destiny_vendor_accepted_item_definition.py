# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDestinyVendorAcceptedItemDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accepted_inventory_bucket_hash: int=None, destination_inventory_bucket_hash: int=None):
        """DestinyDefinitionsDestinyVendorAcceptedItemDefinition - a model defined in OpenAPI

        :param accepted_inventory_bucket_hash: The accepted_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.
        :param destination_inventory_bucket_hash: The destination_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.
        """
        self.openapi_types = {
            'accepted_inventory_bucket_hash': int,
            'destination_inventory_bucket_hash': int
        }

        self.attribute_map = {
            'accepted_inventory_bucket_hash': 'acceptedInventoryBucketHash',
            'destination_inventory_bucket_hash': 'destinationInventoryBucketHash'
        }

        self._accepted_inventory_bucket_hash = accepted_inventory_bucket_hash
        self._destination_inventory_bucket_hash = destination_inventory_bucket_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyVendorAcceptedItemDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyVendorAcceptedItemDefinition of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accepted_inventory_bucket_hash(self):
        """Gets the accepted_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.

        The \"source\" bucket for a transfer. When a user wants to transfer an item, the appropriate DestinyVendorDefinition's acceptedItems property is evaluated, looking for an entry where acceptedInventoryBucketHash matches the bucket that the item being transferred is currently located. If it exists, the item will be transferred into whatever bucket is defined by destinationInventoryBucketHash.

        :return: The accepted_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.
        :rtype: int
        """
        return self._accepted_inventory_bucket_hash

    @accepted_inventory_bucket_hash.setter
    def accepted_inventory_bucket_hash(self, accepted_inventory_bucket_hash):
        """Sets the accepted_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.

        The \"source\" bucket for a transfer. When a user wants to transfer an item, the appropriate DestinyVendorDefinition's acceptedItems property is evaluated, looking for an entry where acceptedInventoryBucketHash matches the bucket that the item being transferred is currently located. If it exists, the item will be transferred into whatever bucket is defined by destinationInventoryBucketHash.

        :param accepted_inventory_bucket_hash: The accepted_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.
        :type accepted_inventory_bucket_hash: int
        """

        self._accepted_inventory_bucket_hash = accepted_inventory_bucket_hash

    @property
    def destination_inventory_bucket_hash(self):
        """Gets the destination_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.

        This is the bucket where the item being transferred will be put, given that it was being transferred *from* the bucket defined in acceptedInventoryBucketHash.

        :return: The destination_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.
        :rtype: int
        """
        return self._destination_inventory_bucket_hash

    @destination_inventory_bucket_hash.setter
    def destination_inventory_bucket_hash(self, destination_inventory_bucket_hash):
        """Sets the destination_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.

        This is the bucket where the item being transferred will be put, given that it was being transferred *from* the bucket defined in acceptedInventoryBucketHash.

        :param destination_inventory_bucket_hash: The destination_inventory_bucket_hash of this DestinyDefinitionsDestinyVendorAcceptedItemDefinition.
        :type destination_inventory_bucket_hash: int
        """

        self._destination_inventory_bucket_hash = destination_inventory_bucket_hash
