# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_base_item_component_set_ofuint32 import DestinyBaseItemComponentSetOfuint32
from openapi_server.models.destiny_item_component_set_ofint64 import DestinyItemComponentSetOfint64
from openapi_server.models.single_component_response_of_destiny_character_activities_component import SingleComponentResponseOfDestinyCharacterActivitiesComponent
from openapi_server.models.single_component_response_of_destiny_character_component import SingleComponentResponseOfDestinyCharacterComponent
from openapi_server.models.single_component_response_of_destiny_character_progression_component import SingleComponentResponseOfDestinyCharacterProgressionComponent
from openapi_server.models.single_component_response_of_destiny_character_records_component import SingleComponentResponseOfDestinyCharacterRecordsComponent
from openapi_server.models.single_component_response_of_destiny_character_render_component import SingleComponentResponseOfDestinyCharacterRenderComponent
from openapi_server.models.single_component_response_of_destiny_collectibles_component import SingleComponentResponseOfDestinyCollectiblesComponent
from openapi_server.models.single_component_response_of_destiny_currencies_component import SingleComponentResponseOfDestinyCurrenciesComponent
from openapi_server.models.single_component_response_of_destiny_inventory_component import SingleComponentResponseOfDestinyInventoryComponent
from openapi_server.models.single_component_response_of_destiny_kiosks_component import SingleComponentResponseOfDestinyKiosksComponent
from openapi_server.models.single_component_response_of_destiny_loadouts_component import SingleComponentResponseOfDestinyLoadoutsComponent
from openapi_server.models.single_component_response_of_destiny_plug_sets_component import SingleComponentResponseOfDestinyPlugSetsComponent
from openapi_server.models.single_component_response_of_destiny_presentation_nodes_component import SingleComponentResponseOfDestinyPresentationNodesComponent
from openapi_server import util


class DestinyResponsesDestinyCharacterResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activities: SingleComponentResponseOfDestinyCharacterActivitiesComponent=None, character: SingleComponentResponseOfDestinyCharacterComponent=None, collectibles: SingleComponentResponseOfDestinyCollectiblesComponent=None, currency_lookups: SingleComponentResponseOfDestinyCurrenciesComponent=None, equipment: SingleComponentResponseOfDestinyInventoryComponent=None, inventory: SingleComponentResponseOfDestinyInventoryComponent=None, item_components: DestinyItemComponentSetOfint64=None, kiosks: SingleComponentResponseOfDestinyKiosksComponent=None, loadouts: SingleComponentResponseOfDestinyLoadoutsComponent=None, plug_sets: SingleComponentResponseOfDestinyPlugSetsComponent=None, presentation_nodes: SingleComponentResponseOfDestinyPresentationNodesComponent=None, progressions: SingleComponentResponseOfDestinyCharacterProgressionComponent=None, records: SingleComponentResponseOfDestinyCharacterRecordsComponent=None, render_data: SingleComponentResponseOfDestinyCharacterRenderComponent=None, uninstanced_item_components: DestinyBaseItemComponentSetOfuint32=None):
        """DestinyResponsesDestinyCharacterResponse - a model defined in OpenAPI

        :param activities: The activities of this DestinyResponsesDestinyCharacterResponse.
        :param character: The character of this DestinyResponsesDestinyCharacterResponse.
        :param collectibles: The collectibles of this DestinyResponsesDestinyCharacterResponse.
        :param currency_lookups: The currency_lookups of this DestinyResponsesDestinyCharacterResponse.
        :param equipment: The equipment of this DestinyResponsesDestinyCharacterResponse.
        :param inventory: The inventory of this DestinyResponsesDestinyCharacterResponse.
        :param item_components: The item_components of this DestinyResponsesDestinyCharacterResponse.
        :param kiosks: The kiosks of this DestinyResponsesDestinyCharacterResponse.
        :param loadouts: The loadouts of this DestinyResponsesDestinyCharacterResponse.
        :param plug_sets: The plug_sets of this DestinyResponsesDestinyCharacterResponse.
        :param presentation_nodes: The presentation_nodes of this DestinyResponsesDestinyCharacterResponse.
        :param progressions: The progressions of this DestinyResponsesDestinyCharacterResponse.
        :param records: The records of this DestinyResponsesDestinyCharacterResponse.
        :param render_data: The render_data of this DestinyResponsesDestinyCharacterResponse.
        :param uninstanced_item_components: The uninstanced_item_components of this DestinyResponsesDestinyCharacterResponse.
        """
        self.openapi_types = {
            'activities': SingleComponentResponseOfDestinyCharacterActivitiesComponent,
            'character': SingleComponentResponseOfDestinyCharacterComponent,
            'collectibles': SingleComponentResponseOfDestinyCollectiblesComponent,
            'currency_lookups': SingleComponentResponseOfDestinyCurrenciesComponent,
            'equipment': SingleComponentResponseOfDestinyInventoryComponent,
            'inventory': SingleComponentResponseOfDestinyInventoryComponent,
            'item_components': DestinyItemComponentSetOfint64,
            'kiosks': SingleComponentResponseOfDestinyKiosksComponent,
            'loadouts': SingleComponentResponseOfDestinyLoadoutsComponent,
            'plug_sets': SingleComponentResponseOfDestinyPlugSetsComponent,
            'presentation_nodes': SingleComponentResponseOfDestinyPresentationNodesComponent,
            'progressions': SingleComponentResponseOfDestinyCharacterProgressionComponent,
            'records': SingleComponentResponseOfDestinyCharacterRecordsComponent,
            'render_data': SingleComponentResponseOfDestinyCharacterRenderComponent,
            'uninstanced_item_components': DestinyBaseItemComponentSetOfuint32
        }

        self.attribute_map = {
            'activities': 'activities',
            'character': 'character',
            'collectibles': 'collectibles',
            'currency_lookups': 'currencyLookups',
            'equipment': 'equipment',
            'inventory': 'inventory',
            'item_components': 'itemComponents',
            'kiosks': 'kiosks',
            'loadouts': 'loadouts',
            'plug_sets': 'plugSets',
            'presentation_nodes': 'presentationNodes',
            'progressions': 'progressions',
            'records': 'records',
            'render_data': 'renderData',
            'uninstanced_item_components': 'uninstancedItemComponents'
        }

        self._activities = activities
        self._character = character
        self._collectibles = collectibles
        self._currency_lookups = currency_lookups
        self._equipment = equipment
        self._inventory = inventory
        self._item_components = item_components
        self._kiosks = kiosks
        self._loadouts = loadouts
        self._plug_sets = plug_sets
        self._presentation_nodes = presentation_nodes
        self._progressions = progressions
        self._records = records
        self._render_data = render_data
        self._uninstanced_item_components = uninstanced_item_components

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyResponsesDestinyCharacterResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Responses.DestinyCharacterResponse of this DestinyResponsesDestinyCharacterResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activities(self):
        """Gets the activities of this DestinyResponsesDestinyCharacterResponse.

        Activity data - info about current activities available to the player.  COMPONENT TYPE: CharacterActivities

        :return: The activities of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyCharacterActivitiesComponent
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """Sets the activities of this DestinyResponsesDestinyCharacterResponse.

        Activity data - info about current activities available to the player.  COMPONENT TYPE: CharacterActivities

        :param activities: The activities of this DestinyResponsesDestinyCharacterResponse.
        :type activities: SingleComponentResponseOfDestinyCharacterActivitiesComponent
        """

        self._activities = activities

    @property
    def character(self):
        """Gets the character of this DestinyResponsesDestinyCharacterResponse.

        Base information about the character in question.  COMPONENT TYPE: Characters

        :return: The character of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyCharacterComponent
        """
        return self._character

    @character.setter
    def character(self, character):
        """Sets the character of this DestinyResponsesDestinyCharacterResponse.

        Base information about the character in question.  COMPONENT TYPE: Characters

        :param character: The character of this DestinyResponsesDestinyCharacterResponse.
        :type character: SingleComponentResponseOfDestinyCharacterComponent
        """

        self._character = character

    @property
    def collectibles(self):
        """Gets the collectibles of this DestinyResponsesDestinyCharacterResponse.

        COMPONENT TYPE: Collectibles

        :return: The collectibles of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyCollectiblesComponent
        """
        return self._collectibles

    @collectibles.setter
    def collectibles(self, collectibles):
        """Sets the collectibles of this DestinyResponsesDestinyCharacterResponse.

        COMPONENT TYPE: Collectibles

        :param collectibles: The collectibles of this DestinyResponsesDestinyCharacterResponse.
        :type collectibles: SingleComponentResponseOfDestinyCollectiblesComponent
        """

        self._collectibles = collectibles

    @property
    def currency_lookups(self):
        """Gets the currency_lookups of this DestinyResponsesDestinyCharacterResponse.

        A \"lookup\" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups

        :return: The currency_lookups of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyCurrenciesComponent
        """
        return self._currency_lookups

    @currency_lookups.setter
    def currency_lookups(self, currency_lookups):
        """Sets the currency_lookups of this DestinyResponsesDestinyCharacterResponse.

        A \"lookup\" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups

        :param currency_lookups: The currency_lookups of this DestinyResponsesDestinyCharacterResponse.
        :type currency_lookups: SingleComponentResponseOfDestinyCurrenciesComponent
        """

        self._currency_lookups = currency_lookups

    @property
    def equipment(self):
        """Gets the equipment of this DestinyResponsesDestinyCharacterResponse.

        Equipped items on the character.  COMPONENT TYPE: CharacterEquipment

        :return: The equipment of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyInventoryComponent
        """
        return self._equipment

    @equipment.setter
    def equipment(self, equipment):
        """Sets the equipment of this DestinyResponsesDestinyCharacterResponse.

        Equipped items on the character.  COMPONENT TYPE: CharacterEquipment

        :param equipment: The equipment of this DestinyResponsesDestinyCharacterResponse.
        :type equipment: SingleComponentResponseOfDestinyInventoryComponent
        """

        self._equipment = equipment

    @property
    def inventory(self):
        """Gets the inventory of this DestinyResponsesDestinyCharacterResponse.

        The character-level non-equipped inventory items.  COMPONENT TYPE: CharacterInventories

        :return: The inventory of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyInventoryComponent
        """
        return self._inventory

    @inventory.setter
    def inventory(self, inventory):
        """Sets the inventory of this DestinyResponsesDestinyCharacterResponse.

        The character-level non-equipped inventory items.  COMPONENT TYPE: CharacterInventories

        :param inventory: The inventory of this DestinyResponsesDestinyCharacterResponse.
        :type inventory: SingleComponentResponseOfDestinyInventoryComponent
        """

        self._inventory = inventory

    @property
    def item_components(self):
        """Gets the item_components of this DestinyResponsesDestinyCharacterResponse.

        The set of components belonging to the player's instanced items.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]

        :return: The item_components of this DestinyResponsesDestinyCharacterResponse.
        :rtype: DestinyItemComponentSetOfint64
        """
        return self._item_components

    @item_components.setter
    def item_components(self, item_components):
        """Sets the item_components of this DestinyResponsesDestinyCharacterResponse.

        The set of components belonging to the player's instanced items.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]

        :param item_components: The item_components of this DestinyResponsesDestinyCharacterResponse.
        :type item_components: DestinyItemComponentSetOfint64
        """

        self._item_components = item_components

    @property
    def kiosks(self):
        """Gets the kiosks of this DestinyResponsesDestinyCharacterResponse.

        Items available from Kiosks that are available to this specific character.   COMPONENT TYPE: Kiosks

        :return: The kiosks of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyKiosksComponent
        """
        return self._kiosks

    @kiosks.setter
    def kiosks(self, kiosks):
        """Sets the kiosks of this DestinyResponsesDestinyCharacterResponse.

        Items available from Kiosks that are available to this specific character.   COMPONENT TYPE: Kiosks

        :param kiosks: The kiosks of this DestinyResponsesDestinyCharacterResponse.
        :type kiosks: SingleComponentResponseOfDestinyKiosksComponent
        """

        self._kiosks = kiosks

    @property
    def loadouts(self):
        """Gets the loadouts of this DestinyResponsesDestinyCharacterResponse.

        The loadouts available to the character.  COMPONENT TYPE: CharacterLoadouts

        :return: The loadouts of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyLoadoutsComponent
        """
        return self._loadouts

    @loadouts.setter
    def loadouts(self, loadouts):
        """Sets the loadouts of this DestinyResponsesDestinyCharacterResponse.

        The loadouts available to the character.  COMPONENT TYPE: CharacterLoadouts

        :param loadouts: The loadouts of this DestinyResponsesDestinyCharacterResponse.
        :type loadouts: SingleComponentResponseOfDestinyLoadoutsComponent
        """

        self._loadouts = loadouts

    @property
    def plug_sets(self):
        """Gets the plug_sets of this DestinyResponsesDestinyCharacterResponse.

        When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more info), this is the set of plugs and their states that are scoped to this character.  This comes back with ItemSockets, as it is needed for a complete picture of the sockets on requested items.  COMPONENT TYPE: ItemSockets

        :return: The plug_sets of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyPlugSetsComponent
        """
        return self._plug_sets

    @plug_sets.setter
    def plug_sets(self, plug_sets):
        """Sets the plug_sets of this DestinyResponsesDestinyCharacterResponse.

        When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more info), this is the set of plugs and their states that are scoped to this character.  This comes back with ItemSockets, as it is needed for a complete picture of the sockets on requested items.  COMPONENT TYPE: ItemSockets

        :param plug_sets: The plug_sets of this DestinyResponsesDestinyCharacterResponse.
        :type plug_sets: SingleComponentResponseOfDestinyPlugSetsComponent
        """

        self._plug_sets = plug_sets

    @property
    def presentation_nodes(self):
        """Gets the presentation_nodes of this DestinyResponsesDestinyCharacterResponse.

        COMPONENT TYPE: PresentationNodes

        :return: The presentation_nodes of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyPresentationNodesComponent
        """
        return self._presentation_nodes

    @presentation_nodes.setter
    def presentation_nodes(self, presentation_nodes):
        """Sets the presentation_nodes of this DestinyResponsesDestinyCharacterResponse.

        COMPONENT TYPE: PresentationNodes

        :param presentation_nodes: The presentation_nodes of this DestinyResponsesDestinyCharacterResponse.
        :type presentation_nodes: SingleComponentResponseOfDestinyPresentationNodesComponent
        """

        self._presentation_nodes = presentation_nodes

    @property
    def progressions(self):
        """Gets the progressions of this DestinyResponsesDestinyCharacterResponse.

        Character progression data, including Milestones.  COMPONENT TYPE: CharacterProgressions

        :return: The progressions of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyCharacterProgressionComponent
        """
        return self._progressions

    @progressions.setter
    def progressions(self, progressions):
        """Sets the progressions of this DestinyResponsesDestinyCharacterResponse.

        Character progression data, including Milestones.  COMPONENT TYPE: CharacterProgressions

        :param progressions: The progressions of this DestinyResponsesDestinyCharacterResponse.
        :type progressions: SingleComponentResponseOfDestinyCharacterProgressionComponent
        """

        self._progressions = progressions

    @property
    def records(self):
        """Gets the records of this DestinyResponsesDestinyCharacterResponse.

        COMPONENT TYPE: Records

        :return: The records of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyCharacterRecordsComponent
        """
        return self._records

    @records.setter
    def records(self, records):
        """Sets the records of this DestinyResponsesDestinyCharacterResponse.

        COMPONENT TYPE: Records

        :param records: The records of this DestinyResponsesDestinyCharacterResponse.
        :type records: SingleComponentResponseOfDestinyCharacterRecordsComponent
        """

        self._records = records

    @property
    def render_data(self):
        """Gets the render_data of this DestinyResponsesDestinyCharacterResponse.

        Character rendering data - a minimal set of information about equipment and dyes used for rendering.  COMPONENT TYPE: CharacterRenderData

        :return: The render_data of this DestinyResponsesDestinyCharacterResponse.
        :rtype: SingleComponentResponseOfDestinyCharacterRenderComponent
        """
        return self._render_data

    @render_data.setter
    def render_data(self, render_data):
        """Sets the render_data of this DestinyResponsesDestinyCharacterResponse.

        Character rendering data - a minimal set of information about equipment and dyes used for rendering.  COMPONENT TYPE: CharacterRenderData

        :param render_data: The render_data of this DestinyResponsesDestinyCharacterResponse.
        :type render_data: SingleComponentResponseOfDestinyCharacterRenderComponent
        """

        self._render_data = render_data

    @property
    def uninstanced_item_components(self):
        """Gets the uninstanced_item_components of this DestinyResponsesDestinyCharacterResponse.

        The set of components belonging to the player's UNinstanced items. Because apparently now those too can have information relevant to the character's state.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]

        :return: The uninstanced_item_components of this DestinyResponsesDestinyCharacterResponse.
        :rtype: DestinyBaseItemComponentSetOfuint32
        """
        return self._uninstanced_item_components

    @uninstanced_item_components.setter
    def uninstanced_item_components(self, uninstanced_item_components):
        """Sets the uninstanced_item_components of this DestinyResponsesDestinyCharacterResponse.

        The set of components belonging to the player's UNinstanced items. Because apparently now those too can have information relevant to the character's state.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]

        :param uninstanced_item_components: The uninstanced_item_components of this DestinyResponsesDestinyCharacterResponse.
        :type uninstanced_item_components: DestinyBaseItemComponentSetOfuint32
        """

        self._uninstanced_item_components = uninstanced_item_components
