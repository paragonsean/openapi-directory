# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_components_collectibles_destiny_collectible_component import DestinyComponentsCollectiblesDestinyCollectibleComponent
from openapi_server import util


class DestinyComponentsCollectiblesDestinyCollectiblesComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collectibles: Dict[str, DestinyComponentsCollectiblesDestinyCollectibleComponent]=None, collection_badges_root_node_hash: int=None, collection_categories_root_node_hash: int=None):
        """DestinyComponentsCollectiblesDestinyCollectiblesComponent - a model defined in OpenAPI

        :param collectibles: The collectibles of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        :param collection_badges_root_node_hash: The collection_badges_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        :param collection_categories_root_node_hash: The collection_categories_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        """
        self.openapi_types = {
            'collectibles': Dict[str, DestinyComponentsCollectiblesDestinyCollectibleComponent],
            'collection_badges_root_node_hash': int,
            'collection_categories_root_node_hash': int
        }

        self.attribute_map = {
            'collectibles': 'collectibles',
            'collection_badges_root_node_hash': 'collectionBadgesRootNodeHash',
            'collection_categories_root_node_hash': 'collectionCategoriesRootNodeHash'
        }

        self._collectibles = collectibles
        self._collection_badges_root_node_hash = collection_badges_root_node_hash
        self._collection_categories_root_node_hash = collection_categories_root_node_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyComponentsCollectiblesDestinyCollectiblesComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Components.Collectibles.DestinyCollectiblesComponent of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collectibles(self):
        """Gets the collectibles of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.


        :return: The collectibles of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        :rtype: Dict[str, DestinyComponentsCollectiblesDestinyCollectibleComponent]
        """
        return self._collectibles

    @collectibles.setter
    def collectibles(self, collectibles):
        """Sets the collectibles of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.


        :param collectibles: The collectibles of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        :type collectibles: Dict[str, DestinyComponentsCollectiblesDestinyCollectibleComponent]
        """

        self._collectibles = collectibles

    @property
    def collection_badges_root_node_hash(self):
        """Gets the collection_badges_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.

        The hash for the root presentation node definition of Collection Badges.

        :return: The collection_badges_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        :rtype: int
        """
        return self._collection_badges_root_node_hash

    @collection_badges_root_node_hash.setter
    def collection_badges_root_node_hash(self, collection_badges_root_node_hash):
        """Sets the collection_badges_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.

        The hash for the root presentation node definition of Collection Badges.

        :param collection_badges_root_node_hash: The collection_badges_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        :type collection_badges_root_node_hash: int
        """

        self._collection_badges_root_node_hash = collection_badges_root_node_hash

    @property
    def collection_categories_root_node_hash(self):
        """Gets the collection_categories_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.

        The hash for the root presentation node definition of Collection categories.

        :return: The collection_categories_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        :rtype: int
        """
        return self._collection_categories_root_node_hash

    @collection_categories_root_node_hash.setter
    def collection_categories_root_node_hash(self, collection_categories_root_node_hash):
        """Sets the collection_categories_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.

        The hash for the root presentation node definition of Collection categories.

        :param collection_categories_root_node_hash: The collection_categories_root_node_hash of this DestinyComponentsCollectiblesDestinyCollectiblesComponent.
        :type collection_categories_root_node_hash: int
        """

        self._collection_categories_root_node_hash = collection_categories_root_node_hash
