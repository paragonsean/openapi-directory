# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupsV2GroupQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: int=None, current_page: int=None, group_member_count_filter: int=None, group_type: int=None, items_per_page: int=None, locale_filter: str=None, name: str=None, request_continuation_token: str=None, sort_by: int=None, tag_text: str=None):
        """GroupsV2GroupQuery - a model defined in OpenAPI

        :param creation_date: The creation_date of this GroupsV2GroupQuery.
        :param current_page: The current_page of this GroupsV2GroupQuery.
        :param group_member_count_filter: The group_member_count_filter of this GroupsV2GroupQuery.
        :param group_type: The group_type of this GroupsV2GroupQuery.
        :param items_per_page: The items_per_page of this GroupsV2GroupQuery.
        :param locale_filter: The locale_filter of this GroupsV2GroupQuery.
        :param name: The name of this GroupsV2GroupQuery.
        :param request_continuation_token: The request_continuation_token of this GroupsV2GroupQuery.
        :param sort_by: The sort_by of this GroupsV2GroupQuery.
        :param tag_text: The tag_text of this GroupsV2GroupQuery.
        """
        self.openapi_types = {
            'creation_date': int,
            'current_page': int,
            'group_member_count_filter': int,
            'group_type': int,
            'items_per_page': int,
            'locale_filter': str,
            'name': str,
            'request_continuation_token': str,
            'sort_by': int,
            'tag_text': str
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'current_page': 'currentPage',
            'group_member_count_filter': 'groupMemberCountFilter',
            'group_type': 'groupType',
            'items_per_page': 'itemsPerPage',
            'locale_filter': 'localeFilter',
            'name': 'name',
            'request_continuation_token': 'requestContinuationToken',
            'sort_by': 'sortBy',
            'tag_text': 'tagText'
        }

        self._creation_date = creation_date
        self._current_page = current_page
        self._group_member_count_filter = group_member_count_filter
        self._group_type = group_type
        self._items_per_page = items_per_page
        self._locale_filter = locale_filter
        self._name = name
        self._request_continuation_token = request_continuation_token
        self._sort_by = sort_by
        self._tag_text = tag_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupsV2GroupQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupsV2.GroupQuery of this GroupsV2GroupQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this GroupsV2GroupQuery.


        :return: The creation_date of this GroupsV2GroupQuery.
        :rtype: int
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this GroupsV2GroupQuery.


        :param creation_date: The creation_date of this GroupsV2GroupQuery.
        :type creation_date: int
        """

        self._creation_date = creation_date

    @property
    def current_page(self):
        """Gets the current_page of this GroupsV2GroupQuery.


        :return: The current_page of this GroupsV2GroupQuery.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this GroupsV2GroupQuery.


        :param current_page: The current_page of this GroupsV2GroupQuery.
        :type current_page: int
        """

        self._current_page = current_page

    @property
    def group_member_count_filter(self):
        """Gets the group_member_count_filter of this GroupsV2GroupQuery.


        :return: The group_member_count_filter of this GroupsV2GroupQuery.
        :rtype: int
        """
        return self._group_member_count_filter

    @group_member_count_filter.setter
    def group_member_count_filter(self, group_member_count_filter):
        """Sets the group_member_count_filter of this GroupsV2GroupQuery.


        :param group_member_count_filter: The group_member_count_filter of this GroupsV2GroupQuery.
        :type group_member_count_filter: int
        """
        allowed_values = [0, 1, 2, 3]  # noqa: E501
        if group_member_count_filter not in allowed_values:
            raise ValueError(
                "Invalid value for `group_member_count_filter` ({0}), must be one of {1}"
                .format(group_member_count_filter, allowed_values)
            )

        self._group_member_count_filter = group_member_count_filter

    @property
    def group_type(self):
        """Gets the group_type of this GroupsV2GroupQuery.


        :return: The group_type of this GroupsV2GroupQuery.
        :rtype: int
        """
        return self._group_type

    @group_type.setter
    def group_type(self, group_type):
        """Sets the group_type of this GroupsV2GroupQuery.


        :param group_type: The group_type of this GroupsV2GroupQuery.
        :type group_type: int
        """

        self._group_type = group_type

    @property
    def items_per_page(self):
        """Gets the items_per_page of this GroupsV2GroupQuery.


        :return: The items_per_page of this GroupsV2GroupQuery.
        :rtype: int
        """
        return self._items_per_page

    @items_per_page.setter
    def items_per_page(self, items_per_page):
        """Sets the items_per_page of this GroupsV2GroupQuery.


        :param items_per_page: The items_per_page of this GroupsV2GroupQuery.
        :type items_per_page: int
        """

        self._items_per_page = items_per_page

    @property
    def locale_filter(self):
        """Gets the locale_filter of this GroupsV2GroupQuery.


        :return: The locale_filter of this GroupsV2GroupQuery.
        :rtype: str
        """
        return self._locale_filter

    @locale_filter.setter
    def locale_filter(self, locale_filter):
        """Sets the locale_filter of this GroupsV2GroupQuery.


        :param locale_filter: The locale_filter of this GroupsV2GroupQuery.
        :type locale_filter: str
        """

        self._locale_filter = locale_filter

    @property
    def name(self):
        """Gets the name of this GroupsV2GroupQuery.


        :return: The name of this GroupsV2GroupQuery.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GroupsV2GroupQuery.


        :param name: The name of this GroupsV2GroupQuery.
        :type name: str
        """

        self._name = name

    @property
    def request_continuation_token(self):
        """Gets the request_continuation_token of this GroupsV2GroupQuery.


        :return: The request_continuation_token of this GroupsV2GroupQuery.
        :rtype: str
        """
        return self._request_continuation_token

    @request_continuation_token.setter
    def request_continuation_token(self, request_continuation_token):
        """Sets the request_continuation_token of this GroupsV2GroupQuery.


        :param request_continuation_token: The request_continuation_token of this GroupsV2GroupQuery.
        :type request_continuation_token: str
        """

        self._request_continuation_token = request_continuation_token

    @property
    def sort_by(self):
        """Gets the sort_by of this GroupsV2GroupQuery.


        :return: The sort_by of this GroupsV2GroupQuery.
        :rtype: int
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this GroupsV2GroupQuery.


        :param sort_by: The sort_by of this GroupsV2GroupQuery.
        :type sort_by: int
        """

        self._sort_by = sort_by

    @property
    def tag_text(self):
        """Gets the tag_text of this GroupsV2GroupQuery.


        :return: The tag_text of this GroupsV2GroupQuery.
        :rtype: str
        """
        return self._tag_text

    @tag_text.setter
    def tag_text(self, tag_text):
        """Sets the tag_text of this GroupsV2GroupQuery.


        :param tag_text: The tag_text of this GroupsV2GroupQuery.
        :type tag_text: str
        """

        self._tag_text = tag_text
