# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server import util


class DestinyDefinitionsDestinyStatDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregation_type: int=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, has_computed_block: bool=None, hash: int=None, index: int=None, redacted: bool=None, stat_category: int=None):
        """DestinyDefinitionsDestinyStatDefinition - a model defined in OpenAPI

        :param aggregation_type: The aggregation_type of this DestinyDefinitionsDestinyStatDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsDestinyStatDefinition.
        :param has_computed_block: The has_computed_block of this DestinyDefinitionsDestinyStatDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinyStatDefinition.
        :param index: The index of this DestinyDefinitionsDestinyStatDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinyStatDefinition.
        :param stat_category: The stat_category of this DestinyDefinitionsDestinyStatDefinition.
        """
        self.openapi_types = {
            'aggregation_type': int,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'has_computed_block': bool,
            'hash': int,
            'index': int,
            'redacted': bool,
            'stat_category': int
        }

        self.attribute_map = {
            'aggregation_type': 'aggregationType',
            'display_properties': 'displayProperties',
            'has_computed_block': 'hasComputedBlock',
            'hash': 'hash',
            'index': 'index',
            'redacted': 'redacted',
            'stat_category': 'statCategory'
        }

        self._aggregation_type = aggregation_type
        self._display_properties = display_properties
        self._has_computed_block = has_computed_block
        self._hash = hash
        self._index = index
        self._redacted = redacted
        self._stat_category = stat_category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyStatDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyStatDefinition of this DestinyDefinitionsDestinyStatDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregation_type(self):
        """Gets the aggregation_type of this DestinyDefinitionsDestinyStatDefinition.

        Stats can exist on a character or an item, and they may potentially be aggregated in different ways. The DestinyStatAggregationType enum value indicates the way that this stat is being aggregated.

        :return: The aggregation_type of this DestinyDefinitionsDestinyStatDefinition.
        :rtype: int
        """
        return self._aggregation_type

    @aggregation_type.setter
    def aggregation_type(self, aggregation_type):
        """Sets the aggregation_type of this DestinyDefinitionsDestinyStatDefinition.

        Stats can exist on a character or an item, and they may potentially be aggregated in different ways. The DestinyStatAggregationType enum value indicates the way that this stat is being aggregated.

        :param aggregation_type: The aggregation_type of this DestinyDefinitionsDestinyStatDefinition.
        :type aggregation_type: int
        """

        self._aggregation_type = aggregation_type

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinyStatDefinition.


        :return: The display_properties of this DestinyDefinitionsDestinyStatDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinyStatDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsDestinyStatDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def has_computed_block(self):
        """Gets the has_computed_block of this DestinyDefinitionsDestinyStatDefinition.

        True if the stat is computed rather than being delivered as a raw value on items.  For instance, the Light stat in Destiny 1 was a computed stat.

        :return: The has_computed_block of this DestinyDefinitionsDestinyStatDefinition.
        :rtype: bool
        """
        return self._has_computed_block

    @has_computed_block.setter
    def has_computed_block(self, has_computed_block):
        """Sets the has_computed_block of this DestinyDefinitionsDestinyStatDefinition.

        True if the stat is computed rather than being delivered as a raw value on items.  For instance, the Light stat in Destiny 1 was a computed stat.

        :param has_computed_block: The has_computed_block of this DestinyDefinitionsDestinyStatDefinition.
        :type has_computed_block: bool
        """

        self._has_computed_block = has_computed_block

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinyStatDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinyStatDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinyStatDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinyStatDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinyStatDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinyStatDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinyStatDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinyStatDefinition.
        :type index: int
        """

        self._index = index

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinyStatDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinyStatDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinyStatDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinyStatDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def stat_category(self):
        """Gets the stat_category of this DestinyDefinitionsDestinyStatDefinition.

        The category of the stat, according to the game.

        :return: The stat_category of this DestinyDefinitionsDestinyStatDefinition.
        :rtype: int
        """
        return self._stat_category

    @stat_category.setter
    def stat_category(self, stat_category):
        """Sets the stat_category of this DestinyDefinitionsDestinyStatDefinition.

        The category of the stat, according to the game.

        :param stat_category: The stat_category of this DestinyDefinitionsDestinyStatDefinition.
        :type stat_category: int
        """

        self._stat_category = stat_category
