# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_collectibles_destiny_collectible_acquisition_block import DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock
from openapi_server.models.destiny_definitions_collectibles_destiny_collectible_state_block import DestinyDefinitionsCollectiblesDestinyCollectibleStateBlock
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_presentation_destiny_presentation_child_block import DestinyDefinitionsPresentationDestinyPresentationChildBlock
from openapi_server import util


class DestinyDefinitionsCollectiblesDestinyCollectibleDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquisition_info: DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, item_hash: int=None, parent_node_hashes: List[int]=None, presentation_info: DestinyDefinitionsPresentationDestinyPresentationChildBlock=None, presentation_node_type: int=None, redacted: bool=None, scope: int=None, source_hash: int=None, source_string: str=None, state_info: DestinyDefinitionsCollectiblesDestinyCollectibleStateBlock=None, trait_hashes: List[int]=None, trait_ids: List[str]=None):
        """DestinyDefinitionsCollectiblesDestinyCollectibleDefinition - a model defined in OpenAPI

        :param acquisition_info: The acquisition_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param hash: The hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param index: The index of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param item_hash: The item_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param parent_node_hashes: The parent_node_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param presentation_info: The presentation_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param presentation_node_type: The presentation_node_type of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param redacted: The redacted of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param scope: The scope of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param source_hash: The source_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param source_string: The source_string of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param state_info: The state_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param trait_hashes: The trait_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :param trait_ids: The trait_ids of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        """
        self.openapi_types = {
            'acquisition_info': DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'item_hash': int,
            'parent_node_hashes': List[int],
            'presentation_info': DestinyDefinitionsPresentationDestinyPresentationChildBlock,
            'presentation_node_type': int,
            'redacted': bool,
            'scope': int,
            'source_hash': int,
            'source_string': str,
            'state_info': DestinyDefinitionsCollectiblesDestinyCollectibleStateBlock,
            'trait_hashes': List[int],
            'trait_ids': List[str]
        }

        self.attribute_map = {
            'acquisition_info': 'acquisitionInfo',
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'item_hash': 'itemHash',
            'parent_node_hashes': 'parentNodeHashes',
            'presentation_info': 'presentationInfo',
            'presentation_node_type': 'presentationNodeType',
            'redacted': 'redacted',
            'scope': 'scope',
            'source_hash': 'sourceHash',
            'source_string': 'sourceString',
            'state_info': 'stateInfo',
            'trait_hashes': 'traitHashes',
            'trait_ids': 'traitIds'
        }

        self._acquisition_info = acquisition_info
        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._item_hash = item_hash
        self._parent_node_hashes = parent_node_hashes
        self._presentation_info = presentation_info
        self._presentation_node_type = presentation_node_type
        self._redacted = redacted
        self._scope = scope
        self._source_hash = source_hash
        self._source_string = source_string
        self._state_info = state_info
        self._trait_hashes = trait_hashes
        self._trait_ids = trait_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsCollectiblesDestinyCollectibleDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Collectibles.DestinyCollectibleDefinition of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquisition_info(self):
        """Gets the acquisition_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :return: The acquisition_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock
        """
        return self._acquisition_info

    @acquisition_info.setter
    def acquisition_info(self, acquisition_info):
        """Sets the acquisition_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :param acquisition_info: The acquisition_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type acquisition_info: DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock
        """

        self._acquisition_info = acquisition_info

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :return: The display_properties of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type index: int
        """

        self._index = index

    @property
    def item_hash(self):
        """Gets the item_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :return: The item_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: int
        """
        return self._item_hash

    @item_hash.setter
    def item_hash(self, item_hash):
        """Sets the item_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :param item_hash: The item_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type item_hash: int
        """

        self._item_hash = item_hash

    @property
    def parent_node_hashes(self):
        """Gets the parent_node_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.

        :return: The parent_node_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: List[int]
        """
        return self._parent_node_hashes

    @parent_node_hashes.setter
    def parent_node_hashes(self, parent_node_hashes):
        """Sets the parent_node_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.

        :param parent_node_hashes: The parent_node_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type parent_node_hashes: List[int]
        """

        self._parent_node_hashes = parent_node_hashes

    @property
    def presentation_info(self):
        """Gets the presentation_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :return: The presentation_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: DestinyDefinitionsPresentationDestinyPresentationChildBlock
        """
        return self._presentation_info

    @presentation_info.setter
    def presentation_info(self, presentation_info):
        """Sets the presentation_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :param presentation_info: The presentation_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type presentation_info: DestinyDefinitionsPresentationDestinyPresentationChildBlock
        """

        self._presentation_info = presentation_info

    @property
    def presentation_node_type(self):
        """Gets the presentation_node_type of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :return: The presentation_node_type of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: int
        """
        return self._presentation_node_type

    @presentation_node_type.setter
    def presentation_node_type(self, presentation_node_type):
        """Sets the presentation_node_type of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :param presentation_node_type: The presentation_node_type of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type presentation_node_type: int
        """

        self._presentation_node_type = presentation_node_type

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def scope(self):
        """Gets the scope of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        Indicates whether the state of this Collectible is determined on a per-character or on an account-wide basis.

        :return: The scope of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: int
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        Indicates whether the state of this Collectible is determined on a per-character or on an account-wide basis.

        :param scope: The scope of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type scope: int
        """

        self._scope = scope

    @property
    def source_hash(self):
        """Gets the source_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        This is a hash identifier we are building on the BNet side in an attempt to let people group collectibles by similar sources.  I can't promise that it's going to be 100% accurate, but if the designers were consistent in assigning the same source strings to items with the same sources, it *ought to* be. No promises though.  This hash also doesn't relate to an actual definition, just to note: we've got nothing useful other than the source string for this data.

        :return: The source_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: int
        """
        return self._source_hash

    @source_hash.setter
    def source_hash(self, source_hash):
        """Sets the source_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        This is a hash identifier we are building on the BNet side in an attempt to let people group collectibles by similar sources.  I can't promise that it's going to be 100% accurate, but if the designers were consistent in assigning the same source strings to items with the same sources, it *ought to* be. No promises though.  This hash also doesn't relate to an actual definition, just to note: we've got nothing useful other than the source string for this data.

        :param source_hash: The source_hash of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type source_hash: int
        """

        self._source_hash = source_hash

    @property
    def source_string(self):
        """Gets the source_string of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        A human readable string for a hint about how to acquire the item.

        :return: The source_string of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: str
        """
        return self._source_string

    @source_string.setter
    def source_string(self, source_string):
        """Sets the source_string of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.

        A human readable string for a hint about how to acquire the item.

        :param source_string: The source_string of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type source_string: str
        """

        self._source_string = source_string

    @property
    def state_info(self):
        """Gets the state_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :return: The state_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: DestinyDefinitionsCollectiblesDestinyCollectibleStateBlock
        """
        return self._state_info

    @state_info.setter
    def state_info(self, state_info):
        """Sets the state_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :param state_info: The state_info of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type state_info: DestinyDefinitionsCollectiblesDestinyCollectibleStateBlock
        """

        self._state_info = state_info

    @property
    def trait_hashes(self):
        """Gets the trait_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :return: The trait_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: List[int]
        """
        return self._trait_hashes

    @trait_hashes.setter
    def trait_hashes(self, trait_hashes):
        """Sets the trait_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :param trait_hashes: The trait_hashes of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type trait_hashes: List[int]
        """

        self._trait_hashes = trait_hashes

    @property
    def trait_ids(self):
        """Gets the trait_ids of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :return: The trait_ids of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :rtype: List[str]
        """
        return self._trait_ids

    @trait_ids.setter
    def trait_ids(self, trait_ids):
        """Sets the trait_ids of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.


        :param trait_ids: The trait_ids of this DestinyDefinitionsCollectiblesDestinyCollectibleDefinition.
        :type trait_ids: List[str]
        """

        self._trait_ids = trait_ids
