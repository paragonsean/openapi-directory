# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_reward_entry_definition import DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition
from openapi_server import util


class DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_hash: int=None, category_identifier: str=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, order: int=None, reward_entries: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition]=None):
        """DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition - a model defined in OpenAPI

        :param category_hash: The category_hash of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :param category_identifier: The category_identifier of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :param order: The order of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :param reward_entries: The reward_entries of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        """
        self.openapi_types = {
            'category_hash': int,
            'category_identifier': str,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'order': int,
            'reward_entries': Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition]
        }

        self.attribute_map = {
            'category_hash': 'categoryHash',
            'category_identifier': 'categoryIdentifier',
            'display_properties': 'displayProperties',
            'order': 'order',
            'reward_entries': 'rewardEntries'
        }

        self._category_hash = category_hash
        self._category_identifier = category_identifier
        self._display_properties = display_properties
        self._order = order
        self._reward_entries = reward_entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Milestones.DestinyMilestoneRewardCategoryDefinition of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_hash(self):
        """Gets the category_hash of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        Identifies the reward category. Only guaranteed unique within this specific component!

        :return: The category_hash of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :rtype: int
        """
        return self._category_hash

    @category_hash.setter
    def category_hash(self, category_hash):
        """Sets the category_hash of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        Identifies the reward category. Only guaranteed unique within this specific component!

        :param category_hash: The category_hash of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :type category_hash: int
        """

        self._category_hash = category_hash

    @property
    def category_identifier(self):
        """Gets the category_identifier of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        The string identifier for the category, if you want to use it for some end. Guaranteed unique within the specific component.

        :return: The category_identifier of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :rtype: str
        """
        return self._category_identifier

    @category_identifier.setter
    def category_identifier(self, category_identifier):
        """Sets the category_identifier of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        The string identifier for the category, if you want to use it for some end. Guaranteed unique within the specific component.

        :param category_identifier: The category_identifier of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :type category_identifier: str
        """

        self._category_identifier = category_identifier

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        Hopefully this is obvious by now.

        :return: The display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        Hopefully this is obvious by now.

        :param display_properties: The display_properties of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def order(self):
        """Gets the order of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        If you want to use BNet's recommended order for rendering categories programmatically, use this value and compare it to other categories to determine the order in which they should be rendered. I don't feel great about putting this here, I won't lie.

        :return: The order of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        If you want to use BNet's recommended order for rendering categories programmatically, use this value and compare it to other categories to determine the order in which they should be rendered. I don't feel great about putting this here, I won't lie.

        :param order: The order of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :type order: int
        """

        self._order = order

    @property
    def reward_entries(self):
        """Gets the reward_entries of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        If this milestone can provide rewards, this will define the sets of rewards that can be earned, the conditions under which they can be acquired, internal data that we'll use at runtime to determine whether you've already earned or redeemed this set of rewards, and the category that this reward should be placed under.

        :return: The reward_entries of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :rtype: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition]
        """
        return self._reward_entries

    @reward_entries.setter
    def reward_entries(self, reward_entries):
        """Sets the reward_entries of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.

        If this milestone can provide rewards, this will define the sets of rewards that can be earned, the conditions under which they can be acquired, internal data that we'll use at runtime to determine whether you've already earned or redeemed this set of rewards, and the category that this reward should be placed under.

        :param reward_entries: The reward_entries of this DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.
        :type reward_entries: Dict[str, DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition]
        """

        self._reward_entries = reward_entries
