# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_quality_transfer_ratio: float=None, minimum_quality_increment: int=None):
        """DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock - a model defined in OpenAPI

        :param base_quality_transfer_ratio: The base_quality_transfer_ratio of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.
        :param minimum_quality_increment: The minimum_quality_increment of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.
        """
        self.openapi_types = {
            'base_quality_transfer_ratio': float,
            'minimum_quality_increment': int
        }

        self.attribute_map = {
            'base_quality_transfer_ratio': 'baseQualityTransferRatio',
            'minimum_quality_increment': 'minimumQualityIncrement'
        }

        self._base_quality_transfer_ratio = base_quality_transfer_ratio
        self._minimum_quality_increment = minimum_quality_increment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Items.DestinyItemTierTypeInfusionBlock of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_quality_transfer_ratio(self):
        """Gets the base_quality_transfer_ratio of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.

        The default portion of quality that will transfer from the infuser to the infusee item. (InfuserQuality - InfuseeQuality) * baseQualityTransferRatio = base quality transferred.

        :return: The base_quality_transfer_ratio of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.
        :rtype: float
        """
        return self._base_quality_transfer_ratio

    @base_quality_transfer_ratio.setter
    def base_quality_transfer_ratio(self, base_quality_transfer_ratio):
        """Sets the base_quality_transfer_ratio of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.

        The default portion of quality that will transfer from the infuser to the infusee item. (InfuserQuality - InfuseeQuality) * baseQualityTransferRatio = base quality transferred.

        :param base_quality_transfer_ratio: The base_quality_transfer_ratio of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.
        :type base_quality_transfer_ratio: float
        """

        self._base_quality_transfer_ratio = base_quality_transfer_ratio

    @property
    def minimum_quality_increment(self):
        """Gets the minimum_quality_increment of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.

        As long as InfuserQuality > InfuseeQuality, the amount of quality bestowed is guaranteed to be at least this value, even if the transferRatio would dictate that it should be less. The total amount of quality that ends up in the Infusee cannot exceed the Infuser's quality however (for instance, if you infuse a 300 item with a 301 item and the minimum quality increment is 10, the infused item will not end up with 310 quality)

        :return: The minimum_quality_increment of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.
        :rtype: int
        """
        return self._minimum_quality_increment

    @minimum_quality_increment.setter
    def minimum_quality_increment(self, minimum_quality_increment):
        """Sets the minimum_quality_increment of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.

        As long as InfuserQuality > InfuseeQuality, the amount of quality bestowed is guaranteed to be at least this value, even if the transferRatio would dictate that it should be less. The total amount of quality that ends up in the Infusee cannot exceed the Infuser's quality however (for instance, if you infuse a 300 item with a 301 item and the minimum quality increment is 10, the infused item will not end up with 310 quality)

        :param minimum_quality_increment: The minimum_quality_increment of this DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.
        :type minimum_quality_increment: int
        """

        self._minimum_quality_increment = minimum_quality_increment
