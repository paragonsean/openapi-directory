# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_matchmade: bool=None, max_party: int=None, max_players: int=None, min_party: int=None, requires_guardian_oath: bool=None):
        """DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition - a model defined in OpenAPI

        :param is_matchmade: The is_matchmade of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :param max_party: The max_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :param max_players: The max_players of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :param min_party: The min_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :param requires_guardian_oath: The requires_guardian_oath of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        """
        self.openapi_types = {
            'is_matchmade': bool,
            'max_party': int,
            'max_players': int,
            'min_party': int,
            'requires_guardian_oath': bool
        }

        self.attribute_map = {
            'is_matchmade': 'isMatchmade',
            'max_party': 'maxParty',
            'max_players': 'maxPlayers',
            'min_party': 'minParty',
            'requires_guardian_oath': 'requiresGuardianOath'
        }

        self._is_matchmade = is_matchmade
        self._max_party = max_party
        self._max_players = max_players
        self._min_party = min_party
        self._requires_guardian_oath = requires_guardian_oath

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_matchmade(self):
        """Gets the is_matchmade of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        If TRUE, the activity is matchmade. Otherwise, it requires explicit forming of a party.

        :return: The is_matchmade of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :rtype: bool
        """
        return self._is_matchmade

    @is_matchmade.setter
    def is_matchmade(self, is_matchmade):
        """Sets the is_matchmade of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        If TRUE, the activity is matchmade. Otherwise, it requires explicit forming of a party.

        :param is_matchmade: The is_matchmade of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :type is_matchmade: bool
        """

        self._is_matchmade = is_matchmade

    @property
    def max_party(self):
        """Gets the max_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        The maximum # of people allowed in a Fireteam.

        :return: The max_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :rtype: int
        """
        return self._max_party

    @max_party.setter
    def max_party(self, max_party):
        """Sets the max_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        The maximum # of people allowed in a Fireteam.

        :param max_party: The max_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :type max_party: int
        """

        self._max_party = max_party

    @property
    def max_players(self):
        """Gets the max_players of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        The maximum # of people allowed across all teams in the activity.

        :return: The max_players of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :rtype: int
        """
        return self._max_players

    @max_players.setter
    def max_players(self, max_players):
        """Sets the max_players of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        The maximum # of people allowed across all teams in the activity.

        :param max_players: The max_players of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :type max_players: int
        """

        self._max_players = max_players

    @property
    def min_party(self):
        """Gets the min_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        The minimum # of people in the fireteam for the activity to launch.

        :return: The min_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :rtype: int
        """
        return self._min_party

    @min_party.setter
    def min_party(self, min_party):
        """Sets the min_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        The minimum # of people in the fireteam for the activity to launch.

        :param min_party: The min_party of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :type min_party: int
        """

        self._min_party = min_party

    @property
    def requires_guardian_oath(self):
        """Gets the requires_guardian_oath of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        If true, you have to Solemnly Swear to be up to Nothing But Good(tm) to play.

        :return: The requires_guardian_oath of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :rtype: bool
        """
        return self._requires_guardian_oath

    @requires_guardian_oath.setter
    def requires_guardian_oath(self, requires_guardian_oath):
        """Sets the requires_guardian_oath of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.

        If true, you have to Solemnly Swear to be up to Nothing But Good(tm) to play.

        :param requires_guardian_oath: The requires_guardian_oath of this DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition.
        :type requires_guardian_oath: bool
        """

        self._requires_guardian_oath = requires_guardian_oath
