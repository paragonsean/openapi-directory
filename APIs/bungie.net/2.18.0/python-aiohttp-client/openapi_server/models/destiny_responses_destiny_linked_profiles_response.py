# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_responses_destiny_error_profile import DestinyResponsesDestinyErrorProfile
from openapi_server.models.destiny_responses_destiny_profile_user_info_card import DestinyResponsesDestinyProfileUserInfoCard
from openapi_server.models.user_user_info_card import UserUserInfoCard
from openapi_server import util


class DestinyResponsesDestinyLinkedProfilesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bnet_membership: UserUserInfoCard=None, profiles: List[DestinyResponsesDestinyProfileUserInfoCard]=None, profiles_with_errors: List[DestinyResponsesDestinyErrorProfile]=None):
        """DestinyResponsesDestinyLinkedProfilesResponse - a model defined in OpenAPI

        :param bnet_membership: The bnet_membership of this DestinyResponsesDestinyLinkedProfilesResponse.
        :param profiles: The profiles of this DestinyResponsesDestinyLinkedProfilesResponse.
        :param profiles_with_errors: The profiles_with_errors of this DestinyResponsesDestinyLinkedProfilesResponse.
        """
        self.openapi_types = {
            'bnet_membership': UserUserInfoCard,
            'profiles': List[DestinyResponsesDestinyProfileUserInfoCard],
            'profiles_with_errors': List[DestinyResponsesDestinyErrorProfile]
        }

        self.attribute_map = {
            'bnet_membership': 'bnetMembership',
            'profiles': 'profiles',
            'profiles_with_errors': 'profilesWithErrors'
        }

        self._bnet_membership = bnet_membership
        self._profiles = profiles
        self._profiles_with_errors = profiles_with_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyResponsesDestinyLinkedProfilesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Responses.DestinyLinkedProfilesResponse of this DestinyResponsesDestinyLinkedProfilesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bnet_membership(self):
        """Gets the bnet_membership of this DestinyResponsesDestinyLinkedProfilesResponse.

        If the requested membership had a linked Bungie.Net membership ID, this is the basic information about that BNet account.  I know, Tetron; I know this is mixing UserServices concerns with DestinyServices concerns. But it's so damn convenient! https://www.youtube.com/watch?v=X5R-bB-gKVI

        :return: The bnet_membership of this DestinyResponsesDestinyLinkedProfilesResponse.
        :rtype: UserUserInfoCard
        """
        return self._bnet_membership

    @bnet_membership.setter
    def bnet_membership(self, bnet_membership):
        """Sets the bnet_membership of this DestinyResponsesDestinyLinkedProfilesResponse.

        If the requested membership had a linked Bungie.Net membership ID, this is the basic information about that BNet account.  I know, Tetron; I know this is mixing UserServices concerns with DestinyServices concerns. But it's so damn convenient! https://www.youtube.com/watch?v=X5R-bB-gKVI

        :param bnet_membership: The bnet_membership of this DestinyResponsesDestinyLinkedProfilesResponse.
        :type bnet_membership: UserUserInfoCard
        """

        self._bnet_membership = bnet_membership

    @property
    def profiles(self):
        """Gets the profiles of this DestinyResponsesDestinyLinkedProfilesResponse.

        Any Destiny account for whom we could successfully pull characters will be returned here, as the Platform-level summary of user data. (no character data, no Destiny account data other than the Membership ID and Type so you can make further queries)

        :return: The profiles of this DestinyResponsesDestinyLinkedProfilesResponse.
        :rtype: List[DestinyResponsesDestinyProfileUserInfoCard]
        """
        return self._profiles

    @profiles.setter
    def profiles(self, profiles):
        """Sets the profiles of this DestinyResponsesDestinyLinkedProfilesResponse.

        Any Destiny account for whom we could successfully pull characters will be returned here, as the Platform-level summary of user data. (no character data, no Destiny account data other than the Membership ID and Type so you can make further queries)

        :param profiles: The profiles of this DestinyResponsesDestinyLinkedProfilesResponse.
        :type profiles: List[DestinyResponsesDestinyProfileUserInfoCard]
        """

        self._profiles = profiles

    @property
    def profiles_with_errors(self):
        """Gets the profiles_with_errors of this DestinyResponsesDestinyLinkedProfilesResponse.

        This is brief summary info for profiles that we believe have valid Destiny info, but who failed to return data for some other reason and thus we know that subsequent calls for their info will also fail.

        :return: The profiles_with_errors of this DestinyResponsesDestinyLinkedProfilesResponse.
        :rtype: List[DestinyResponsesDestinyErrorProfile]
        """
        return self._profiles_with_errors

    @profiles_with_errors.setter
    def profiles_with_errors(self, profiles_with_errors):
        """Sets the profiles_with_errors of this DestinyResponsesDestinyLinkedProfilesResponse.

        This is brief summary info for profiles that we believe have valid Destiny info, but who failed to return data for some other reason and thus we know that subsequent calls for their info will also fail.

        :param profiles_with_errors: The profiles_with_errors of this DestinyResponsesDestinyLinkedProfilesResponse.
        :type profiles_with_errors: List[DestinyResponsesDestinyErrorProfile]
        """

        self._profiles_with_errors = profiles_with_errors
