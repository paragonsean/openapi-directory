# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Schema4(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NUMBER_0 = 0
    NUMBER_2 = 2
    NUMBER_3 = 3
    NUMBER_4 = 4
    NUMBER_5 = 5
    NUMBER_6 = 6
    NUMBER_7 = 7
    NUMBER_9 = 9
    NUMBER_10 = 10
    NUMBER_11 = 11
    NUMBER_12 = 12
    NUMBER_13 = 13
    NUMBER_15 = 15
    NUMBER_16 = 16
    NUMBER_17 = 17
    NUMBER_18 = 18
    NUMBER_19 = 19
    NUMBER_20 = 20
    NUMBER_21 = 21
    NUMBER_22 = 22
    NUMBER_24 = 24
    NUMBER_25 = 25
    NUMBER_26 = 26
    NUMBER_27 = 27
    NUMBER_28 = 28
    NUMBER_29 = 29
    NUMBER_30 = 30
    NUMBER_31 = 31
    NUMBER_32 = 32
    NUMBER_37 = 37
    NUMBER_38 = 38
    NUMBER_39 = 39
    NUMBER_40 = 40
    NUMBER_41 = 41
    NUMBER_42 = 42
    NUMBER_43 = 43
    NUMBER_44 = 44
    NUMBER_45 = 45
    NUMBER_46 = 46
    NUMBER_47 = 47
    NUMBER_48 = 48
    NUMBER_49 = 49
    NUMBER_50 = 50
    NUMBER_51 = 51
    NUMBER_52 = 52
    NUMBER_53 = 53
    NUMBER_54 = 54
    NUMBER_55 = 55
    NUMBER_56 = 56
    NUMBER_57 = 57
    NUMBER_58 = 58
    NUMBER_59 = 59
    NUMBER_60 = 60
    NUMBER_61 = 61
    NUMBER_62 = 62
    NUMBER_63 = 63
    NUMBER_64 = 64
    NUMBER_65 = 65
    NUMBER_66 = 66
    NUMBER_67 = 67
    NUMBER_68 = 68
    NUMBER_69 = 69
    NUMBER_70 = 70
    NUMBER_71 = 71
    NUMBER_72 = 72
    NUMBER_73 = 73
    NUMBER_74 = 74
    NUMBER_75 = 75
    NUMBER_76 = 76
    NUMBER_77 = 77
    NUMBER_78 = 78
    NUMBER_79 = 79
    NUMBER_80 = 80
    NUMBER_81 = 81
    NUMBER_82 = 82
    NUMBER_83 = 83
    NUMBER_84 = 84
    NUMBER_85 = 85
    NUMBER_86 = 86
    NUMBER_87 = 87
    NUMBER_88 = 88
    NUMBER_89 = 89
    NUMBER_90 = 90
    NUMBER_91 = 91

    def __init__(self):
        """Schema4 - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Schema4':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The schema4 of this Schema4.
        """
        return util.deserialize_model(dikt, cls)
