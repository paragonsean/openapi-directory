# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_email_subscription_definition import UserEmailSubscriptionDefinition
from openapi_server import util


class UserEmailOptInDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dependent_subscriptions: List[UserEmailSubscriptionDefinition]=None, name: str=None, set_by_default: bool=None, value: int=None):
        """UserEmailOptInDefinition - a model defined in OpenAPI

        :param dependent_subscriptions: The dependent_subscriptions of this UserEmailOptInDefinition.
        :param name: The name of this UserEmailOptInDefinition.
        :param set_by_default: The set_by_default of this UserEmailOptInDefinition.
        :param value: The value of this UserEmailOptInDefinition.
        """
        self.openapi_types = {
            'dependent_subscriptions': List[UserEmailSubscriptionDefinition],
            'name': str,
            'set_by_default': bool,
            'value': int
        }

        self.attribute_map = {
            'dependent_subscriptions': 'dependentSubscriptions',
            'name': 'name',
            'set_by_default': 'setByDefault',
            'value': 'value'
        }

        self._dependent_subscriptions = dependent_subscriptions
        self._name = name
        self._set_by_default = set_by_default
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserEmailOptInDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User.EmailOptInDefinition of this UserEmailOptInDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dependent_subscriptions(self):
        """Gets the dependent_subscriptions of this UserEmailOptInDefinition.

        Information about the dependent subscriptions for this opt-in.

        :return: The dependent_subscriptions of this UserEmailOptInDefinition.
        :rtype: List[UserEmailSubscriptionDefinition]
        """
        return self._dependent_subscriptions

    @dependent_subscriptions.setter
    def dependent_subscriptions(self, dependent_subscriptions):
        """Sets the dependent_subscriptions of this UserEmailOptInDefinition.

        Information about the dependent subscriptions for this opt-in.

        :param dependent_subscriptions: The dependent_subscriptions of this UserEmailOptInDefinition.
        :type dependent_subscriptions: List[UserEmailSubscriptionDefinition]
        """

        self._dependent_subscriptions = dependent_subscriptions

    @property
    def name(self):
        """Gets the name of this UserEmailOptInDefinition.

        The unique identifier for this opt-in category.

        :return: The name of this UserEmailOptInDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserEmailOptInDefinition.

        The unique identifier for this opt-in category.

        :param name: The name of this UserEmailOptInDefinition.
        :type name: str
        """

        self._name = name

    @property
    def set_by_default(self):
        """Gets the set_by_default of this UserEmailOptInDefinition.

        If true, this opt-in setting should be set by default in situations where accounts are created without explicit choices about what they're opting into.

        :return: The set_by_default of this UserEmailOptInDefinition.
        :rtype: bool
        """
        return self._set_by_default

    @set_by_default.setter
    def set_by_default(self, set_by_default):
        """Sets the set_by_default of this UserEmailOptInDefinition.

        If true, this opt-in setting should be set by default in situations where accounts are created without explicit choices about what they're opting into.

        :param set_by_default: The set_by_default of this UserEmailOptInDefinition.
        :type set_by_default: bool
        """

        self._set_by_default = set_by_default

    @property
    def value(self):
        """Gets the value of this UserEmailOptInDefinition.

        The flag value for this opt-in category. For historical reasons, this is defined as a flags enum.

        :return: The value of this UserEmailOptInDefinition.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UserEmailOptInDefinition.

        The flag value for this opt-in category. For historical reasons, this is defined as a flags enum.

        :param value: The value of this UserEmailOptInDefinition.
        :type value: int
        """

        self._value = value
