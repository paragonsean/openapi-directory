# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDestinyInventoryItemStatDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_maximum: int=None, maximum: int=None, minimum: int=None, stat_hash: int=None, value: int=None):
        """DestinyDefinitionsDestinyInventoryItemStatDefinition - a model defined in OpenAPI

        :param display_maximum: The display_maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :param maximum: The maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :param minimum: The minimum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :param stat_hash: The stat_hash of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :param value: The value of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        """
        self.openapi_types = {
            'display_maximum': int,
            'maximum': int,
            'minimum': int,
            'stat_hash': int,
            'value': int
        }

        self.attribute_map = {
            'display_maximum': 'displayMaximum',
            'maximum': 'maximum',
            'minimum': 'minimum',
            'stat_hash': 'statHash',
            'value': 'value'
        }

        self._display_maximum = display_maximum
        self._maximum = maximum
        self._minimum = minimum
        self._stat_hash = stat_hash
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyInventoryItemStatDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyInventoryItemStatDefinition of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_maximum(self):
        """Gets the display_maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        The maximum possible value for the stat as shown in the UI, if it is being shown somewhere that reveals maximum in the UI (such as a bar chart-style view).  This is pulled directly from the item's DestinyStatGroupDefinition, and placed here for convenience.  If not returned, there is no maximum to use (and thus the stat should not be shown in a way that assumes there is a limit to the stat)

        :return: The display_maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :rtype: int
        """
        return self._display_maximum

    @display_maximum.setter
    def display_maximum(self, display_maximum):
        """Sets the display_maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        The maximum possible value for the stat as shown in the UI, if it is being shown somewhere that reveals maximum in the UI (such as a bar chart-style view).  This is pulled directly from the item's DestinyStatGroupDefinition, and placed here for convenience.  If not returned, there is no maximum to use (and thus the stat should not be shown in a way that assumes there is a limit to the stat)

        :param display_maximum: The display_maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :type display_maximum: int
        """

        self._display_maximum = display_maximum

    @property
    def maximum(self):
        """Gets the maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        The maximum possible value for this stat that we think the item can roll.  WARNING: In Destiny 1, this field was calculated using the potential stat rolls on the item's talent grid. In Destiny 2, items no longer have meaningful talent grids and instead have sockets: but the calculation of this field was never altered to adapt to this change. As such, this field should be considered deprecated until we can address this oversight.

        :return: The maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :rtype: int
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum):
        """Sets the maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        The maximum possible value for this stat that we think the item can roll.  WARNING: In Destiny 1, this field was calculated using the potential stat rolls on the item's talent grid. In Destiny 2, items no longer have meaningful talent grids and instead have sockets: but the calculation of this field was never altered to adapt to this change. As such, this field should be considered deprecated until we can address this oversight.

        :param maximum: The maximum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :type maximum: int
        """

        self._maximum = maximum

    @property
    def minimum(self):
        """Gets the minimum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        The minimum possible value for this stat that we think the item can roll.

        :return: The minimum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :rtype: int
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum):
        """Sets the minimum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        The minimum possible value for this stat that we think the item can roll.

        :param minimum: The minimum of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :type minimum: int
        """

        self._minimum = minimum

    @property
    def stat_hash(self):
        """Gets the stat_hash of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        The hash for the DestinyStatDefinition representing this stat.

        :return: The stat_hash of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :rtype: int
        """
        return self._stat_hash

    @stat_hash.setter
    def stat_hash(self, stat_hash):
        """Sets the stat_hash of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        The hash for the DestinyStatDefinition representing this stat.

        :param stat_hash: The stat_hash of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :type stat_hash: int
        """

        self._stat_hash = stat_hash

    @property
    def value(self):
        """Gets the value of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        This value represents the stat value assuming the minimum possible roll but accounting for any mandatory bonuses that should be applied to the stat on item creation.  In Destiny 1, this was different from the \"minimum\" value because there were certain conditions where an item could be theoretically lower level/value than the initial roll.   In Destiny 2, this is not possible unless Talent Grids begin to be used again for these purposes or some other system change occurs... thus in practice, value and minimum should be the same in Destiny 2. Good riddance.

        :return: The value of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DestinyDefinitionsDestinyInventoryItemStatDefinition.

        This value represents the stat value assuming the minimum possible roll but accounting for any mandatory bonuses that should be applied to the stat on item creation.  In Destiny 1, this was different from the \"minimum\" value because there were certain conditions where an item could be theoretically lower level/value than the initial roll.   In Destiny 2, this is not possible unless Talent Grids begin to be used again for these purposes or some other system change occurs... thus in practice, value and minimum should be the same in Destiny 2. Good riddance.

        :param value: The value of this DestinyDefinitionsDestinyInventoryItemStatDefinition.
        :type value: int
        """

        self._value = value
