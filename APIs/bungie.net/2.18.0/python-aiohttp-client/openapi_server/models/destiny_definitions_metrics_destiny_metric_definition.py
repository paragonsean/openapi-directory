# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server import util


class DestinyDefinitionsMetricsDestinyMetricDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, lower_value_is_better: bool=None, parent_node_hashes: List[int]=None, presentation_node_type: int=None, redacted: bool=None, tracking_objective_hash: int=None, trait_hashes: List[int]=None, trait_ids: List[str]=None):
        """DestinyDefinitionsMetricsDestinyMetricDefinition - a model defined in OpenAPI

        :param display_properties: The display_properties of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param hash: The hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param index: The index of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param lower_value_is_better: The lower_value_is_better of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param parent_node_hashes: The parent_node_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param presentation_node_type: The presentation_node_type of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param redacted: The redacted of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param tracking_objective_hash: The tracking_objective_hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param trait_hashes: The trait_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :param trait_ids: The trait_ids of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        """
        self.openapi_types = {
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'lower_value_is_better': bool,
            'parent_node_hashes': List[int],
            'presentation_node_type': int,
            'redacted': bool,
            'tracking_objective_hash': int,
            'trait_hashes': List[int],
            'trait_ids': List[str]
        }

        self.attribute_map = {
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'lower_value_is_better': 'lowerValueIsBetter',
            'parent_node_hashes': 'parentNodeHashes',
            'presentation_node_type': 'presentationNodeType',
            'redacted': 'redacted',
            'tracking_objective_hash': 'trackingObjectiveHash',
            'trait_hashes': 'traitHashes',
            'trait_ids': 'traitIds'
        }

        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._lower_value_is_better = lower_value_is_better
        self._parent_node_hashes = parent_node_hashes
        self._presentation_node_type = presentation_node_type
        self._redacted = redacted
        self._tracking_objective_hash = tracking_objective_hash
        self._trait_hashes = trait_hashes
        self._trait_ids = trait_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsMetricsDestinyMetricDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Metrics.DestinyMetricDefinition of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :return: The display_properties of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsMetricsDestinyMetricDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsMetricsDestinyMetricDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type index: int
        """

        self._index = index

    @property
    def lower_value_is_better(self):
        """Gets the lower_value_is_better of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :return: The lower_value_is_better of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: bool
        """
        return self._lower_value_is_better

    @lower_value_is_better.setter
    def lower_value_is_better(self, lower_value_is_better):
        """Sets the lower_value_is_better of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :param lower_value_is_better: The lower_value_is_better of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type lower_value_is_better: bool
        """

        self._lower_value_is_better = lower_value_is_better

    @property
    def parent_node_hashes(self):
        """Gets the parent_node_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.

        A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.

        :return: The parent_node_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: List[int]
        """
        return self._parent_node_hashes

    @parent_node_hashes.setter
    def parent_node_hashes(self, parent_node_hashes):
        """Sets the parent_node_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.

        A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.

        :param parent_node_hashes: The parent_node_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type parent_node_hashes: List[int]
        """

        self._parent_node_hashes = parent_node_hashes

    @property
    def presentation_node_type(self):
        """Gets the presentation_node_type of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :return: The presentation_node_type of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: int
        """
        return self._presentation_node_type

    @presentation_node_type.setter
    def presentation_node_type(self, presentation_node_type):
        """Sets the presentation_node_type of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :param presentation_node_type: The presentation_node_type of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type presentation_node_type: int
        """

        self._presentation_node_type = presentation_node_type

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsMetricsDestinyMetricDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsMetricsDestinyMetricDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def tracking_objective_hash(self):
        """Gets the tracking_objective_hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :return: The tracking_objective_hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: int
        """
        return self._tracking_objective_hash

    @tracking_objective_hash.setter
    def tracking_objective_hash(self, tracking_objective_hash):
        """Sets the tracking_objective_hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :param tracking_objective_hash: The tracking_objective_hash of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type tracking_objective_hash: int
        """

        self._tracking_objective_hash = tracking_objective_hash

    @property
    def trait_hashes(self):
        """Gets the trait_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :return: The trait_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: List[int]
        """
        return self._trait_hashes

    @trait_hashes.setter
    def trait_hashes(self, trait_hashes):
        """Sets the trait_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :param trait_hashes: The trait_hashes of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type trait_hashes: List[int]
        """

        self._trait_hashes = trait_hashes

    @property
    def trait_ids(self):
        """Gets the trait_ids of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :return: The trait_ids of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :rtype: List[str]
        """
        return self._trait_ids

    @trait_ids.setter
    def trait_ids(self, trait_ids):
        """Sets the trait_ids of this DestinyDefinitionsMetricsDestinyMetricDefinition.


        :param trait_ids: The trait_ids of this DestinyDefinitionsMetricsDestinyMetricDefinition.
        :type trait_ids: List[str]
        """

        self._trait_ids = trait_ids
