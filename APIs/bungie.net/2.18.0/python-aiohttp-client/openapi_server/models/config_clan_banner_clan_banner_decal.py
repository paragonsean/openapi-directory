# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigClanBannerClanBannerDecal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_path: str=None, foreground_path: str=None, identifier: str=None):
        """ConfigClanBannerClanBannerDecal - a model defined in OpenAPI

        :param background_path: The background_path of this ConfigClanBannerClanBannerDecal.
        :param foreground_path: The foreground_path of this ConfigClanBannerClanBannerDecal.
        :param identifier: The identifier of this ConfigClanBannerClanBannerDecal.
        """
        self.openapi_types = {
            'background_path': str,
            'foreground_path': str,
            'identifier': str
        }

        self.attribute_map = {
            'background_path': 'backgroundPath',
            'foreground_path': 'foregroundPath',
            'identifier': 'identifier'
        }

        self._background_path = background_path
        self._foreground_path = foreground_path
        self._identifier = identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigClanBannerClanBannerDecal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Config.ClanBanner.ClanBannerDecal of this ConfigClanBannerClanBannerDecal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_path(self):
        """Gets the background_path of this ConfigClanBannerClanBannerDecal.


        :return: The background_path of this ConfigClanBannerClanBannerDecal.
        :rtype: str
        """
        return self._background_path

    @background_path.setter
    def background_path(self, background_path):
        """Sets the background_path of this ConfigClanBannerClanBannerDecal.


        :param background_path: The background_path of this ConfigClanBannerClanBannerDecal.
        :type background_path: str
        """

        self._background_path = background_path

    @property
    def foreground_path(self):
        """Gets the foreground_path of this ConfigClanBannerClanBannerDecal.


        :return: The foreground_path of this ConfigClanBannerClanBannerDecal.
        :rtype: str
        """
        return self._foreground_path

    @foreground_path.setter
    def foreground_path(self, foreground_path):
        """Sets the foreground_path of this ConfigClanBannerClanBannerDecal.


        :param foreground_path: The foreground_path of this ConfigClanBannerClanBannerDecal.
        :type foreground_path: str
        """

        self._foreground_path = foreground_path

    @property
    def identifier(self):
        """Gets the identifier of this ConfigClanBannerClanBannerDecal.


        :return: The identifier of this ConfigClanBannerClanBannerDecal.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this ConfigClanBannerClanBannerDecal.


        :param identifier: The identifier of this ConfigClanBannerClanBannerDecal.
        :type identifier: str
        """

        self._identifier = identifier
