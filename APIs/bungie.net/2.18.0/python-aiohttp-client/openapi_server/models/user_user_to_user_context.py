# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ignores_ignore_response import IgnoresIgnoreResponse
from openapi_server import util


class UserUserToUserContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_ignore_end_date: datetime=None, ignore_status: IgnoresIgnoreResponse=None, is_following: bool=None):
        """UserUserToUserContext - a model defined in OpenAPI

        :param global_ignore_end_date: The global_ignore_end_date of this UserUserToUserContext.
        :param ignore_status: The ignore_status of this UserUserToUserContext.
        :param is_following: The is_following of this UserUserToUserContext.
        """
        self.openapi_types = {
            'global_ignore_end_date': datetime,
            'ignore_status': IgnoresIgnoreResponse,
            'is_following': bool
        }

        self.attribute_map = {
            'global_ignore_end_date': 'globalIgnoreEndDate',
            'ignore_status': 'ignoreStatus',
            'is_following': 'isFollowing'
        }

        self._global_ignore_end_date = global_ignore_end_date
        self._ignore_status = ignore_status
        self._is_following = is_following

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserUserToUserContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User.UserToUserContext of this UserUserToUserContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_ignore_end_date(self):
        """Gets the global_ignore_end_date of this UserUserToUserContext.


        :return: The global_ignore_end_date of this UserUserToUserContext.
        :rtype: datetime
        """
        return self._global_ignore_end_date

    @global_ignore_end_date.setter
    def global_ignore_end_date(self, global_ignore_end_date):
        """Sets the global_ignore_end_date of this UserUserToUserContext.


        :param global_ignore_end_date: The global_ignore_end_date of this UserUserToUserContext.
        :type global_ignore_end_date: datetime
        """

        self._global_ignore_end_date = global_ignore_end_date

    @property
    def ignore_status(self):
        """Gets the ignore_status of this UserUserToUserContext.


        :return: The ignore_status of this UserUserToUserContext.
        :rtype: IgnoresIgnoreResponse
        """
        return self._ignore_status

    @ignore_status.setter
    def ignore_status(self, ignore_status):
        """Sets the ignore_status of this UserUserToUserContext.


        :param ignore_status: The ignore_status of this UserUserToUserContext.
        :type ignore_status: IgnoresIgnoreResponse
        """

        self._ignore_status = ignore_status

    @property
    def is_following(self):
        """Gets the is_following of this UserUserToUserContext.


        :return: The is_following of this UserUserToUserContext.
        :rtype: bool
        """
        return self._is_following

    @is_following.setter
    def is_following(self, is_following):
        """Sets the is_following of this UserUserToUserContext.


        :param is_following: The is_following of this UserUserToUserContext.
        :type is_following: bool
        """

        self._is_following = is_following
