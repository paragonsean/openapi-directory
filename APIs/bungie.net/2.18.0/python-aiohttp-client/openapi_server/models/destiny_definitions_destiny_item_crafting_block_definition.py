# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_destiny_item_crafting_block_bonus_plug_definition import DestinyDefinitionsDestinyItemCraftingBlockBonusPlugDefinition
from openapi_server import util


class DestinyDefinitionsDestinyItemCraftingBlockDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_material_requirements: int=None, bonus_plugs: List[DestinyDefinitionsDestinyItemCraftingBlockBonusPlugDefinition]=None, failed_requirement_strings: List[str]=None, output_item_hash: int=None, required_socket_type_hashes: List[int]=None):
        """DestinyDefinitionsDestinyItemCraftingBlockDefinition - a model defined in OpenAPI

        :param base_material_requirements: The base_material_requirements of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :param bonus_plugs: The bonus_plugs of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :param failed_requirement_strings: The failed_requirement_strings of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :param output_item_hash: The output_item_hash of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :param required_socket_type_hashes: The required_socket_type_hashes of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        """
        self.openapi_types = {
            'base_material_requirements': int,
            'bonus_plugs': List[DestinyDefinitionsDestinyItemCraftingBlockBonusPlugDefinition],
            'failed_requirement_strings': List[str],
            'output_item_hash': int,
            'required_socket_type_hashes': List[int]
        }

        self.attribute_map = {
            'base_material_requirements': 'baseMaterialRequirements',
            'bonus_plugs': 'bonusPlugs',
            'failed_requirement_strings': 'failedRequirementStrings',
            'output_item_hash': 'outputItemHash',
            'required_socket_type_hashes': 'requiredSocketTypeHashes'
        }

        self._base_material_requirements = base_material_requirements
        self._bonus_plugs = bonus_plugs
        self._failed_requirement_strings = failed_requirement_strings
        self._output_item_hash = output_item_hash
        self._required_socket_type_hashes = required_socket_type_hashes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyItemCraftingBlockDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyItemCraftingBlockDefinition of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_material_requirements(self):
        """Gets the base_material_requirements of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.

        A reference to the base material requirements for crafting with this recipe.

        :return: The base_material_requirements of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :rtype: int
        """
        return self._base_material_requirements

    @base_material_requirements.setter
    def base_material_requirements(self, base_material_requirements):
        """Sets the base_material_requirements of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.

        A reference to the base material requirements for crafting with this recipe.

        :param base_material_requirements: The base_material_requirements of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :type base_material_requirements: int
        """

        self._base_material_requirements = base_material_requirements

    @property
    def bonus_plugs(self):
        """Gets the bonus_plugs of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.

        A list of 'bonus' socket plugs that may be available if certain requirements are met.

        :return: The bonus_plugs of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :rtype: List[DestinyDefinitionsDestinyItemCraftingBlockBonusPlugDefinition]
        """
        return self._bonus_plugs

    @bonus_plugs.setter
    def bonus_plugs(self, bonus_plugs):
        """Sets the bonus_plugs of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.

        A list of 'bonus' socket plugs that may be available if certain requirements are met.

        :param bonus_plugs: The bonus_plugs of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :type bonus_plugs: List[DestinyDefinitionsDestinyItemCraftingBlockBonusPlugDefinition]
        """

        self._bonus_plugs = bonus_plugs

    @property
    def failed_requirement_strings(self):
        """Gets the failed_requirement_strings of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.


        :return: The failed_requirement_strings of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :rtype: List[str]
        """
        return self._failed_requirement_strings

    @failed_requirement_strings.setter
    def failed_requirement_strings(self, failed_requirement_strings):
        """Sets the failed_requirement_strings of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.


        :param failed_requirement_strings: The failed_requirement_strings of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :type failed_requirement_strings: List[str]
        """

        self._failed_requirement_strings = failed_requirement_strings

    @property
    def output_item_hash(self):
        """Gets the output_item_hash of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.

        A reference to the item definition that is created when crafting with this 'recipe' item.

        :return: The output_item_hash of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :rtype: int
        """
        return self._output_item_hash

    @output_item_hash.setter
    def output_item_hash(self, output_item_hash):
        """Sets the output_item_hash of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.

        A reference to the item definition that is created when crafting with this 'recipe' item.

        :param output_item_hash: The output_item_hash of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :type output_item_hash: int
        """

        self._output_item_hash = output_item_hash

    @property
    def required_socket_type_hashes(self):
        """Gets the required_socket_type_hashes of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.

        A list of socket type hashes that describes which sockets are required for crafting with this recipe.

        :return: The required_socket_type_hashes of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :rtype: List[int]
        """
        return self._required_socket_type_hashes

    @required_socket_type_hashes.setter
    def required_socket_type_hashes(self, required_socket_type_hashes):
        """Sets the required_socket_type_hashes of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.

        A list of socket type hashes that describes which sockets are required for crafting with this recipe.

        :param required_socket_type_hashes: The required_socket_type_hashes of this DestinyDefinitionsDestinyItemCraftingBlockDefinition.
        :type required_socket_type_hashes: List[int]
        """

        self._required_socket_type_hashes = required_socket_type_hashes
