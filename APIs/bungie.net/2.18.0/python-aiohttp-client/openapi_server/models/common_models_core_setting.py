# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommonModelsCoreSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_settings: List[CommonModelsCoreSetting]=None, display_name: str=None, identifier: str=None, image_path: str=None, is_default: bool=None, summary: str=None):
        """CommonModelsCoreSetting - a model defined in OpenAPI

        :param child_settings: The child_settings of this CommonModelsCoreSetting.
        :param display_name: The display_name of this CommonModelsCoreSetting.
        :param identifier: The identifier of this CommonModelsCoreSetting.
        :param image_path: The image_path of this CommonModelsCoreSetting.
        :param is_default: The is_default of this CommonModelsCoreSetting.
        :param summary: The summary of this CommonModelsCoreSetting.
        """
        self.openapi_types = {
            'child_settings': List[CommonModelsCoreSetting],
            'display_name': str,
            'identifier': str,
            'image_path': str,
            'is_default': bool,
            'summary': str
        }

        self.attribute_map = {
            'child_settings': 'childSettings',
            'display_name': 'displayName',
            'identifier': 'identifier',
            'image_path': 'imagePath',
            'is_default': 'isDefault',
            'summary': 'summary'
        }

        self._child_settings = child_settings
        self._display_name = display_name
        self._identifier = identifier
        self._image_path = image_path
        self._is_default = is_default
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommonModelsCoreSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Common.Models.CoreSetting of this CommonModelsCoreSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_settings(self):
        """Gets the child_settings of this CommonModelsCoreSetting.


        :return: The child_settings of this CommonModelsCoreSetting.
        :rtype: List[CommonModelsCoreSetting]
        """
        return self._child_settings

    @child_settings.setter
    def child_settings(self, child_settings):
        """Sets the child_settings of this CommonModelsCoreSetting.


        :param child_settings: The child_settings of this CommonModelsCoreSetting.
        :type child_settings: List[CommonModelsCoreSetting]
        """

        self._child_settings = child_settings

    @property
    def display_name(self):
        """Gets the display_name of this CommonModelsCoreSetting.


        :return: The display_name of this CommonModelsCoreSetting.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CommonModelsCoreSetting.


        :param display_name: The display_name of this CommonModelsCoreSetting.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def identifier(self):
        """Gets the identifier of this CommonModelsCoreSetting.


        :return: The identifier of this CommonModelsCoreSetting.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this CommonModelsCoreSetting.


        :param identifier: The identifier of this CommonModelsCoreSetting.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def image_path(self):
        """Gets the image_path of this CommonModelsCoreSetting.


        :return: The image_path of this CommonModelsCoreSetting.
        :rtype: str
        """
        return self._image_path

    @image_path.setter
    def image_path(self, image_path):
        """Sets the image_path of this CommonModelsCoreSetting.


        :param image_path: The image_path of this CommonModelsCoreSetting.
        :type image_path: str
        """

        self._image_path = image_path

    @property
    def is_default(self):
        """Gets the is_default of this CommonModelsCoreSetting.


        :return: The is_default of this CommonModelsCoreSetting.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this CommonModelsCoreSetting.


        :param is_default: The is_default of this CommonModelsCoreSetting.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def summary(self):
        """Gets the summary of this CommonModelsCoreSetting.


        :return: The summary of this CommonModelsCoreSetting.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this CommonModelsCoreSetting.


        :param summary: The summary of this CommonModelsCoreSetting.
        :type summary: str
        """

        self._summary = summary
