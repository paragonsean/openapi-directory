# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_components_craftables_destiny_craftable_component import DestinyComponentsCraftablesDestinyCraftableComponent
from openapi_server import util


class DestinyComponentsCraftablesDestinyCraftablesComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, craftables: Dict[str, DestinyComponentsCraftablesDestinyCraftableComponent]=None, crafting_root_node_hash: int=None):
        """DestinyComponentsCraftablesDestinyCraftablesComponent - a model defined in OpenAPI

        :param craftables: The craftables of this DestinyComponentsCraftablesDestinyCraftablesComponent.
        :param crafting_root_node_hash: The crafting_root_node_hash of this DestinyComponentsCraftablesDestinyCraftablesComponent.
        """
        self.openapi_types = {
            'craftables': Dict[str, DestinyComponentsCraftablesDestinyCraftableComponent],
            'crafting_root_node_hash': int
        }

        self.attribute_map = {
            'craftables': 'craftables',
            'crafting_root_node_hash': 'craftingRootNodeHash'
        }

        self._craftables = craftables
        self._crafting_root_node_hash = crafting_root_node_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyComponentsCraftablesDestinyCraftablesComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Components.Craftables.DestinyCraftablesComponent of this DestinyComponentsCraftablesDestinyCraftablesComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def craftables(self):
        """Gets the craftables of this DestinyComponentsCraftablesDestinyCraftablesComponent.

        A map of craftable item hashes to craftable item state components.

        :return: The craftables of this DestinyComponentsCraftablesDestinyCraftablesComponent.
        :rtype: Dict[str, DestinyComponentsCraftablesDestinyCraftableComponent]
        """
        return self._craftables

    @craftables.setter
    def craftables(self, craftables):
        """Sets the craftables of this DestinyComponentsCraftablesDestinyCraftablesComponent.

        A map of craftable item hashes to craftable item state components.

        :param craftables: The craftables of this DestinyComponentsCraftablesDestinyCraftablesComponent.
        :type craftables: Dict[str, DestinyComponentsCraftablesDestinyCraftableComponent]
        """

        self._craftables = craftables

    @property
    def crafting_root_node_hash(self):
        """Gets the crafting_root_node_hash of this DestinyComponentsCraftablesDestinyCraftablesComponent.

        The hash for the root presentation node definition of craftable item categories.

        :return: The crafting_root_node_hash of this DestinyComponentsCraftablesDestinyCraftablesComponent.
        :rtype: int
        """
        return self._crafting_root_node_hash

    @crafting_root_node_hash.setter
    def crafting_root_node_hash(self, crafting_root_node_hash):
        """Sets the crafting_root_node_hash of this DestinyComponentsCraftablesDestinyCraftablesComponent.

        The hash for the root presentation node definition of craftable item categories.

        :param crafting_root_node_hash: The crafting_root_node_hash of this DestinyComponentsCraftablesDestinyCraftablesComponent.
        :type crafting_root_node_hash: int
        """

        self._crafting_root_node_hash = crafting_root_node_hash
