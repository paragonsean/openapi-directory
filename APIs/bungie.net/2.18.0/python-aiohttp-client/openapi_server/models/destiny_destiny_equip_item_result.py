# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDestinyEquipItemResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, equip_status: int=None, item_instance_id: int=None):
        """DestinyDestinyEquipItemResult - a model defined in OpenAPI

        :param equip_status: The equip_status of this DestinyDestinyEquipItemResult.
        :param item_instance_id: The item_instance_id of this DestinyDestinyEquipItemResult.
        """
        self.openapi_types = {
            'equip_status': int,
            'item_instance_id': int
        }

        self.attribute_map = {
            'equip_status': 'equipStatus',
            'item_instance_id': 'itemInstanceId'
        }

        self._equip_status = equip_status
        self._item_instance_id = item_instance_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDestinyEquipItemResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.DestinyEquipItemResult of this DestinyDestinyEquipItemResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def equip_status(self):
        """Gets the equip_status of this DestinyDestinyEquipItemResult.

        A PlatformErrorCodes enum indicating whether it succeeded, and if it failed why.

        :return: The equip_status of this DestinyDestinyEquipItemResult.
        :rtype: int
        """
        return self._equip_status

    @equip_status.setter
    def equip_status(self, equip_status):
        """Sets the equip_status of this DestinyDestinyEquipItemResult.

        A PlatformErrorCodes enum indicating whether it succeeded, and if it failed why.

        :param equip_status: The equip_status of this DestinyDestinyEquipItemResult.
        :type equip_status: int
        """

        self._equip_status = equip_status

    @property
    def item_instance_id(self):
        """Gets the item_instance_id of this DestinyDestinyEquipItemResult.

        The instance ID of the item in question (all items that can be equipped must, but definition, be Instanced and thus have an Instance ID that you can use to refer to them)

        :return: The item_instance_id of this DestinyDestinyEquipItemResult.
        :rtype: int
        """
        return self._item_instance_id

    @item_instance_id.setter
    def item_instance_id(self, item_instance_id):
        """Sets the item_instance_id of this DestinyDestinyEquipItemResult.

        The instance ID of the item in question (all items that can be equipped must, but definition, be Instanced and thus have an Instance ID that you can use to refer to them)

        :param item_instance_id: The item_instance_id of this DestinyDestinyEquipItemResult.
        :type item_instance_id: int
        """

        self._item_instance_id = item_instance_id
