# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_result_of_trending_entry import SearchResultOfTrendingEntry
from openapi_server import util


class TrendingTrendingCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_id: str=None, category_name: str=None, entries: SearchResultOfTrendingEntry=None):
        """TrendingTrendingCategory - a model defined in OpenAPI

        :param category_id: The category_id of this TrendingTrendingCategory.
        :param category_name: The category_name of this TrendingTrendingCategory.
        :param entries: The entries of this TrendingTrendingCategory.
        """
        self.openapi_types = {
            'category_id': str,
            'category_name': str,
            'entries': SearchResultOfTrendingEntry
        }

        self.attribute_map = {
            'category_id': 'categoryId',
            'category_name': 'categoryName',
            'entries': 'entries'
        }

        self._category_id = category_id
        self._category_name = category_name
        self._entries = entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrendingTrendingCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Trending.TrendingCategory of this TrendingTrendingCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_id(self):
        """Gets the category_id of this TrendingTrendingCategory.


        :return: The category_id of this TrendingTrendingCategory.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this TrendingTrendingCategory.


        :param category_id: The category_id of this TrendingTrendingCategory.
        :type category_id: str
        """

        self._category_id = category_id

    @property
    def category_name(self):
        """Gets the category_name of this TrendingTrendingCategory.


        :return: The category_name of this TrendingTrendingCategory.
        :rtype: str
        """
        return self._category_name

    @category_name.setter
    def category_name(self, category_name):
        """Sets the category_name of this TrendingTrendingCategory.


        :param category_name: The category_name of this TrendingTrendingCategory.
        :type category_name: str
        """

        self._category_name = category_name

    @property
    def entries(self):
        """Gets the entries of this TrendingTrendingCategory.


        :return: The entries of this TrendingTrendingCategory.
        :rtype: SearchResultOfTrendingEntry
        """
        return self._entries

    @entries.setter
    def entries(self, entries):
        """Sets the entries of this TrendingTrendingCategory.


        :param entries: The entries of this TrendingTrendingCategory.
        :type entries: SearchResultOfTrendingEntry
        """

        self._entries = entries
