# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_destiny_activity_graph_list_entry_definition import DestinyDefinitionsDestinyActivityGraphListEntryDefinition
from openapi_server.models.destiny_definitions_destiny_bubble_definition import DestinyDefinitionsDestinyBubbleDefinition
from openapi_server.models.destiny_definitions_destiny_destination_bubble_setting_definition import DestinyDefinitionsDestinyDestinationBubbleSettingDefinition
from openapi_server import util


class DestinyDefinitionsDestinyDestinationDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_graph_entries: List[DestinyDefinitionsDestinyActivityGraphListEntryDefinition]=None, bubble_settings: List[DestinyDefinitionsDestinyDestinationBubbleSettingDefinition]=None, bubbles: List[DestinyDefinitionsDestinyBubbleDefinition]=None, default_freeroam_activity_hash: int=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, place_hash: int=None, redacted: bool=None):
        """DestinyDefinitionsDestinyDestinationDefinition - a model defined in OpenAPI

        :param activity_graph_entries: The activity_graph_entries of this DestinyDefinitionsDestinyDestinationDefinition.
        :param bubble_settings: The bubble_settings of this DestinyDefinitionsDestinyDestinationDefinition.
        :param bubbles: The bubbles of this DestinyDefinitionsDestinyDestinationDefinition.
        :param default_freeroam_activity_hash: The default_freeroam_activity_hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsDestinyDestinationDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :param index: The index of this DestinyDefinitionsDestinyDestinationDefinition.
        :param place_hash: The place_hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinyDestinationDefinition.
        """
        self.openapi_types = {
            'activity_graph_entries': List[DestinyDefinitionsDestinyActivityGraphListEntryDefinition],
            'bubble_settings': List[DestinyDefinitionsDestinyDestinationBubbleSettingDefinition],
            'bubbles': List[DestinyDefinitionsDestinyBubbleDefinition],
            'default_freeroam_activity_hash': int,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'place_hash': int,
            'redacted': bool
        }

        self.attribute_map = {
            'activity_graph_entries': 'activityGraphEntries',
            'bubble_settings': 'bubbleSettings',
            'bubbles': 'bubbles',
            'default_freeroam_activity_hash': 'defaultFreeroamActivityHash',
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'place_hash': 'placeHash',
            'redacted': 'redacted'
        }

        self._activity_graph_entries = activity_graph_entries
        self._bubble_settings = bubble_settings
        self._bubbles = bubbles
        self._default_freeroam_activity_hash = default_freeroam_activity_hash
        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._place_hash = place_hash
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyDestinationDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyDestinationDefinition of this DestinyDefinitionsDestinyDestinationDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_graph_entries(self):
        """Gets the activity_graph_entries of this DestinyDefinitionsDestinyDestinationDefinition.

        If the Destination has default Activity Graphs (i.e. \"Map\") that should be shown in the director, this is the list of those Graphs. At most, only one should be active at any given time for a Destination: these would represent, for example, different variants on a Map if the Destination is changing on a macro level based on game state.

        :return: The activity_graph_entries of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: List[DestinyDefinitionsDestinyActivityGraphListEntryDefinition]
        """
        return self._activity_graph_entries

    @activity_graph_entries.setter
    def activity_graph_entries(self, activity_graph_entries):
        """Sets the activity_graph_entries of this DestinyDefinitionsDestinyDestinationDefinition.

        If the Destination has default Activity Graphs (i.e. \"Map\") that should be shown in the director, this is the list of those Graphs. At most, only one should be active at any given time for a Destination: these would represent, for example, different variants on a Map if the Destination is changing on a macro level based on game state.

        :param activity_graph_entries: The activity_graph_entries of this DestinyDefinitionsDestinyDestinationDefinition.
        :type activity_graph_entries: List[DestinyDefinitionsDestinyActivityGraphListEntryDefinition]
        """

        self._activity_graph_entries = activity_graph_entries

    @property
    def bubble_settings(self):
        """Gets the bubble_settings of this DestinyDefinitionsDestinyDestinationDefinition.

        A Destination may have many \"Bubbles\" zones with human readable properties.  We don't get as much info as I'd like about them - I'd love to return info like where on the map they are located - but at least this gives you the name of those bubbles. bubbleSettings and bubbles both have the identical number of entries, and you should match up their indexes to provide matching bubble and bubbleSettings data.  DEPRECATED - Just use bubbles, it now has this data.

        :return: The bubble_settings of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: List[DestinyDefinitionsDestinyDestinationBubbleSettingDefinition]
        """
        return self._bubble_settings

    @bubble_settings.setter
    def bubble_settings(self, bubble_settings):
        """Sets the bubble_settings of this DestinyDefinitionsDestinyDestinationDefinition.

        A Destination may have many \"Bubbles\" zones with human readable properties.  We don't get as much info as I'd like about them - I'd love to return info like where on the map they are located - but at least this gives you the name of those bubbles. bubbleSettings and bubbles both have the identical number of entries, and you should match up their indexes to provide matching bubble and bubbleSettings data.  DEPRECATED - Just use bubbles, it now has this data.

        :param bubble_settings: The bubble_settings of this DestinyDefinitionsDestinyDestinationDefinition.
        :type bubble_settings: List[DestinyDefinitionsDestinyDestinationBubbleSettingDefinition]
        """

        self._bubble_settings = bubble_settings

    @property
    def bubbles(self):
        """Gets the bubbles of this DestinyDefinitionsDestinyDestinationDefinition.

        This provides the unique identifiers for every bubble in the destination (only guaranteed unique within the destination), and any intrinsic properties of the bubble.  bubbleSettings and bubbles both have the identical number of entries, and you should match up their indexes to provide matching bubble and bubbleSettings data.

        :return: The bubbles of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: List[DestinyDefinitionsDestinyBubbleDefinition]
        """
        return self._bubbles

    @bubbles.setter
    def bubbles(self, bubbles):
        """Sets the bubbles of this DestinyDefinitionsDestinyDestinationDefinition.

        This provides the unique identifiers for every bubble in the destination (only guaranteed unique within the destination), and any intrinsic properties of the bubble.  bubbleSettings and bubbles both have the identical number of entries, and you should match up their indexes to provide matching bubble and bubbleSettings data.

        :param bubbles: The bubbles of this DestinyDefinitionsDestinyDestinationDefinition.
        :type bubbles: List[DestinyDefinitionsDestinyBubbleDefinition]
        """

        self._bubbles = bubbles

    @property
    def default_freeroam_activity_hash(self):
        """Gets the default_freeroam_activity_hash of this DestinyDefinitionsDestinyDestinationDefinition.

        If this Destination has a default Free-Roam activity, this is the hash for that Activity. Use it to look up the DestinyActivityDefintion.

        :return: The default_freeroam_activity_hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: int
        """
        return self._default_freeroam_activity_hash

    @default_freeroam_activity_hash.setter
    def default_freeroam_activity_hash(self, default_freeroam_activity_hash):
        """Sets the default_freeroam_activity_hash of this DestinyDefinitionsDestinyDestinationDefinition.

        If this Destination has a default Free-Roam activity, this is the hash for that Activity. Use it to look up the DestinyActivityDefintion.

        :param default_freeroam_activity_hash: The default_freeroam_activity_hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :type default_freeroam_activity_hash: int
        """

        self._default_freeroam_activity_hash = default_freeroam_activity_hash

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinyDestinationDefinition.


        :return: The display_properties of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinyDestinationDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsDestinyDestinationDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinyDestinationDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinyDestinationDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinyDestinationDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinyDestinationDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinyDestinationDefinition.
        :type index: int
        """

        self._index = index

    @property
    def place_hash(self):
        """Gets the place_hash of this DestinyDefinitionsDestinyDestinationDefinition.

        The place that \"owns\" this Destination. Use this hash to look up the DestinyPlaceDefinition.

        :return: The place_hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: int
        """
        return self._place_hash

    @place_hash.setter
    def place_hash(self, place_hash):
        """Sets the place_hash of this DestinyDefinitionsDestinyDestinationDefinition.

        The place that \"owns\" this Destination. Use this hash to look up the DestinyPlaceDefinition.

        :param place_hash: The place_hash of this DestinyDefinitionsDestinyDestinationDefinition.
        :type place_hash: int
        """

        self._place_hash = place_hash

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinyDestinationDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinyDestinationDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinyDestinationDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinyDestinationDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
