# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDestinyItemInventoryBlockDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_type_hash: int=None, expiration_tooltip: str=None, expired_in_activity_message: str=None, expired_in_orbit_message: str=None, is_instance_item: bool=None, max_stack_size: int=None, recipe_item_hash: int=None, recovery_bucket_type_hash: int=None, stack_unique_label: str=None, suppress_expiration_when_objectives_complete: bool=None, tier_type: int=None, tier_type_hash: int=None, tier_type_name: str=None):
        """DestinyDefinitionsDestinyItemInventoryBlockDefinition - a model defined in OpenAPI

        :param bucket_type_hash: The bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param expiration_tooltip: The expiration_tooltip of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param expired_in_activity_message: The expired_in_activity_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param expired_in_orbit_message: The expired_in_orbit_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param is_instance_item: The is_instance_item of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param max_stack_size: The max_stack_size of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param recipe_item_hash: The recipe_item_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param recovery_bucket_type_hash: The recovery_bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param stack_unique_label: The stack_unique_label of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param suppress_expiration_when_objectives_complete: The suppress_expiration_when_objectives_complete of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param tier_type: The tier_type of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param tier_type_hash: The tier_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :param tier_type_name: The tier_type_name of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        """
        self.openapi_types = {
            'bucket_type_hash': int,
            'expiration_tooltip': str,
            'expired_in_activity_message': str,
            'expired_in_orbit_message': str,
            'is_instance_item': bool,
            'max_stack_size': int,
            'recipe_item_hash': int,
            'recovery_bucket_type_hash': int,
            'stack_unique_label': str,
            'suppress_expiration_when_objectives_complete': bool,
            'tier_type': int,
            'tier_type_hash': int,
            'tier_type_name': str
        }

        self.attribute_map = {
            'bucket_type_hash': 'bucketTypeHash',
            'expiration_tooltip': 'expirationTooltip',
            'expired_in_activity_message': 'expiredInActivityMessage',
            'expired_in_orbit_message': 'expiredInOrbitMessage',
            'is_instance_item': 'isInstanceItem',
            'max_stack_size': 'maxStackSize',
            'recipe_item_hash': 'recipeItemHash',
            'recovery_bucket_type_hash': 'recoveryBucketTypeHash',
            'stack_unique_label': 'stackUniqueLabel',
            'suppress_expiration_when_objectives_complete': 'suppressExpirationWhenObjectivesComplete',
            'tier_type': 'tierType',
            'tier_type_hash': 'tierTypeHash',
            'tier_type_name': 'tierTypeName'
        }

        self._bucket_type_hash = bucket_type_hash
        self._expiration_tooltip = expiration_tooltip
        self._expired_in_activity_message = expired_in_activity_message
        self._expired_in_orbit_message = expired_in_orbit_message
        self._is_instance_item = is_instance_item
        self._max_stack_size = max_stack_size
        self._recipe_item_hash = recipe_item_hash
        self._recovery_bucket_type_hash = recovery_bucket_type_hash
        self._stack_unique_label = stack_unique_label
        self._suppress_expiration_when_objectives_complete = suppress_expiration_when_objectives_complete
        self._tier_type = tier_type
        self._tier_type_hash = tier_type_hash
        self._tier_type_name = tier_type_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyItemInventoryBlockDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyItemInventoryBlockDefinition of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_type_hash(self):
        """Gets the bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The hash identifier for the DestinyInventoryBucketDefinition to which this item belongs. I should have named this \"bucketHash\", but too many things refer to it now. Sigh.

        :return: The bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: int
        """
        return self._bucket_type_hash

    @bucket_type_hash.setter
    def bucket_type_hash(self, bucket_type_hash):
        """Sets the bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The hash identifier for the DestinyInventoryBucketDefinition to which this item belongs. I should have named this \"bucketHash\", but too many things refer to it now. Sigh.

        :param bucket_type_hash: The bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type bucket_type_hash: int
        """

        self._bucket_type_hash = bucket_type_hash

    @property
    def expiration_tooltip(self):
        """Gets the expiration_tooltip of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The tooltip message to show, if any, when the item expires.

        :return: The expiration_tooltip of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: str
        """
        return self._expiration_tooltip

    @expiration_tooltip.setter
    def expiration_tooltip(self, expiration_tooltip):
        """Sets the expiration_tooltip of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The tooltip message to show, if any, when the item expires.

        :param expiration_tooltip: The expiration_tooltip of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type expiration_tooltip: str
        """

        self._expiration_tooltip = expiration_tooltip

    @property
    def expired_in_activity_message(self):
        """Gets the expired_in_activity_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If the item expires while playing in an activity, we show a different message.

        :return: The expired_in_activity_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: str
        """
        return self._expired_in_activity_message

    @expired_in_activity_message.setter
    def expired_in_activity_message(self, expired_in_activity_message):
        """Sets the expired_in_activity_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If the item expires while playing in an activity, we show a different message.

        :param expired_in_activity_message: The expired_in_activity_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type expired_in_activity_message: str
        """

        self._expired_in_activity_message = expired_in_activity_message

    @property
    def expired_in_orbit_message(self):
        """Gets the expired_in_orbit_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If the item expires in orbit, we show a... more different message. (\"Consummate V's, consummate!\")

        :return: The expired_in_orbit_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: str
        """
        return self._expired_in_orbit_message

    @expired_in_orbit_message.setter
    def expired_in_orbit_message(self, expired_in_orbit_message):
        """Sets the expired_in_orbit_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If the item expires in orbit, we show a... more different message. (\"Consummate V's, consummate!\")

        :param expired_in_orbit_message: The expired_in_orbit_message of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type expired_in_orbit_message: str
        """

        self._expired_in_orbit_message = expired_in_orbit_message

    @property
    def is_instance_item(self):
        """Gets the is_instance_item of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If TRUE, this item is instanced. Otherwise, it is a generic item that merely has a quantity in a stack (like Glimmer).

        :return: The is_instance_item of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: bool
        """
        return self._is_instance_item

    @is_instance_item.setter
    def is_instance_item(self, is_instance_item):
        """Sets the is_instance_item of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If TRUE, this item is instanced. Otherwise, it is a generic item that merely has a quantity in a stack (like Glimmer).

        :param is_instance_item: The is_instance_item of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type is_instance_item: bool
        """

        self._is_instance_item = is_instance_item

    @property
    def max_stack_size(self):
        """Gets the max_stack_size of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The maximum quantity of this item that can exist in a stack.

        :return: The max_stack_size of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: int
        """
        return self._max_stack_size

    @max_stack_size.setter
    def max_stack_size(self, max_stack_size):
        """Sets the max_stack_size of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The maximum quantity of this item that can exist in a stack.

        :param max_stack_size: The max_stack_size of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type max_stack_size: int
        """

        self._max_stack_size = max_stack_size

    @property
    def recipe_item_hash(self):
        """Gets the recipe_item_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        A reference to the associated crafting 'recipe' item definition, if this item can be crafted.

        :return: The recipe_item_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: int
        """
        return self._recipe_item_hash

    @recipe_item_hash.setter
    def recipe_item_hash(self, recipe_item_hash):
        """Sets the recipe_item_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        A reference to the associated crafting 'recipe' item definition, if this item can be crafted.

        :param recipe_item_hash: The recipe_item_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type recipe_item_hash: int
        """

        self._recipe_item_hash = recipe_item_hash

    @property
    def recovery_bucket_type_hash(self):
        """Gets the recovery_bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If the item is picked up by the lost loot queue, this is the hash identifier for the DestinyInventoryBucketDefinition into which it will be placed. Again, I should have named this recoveryBucketHash instead.

        :return: The recovery_bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: int
        """
        return self._recovery_bucket_type_hash

    @recovery_bucket_type_hash.setter
    def recovery_bucket_type_hash(self, recovery_bucket_type_hash):
        """Sets the recovery_bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If the item is picked up by the lost loot queue, this is the hash identifier for the DestinyInventoryBucketDefinition into which it will be placed. Again, I should have named this recoveryBucketHash instead.

        :param recovery_bucket_type_hash: The recovery_bucket_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type recovery_bucket_type_hash: int
        """

        self._recovery_bucket_type_hash = recovery_bucket_type_hash

    @property
    def stack_unique_label(self):
        """Gets the stack_unique_label of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If this string is populated, you can't have more than one stack with this label in a given inventory. Note that this is different from the equipping block's unique label, which is used for equipping uniqueness.

        :return: The stack_unique_label of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: str
        """
        return self._stack_unique_label

    @stack_unique_label.setter
    def stack_unique_label(self, stack_unique_label):
        """Sets the stack_unique_label of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        If this string is populated, you can't have more than one stack with this label in a given inventory. Note that this is different from the equipping block's unique label, which is used for equipping uniqueness.

        :param stack_unique_label: The stack_unique_label of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type stack_unique_label: str
        """

        self._stack_unique_label = stack_unique_label

    @property
    def suppress_expiration_when_objectives_complete(self):
        """Gets the suppress_expiration_when_objectives_complete of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.


        :return: The suppress_expiration_when_objectives_complete of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: bool
        """
        return self._suppress_expiration_when_objectives_complete

    @suppress_expiration_when_objectives_complete.setter
    def suppress_expiration_when_objectives_complete(self, suppress_expiration_when_objectives_complete):
        """Sets the suppress_expiration_when_objectives_complete of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.


        :param suppress_expiration_when_objectives_complete: The suppress_expiration_when_objectives_complete of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type suppress_expiration_when_objectives_complete: bool
        """

        self._suppress_expiration_when_objectives_complete = suppress_expiration_when_objectives_complete

    @property
    def tier_type(self):
        """Gets the tier_type of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The enumeration matching the tier type of the item to known values, again for convenience sake.

        :return: The tier_type of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: int
        """
        return self._tier_type

    @tier_type.setter
    def tier_type(self, tier_type):
        """Sets the tier_type of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The enumeration matching the tier type of the item to known values, again for convenience sake.

        :param tier_type: The tier_type of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type tier_type: int
        """

        self._tier_type = tier_type

    @property
    def tier_type_hash(self):
        """Gets the tier_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The hash identifier for the Tier Type of the item, use to look up its DestinyItemTierTypeDefinition if you need to show localized data for the item's tier.

        :return: The tier_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: int
        """
        return self._tier_type_hash

    @tier_type_hash.setter
    def tier_type_hash(self, tier_type_hash):
        """Sets the tier_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The hash identifier for the Tier Type of the item, use to look up its DestinyItemTierTypeDefinition if you need to show localized data for the item's tier.

        :param tier_type_hash: The tier_type_hash of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type tier_type_hash: int
        """

        self._tier_type_hash = tier_type_hash

    @property
    def tier_type_name(self):
        """Gets the tier_type_name of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The localized name of the tier type, which is a useful shortcut so you don't have to look up the definition every time. However, it's mostly a holdover from days before we had a DestinyItemTierTypeDefinition to refer to.

        :return: The tier_type_name of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :rtype: str
        """
        return self._tier_type_name

    @tier_type_name.setter
    def tier_type_name(self, tier_type_name):
        """Sets the tier_type_name of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.

        The localized name of the tier type, which is a useful shortcut so you don't have to look up the definition every time. However, it's mostly a holdover from days before we had a DestinyItemTierTypeDefinition to refer to.

        :param tier_type_name: The tier_type_name of this DestinyDefinitionsDestinyItemInventoryBlockDefinition.
        :type tier_type_name: str
        """

        self._tier_type_name = tier_type_name
