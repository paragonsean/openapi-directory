# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentCommentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment_count: int=None, topic_id: int=None):
        """ContentCommentSummary - a model defined in OpenAPI

        :param comment_count: The comment_count of this ContentCommentSummary.
        :param topic_id: The topic_id of this ContentCommentSummary.
        """
        self.openapi_types = {
            'comment_count': int,
            'topic_id': int
        }

        self.attribute_map = {
            'comment_count': 'commentCount',
            'topic_id': 'topicId'
        }

        self._comment_count = comment_count
        self._topic_id = topic_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentCommentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Content.CommentSummary of this ContentCommentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment_count(self):
        """Gets the comment_count of this ContentCommentSummary.


        :return: The comment_count of this ContentCommentSummary.
        :rtype: int
        """
        return self._comment_count

    @comment_count.setter
    def comment_count(self, comment_count):
        """Sets the comment_count of this ContentCommentSummary.


        :param comment_count: The comment_count of this ContentCommentSummary.
        :type comment_count: int
        """

        self._comment_count = comment_count

    @property
    def topic_id(self):
        """Gets the topic_id of this ContentCommentSummary.


        :return: The topic_id of this ContentCommentSummary.
        :rtype: int
        """
        return self._topic_id

    @topic_id.setter
    def topic_id(self, topic_id):
        """Sets the topic_id of this ContentCommentSummary.


        :param topic_id: The topic_id of this ContentCommentSummary.
        :type topic_id: int
        """

        self._topic_id = topic_id
