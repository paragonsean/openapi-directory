# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupsV2GroupOptionsEditAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_guided_game_permission_override: int=None, invite_permission_override: bool=None, join_level: int=None, update_banner_permission_override: bool=None, update_culture_permission_override: bool=None):
        """GroupsV2GroupOptionsEditAction - a model defined in OpenAPI

        :param host_guided_game_permission_override: The host_guided_game_permission_override of this GroupsV2GroupOptionsEditAction.
        :param invite_permission_override: The invite_permission_override of this GroupsV2GroupOptionsEditAction.
        :param join_level: The join_level of this GroupsV2GroupOptionsEditAction.
        :param update_banner_permission_override: The update_banner_permission_override of this GroupsV2GroupOptionsEditAction.
        :param update_culture_permission_override: The update_culture_permission_override of this GroupsV2GroupOptionsEditAction.
        """
        self.openapi_types = {
            'host_guided_game_permission_override': int,
            'invite_permission_override': bool,
            'join_level': int,
            'update_banner_permission_override': bool,
            'update_culture_permission_override': bool
        }

        self.attribute_map = {
            'host_guided_game_permission_override': 'HostGuidedGamePermissionOverride',
            'invite_permission_override': 'InvitePermissionOverride',
            'join_level': 'JoinLevel',
            'update_banner_permission_override': 'UpdateBannerPermissionOverride',
            'update_culture_permission_override': 'UpdateCulturePermissionOverride'
        }

        self._host_guided_game_permission_override = host_guided_game_permission_override
        self._invite_permission_override = invite_permission_override
        self._join_level = join_level
        self._update_banner_permission_override = update_banner_permission_override
        self._update_culture_permission_override = update_culture_permission_override

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupsV2GroupOptionsEditAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupsV2.GroupOptionsEditAction of this GroupsV2GroupOptionsEditAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_guided_game_permission_override(self):
        """Gets the host_guided_game_permission_override of this GroupsV2GroupOptionsEditAction.

        Minimum Member Level allowed to host guided games  Always Allowed: Founder, Acting Founder, Admin  Allowed Overrides: None, Member, Beginner  Default is Member for clans, None for groups, although this means nothing for groups.

        :return: The host_guided_game_permission_override of this GroupsV2GroupOptionsEditAction.
        :rtype: int
        """
        return self._host_guided_game_permission_override

    @host_guided_game_permission_override.setter
    def host_guided_game_permission_override(self, host_guided_game_permission_override):
        """Sets the host_guided_game_permission_override of this GroupsV2GroupOptionsEditAction.

        Minimum Member Level allowed to host guided games  Always Allowed: Founder, Acting Founder, Admin  Allowed Overrides: None, Member, Beginner  Default is Member for clans, None for groups, although this means nothing for groups.

        :param host_guided_game_permission_override: The host_guided_game_permission_override of this GroupsV2GroupOptionsEditAction.
        :type host_guided_game_permission_override: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if host_guided_game_permission_override not in allowed_values:
            raise ValueError(
                "Invalid value for `host_guided_game_permission_override` ({0}), must be one of {1}"
                .format(host_guided_game_permission_override, allowed_values)
            )

        self._host_guided_game_permission_override = host_guided_game_permission_override

    @property
    def invite_permission_override(self):
        """Gets the invite_permission_override of this GroupsV2GroupOptionsEditAction.

        Minimum Member Level allowed to invite new members to group  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.

        :return: The invite_permission_override of this GroupsV2GroupOptionsEditAction.
        :rtype: bool
        """
        return self._invite_permission_override

    @invite_permission_override.setter
    def invite_permission_override(self, invite_permission_override):
        """Sets the invite_permission_override of this GroupsV2GroupOptionsEditAction.

        Minimum Member Level allowed to invite new members to group  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.

        :param invite_permission_override: The invite_permission_override of this GroupsV2GroupOptionsEditAction.
        :type invite_permission_override: bool
        """

        self._invite_permission_override = invite_permission_override

    @property
    def join_level(self):
        """Gets the join_level of this GroupsV2GroupOptionsEditAction.

        Level to join a member at when accepting an invite, application, or joining an open clan  Default is Beginner.

        :return: The join_level of this GroupsV2GroupOptionsEditAction.
        :rtype: int
        """
        return self._join_level

    @join_level.setter
    def join_level(self, join_level):
        """Sets the join_level of this GroupsV2GroupOptionsEditAction.

        Level to join a member at when accepting an invite, application, or joining an open clan  Default is Beginner.

        :param join_level: The join_level of this GroupsV2GroupOptionsEditAction.
        :type join_level: int
        """
        allowed_values = [0, 1, 2, 3, 4, 5]  # noqa: E501
        if join_level not in allowed_values:
            raise ValueError(
                "Invalid value for `join_level` ({0}), must be one of {1}"
                .format(join_level, allowed_values)
            )

        self._join_level = join_level

    @property
    def update_banner_permission_override(self):
        """Gets the update_banner_permission_override of this GroupsV2GroupOptionsEditAction.

        Minimum Member Level allowed to update banner  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.

        :return: The update_banner_permission_override of this GroupsV2GroupOptionsEditAction.
        :rtype: bool
        """
        return self._update_banner_permission_override

    @update_banner_permission_override.setter
    def update_banner_permission_override(self, update_banner_permission_override):
        """Sets the update_banner_permission_override of this GroupsV2GroupOptionsEditAction.

        Minimum Member Level allowed to update banner  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.

        :param update_banner_permission_override: The update_banner_permission_override of this GroupsV2GroupOptionsEditAction.
        :type update_banner_permission_override: bool
        """

        self._update_banner_permission_override = update_banner_permission_override

    @property
    def update_culture_permission_override(self):
        """Gets the update_culture_permission_override of this GroupsV2GroupOptionsEditAction.

        Minimum Member Level allowed to update group culture  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.

        :return: The update_culture_permission_override of this GroupsV2GroupOptionsEditAction.
        :rtype: bool
        """
        return self._update_culture_permission_override

    @update_culture_permission_override.setter
    def update_culture_permission_override(self, update_culture_permission_override):
        """Sets the update_culture_permission_override of this GroupsV2GroupOptionsEditAction.

        Minimum Member Level allowed to update group culture  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.

        :param update_culture_permission_override: The update_culture_permission_override of this GroupsV2GroupOptionsEditAction.
        :type update_culture_permission_override: bool
        """

        self._update_culture_permission_override = update_culture_permission_override
