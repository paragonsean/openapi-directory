# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyMilestonesDestinyMilestoneActivityPhase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, complete: bool=None, phase_hash: int=None):
        """DestinyMilestonesDestinyMilestoneActivityPhase - a model defined in OpenAPI

        :param complete: The complete of this DestinyMilestonesDestinyMilestoneActivityPhase.
        :param phase_hash: The phase_hash of this DestinyMilestonesDestinyMilestoneActivityPhase.
        """
        self.openapi_types = {
            'complete': bool,
            'phase_hash': int
        }

        self.attribute_map = {
            'complete': 'complete',
            'phase_hash': 'phaseHash'
        }

        self._complete = complete
        self._phase_hash = phase_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyMilestonesDestinyMilestoneActivityPhase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Milestones.DestinyMilestoneActivityPhase of this DestinyMilestonesDestinyMilestoneActivityPhase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def complete(self):
        """Gets the complete of this DestinyMilestonesDestinyMilestoneActivityPhase.

        Indicates if the phase has been completed.

        :return: The complete of this DestinyMilestonesDestinyMilestoneActivityPhase.
        :rtype: bool
        """
        return self._complete

    @complete.setter
    def complete(self, complete):
        """Sets the complete of this DestinyMilestonesDestinyMilestoneActivityPhase.

        Indicates if the phase has been completed.

        :param complete: The complete of this DestinyMilestonesDestinyMilestoneActivityPhase.
        :type complete: bool
        """

        self._complete = complete

    @property
    def phase_hash(self):
        """Gets the phase_hash of this DestinyMilestonesDestinyMilestoneActivityPhase.

        In DestinyActivityDefinition, if the activity has phases, there will be a set of phases defined in the \"insertionPoints\" property. This is the hash that maps to that phase.

        :return: The phase_hash of this DestinyMilestonesDestinyMilestoneActivityPhase.
        :rtype: int
        """
        return self._phase_hash

    @phase_hash.setter
    def phase_hash(self, phase_hash):
        """Sets the phase_hash of this DestinyMilestonesDestinyMilestoneActivityPhase.

        In DestinyActivityDefinition, if the activity has phases, there will be a set of phases defined in the \"insertionPoints\" property. This is the hash that maps to that phase.

        :param phase_hash: The phase_hash of this DestinyMilestonesDestinyMilestoneActivityPhase.
        :type phase_hash: int
        """

        self._phase_hash = phase_hash
