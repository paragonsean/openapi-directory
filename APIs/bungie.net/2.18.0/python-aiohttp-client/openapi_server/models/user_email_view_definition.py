# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_email_view_definition_setting import UserEmailViewDefinitionSetting
from openapi_server import util


class UserEmailViewDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, view_settings: List[UserEmailViewDefinitionSetting]=None):
        """UserEmailViewDefinition - a model defined in OpenAPI

        :param name: The name of this UserEmailViewDefinition.
        :param view_settings: The view_settings of this UserEmailViewDefinition.
        """
        self.openapi_types = {
            'name': str,
            'view_settings': List[UserEmailViewDefinitionSetting]
        }

        self.attribute_map = {
            'name': 'name',
            'view_settings': 'viewSettings'
        }

        self._name = name
        self._view_settings = view_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserEmailViewDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User.EmailViewDefinition of this UserEmailViewDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UserEmailViewDefinition.

        The identifier for this view.

        :return: The name of this UserEmailViewDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserEmailViewDefinition.

        The identifier for this view.

        :param name: The name of this UserEmailViewDefinition.
        :type name: str
        """

        self._name = name

    @property
    def view_settings(self):
        """Gets the view_settings of this UserEmailViewDefinition.

        The ordered list of settings to show in this view.

        :return: The view_settings of this UserEmailViewDefinition.
        :rtype: List[UserEmailViewDefinitionSetting]
        """
        return self._view_settings

    @view_settings.setter
    def view_settings(self, view_settings):
        """Sets the view_settings of this UserEmailViewDefinition.

        The ordered list of settings to show in this view.

        :param view_settings: The view_settings of this UserEmailViewDefinition.
        :type view_settings: List[UserEmailViewDefinitionSetting]
        """

        self._view_settings = view_settings
