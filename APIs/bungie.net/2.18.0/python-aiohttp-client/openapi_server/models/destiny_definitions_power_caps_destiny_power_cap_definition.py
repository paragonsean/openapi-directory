# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsPowerCapsDestinyPowerCapDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash: int=None, index: int=None, power_cap: int=None, redacted: bool=None):
        """DestinyDefinitionsPowerCapsDestinyPowerCapDefinition - a model defined in OpenAPI

        :param hash: The hash of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :param index: The index of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :param power_cap: The power_cap of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :param redacted: The redacted of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        """
        self.openapi_types = {
            'hash': int,
            'index': int,
            'power_cap': int,
            'redacted': bool
        }

        self.attribute_map = {
            'hash': 'hash',
            'index': 'index',
            'power_cap': 'powerCap',
            'redacted': 'redacted'
        }

        self._hash = hash
        self._index = index
        self._power_cap = power_cap
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsPowerCapsDestinyPowerCapDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.PowerCaps.DestinyPowerCapDefinition of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :type index: int
        """

        self._index = index

    @property
    def power_cap(self):
        """Gets the power_cap of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.

        The raw value for a power cap.

        :return: The power_cap of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :rtype: int
        """
        return self._power_cap

    @power_cap.setter
    def power_cap(self, power_cap):
        """Sets the power_cap of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.

        The raw value for a power cap.

        :param power_cap: The power_cap of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :type power_cap: int
        """

        self._power_cap = power_cap

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsPowerCapsDestinyPowerCapDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
