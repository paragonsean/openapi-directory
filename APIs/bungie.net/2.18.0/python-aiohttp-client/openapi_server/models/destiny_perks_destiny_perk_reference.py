# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyPerksDestinyPerkReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, icon_path: str=None, is_active: bool=None, perk_hash: int=None, visible: bool=None):
        """DestinyPerksDestinyPerkReference - a model defined in OpenAPI

        :param icon_path: The icon_path of this DestinyPerksDestinyPerkReference.
        :param is_active: The is_active of this DestinyPerksDestinyPerkReference.
        :param perk_hash: The perk_hash of this DestinyPerksDestinyPerkReference.
        :param visible: The visible of this DestinyPerksDestinyPerkReference.
        """
        self.openapi_types = {
            'icon_path': str,
            'is_active': bool,
            'perk_hash': int,
            'visible': bool
        }

        self.attribute_map = {
            'icon_path': 'iconPath',
            'is_active': 'isActive',
            'perk_hash': 'perkHash',
            'visible': 'visible'
        }

        self._icon_path = icon_path
        self._is_active = is_active
        self._perk_hash = perk_hash
        self._visible = visible

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyPerksDestinyPerkReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Perks.DestinyPerkReference of this DestinyPerksDestinyPerkReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def icon_path(self):
        """Gets the icon_path of this DestinyPerksDestinyPerkReference.

        The icon for the perk.

        :return: The icon_path of this DestinyPerksDestinyPerkReference.
        :rtype: str
        """
        return self._icon_path

    @icon_path.setter
    def icon_path(self, icon_path):
        """Sets the icon_path of this DestinyPerksDestinyPerkReference.

        The icon for the perk.

        :param icon_path: The icon_path of this DestinyPerksDestinyPerkReference.
        :type icon_path: str
        """

        self._icon_path = icon_path

    @property
    def is_active(self):
        """Gets the is_active of this DestinyPerksDestinyPerkReference.

        Whether this perk is currently active. (We may return perks that you have not actually activated yet: these represent perks that you should show in the item's tooltip, but that the user has not yet activated.)

        :return: The is_active of this DestinyPerksDestinyPerkReference.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this DestinyPerksDestinyPerkReference.

        Whether this perk is currently active. (We may return perks that you have not actually activated yet: these represent perks that you should show in the item's tooltip, but that the user has not yet activated.)

        :param is_active: The is_active of this DestinyPerksDestinyPerkReference.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def perk_hash(self):
        """Gets the perk_hash of this DestinyPerksDestinyPerkReference.

        The hash identifier for the perk, which can be used to look up DestinySandboxPerkDefinition if it exists. Be warned, perks frequently do not have user-viewable information. You should examine whether you actually found a name/description in the perk's definition before you show it to the user.

        :return: The perk_hash of this DestinyPerksDestinyPerkReference.
        :rtype: int
        """
        return self._perk_hash

    @perk_hash.setter
    def perk_hash(self, perk_hash):
        """Sets the perk_hash of this DestinyPerksDestinyPerkReference.

        The hash identifier for the perk, which can be used to look up DestinySandboxPerkDefinition if it exists. Be warned, perks frequently do not have user-viewable information. You should examine whether you actually found a name/description in the perk's definition before you show it to the user.

        :param perk_hash: The perk_hash of this DestinyPerksDestinyPerkReference.
        :type perk_hash: int
        """

        self._perk_hash = perk_hash

    @property
    def visible(self):
        """Gets the visible of this DestinyPerksDestinyPerkReference.

        Some perks provide benefits, but aren't visible in the UI. This value will let you know if this is perk should be shown in your UI.

        :return: The visible of this DestinyPerksDestinyPerkReference.
        :rtype: bool
        """
        return self._visible

    @visible.setter
    def visible(self, visible):
        """Sets the visible of this DestinyPerksDestinyPerkReference.

        Some perks provide benefits, but aren't visible in the UI. This value will let you know if this is perk should be shown in your UI.

        :param visible: The visible of this DestinyPerksDestinyPerkReference.
        :type visible: bool
        """

        self._visible = visible
