# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server import util


class DestinyDefinitionsDestinyRewardSourceDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: int=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, redacted: bool=None):
        """DestinyDefinitionsDestinyRewardSourceDefinition - a model defined in OpenAPI

        :param category: The category of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :param index: The index of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinyRewardSourceDefinition.
        """
        self.openapi_types = {
            'category': int,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'redacted': bool
        }

        self.attribute_map = {
            'category': 'category',
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'redacted': 'redacted'
        }

        self._category = category
        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyRewardSourceDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyRewardSourceDefinition of this DestinyDefinitionsDestinyRewardSourceDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this DestinyDefinitionsDestinyRewardSourceDefinition.

        Sources are grouped into categories: common ways that items are provided. I hope to see this expand in Destiny 2 once we have time to generate accurate reward source data.

        :return: The category of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :rtype: int
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this DestinyDefinitionsDestinyRewardSourceDefinition.

        Sources are grouped into categories: common ways that items are provided. I hope to see this expand in Destiny 2 once we have time to generate accurate reward source data.

        :param category: The category of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :type category: int
        """

        self._category = category

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinyRewardSourceDefinition.


        :return: The display_properties of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinyRewardSourceDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinyRewardSourceDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinyRewardSourceDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinyRewardSourceDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinyRewardSourceDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :type index: int
        """

        self._index = index

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinyRewardSourceDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinyRewardSourceDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinyRewardSourceDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
