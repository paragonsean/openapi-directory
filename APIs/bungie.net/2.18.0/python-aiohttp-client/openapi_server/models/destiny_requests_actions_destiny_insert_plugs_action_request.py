# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_requests_actions_destiny_insert_plugs_request_entry import DestinyRequestsActionsDestinyInsertPlugsRequestEntry
from openapi_server import util


class DestinyRequestsActionsDestinyInsertPlugsActionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_token: str=None, character_id: int=None, item_instance_id: int=None, membership_type: int=None, plug: DestinyRequestsActionsDestinyInsertPlugsRequestEntry=None):
        """DestinyRequestsActionsDestinyInsertPlugsActionRequest - a model defined in OpenAPI

        :param action_token: The action_token of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :param character_id: The character_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :param item_instance_id: The item_instance_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :param membership_type: The membership_type of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :param plug: The plug of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        """
        self.openapi_types = {
            'action_token': str,
            'character_id': int,
            'item_instance_id': int,
            'membership_type': int,
            'plug': DestinyRequestsActionsDestinyInsertPlugsRequestEntry
        }

        self.attribute_map = {
            'action_token': 'actionToken',
            'character_id': 'characterId',
            'item_instance_id': 'itemInstanceId',
            'membership_type': 'membershipType',
            'plug': 'plug'
        }

        self._action_token = action_token
        self._character_id = character_id
        self._item_instance_id = item_instance_id
        self._membership_type = membership_type
        self._plug = plug

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyRequestsActionsDestinyInsertPlugsActionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Requests.Actions.DestinyInsertPlugsActionRequest of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_token(self):
        """Gets the action_token of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.

        Action token provided by the AwaGetActionToken API call.

        :return: The action_token of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :rtype: str
        """
        return self._action_token

    @action_token.setter
    def action_token(self, action_token):
        """Sets the action_token of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.

        Action token provided by the AwaGetActionToken API call.

        :param action_token: The action_token of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :type action_token: str
        """

        self._action_token = action_token

    @property
    def character_id(self):
        """Gets the character_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.


        :return: The character_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :rtype: int
        """
        return self._character_id

    @character_id.setter
    def character_id(self, character_id):
        """Sets the character_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.


        :param character_id: The character_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :type character_id: int
        """

        self._character_id = character_id

    @property
    def item_instance_id(self):
        """Gets the item_instance_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.

        The instance ID of the item having a plug inserted. Only instanced items can have sockets.

        :return: The item_instance_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :rtype: int
        """
        return self._item_instance_id

    @item_instance_id.setter
    def item_instance_id(self, item_instance_id):
        """Sets the item_instance_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.

        The instance ID of the item having a plug inserted. Only instanced items can have sockets.

        :param item_instance_id: The item_instance_id of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :type item_instance_id: int
        """

        self._item_instance_id = item_instance_id

    @property
    def membership_type(self):
        """Gets the membership_type of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.


        :return: The membership_type of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :rtype: int
        """
        return self._membership_type

    @membership_type.setter
    def membership_type(self, membership_type):
        """Sets the membership_type of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.


        :param membership_type: The membership_type of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :type membership_type: int
        """

        self._membership_type = membership_type

    @property
    def plug(self):
        """Gets the plug of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.

        The plugs being inserted.

        :return: The plug of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :rtype: DestinyRequestsActionsDestinyInsertPlugsRequestEntry
        """
        return self._plug

    @plug.setter
    def plug(self, plug):
        """Sets the plug of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.

        The plugs being inserted.

        :param plug: The plug of this DestinyRequestsActionsDestinyInsertPlugsActionRequest.
        :type plug: DestinyRequestsActionsDestinyInsertPlugsRequestEntry
        """

        self._plug = plug
