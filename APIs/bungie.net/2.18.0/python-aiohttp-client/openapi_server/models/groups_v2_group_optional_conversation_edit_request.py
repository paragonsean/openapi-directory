# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupsV2GroupOptionalConversationEditRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chat_enabled: bool=None, chat_name: str=None, chat_security: int=None):
        """GroupsV2GroupOptionalConversationEditRequest - a model defined in OpenAPI

        :param chat_enabled: The chat_enabled of this GroupsV2GroupOptionalConversationEditRequest.
        :param chat_name: The chat_name of this GroupsV2GroupOptionalConversationEditRequest.
        :param chat_security: The chat_security of this GroupsV2GroupOptionalConversationEditRequest.
        """
        self.openapi_types = {
            'chat_enabled': bool,
            'chat_name': str,
            'chat_security': int
        }

        self.attribute_map = {
            'chat_enabled': 'chatEnabled',
            'chat_name': 'chatName',
            'chat_security': 'chatSecurity'
        }

        self._chat_enabled = chat_enabled
        self._chat_name = chat_name
        self._chat_security = chat_security

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupsV2GroupOptionalConversationEditRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupsV2.GroupOptionalConversationEditRequest of this GroupsV2GroupOptionalConversationEditRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chat_enabled(self):
        """Gets the chat_enabled of this GroupsV2GroupOptionalConversationEditRequest.


        :return: The chat_enabled of this GroupsV2GroupOptionalConversationEditRequest.
        :rtype: bool
        """
        return self._chat_enabled

    @chat_enabled.setter
    def chat_enabled(self, chat_enabled):
        """Sets the chat_enabled of this GroupsV2GroupOptionalConversationEditRequest.


        :param chat_enabled: The chat_enabled of this GroupsV2GroupOptionalConversationEditRequest.
        :type chat_enabled: bool
        """

        self._chat_enabled = chat_enabled

    @property
    def chat_name(self):
        """Gets the chat_name of this GroupsV2GroupOptionalConversationEditRequest.


        :return: The chat_name of this GroupsV2GroupOptionalConversationEditRequest.
        :rtype: str
        """
        return self._chat_name

    @chat_name.setter
    def chat_name(self, chat_name):
        """Sets the chat_name of this GroupsV2GroupOptionalConversationEditRequest.


        :param chat_name: The chat_name of this GroupsV2GroupOptionalConversationEditRequest.
        :type chat_name: str
        """

        self._chat_name = chat_name

    @property
    def chat_security(self):
        """Gets the chat_security of this GroupsV2GroupOptionalConversationEditRequest.


        :return: The chat_security of this GroupsV2GroupOptionalConversationEditRequest.
        :rtype: int
        """
        return self._chat_security

    @chat_security.setter
    def chat_security(self, chat_security):
        """Sets the chat_security of this GroupsV2GroupOptionalConversationEditRequest.


        :param chat_security: The chat_security of this GroupsV2GroupOptionalConversationEditRequest.
        :type chat_security: int
        """
        allowed_values = [0, 1]  # noqa: E501
        if chat_security not in allowed_values:
            raise ValueError(
                "Invalid value for `chat_security` ({0}), must be one of {1}"
                .format(chat_security, allowed_values)
            )

        self._chat_security = chat_security
