# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_destiny_item_quantity import DestinyDestinyItemQuantity
from openapi_server import util


class DestinyDefinitionsDestinyProgressionStepDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_effect_type: int=None, icon: str=None, progress_total: int=None, reward_items: List[DestinyDestinyItemQuantity]=None, step_name: str=None):
        """DestinyDefinitionsDestinyProgressionStepDefinition - a model defined in OpenAPI

        :param display_effect_type: The display_effect_type of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :param icon: The icon of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :param progress_total: The progress_total of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :param reward_items: The reward_items of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :param step_name: The step_name of this DestinyDefinitionsDestinyProgressionStepDefinition.
        """
        self.openapi_types = {
            'display_effect_type': int,
            'icon': str,
            'progress_total': int,
            'reward_items': List[DestinyDestinyItemQuantity],
            'step_name': str
        }

        self.attribute_map = {
            'display_effect_type': 'displayEffectType',
            'icon': 'icon',
            'progress_total': 'progressTotal',
            'reward_items': 'rewardItems',
            'step_name': 'stepName'
        }

        self._display_effect_type = display_effect_type
        self._icon = icon
        self._progress_total = progress_total
        self._reward_items = reward_items
        self._step_name = step_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyProgressionStepDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyProgressionStepDefinition of this DestinyDefinitionsDestinyProgressionStepDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_effect_type(self):
        """Gets the display_effect_type of this DestinyDefinitionsDestinyProgressionStepDefinition.

        This appears to be, when you \"level up\", whether a visual effect will display and on what entity. See DestinyProgressionStepDisplayEffect for slightly more info.

        :return: The display_effect_type of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :rtype: int
        """
        return self._display_effect_type

    @display_effect_type.setter
    def display_effect_type(self, display_effect_type):
        """Sets the display_effect_type of this DestinyDefinitionsDestinyProgressionStepDefinition.

        This appears to be, when you \"level up\", whether a visual effect will display and on what entity. See DestinyProgressionStepDisplayEffect for slightly more info.

        :param display_effect_type: The display_effect_type of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :type display_effect_type: int
        """

        self._display_effect_type = display_effect_type

    @property
    def icon(self):
        """Gets the icon of this DestinyDefinitionsDestinyProgressionStepDefinition.

        If this progression step has a specific icon related to it, this is the icon to show.

        :return: The icon of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this DestinyDefinitionsDestinyProgressionStepDefinition.

        If this progression step has a specific icon related to it, this is the icon to show.

        :param icon: The icon of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :type icon: str
        """

        self._icon = icon

    @property
    def progress_total(self):
        """Gets the progress_total of this DestinyDefinitionsDestinyProgressionStepDefinition.

        The total amount of progression points/\"experience\" you will need to initially reach this step. If this is the last step and the progression is repeating indefinitely (DestinyProgressionDefinition.repeatLastStep), this will also be the progress needed to level it up further by repeating this step again.

        :return: The progress_total of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :rtype: int
        """
        return self._progress_total

    @progress_total.setter
    def progress_total(self, progress_total):
        """Sets the progress_total of this DestinyDefinitionsDestinyProgressionStepDefinition.

        The total amount of progression points/\"experience\" you will need to initially reach this step. If this is the last step and the progression is repeating indefinitely (DestinyProgressionDefinition.repeatLastStep), this will also be the progress needed to level it up further by repeating this step again.

        :param progress_total: The progress_total of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :type progress_total: int
        """

        self._progress_total = progress_total

    @property
    def reward_items(self):
        """Gets the reward_items of this DestinyDefinitionsDestinyProgressionStepDefinition.

        A listing of items rewarded as a result of reaching this level.

        :return: The reward_items of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :rtype: List[DestinyDestinyItemQuantity]
        """
        return self._reward_items

    @reward_items.setter
    def reward_items(self, reward_items):
        """Sets the reward_items of this DestinyDefinitionsDestinyProgressionStepDefinition.

        A listing of items rewarded as a result of reaching this level.

        :param reward_items: The reward_items of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :type reward_items: List[DestinyDestinyItemQuantity]
        """

        self._reward_items = reward_items

    @property
    def step_name(self):
        """Gets the step_name of this DestinyDefinitionsDestinyProgressionStepDefinition.

        Very rarely, Progressions will have localized text describing the Level of the progression. This will be that localized text, if it exists. Otherwise, the standard appears to be to simply show the level numerically.

        :return: The step_name of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :rtype: str
        """
        return self._step_name

    @step_name.setter
    def step_name(self, step_name):
        """Sets the step_name of this DestinyDefinitionsDestinyProgressionStepDefinition.

        Very rarely, Progressions will have localized text describing the Level of the progression. This will be that localized text, if it exists. Otherwise, the standard appears to be to simply show the level numerically.

        :param step_name: The step_name of this DestinyDefinitionsDestinyProgressionStepDefinition.
        :type step_name: str
        """

        self._step_name = step_name
