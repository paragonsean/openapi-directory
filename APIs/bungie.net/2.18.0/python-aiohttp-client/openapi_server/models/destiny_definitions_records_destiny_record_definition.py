# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_presentation_destiny_presentation_child_block import DestinyDefinitionsPresentationDestinyPresentationChildBlock
from openapi_server.models.destiny_definitions_presentation_destiny_presentation_node_requirements_block import DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock
from openapi_server.models.destiny_definitions_records_destiny_record_completion_block import DestinyDefinitionsRecordsDestinyRecordCompletionBlock
from openapi_server.models.destiny_definitions_records_destiny_record_expiration_block import DestinyDefinitionsRecordsDestinyRecordExpirationBlock
from openapi_server.models.destiny_definitions_records_destiny_record_interval_block import DestinyDefinitionsRecordsDestinyRecordIntervalBlock
from openapi_server.models.destiny_definitions_records_destiny_record_title_block import DestinyDefinitionsRecordsDestinyRecordTitleBlock
from openapi_server.models.destiny_definitions_records_schema_record_state_block import DestinyDefinitionsRecordsSchemaRecordStateBlock
from openapi_server.models.destiny_destiny_item_quantity import DestinyDestinyItemQuantity
from openapi_server import util


class DestinyDefinitionsRecordsDestinyRecordDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completion_info: DestinyDefinitionsRecordsDestinyRecordCompletionBlock=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, expiration_info: DestinyDefinitionsRecordsDestinyRecordExpirationBlock=None, for_title_gilding: bool=None, hash: int=None, index: int=None, interval_info: DestinyDefinitionsRecordsDestinyRecordIntervalBlock=None, lore_hash: int=None, objective_hashes: List[int]=None, parent_node_hashes: List[int]=None, presentation_info: DestinyDefinitionsPresentationDestinyPresentationChildBlock=None, presentation_node_type: int=None, record_value_style: int=None, redacted: bool=None, requirements: DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock=None, reward_items: List[DestinyDestinyItemQuantity]=None, scope: int=None, should_show_large_icons: bool=None, state_info: DestinyDefinitionsRecordsSchemaRecordStateBlock=None, title_info: DestinyDefinitionsRecordsDestinyRecordTitleBlock=None, trait_hashes: List[int]=None, trait_ids: List[str]=None):
        """DestinyDefinitionsRecordsDestinyRecordDefinition - a model defined in OpenAPI

        :param completion_info: The completion_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param expiration_info: The expiration_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param for_title_gilding: The for_title_gilding of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param hash: The hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param index: The index of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param interval_info: The interval_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param lore_hash: The lore_hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param objective_hashes: The objective_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param parent_node_hashes: The parent_node_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param presentation_info: The presentation_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param presentation_node_type: The presentation_node_type of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param record_value_style: The record_value_style of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param redacted: The redacted of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param requirements: The requirements of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param reward_items: The reward_items of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param scope: The scope of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param should_show_large_icons: The should_show_large_icons of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param state_info: The state_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param title_info: The title_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param trait_hashes: The trait_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :param trait_ids: The trait_ids of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        """
        self.openapi_types = {
            'completion_info': DestinyDefinitionsRecordsDestinyRecordCompletionBlock,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'expiration_info': DestinyDefinitionsRecordsDestinyRecordExpirationBlock,
            'for_title_gilding': bool,
            'hash': int,
            'index': int,
            'interval_info': DestinyDefinitionsRecordsDestinyRecordIntervalBlock,
            'lore_hash': int,
            'objective_hashes': List[int],
            'parent_node_hashes': List[int],
            'presentation_info': DestinyDefinitionsPresentationDestinyPresentationChildBlock,
            'presentation_node_type': int,
            'record_value_style': int,
            'redacted': bool,
            'requirements': DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock,
            'reward_items': List[DestinyDestinyItemQuantity],
            'scope': int,
            'should_show_large_icons': bool,
            'state_info': DestinyDefinitionsRecordsSchemaRecordStateBlock,
            'title_info': DestinyDefinitionsRecordsDestinyRecordTitleBlock,
            'trait_hashes': List[int],
            'trait_ids': List[str]
        }

        self.attribute_map = {
            'completion_info': 'completionInfo',
            'display_properties': 'displayProperties',
            'expiration_info': 'expirationInfo',
            'for_title_gilding': 'forTitleGilding',
            'hash': 'hash',
            'index': 'index',
            'interval_info': 'intervalInfo',
            'lore_hash': 'loreHash',
            'objective_hashes': 'objectiveHashes',
            'parent_node_hashes': 'parentNodeHashes',
            'presentation_info': 'presentationInfo',
            'presentation_node_type': 'presentationNodeType',
            'record_value_style': 'recordValueStyle',
            'redacted': 'redacted',
            'requirements': 'requirements',
            'reward_items': 'rewardItems',
            'scope': 'scope',
            'should_show_large_icons': 'shouldShowLargeIcons',
            'state_info': 'stateInfo',
            'title_info': 'titleInfo',
            'trait_hashes': 'traitHashes',
            'trait_ids': 'traitIds'
        }

        self._completion_info = completion_info
        self._display_properties = display_properties
        self._expiration_info = expiration_info
        self._for_title_gilding = for_title_gilding
        self._hash = hash
        self._index = index
        self._interval_info = interval_info
        self._lore_hash = lore_hash
        self._objective_hashes = objective_hashes
        self._parent_node_hashes = parent_node_hashes
        self._presentation_info = presentation_info
        self._presentation_node_type = presentation_node_type
        self._record_value_style = record_value_style
        self._redacted = redacted
        self._requirements = requirements
        self._reward_items = reward_items
        self._scope = scope
        self._should_show_large_icons = should_show_large_icons
        self._state_info = state_info
        self._title_info = title_info
        self._trait_hashes = trait_hashes
        self._trait_ids = trait_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsRecordsDestinyRecordDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Records.DestinyRecordDefinition of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completion_info(self):
        """Gets the completion_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The completion_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: DestinyDefinitionsRecordsDestinyRecordCompletionBlock
        """
        return self._completion_info

    @completion_info.setter
    def completion_info(self, completion_info):
        """Sets the completion_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param completion_info: The completion_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type completion_info: DestinyDefinitionsRecordsDestinyRecordCompletionBlock
        """

        self._completion_info = completion_info

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The display_properties of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def expiration_info(self):
        """Gets the expiration_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The expiration_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: DestinyDefinitionsRecordsDestinyRecordExpirationBlock
        """
        return self._expiration_info

    @expiration_info.setter
    def expiration_info(self, expiration_info):
        """Sets the expiration_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param expiration_info: The expiration_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type expiration_info: DestinyDefinitionsRecordsDestinyRecordExpirationBlock
        """

        self._expiration_info = expiration_info

    @property
    def for_title_gilding(self):
        """Gets the for_title_gilding of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The for_title_gilding of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: bool
        """
        return self._for_title_gilding

    @for_title_gilding.setter
    def for_title_gilding(self, for_title_gilding):
        """Sets the for_title_gilding of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param for_title_gilding: The for_title_gilding of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type for_title_gilding: bool
        """

        self._for_title_gilding = for_title_gilding

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type index: int
        """

        self._index = index

    @property
    def interval_info(self):
        """Gets the interval_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        Some records have multiple 'interval' objectives, and the record may be claimed at each completed interval

        :return: The interval_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: DestinyDefinitionsRecordsDestinyRecordIntervalBlock
        """
        return self._interval_info

    @interval_info.setter
    def interval_info(self, interval_info):
        """Sets the interval_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        Some records have multiple 'interval' objectives, and the record may be claimed at each completed interval

        :param interval_info: The interval_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type interval_info: DestinyDefinitionsRecordsDestinyRecordIntervalBlock
        """

        self._interval_info = interval_info

    @property
    def lore_hash(self):
        """Gets the lore_hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The lore_hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: int
        """
        return self._lore_hash

    @lore_hash.setter
    def lore_hash(self, lore_hash):
        """Sets the lore_hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param lore_hash: The lore_hash of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type lore_hash: int
        """

        self._lore_hash = lore_hash

    @property
    def objective_hashes(self):
        """Gets the objective_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The objective_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: List[int]
        """
        return self._objective_hashes

    @objective_hashes.setter
    def objective_hashes(self, objective_hashes):
        """Sets the objective_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param objective_hashes: The objective_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type objective_hashes: List[int]
        """

        self._objective_hashes = objective_hashes

    @property
    def parent_node_hashes(self):
        """Gets the parent_node_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.

        :return: The parent_node_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: List[int]
        """
        return self._parent_node_hashes

    @parent_node_hashes.setter
    def parent_node_hashes(self, parent_node_hashes):
        """Sets the parent_node_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.

        :param parent_node_hashes: The parent_node_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type parent_node_hashes: List[int]
        """

        self._parent_node_hashes = parent_node_hashes

    @property
    def presentation_info(self):
        """Gets the presentation_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The presentation_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: DestinyDefinitionsPresentationDestinyPresentationChildBlock
        """
        return self._presentation_info

    @presentation_info.setter
    def presentation_info(self, presentation_info):
        """Sets the presentation_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param presentation_info: The presentation_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type presentation_info: DestinyDefinitionsPresentationDestinyPresentationChildBlock
        """

        self._presentation_info = presentation_info

    @property
    def presentation_node_type(self):
        """Gets the presentation_node_type of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The presentation_node_type of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: int
        """
        return self._presentation_node_type

    @presentation_node_type.setter
    def presentation_node_type(self, presentation_node_type):
        """Sets the presentation_node_type of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param presentation_node_type: The presentation_node_type of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type presentation_node_type: int
        """

        self._presentation_node_type = presentation_node_type

    @property
    def record_value_style(self):
        """Gets the record_value_style of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The record_value_style of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: int
        """
        return self._record_value_style

    @record_value_style.setter
    def record_value_style(self, record_value_style):
        """Sets the record_value_style of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param record_value_style: The record_value_style of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type record_value_style: int
        """

        self._record_value_style = record_value_style

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def requirements(self):
        """Gets the requirements of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The requirements of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock
        """
        return self._requirements

    @requirements.setter
    def requirements(self, requirements):
        """Sets the requirements of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param requirements: The requirements of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type requirements: DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock
        """

        self._requirements = requirements

    @property
    def reward_items(self):
        """Gets the reward_items of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        If there is any publicly available information about rewards earned for achieving this record, this is the list of those items.   However, note that some records intentionally have \"hidden\" rewards. These will not be returned in this list.

        :return: The reward_items of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: List[DestinyDestinyItemQuantity]
        """
        return self._reward_items

    @reward_items.setter
    def reward_items(self, reward_items):
        """Sets the reward_items of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        If there is any publicly available information about rewards earned for achieving this record, this is the list of those items.   However, note that some records intentionally have \"hidden\" rewards. These will not be returned in this list.

        :param reward_items: The reward_items of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type reward_items: List[DestinyDestinyItemQuantity]
        """

        self._reward_items = reward_items

    @property
    def scope(self):
        """Gets the scope of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        Indicates whether this Record's state is determined on a per-character or on an account-wide basis.

        :return: The scope of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: int
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        Indicates whether this Record's state is determined on a per-character or on an account-wide basis.

        :param scope: The scope of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type scope: int
        """

        self._scope = scope

    @property
    def should_show_large_icons(self):
        """Gets the should_show_large_icons of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        A hint to show a large icon for a reward

        :return: The should_show_large_icons of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: bool
        """
        return self._should_show_large_icons

    @should_show_large_icons.setter
    def should_show_large_icons(self, should_show_large_icons):
        """Sets the should_show_large_icons of this DestinyDefinitionsRecordsDestinyRecordDefinition.

        A hint to show a large icon for a reward

        :param should_show_large_icons: The should_show_large_icons of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type should_show_large_icons: bool
        """

        self._should_show_large_icons = should_show_large_icons

    @property
    def state_info(self):
        """Gets the state_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The state_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: DestinyDefinitionsRecordsSchemaRecordStateBlock
        """
        return self._state_info

    @state_info.setter
    def state_info(self, state_info):
        """Sets the state_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param state_info: The state_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type state_info: DestinyDefinitionsRecordsSchemaRecordStateBlock
        """

        self._state_info = state_info

    @property
    def title_info(self):
        """Gets the title_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The title_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: DestinyDefinitionsRecordsDestinyRecordTitleBlock
        """
        return self._title_info

    @title_info.setter
    def title_info(self, title_info):
        """Sets the title_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param title_info: The title_info of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type title_info: DestinyDefinitionsRecordsDestinyRecordTitleBlock
        """

        self._title_info = title_info

    @property
    def trait_hashes(self):
        """Gets the trait_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The trait_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: List[int]
        """
        return self._trait_hashes

    @trait_hashes.setter
    def trait_hashes(self, trait_hashes):
        """Sets the trait_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param trait_hashes: The trait_hashes of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type trait_hashes: List[int]
        """

        self._trait_hashes = trait_hashes

    @property
    def trait_ids(self):
        """Gets the trait_ids of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :return: The trait_ids of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :rtype: List[str]
        """
        return self._trait_ids

    @trait_ids.setter
    def trait_ids(self, trait_ids):
        """Sets the trait_ids of this DestinyDefinitionsRecordsDestinyRecordDefinition.


        :param trait_ids: The trait_ids of this DestinyDefinitionsRecordsDestinyRecordDefinition.
        :type trait_ids: List[str]
        """

        self._trait_ids = trait_ids
