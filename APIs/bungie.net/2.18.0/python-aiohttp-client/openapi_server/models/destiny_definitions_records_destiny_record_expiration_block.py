# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsRecordsDestinyRecordExpirationBlock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, has_expiration: bool=None, icon: str=None):
        """DestinyDefinitionsRecordsDestinyRecordExpirationBlock - a model defined in OpenAPI

        :param description: The description of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        :param has_expiration: The has_expiration of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        :param icon: The icon of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        """
        self.openapi_types = {
            'description': str,
            'has_expiration': bool,
            'icon': str
        }

        self.attribute_map = {
            'description': 'description',
            'has_expiration': 'hasExpiration',
            'icon': 'icon'
        }

        self._description = description
        self._has_expiration = has_expiration
        self._icon = icon

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsRecordsDestinyRecordExpirationBlock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Records.DestinyRecordExpirationBlock of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.


        :return: The description of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.


        :param description: The description of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        :type description: str
        """

        self._description = description

    @property
    def has_expiration(self):
        """Gets the has_expiration of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.


        :return: The has_expiration of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        :rtype: bool
        """
        return self._has_expiration

    @has_expiration.setter
    def has_expiration(self, has_expiration):
        """Sets the has_expiration of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.


        :param has_expiration: The has_expiration of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        :type has_expiration: bool
        """

        self._has_expiration = has_expiration

    @property
    def icon(self):
        """Gets the icon of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.


        :return: The icon of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.


        :param icon: The icon of this DestinyDefinitionsRecordsDestinyRecordExpirationBlock.
        :type icon: str
        """

        self._icon = icon
