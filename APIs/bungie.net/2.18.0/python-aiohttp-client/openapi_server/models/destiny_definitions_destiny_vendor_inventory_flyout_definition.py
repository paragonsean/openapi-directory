# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_destiny_vendor_inventory_flyout_bucket_definition import DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition
from openapi_server import util


class DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buckets: List[DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition]=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, equipment_slot_hash: int=None, flyout_id: int=None, locked_description: str=None, suppress_newness: bool=None):
        """DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition - a model defined in OpenAPI

        :param buckets: The buckets of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :param equipment_slot_hash: The equipment_slot_hash of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :param flyout_id: The flyout_id of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :param locked_description: The locked_description of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :param suppress_newness: The suppress_newness of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        """
        self.openapi_types = {
            'buckets': List[DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition],
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'equipment_slot_hash': int,
            'flyout_id': int,
            'locked_description': str,
            'suppress_newness': bool
        }

        self.attribute_map = {
            'buckets': 'buckets',
            'display_properties': 'displayProperties',
            'equipment_slot_hash': 'equipmentSlotHash',
            'flyout_id': 'flyoutId',
            'locked_description': 'lockedDescription',
            'suppress_newness': 'suppressNewness'
        }

        self._buckets = buckets
        self._display_properties = display_properties
        self._equipment_slot_hash = equipment_slot_hash
        self._flyout_id = flyout_id
        self._locked_description = locked_description
        self._suppress_newness = suppress_newness

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buckets(self):
        """Gets the buckets of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        A list of inventory buckets and other metadata to show on the screen.

        :return: The buckets of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :rtype: List[DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition]
        """
        return self._buckets

    @buckets.setter
    def buckets(self, buckets):
        """Sets the buckets of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        A list of inventory buckets and other metadata to show on the screen.

        :param buckets: The buckets of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :type buckets: List[DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition]
        """

        self._buckets = buckets

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        The title and other common properties of the flyout.

        :return: The display_properties of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        The title and other common properties of the flyout.

        :param display_properties: The display_properties of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def equipment_slot_hash(self):
        """Gets the equipment_slot_hash of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        If this flyout is meant to show you the contents of the player's equipment slot, this is the slot to show.

        :return: The equipment_slot_hash of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :rtype: int
        """
        return self._equipment_slot_hash

    @equipment_slot_hash.setter
    def equipment_slot_hash(self, equipment_slot_hash):
        """Sets the equipment_slot_hash of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        If this flyout is meant to show you the contents of the player's equipment slot, this is the slot to show.

        :param equipment_slot_hash: The equipment_slot_hash of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :type equipment_slot_hash: int
        """

        self._equipment_slot_hash = equipment_slot_hash

    @property
    def flyout_id(self):
        """Gets the flyout_id of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        An identifier for the flyout, in case anything else needs to refer to them.

        :return: The flyout_id of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :rtype: int
        """
        return self._flyout_id

    @flyout_id.setter
    def flyout_id(self, flyout_id):
        """Sets the flyout_id of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        An identifier for the flyout, in case anything else needs to refer to them.

        :param flyout_id: The flyout_id of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :type flyout_id: int
        """

        self._flyout_id = flyout_id

    @property
    def locked_description(self):
        """Gets the locked_description of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        If the flyout is locked, this is the reason why.

        :return: The locked_description of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :rtype: str
        """
        return self._locked_description

    @locked_description.setter
    def locked_description(self, locked_description):
        """Sets the locked_description of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        If the flyout is locked, this is the reason why.

        :param locked_description: The locked_description of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :type locked_description: str
        """

        self._locked_description = locked_description

    @property
    def suppress_newness(self):
        """Gets the suppress_newness of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        If this is true, don't show any of the glistening \"this is a new item\" UI elements, like we show on the inventory items themselves in in-game UI.

        :return: The suppress_newness of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :rtype: bool
        """
        return self._suppress_newness

    @suppress_newness.setter
    def suppress_newness(self, suppress_newness):
        """Sets the suppress_newness of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.

        If this is true, don't show any of the glistening \"this is a new item\" UI elements, like we show on the inventory items themselves in in-game UI.

        :param suppress_newness: The suppress_newness of this DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.
        :type suppress_newness: bool
        """

        self._suppress_newness = suppress_newness
