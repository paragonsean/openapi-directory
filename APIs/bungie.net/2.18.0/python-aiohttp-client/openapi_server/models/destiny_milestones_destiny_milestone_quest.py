# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_challenges_destiny_challenge_status import DestinyChallengesDestinyChallengeStatus
from openapi_server.models.destiny_milestones_destiny_milestone_activity import DestinyMilestonesDestinyMilestoneActivity
from openapi_server.models.destiny_quests_destiny_quest_status import DestinyQuestsDestinyQuestStatus
from openapi_server import util


class DestinyMilestonesDestinyMilestoneQuest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity: DestinyMilestonesDestinyMilestoneActivity=None, challenges: List[DestinyChallengesDestinyChallengeStatus]=None, quest_item_hash: int=None, status: DestinyQuestsDestinyQuestStatus=None):
        """DestinyMilestonesDestinyMilestoneQuest - a model defined in OpenAPI

        :param activity: The activity of this DestinyMilestonesDestinyMilestoneQuest.
        :param challenges: The challenges of this DestinyMilestonesDestinyMilestoneQuest.
        :param quest_item_hash: The quest_item_hash of this DestinyMilestonesDestinyMilestoneQuest.
        :param status: The status of this DestinyMilestonesDestinyMilestoneQuest.
        """
        self.openapi_types = {
            'activity': DestinyMilestonesDestinyMilestoneActivity,
            'challenges': List[DestinyChallengesDestinyChallengeStatus],
            'quest_item_hash': int,
            'status': DestinyQuestsDestinyQuestStatus
        }

        self.attribute_map = {
            'activity': 'activity',
            'challenges': 'challenges',
            'quest_item_hash': 'questItemHash',
            'status': 'status'
        }

        self._activity = activity
        self._challenges = challenges
        self._quest_item_hash = quest_item_hash
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyMilestonesDestinyMilestoneQuest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Milestones.DestinyMilestoneQuest of this DestinyMilestonesDestinyMilestoneQuest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity(self):
        """Gets the activity of this DestinyMilestonesDestinyMilestoneQuest.

        *IF* the Milestone has an active Activity that can give you greater details about what you need to do, it will be returned here. Remember to associate this with the DestinyMilestoneDefinition's activities to get details about the activity, including what specific quest it is related to if you have multiple quests to choose from.

        :return: The activity of this DestinyMilestonesDestinyMilestoneQuest.
        :rtype: DestinyMilestonesDestinyMilestoneActivity
        """
        return self._activity

    @activity.setter
    def activity(self, activity):
        """Sets the activity of this DestinyMilestonesDestinyMilestoneQuest.

        *IF* the Milestone has an active Activity that can give you greater details about what you need to do, it will be returned here. Remember to associate this with the DestinyMilestoneDefinition's activities to get details about the activity, including what specific quest it is related to if you have multiple quests to choose from.

        :param activity: The activity of this DestinyMilestonesDestinyMilestoneQuest.
        :type activity: DestinyMilestonesDestinyMilestoneActivity
        """

        self._activity = activity

    @property
    def challenges(self):
        """Gets the challenges of this DestinyMilestonesDestinyMilestoneQuest.

        The activities referred to by this quest can have many associated challenges. They are all contained here, with activityHashes so that you can associate them with the specific activity variants in which they can be found. In retrospect, I probably should have put these under the specific Activity Variants, but it's too late to change it now. Theoretically, a quest without Activities can still have Challenges, which is why this is on a higher level than activity/variants, but it probably should have been in both places. That may come as a later revision.

        :return: The challenges of this DestinyMilestonesDestinyMilestoneQuest.
        :rtype: List[DestinyChallengesDestinyChallengeStatus]
        """
        return self._challenges

    @challenges.setter
    def challenges(self, challenges):
        """Sets the challenges of this DestinyMilestonesDestinyMilestoneQuest.

        The activities referred to by this quest can have many associated challenges. They are all contained here, with activityHashes so that you can associate them with the specific activity variants in which they can be found. In retrospect, I probably should have put these under the specific Activity Variants, but it's too late to change it now. Theoretically, a quest without Activities can still have Challenges, which is why this is on a higher level than activity/variants, but it probably should have been in both places. That may come as a later revision.

        :param challenges: The challenges of this DestinyMilestonesDestinyMilestoneQuest.
        :type challenges: List[DestinyChallengesDestinyChallengeStatus]
        """

        self._challenges = challenges

    @property
    def quest_item_hash(self):
        """Gets the quest_item_hash of this DestinyMilestonesDestinyMilestoneQuest.

        Quests are defined as Items in content. As such, this is the hash identifier of the DestinyInventoryItemDefinition that represents this quest. It will have pointers to all of the steps in the quest, and display information for the quest (title, description, icon etc) Individual steps will be referred to in the Quest item's DestinyInventoryItemDefinition.setData property, and themselves are Items with their own renderable data.

        :return: The quest_item_hash of this DestinyMilestonesDestinyMilestoneQuest.
        :rtype: int
        """
        return self._quest_item_hash

    @quest_item_hash.setter
    def quest_item_hash(self, quest_item_hash):
        """Sets the quest_item_hash of this DestinyMilestonesDestinyMilestoneQuest.

        Quests are defined as Items in content. As such, this is the hash identifier of the DestinyInventoryItemDefinition that represents this quest. It will have pointers to all of the steps in the quest, and display information for the quest (title, description, icon etc) Individual steps will be referred to in the Quest item's DestinyInventoryItemDefinition.setData property, and themselves are Items with their own renderable data.

        :param quest_item_hash: The quest_item_hash of this DestinyMilestonesDestinyMilestoneQuest.
        :type quest_item_hash: int
        """

        self._quest_item_hash = quest_item_hash

    @property
    def status(self):
        """Gets the status of this DestinyMilestonesDestinyMilestoneQuest.

        The current status of the quest for the character making the request.

        :return: The status of this DestinyMilestonesDestinyMilestoneQuest.
        :rtype: DestinyQuestsDestinyQuestStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DestinyMilestonesDestinyMilestoneQuest.

        The current status of the quest for the character making the request.

        :param status: The status of this DestinyMilestonesDestinyMilestoneQuest.
        :type status: DestinyQuestsDestinyQuestStatus
        """

        self._status = status
