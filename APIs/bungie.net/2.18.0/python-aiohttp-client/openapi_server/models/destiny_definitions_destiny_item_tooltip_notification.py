# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDestinyItemTooltipNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_string: str=None, display_style: str=None):
        """DestinyDefinitionsDestinyItemTooltipNotification - a model defined in OpenAPI

        :param display_string: The display_string of this DestinyDefinitionsDestinyItemTooltipNotification.
        :param display_style: The display_style of this DestinyDefinitionsDestinyItemTooltipNotification.
        """
        self.openapi_types = {
            'display_string': str,
            'display_style': str
        }

        self.attribute_map = {
            'display_string': 'displayString',
            'display_style': 'displayStyle'
        }

        self._display_string = display_string
        self._display_style = display_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyItemTooltipNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyItemTooltipNotification of this DestinyDefinitionsDestinyItemTooltipNotification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_string(self):
        """Gets the display_string of this DestinyDefinitionsDestinyItemTooltipNotification.


        :return: The display_string of this DestinyDefinitionsDestinyItemTooltipNotification.
        :rtype: str
        """
        return self._display_string

    @display_string.setter
    def display_string(self, display_string):
        """Sets the display_string of this DestinyDefinitionsDestinyItemTooltipNotification.


        :param display_string: The display_string of this DestinyDefinitionsDestinyItemTooltipNotification.
        :type display_string: str
        """

        self._display_string = display_string

    @property
    def display_style(self):
        """Gets the display_style of this DestinyDefinitionsDestinyItemTooltipNotification.


        :return: The display_style of this DestinyDefinitionsDestinyItemTooltipNotification.
        :rtype: str
        """
        return self._display_style

    @display_style.setter
    def display_style(self, display_style):
        """Sets the display_style of this DestinyDefinitionsDestinyItemTooltipNotification.


        :param display_style: The display_style of this DestinyDefinitionsDestinyItemTooltipNotification.
        :type display_style: str
        """

        self._display_style = display_style
