# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyAdvancedAwaUserResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, correlation_id: str=None, nonce: List[str]=None, selection: int=None):
        """DestinyAdvancedAwaUserResponse - a model defined in OpenAPI

        :param correlation_id: The correlation_id of this DestinyAdvancedAwaUserResponse.
        :param nonce: The nonce of this DestinyAdvancedAwaUserResponse.
        :param selection: The selection of this DestinyAdvancedAwaUserResponse.
        """
        self.openapi_types = {
            'correlation_id': str,
            'nonce': List[str],
            'selection': int
        }

        self.attribute_map = {
            'correlation_id': 'correlationId',
            'nonce': 'nonce',
            'selection': 'selection'
        }

        self._correlation_id = correlation_id
        self._nonce = nonce
        self._selection = selection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyAdvancedAwaUserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Advanced.AwaUserResponse of this DestinyAdvancedAwaUserResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def correlation_id(self):
        """Gets the correlation_id of this DestinyAdvancedAwaUserResponse.

        Correlation ID of the request

        :return: The correlation_id of this DestinyAdvancedAwaUserResponse.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """Sets the correlation_id of this DestinyAdvancedAwaUserResponse.

        Correlation ID of the request

        :param correlation_id: The correlation_id of this DestinyAdvancedAwaUserResponse.
        :type correlation_id: str
        """

        self._correlation_id = correlation_id

    @property
    def nonce(self):
        """Gets the nonce of this DestinyAdvancedAwaUserResponse.

        Secret nonce received via the PUSH notification.

        :return: The nonce of this DestinyAdvancedAwaUserResponse.
        :rtype: List[str]
        """
        return self._nonce

    @nonce.setter
    def nonce(self, nonce):
        """Sets the nonce of this DestinyAdvancedAwaUserResponse.

        Secret nonce received via the PUSH notification.

        :param nonce: The nonce of this DestinyAdvancedAwaUserResponse.
        :type nonce: List[str]
        """

        self._nonce = nonce

    @property
    def selection(self):
        """Gets the selection of this DestinyAdvancedAwaUserResponse.

        Indication of the selection the user has made (Approving or rejecting the action)

        :return: The selection of this DestinyAdvancedAwaUserResponse.
        :rtype: int
        """
        return self._selection

    @selection.setter
    def selection(self, selection):
        """Sets the selection of this DestinyAdvancedAwaUserResponse.

        Indication of the selection the user has made (Approving or rejecting the action)

        :param selection: The selection of this DestinyAdvancedAwaUserResponse.
        :type selection: int
        """

        self._selection = selection
