# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsItemsDestinyEnergyCostEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, energy_cost: int=None, energy_type: int=None, energy_type_hash: int=None):
        """DestinyDefinitionsItemsDestinyEnergyCostEntry - a model defined in OpenAPI

        :param energy_cost: The energy_cost of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        :param energy_type: The energy_type of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        :param energy_type_hash: The energy_type_hash of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        """
        self.openapi_types = {
            'energy_cost': int,
            'energy_type': int,
            'energy_type_hash': int
        }

        self.attribute_map = {
            'energy_cost': 'energyCost',
            'energy_type': 'energyType',
            'energy_type_hash': 'energyTypeHash'
        }

        self._energy_cost = energy_cost
        self._energy_type = energy_type
        self._energy_type_hash = energy_type_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsItemsDestinyEnergyCostEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Items.DestinyEnergyCostEntry of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def energy_cost(self):
        """Gets the energy_cost of this DestinyDefinitionsItemsDestinyEnergyCostEntry.

        The Energy cost for inserting this plug.

        :return: The energy_cost of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        :rtype: int
        """
        return self._energy_cost

    @energy_cost.setter
    def energy_cost(self, energy_cost):
        """Sets the energy_cost of this DestinyDefinitionsItemsDestinyEnergyCostEntry.

        The Energy cost for inserting this plug.

        :param energy_cost: The energy_cost of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        :type energy_cost: int
        """

        self._energy_cost = energy_cost

    @property
    def energy_type(self):
        """Gets the energy_type of this DestinyDefinitionsItemsDestinyEnergyCostEntry.

        The type of energy that this plug costs, in enum form.

        :return: The energy_type of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        :rtype: int
        """
        return self._energy_type

    @energy_type.setter
    def energy_type(self, energy_type):
        """Sets the energy_type of this DestinyDefinitionsItemsDestinyEnergyCostEntry.

        The type of energy that this plug costs, in enum form.

        :param energy_type: The energy_type of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        :type energy_type: int
        """

        self._energy_type = energy_type

    @property
    def energy_type_hash(self):
        """Gets the energy_type_hash of this DestinyDefinitionsItemsDestinyEnergyCostEntry.

        The type of energy that this plug costs, as a reference to the DestinyEnergyTypeDefinition of the energy type.

        :return: The energy_type_hash of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        :rtype: int
        """
        return self._energy_type_hash

    @energy_type_hash.setter
    def energy_type_hash(self, energy_type_hash):
        """Sets the energy_type_hash of this DestinyDefinitionsItemsDestinyEnergyCostEntry.

        The type of energy that this plug costs, as a reference to the DestinyEnergyTypeDefinition of the energy type.

        :param energy_type_hash: The energy_type_hash of this DestinyDefinitionsItemsDestinyEnergyCostEntry.
        :type energy_type_hash: int
        """

        self._energy_type_hash = energy_type_hash
