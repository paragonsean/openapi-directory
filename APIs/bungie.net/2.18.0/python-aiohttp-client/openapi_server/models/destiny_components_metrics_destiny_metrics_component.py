# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_components_metrics_destiny_metric_component import DestinyComponentsMetricsDestinyMetricComponent
from openapi_server import util


class DestinyComponentsMetricsDestinyMetricsComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metrics: Dict[str, DestinyComponentsMetricsDestinyMetricComponent]=None, metrics_root_node_hash: int=None):
        """DestinyComponentsMetricsDestinyMetricsComponent - a model defined in OpenAPI

        :param metrics: The metrics of this DestinyComponentsMetricsDestinyMetricsComponent.
        :param metrics_root_node_hash: The metrics_root_node_hash of this DestinyComponentsMetricsDestinyMetricsComponent.
        """
        self.openapi_types = {
            'metrics': Dict[str, DestinyComponentsMetricsDestinyMetricComponent],
            'metrics_root_node_hash': int
        }

        self.attribute_map = {
            'metrics': 'metrics',
            'metrics_root_node_hash': 'metricsRootNodeHash'
        }

        self._metrics = metrics
        self._metrics_root_node_hash = metrics_root_node_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyComponentsMetricsDestinyMetricsComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Components.Metrics.DestinyMetricsComponent of this DestinyComponentsMetricsDestinyMetricsComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metrics(self):
        """Gets the metrics of this DestinyComponentsMetricsDestinyMetricsComponent.


        :return: The metrics of this DestinyComponentsMetricsDestinyMetricsComponent.
        :rtype: Dict[str, DestinyComponentsMetricsDestinyMetricComponent]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this DestinyComponentsMetricsDestinyMetricsComponent.


        :param metrics: The metrics of this DestinyComponentsMetricsDestinyMetricsComponent.
        :type metrics: Dict[str, DestinyComponentsMetricsDestinyMetricComponent]
        """

        self._metrics = metrics

    @property
    def metrics_root_node_hash(self):
        """Gets the metrics_root_node_hash of this DestinyComponentsMetricsDestinyMetricsComponent.


        :return: The metrics_root_node_hash of this DestinyComponentsMetricsDestinyMetricsComponent.
        :rtype: int
        """
        return self._metrics_root_node_hash

    @metrics_root_node_hash.setter
    def metrics_root_node_hash(self, metrics_root_node_hash):
        """Sets the metrics_root_node_hash of this DestinyComponentsMetricsDestinyMetricsComponent.


        :param metrics_root_node_hash: The metrics_root_node_hash of this DestinyComponentsMetricsDestinyMetricsComponent.
        :type metrics_root_node_hash: int
        """

        self._metrics_root_node_hash = metrics_root_node_hash
