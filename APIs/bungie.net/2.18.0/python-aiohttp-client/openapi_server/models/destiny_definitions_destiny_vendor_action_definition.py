# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDestinyVendorActionDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_hash: int=None, action_id: str=None, auto_perform_action: bool=None, description: str=None, execute_seconds: int=None, icon: str=None, is_positive: bool=None, name: str=None, verb: str=None):
        """DestinyDefinitionsDestinyVendorActionDefinition - a model defined in OpenAPI

        :param action_hash: The action_hash of this DestinyDefinitionsDestinyVendorActionDefinition.
        :param action_id: The action_id of this DestinyDefinitionsDestinyVendorActionDefinition.
        :param auto_perform_action: The auto_perform_action of this DestinyDefinitionsDestinyVendorActionDefinition.
        :param description: The description of this DestinyDefinitionsDestinyVendorActionDefinition.
        :param execute_seconds: The execute_seconds of this DestinyDefinitionsDestinyVendorActionDefinition.
        :param icon: The icon of this DestinyDefinitionsDestinyVendorActionDefinition.
        :param is_positive: The is_positive of this DestinyDefinitionsDestinyVendorActionDefinition.
        :param name: The name of this DestinyDefinitionsDestinyVendorActionDefinition.
        :param verb: The verb of this DestinyDefinitionsDestinyVendorActionDefinition.
        """
        self.openapi_types = {
            'action_hash': int,
            'action_id': str,
            'auto_perform_action': bool,
            'description': str,
            'execute_seconds': int,
            'icon': str,
            'is_positive': bool,
            'name': str,
            'verb': str
        }

        self.attribute_map = {
            'action_hash': 'actionHash',
            'action_id': 'actionId',
            'auto_perform_action': 'autoPerformAction',
            'description': 'description',
            'execute_seconds': 'executeSeconds',
            'icon': 'icon',
            'is_positive': 'isPositive',
            'name': 'name',
            'verb': 'verb'
        }

        self._action_hash = action_hash
        self._action_id = action_id
        self._auto_perform_action = auto_perform_action
        self._description = description
        self._execute_seconds = execute_seconds
        self._icon = icon
        self._is_positive = is_positive
        self._name = name
        self._verb = verb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyVendorActionDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyVendorActionDefinition of this DestinyDefinitionsDestinyVendorActionDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_hash(self):
        """Gets the action_hash of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The action_hash of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: int
        """
        return self._action_hash

    @action_hash.setter
    def action_hash(self, action_hash):
        """Sets the action_hash of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param action_hash: The action_hash of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type action_hash: int
        """

        self._action_hash = action_hash

    @property
    def action_id(self):
        """Gets the action_id of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The action_id of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: str
        """
        return self._action_id

    @action_id.setter
    def action_id(self, action_id):
        """Sets the action_id of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param action_id: The action_id of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type action_id: str
        """

        self._action_id = action_id

    @property
    def auto_perform_action(self):
        """Gets the auto_perform_action of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The auto_perform_action of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: bool
        """
        return self._auto_perform_action

    @auto_perform_action.setter
    def auto_perform_action(self, auto_perform_action):
        """Sets the auto_perform_action of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param auto_perform_action: The auto_perform_action of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type auto_perform_action: bool
        """

        self._auto_perform_action = auto_perform_action

    @property
    def description(self):
        """Gets the description of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The description of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param description: The description of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type description: str
        """

        self._description = description

    @property
    def execute_seconds(self):
        """Gets the execute_seconds of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The execute_seconds of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: int
        """
        return self._execute_seconds

    @execute_seconds.setter
    def execute_seconds(self, execute_seconds):
        """Sets the execute_seconds of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param execute_seconds: The execute_seconds of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type execute_seconds: int
        """

        self._execute_seconds = execute_seconds

    @property
    def icon(self):
        """Gets the icon of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The icon of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param icon: The icon of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type icon: str
        """

        self._icon = icon

    @property
    def is_positive(self):
        """Gets the is_positive of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The is_positive of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: bool
        """
        return self._is_positive

    @is_positive.setter
    def is_positive(self, is_positive):
        """Sets the is_positive of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param is_positive: The is_positive of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type is_positive: bool
        """

        self._is_positive = is_positive

    @property
    def name(self):
        """Gets the name of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The name of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param name: The name of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type name: str
        """

        self._name = name

    @property
    def verb(self):
        """Gets the verb of this DestinyDefinitionsDestinyVendorActionDefinition.


        :return: The verb of this DestinyDefinitionsDestinyVendorActionDefinition.
        :rtype: str
        """
        return self._verb

    @verb.setter
    def verb(self, verb):
        """Sets the verb of this DestinyDefinitionsDestinyVendorActionDefinition.


        :param verb: The verb of this DestinyDefinitionsDestinyVendorActionDefinition.
        :type verb: str
        """

        self._verb = verb
