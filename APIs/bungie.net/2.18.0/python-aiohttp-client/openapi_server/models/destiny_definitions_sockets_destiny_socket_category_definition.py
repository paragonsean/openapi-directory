# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server import util


class DestinyDefinitionsSocketsDestinySocketCategoryDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_style: int=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, redacted: bool=None, ui_category_style: int=None):
        """DestinyDefinitionsSocketsDestinySocketCategoryDefinition - a model defined in OpenAPI

        :param category_style: The category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :param hash: The hash of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :param index: The index of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :param redacted: The redacted of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :param ui_category_style: The ui_category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        """
        self.openapi_types = {
            'category_style': int,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'redacted': bool,
            'ui_category_style': int
        }

        self.attribute_map = {
            'category_style': 'categoryStyle',
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'redacted': 'redacted',
            'ui_category_style': 'uiCategoryStyle'
        }

        self._category_style = category_style
        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._redacted = redacted
        self._ui_category_style = ui_category_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsSocketsDestinySocketCategoryDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Sockets.DestinySocketCategoryDefinition of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_style(self):
        """Gets the category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        Same as uiCategoryStyle, but in a more usable enumeration form.

        :return: The category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :rtype: int
        """
        return self._category_style

    @category_style.setter
    def category_style(self, category_style):
        """Sets the category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        Same as uiCategoryStyle, but in a more usable enumeration form.

        :param category_style: The category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :type category_style: int
        """

        self._category_style = category_style

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.


        :return: The display_properties of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :type index: int
        """

        self._index = index

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def ui_category_style(self):
        """Gets the ui_category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        A string hinting to the game's UI system about how the sockets in this category should be displayed.  BNet doesn't use it: it's up to you to find valid values and make your own special UI if you want to honor this category style.

        :return: The ui_category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :rtype: int
        """
        return self._ui_category_style

    @ui_category_style.setter
    def ui_category_style(self, ui_category_style):
        """Sets the ui_category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.

        A string hinting to the game's UI system about how the sockets in this category should be displayed.  BNet doesn't use it: it's up to you to find valid values and make your own special UI if you want to honor this category style.

        :param ui_category_style: The ui_category_style of this DestinyDefinitionsSocketsDestinySocketCategoryDefinition.
        :type ui_category_style: int
        """

        self._ui_category_style = ui_category_style
