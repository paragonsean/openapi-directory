# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_destiny_stat_display_definition import DestinyDefinitionsDestinyStatDisplayDefinition
from openapi_server.models.destiny_definitions_destiny_stat_override_definition import DestinyDefinitionsDestinyStatOverrideDefinition
from openapi_server import util


class DestinyDefinitionsDestinyStatGroupDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash: int=None, index: int=None, maximum_value: int=None, overrides: Dict[str, DestinyDefinitionsDestinyStatOverrideDefinition]=None, redacted: bool=None, scaled_stats: List[DestinyDefinitionsDestinyStatDisplayDefinition]=None, ui_position: int=None):
        """DestinyDefinitionsDestinyStatGroupDefinition - a model defined in OpenAPI

        :param hash: The hash of this DestinyDefinitionsDestinyStatGroupDefinition.
        :param index: The index of this DestinyDefinitionsDestinyStatGroupDefinition.
        :param maximum_value: The maximum_value of this DestinyDefinitionsDestinyStatGroupDefinition.
        :param overrides: The overrides of this DestinyDefinitionsDestinyStatGroupDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinyStatGroupDefinition.
        :param scaled_stats: The scaled_stats of this DestinyDefinitionsDestinyStatGroupDefinition.
        :param ui_position: The ui_position of this DestinyDefinitionsDestinyStatGroupDefinition.
        """
        self.openapi_types = {
            'hash': int,
            'index': int,
            'maximum_value': int,
            'overrides': Dict[str, DestinyDefinitionsDestinyStatOverrideDefinition],
            'redacted': bool,
            'scaled_stats': List[DestinyDefinitionsDestinyStatDisplayDefinition],
            'ui_position': int
        }

        self.attribute_map = {
            'hash': 'hash',
            'index': 'index',
            'maximum_value': 'maximumValue',
            'overrides': 'overrides',
            'redacted': 'redacted',
            'scaled_stats': 'scaledStats',
            'ui_position': 'uiPosition'
        }

        self._hash = hash
        self._index = index
        self._maximum_value = maximum_value
        self._overrides = overrides
        self._redacted = redacted
        self._scaled_stats = scaled_stats
        self._ui_position = ui_position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyStatGroupDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyStatGroupDefinition of this DestinyDefinitionsDestinyStatGroupDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinyStatGroupDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinyStatGroupDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinyStatGroupDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinyStatGroupDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinyStatGroupDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinyStatGroupDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinyStatGroupDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinyStatGroupDefinition.
        :type index: int
        """

        self._index = index

    @property
    def maximum_value(self):
        """Gets the maximum_value of this DestinyDefinitionsDestinyStatGroupDefinition.

        The maximum possible value that any stat in this group can be transformed into.  This is used by stats that *don't* have scaledStats entries below, but that still need to be displayed as a progress bar, in which case this is used as the upper bound for said progress bar. (the lower bound is always 0)

        :return: The maximum_value of this DestinyDefinitionsDestinyStatGroupDefinition.
        :rtype: int
        """
        return self._maximum_value

    @maximum_value.setter
    def maximum_value(self, maximum_value):
        """Sets the maximum_value of this DestinyDefinitionsDestinyStatGroupDefinition.

        The maximum possible value that any stat in this group can be transformed into.  This is used by stats that *don't* have scaledStats entries below, but that still need to be displayed as a progress bar, in which case this is used as the upper bound for said progress bar. (the lower bound is always 0)

        :param maximum_value: The maximum_value of this DestinyDefinitionsDestinyStatGroupDefinition.
        :type maximum_value: int
        """

        self._maximum_value = maximum_value

    @property
    def overrides(self):
        """Gets the overrides of this DestinyDefinitionsDestinyStatGroupDefinition.

        The game has the ability to override, based on the stat group, what the localized text is that is displayed for Stats being shown on the item.  Mercifully, no Stat Groups use this feature currently. If they start using them, we'll all need to start using them (and those of you who are more prudent than I am can go ahead and start pre-checking for this.)

        :return: The overrides of this DestinyDefinitionsDestinyStatGroupDefinition.
        :rtype: Dict[str, DestinyDefinitionsDestinyStatOverrideDefinition]
        """
        return self._overrides

    @overrides.setter
    def overrides(self, overrides):
        """Sets the overrides of this DestinyDefinitionsDestinyStatGroupDefinition.

        The game has the ability to override, based on the stat group, what the localized text is that is displayed for Stats being shown on the item.  Mercifully, no Stat Groups use this feature currently. If they start using them, we'll all need to start using them (and those of you who are more prudent than I am can go ahead and start pre-checking for this.)

        :param overrides: The overrides of this DestinyDefinitionsDestinyStatGroupDefinition.
        :type overrides: Dict[str, DestinyDefinitionsDestinyStatOverrideDefinition]
        """

        self._overrides = overrides

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinyStatGroupDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinyStatGroupDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinyStatGroupDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinyStatGroupDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def scaled_stats(self):
        """Gets the scaled_stats of this DestinyDefinitionsDestinyStatGroupDefinition.

        Any stat that requires scaling to be transformed from an \"Investment\" stat to a \"Display\" stat will have an entry in this list. For more information on what those types of stats mean and the transformation process, see DestinyStatDefinition.  In retrospect, I wouldn't mind if this was a dictionary keyed by the stat hash instead. But I'm going to leave it be because [[After Apple Picking]].

        :return: The scaled_stats of this DestinyDefinitionsDestinyStatGroupDefinition.
        :rtype: List[DestinyDefinitionsDestinyStatDisplayDefinition]
        """
        return self._scaled_stats

    @scaled_stats.setter
    def scaled_stats(self, scaled_stats):
        """Sets the scaled_stats of this DestinyDefinitionsDestinyStatGroupDefinition.

        Any stat that requires scaling to be transformed from an \"Investment\" stat to a \"Display\" stat will have an entry in this list. For more information on what those types of stats mean and the transformation process, see DestinyStatDefinition.  In retrospect, I wouldn't mind if this was a dictionary keyed by the stat hash instead. But I'm going to leave it be because [[After Apple Picking]].

        :param scaled_stats: The scaled_stats of this DestinyDefinitionsDestinyStatGroupDefinition.
        :type scaled_stats: List[DestinyDefinitionsDestinyStatDisplayDefinition]
        """

        self._scaled_stats = scaled_stats

    @property
    def ui_position(self):
        """Gets the ui_position of this DestinyDefinitionsDestinyStatGroupDefinition.

        This apparently indicates the position of the stats in the UI? I've returned it in case anyone can use it, but it's not of any use to us on BNet. Something's being lost in translation with this value.

        :return: The ui_position of this DestinyDefinitionsDestinyStatGroupDefinition.
        :rtype: int
        """
        return self._ui_position

    @ui_position.setter
    def ui_position(self, ui_position):
        """Sets the ui_position of this DestinyDefinitionsDestinyStatGroupDefinition.

        This apparently indicates the position of the stats in the UI? I've returned it in case anyone can use it, but it's not of any use to us on BNet. Something's being lost in translation with this value.

        :param ui_position: The ui_position of this DestinyDefinitionsDestinyStatGroupDefinition.
        :type ui_position: int
        """

        self._ui_position = ui_position
