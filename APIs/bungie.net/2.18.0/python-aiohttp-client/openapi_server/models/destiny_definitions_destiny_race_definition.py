# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server import util


class DestinyDefinitionsDestinyRaceDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, gendered_race_names: Dict[str, str]=None, gendered_race_names_by_gender_hash: Dict[str, str]=None, hash: int=None, index: int=None, race_type: int=None, redacted: bool=None):
        """DestinyDefinitionsDestinyRaceDefinition - a model defined in OpenAPI

        :param display_properties: The display_properties of this DestinyDefinitionsDestinyRaceDefinition.
        :param gendered_race_names: The gendered_race_names of this DestinyDefinitionsDestinyRaceDefinition.
        :param gendered_race_names_by_gender_hash: The gendered_race_names_by_gender_hash of this DestinyDefinitionsDestinyRaceDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinyRaceDefinition.
        :param index: The index of this DestinyDefinitionsDestinyRaceDefinition.
        :param race_type: The race_type of this DestinyDefinitionsDestinyRaceDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinyRaceDefinition.
        """
        self.openapi_types = {
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'gendered_race_names': Dict[str, str],
            'gendered_race_names_by_gender_hash': Dict[str, str],
            'hash': int,
            'index': int,
            'race_type': int,
            'redacted': bool
        }

        self.attribute_map = {
            'display_properties': 'displayProperties',
            'gendered_race_names': 'genderedRaceNames',
            'gendered_race_names_by_gender_hash': 'genderedRaceNamesByGenderHash',
            'hash': 'hash',
            'index': 'index',
            'race_type': 'raceType',
            'redacted': 'redacted'
        }

        self._display_properties = display_properties
        self._gendered_race_names = gendered_race_names
        self._gendered_race_names_by_gender_hash = gendered_race_names_by_gender_hash
        self._hash = hash
        self._index = index
        self._race_type = race_type
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyRaceDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyRaceDefinition of this DestinyDefinitionsDestinyRaceDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinyRaceDefinition.


        :return: The display_properties of this DestinyDefinitionsDestinyRaceDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinyRaceDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsDestinyRaceDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def gendered_race_names(self):
        """Gets the gendered_race_names of this DestinyDefinitionsDestinyRaceDefinition.

        A localized string referring to the singular form of the Race's name when referred to in gendered form. Keyed by the DestinyGender.

        :return: The gendered_race_names of this DestinyDefinitionsDestinyRaceDefinition.
        :rtype: Dict[str, str]
        """
        return self._gendered_race_names

    @gendered_race_names.setter
    def gendered_race_names(self, gendered_race_names):
        """Sets the gendered_race_names of this DestinyDefinitionsDestinyRaceDefinition.

        A localized string referring to the singular form of the Race's name when referred to in gendered form. Keyed by the DestinyGender.

        :param gendered_race_names: The gendered_race_names of this DestinyDefinitionsDestinyRaceDefinition.
        :type gendered_race_names: Dict[str, str]
        """

        self._gendered_race_names = gendered_race_names

    @property
    def gendered_race_names_by_gender_hash(self):
        """Gets the gendered_race_names_by_gender_hash of this DestinyDefinitionsDestinyRaceDefinition.


        :return: The gendered_race_names_by_gender_hash of this DestinyDefinitionsDestinyRaceDefinition.
        :rtype: Dict[str, str]
        """
        return self._gendered_race_names_by_gender_hash

    @gendered_race_names_by_gender_hash.setter
    def gendered_race_names_by_gender_hash(self, gendered_race_names_by_gender_hash):
        """Sets the gendered_race_names_by_gender_hash of this DestinyDefinitionsDestinyRaceDefinition.


        :param gendered_race_names_by_gender_hash: The gendered_race_names_by_gender_hash of this DestinyDefinitionsDestinyRaceDefinition.
        :type gendered_race_names_by_gender_hash: Dict[str, str]
        """

        self._gendered_race_names_by_gender_hash = gendered_race_names_by_gender_hash

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinyRaceDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinyRaceDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinyRaceDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinyRaceDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinyRaceDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinyRaceDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinyRaceDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinyRaceDefinition.
        :type index: int
        """

        self._index = index

    @property
    def race_type(self):
        """Gets the race_type of this DestinyDefinitionsDestinyRaceDefinition.

        An enumeration defining the existing, known Races/Species for player characters. This value will be the enum value matching this definition.

        :return: The race_type of this DestinyDefinitionsDestinyRaceDefinition.
        :rtype: int
        """
        return self._race_type

    @race_type.setter
    def race_type(self, race_type):
        """Sets the race_type of this DestinyDefinitionsDestinyRaceDefinition.

        An enumeration defining the existing, known Races/Species for player characters. This value will be the enum value matching this definition.

        :param race_type: The race_type of this DestinyDefinitionsDestinyRaceDefinition.
        :type race_type: int
        """

        self._race_type = race_type

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinyRaceDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinyRaceDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinyRaceDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinyRaceDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
