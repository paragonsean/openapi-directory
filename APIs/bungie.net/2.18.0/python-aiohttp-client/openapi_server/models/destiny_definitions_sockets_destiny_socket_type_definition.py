# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_sockets_destiny_insert_plug_action_definition import DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition
from openapi_server.models.destiny_definitions_sockets_destiny_plug_whitelist_entry_definition import DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition
from openapi_server.models.destiny_definitions_sockets_destiny_socket_type_scalar_material_requirement_entry import DestinyDefinitionsSocketsDestinySocketTypeScalarMaterialRequirementEntry
from openapi_server import util


class DestinyDefinitionsSocketsDestinySocketTypeDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, always_randomize_sockets: bool=None, avoid_duplicates_on_initialization: bool=None, currency_scalars: List[DestinyDefinitionsSocketsDestinySocketTypeScalarMaterialRequirementEntry]=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, hide_duplicate_reusable_plugs: bool=None, index: int=None, insert_action: DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition=None, is_preview_enabled: bool=None, overrides_ui_appearance: bool=None, plug_whitelist: List[DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition]=None, redacted: bool=None, socket_category_hash: int=None, visibility: int=None):
        """DestinyDefinitionsSocketsDestinySocketTypeDefinition - a model defined in OpenAPI

        :param always_randomize_sockets: The always_randomize_sockets of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param avoid_duplicates_on_initialization: The avoid_duplicates_on_initialization of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param currency_scalars: The currency_scalars of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param hash: The hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param hide_duplicate_reusable_plugs: The hide_duplicate_reusable_plugs of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param index: The index of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param insert_action: The insert_action of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param is_preview_enabled: The is_preview_enabled of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param overrides_ui_appearance: The overrides_ui_appearance of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param plug_whitelist: The plug_whitelist of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param redacted: The redacted of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param socket_category_hash: The socket_category_hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :param visibility: The visibility of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        """
        self.openapi_types = {
            'always_randomize_sockets': bool,
            'avoid_duplicates_on_initialization': bool,
            'currency_scalars': List[DestinyDefinitionsSocketsDestinySocketTypeScalarMaterialRequirementEntry],
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'hide_duplicate_reusable_plugs': bool,
            'index': int,
            'insert_action': DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition,
            'is_preview_enabled': bool,
            'overrides_ui_appearance': bool,
            'plug_whitelist': List[DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition],
            'redacted': bool,
            'socket_category_hash': int,
            'visibility': int
        }

        self.attribute_map = {
            'always_randomize_sockets': 'alwaysRandomizeSockets',
            'avoid_duplicates_on_initialization': 'avoidDuplicatesOnInitialization',
            'currency_scalars': 'currencyScalars',
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'hide_duplicate_reusable_plugs': 'hideDuplicateReusablePlugs',
            'index': 'index',
            'insert_action': 'insertAction',
            'is_preview_enabled': 'isPreviewEnabled',
            'overrides_ui_appearance': 'overridesUiAppearance',
            'plug_whitelist': 'plugWhitelist',
            'redacted': 'redacted',
            'socket_category_hash': 'socketCategoryHash',
            'visibility': 'visibility'
        }

        self._always_randomize_sockets = always_randomize_sockets
        self._avoid_duplicates_on_initialization = avoid_duplicates_on_initialization
        self._currency_scalars = currency_scalars
        self._display_properties = display_properties
        self._hash = hash
        self._hide_duplicate_reusable_plugs = hide_duplicate_reusable_plugs
        self._index = index
        self._insert_action = insert_action
        self._is_preview_enabled = is_preview_enabled
        self._overrides_ui_appearance = overrides_ui_appearance
        self._plug_whitelist = plug_whitelist
        self._redacted = redacted
        self._socket_category_hash = socket_category_hash
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsSocketsDestinySocketTypeDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Sockets.DestinySocketTypeDefinition of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def always_randomize_sockets(self):
        """Gets the always_randomize_sockets of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :return: The always_randomize_sockets of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: bool
        """
        return self._always_randomize_sockets

    @always_randomize_sockets.setter
    def always_randomize_sockets(self, always_randomize_sockets):
        """Sets the always_randomize_sockets of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :param always_randomize_sockets: The always_randomize_sockets of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type always_randomize_sockets: bool
        """

        self._always_randomize_sockets = always_randomize_sockets

    @property
    def avoid_duplicates_on_initialization(self):
        """Gets the avoid_duplicates_on_initialization of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :return: The avoid_duplicates_on_initialization of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: bool
        """
        return self._avoid_duplicates_on_initialization

    @avoid_duplicates_on_initialization.setter
    def avoid_duplicates_on_initialization(self, avoid_duplicates_on_initialization):
        """Sets the avoid_duplicates_on_initialization of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :param avoid_duplicates_on_initialization: The avoid_duplicates_on_initialization of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type avoid_duplicates_on_initialization: bool
        """

        self._avoid_duplicates_on_initialization = avoid_duplicates_on_initialization

    @property
    def currency_scalars(self):
        """Gets the currency_scalars of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :return: The currency_scalars of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: List[DestinyDefinitionsSocketsDestinySocketTypeScalarMaterialRequirementEntry]
        """
        return self._currency_scalars

    @currency_scalars.setter
    def currency_scalars(self, currency_scalars):
        """Sets the currency_scalars of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :param currency_scalars: The currency_scalars of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type currency_scalars: List[DestinyDefinitionsSocketsDestinySocketTypeScalarMaterialRequirementEntry]
        """

        self._currency_scalars = currency_scalars

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        There are fields for this display data, but they appear to be unpopulated as of now. I am not sure where in the UI these would show if they even were populated, but I will continue to return this data in case it becomes useful.

        :return: The display_properties of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        There are fields for this display data, but they appear to be unpopulated as of now. I am not sure where in the UI these would show if they even were populated, but I will continue to return this data in case it becomes useful.

        :param display_properties: The display_properties of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def hide_duplicate_reusable_plugs(self):
        """Gets the hide_duplicate_reusable_plugs of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :return: The hide_duplicate_reusable_plugs of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: bool
        """
        return self._hide_duplicate_reusable_plugs

    @hide_duplicate_reusable_plugs.setter
    def hide_duplicate_reusable_plugs(self, hide_duplicate_reusable_plugs):
        """Sets the hide_duplicate_reusable_plugs of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :param hide_duplicate_reusable_plugs: The hide_duplicate_reusable_plugs of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type hide_duplicate_reusable_plugs: bool
        """

        self._hide_duplicate_reusable_plugs = hide_duplicate_reusable_plugs

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type index: int
        """

        self._index = index

    @property
    def insert_action(self):
        """Gets the insert_action of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        Defines what happens when a plug is inserted into sockets of this type.

        :return: The insert_action of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition
        """
        return self._insert_action

    @insert_action.setter
    def insert_action(self, insert_action):
        """Sets the insert_action of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        Defines what happens when a plug is inserted into sockets of this type.

        :param insert_action: The insert_action of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type insert_action: DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition
        """

        self._insert_action = insert_action

    @property
    def is_preview_enabled(self):
        """Gets the is_preview_enabled of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :return: The is_preview_enabled of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: bool
        """
        return self._is_preview_enabled

    @is_preview_enabled.setter
    def is_preview_enabled(self, is_preview_enabled):
        """Sets the is_preview_enabled of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :param is_preview_enabled: The is_preview_enabled of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type is_preview_enabled: bool
        """

        self._is_preview_enabled = is_preview_enabled

    @property
    def overrides_ui_appearance(self):
        """Gets the overrides_ui_appearance of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        This property indicates if the socket type determines whether Emblem icons and nameplates should be overridden by the inserted plug item's icon and nameplate.

        :return: The overrides_ui_appearance of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: bool
        """
        return self._overrides_ui_appearance

    @overrides_ui_appearance.setter
    def overrides_ui_appearance(self, overrides_ui_appearance):
        """Sets the overrides_ui_appearance of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        This property indicates if the socket type determines whether Emblem icons and nameplates should be overridden by the inserted plug item's icon and nameplate.

        :param overrides_ui_appearance: The overrides_ui_appearance of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type overrides_ui_appearance: bool
        """

        self._overrides_ui_appearance = overrides_ui_appearance

    @property
    def plug_whitelist(self):
        """Gets the plug_whitelist of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        A list of Plug \"Categories\" that are allowed to be plugged into sockets of this type.  These should be compared against a given plug item's DestinyInventoryItemDefinition.plug.plugCategoryHash, which indicates the plug item's category.  If the plug's category matches any whitelisted plug, or if the whitelist is empty, it is allowed to be inserted.

        :return: The plug_whitelist of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: List[DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition]
        """
        return self._plug_whitelist

    @plug_whitelist.setter
    def plug_whitelist(self, plug_whitelist):
        """Sets the plug_whitelist of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        A list of Plug \"Categories\" that are allowed to be plugged into sockets of this type.  These should be compared against a given plug item's DestinyInventoryItemDefinition.plug.plugCategoryHash, which indicates the plug item's category.  If the plug's category matches any whitelisted plug, or if the whitelist is empty, it is allowed to be inserted.

        :param plug_whitelist: The plug_whitelist of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type plug_whitelist: List[DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition]
        """

        self._plug_whitelist = plug_whitelist

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def socket_category_hash(self):
        """Gets the socket_category_hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :return: The socket_category_hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: int
        """
        return self._socket_category_hash

    @socket_category_hash.setter
    def socket_category_hash(self, socket_category_hash):
        """Sets the socket_category_hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.


        :param socket_category_hash: The socket_category_hash of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type socket_category_hash: int
        """

        self._socket_category_hash = socket_category_hash

    @property
    def visibility(self):
        """Gets the visibility of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        Sometimes a socket isn't visible. These are some of the conditions under which sockets of this type are not visible. Unfortunately, the truth of visibility is much, much more complex. Best to rely on the live data for whether the socket is visible and enabled.

        :return: The visibility of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :rtype: int
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.

        Sometimes a socket isn't visible. These are some of the conditions under which sockets of this type are not visible. Unfortunately, the truth of visibility is much, much more complex. Best to rely on the live data for whether the socket is visible and enabled.

        :param visibility: The visibility of this DestinyDefinitionsSocketsDestinySocketTypeDefinition.
        :type visibility: int
        """

        self._visibility = visibility
