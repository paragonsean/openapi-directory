# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_artifacts_destiny_artifact_tier import DestinyArtifactsDestinyArtifactTier
from openapi_server import util


class DestinyArtifactsDestinyArtifactCharacterScoped(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_hash: int=None, points_used: int=None, reset_count: int=None, tiers: List[DestinyArtifactsDestinyArtifactTier]=None):
        """DestinyArtifactsDestinyArtifactCharacterScoped - a model defined in OpenAPI

        :param artifact_hash: The artifact_hash of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :param points_used: The points_used of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :param reset_count: The reset_count of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :param tiers: The tiers of this DestinyArtifactsDestinyArtifactCharacterScoped.
        """
        self.openapi_types = {
            'artifact_hash': int,
            'points_used': int,
            'reset_count': int,
            'tiers': List[DestinyArtifactsDestinyArtifactTier]
        }

        self.attribute_map = {
            'artifact_hash': 'artifactHash',
            'points_used': 'pointsUsed',
            'reset_count': 'resetCount',
            'tiers': 'tiers'
        }

        self._artifact_hash = artifact_hash
        self._points_used = points_used
        self._reset_count = reset_count
        self._tiers = tiers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyArtifactsDestinyArtifactCharacterScoped':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Artifacts.DestinyArtifactCharacterScoped of this DestinyArtifactsDestinyArtifactCharacterScoped.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_hash(self):
        """Gets the artifact_hash of this DestinyArtifactsDestinyArtifactCharacterScoped.


        :return: The artifact_hash of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :rtype: int
        """
        return self._artifact_hash

    @artifact_hash.setter
    def artifact_hash(self, artifact_hash):
        """Sets the artifact_hash of this DestinyArtifactsDestinyArtifactCharacterScoped.


        :param artifact_hash: The artifact_hash of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :type artifact_hash: int
        """

        self._artifact_hash = artifact_hash

    @property
    def points_used(self):
        """Gets the points_used of this DestinyArtifactsDestinyArtifactCharacterScoped.


        :return: The points_used of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :rtype: int
        """
        return self._points_used

    @points_used.setter
    def points_used(self, points_used):
        """Sets the points_used of this DestinyArtifactsDestinyArtifactCharacterScoped.


        :param points_used: The points_used of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :type points_used: int
        """

        self._points_used = points_used

    @property
    def reset_count(self):
        """Gets the reset_count of this DestinyArtifactsDestinyArtifactCharacterScoped.


        :return: The reset_count of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :rtype: int
        """
        return self._reset_count

    @reset_count.setter
    def reset_count(self, reset_count):
        """Sets the reset_count of this DestinyArtifactsDestinyArtifactCharacterScoped.


        :param reset_count: The reset_count of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :type reset_count: int
        """

        self._reset_count = reset_count

    @property
    def tiers(self):
        """Gets the tiers of this DestinyArtifactsDestinyArtifactCharacterScoped.


        :return: The tiers of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :rtype: List[DestinyArtifactsDestinyArtifactTier]
        """
        return self._tiers

    @tiers.setter
    def tiers(self, tiers):
        """Sets the tiers of this DestinyArtifactsDestinyArtifactCharacterScoped.


        :param tiers: The tiers of this DestinyArtifactsDestinyArtifactCharacterScoped.
        :type tiers: List[DestinyArtifactsDestinyArtifactTier]
        """

        self._tiers = tiers
