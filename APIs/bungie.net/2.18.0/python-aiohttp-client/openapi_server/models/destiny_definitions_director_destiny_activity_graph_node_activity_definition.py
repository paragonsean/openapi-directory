# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_hash: int=None, node_activity_id: int=None):
        """DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition - a model defined in OpenAPI

        :param activity_hash: The activity_hash of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.
        :param node_activity_id: The node_activity_id of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.
        """
        self.openapi_types = {
            'activity_hash': int,
            'node_activity_id': int
        }

        self.attribute_map = {
            'activity_hash': 'activityHash',
            'node_activity_id': 'nodeActivityId'
        }

        self._activity_hash = activity_hash
        self._node_activity_id = node_activity_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Director.DestinyActivityGraphNodeActivityDefinition of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_hash(self):
        """Gets the activity_hash of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.

        The activity that will be activated if the user clicks on this node. Controls all activity-related information displayed on the node if it is active (the text shown in the tooltip etc)

        :return: The activity_hash of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.
        :rtype: int
        """
        return self._activity_hash

    @activity_hash.setter
    def activity_hash(self, activity_hash):
        """Sets the activity_hash of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.

        The activity that will be activated if the user clicks on this node. Controls all activity-related information displayed on the node if it is active (the text shown in the tooltip etc)

        :param activity_hash: The activity_hash of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.
        :type activity_hash: int
        """

        self._activity_hash = activity_hash

    @property
    def node_activity_id(self):
        """Gets the node_activity_id of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.

        An identifier for this node activity. It is only guaranteed to be unique within the Activity Graph.

        :return: The node_activity_id of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.
        :rtype: int
        """
        return self._node_activity_id

    @node_activity_id.setter
    def node_activity_id(self, node_activity_id):
        """Sets the node_activity_id of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.

        An identifier for this node activity. It is only guaranteed to be unique within the Activity Graph.

        :param node_activity_id: The node_activity_id of this DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.
        :type node_activity_id: int
        """

        self._node_activity_id = node_activity_id
