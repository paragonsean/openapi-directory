# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_historical_stats_destiny_historical_stats_value import DestinyHistoricalStatsDestinyHistoricalStatsValue
from openapi_server.models.destiny_historical_stats_destiny_player import DestinyHistoricalStatsDestinyPlayer
from openapi_server.models.destiny_historical_stats_destiny_post_game_carnage_report_extended_data import DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData
from openapi_server import util


class DestinyHistoricalStatsDestinyPostGameCarnageReportEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, character_id: int=None, extended: DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData=None, player: DestinyHistoricalStatsDestinyPlayer=None, score: DestinyHistoricalStatsDestinyHistoricalStatsValue=None, standing: int=None, values: Dict[str, DestinyHistoricalStatsDestinyHistoricalStatsValue]=None):
        """DestinyHistoricalStatsDestinyPostGameCarnageReportEntry - a model defined in OpenAPI

        :param character_id: The character_id of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :param extended: The extended of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :param player: The player of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :param score: The score of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :param standing: The standing of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :param values: The values of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        """
        self.openapi_types = {
            'character_id': int,
            'extended': DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData,
            'player': DestinyHistoricalStatsDestinyPlayer,
            'score': DestinyHistoricalStatsDestinyHistoricalStatsValue,
            'standing': int,
            'values': Dict[str, DestinyHistoricalStatsDestinyHistoricalStatsValue]
        }

        self.attribute_map = {
            'character_id': 'characterId',
            'extended': 'extended',
            'player': 'player',
            'score': 'score',
            'standing': 'standing',
            'values': 'values'
        }

        self._character_id = character_id
        self._extended = extended
        self._player = player
        self._score = score
        self._standing = standing
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyHistoricalStatsDestinyPostGameCarnageReportEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def character_id(self):
        """Gets the character_id of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        ID of the player's character used in the activity.

        :return: The character_id of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :rtype: int
        """
        return self._character_id

    @character_id.setter
    def character_id(self, character_id):
        """Sets the character_id of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        ID of the player's character used in the activity.

        :param character_id: The character_id of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :type character_id: int
        """

        self._character_id = character_id

    @property
    def extended(self):
        """Gets the extended of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Extended data extracted from the activity blob.

        :return: The extended of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :rtype: DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData
        """
        return self._extended

    @extended.setter
    def extended(self, extended):
        """Sets the extended of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Extended data extracted from the activity blob.

        :param extended: The extended of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :type extended: DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData
        """

        self._extended = extended

    @property
    def player(self):
        """Gets the player of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Identity details of the player

        :return: The player of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :rtype: DestinyHistoricalStatsDestinyPlayer
        """
        return self._player

    @player.setter
    def player(self, player):
        """Sets the player of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Identity details of the player

        :param player: The player of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :type player: DestinyHistoricalStatsDestinyPlayer
        """

        self._player = player

    @property
    def score(self):
        """Gets the score of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Score of the player if available

        :return: The score of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :rtype: DestinyHistoricalStatsDestinyHistoricalStatsValue
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Score of the player if available

        :param score: The score of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :type score: DestinyHistoricalStatsDestinyHistoricalStatsValue
        """

        self._score = score

    @property
    def standing(self):
        """Gets the standing of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Standing of the player

        :return: The standing of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :rtype: int
        """
        return self._standing

    @standing.setter
    def standing(self, standing):
        """Sets the standing of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Standing of the player

        :param standing: The standing of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :type standing: int
        """

        self._standing = standing

    @property
    def values(self):
        """Gets the values of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Collection of stats for the player in this activity.

        :return: The values of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :rtype: Dict[str, DestinyHistoricalStatsDestinyHistoricalStatsValue]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.

        Collection of stats for the player in this activity.

        :param values: The values of this DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.
        :type values: Dict[str, DestinyHistoricalStatsDestinyHistoricalStatsValue]
        """

        self._values = values
