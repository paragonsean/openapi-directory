# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.groups_v2_group_v2_clan_info import GroupsV2GroupV2ClanInfo
from openapi_server import util


class GroupsV2GroupV2Card(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, about: str=None, avatar_path: str=None, capabilities: int=None, clan_info: GroupsV2GroupV2ClanInfo=None, creation_date: datetime=None, group_id: int=None, group_type: int=None, locale: str=None, member_count: int=None, membership_option: int=None, motto: str=None, name: str=None, theme: str=None):
        """GroupsV2GroupV2Card - a model defined in OpenAPI

        :param about: The about of this GroupsV2GroupV2Card.
        :param avatar_path: The avatar_path of this GroupsV2GroupV2Card.
        :param capabilities: The capabilities of this GroupsV2GroupV2Card.
        :param clan_info: The clan_info of this GroupsV2GroupV2Card.
        :param creation_date: The creation_date of this GroupsV2GroupV2Card.
        :param group_id: The group_id of this GroupsV2GroupV2Card.
        :param group_type: The group_type of this GroupsV2GroupV2Card.
        :param locale: The locale of this GroupsV2GroupV2Card.
        :param member_count: The member_count of this GroupsV2GroupV2Card.
        :param membership_option: The membership_option of this GroupsV2GroupV2Card.
        :param motto: The motto of this GroupsV2GroupV2Card.
        :param name: The name of this GroupsV2GroupV2Card.
        :param theme: The theme of this GroupsV2GroupV2Card.
        """
        self.openapi_types = {
            'about': str,
            'avatar_path': str,
            'capabilities': int,
            'clan_info': GroupsV2GroupV2ClanInfo,
            'creation_date': datetime,
            'group_id': int,
            'group_type': int,
            'locale': str,
            'member_count': int,
            'membership_option': int,
            'motto': str,
            'name': str,
            'theme': str
        }

        self.attribute_map = {
            'about': 'about',
            'avatar_path': 'avatarPath',
            'capabilities': 'capabilities',
            'clan_info': 'clanInfo',
            'creation_date': 'creationDate',
            'group_id': 'groupId',
            'group_type': 'groupType',
            'locale': 'locale',
            'member_count': 'memberCount',
            'membership_option': 'membershipOption',
            'motto': 'motto',
            'name': 'name',
            'theme': 'theme'
        }

        self._about = about
        self._avatar_path = avatar_path
        self._capabilities = capabilities
        self._clan_info = clan_info
        self._creation_date = creation_date
        self._group_id = group_id
        self._group_type = group_type
        self._locale = locale
        self._member_count = member_count
        self._membership_option = membership_option
        self._motto = motto
        self._name = name
        self._theme = theme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupsV2GroupV2Card':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupsV2.GroupV2Card of this GroupsV2GroupV2Card.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def about(self):
        """Gets the about of this GroupsV2GroupV2Card.


        :return: The about of this GroupsV2GroupV2Card.
        :rtype: str
        """
        return self._about

    @about.setter
    def about(self, about):
        """Sets the about of this GroupsV2GroupV2Card.


        :param about: The about of this GroupsV2GroupV2Card.
        :type about: str
        """

        self._about = about

    @property
    def avatar_path(self):
        """Gets the avatar_path of this GroupsV2GroupV2Card.


        :return: The avatar_path of this GroupsV2GroupV2Card.
        :rtype: str
        """
        return self._avatar_path

    @avatar_path.setter
    def avatar_path(self, avatar_path):
        """Sets the avatar_path of this GroupsV2GroupV2Card.


        :param avatar_path: The avatar_path of this GroupsV2GroupV2Card.
        :type avatar_path: str
        """

        self._avatar_path = avatar_path

    @property
    def capabilities(self):
        """Gets the capabilities of this GroupsV2GroupV2Card.


        :return: The capabilities of this GroupsV2GroupV2Card.
        :rtype: int
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this GroupsV2GroupV2Card.


        :param capabilities: The capabilities of this GroupsV2GroupV2Card.
        :type capabilities: int
        """

        self._capabilities = capabilities

    @property
    def clan_info(self):
        """Gets the clan_info of this GroupsV2GroupV2Card.


        :return: The clan_info of this GroupsV2GroupV2Card.
        :rtype: GroupsV2GroupV2ClanInfo
        """
        return self._clan_info

    @clan_info.setter
    def clan_info(self, clan_info):
        """Sets the clan_info of this GroupsV2GroupV2Card.


        :param clan_info: The clan_info of this GroupsV2GroupV2Card.
        :type clan_info: GroupsV2GroupV2ClanInfo
        """

        self._clan_info = clan_info

    @property
    def creation_date(self):
        """Gets the creation_date of this GroupsV2GroupV2Card.


        :return: The creation_date of this GroupsV2GroupV2Card.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this GroupsV2GroupV2Card.


        :param creation_date: The creation_date of this GroupsV2GroupV2Card.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def group_id(self):
        """Gets the group_id of this GroupsV2GroupV2Card.


        :return: The group_id of this GroupsV2GroupV2Card.
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this GroupsV2GroupV2Card.


        :param group_id: The group_id of this GroupsV2GroupV2Card.
        :type group_id: int
        """

        self._group_id = group_id

    @property
    def group_type(self):
        """Gets the group_type of this GroupsV2GroupV2Card.


        :return: The group_type of this GroupsV2GroupV2Card.
        :rtype: int
        """
        return self._group_type

    @group_type.setter
    def group_type(self, group_type):
        """Sets the group_type of this GroupsV2GroupV2Card.


        :param group_type: The group_type of this GroupsV2GroupV2Card.
        :type group_type: int
        """

        self._group_type = group_type

    @property
    def locale(self):
        """Gets the locale of this GroupsV2GroupV2Card.


        :return: The locale of this GroupsV2GroupV2Card.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this GroupsV2GroupV2Card.


        :param locale: The locale of this GroupsV2GroupV2Card.
        :type locale: str
        """

        self._locale = locale

    @property
    def member_count(self):
        """Gets the member_count of this GroupsV2GroupV2Card.


        :return: The member_count of this GroupsV2GroupV2Card.
        :rtype: int
        """
        return self._member_count

    @member_count.setter
    def member_count(self, member_count):
        """Sets the member_count of this GroupsV2GroupV2Card.


        :param member_count: The member_count of this GroupsV2GroupV2Card.
        :type member_count: int
        """

        self._member_count = member_count

    @property
    def membership_option(self):
        """Gets the membership_option of this GroupsV2GroupV2Card.


        :return: The membership_option of this GroupsV2GroupV2Card.
        :rtype: int
        """
        return self._membership_option

    @membership_option.setter
    def membership_option(self, membership_option):
        """Sets the membership_option of this GroupsV2GroupV2Card.


        :param membership_option: The membership_option of this GroupsV2GroupV2Card.
        :type membership_option: int
        """

        self._membership_option = membership_option

    @property
    def motto(self):
        """Gets the motto of this GroupsV2GroupV2Card.


        :return: The motto of this GroupsV2GroupV2Card.
        :rtype: str
        """
        return self._motto

    @motto.setter
    def motto(self, motto):
        """Sets the motto of this GroupsV2GroupV2Card.


        :param motto: The motto of this GroupsV2GroupV2Card.
        :type motto: str
        """

        self._motto = motto

    @property
    def name(self):
        """Gets the name of this GroupsV2GroupV2Card.


        :return: The name of this GroupsV2GroupV2Card.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GroupsV2GroupV2Card.


        :param name: The name of this GroupsV2GroupV2Card.
        :type name: str
        """

        self._name = name

    @property
    def theme(self):
        """Gets the theme of this GroupsV2GroupV2Card.


        :return: The theme of this GroupsV2GroupV2Card.
        :rtype: str
        """
        return self._theme

    @theme.setter
    def theme(self, theme):
        """Sets the theme of this GroupsV2GroupV2Card.


        :param theme: The theme of this GroupsV2GroupV2Card.
        :type theme: str
        """

        self._theme = theme
