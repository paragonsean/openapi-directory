# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_items_destiny_derived_item_category_definition import DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition
from openapi_server import util


class DestinyDefinitionsDestinyItemPreviewBlockDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_hash: int=None, derived_item_categories: List[DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition]=None, preview_action_string: str=None, preview_vendor_hash: int=None, screen_style: str=None):
        """DestinyDefinitionsDestinyItemPreviewBlockDefinition - a model defined in OpenAPI

        :param artifact_hash: The artifact_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :param derived_item_categories: The derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :param preview_action_string: The preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :param preview_vendor_hash: The preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :param screen_style: The screen_style of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        """
        self.openapi_types = {
            'artifact_hash': int,
            'derived_item_categories': List[DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition],
            'preview_action_string': str,
            'preview_vendor_hash': int,
            'screen_style': str
        }

        self.attribute_map = {
            'artifact_hash': 'artifactHash',
            'derived_item_categories': 'derivedItemCategories',
            'preview_action_string': 'previewActionString',
            'preview_vendor_hash': 'previewVendorHash',
            'screen_style': 'screenStyle'
        }

        self._artifact_hash = artifact_hash
        self._derived_item_categories = derived_item_categories
        self._preview_action_string = preview_action_string
        self._preview_vendor_hash = preview_vendor_hash
        self._screen_style = screen_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyItemPreviewBlockDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyItemPreviewBlockDefinition of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_hash(self):
        """Gets the artifact_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        If this item should show you Artifact information when you preview it, this is the hash identifier of the DestinyArtifactDefinition for the artifact whose data should be shown.

        :return: The artifact_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :rtype: int
        """
        return self._artifact_hash

    @artifact_hash.setter
    def artifact_hash(self, artifact_hash):
        """Sets the artifact_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        If this item should show you Artifact information when you preview it, this is the hash identifier of the DestinyArtifactDefinition for the artifact whose data should be shown.

        :param artifact_hash: The artifact_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :type artifact_hash: int
        """

        self._artifact_hash = artifact_hash

    @property
    def derived_item_categories(self):
        """Gets the derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        This is a list of the items being previewed, categorized in the same way as they are in the preview UI.

        :return: The derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :rtype: List[DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition]
        """
        return self._derived_item_categories

    @derived_item_categories.setter
    def derived_item_categories(self, derived_item_categories):
        """Sets the derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        This is a list of the items being previewed, categorized in the same way as they are in the preview UI.

        :param derived_item_categories: The derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :type derived_item_categories: List[DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition]
        """

        self._derived_item_categories = derived_item_categories

    @property
    def preview_action_string(self):
        """Gets the preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        If the preview has an associated action (like \"Open\"), this will be the localized string for that action.

        :return: The preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :rtype: str
        """
        return self._preview_action_string

    @preview_action_string.setter
    def preview_action_string(self, preview_action_string):
        """Sets the preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        If the preview has an associated action (like \"Open\"), this will be the localized string for that action.

        :param preview_action_string: The preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :type preview_action_string: str
        """

        self._preview_action_string = preview_action_string

    @property
    def preview_vendor_hash(self):
        """Gets the preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        If the preview data is derived from a fake \"Preview\" Vendor, this will be the hash identifier for the DestinyVendorDefinition of that fake vendor.

        :return: The preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :rtype: int
        """
        return self._preview_vendor_hash

    @preview_vendor_hash.setter
    def preview_vendor_hash(self, preview_vendor_hash):
        """Sets the preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        If the preview data is derived from a fake \"Preview\" Vendor, this will be the hash identifier for the DestinyVendorDefinition of that fake vendor.

        :param preview_vendor_hash: The preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :type preview_vendor_hash: int
        """

        self._preview_vendor_hash = preview_vendor_hash

    @property
    def screen_style(self):
        """Gets the screen_style of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        A string that the game UI uses as a hint for which detail screen to show for the item. You, too, can leverage this for your own custom screen detail views. Note, however, that these are arbitrarily defined by designers: there's no guarantees of a fixed, known number of these - so fall back to something reasonable if you don't recognize it.

        :return: The screen_style of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :rtype: str
        """
        return self._screen_style

    @screen_style.setter
    def screen_style(self, screen_style):
        """Sets the screen_style of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.

        A string that the game UI uses as a hint for which detail screen to show for the item. You, too, can leverage this for your own custom screen detail views. Note, however, that these are arbitrarily defined by designers: there's no guarantees of a fixed, known number of these - so fall back to something reasonable if you don't recognize it.

        :param screen_style: The screen_style of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :type screen_style: str
        """

        self._screen_style = screen_style
