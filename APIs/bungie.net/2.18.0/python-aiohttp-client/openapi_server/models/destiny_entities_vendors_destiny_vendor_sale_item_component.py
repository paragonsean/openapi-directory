# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_destiny_item_quantity import DestinyDestinyItemQuantity
from openapi_server.models.destiny_destiny_unlock_status import DestinyDestinyUnlockStatus
from openapi_server import util


class DestinyEntitiesVendorsDestinyVendorSaleItemComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_purchasable: bool=None, augments: int=None, costs: List[DestinyDestinyItemQuantity]=None, failure_indexes: List[int]=None, item_hash: int=None, item_value_visibility: List[bool]=None, override_next_refresh_date: datetime=None, override_style_item_hash: int=None, quantity: int=None, required_unlocks: List[int]=None, sale_status: int=None, unlock_statuses: List[DestinyDestinyUnlockStatus]=None, vendor_item_index: int=None):
        """DestinyEntitiesVendorsDestinyVendorSaleItemComponent - a model defined in OpenAPI

        :param api_purchasable: The api_purchasable of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param augments: The augments of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param costs: The costs of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param failure_indexes: The failure_indexes of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param item_hash: The item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param item_value_visibility: The item_value_visibility of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param override_next_refresh_date: The override_next_refresh_date of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param override_style_item_hash: The override_style_item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param quantity: The quantity of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param required_unlocks: The required_unlocks of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param sale_status: The sale_status of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param unlock_statuses: The unlock_statuses of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :param vendor_item_index: The vendor_item_index of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        """
        self.openapi_types = {
            'api_purchasable': bool,
            'augments': int,
            'costs': List[DestinyDestinyItemQuantity],
            'failure_indexes': List[int],
            'item_hash': int,
            'item_value_visibility': List[bool],
            'override_next_refresh_date': datetime,
            'override_style_item_hash': int,
            'quantity': int,
            'required_unlocks': List[int],
            'sale_status': int,
            'unlock_statuses': List[DestinyDestinyUnlockStatus],
            'vendor_item_index': int
        }

        self.attribute_map = {
            'api_purchasable': 'apiPurchasable',
            'augments': 'augments',
            'costs': 'costs',
            'failure_indexes': 'failureIndexes',
            'item_hash': 'itemHash',
            'item_value_visibility': 'itemValueVisibility',
            'override_next_refresh_date': 'overrideNextRefreshDate',
            'override_style_item_hash': 'overrideStyleItemHash',
            'quantity': 'quantity',
            'required_unlocks': 'requiredUnlocks',
            'sale_status': 'saleStatus',
            'unlock_statuses': 'unlockStatuses',
            'vendor_item_index': 'vendorItemIndex'
        }

        self._api_purchasable = api_purchasable
        self._augments = augments
        self._costs = costs
        self._failure_indexes = failure_indexes
        self._item_hash = item_hash
        self._item_value_visibility = item_value_visibility
        self._override_next_refresh_date = override_next_refresh_date
        self._override_style_item_hash = override_style_item_hash
        self._quantity = quantity
        self._required_unlocks = required_unlocks
        self._sale_status = sale_status
        self._unlock_statuses = unlock_statuses
        self._vendor_item_index = vendor_item_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyEntitiesVendorsDestinyVendorSaleItemComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Entities.Vendors.DestinyVendorSaleItemComponent of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_purchasable(self):
        """Gets the api_purchasable of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If true, this item can be purchased through the Bungie.net API.

        :return: The api_purchasable of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: bool
        """
        return self._api_purchasable

    @api_purchasable.setter
    def api_purchasable(self, api_purchasable):
        """Sets the api_purchasable of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If true, this item can be purchased through the Bungie.net API.

        :param api_purchasable: The api_purchasable of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type api_purchasable: bool
        """

        self._api_purchasable = api_purchasable

    @property
    def augments(self):
        """Gets the augments of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        A flags enumeration value representing the current state of any \"state modifiers\" on the item being sold. These are meant to correspond with some sort of visual indicator as to the augmentation: for instance, if an item is on sale or if you already own the item in question.  Determining how you want to represent these in your own app (or if you even want to) is an exercise left for the reader.

        :return: The augments of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: int
        """
        return self._augments

    @augments.setter
    def augments(self, augments):
        """Sets the augments of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        A flags enumeration value representing the current state of any \"state modifiers\" on the item being sold. These are meant to correspond with some sort of visual indicator as to the augmentation: for instance, if an item is on sale or if you already own the item in question.  Determining how you want to represent these in your own app (or if you even want to) is an exercise left for the reader.

        :param augments: The augments of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type augments: int
        """

        self._augments = augments

    @property
    def costs(self):
        """Gets the costs of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        A summary of the current costs of the item.

        :return: The costs of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: List[DestinyDestinyItemQuantity]
        """
        return self._costs

    @costs.setter
    def costs(self, costs):
        """Sets the costs of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        A summary of the current costs of the item.

        :param costs: The costs of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type costs: List[DestinyDestinyItemQuantity]
        """

        self._costs = costs

    @property
    def failure_indexes(self):
        """Gets the failure_indexes of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        Indexes in to the \"failureStrings\" lookup table in DestinyVendorDefinition for the given Vendor. Gives some more reliable failure information for why you can't purchase an item.  It is preferred to use these over requiredUnlocks and unlockStatuses: the latter are provided mostly in case someone can do something interesting with it that I didn't anticipate.

        :return: The failure_indexes of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: List[int]
        """
        return self._failure_indexes

    @failure_indexes.setter
    def failure_indexes(self, failure_indexes):
        """Sets the failure_indexes of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        Indexes in to the \"failureStrings\" lookup table in DestinyVendorDefinition for the given Vendor. Gives some more reliable failure information for why you can't purchase an item.  It is preferred to use these over requiredUnlocks and unlockStatuses: the latter are provided mostly in case someone can do something interesting with it that I didn't anticipate.

        :param failure_indexes: The failure_indexes of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type failure_indexes: List[int]
        """

        self._failure_indexes = failure_indexes

    @property
    def item_hash(self):
        """Gets the item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        The hash of the item being sold, as a quick shortcut for looking up the DestinyInventoryItemDefinition of the sale item.

        :return: The item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: int
        """
        return self._item_hash

    @item_hash.setter
    def item_hash(self, item_hash):
        """Sets the item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        The hash of the item being sold, as a quick shortcut for looking up the DestinyInventoryItemDefinition of the sale item.

        :param item_hash: The item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type item_hash: int
        """

        self._item_hash = item_hash

    @property
    def item_value_visibility(self):
        """Gets the item_value_visibility of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If available, a list that describes which item values (rewards) should be shown (true) or hidden (false).

        :return: The item_value_visibility of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: List[bool]
        """
        return self._item_value_visibility

    @item_value_visibility.setter
    def item_value_visibility(self, item_value_visibility):
        """Sets the item_value_visibility of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If available, a list that describes which item values (rewards) should be shown (true) or hidden (false).

        :param item_value_visibility: The item_value_visibility of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type item_value_visibility: List[bool]
        """

        self._item_value_visibility = item_value_visibility

    @property
    def override_next_refresh_date(self):
        """Gets the override_next_refresh_date of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If this item has its own custom date where it may be removed from the Vendor's rotation, this is that date.  Note that there's not actually any guarantee that it will go away: it could be chosen again and end up still being in the Vendor's sale items! But this is the next date where that test will occur, and is also the date that the game shows for availability on things like Bounties being sold. So it's the best we can give.

        :return: The override_next_refresh_date of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: datetime
        """
        return self._override_next_refresh_date

    @override_next_refresh_date.setter
    def override_next_refresh_date(self, override_next_refresh_date):
        """Sets the override_next_refresh_date of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If this item has its own custom date where it may be removed from the Vendor's rotation, this is that date.  Note that there's not actually any guarantee that it will go away: it could be chosen again and end up still being in the Vendor's sale items! But this is the next date where that test will occur, and is also the date that the game shows for availability on things like Bounties being sold. So it's the best we can give.

        :param override_next_refresh_date: The override_next_refresh_date of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type override_next_refresh_date: datetime
        """

        self._override_next_refresh_date = override_next_refresh_date

    @property
    def override_style_item_hash(self):
        """Gets the override_style_item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If populated, this is the hash of the item whose icon (and other secondary styles, but *not* the human readable strings) should override whatever icons/styles are on the item being sold.  If you don't do this, certain items whose styles are being overridden by socketed items - such as the \"Recycle Shader\" item - would show whatever their default icon/style is, and it wouldn't be pretty or look accurate.

        :return: The override_style_item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: int
        """
        return self._override_style_item_hash

    @override_style_item_hash.setter
    def override_style_item_hash(self, override_style_item_hash):
        """Sets the override_style_item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If populated, this is the hash of the item whose icon (and other secondary styles, but *not* the human readable strings) should override whatever icons/styles are on the item being sold.  If you don't do this, certain items whose styles are being overridden by socketed items - such as the \"Recycle Shader\" item - would show whatever their default icon/style is, and it wouldn't be pretty or look accurate.

        :param override_style_item_hash: The override_style_item_hash of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type override_style_item_hash: int
        """

        self._override_style_item_hash = override_style_item_hash

    @property
    def quantity(self):
        """Gets the quantity of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        How much of the item you'll be getting.

        :return: The quantity of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        How much of the item you'll be getting.

        :param quantity: The quantity of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def required_unlocks(self):
        """Gets the required_unlocks of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If you can't buy the item due to a complex character state, these will be hashes for DestinyUnlockDefinitions that you can check to see messages regarding the failure (if the unlocks have human readable information: it is not guaranteed that Unlocks will have human readable strings, and your application will have to handle that)  Prefer using failureIndexes instead. These are provided for informational purposes, but have largely been supplanted by failureIndexes.

        :return: The required_unlocks of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: List[int]
        """
        return self._required_unlocks

    @required_unlocks.setter
    def required_unlocks(self, required_unlocks):
        """Sets the required_unlocks of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If you can't buy the item due to a complex character state, these will be hashes for DestinyUnlockDefinitions that you can check to see messages regarding the failure (if the unlocks have human readable information: it is not guaranteed that Unlocks will have human readable strings, and your application will have to handle that)  Prefer using failureIndexes instead. These are provided for informational purposes, but have largely been supplanted by failureIndexes.

        :param required_unlocks: The required_unlocks of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type required_unlocks: List[int]
        """

        self._required_unlocks = required_unlocks

    @property
    def sale_status(self):
        """Gets the sale_status of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        A flag indicating whether the requesting character can buy the item, and if not the reasons why the character can't buy it.

        :return: The sale_status of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: int
        """
        return self._sale_status

    @sale_status.setter
    def sale_status(self, sale_status):
        """Sets the sale_status of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        A flag indicating whether the requesting character can buy the item, and if not the reasons why the character can't buy it.

        :param sale_status: The sale_status of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type sale_status: int
        """

        self._sale_status = sale_status

    @property
    def unlock_statuses(self):
        """Gets the unlock_statuses of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If any complex unlock states are checked in determining purchasability, these will be returned here along with the status of the unlock check.  Prefer using failureIndexes instead. These are provided for informational purposes, but have largely been supplanted by failureIndexes.

        :return: The unlock_statuses of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: List[DestinyDestinyUnlockStatus]
        """
        return self._unlock_statuses

    @unlock_statuses.setter
    def unlock_statuses(self, unlock_statuses):
        """Sets the unlock_statuses of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        If any complex unlock states are checked in determining purchasability, these will be returned here along with the status of the unlock check.  Prefer using failureIndexes instead. These are provided for informational purposes, but have largely been supplanted by failureIndexes.

        :param unlock_statuses: The unlock_statuses of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type unlock_statuses: List[DestinyDestinyUnlockStatus]
        """

        self._unlock_statuses = unlock_statuses

    @property
    def vendor_item_index(self):
        """Gets the vendor_item_index of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        The index into the DestinyVendorDefinition.itemList property. Note that this means Vendor data *is* Content Version dependent: make sure you have the latest content before you use Vendor data, or these indexes may mismatch.   Most systems avoid this problem, but Vendors is one area where we are unable to reasonably avoid content dependency at the moment.

        :return: The vendor_item_index of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :rtype: int
        """
        return self._vendor_item_index

    @vendor_item_index.setter
    def vendor_item_index(self, vendor_item_index):
        """Sets the vendor_item_index of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.

        The index into the DestinyVendorDefinition.itemList property. Note that this means Vendor data *is* Content Version dependent: make sure you have the latest content before you use Vendor data, or these indexes may mismatch.   Most systems avoid this problem, but Vendors is one area where we are unable to reasonably avoid content dependency at the moment.

        :param vendor_item_index: The vendor_item_index of this DestinyEntitiesVendorsDestinyVendorSaleItemComponent.
        :type vendor_item_index: int
        """

        self._vendor_item_index = vendor_item_index
