# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash: int=None, index: int=None, max_category_record_score: int=None, parent_node_hashes: List[int]=None, presentation_node_type: int=None, redacted: bool=None, trait_hashes: List[int]=None, trait_ids: List[str]=None):
        """DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition - a model defined in OpenAPI

        :param hash: The hash of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :param index: The index of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :param max_category_record_score: The max_category_record_score of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :param parent_node_hashes: The parent_node_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :param presentation_node_type: The presentation_node_type of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :param redacted: The redacted of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :param trait_hashes: The trait_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :param trait_ids: The trait_ids of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        """
        self.openapi_types = {
            'hash': int,
            'index': int,
            'max_category_record_score': int,
            'parent_node_hashes': List[int],
            'presentation_node_type': int,
            'redacted': bool,
            'trait_hashes': List[int],
            'trait_ids': List[str]
        }

        self.attribute_map = {
            'hash': 'hash',
            'index': 'index',
            'max_category_record_score': 'maxCategoryRecordScore',
            'parent_node_hashes': 'parentNodeHashes',
            'presentation_node_type': 'presentationNodeType',
            'redacted': 'redacted',
            'trait_hashes': 'traitHashes',
            'trait_ids': 'traitIds'
        }

        self._hash = hash
        self._index = index
        self._max_category_record_score = max_category_record_score
        self._parent_node_hashes = parent_node_hashes
        self._presentation_node_type = presentation_node_type
        self._redacted = redacted
        self._trait_hashes = trait_hashes
        self._trait_ids = trait_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Presentation.DestinyScoredPresentationNodeBaseDefinition of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :type index: int
        """

        self._index = index

    @property
    def max_category_record_score(self):
        """Gets the max_category_record_score of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.


        :return: The max_category_record_score of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :rtype: int
        """
        return self._max_category_record_score

    @max_category_record_score.setter
    def max_category_record_score(self, max_category_record_score):
        """Sets the max_category_record_score of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.


        :param max_category_record_score: The max_category_record_score of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :type max_category_record_score: int
        """

        self._max_category_record_score = max_category_record_score

    @property
    def parent_node_hashes(self):
        """Gets the parent_node_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.

        A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.

        :return: The parent_node_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :rtype: List[int]
        """
        return self._parent_node_hashes

    @parent_node_hashes.setter
    def parent_node_hashes(self, parent_node_hashes):
        """Sets the parent_node_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.

        A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.

        :param parent_node_hashes: The parent_node_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :type parent_node_hashes: List[int]
        """

        self._parent_node_hashes = parent_node_hashes

    @property
    def presentation_node_type(self):
        """Gets the presentation_node_type of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.


        :return: The presentation_node_type of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :rtype: int
        """
        return self._presentation_node_type

    @presentation_node_type.setter
    def presentation_node_type(self, presentation_node_type):
        """Sets the presentation_node_type of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.


        :param presentation_node_type: The presentation_node_type of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :type presentation_node_type: int
        """

        self._presentation_node_type = presentation_node_type

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def trait_hashes(self):
        """Gets the trait_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.


        :return: The trait_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :rtype: List[int]
        """
        return self._trait_hashes

    @trait_hashes.setter
    def trait_hashes(self, trait_hashes):
        """Sets the trait_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.


        :param trait_hashes: The trait_hashes of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :type trait_hashes: List[int]
        """

        self._trait_hashes = trait_hashes

    @property
    def trait_ids(self):
        """Gets the trait_ids of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.


        :return: The trait_ids of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :rtype: List[str]
        """
        return self._trait_ids

    @trait_ids.setter
    def trait_ids(self, trait_ids):
        """Sets the trait_ids of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.


        :param trait_ids: The trait_ids of this DestinyDefinitionsPresentationDestinyScoredPresentationNodeBaseDefinition.
        :type trait_ids: List[str]
        """

        self._trait_ids = trait_ids
