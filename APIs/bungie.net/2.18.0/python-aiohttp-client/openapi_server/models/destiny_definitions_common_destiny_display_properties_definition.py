# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_icon_sequence_definition import DestinyDefinitionsCommonDestinyIconSequenceDefinition
from openapi_server import util


class DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, has_icon: bool=None, high_res_icon: str=None, icon: str=None, icon_sequences: List[DestinyDefinitionsCommonDestinyIconSequenceDefinition]=None, name: str=None):
        """DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition - a model defined in OpenAPI

        :param description: The description of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :param has_icon: The has_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :param high_res_icon: The high_res_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :param icon: The icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :param icon_sequences: The icon_sequences of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :param name: The name of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        """
        self.openapi_types = {
            'description': str,
            'has_icon': bool,
            'high_res_icon': str,
            'icon': str,
            'icon_sequences': List[DestinyDefinitionsCommonDestinyIconSequenceDefinition],
            'name': str
        }

        self.attribute_map = {
            'description': 'description',
            'has_icon': 'hasIcon',
            'high_res_icon': 'highResIcon',
            'icon': 'icon',
            'icon_sequences': 'iconSequences',
            'name': 'name'
        }

        self._description = description
        self._has_icon = has_icon
        self._high_res_icon = high_res_icon
        self._icon = icon
        self._icon_sequences = icon_sequences
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.


        :return: The description of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.


        :param description: The description of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :type description: str
        """

        self._description = description

    @property
    def has_icon(self):
        """Gets the has_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.


        :return: The has_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :rtype: bool
        """
        return self._has_icon

    @has_icon.setter
    def has_icon(self, has_icon):
        """Sets the has_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.


        :param has_icon: The has_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :type has_icon: bool
        """

        self._has_icon = has_icon

    @property
    def high_res_icon(self):
        """Gets the high_res_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.

        If this item has a high-res icon (at least for now, many things won't), then the path to that icon will be here.

        :return: The high_res_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :rtype: str
        """
        return self._high_res_icon

    @high_res_icon.setter
    def high_res_icon(self, high_res_icon):
        """Sets the high_res_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.

        If this item has a high-res icon (at least for now, many things won't), then the path to that icon will be here.

        :param high_res_icon: The high_res_icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :type high_res_icon: str
        """

        self._high_res_icon = high_res_icon

    @property
    def icon(self):
        """Gets the icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.

        Note that \"icon\" is sometimes misleading, and should be interpreted in the context of the entity. For instance, in Destiny 1 the DestinyRecordBookDefinition's icon was a big picture of a book.  But usually, it will be a small square image that you can use as... well, an icon.  They are currently represented as 96px x 96px images.

        :return: The icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.

        Note that \"icon\" is sometimes misleading, and should be interpreted in the context of the entity. For instance, in Destiny 1 the DestinyRecordBookDefinition's icon was a big picture of a book.  But usually, it will be a small square image that you can use as... well, an icon.  They are currently represented as 96px x 96px images.

        :param icon: The icon of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :type icon: str
        """

        self._icon = icon

    @property
    def icon_sequences(self):
        """Gets the icon_sequences of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.


        :return: The icon_sequences of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :rtype: List[DestinyDefinitionsCommonDestinyIconSequenceDefinition]
        """
        return self._icon_sequences

    @icon_sequences.setter
    def icon_sequences(self, icon_sequences):
        """Sets the icon_sequences of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.


        :param icon_sequences: The icon_sequences of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :type icon_sequences: List[DestinyDefinitionsCommonDestinyIconSequenceDefinition]
        """

        self._icon_sequences = icon_sequences

    @property
    def name(self):
        """Gets the name of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.


        :return: The name of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.


        :param name: The name of this DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.
        :type name: str
        """

        self._name = name
