# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_instance_component import DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_objectives_component import DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_perks_component import DictionaryComponentResponseOfint64AndDestinyItemPerksComponent
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_plug_objectives_component import DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_render_component import DictionaryComponentResponseOfint64AndDestinyItemRenderComponent
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_reusable_plugs_component import DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_sockets_component import DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_stats_component import DictionaryComponentResponseOfint64AndDestinyItemStatsComponent
from openapi_server.models.dictionary_component_response_ofint64_and_destiny_item_talent_grid_component import DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent
from openapi_server.models.dictionary_component_response_ofuint32_and_destiny_item_plug_component import DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent
from openapi_server import util


class DestinyItemComponentSetOfint64(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instances: DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent=None, objectives: DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent=None, perks: DictionaryComponentResponseOfint64AndDestinyItemPerksComponent=None, plug_objectives: DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent=None, plug_states: DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent=None, render_data: DictionaryComponentResponseOfint64AndDestinyItemRenderComponent=None, reusable_plugs: DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent=None, sockets: DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent=None, stats: DictionaryComponentResponseOfint64AndDestinyItemStatsComponent=None, talent_grids: DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent=None):
        """DestinyItemComponentSetOfint64 - a model defined in OpenAPI

        :param instances: The instances of this DestinyItemComponentSetOfint64.
        :param objectives: The objectives of this DestinyItemComponentSetOfint64.
        :param perks: The perks of this DestinyItemComponentSetOfint64.
        :param plug_objectives: The plug_objectives of this DestinyItemComponentSetOfint64.
        :param plug_states: The plug_states of this DestinyItemComponentSetOfint64.
        :param render_data: The render_data of this DestinyItemComponentSetOfint64.
        :param reusable_plugs: The reusable_plugs of this DestinyItemComponentSetOfint64.
        :param sockets: The sockets of this DestinyItemComponentSetOfint64.
        :param stats: The stats of this DestinyItemComponentSetOfint64.
        :param talent_grids: The talent_grids of this DestinyItemComponentSetOfint64.
        """
        self.openapi_types = {
            'instances': DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent,
            'objectives': DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent,
            'perks': DictionaryComponentResponseOfint64AndDestinyItemPerksComponent,
            'plug_objectives': DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent,
            'plug_states': DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent,
            'render_data': DictionaryComponentResponseOfint64AndDestinyItemRenderComponent,
            'reusable_plugs': DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent,
            'sockets': DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent,
            'stats': DictionaryComponentResponseOfint64AndDestinyItemStatsComponent,
            'talent_grids': DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent
        }

        self.attribute_map = {
            'instances': 'instances',
            'objectives': 'objectives',
            'perks': 'perks',
            'plug_objectives': 'plugObjectives',
            'plug_states': 'plugStates',
            'render_data': 'renderData',
            'reusable_plugs': 'reusablePlugs',
            'sockets': 'sockets',
            'stats': 'stats',
            'talent_grids': 'talentGrids'
        }

        self._instances = instances
        self._objectives = objectives
        self._perks = perks
        self._plug_objectives = plug_objectives
        self._plug_states = plug_states
        self._render_data = render_data
        self._reusable_plugs = reusable_plugs
        self._sockets = sockets
        self._stats = stats
        self._talent_grids = talent_grids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyItemComponentSetOfint64':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DestinyItemComponentSetOfint64 of this DestinyItemComponentSetOfint64.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instances(self):
        """Gets the instances of this DestinyItemComponentSetOfint64.


        :return: The instances of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this DestinyItemComponentSetOfint64.


        :param instances: The instances of this DestinyItemComponentSetOfint64.
        :type instances: DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent
        """

        self._instances = instances

    @property
    def objectives(self):
        """Gets the objectives of this DestinyItemComponentSetOfint64.


        :return: The objectives of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent
        """
        return self._objectives

    @objectives.setter
    def objectives(self, objectives):
        """Sets the objectives of this DestinyItemComponentSetOfint64.


        :param objectives: The objectives of this DestinyItemComponentSetOfint64.
        :type objectives: DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent
        """

        self._objectives = objectives

    @property
    def perks(self):
        """Gets the perks of this DestinyItemComponentSetOfint64.


        :return: The perks of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemPerksComponent
        """
        return self._perks

    @perks.setter
    def perks(self, perks):
        """Sets the perks of this DestinyItemComponentSetOfint64.


        :param perks: The perks of this DestinyItemComponentSetOfint64.
        :type perks: DictionaryComponentResponseOfint64AndDestinyItemPerksComponent
        """

        self._perks = perks

    @property
    def plug_objectives(self):
        """Gets the plug_objectives of this DestinyItemComponentSetOfint64.


        :return: The plug_objectives of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent
        """
        return self._plug_objectives

    @plug_objectives.setter
    def plug_objectives(self, plug_objectives):
        """Sets the plug_objectives of this DestinyItemComponentSetOfint64.


        :param plug_objectives: The plug_objectives of this DestinyItemComponentSetOfint64.
        :type plug_objectives: DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent
        """

        self._plug_objectives = plug_objectives

    @property
    def plug_states(self):
        """Gets the plug_states of this DestinyItemComponentSetOfint64.


        :return: The plug_states of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent
        """
        return self._plug_states

    @plug_states.setter
    def plug_states(self, plug_states):
        """Sets the plug_states of this DestinyItemComponentSetOfint64.


        :param plug_states: The plug_states of this DestinyItemComponentSetOfint64.
        :type plug_states: DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent
        """

        self._plug_states = plug_states

    @property
    def render_data(self):
        """Gets the render_data of this DestinyItemComponentSetOfint64.


        :return: The render_data of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemRenderComponent
        """
        return self._render_data

    @render_data.setter
    def render_data(self, render_data):
        """Sets the render_data of this DestinyItemComponentSetOfint64.


        :param render_data: The render_data of this DestinyItemComponentSetOfint64.
        :type render_data: DictionaryComponentResponseOfint64AndDestinyItemRenderComponent
        """

        self._render_data = render_data

    @property
    def reusable_plugs(self):
        """Gets the reusable_plugs of this DestinyItemComponentSetOfint64.


        :return: The reusable_plugs of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent
        """
        return self._reusable_plugs

    @reusable_plugs.setter
    def reusable_plugs(self, reusable_plugs):
        """Sets the reusable_plugs of this DestinyItemComponentSetOfint64.


        :param reusable_plugs: The reusable_plugs of this DestinyItemComponentSetOfint64.
        :type reusable_plugs: DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent
        """

        self._reusable_plugs = reusable_plugs

    @property
    def sockets(self):
        """Gets the sockets of this DestinyItemComponentSetOfint64.


        :return: The sockets of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent
        """
        return self._sockets

    @sockets.setter
    def sockets(self, sockets):
        """Sets the sockets of this DestinyItemComponentSetOfint64.


        :param sockets: The sockets of this DestinyItemComponentSetOfint64.
        :type sockets: DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent
        """

        self._sockets = sockets

    @property
    def stats(self):
        """Gets the stats of this DestinyItemComponentSetOfint64.


        :return: The stats of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemStatsComponent
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this DestinyItemComponentSetOfint64.


        :param stats: The stats of this DestinyItemComponentSetOfint64.
        :type stats: DictionaryComponentResponseOfint64AndDestinyItemStatsComponent
        """

        self._stats = stats

    @property
    def talent_grids(self):
        """Gets the talent_grids of this DestinyItemComponentSetOfint64.


        :return: The talent_grids of this DestinyItemComponentSetOfint64.
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent
        """
        return self._talent_grids

    @talent_grids.setter
    def talent_grids(self, talent_grids):
        """Sets the talent_grids of this DestinyItemComponentSetOfint64.


        :param talent_grids: The talent_grids of this DestinyItemComponentSetOfint64.
        :type talent_grids: DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent
        """

        self._talent_grids = talent_grids
