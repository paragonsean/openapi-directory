# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_destiny_progression import DestinyDestinyProgression
from openapi_server.models.destiny_misc_destiny_color import DestinyMiscDestinyColor
from openapi_server import util


class DestinyEntitiesCharactersDestinyCharacterComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_character_level: int=None, character_id: int=None, class_hash: int=None, class_type: int=None, date_last_played: datetime=None, emblem_background_path: str=None, emblem_color: DestinyMiscDestinyColor=None, emblem_hash: int=None, emblem_path: str=None, gender_hash: int=None, gender_type: int=None, level_progression: DestinyDestinyProgression=None, light: int=None, membership_id: int=None, membership_type: int=None, minutes_played_this_session: int=None, minutes_played_total: int=None, percent_to_next_level: float=None, race_hash: int=None, race_type: int=None, stats: Dict[str, int]=None, title_record_hash: int=None):
        """DestinyEntitiesCharactersDestinyCharacterComponent - a model defined in OpenAPI

        :param base_character_level: The base_character_level of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param character_id: The character_id of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param class_hash: The class_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param class_type: The class_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param date_last_played: The date_last_played of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param emblem_background_path: The emblem_background_path of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param emblem_color: The emblem_color of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param emblem_hash: The emblem_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param emblem_path: The emblem_path of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param gender_hash: The gender_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param gender_type: The gender_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param level_progression: The level_progression of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param light: The light of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param membership_id: The membership_id of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param membership_type: The membership_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param minutes_played_this_session: The minutes_played_this_session of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param minutes_played_total: The minutes_played_total of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param percent_to_next_level: The percent_to_next_level of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param race_hash: The race_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param race_type: The race_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param stats: The stats of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :param title_record_hash: The title_record_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        """
        self.openapi_types = {
            'base_character_level': int,
            'character_id': int,
            'class_hash': int,
            'class_type': int,
            'date_last_played': datetime,
            'emblem_background_path': str,
            'emblem_color': DestinyMiscDestinyColor,
            'emblem_hash': int,
            'emblem_path': str,
            'gender_hash': int,
            'gender_type': int,
            'level_progression': DestinyDestinyProgression,
            'light': int,
            'membership_id': int,
            'membership_type': int,
            'minutes_played_this_session': int,
            'minutes_played_total': int,
            'percent_to_next_level': float,
            'race_hash': int,
            'race_type': int,
            'stats': Dict[str, int],
            'title_record_hash': int
        }

        self.attribute_map = {
            'base_character_level': 'baseCharacterLevel',
            'character_id': 'characterId',
            'class_hash': 'classHash',
            'class_type': 'classType',
            'date_last_played': 'dateLastPlayed',
            'emblem_background_path': 'emblemBackgroundPath',
            'emblem_color': 'emblemColor',
            'emblem_hash': 'emblemHash',
            'emblem_path': 'emblemPath',
            'gender_hash': 'genderHash',
            'gender_type': 'genderType',
            'level_progression': 'levelProgression',
            'light': 'light',
            'membership_id': 'membershipId',
            'membership_type': 'membershipType',
            'minutes_played_this_session': 'minutesPlayedThisSession',
            'minutes_played_total': 'minutesPlayedTotal',
            'percent_to_next_level': 'percentToNextLevel',
            'race_hash': 'raceHash',
            'race_type': 'raceType',
            'stats': 'stats',
            'title_record_hash': 'titleRecordHash'
        }

        self._base_character_level = base_character_level
        self._character_id = character_id
        self._class_hash = class_hash
        self._class_type = class_type
        self._date_last_played = date_last_played
        self._emblem_background_path = emblem_background_path
        self._emblem_color = emblem_color
        self._emblem_hash = emblem_hash
        self._emblem_path = emblem_path
        self._gender_hash = gender_hash
        self._gender_type = gender_type
        self._level_progression = level_progression
        self._light = light
        self._membership_id = membership_id
        self._membership_type = membership_type
        self._minutes_played_this_session = minutes_played_this_session
        self._minutes_played_total = minutes_played_total
        self._percent_to_next_level = percent_to_next_level
        self._race_hash = race_hash
        self._race_type = race_type
        self._stats = stats
        self._title_record_hash = title_record_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyEntitiesCharactersDestinyCharacterComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Entities.Characters.DestinyCharacterComponent of this DestinyEntitiesCharactersDestinyCharacterComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_character_level(self):
        """Gets the base_character_level of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The \"base\" level of your character, not accounting for any light level.

        :return: The base_character_level of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._base_character_level

    @base_character_level.setter
    def base_character_level(self, base_character_level):
        """Sets the base_character_level of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The \"base\" level of your character, not accounting for any light level.

        :param base_character_level: The base_character_level of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type base_character_level: int
        """

        self._base_character_level = base_character_level

    @property
    def character_id(self):
        """Gets the character_id of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The unique identifier for the character.

        :return: The character_id of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._character_id

    @character_id.setter
    def character_id(self, character_id):
        """Sets the character_id of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The unique identifier for the character.

        :param character_id: The character_id of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type character_id: int
        """

        self._character_id = character_id

    @property
    def class_hash(self):
        """Gets the class_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Use this hash to look up the character's DestinyClassDefinition.

        :return: The class_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._class_hash

    @class_hash.setter
    def class_hash(self, class_hash):
        """Sets the class_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Use this hash to look up the character's DestinyClassDefinition.

        :param class_hash: The class_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type class_hash: int
        """

        self._class_hash = class_hash

    @property
    def class_type(self):
        """Gets the class_type of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Mostly for historical purposes at this point, this is an enumeration for the character's class.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.

        :return: The class_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._class_type

    @class_type.setter
    def class_type(self, class_type):
        """Sets the class_type of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Mostly for historical purposes at this point, this is an enumeration for the character's class.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.

        :param class_type: The class_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type class_type: int
        """

        self._class_type = class_type

    @property
    def date_last_played(self):
        """Gets the date_last_played of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The last date that the user played Destiny.

        :return: The date_last_played of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: datetime
        """
        return self._date_last_played

    @date_last_played.setter
    def date_last_played(self, date_last_played):
        """Sets the date_last_played of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The last date that the user played Destiny.

        :param date_last_played: The date_last_played of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type date_last_played: datetime
        """

        self._date_last_played = date_last_played

    @property
    def emblem_background_path(self):
        """Gets the emblem_background_path of this DestinyEntitiesCharactersDestinyCharacterComponent.

        A shortcut path to the user's currently equipped emblem background image. If you're just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.

        :return: The emblem_background_path of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: str
        """
        return self._emblem_background_path

    @emblem_background_path.setter
    def emblem_background_path(self, emblem_background_path):
        """Sets the emblem_background_path of this DestinyEntitiesCharactersDestinyCharacterComponent.

        A shortcut path to the user's currently equipped emblem background image. If you're just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.

        :param emblem_background_path: The emblem_background_path of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type emblem_background_path: str
        """

        self._emblem_background_path = emblem_background_path

    @property
    def emblem_color(self):
        """Gets the emblem_color of this DestinyEntitiesCharactersDestinyCharacterComponent.

        A shortcut for getting the background color of the user's currently equipped emblem without having to do a DestinyInventoryItemDefinition lookup.

        :return: The emblem_color of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: DestinyMiscDestinyColor
        """
        return self._emblem_color

    @emblem_color.setter
    def emblem_color(self, emblem_color):
        """Sets the emblem_color of this DestinyEntitiesCharactersDestinyCharacterComponent.

        A shortcut for getting the background color of the user's currently equipped emblem without having to do a DestinyInventoryItemDefinition lookup.

        :param emblem_color: The emblem_color of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type emblem_color: DestinyMiscDestinyColor
        """

        self._emblem_color = emblem_color

    @property
    def emblem_hash(self):
        """Gets the emblem_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The hash of the currently equipped emblem for the user. Can be used to look up the DestinyInventoryItemDefinition.

        :return: The emblem_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._emblem_hash

    @emblem_hash.setter
    def emblem_hash(self, emblem_hash):
        """Sets the emblem_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The hash of the currently equipped emblem for the user. Can be used to look up the DestinyInventoryItemDefinition.

        :param emblem_hash: The emblem_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type emblem_hash: int
        """

        self._emblem_hash = emblem_hash

    @property
    def emblem_path(self):
        """Gets the emblem_path of this DestinyEntitiesCharactersDestinyCharacterComponent.

        A shortcut path to the user's currently equipped emblem image. If you're just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.

        :return: The emblem_path of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: str
        """
        return self._emblem_path

    @emblem_path.setter
    def emblem_path(self, emblem_path):
        """Sets the emblem_path of this DestinyEntitiesCharactersDestinyCharacterComponent.

        A shortcut path to the user's currently equipped emblem image. If you're just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.

        :param emblem_path: The emblem_path of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type emblem_path: str
        """

        self._emblem_path = emblem_path

    @property
    def gender_hash(self):
        """Gets the gender_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Use this hash to look up the character's DestinyGenderDefinition.

        :return: The gender_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._gender_hash

    @gender_hash.setter
    def gender_hash(self, gender_hash):
        """Sets the gender_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Use this hash to look up the character's DestinyGenderDefinition.

        :param gender_hash: The gender_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type gender_hash: int
        """

        self._gender_hash = gender_hash

    @property
    def gender_type(self):
        """Gets the gender_type of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Mostly for historical purposes at this point, this is an enumeration for the character's Gender.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove. And yeah, it's an enumeration and not a boolean. Fight me.

        :return: The gender_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._gender_type

    @gender_type.setter
    def gender_type(self, gender_type):
        """Sets the gender_type of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Mostly for historical purposes at this point, this is an enumeration for the character's Gender.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove. And yeah, it's an enumeration and not a boolean. Fight me.

        :param gender_type: The gender_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type gender_type: int
        """

        self._gender_type = gender_type

    @property
    def level_progression(self):
        """Gets the level_progression of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The progression that indicates your character's level. Not their light level, but their character level: you know, the thing you max out a couple hours in and then ignore for the sake of light level.

        :return: The level_progression of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: DestinyDestinyProgression
        """
        return self._level_progression

    @level_progression.setter
    def level_progression(self, level_progression):
        """Sets the level_progression of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The progression that indicates your character's level. Not their light level, but their character level: you know, the thing you max out a couple hours in and then ignore for the sake of light level.

        :param level_progression: The level_progression of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type level_progression: DestinyDestinyProgression
        """

        self._level_progression = level_progression

    @property
    def light(self):
        """Gets the light of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The user's calculated \"Light Level\". Light level is an indicator of your power that mostly matters in the end game, once you've reached the maximum character level: it's a level that's dependent on the average Attack/Defense power of your items.

        :return: The light of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._light

    @light.setter
    def light(self, light):
        """Sets the light of this DestinyEntitiesCharactersDestinyCharacterComponent.

        The user's calculated \"Light Level\". Light level is an indicator of your power that mostly matters in the end game, once you've reached the maximum character level: it's a level that's dependent on the average Attack/Defense power of your items.

        :param light: The light of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type light: int
        """

        self._light = light

    @property
    def membership_id(self):
        """Gets the membership_id of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Every Destiny Profile has a membershipId. This is provided on the character as well for convenience.

        :return: The membership_id of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._membership_id

    @membership_id.setter
    def membership_id(self, membership_id):
        """Sets the membership_id of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Every Destiny Profile has a membershipId. This is provided on the character as well for convenience.

        :param membership_id: The membership_id of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type membership_id: int
        """

        self._membership_id = membership_id

    @property
    def membership_type(self):
        """Gets the membership_type of this DestinyEntitiesCharactersDestinyCharacterComponent.

        membershipType tells you the platform on which the character plays. Examine the BungieMembershipType enumeration for possible values.

        :return: The membership_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._membership_type

    @membership_type.setter
    def membership_type(self, membership_type):
        """Sets the membership_type of this DestinyEntitiesCharactersDestinyCharacterComponent.

        membershipType tells you the platform on which the character plays. Examine the BungieMembershipType enumeration for possible values.

        :param membership_type: The membership_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type membership_type: int
        """

        self._membership_type = membership_type

    @property
    def minutes_played_this_session(self):
        """Gets the minutes_played_this_session of this DestinyEntitiesCharactersDestinyCharacterComponent.

        If the user is currently playing, this is how long they've been playing.

        :return: The minutes_played_this_session of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._minutes_played_this_session

    @minutes_played_this_session.setter
    def minutes_played_this_session(self, minutes_played_this_session):
        """Sets the minutes_played_this_session of this DestinyEntitiesCharactersDestinyCharacterComponent.

        If the user is currently playing, this is how long they've been playing.

        :param minutes_played_this_session: The minutes_played_this_session of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type minutes_played_this_session: int
        """

        self._minutes_played_this_session = minutes_played_this_session

    @property
    def minutes_played_total(self):
        """Gets the minutes_played_total of this DestinyEntitiesCharactersDestinyCharacterComponent.

        If this value is 525,600, then they played Destiny for a year. Or they're a very dedicated Rent fan. Note that this includes idle time, not just time spent actually in activities shooting things.

        :return: The minutes_played_total of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._minutes_played_total

    @minutes_played_total.setter
    def minutes_played_total(self, minutes_played_total):
        """Sets the minutes_played_total of this DestinyEntitiesCharactersDestinyCharacterComponent.

        If this value is 525,600, then they played Destiny for a year. Or they're a very dedicated Rent fan. Note that this includes idle time, not just time spent actually in activities shooting things.

        :param minutes_played_total: The minutes_played_total of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type minutes_played_total: int
        """

        self._minutes_played_total = minutes_played_total

    @property
    def percent_to_next_level(self):
        """Gets the percent_to_next_level of this DestinyEntitiesCharactersDestinyCharacterComponent.

        A number between 0 and 100, indicating the whole and fractional % remaining to get to the next character level.

        :return: The percent_to_next_level of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: float
        """
        return self._percent_to_next_level

    @percent_to_next_level.setter
    def percent_to_next_level(self, percent_to_next_level):
        """Sets the percent_to_next_level of this DestinyEntitiesCharactersDestinyCharacterComponent.

        A number between 0 and 100, indicating the whole and fractional % remaining to get to the next character level.

        :param percent_to_next_level: The percent_to_next_level of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type percent_to_next_level: float
        """

        self._percent_to_next_level = percent_to_next_level

    @property
    def race_hash(self):
        """Gets the race_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Use this hash to look up the character's DestinyRaceDefinition.

        :return: The race_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._race_hash

    @race_hash.setter
    def race_hash(self, race_hash):
        """Sets the race_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Use this hash to look up the character's DestinyRaceDefinition.

        :param race_hash: The race_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type race_hash: int
        """

        self._race_hash = race_hash

    @property
    def race_type(self):
        """Gets the race_type of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Mostly for historical purposes at this point, this is an enumeration for the character's race.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.

        :return: The race_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._race_type

    @race_type.setter
    def race_type(self, race_type):
        """Sets the race_type of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Mostly for historical purposes at this point, this is an enumeration for the character's race.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.

        :param race_type: The race_type of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type race_type: int
        """

        self._race_type = race_type

    @property
    def stats(self):
        """Gets the stats of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Your character's stats, such as Agility, Resilience, etc... *not* historical stats.  You'll have to call a different endpoint for those.

        :return: The stats of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: Dict[str, int]
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this DestinyEntitiesCharactersDestinyCharacterComponent.

        Your character's stats, such as Agility, Resilience, etc... *not* historical stats.  You'll have to call a different endpoint for those.

        :param stats: The stats of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type stats: Dict[str, int]
        """

        self._stats = stats

    @property
    def title_record_hash(self):
        """Gets the title_record_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        If this Character has a title assigned to it, this is the identifier of the DestinyRecordDefinition that has that title information.

        :return: The title_record_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :rtype: int
        """
        return self._title_record_hash

    @title_record_hash.setter
    def title_record_hash(self, title_record_hash):
        """Sets the title_record_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.

        If this Character has a title assigned to it, this is the identifier of the DestinyRecordDefinition that has that title information.

        :param title_record_hash: The title_record_hash of this DestinyEntitiesCharactersDestinyCharacterComponent.
        :type title_record_hash: int
        """

        self._title_record_hash = title_record_hash
