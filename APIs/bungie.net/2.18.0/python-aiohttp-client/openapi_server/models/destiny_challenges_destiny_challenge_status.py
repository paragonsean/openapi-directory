# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_quests_destiny_objective_progress import DestinyQuestsDestinyObjectiveProgress
from openapi_server import util


class DestinyChallengesDestinyChallengeStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, objective: DestinyQuestsDestinyObjectiveProgress=None):
        """DestinyChallengesDestinyChallengeStatus - a model defined in OpenAPI

        :param objective: The objective of this DestinyChallengesDestinyChallengeStatus.
        """
        self.openapi_types = {
            'objective': DestinyQuestsDestinyObjectiveProgress
        }

        self.attribute_map = {
            'objective': 'objective'
        }

        self._objective = objective

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyChallengesDestinyChallengeStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Challenges.DestinyChallengeStatus of this DestinyChallengesDestinyChallengeStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def objective(self):
        """Gets the objective of this DestinyChallengesDestinyChallengeStatus.

        The progress - including completion status - of the active challenge.

        :return: The objective of this DestinyChallengesDestinyChallengeStatus.
        :rtype: DestinyQuestsDestinyObjectiveProgress
        """
        return self._objective

    @objective.setter
    def objective(self, objective):
        """Sets the objective of this DestinyChallengesDestinyChallengeStatus.

        The progress - including completion status - of the active challenge.

        :param objective: The objective of this DestinyChallengesDestinyChallengeStatus.
        :type objective: DestinyQuestsDestinyObjectiveProgress
        """

        self._objective = objective
