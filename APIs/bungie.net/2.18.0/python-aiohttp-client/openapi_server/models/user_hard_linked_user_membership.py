# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserHardLinkedUserMembership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cross_save_overridden_membership_id: int=None, cross_save_overridden_type: int=None, membership_id: int=None, membership_type: int=None):
        """UserHardLinkedUserMembership - a model defined in OpenAPI

        :param cross_save_overridden_membership_id: The cross_save_overridden_membership_id of this UserHardLinkedUserMembership.
        :param cross_save_overridden_type: The cross_save_overridden_type of this UserHardLinkedUserMembership.
        :param membership_id: The membership_id of this UserHardLinkedUserMembership.
        :param membership_type: The membership_type of this UserHardLinkedUserMembership.
        """
        self.openapi_types = {
            'cross_save_overridden_membership_id': int,
            'cross_save_overridden_type': int,
            'membership_id': int,
            'membership_type': int
        }

        self.attribute_map = {
            'cross_save_overridden_membership_id': 'CrossSaveOverriddenMembershipId',
            'cross_save_overridden_type': 'CrossSaveOverriddenType',
            'membership_id': 'membershipId',
            'membership_type': 'membershipType'
        }

        self._cross_save_overridden_membership_id = cross_save_overridden_membership_id
        self._cross_save_overridden_type = cross_save_overridden_type
        self._membership_id = membership_id
        self._membership_type = membership_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserHardLinkedUserMembership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User.HardLinkedUserMembership of this UserHardLinkedUserMembership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cross_save_overridden_membership_id(self):
        """Gets the cross_save_overridden_membership_id of this UserHardLinkedUserMembership.


        :return: The cross_save_overridden_membership_id of this UserHardLinkedUserMembership.
        :rtype: int
        """
        return self._cross_save_overridden_membership_id

    @cross_save_overridden_membership_id.setter
    def cross_save_overridden_membership_id(self, cross_save_overridden_membership_id):
        """Sets the cross_save_overridden_membership_id of this UserHardLinkedUserMembership.


        :param cross_save_overridden_membership_id: The cross_save_overridden_membership_id of this UserHardLinkedUserMembership.
        :type cross_save_overridden_membership_id: int
        """

        self._cross_save_overridden_membership_id = cross_save_overridden_membership_id

    @property
    def cross_save_overridden_type(self):
        """Gets the cross_save_overridden_type of this UserHardLinkedUserMembership.


        :return: The cross_save_overridden_type of this UserHardLinkedUserMembership.
        :rtype: int
        """
        return self._cross_save_overridden_type

    @cross_save_overridden_type.setter
    def cross_save_overridden_type(self, cross_save_overridden_type):
        """Sets the cross_save_overridden_type of this UserHardLinkedUserMembership.


        :param cross_save_overridden_type: The cross_save_overridden_type of this UserHardLinkedUserMembership.
        :type cross_save_overridden_type: int
        """

        self._cross_save_overridden_type = cross_save_overridden_type

    @property
    def membership_id(self):
        """Gets the membership_id of this UserHardLinkedUserMembership.


        :return: The membership_id of this UserHardLinkedUserMembership.
        :rtype: int
        """
        return self._membership_id

    @membership_id.setter
    def membership_id(self, membership_id):
        """Sets the membership_id of this UserHardLinkedUserMembership.


        :param membership_id: The membership_id of this UserHardLinkedUserMembership.
        :type membership_id: int
        """

        self._membership_id = membership_id

    @property
    def membership_type(self):
        """Gets the membership_type of this UserHardLinkedUserMembership.


        :return: The membership_type of this UserHardLinkedUserMembership.
        :rtype: int
        """
        return self._membership_type

    @membership_type.setter
    def membership_type(self, membership_type):
        """Sets the membership_type of this UserHardLinkedUserMembership.


        :param membership_type: The membership_type of this UserHardLinkedUserMembership.
        :type membership_type: int
        """

        self._membership_type = membership_type
