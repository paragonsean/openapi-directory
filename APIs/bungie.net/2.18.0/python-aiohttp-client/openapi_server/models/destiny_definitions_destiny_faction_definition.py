# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_destiny_faction_vendor_definition import DestinyDefinitionsDestinyFactionVendorDefinition
from openapi_server import util


class DestinyDefinitionsDestinyFactionDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, progression_hash: int=None, redacted: bool=None, reward_item_hash: int=None, reward_vendor_hash: int=None, token_values: Dict[str, int]=None, vendors: List[DestinyDefinitionsDestinyFactionVendorDefinition]=None):
        """DestinyDefinitionsDestinyFactionDefinition - a model defined in OpenAPI

        :param display_properties: The display_properties of this DestinyDefinitionsDestinyFactionDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinyFactionDefinition.
        :param index: The index of this DestinyDefinitionsDestinyFactionDefinition.
        :param progression_hash: The progression_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinyFactionDefinition.
        :param reward_item_hash: The reward_item_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :param reward_vendor_hash: The reward_vendor_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :param token_values: The token_values of this DestinyDefinitionsDestinyFactionDefinition.
        :param vendors: The vendors of this DestinyDefinitionsDestinyFactionDefinition.
        """
        self.openapi_types = {
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'progression_hash': int,
            'redacted': bool,
            'reward_item_hash': int,
            'reward_vendor_hash': int,
            'token_values': Dict[str, int],
            'vendors': List[DestinyDefinitionsDestinyFactionVendorDefinition]
        }

        self.attribute_map = {
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'progression_hash': 'progressionHash',
            'redacted': 'redacted',
            'reward_item_hash': 'rewardItemHash',
            'reward_vendor_hash': 'rewardVendorHash',
            'token_values': 'tokenValues',
            'vendors': 'vendors'
        }

        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._progression_hash = progression_hash
        self._redacted = redacted
        self._reward_item_hash = reward_item_hash
        self._reward_vendor_hash = reward_vendor_hash
        self._token_values = token_values
        self._vendors = vendors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyFactionDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyFactionDefinition of this DestinyDefinitionsDestinyFactionDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinyFactionDefinition.


        :return: The display_properties of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinyFactionDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsDestinyFactionDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinyFactionDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinyFactionDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinyFactionDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinyFactionDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinyFactionDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinyFactionDefinition.
        :type index: int
        """

        self._index = index

    @property
    def progression_hash(self):
        """Gets the progression_hash of this DestinyDefinitionsDestinyFactionDefinition.

        The hash identifier for the DestinyProgressionDefinition that indicates the character's relationship with this faction in terms of experience and levels.

        :return: The progression_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: int
        """
        return self._progression_hash

    @progression_hash.setter
    def progression_hash(self, progression_hash):
        """Sets the progression_hash of this DestinyDefinitionsDestinyFactionDefinition.

        The hash identifier for the DestinyProgressionDefinition that indicates the character's relationship with this faction in terms of experience and levels.

        :param progression_hash: The progression_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :type progression_hash: int
        """

        self._progression_hash = progression_hash

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinyFactionDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinyFactionDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinyFactionDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def reward_item_hash(self):
        """Gets the reward_item_hash of this DestinyDefinitionsDestinyFactionDefinition.

        The faction reward item hash, usually an engram.

        :return: The reward_item_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: int
        """
        return self._reward_item_hash

    @reward_item_hash.setter
    def reward_item_hash(self, reward_item_hash):
        """Sets the reward_item_hash of this DestinyDefinitionsDestinyFactionDefinition.

        The faction reward item hash, usually an engram.

        :param reward_item_hash: The reward_item_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :type reward_item_hash: int
        """

        self._reward_item_hash = reward_item_hash

    @property
    def reward_vendor_hash(self):
        """Gets the reward_vendor_hash of this DestinyDefinitionsDestinyFactionDefinition.

        The faction reward vendor hash, used for faction engram previews.

        :return: The reward_vendor_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: int
        """
        return self._reward_vendor_hash

    @reward_vendor_hash.setter
    def reward_vendor_hash(self, reward_vendor_hash):
        """Sets the reward_vendor_hash of this DestinyDefinitionsDestinyFactionDefinition.

        The faction reward vendor hash, used for faction engram previews.

        :param reward_vendor_hash: The reward_vendor_hash of this DestinyDefinitionsDestinyFactionDefinition.
        :type reward_vendor_hash: int
        """

        self._reward_vendor_hash = reward_vendor_hash

    @property
    def token_values(self):
        """Gets the token_values of this DestinyDefinitionsDestinyFactionDefinition.

        The faction token item hashes, and their respective progression values.

        :return: The token_values of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: Dict[str, int]
        """
        return self._token_values

    @token_values.setter
    def token_values(self, token_values):
        """Sets the token_values of this DestinyDefinitionsDestinyFactionDefinition.

        The faction token item hashes, and their respective progression values.

        :param token_values: The token_values of this DestinyDefinitionsDestinyFactionDefinition.
        :type token_values: Dict[str, int]
        """

        self._token_values = token_values

    @property
    def vendors(self):
        """Gets the vendors of this DestinyDefinitionsDestinyFactionDefinition.

        List of vendors that are associated with this faction. The last vendor that passes the unlock flag checks is the one that should be shown.

        :return: The vendors of this DestinyDefinitionsDestinyFactionDefinition.
        :rtype: List[DestinyDefinitionsDestinyFactionVendorDefinition]
        """
        return self._vendors

    @vendors.setter
    def vendors(self, vendors):
        """Sets the vendors of this DestinyDefinitionsDestinyFactionDefinition.

        List of vendors that are associated with this faction. The last vendor that passes the unlock flag checks is the one that should be shown.

        :param vendors: The vendors of this DestinyDefinitionsDestinyFactionDefinition.
        :type vendors: List[DestinyDefinitionsDestinyFactionVendorDefinition]
        """

        self._vendors = vendors
