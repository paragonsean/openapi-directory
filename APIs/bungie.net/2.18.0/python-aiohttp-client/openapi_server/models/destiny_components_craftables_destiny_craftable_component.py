# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_components_craftables_destiny_craftable_socket_component import DestinyComponentsCraftablesDestinyCraftableSocketComponent
from openapi_server import util


class DestinyComponentsCraftablesDestinyCraftableComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failed_requirement_indexes: List[int]=None, sockets: List[DestinyComponentsCraftablesDestinyCraftableSocketComponent]=None, visible: bool=None):
        """DestinyComponentsCraftablesDestinyCraftableComponent - a model defined in OpenAPI

        :param failed_requirement_indexes: The failed_requirement_indexes of this DestinyComponentsCraftablesDestinyCraftableComponent.
        :param sockets: The sockets of this DestinyComponentsCraftablesDestinyCraftableComponent.
        :param visible: The visible of this DestinyComponentsCraftablesDestinyCraftableComponent.
        """
        self.openapi_types = {
            'failed_requirement_indexes': List[int],
            'sockets': List[DestinyComponentsCraftablesDestinyCraftableSocketComponent],
            'visible': bool
        }

        self.attribute_map = {
            'failed_requirement_indexes': 'failedRequirementIndexes',
            'sockets': 'sockets',
            'visible': 'visible'
        }

        self._failed_requirement_indexes = failed_requirement_indexes
        self._sockets = sockets
        self._visible = visible

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyComponentsCraftablesDestinyCraftableComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Components.Craftables.DestinyCraftableComponent of this DestinyComponentsCraftablesDestinyCraftableComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failed_requirement_indexes(self):
        """Gets the failed_requirement_indexes of this DestinyComponentsCraftablesDestinyCraftableComponent.

        If the requirements are not met for crafting this item, these will index into the list of failure strings.

        :return: The failed_requirement_indexes of this DestinyComponentsCraftablesDestinyCraftableComponent.
        :rtype: List[int]
        """
        return self._failed_requirement_indexes

    @failed_requirement_indexes.setter
    def failed_requirement_indexes(self, failed_requirement_indexes):
        """Sets the failed_requirement_indexes of this DestinyComponentsCraftablesDestinyCraftableComponent.

        If the requirements are not met for crafting this item, these will index into the list of failure strings.

        :param failed_requirement_indexes: The failed_requirement_indexes of this DestinyComponentsCraftablesDestinyCraftableComponent.
        :type failed_requirement_indexes: List[int]
        """

        self._failed_requirement_indexes = failed_requirement_indexes

    @property
    def sockets(self):
        """Gets the sockets of this DestinyComponentsCraftablesDestinyCraftableComponent.

        Plug item state for the crafting sockets.

        :return: The sockets of this DestinyComponentsCraftablesDestinyCraftableComponent.
        :rtype: List[DestinyComponentsCraftablesDestinyCraftableSocketComponent]
        """
        return self._sockets

    @sockets.setter
    def sockets(self, sockets):
        """Sets the sockets of this DestinyComponentsCraftablesDestinyCraftableComponent.

        Plug item state for the crafting sockets.

        :param sockets: The sockets of this DestinyComponentsCraftablesDestinyCraftableComponent.
        :type sockets: List[DestinyComponentsCraftablesDestinyCraftableSocketComponent]
        """

        self._sockets = sockets

    @property
    def visible(self):
        """Gets the visible of this DestinyComponentsCraftablesDestinyCraftableComponent.


        :return: The visible of this DestinyComponentsCraftablesDestinyCraftableComponent.
        :rtype: bool
        """
        return self._visible

    @visible.setter
    def visible(self, visible):
        """Sets the visible of this DestinyComponentsCraftablesDestinyCraftableComponent.


        :param visible: The visible of this DestinyComponentsCraftablesDestinyCraftableComponent.
        :type visible: bool
        """

        self._visible = visible
