# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_challenge_activity_graph_node_entry import DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_challenge_activity_phase import DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase
from openapi_server.models.destiny_definitions_milestones_destiny_milestone_challenge_definition import DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition
from openapi_server import util


class DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_graph_nodes: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry]=None, activity_hash: int=None, challenges: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition]=None, phases: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase]=None):
        """DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition - a model defined in OpenAPI

        :param activity_graph_nodes: The activity_graph_nodes of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :param activity_hash: The activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :param challenges: The challenges of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :param phases: The phases of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        """
        self.openapi_types = {
            'activity_graph_nodes': List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry],
            'activity_hash': int,
            'challenges': List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition],
            'phases': List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase]
        }

        self.attribute_map = {
            'activity_graph_nodes': 'activityGraphNodes',
            'activity_hash': 'activityHash',
            'challenges': 'challenges',
            'phases': 'phases'
        }

        self._activity_graph_nodes = activity_graph_nodes
        self._activity_hash = activity_hash
        self._challenges = challenges
        self._phases = phases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Milestones.DestinyMilestoneChallengeActivityDefinition of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_graph_nodes(self):
        """Gets the activity_graph_nodes of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.

        If the activity and its challenge is visible on any of these nodes, it will be returned.

        :return: The activity_graph_nodes of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :rtype: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry]
        """
        return self._activity_graph_nodes

    @activity_graph_nodes.setter
    def activity_graph_nodes(self, activity_graph_nodes):
        """Sets the activity_graph_nodes of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.

        If the activity and its challenge is visible on any of these nodes, it will be returned.

        :param activity_graph_nodes: The activity_graph_nodes of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :type activity_graph_nodes: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry]
        """

        self._activity_graph_nodes = activity_graph_nodes

    @property
    def activity_hash(self):
        """Gets the activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.

        The activity for which this challenge is active.

        :return: The activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :rtype: int
        """
        return self._activity_hash

    @activity_hash.setter
    def activity_hash(self, activity_hash):
        """Sets the activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.

        The activity for which this challenge is active.

        :param activity_hash: The activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :type activity_hash: int
        """

        self._activity_hash = activity_hash

    @property
    def challenges(self):
        """Gets the challenges of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.


        :return: The challenges of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :rtype: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition]
        """
        return self._challenges

    @challenges.setter
    def challenges(self, challenges):
        """Sets the challenges of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.


        :param challenges: The challenges of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :type challenges: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition]
        """

        self._challenges = challenges

    @property
    def phases(self):
        """Gets the phases of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.

        Phases related to this activity, if there are any.  These will be listed in the order in which they will appear in the actual activity.

        :return: The phases of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :rtype: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase]
        """
        return self._phases

    @phases.setter
    def phases(self, phases):
        """Sets the phases of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.

        Phases related to this activity, if there are any.  These will be listed in the order in which they will appear in the actual activity.

        :param phases: The phases of this DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.
        :type phases: List[DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase]
        """

        self._phases = phases
