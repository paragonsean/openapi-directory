# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_destiny_item_quantity import DestinyDestinyItemQuantity
from openapi_server import util


class DestinyActivitiesDestinyPublicActivityStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, challenge_objective_hashes: List[int]=None, modifier_hashes: List[int]=None, reward_tooltip_items: List[DestinyDestinyItemQuantity]=None):
        """DestinyActivitiesDestinyPublicActivityStatus - a model defined in OpenAPI

        :param challenge_objective_hashes: The challenge_objective_hashes of this DestinyActivitiesDestinyPublicActivityStatus.
        :param modifier_hashes: The modifier_hashes of this DestinyActivitiesDestinyPublicActivityStatus.
        :param reward_tooltip_items: The reward_tooltip_items of this DestinyActivitiesDestinyPublicActivityStatus.
        """
        self.openapi_types = {
            'challenge_objective_hashes': List[int],
            'modifier_hashes': List[int],
            'reward_tooltip_items': List[DestinyDestinyItemQuantity]
        }

        self.attribute_map = {
            'challenge_objective_hashes': 'challengeObjectiveHashes',
            'modifier_hashes': 'modifierHashes',
            'reward_tooltip_items': 'rewardTooltipItems'
        }

        self._challenge_objective_hashes = challenge_objective_hashes
        self._modifier_hashes = modifier_hashes
        self._reward_tooltip_items = reward_tooltip_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyActivitiesDestinyPublicActivityStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Activities.DestinyPublicActivityStatus of this DestinyActivitiesDestinyPublicActivityStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def challenge_objective_hashes(self):
        """Gets the challenge_objective_hashes of this DestinyActivitiesDestinyPublicActivityStatus.

        Active Challenges for the activity, if any - represented as hashes for DestinyObjectiveDefinitions.

        :return: The challenge_objective_hashes of this DestinyActivitiesDestinyPublicActivityStatus.
        :rtype: List[int]
        """
        return self._challenge_objective_hashes

    @challenge_objective_hashes.setter
    def challenge_objective_hashes(self, challenge_objective_hashes):
        """Sets the challenge_objective_hashes of this DestinyActivitiesDestinyPublicActivityStatus.

        Active Challenges for the activity, if any - represented as hashes for DestinyObjectiveDefinitions.

        :param challenge_objective_hashes: The challenge_objective_hashes of this DestinyActivitiesDestinyPublicActivityStatus.
        :type challenge_objective_hashes: List[int]
        """

        self._challenge_objective_hashes = challenge_objective_hashes

    @property
    def modifier_hashes(self):
        """Gets the modifier_hashes of this DestinyActivitiesDestinyPublicActivityStatus.

        The active modifiers on this activity, if any - represented as hashes for DestinyActivityModifierDefinitions.

        :return: The modifier_hashes of this DestinyActivitiesDestinyPublicActivityStatus.
        :rtype: List[int]
        """
        return self._modifier_hashes

    @modifier_hashes.setter
    def modifier_hashes(self, modifier_hashes):
        """Sets the modifier_hashes of this DestinyActivitiesDestinyPublicActivityStatus.

        The active modifiers on this activity, if any - represented as hashes for DestinyActivityModifierDefinitions.

        :param modifier_hashes: The modifier_hashes of this DestinyActivitiesDestinyPublicActivityStatus.
        :type modifier_hashes: List[int]
        """

        self._modifier_hashes = modifier_hashes

    @property
    def reward_tooltip_items(self):
        """Gets the reward_tooltip_items of this DestinyActivitiesDestinyPublicActivityStatus.

        If the activity itself provides any specific \"mock\" rewards, this will be the items and their quantity.  Why \"mock\", you ask? Because these are the rewards as they are represented in the tooltip of the Activity.  These are often pointers to fake items that look good in a tooltip, but represent an abstract concept of what you will get for a reward rather than the specific items you may obtain.

        :return: The reward_tooltip_items of this DestinyActivitiesDestinyPublicActivityStatus.
        :rtype: List[DestinyDestinyItemQuantity]
        """
        return self._reward_tooltip_items

    @reward_tooltip_items.setter
    def reward_tooltip_items(self, reward_tooltip_items):
        """Sets the reward_tooltip_items of this DestinyActivitiesDestinyPublicActivityStatus.

        If the activity itself provides any specific \"mock\" rewards, this will be the items and their quantity.  Why \"mock\", you ask? Because these are the rewards as they are represented in the tooltip of the Activity.  These are often pointers to fake items that look good in a tooltip, but represent an abstract concept of what you will get for a reward rather than the specific items you may obtain.

        :param reward_tooltip_items: The reward_tooltip_items of this DestinyActivitiesDestinyPublicActivityStatus.
        :type reward_tooltip_items: List[DestinyDestinyItemQuantity]
        """

        self._reward_tooltip_items = reward_tooltip_items
