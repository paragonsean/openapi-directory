# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentModelsContentPreview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_in_set: bool=None, name: str=None, path: str=None, set_nesting: int=None, set_tag: str=None, use_set_id: int=None):
        """ContentModelsContentPreview - a model defined in OpenAPI

        :param item_in_set: The item_in_set of this ContentModelsContentPreview.
        :param name: The name of this ContentModelsContentPreview.
        :param path: The path of this ContentModelsContentPreview.
        :param set_nesting: The set_nesting of this ContentModelsContentPreview.
        :param set_tag: The set_tag of this ContentModelsContentPreview.
        :param use_set_id: The use_set_id of this ContentModelsContentPreview.
        """
        self.openapi_types = {
            'item_in_set': bool,
            'name': str,
            'path': str,
            'set_nesting': int,
            'set_tag': str,
            'use_set_id': int
        }

        self.attribute_map = {
            'item_in_set': 'itemInSet',
            'name': 'name',
            'path': 'path',
            'set_nesting': 'setNesting',
            'set_tag': 'setTag',
            'use_set_id': 'useSetId'
        }

        self._item_in_set = item_in_set
        self._name = name
        self._path = path
        self._set_nesting = set_nesting
        self._set_tag = set_tag
        self._use_set_id = use_set_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentModelsContentPreview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Content.Models.ContentPreview of this ContentModelsContentPreview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_in_set(self):
        """Gets the item_in_set of this ContentModelsContentPreview.


        :return: The item_in_set of this ContentModelsContentPreview.
        :rtype: bool
        """
        return self._item_in_set

    @item_in_set.setter
    def item_in_set(self, item_in_set):
        """Sets the item_in_set of this ContentModelsContentPreview.


        :param item_in_set: The item_in_set of this ContentModelsContentPreview.
        :type item_in_set: bool
        """

        self._item_in_set = item_in_set

    @property
    def name(self):
        """Gets the name of this ContentModelsContentPreview.


        :return: The name of this ContentModelsContentPreview.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContentModelsContentPreview.


        :param name: The name of this ContentModelsContentPreview.
        :type name: str
        """

        self._name = name

    @property
    def path(self):
        """Gets the path of this ContentModelsContentPreview.


        :return: The path of this ContentModelsContentPreview.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ContentModelsContentPreview.


        :param path: The path of this ContentModelsContentPreview.
        :type path: str
        """

        self._path = path

    @property
    def set_nesting(self):
        """Gets the set_nesting of this ContentModelsContentPreview.


        :return: The set_nesting of this ContentModelsContentPreview.
        :rtype: int
        """
        return self._set_nesting

    @set_nesting.setter
    def set_nesting(self, set_nesting):
        """Sets the set_nesting of this ContentModelsContentPreview.


        :param set_nesting: The set_nesting of this ContentModelsContentPreview.
        :type set_nesting: int
        """

        self._set_nesting = set_nesting

    @property
    def set_tag(self):
        """Gets the set_tag of this ContentModelsContentPreview.


        :return: The set_tag of this ContentModelsContentPreview.
        :rtype: str
        """
        return self._set_tag

    @set_tag.setter
    def set_tag(self, set_tag):
        """Sets the set_tag of this ContentModelsContentPreview.


        :param set_tag: The set_tag of this ContentModelsContentPreview.
        :type set_tag: str
        """

        self._set_tag = set_tag

    @property
    def use_set_id(self):
        """Gets the use_set_id of this ContentModelsContentPreview.


        :return: The use_set_id of this ContentModelsContentPreview.
        :rtype: int
        """
        return self._use_set_id

    @use_set_id.setter
    def use_set_id(self, use_set_id):
        """Sets the use_set_id of this ContentModelsContentPreview.


        :param use_set_id: The use_set_id of this ContentModelsContentPreview.
        :type use_set_id: int
        """

        self._use_set_id = use_set_id
