# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entities_entity_action_result import EntitiesEntityActionResult
from openapi_server import util


class GroupV2ApproveAllPending200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detailed_error_trace: str=None, error_code: int=None, error_status: str=None, message: str=None, message_data: Dict[str, str]=None, response: List[EntitiesEntityActionResult]=None, throttle_seconds: int=None):
        """GroupV2ApproveAllPending200Response - a model defined in OpenAPI

        :param detailed_error_trace: The detailed_error_trace of this GroupV2ApproveAllPending200Response.
        :param error_code: The error_code of this GroupV2ApproveAllPending200Response.
        :param error_status: The error_status of this GroupV2ApproveAllPending200Response.
        :param message: The message of this GroupV2ApproveAllPending200Response.
        :param message_data: The message_data of this GroupV2ApproveAllPending200Response.
        :param response: The response of this GroupV2ApproveAllPending200Response.
        :param throttle_seconds: The throttle_seconds of this GroupV2ApproveAllPending200Response.
        """
        self.openapi_types = {
            'detailed_error_trace': str,
            'error_code': int,
            'error_status': str,
            'message': str,
            'message_data': Dict[str, str],
            'response': List[EntitiesEntityActionResult],
            'throttle_seconds': int
        }

        self.attribute_map = {
            'detailed_error_trace': 'DetailedErrorTrace',
            'error_code': 'ErrorCode',
            'error_status': 'ErrorStatus',
            'message': 'Message',
            'message_data': 'MessageData',
            'response': 'Response',
            'throttle_seconds': 'ThrottleSeconds'
        }

        self._detailed_error_trace = detailed_error_trace
        self._error_code = error_code
        self._error_status = error_status
        self._message = message
        self._message_data = message_data
        self._response = response
        self._throttle_seconds = throttle_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupV2ApproveAllPending200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupV2_ApproveAllPending_200_response of this GroupV2ApproveAllPending200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detailed_error_trace(self):
        """Gets the detailed_error_trace of this GroupV2ApproveAllPending200Response.


        :return: The detailed_error_trace of this GroupV2ApproveAllPending200Response.
        :rtype: str
        """
        return self._detailed_error_trace

    @detailed_error_trace.setter
    def detailed_error_trace(self, detailed_error_trace):
        """Sets the detailed_error_trace of this GroupV2ApproveAllPending200Response.


        :param detailed_error_trace: The detailed_error_trace of this GroupV2ApproveAllPending200Response.
        :type detailed_error_trace: str
        """

        self._detailed_error_trace = detailed_error_trace

    @property
    def error_code(self):
        """Gets the error_code of this GroupV2ApproveAllPending200Response.


        :return: The error_code of this GroupV2ApproveAllPending200Response.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this GroupV2ApproveAllPending200Response.


        :param error_code: The error_code of this GroupV2ApproveAllPending200Response.
        :type error_code: int
        """

        self._error_code = error_code

    @property
    def error_status(self):
        """Gets the error_status of this GroupV2ApproveAllPending200Response.


        :return: The error_status of this GroupV2ApproveAllPending200Response.
        :rtype: str
        """
        return self._error_status

    @error_status.setter
    def error_status(self, error_status):
        """Sets the error_status of this GroupV2ApproveAllPending200Response.


        :param error_status: The error_status of this GroupV2ApproveAllPending200Response.
        :type error_status: str
        """

        self._error_status = error_status

    @property
    def message(self):
        """Gets the message of this GroupV2ApproveAllPending200Response.


        :return: The message of this GroupV2ApproveAllPending200Response.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GroupV2ApproveAllPending200Response.


        :param message: The message of this GroupV2ApproveAllPending200Response.
        :type message: str
        """

        self._message = message

    @property
    def message_data(self):
        """Gets the message_data of this GroupV2ApproveAllPending200Response.


        :return: The message_data of this GroupV2ApproveAllPending200Response.
        :rtype: Dict[str, str]
        """
        return self._message_data

    @message_data.setter
    def message_data(self, message_data):
        """Sets the message_data of this GroupV2ApproveAllPending200Response.


        :param message_data: The message_data of this GroupV2ApproveAllPending200Response.
        :type message_data: Dict[str, str]
        """

        self._message_data = message_data

    @property
    def response(self):
        """Gets the response of this GroupV2ApproveAllPending200Response.


        :return: The response of this GroupV2ApproveAllPending200Response.
        :rtype: List[EntitiesEntityActionResult]
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this GroupV2ApproveAllPending200Response.


        :param response: The response of this GroupV2ApproveAllPending200Response.
        :type response: List[EntitiesEntityActionResult]
        """

        self._response = response

    @property
    def throttle_seconds(self):
        """Gets the throttle_seconds of this GroupV2ApproveAllPending200Response.


        :return: The throttle_seconds of this GroupV2ApproveAllPending200Response.
        :rtype: int
        """
        return self._throttle_seconds

    @throttle_seconds.setter
    def throttle_seconds(self, throttle_seconds):
        """Sets the throttle_seconds of this GroupV2ApproveAllPending200Response.


        :param throttle_seconds: The throttle_seconds of this GroupV2ApproveAllPending200Response.
        :type throttle_seconds: int
        """

        self._throttle_seconds = throttle_seconds
