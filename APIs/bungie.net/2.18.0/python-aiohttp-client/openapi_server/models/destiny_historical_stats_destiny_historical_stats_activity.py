# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyHistoricalStatsDestinyHistoricalStatsActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, director_activity_hash: int=None, instance_id: int=None, is_private: bool=None, membership_type: int=None, mode: int=None, modes: List[int]=None, reference_id: int=None):
        """DestinyHistoricalStatsDestinyHistoricalStatsActivity - a model defined in OpenAPI

        :param director_activity_hash: The director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :param instance_id: The instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :param is_private: The is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :param membership_type: The membership_type of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :param mode: The mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :param modes: The modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :param reference_id: The reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        """
        self.openapi_types = {
            'director_activity_hash': int,
            'instance_id': int,
            'is_private': bool,
            'membership_type': int,
            'mode': int,
            'modes': List[int],
            'reference_id': int
        }

        self.attribute_map = {
            'director_activity_hash': 'directorActivityHash',
            'instance_id': 'instanceId',
            'is_private': 'isPrivate',
            'membership_type': 'membershipType',
            'mode': 'mode',
            'modes': 'modes',
            'reference_id': 'referenceId'
        }

        self._director_activity_hash = director_activity_hash
        self._instance_id = instance_id
        self._is_private = is_private
        self._membership_type = membership_type
        self._mode = mode
        self._modes = modes
        self._reference_id = reference_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyHistoricalStatsDestinyHistoricalStatsActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.HistoricalStats.DestinyHistoricalStatsActivity of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def director_activity_hash(self):
        """Gets the director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique hash identifier of the DestinyActivityDefinition that was played.

        :return: The director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :rtype: int
        """
        return self._director_activity_hash

    @director_activity_hash.setter
    def director_activity_hash(self, director_activity_hash):
        """Sets the director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique hash identifier of the DestinyActivityDefinition that was played.

        :param director_activity_hash: The director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :type director_activity_hash: int
        """

        self._director_activity_hash = director_activity_hash

    @property
    def instance_id(self):
        """Gets the instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique identifier for this *specific* match that was played.  This value can be used to get additional data about this activity such as who else was playing via the GetPostGameCarnageReport endpoint.

        :return: The instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :rtype: int
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique identifier for this *specific* match that was played.  This value can be used to get additional data about this activity such as who else was playing via the GetPostGameCarnageReport endpoint.

        :param instance_id: The instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :type instance_id: int
        """

        self._instance_id = instance_id

    @property
    def is_private(self):
        """Gets the is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        Whether or not the match was a private match.

        :return: The is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :rtype: bool
        """
        return self._is_private

    @is_private.setter
    def is_private(self, is_private):
        """Sets the is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        Whether or not the match was a private match.

        :param is_private: The is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :type is_private: bool
        """

        self._is_private = is_private

    @property
    def membership_type(self):
        """Gets the membership_type of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The Membership Type indicating the platform on which this match was played.

        :return: The membership_type of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :rtype: int
        """
        return self._membership_type

    @membership_type.setter
    def membership_type(self, membership_type):
        """Sets the membership_type of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The Membership Type indicating the platform on which this match was played.

        :param membership_type: The membership_type of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :type membership_type: int
        """

        self._membership_type = membership_type

    @property
    def mode(self):
        """Gets the mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        Indicates the most specific game mode of the activity that we could find.

        :return: The mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :rtype: int
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        Indicates the most specific game mode of the activity that we could find.

        :param mode: The mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :type mode: int
        """

        self._mode = mode

    @property
    def modes(self):
        """Gets the modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The list of all Activity Modes to which this activity applies, including aggregates. This will let you see, for example, whether the activity was both Clash and part of the Trials of the Nine event.

        :return: The modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :rtype: List[int]
        """
        return self._modes

    @modes.setter
    def modes(self, modes):
        """Sets the modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The list of all Activity Modes to which this activity applies, including aggregates. This will let you see, for example, whether the activity was both Clash and part of the Trials of the Nine event.

        :param modes: The modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :type modes: List[int]
        """

        self._modes = modes

    @property
    def reference_id(self):
        """Gets the reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique hash identifier of the DestinyActivityDefinition that was played. If I had this to do over, it'd be named activityHash. Too late now.

        :return: The reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :rtype: int
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique hash identifier of the DestinyActivityDefinition that was played. If I had this to do over, it'd be named activityHash. Too late now.

        :param reference_id: The reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.
        :type reference_id: int
        """

        self._reference_id = reference_id
