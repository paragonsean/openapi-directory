# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_definitions_destiny_talent_node_step_groups import DestinyDefinitionsDestinyTalentNodeStepGroups
from openapi_server import util


class DestinyDefinitionsDestinySandboxPerkDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, damage_type: int=None, damage_type_hash: int=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, is_displayable: bool=None, perk_groups: DestinyDefinitionsDestinyTalentNodeStepGroups=None, perk_identifier: str=None, redacted: bool=None):
        """DestinyDefinitionsDestinySandboxPerkDefinition - a model defined in OpenAPI

        :param damage_type: The damage_type of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :param damage_type_hash: The damage_type_hash of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :param index: The index of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :param is_displayable: The is_displayable of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :param perk_groups: The perk_groups of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :param perk_identifier: The perk_identifier of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinySandboxPerkDefinition.
        """
        self.openapi_types = {
            'damage_type': int,
            'damage_type_hash': int,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'is_displayable': bool,
            'perk_groups': DestinyDefinitionsDestinyTalentNodeStepGroups,
            'perk_identifier': str,
            'redacted': bool
        }

        self.attribute_map = {
            'damage_type': 'damageType',
            'damage_type_hash': 'damageTypeHash',
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'is_displayable': 'isDisplayable',
            'perk_groups': 'perkGroups',
            'perk_identifier': 'perkIdentifier',
            'redacted': 'redacted'
        }

        self._damage_type = damage_type
        self._damage_type_hash = damage_type_hash
        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._is_displayable = is_displayable
        self._perk_groups = perk_groups
        self._perk_identifier = perk_identifier
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinySandboxPerkDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinySandboxPerkDefinition of this DestinyDefinitionsDestinySandboxPerkDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def damage_type(self):
        """Gets the damage_type of this DestinyDefinitionsDestinySandboxPerkDefinition.

        If this perk grants a damage type to a weapon, the damage type will be defined here.  Unless you have a compelling reason to use this enum value, use the damageTypeHash instead to look up the actual DestinyDamageTypeDefinition.

        :return: The damage_type of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: int
        """
        return self._damage_type

    @damage_type.setter
    def damage_type(self, damage_type):
        """Sets the damage_type of this DestinyDefinitionsDestinySandboxPerkDefinition.

        If this perk grants a damage type to a weapon, the damage type will be defined here.  Unless you have a compelling reason to use this enum value, use the damageTypeHash instead to look up the actual DestinyDamageTypeDefinition.

        :param damage_type: The damage_type of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type damage_type: int
        """

        self._damage_type = damage_type

    @property
    def damage_type_hash(self):
        """Gets the damage_type_hash of this DestinyDefinitionsDestinySandboxPerkDefinition.

        The hash identifier for looking up the DestinyDamageTypeDefinition, if this perk has a damage type.  This is preferred over using the damageType enumeration value, which has been left purely because it is occasionally convenient.

        :return: The damage_type_hash of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: int
        """
        return self._damage_type_hash

    @damage_type_hash.setter
    def damage_type_hash(self, damage_type_hash):
        """Sets the damage_type_hash of this DestinyDefinitionsDestinySandboxPerkDefinition.

        The hash identifier for looking up the DestinyDamageTypeDefinition, if this perk has a damage type.  This is preferred over using the damageType enumeration value, which has been left purely because it is occasionally convenient.

        :param damage_type_hash: The damage_type_hash of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type damage_type_hash: int
        """

        self._damage_type_hash = damage_type_hash

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinySandboxPerkDefinition.

        These display properties are by no means guaranteed to be populated. Usually when it is, it's only because we back-filled them with the displayProperties of some Talent Node or Plug item that happened to be uniquely providing that perk.

        :return: The display_properties of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinySandboxPerkDefinition.

        These display properties are by no means guaranteed to be populated. Usually when it is, it's only because we back-filled them with the displayProperties of some Talent Node or Plug item that happened to be uniquely providing that perk.

        :param display_properties: The display_properties of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinySandboxPerkDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinySandboxPerkDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinySandboxPerkDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinySandboxPerkDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type index: int
        """

        self._index = index

    @property
    def is_displayable(self):
        """Gets the is_displayable of this DestinyDefinitionsDestinySandboxPerkDefinition.

        If true, you can actually show the perk in the UI. Otherwise, it doesn't have useful player-facing information.

        :return: The is_displayable of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: bool
        """
        return self._is_displayable

    @is_displayable.setter
    def is_displayable(self, is_displayable):
        """Sets the is_displayable of this DestinyDefinitionsDestinySandboxPerkDefinition.

        If true, you can actually show the perk in the UI. Otherwise, it doesn't have useful player-facing information.

        :param is_displayable: The is_displayable of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type is_displayable: bool
        """

        self._is_displayable = is_displayable

    @property
    def perk_groups(self):
        """Gets the perk_groups of this DestinyDefinitionsDestinySandboxPerkDefinition.

        An old holdover from the original Armory, this was an attempt to group perks by functionality.  It is as yet unpopulated, and there will be quite a bit of work needed to restore it to its former working order.

        :return: The perk_groups of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: DestinyDefinitionsDestinyTalentNodeStepGroups
        """
        return self._perk_groups

    @perk_groups.setter
    def perk_groups(self, perk_groups):
        """Sets the perk_groups of this DestinyDefinitionsDestinySandboxPerkDefinition.

        An old holdover from the original Armory, this was an attempt to group perks by functionality.  It is as yet unpopulated, and there will be quite a bit of work needed to restore it to its former working order.

        :param perk_groups: The perk_groups of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type perk_groups: DestinyDefinitionsDestinyTalentNodeStepGroups
        """

        self._perk_groups = perk_groups

    @property
    def perk_identifier(self):
        """Gets the perk_identifier of this DestinyDefinitionsDestinySandboxPerkDefinition.

        The string identifier for the perk.

        :return: The perk_identifier of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: str
        """
        return self._perk_identifier

    @perk_identifier.setter
    def perk_identifier(self, perk_identifier):
        """Sets the perk_identifier of this DestinyDefinitionsDestinySandboxPerkDefinition.

        The string identifier for the perk.

        :param perk_identifier: The perk_identifier of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type perk_identifier: str
        """

        self._perk_identifier = perk_identifier

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinySandboxPerkDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinySandboxPerkDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinySandboxPerkDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
