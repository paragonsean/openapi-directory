# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_item_component_set_ofint32 import DestinyItemComponentSetOfint32
from openapi_server.models.dictionary_component_response_ofuint32_and_destiny_vendor_categories_component import DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent
from openapi_server.models.dictionary_component_response_ofuint32_and_destiny_vendor_component import DictionaryComponentResponseOfuint32AndDestinyVendorComponent
from openapi_server.models.dictionary_component_response_ofuint32_and_personal_destiny_vendor_sale_item_set_component import DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent
from openapi_server.models.single_component_response_of_destiny_currencies_component import SingleComponentResponseOfDestinyCurrenciesComponent
from openapi_server.models.single_component_response_of_destiny_string_variables_component import SingleComponentResponseOfDestinyStringVariablesComponent
from openapi_server.models.single_component_response_of_destiny_vendor_group_component import SingleComponentResponseOfDestinyVendorGroupComponent
from openapi_server import util


class DestinyResponsesDestinyVendorsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent=None, currency_lookups: SingleComponentResponseOfDestinyCurrenciesComponent=None, item_components: Dict[str, DestinyItemComponentSetOfint32]=None, sales: DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent=None, string_variables: SingleComponentResponseOfDestinyStringVariablesComponent=None, vendor_groups: SingleComponentResponseOfDestinyVendorGroupComponent=None, vendors: DictionaryComponentResponseOfuint32AndDestinyVendorComponent=None):
        """DestinyResponsesDestinyVendorsResponse - a model defined in OpenAPI

        :param categories: The categories of this DestinyResponsesDestinyVendorsResponse.
        :param currency_lookups: The currency_lookups of this DestinyResponsesDestinyVendorsResponse.
        :param item_components: The item_components of this DestinyResponsesDestinyVendorsResponse.
        :param sales: The sales of this DestinyResponsesDestinyVendorsResponse.
        :param string_variables: The string_variables of this DestinyResponsesDestinyVendorsResponse.
        :param vendor_groups: The vendor_groups of this DestinyResponsesDestinyVendorsResponse.
        :param vendors: The vendors of this DestinyResponsesDestinyVendorsResponse.
        """
        self.openapi_types = {
            'categories': DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent,
            'currency_lookups': SingleComponentResponseOfDestinyCurrenciesComponent,
            'item_components': Dict[str, DestinyItemComponentSetOfint32],
            'sales': DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent,
            'string_variables': SingleComponentResponseOfDestinyStringVariablesComponent,
            'vendor_groups': SingleComponentResponseOfDestinyVendorGroupComponent,
            'vendors': DictionaryComponentResponseOfuint32AndDestinyVendorComponent
        }

        self.attribute_map = {
            'categories': 'categories',
            'currency_lookups': 'currencyLookups',
            'item_components': 'itemComponents',
            'sales': 'sales',
            'string_variables': 'stringVariables',
            'vendor_groups': 'vendorGroups',
            'vendors': 'vendors'
        }

        self._categories = categories
        self._currency_lookups = currency_lookups
        self._item_components = item_components
        self._sales = sales
        self._string_variables = string_variables
        self._vendor_groups = vendor_groups
        self._vendors = vendors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyResponsesDestinyVendorsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Responses.DestinyVendorsResponse of this DestinyResponsesDestinyVendorsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this DestinyResponsesDestinyVendorsResponse.

        Categories that the vendor has available, and references to the sales therein. These are keyed by the Vendor Hash, so you will get one Categories Component per vendor returned.  COMPONENT TYPE: VendorCategories

        :return: The categories of this DestinyResponsesDestinyVendorsResponse.
        :rtype: DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this DestinyResponsesDestinyVendorsResponse.

        Categories that the vendor has available, and references to the sales therein. These are keyed by the Vendor Hash, so you will get one Categories Component per vendor returned.  COMPONENT TYPE: VendorCategories

        :param categories: The categories of this DestinyResponsesDestinyVendorsResponse.
        :type categories: DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent
        """

        self._categories = categories

    @property
    def currency_lookups(self):
        """Gets the currency_lookups of this DestinyResponsesDestinyVendorsResponse.

        A \"lookup\" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups

        :return: The currency_lookups of this DestinyResponsesDestinyVendorsResponse.
        :rtype: SingleComponentResponseOfDestinyCurrenciesComponent
        """
        return self._currency_lookups

    @currency_lookups.setter
    def currency_lookups(self, currency_lookups):
        """Sets the currency_lookups of this DestinyResponsesDestinyVendorsResponse.

        A \"lookup\" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups

        :param currency_lookups: The currency_lookups of this DestinyResponsesDestinyVendorsResponse.
        :type currency_lookups: SingleComponentResponseOfDestinyCurrenciesComponent
        """

        self._currency_lookups = currency_lookups

    @property
    def item_components(self):
        """Gets the item_components of this DestinyResponsesDestinyVendorsResponse.

        The set of item detail components, one set of item components per Vendor. These are keyed by the Vendor Hash, so you will get one Item Component Set per vendor returned.  The components contained inside are themselves keyed by the vendorSaleIndex, and will have whatever item-level components you requested (Sockets, Stats, Instance data etc...) per item being sold by the vendor.

        :return: The item_components of this DestinyResponsesDestinyVendorsResponse.
        :rtype: Dict[str, DestinyItemComponentSetOfint32]
        """
        return self._item_components

    @item_components.setter
    def item_components(self, item_components):
        """Sets the item_components of this DestinyResponsesDestinyVendorsResponse.

        The set of item detail components, one set of item components per Vendor. These are keyed by the Vendor Hash, so you will get one Item Component Set per vendor returned.  The components contained inside are themselves keyed by the vendorSaleIndex, and will have whatever item-level components you requested (Sockets, Stats, Instance data etc...) per item being sold by the vendor.

        :param item_components: The item_components of this DestinyResponsesDestinyVendorsResponse.
        :type item_components: Dict[str, DestinyItemComponentSetOfint32]
        """

        self._item_components = item_components

    @property
    def sales(self):
        """Gets the sales of this DestinyResponsesDestinyVendorsResponse.

        Sales, keyed by the vendorItemIndex of the item being sold. These are keyed by the Vendor Hash, so you will get one Sale Item Set Component per vendor returned.  Note that within the Sale Item Set component, the sales are themselves keyed by the vendorSaleIndex, so you can relate it to the corrent sale item definition within the Vendor's definition.  COMPONENT TYPE: VendorSales

        :return: The sales of this DestinyResponsesDestinyVendorsResponse.
        :rtype: DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent
        """
        return self._sales

    @sales.setter
    def sales(self, sales):
        """Sets the sales of this DestinyResponsesDestinyVendorsResponse.

        Sales, keyed by the vendorItemIndex of the item being sold. These are keyed by the Vendor Hash, so you will get one Sale Item Set Component per vendor returned.  Note that within the Sale Item Set component, the sales are themselves keyed by the vendorSaleIndex, so you can relate it to the corrent sale item definition within the Vendor's definition.  COMPONENT TYPE: VendorSales

        :param sales: The sales of this DestinyResponsesDestinyVendorsResponse.
        :type sales: DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent
        """

        self._sales = sales

    @property
    def string_variables(self):
        """Gets the string_variables of this DestinyResponsesDestinyVendorsResponse.

        A map of string variable values by hash for this character context.  COMPONENT TYPE: StringVariables

        :return: The string_variables of this DestinyResponsesDestinyVendorsResponse.
        :rtype: SingleComponentResponseOfDestinyStringVariablesComponent
        """
        return self._string_variables

    @string_variables.setter
    def string_variables(self, string_variables):
        """Sets the string_variables of this DestinyResponsesDestinyVendorsResponse.

        A map of string variable values by hash for this character context.  COMPONENT TYPE: StringVariables

        :param string_variables: The string_variables of this DestinyResponsesDestinyVendorsResponse.
        :type string_variables: SingleComponentResponseOfDestinyStringVariablesComponent
        """

        self._string_variables = string_variables

    @property
    def vendor_groups(self):
        """Gets the vendor_groups of this DestinyResponsesDestinyVendorsResponse.

        For Vendors being returned, this will give you the information you need to group them and order them in the same way that the Bungie Companion app performs grouping. It will automatically be returned if you request the Vendors component.  COMPONENT TYPE: Vendors

        :return: The vendor_groups of this DestinyResponsesDestinyVendorsResponse.
        :rtype: SingleComponentResponseOfDestinyVendorGroupComponent
        """
        return self._vendor_groups

    @vendor_groups.setter
    def vendor_groups(self, vendor_groups):
        """Sets the vendor_groups of this DestinyResponsesDestinyVendorsResponse.

        For Vendors being returned, this will give you the information you need to group them and order them in the same way that the Bungie Companion app performs grouping. It will automatically be returned if you request the Vendors component.  COMPONENT TYPE: Vendors

        :param vendor_groups: The vendor_groups of this DestinyResponsesDestinyVendorsResponse.
        :type vendor_groups: SingleComponentResponseOfDestinyVendorGroupComponent
        """

        self._vendor_groups = vendor_groups

    @property
    def vendors(self):
        """Gets the vendors of this DestinyResponsesDestinyVendorsResponse.

        The base properties of the vendor. These are keyed by the Vendor Hash, so you will get one Vendor Component per vendor returned.  COMPONENT TYPE: Vendors

        :return: The vendors of this DestinyResponsesDestinyVendorsResponse.
        :rtype: DictionaryComponentResponseOfuint32AndDestinyVendorComponent
        """
        return self._vendors

    @vendors.setter
    def vendors(self, vendors):
        """Sets the vendors of this DestinyResponsesDestinyVendorsResponse.

        The base properties of the vendor. These are keyed by the Vendor Hash, so you will get one Vendor Component per vendor returned.  COMPONENT TYPE: Vendors

        :param vendors: The vendors of this DestinyResponsesDestinyVendorsResponse.
        :type vendors: DictionaryComponentResponseOfuint32AndDestinyVendorComponent
        """

        self._vendors = vendors
