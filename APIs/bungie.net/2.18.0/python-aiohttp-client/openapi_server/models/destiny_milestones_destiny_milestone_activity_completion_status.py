# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_milestones_destiny_milestone_activity_phase import DestinyMilestonesDestinyMilestoneActivityPhase
from openapi_server import util


class DestinyMilestonesDestinyMilestoneActivityCompletionStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completed: bool=None, phases: List[DestinyMilestonesDestinyMilestoneActivityPhase]=None):
        """DestinyMilestonesDestinyMilestoneActivityCompletionStatus - a model defined in OpenAPI

        :param completed: The completed of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.
        :param phases: The phases of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.
        """
        self.openapi_types = {
            'completed': bool,
            'phases': List[DestinyMilestonesDestinyMilestoneActivityPhase]
        }

        self.attribute_map = {
            'completed': 'completed',
            'phases': 'phases'
        }

        self._completed = completed
        self._phases = phases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyMilestonesDestinyMilestoneActivityCompletionStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Milestones.DestinyMilestoneActivityCompletionStatus of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completed(self):
        """Gets the completed of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.

        If the activity has been \"completed\", that information will be returned here.

        :return: The completed of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.
        :rtype: bool
        """
        return self._completed

    @completed.setter
    def completed(self, completed):
        """Sets the completed of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.

        If the activity has been \"completed\", that information will be returned here.

        :param completed: The completed of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.
        :type completed: bool
        """

        self._completed = completed

    @property
    def phases(self):
        """Gets the phases of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.

        If the Activity has discrete \"phases\" that we can track, that info will be here. Otherwise, this value will be NULL. Note that this is a list and not a dictionary: the order implies the ascending order of phases or progression in this activity.

        :return: The phases of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.
        :rtype: List[DestinyMilestonesDestinyMilestoneActivityPhase]
        """
        return self._phases

    @phases.setter
    def phases(self, phases):
        """Sets the phases of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.

        If the Activity has discrete \"phases\" that we can track, that info will be here. Otherwise, this value will be NULL. Note that this is a list and not a dictionary: the order implies the ascending order of phases or progression in this activity.

        :param phases: The phases of this DestinyMilestonesDestinyMilestoneActivityCompletionStatus.
        :type phases: List[DestinyMilestonesDestinyMilestoneActivityPhase]
        """

        self._phases = phases
