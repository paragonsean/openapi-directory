# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDestinyTalentNodeStepGroups(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, damage_types: int=None, guardian_attributes: int=None, impact_effects: int=None, light_abilities: int=None, weapon_performance: int=None):
        """DestinyDefinitionsDestinyTalentNodeStepGroups - a model defined in OpenAPI

        :param damage_types: The damage_types of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :param guardian_attributes: The guardian_attributes of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :param impact_effects: The impact_effects of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :param light_abilities: The light_abilities of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :param weapon_performance: The weapon_performance of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        """
        self.openapi_types = {
            'damage_types': int,
            'guardian_attributes': int,
            'impact_effects': int,
            'light_abilities': int,
            'weapon_performance': int
        }

        self.attribute_map = {
            'damage_types': 'damageTypes',
            'guardian_attributes': 'guardianAttributes',
            'impact_effects': 'impactEffects',
            'light_abilities': 'lightAbilities',
            'weapon_performance': 'weaponPerformance'
        }

        self._damage_types = damage_types
        self._guardian_attributes = guardian_attributes
        self._impact_effects = impact_effects
        self._light_abilities = light_abilities
        self._weapon_performance = weapon_performance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyTalentNodeStepGroups':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyTalentNodeStepGroups of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def damage_types(self):
        """Gets the damage_types of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :return: The damage_types of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :rtype: int
        """
        return self._damage_types

    @damage_types.setter
    def damage_types(self, damage_types):
        """Sets the damage_types of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :param damage_types: The damage_types of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :type damage_types: int
        """

        self._damage_types = damage_types

    @property
    def guardian_attributes(self):
        """Gets the guardian_attributes of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :return: The guardian_attributes of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :rtype: int
        """
        return self._guardian_attributes

    @guardian_attributes.setter
    def guardian_attributes(self, guardian_attributes):
        """Sets the guardian_attributes of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :param guardian_attributes: The guardian_attributes of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :type guardian_attributes: int
        """

        self._guardian_attributes = guardian_attributes

    @property
    def impact_effects(self):
        """Gets the impact_effects of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :return: The impact_effects of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :rtype: int
        """
        return self._impact_effects

    @impact_effects.setter
    def impact_effects(self, impact_effects):
        """Sets the impact_effects of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :param impact_effects: The impact_effects of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :type impact_effects: int
        """

        self._impact_effects = impact_effects

    @property
    def light_abilities(self):
        """Gets the light_abilities of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :return: The light_abilities of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :rtype: int
        """
        return self._light_abilities

    @light_abilities.setter
    def light_abilities(self, light_abilities):
        """Sets the light_abilities of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :param light_abilities: The light_abilities of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :type light_abilities: int
        """

        self._light_abilities = light_abilities

    @property
    def weapon_performance(self):
        """Gets the weapon_performance of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :return: The weapon_performance of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :rtype: int
        """
        return self._weapon_performance

    @weapon_performance.setter
    def weapon_performance(self, weapon_performance):
        """Sets the weapon_performance of this DestinyDefinitionsDestinyTalentNodeStepGroups.


        :param weapon_performance: The weapon_performance of this DestinyDefinitionsDestinyTalentNodeStepGroups.
        :type weapon_performance: int
        """

        self._weapon_performance = weapon_performance
