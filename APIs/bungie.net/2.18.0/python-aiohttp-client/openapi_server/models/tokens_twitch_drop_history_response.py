# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TokensTwitchDropHistoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, claim_state: int=None, created_at: datetime=None, description: str=None, title: str=None):
        """TokensTwitchDropHistoryResponse - a model defined in OpenAPI

        :param claim_state: The claim_state of this TokensTwitchDropHistoryResponse.
        :param created_at: The created_at of this TokensTwitchDropHistoryResponse.
        :param description: The description of this TokensTwitchDropHistoryResponse.
        :param title: The title of this TokensTwitchDropHistoryResponse.
        """
        self.openapi_types = {
            'claim_state': int,
            'created_at': datetime,
            'description': str,
            'title': str
        }

        self.attribute_map = {
            'claim_state': 'ClaimState',
            'created_at': 'CreatedAt',
            'description': 'Description',
            'title': 'Title'
        }

        self._claim_state = claim_state
        self._created_at = created_at
        self._description = description
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TokensTwitchDropHistoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tokens.TwitchDropHistoryResponse of this TokensTwitchDropHistoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claim_state(self):
        """Gets the claim_state of this TokensTwitchDropHistoryResponse.


        :return: The claim_state of this TokensTwitchDropHistoryResponse.
        :rtype: int
        """
        return self._claim_state

    @claim_state.setter
    def claim_state(self, claim_state):
        """Sets the claim_state of this TokensTwitchDropHistoryResponse.


        :param claim_state: The claim_state of this TokensTwitchDropHistoryResponse.
        :type claim_state: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if claim_state not in allowed_values:
            raise ValueError(
                "Invalid value for `claim_state` ({0}), must be one of {1}"
                .format(claim_state, allowed_values)
            )

        self._claim_state = claim_state

    @property
    def created_at(self):
        """Gets the created_at of this TokensTwitchDropHistoryResponse.


        :return: The created_at of this TokensTwitchDropHistoryResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this TokensTwitchDropHistoryResponse.


        :param created_at: The created_at of this TokensTwitchDropHistoryResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this TokensTwitchDropHistoryResponse.


        :return: The description of this TokensTwitchDropHistoryResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TokensTwitchDropHistoryResponse.


        :param description: The description of this TokensTwitchDropHistoryResponse.
        :type description: str
        """

        self._description = description

    @property
    def title(self):
        """Gets the title of this TokensTwitchDropHistoryResponse.


        :return: The title of this TokensTwitchDropHistoryResponse.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this TokensTwitchDropHistoryResponse.


        :param title: The title of this TokensTwitchDropHistoryResponse.
        :type title: str
        """

        self._title = title
