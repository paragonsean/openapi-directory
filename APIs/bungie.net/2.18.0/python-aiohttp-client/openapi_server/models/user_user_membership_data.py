# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.groups_v2_group_user_info_card import GroupsV2GroupUserInfoCard
from openapi_server.models.user_general_user import UserGeneralUser
from openapi_server import util


class UserUserMembershipData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bungie_net_user: UserGeneralUser=None, destiny_memberships: List[GroupsV2GroupUserInfoCard]=None, primary_membership_id: int=None):
        """UserUserMembershipData - a model defined in OpenAPI

        :param bungie_net_user: The bungie_net_user of this UserUserMembershipData.
        :param destiny_memberships: The destiny_memberships of this UserUserMembershipData.
        :param primary_membership_id: The primary_membership_id of this UserUserMembershipData.
        """
        self.openapi_types = {
            'bungie_net_user': UserGeneralUser,
            'destiny_memberships': List[GroupsV2GroupUserInfoCard],
            'primary_membership_id': int
        }

        self.attribute_map = {
            'bungie_net_user': 'bungieNetUser',
            'destiny_memberships': 'destinyMemberships',
            'primary_membership_id': 'primaryMembershipId'
        }

        self._bungie_net_user = bungie_net_user
        self._destiny_memberships = destiny_memberships
        self._primary_membership_id = primary_membership_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserUserMembershipData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User.UserMembershipData of this UserUserMembershipData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bungie_net_user(self):
        """Gets the bungie_net_user of this UserUserMembershipData.


        :return: The bungie_net_user of this UserUserMembershipData.
        :rtype: UserGeneralUser
        """
        return self._bungie_net_user

    @bungie_net_user.setter
    def bungie_net_user(self, bungie_net_user):
        """Sets the bungie_net_user of this UserUserMembershipData.


        :param bungie_net_user: The bungie_net_user of this UserUserMembershipData.
        :type bungie_net_user: UserGeneralUser
        """

        self._bungie_net_user = bungie_net_user

    @property
    def destiny_memberships(self):
        """Gets the destiny_memberships of this UserUserMembershipData.

        this allows you to see destiny memberships that are visible and linked to this account (regardless of whether or not they have characters on the world server)

        :return: The destiny_memberships of this UserUserMembershipData.
        :rtype: List[GroupsV2GroupUserInfoCard]
        """
        return self._destiny_memberships

    @destiny_memberships.setter
    def destiny_memberships(self, destiny_memberships):
        """Sets the destiny_memberships of this UserUserMembershipData.

        this allows you to see destiny memberships that are visible and linked to this account (regardless of whether or not they have characters on the world server)

        :param destiny_memberships: The destiny_memberships of this UserUserMembershipData.
        :type destiny_memberships: List[GroupsV2GroupUserInfoCard]
        """

        self._destiny_memberships = destiny_memberships

    @property
    def primary_membership_id(self):
        """Gets the primary_membership_id of this UserUserMembershipData.

        If this property is populated, it will have the membership ID of the account considered to be \"primary\" in this user's cross save relationship.   If null, this user has no cross save relationship, nor primary account.

        :return: The primary_membership_id of this UserUserMembershipData.
        :rtype: int
        """
        return self._primary_membership_id

    @primary_membership_id.setter
    def primary_membership_id(self, primary_membership_id):
        """Sets the primary_membership_id of this UserUserMembershipData.

        If this property is populated, it will have the membership ID of the account considered to be \"primary\" in this user's cross save relationship.   If null, this user has no cross save relationship, nor primary account.

        :param primary_membership_id: The primary_membership_id of this UserUserMembershipData.
        :type primary_membership_id: int
        """

        self._primary_membership_id = primary_membership_id
