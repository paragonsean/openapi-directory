# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: int=None, group: int=None, icon_image: str=None, medal_tier_hash: int=None, merge_method: int=None, modes: List[int]=None, period_types: List[int]=None, stat_description: str=None, stat_id: str=None, stat_name: str=None, stat_name_abbr: str=None, unit_label: str=None, unit_type: int=None, weight: int=None):
        """DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition - a model defined in OpenAPI

        :param category: The category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param group: The group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param icon_image: The icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param medal_tier_hash: The medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param merge_method: The merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param modes: The modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param period_types: The period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param stat_description: The stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param stat_id: The stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param stat_name: The stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param stat_name_abbr: The stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param unit_label: The unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param unit_type: The unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :param weight: The weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        """
        self.openapi_types = {
            'category': int,
            'group': int,
            'icon_image': str,
            'medal_tier_hash': int,
            'merge_method': int,
            'modes': List[int],
            'period_types': List[int],
            'stat_description': str,
            'stat_id': str,
            'stat_name': str,
            'stat_name_abbr': str,
            'unit_label': str,
            'unit_type': int,
            'weight': int
        }

        self.attribute_map = {
            'category': 'category',
            'group': 'group',
            'icon_image': 'iconImage',
            'medal_tier_hash': 'medalTierHash',
            'merge_method': 'mergeMethod',
            'modes': 'modes',
            'period_types': 'periodTypes',
            'stat_description': 'statDescription',
            'stat_id': 'statId',
            'stat_name': 'statName',
            'stat_name_abbr': 'statNameAbbr',
            'unit_label': 'unitLabel',
            'unit_type': 'unitType',
            'weight': 'weight'
        }

        self._category = category
        self._group = group
        self._icon_image = icon_image
        self._medal_tier_hash = medal_tier_hash
        self._merge_method = merge_method
        self._modes = modes
        self._period_types = period_types
        self._stat_description = stat_description
        self._stat_id = stat_id
        self._stat_name = stat_name
        self._stat_name_abbr = stat_name_abbr
        self._unit_label = unit_label
        self._unit_type = unit_type
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.HistoricalStats.Definitions.DestinyHistoricalStatsDefinition of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Category for the stat.

        :return: The category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: int
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Category for the stat.

        :param category: The category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type category: int
        """

        self._category = category

    @property
    def group(self):
        """Gets the group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Statistic group

        :return: The group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: int
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Statistic group

        :param group: The group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type group: int
        """

        self._group = group

    @property
    def icon_image(self):
        """Gets the icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Optional URI to an icon for the statistic

        :return: The icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: str
        """
        return self._icon_image

    @icon_image.setter
    def icon_image(self, icon_image):
        """Sets the icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Optional URI to an icon for the statistic

        :param icon_image: The icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type icon_image: str
        """

        self._icon_image = icon_image

    @property
    def medal_tier_hash(self):
        """Gets the medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        The tier associated with this medal - be it implicitly or explicitly.

        :return: The medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: int
        """
        return self._medal_tier_hash

    @medal_tier_hash.setter
    def medal_tier_hash(self, medal_tier_hash):
        """Sets the medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        The tier associated with this medal - be it implicitly or explicitly.

        :param medal_tier_hash: The medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type medal_tier_hash: int
        """

        self._medal_tier_hash = medal_tier_hash

    @property
    def merge_method(self):
        """Gets the merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Optional icon for the statistic

        :return: The merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: int
        """
        return self._merge_method

    @merge_method.setter
    def merge_method(self, merge_method):
        """Sets the merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Optional icon for the statistic

        :param merge_method: The merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type merge_method: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if merge_method not in allowed_values:
            raise ValueError(
                "Invalid value for `merge_method` ({0}), must be one of {1}"
                .format(merge_method, allowed_values)
            )

        self._merge_method = merge_method

    @property
    def modes(self):
        """Gets the modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Game modes where this statistic can be reported.

        :return: The modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: List[int]
        """
        return self._modes

    @modes.setter
    def modes(self, modes):
        """Sets the modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Game modes where this statistic can be reported.

        :param modes: The modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type modes: List[int]
        """

        self._modes = modes

    @property
    def period_types(self):
        """Gets the period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Time periods the statistic covers

        :return: The period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: List[int]
        """
        return self._period_types

    @period_types.setter
    def period_types(self, period_types):
        """Sets the period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Time periods the statistic covers

        :param period_types: The period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type period_types: List[int]
        """

        self._period_types = period_types

    @property
    def stat_description(self):
        """Gets the stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Description of a stat if applicable.

        :return: The stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: str
        """
        return self._stat_description

    @stat_description.setter
    def stat_description(self, stat_description):
        """Sets the stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Description of a stat if applicable.

        :param stat_description: The stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type stat_description: str
        """

        self._stat_description = stat_description

    @property
    def stat_id(self):
        """Gets the stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Unique programmer friendly ID for this stat

        :return: The stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: str
        """
        return self._stat_id

    @stat_id.setter
    def stat_id(self, stat_id):
        """Sets the stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Unique programmer friendly ID for this stat

        :param stat_id: The stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type stat_id: str
        """

        self._stat_id = stat_id

    @property
    def stat_name(self):
        """Gets the stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Display name

        :return: The stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: str
        """
        return self._stat_name

    @stat_name.setter
    def stat_name(self, stat_name):
        """Sets the stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Display name

        :param stat_name: The stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type stat_name: str
        """

        self._stat_name = stat_name

    @property
    def stat_name_abbr(self):
        """Gets the stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Display name abbreviated

        :return: The stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: str
        """
        return self._stat_name_abbr

    @stat_name_abbr.setter
    def stat_name_abbr(self, stat_name_abbr):
        """Sets the stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Display name abbreviated

        :param stat_name_abbr: The stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type stat_name_abbr: str
        """

        self._stat_name_abbr = stat_name_abbr

    @property
    def unit_label(self):
        """Gets the unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Localized Unit Name for the stat.

        :return: The unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: str
        """
        return self._unit_label

    @unit_label.setter
    def unit_label(self, unit_label):
        """Sets the unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Localized Unit Name for the stat.

        :param unit_label: The unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type unit_label: str
        """

        self._unit_label = unit_label

    @property
    def unit_type(self):
        """Gets the unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Unit, if any, for the statistic

        :return: The unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: int
        """
        return self._unit_type

    @unit_type.setter
    def unit_type(self, unit_type):
        """Sets the unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Unit, if any, for the statistic

        :param unit_type: The unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type unit_type: int
        """

        self._unit_type = unit_type

    @property
    def weight(self):
        """Gets the weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Weight assigned to this stat indicating its relative impressiveness.

        :return: The weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Weight assigned to this stat indicating its relative impressiveness.

        :param weight: The weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.
        :type weight: int
        """

        self._weight = weight
