# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_destiny_item_quantity import DestinyDestinyItemQuantity
from openapi_server import util


class DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_purchasable: bool=None, costs: List[DestinyDestinyItemQuantity]=None, item_hash: int=None, override_next_refresh_date: datetime=None, override_style_item_hash: int=None, quantity: int=None, vendor_item_index: int=None):
        """DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent - a model defined in OpenAPI

        :param api_purchasable: The api_purchasable of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :param costs: The costs of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :param item_hash: The item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :param override_next_refresh_date: The override_next_refresh_date of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :param override_style_item_hash: The override_style_item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :param quantity: The quantity of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :param vendor_item_index: The vendor_item_index of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        """
        self.openapi_types = {
            'api_purchasable': bool,
            'costs': List[DestinyDestinyItemQuantity],
            'item_hash': int,
            'override_next_refresh_date': datetime,
            'override_style_item_hash': int,
            'quantity': int,
            'vendor_item_index': int
        }

        self.attribute_map = {
            'api_purchasable': 'apiPurchasable',
            'costs': 'costs',
            'item_hash': 'itemHash',
            'override_next_refresh_date': 'overrideNextRefreshDate',
            'override_style_item_hash': 'overrideStyleItemHash',
            'quantity': 'quantity',
            'vendor_item_index': 'vendorItemIndex'
        }

        self._api_purchasable = api_purchasable
        self._costs = costs
        self._item_hash = item_hash
        self._override_next_refresh_date = override_next_refresh_date
        self._override_style_item_hash = override_style_item_hash
        self._quantity = quantity
        self._vendor_item_index = vendor_item_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Components.Vendors.DestinyPublicVendorSaleItemComponent of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_purchasable(self):
        """Gets the api_purchasable of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        If true, this item can be purchased through the Bungie.net API.

        :return: The api_purchasable of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :rtype: bool
        """
        return self._api_purchasable

    @api_purchasable.setter
    def api_purchasable(self, api_purchasable):
        """Sets the api_purchasable of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        If true, this item can be purchased through the Bungie.net API.

        :param api_purchasable: The api_purchasable of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :type api_purchasable: bool
        """

        self._api_purchasable = api_purchasable

    @property
    def costs(self):
        """Gets the costs of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        A summary of the current costs of the item.

        :return: The costs of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :rtype: List[DestinyDestinyItemQuantity]
        """
        return self._costs

    @costs.setter
    def costs(self, costs):
        """Sets the costs of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        A summary of the current costs of the item.

        :param costs: The costs of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :type costs: List[DestinyDestinyItemQuantity]
        """

        self._costs = costs

    @property
    def item_hash(self):
        """Gets the item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        The hash of the item being sold, as a quick shortcut for looking up the DestinyInventoryItemDefinition of the sale item.

        :return: The item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :rtype: int
        """
        return self._item_hash

    @item_hash.setter
    def item_hash(self, item_hash):
        """Sets the item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        The hash of the item being sold, as a quick shortcut for looking up the DestinyInventoryItemDefinition of the sale item.

        :param item_hash: The item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :type item_hash: int
        """

        self._item_hash = item_hash

    @property
    def override_next_refresh_date(self):
        """Gets the override_next_refresh_date of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        If this item has its own custom date where it may be removed from the Vendor's rotation, this is that date.  Note that there's not actually any guarantee that it will go away: it could be chosen again and end up still being in the Vendor's sale items! But this is the next date where that test will occur, and is also the date that the game shows for availability on things like Bounties being sold. So it's the best we can give.

        :return: The override_next_refresh_date of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :rtype: datetime
        """
        return self._override_next_refresh_date

    @override_next_refresh_date.setter
    def override_next_refresh_date(self, override_next_refresh_date):
        """Sets the override_next_refresh_date of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        If this item has its own custom date where it may be removed from the Vendor's rotation, this is that date.  Note that there's not actually any guarantee that it will go away: it could be chosen again and end up still being in the Vendor's sale items! But this is the next date where that test will occur, and is also the date that the game shows for availability on things like Bounties being sold. So it's the best we can give.

        :param override_next_refresh_date: The override_next_refresh_date of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :type override_next_refresh_date: datetime
        """

        self._override_next_refresh_date = override_next_refresh_date

    @property
    def override_style_item_hash(self):
        """Gets the override_style_item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        If populated, this is the hash of the item whose icon (and other secondary styles, but *not* the human readable strings) should override whatever icons/styles are on the item being sold.  If you don't do this, certain items whose styles are being overridden by socketed items - such as the \"Recycle Shader\" item - would show whatever their default icon/style is, and it wouldn't be pretty or look accurate.

        :return: The override_style_item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :rtype: int
        """
        return self._override_style_item_hash

    @override_style_item_hash.setter
    def override_style_item_hash(self, override_style_item_hash):
        """Sets the override_style_item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        If populated, this is the hash of the item whose icon (and other secondary styles, but *not* the human readable strings) should override whatever icons/styles are on the item being sold.  If you don't do this, certain items whose styles are being overridden by socketed items - such as the \"Recycle Shader\" item - would show whatever their default icon/style is, and it wouldn't be pretty or look accurate.

        :param override_style_item_hash: The override_style_item_hash of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :type override_style_item_hash: int
        """

        self._override_style_item_hash = override_style_item_hash

    @property
    def quantity(self):
        """Gets the quantity of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        How much of the item you'll be getting.

        :return: The quantity of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        How much of the item you'll be getting.

        :param quantity: The quantity of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def vendor_item_index(self):
        """Gets the vendor_item_index of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        The index into the DestinyVendorDefinition.itemList property. Note that this means Vendor data *is* Content Version dependent: make sure you have the latest content before you use Vendor data, or these indexes may mismatch.   Most systems avoid this problem, but Vendors is one area where we are unable to reasonably avoid content dependency at the moment.

        :return: The vendor_item_index of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :rtype: int
        """
        return self._vendor_item_index

    @vendor_item_index.setter
    def vendor_item_index(self, vendor_item_index):
        """Sets the vendor_item_index of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.

        The index into the DestinyVendorDefinition.itemList property. Note that this means Vendor data *is* Content Version dependent: make sure you have the latest content before you use Vendor data, or these indexes may mismatch.   Most systems avoid this problem, but Vendors is one area where we are unable to reasonably avoid content dependency at the moment.

        :param vendor_item_index: The vendor_item_index of this DestinyComponentsVendorsDestinyPublicVendorSaleItemComponent.
        :type vendor_item_index: int
        """

        self._vendor_item_index = vendor_item_index
