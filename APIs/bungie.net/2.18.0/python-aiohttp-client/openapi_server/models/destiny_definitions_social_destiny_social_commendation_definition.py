# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_misc_destiny_color import DestinyMiscDestinyColor
from openapi_server import util


class DestinyDefinitionsSocialDestinySocialCommendationDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_giving_limit: int=None, card_image_path: str=None, color: DestinyMiscDestinyColor=None, display_activities: List[DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition]=None, display_priority: int=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, parent_commendation_node_hash: int=None, redacted: bool=None):
        """DestinyDefinitionsSocialDestinySocialCommendationDefinition - a model defined in OpenAPI

        :param activity_giving_limit: The activity_giving_limit of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param card_image_path: The card_image_path of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param color: The color of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param display_activities: The display_activities of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param display_priority: The display_priority of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param hash: The hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param index: The index of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param parent_commendation_node_hash: The parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :param redacted: The redacted of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        """
        self.openapi_types = {
            'activity_giving_limit': int,
            'card_image_path': str,
            'color': DestinyMiscDestinyColor,
            'display_activities': List[DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition],
            'display_priority': int,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'parent_commendation_node_hash': int,
            'redacted': bool
        }

        self.attribute_map = {
            'activity_giving_limit': 'activityGivingLimit',
            'card_image_path': 'cardImagePath',
            'color': 'color',
            'display_activities': 'displayActivities',
            'display_priority': 'displayPriority',
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'parent_commendation_node_hash': 'parentCommendationNodeHash',
            'redacted': 'redacted'
        }

        self._activity_giving_limit = activity_giving_limit
        self._card_image_path = card_image_path
        self._color = color
        self._display_activities = display_activities
        self._display_priority = display_priority
        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._parent_commendation_node_hash = parent_commendation_node_hash
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsSocialDestinySocialCommendationDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Social.DestinySocialCommendationDefinition of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_giving_limit(self):
        """Gets the activity_giving_limit of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :return: The activity_giving_limit of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: int
        """
        return self._activity_giving_limit

    @activity_giving_limit.setter
    def activity_giving_limit(self, activity_giving_limit):
        """Sets the activity_giving_limit of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :param activity_giving_limit: The activity_giving_limit of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type activity_giving_limit: int
        """

        self._activity_giving_limit = activity_giving_limit

    @property
    def card_image_path(self):
        """Gets the card_image_path of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :return: The card_image_path of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: str
        """
        return self._card_image_path

    @card_image_path.setter
    def card_image_path(self, card_image_path):
        """Sets the card_image_path of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :param card_image_path: The card_image_path of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type card_image_path: str
        """

        self._card_image_path = card_image_path

    @property
    def color(self):
        """Gets the color of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :return: The color of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: DestinyMiscDestinyColor
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :param color: The color of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type color: DestinyMiscDestinyColor
        """

        self._color = color

    @property
    def display_activities(self):
        """Gets the display_activities of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.

        The display properties for the the activities that this commendation is available in.

        :return: The display_activities of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: List[DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition]
        """
        return self._display_activities

    @display_activities.setter
    def display_activities(self, display_activities):
        """Sets the display_activities of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.

        The display properties for the the activities that this commendation is available in.

        :param display_activities: The display_activities of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type display_activities: List[DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition]
        """

        self._display_activities = display_activities

    @property
    def display_priority(self):
        """Gets the display_priority of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :return: The display_priority of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: int
        """
        return self._display_priority

    @display_priority.setter
    def display_priority(self, display_priority):
        """Sets the display_priority of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :param display_priority: The display_priority of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type display_priority: int
        """

        self._display_priority = display_priority

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :return: The display_properties of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type index: int
        """

        self._index = index

    @property
    def parent_commendation_node_hash(self):
        """Gets the parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :return: The parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: int
        """
        return self._parent_commendation_node_hash

    @parent_commendation_node_hash.setter
    def parent_commendation_node_hash(self, parent_commendation_node_hash):
        """Sets the parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.


        :param parent_commendation_node_hash: The parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type parent_commendation_node_hash: int
        """

        self._parent_commendation_node_hash = parent_commendation_node_hash

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsSocialDestinySocialCommendationDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
