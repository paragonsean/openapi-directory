# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_components_records_destiny_record_component import DestinyComponentsRecordsDestinyRecordComponent
from openapi_server import util


class DestinyComponentsRecordsDestinyProfileRecordsComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_score: int=None, legacy_score: int=None, lifetime_score: int=None, record_categories_root_node_hash: int=None, record_seals_root_node_hash: int=None, records: Dict[str, DestinyComponentsRecordsDestinyRecordComponent]=None, score: int=None, tracked_record_hash: int=None):
        """DestinyComponentsRecordsDestinyProfileRecordsComponent - a model defined in OpenAPI

        :param active_score: The active_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :param legacy_score: The legacy_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :param lifetime_score: The lifetime_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :param record_categories_root_node_hash: The record_categories_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :param record_seals_root_node_hash: The record_seals_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :param records: The records of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :param score: The score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :param tracked_record_hash: The tracked_record_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        """
        self.openapi_types = {
            'active_score': int,
            'legacy_score': int,
            'lifetime_score': int,
            'record_categories_root_node_hash': int,
            'record_seals_root_node_hash': int,
            'records': Dict[str, DestinyComponentsRecordsDestinyRecordComponent],
            'score': int,
            'tracked_record_hash': int
        }

        self.attribute_map = {
            'active_score': 'activeScore',
            'legacy_score': 'legacyScore',
            'lifetime_score': 'lifetimeScore',
            'record_categories_root_node_hash': 'recordCategoriesRootNodeHash',
            'record_seals_root_node_hash': 'recordSealsRootNodeHash',
            'records': 'records',
            'score': 'score',
            'tracked_record_hash': 'trackedRecordHash'
        }

        self._active_score = active_score
        self._legacy_score = legacy_score
        self._lifetime_score = lifetime_score
        self._record_categories_root_node_hash = record_categories_root_node_hash
        self._record_seals_root_node_hash = record_seals_root_node_hash
        self._records = records
        self._score = score
        self._tracked_record_hash = tracked_record_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyComponentsRecordsDestinyProfileRecordsComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Components.Records.DestinyProfileRecordsComponent of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_score(self):
        """Gets the active_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        Your 'active' Triumphs score.

        :return: The active_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :rtype: int
        """
        return self._active_score

    @active_score.setter
    def active_score(self, active_score):
        """Sets the active_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        Your 'active' Triumphs score.

        :param active_score: The active_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :type active_score: int
        """

        self._active_score = active_score

    @property
    def legacy_score(self):
        """Gets the legacy_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        Your 'legacy' Triumphs score.

        :return: The legacy_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :rtype: int
        """
        return self._legacy_score

    @legacy_score.setter
    def legacy_score(self, legacy_score):
        """Sets the legacy_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        Your 'legacy' Triumphs score.

        :param legacy_score: The legacy_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :type legacy_score: int
        """

        self._legacy_score = legacy_score

    @property
    def lifetime_score(self):
        """Gets the lifetime_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        Your 'lifetime' Triumphs score.

        :return: The lifetime_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :rtype: int
        """
        return self._lifetime_score

    @lifetime_score.setter
    def lifetime_score(self, lifetime_score):
        """Sets the lifetime_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        Your 'lifetime' Triumphs score.

        :param lifetime_score: The lifetime_score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :type lifetime_score: int
        """

        self._lifetime_score = lifetime_score

    @property
    def record_categories_root_node_hash(self):
        """Gets the record_categories_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        The hash for the root presentation node definition of Triumph categories.

        :return: The record_categories_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :rtype: int
        """
        return self._record_categories_root_node_hash

    @record_categories_root_node_hash.setter
    def record_categories_root_node_hash(self, record_categories_root_node_hash):
        """Sets the record_categories_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        The hash for the root presentation node definition of Triumph categories.

        :param record_categories_root_node_hash: The record_categories_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :type record_categories_root_node_hash: int
        """

        self._record_categories_root_node_hash = record_categories_root_node_hash

    @property
    def record_seals_root_node_hash(self):
        """Gets the record_seals_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        The hash for the root presentation node definition of Triumph Seals.

        :return: The record_seals_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :rtype: int
        """
        return self._record_seals_root_node_hash

    @record_seals_root_node_hash.setter
    def record_seals_root_node_hash(self, record_seals_root_node_hash):
        """Sets the record_seals_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        The hash for the root presentation node definition of Triumph Seals.

        :param record_seals_root_node_hash: The record_seals_root_node_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :type record_seals_root_node_hash: int
        """

        self._record_seals_root_node_hash = record_seals_root_node_hash

    @property
    def records(self):
        """Gets the records of this DestinyComponentsRecordsDestinyProfileRecordsComponent.


        :return: The records of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :rtype: Dict[str, DestinyComponentsRecordsDestinyRecordComponent]
        """
        return self._records

    @records.setter
    def records(self, records):
        """Sets the records of this DestinyComponentsRecordsDestinyProfileRecordsComponent.


        :param records: The records of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :type records: Dict[str, DestinyComponentsRecordsDestinyRecordComponent]
        """

        self._records = records

    @property
    def score(self):
        """Gets the score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        Your 'active' Triumphs score, maintained for backwards compatibility.

        :return: The score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        Your 'active' Triumphs score, maintained for backwards compatibility.

        :param score: The score of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :type score: int
        """

        self._score = score

    @property
    def tracked_record_hash(self):
        """Gets the tracked_record_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        If this profile is tracking a record, this is the hash identifier of the record it is tracking.

        :return: The tracked_record_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :rtype: int
        """
        return self._tracked_record_hash

    @tracked_record_hash.setter
    def tracked_record_hash(self, tracked_record_hash):
        """Sets the tracked_record_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.

        If this profile is tracking a record, this is the hash identifier of the record it is tracking.

        :param tracked_record_hash: The tracked_record_hash of this DestinyComponentsRecordsDestinyProfileRecordsComponent.
        :type tracked_record_hash: int
        """

        self._tracked_record_hash = tracked_record_hash
