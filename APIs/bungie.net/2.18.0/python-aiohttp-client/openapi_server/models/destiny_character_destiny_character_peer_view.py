# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_character_destiny_item_peer_view import DestinyCharacterDestinyItemPeerView
from openapi_server import util


class DestinyCharacterDestinyCharacterPeerView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, equipment: List[DestinyCharacterDestinyItemPeerView]=None):
        """DestinyCharacterDestinyCharacterPeerView - a model defined in OpenAPI

        :param equipment: The equipment of this DestinyCharacterDestinyCharacterPeerView.
        """
        self.openapi_types = {
            'equipment': List[DestinyCharacterDestinyItemPeerView]
        }

        self.attribute_map = {
            'equipment': 'equipment'
        }

        self._equipment = equipment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyCharacterDestinyCharacterPeerView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Character.DestinyCharacterPeerView of this DestinyCharacterDestinyCharacterPeerView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def equipment(self):
        """Gets the equipment of this DestinyCharacterDestinyCharacterPeerView.


        :return: The equipment of this DestinyCharacterDestinyCharacterPeerView.
        :rtype: List[DestinyCharacterDestinyItemPeerView]
        """
        return self._equipment

    @equipment.setter
    def equipment(self, equipment):
        """Sets the equipment of this DestinyCharacterDestinyCharacterPeerView.


        :param equipment: The equipment of this DestinyCharacterDestinyCharacterPeerView.
        :type equipment: List[DestinyCharacterDestinyItemPeerView]
        """

        self._equipment = equipment
