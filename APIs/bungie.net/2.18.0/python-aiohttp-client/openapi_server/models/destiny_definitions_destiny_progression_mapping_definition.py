# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server import util


class DestinyDefinitionsDestinyProgressionMappingDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, display_units: str=None, hash: int=None, index: int=None, redacted: bool=None):
        """DestinyDefinitionsDestinyProgressionMappingDefinition - a model defined in OpenAPI

        :param display_properties: The display_properties of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :param display_units: The display_units of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :param index: The index of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        """
        self.openapi_types = {
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'display_units': str,
            'hash': int,
            'index': int,
            'redacted': bool
        }

        self.attribute_map = {
            'display_properties': 'displayProperties',
            'display_units': 'displayUnits',
            'hash': 'hash',
            'index': 'index',
            'redacted': 'redacted'
        }

        self._display_properties = display_properties
        self._display_units = display_units
        self._hash = hash
        self._index = index
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyProgressionMappingDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyProgressionMappingDefinition of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        Infrequently defined in practice. Defer to the individual progressions' display properties.

        :return: The display_properties of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        Infrequently defined in practice. Defer to the individual progressions' display properties.

        :param display_properties: The display_properties of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def display_units(self):
        """Gets the display_units of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        The localized unit of measurement for progression across the progressions defined in this mapping. Unfortunately, this is very infrequently defined. Defer to the individual progressions' display units.

        :return: The display_units of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :rtype: str
        """
        return self._display_units

    @display_units.setter
    def display_units(self, display_units):
        """Sets the display_units of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        The localized unit of measurement for progression across the progressions defined in this mapping. Unfortunately, this is very infrequently defined. Defer to the individual progressions' display units.

        :param display_units: The display_units of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :type display_units: str
        """

        self._display_units = display_units

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :type index: int
        """

        self._index = index

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinyProgressionMappingDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinyProgressionMappingDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
