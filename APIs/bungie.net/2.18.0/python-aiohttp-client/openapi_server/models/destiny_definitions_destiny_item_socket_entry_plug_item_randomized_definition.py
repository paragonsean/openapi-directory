# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_destiny_plug_item_crafting_requirements import DestinyDefinitionsDestinyPlugItemCraftingRequirements
from openapi_server import util


class DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crafting_requirements: DestinyDefinitionsDestinyPlugItemCraftingRequirements=None, currently_can_roll: bool=None, plug_item_hash: int=None):
        """DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition - a model defined in OpenAPI

        :param crafting_requirements: The crafting_requirements of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        :param currently_can_roll: The currently_can_roll of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        :param plug_item_hash: The plug_item_hash of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        """
        self.openapi_types = {
            'crafting_requirements': DestinyDefinitionsDestinyPlugItemCraftingRequirements,
            'currently_can_roll': bool,
            'plug_item_hash': int
        }

        self.attribute_map = {
            'crafting_requirements': 'craftingRequirements',
            'currently_can_roll': 'currentlyCanRoll',
            'plug_item_hash': 'plugItemHash'
        }

        self._crafting_requirements = crafting_requirements
        self._currently_can_roll = currently_can_roll
        self._plug_item_hash = plug_item_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyItemSocketEntryPlugItemRandomizedDefinition of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crafting_requirements(self):
        """Gets the crafting_requirements of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.


        :return: The crafting_requirements of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        :rtype: DestinyDefinitionsDestinyPlugItemCraftingRequirements
        """
        return self._crafting_requirements

    @crafting_requirements.setter
    def crafting_requirements(self, crafting_requirements):
        """Sets the crafting_requirements of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.


        :param crafting_requirements: The crafting_requirements of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        :type crafting_requirements: DestinyDefinitionsDestinyPlugItemCraftingRequirements
        """

        self._crafting_requirements = crafting_requirements

    @property
    def currently_can_roll(self):
        """Gets the currently_can_roll of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.

        Indicates if the plug can be rolled on the current version of the item. For example, older versions of weapons may have plug rolls that are no longer possible on the current versions.

        :return: The currently_can_roll of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        :rtype: bool
        """
        return self._currently_can_roll

    @currently_can_roll.setter
    def currently_can_roll(self, currently_can_roll):
        """Sets the currently_can_roll of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.

        Indicates if the plug can be rolled on the current version of the item. For example, older versions of weapons may have plug rolls that are no longer possible on the current versions.

        :param currently_can_roll: The currently_can_roll of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        :type currently_can_roll: bool
        """

        self._currently_can_roll = currently_can_roll

    @property
    def plug_item_hash(self):
        """Gets the plug_item_hash of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.

        The hash identifier of a DestinyInventoryItemDefinition representing the plug that can be inserted.

        :return: The plug_item_hash of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        :rtype: int
        """
        return self._plug_item_hash

    @plug_item_hash.setter
    def plug_item_hash(self, plug_item_hash):
        """Sets the plug_item_hash of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.

        The hash identifier of a DestinyInventoryItemDefinition representing the plug that can be inserted.

        :param plug_item_hash: The plug_item_hash of this DestinyDefinitionsDestinyItemSocketEntryPlugItemRandomizedDefinition.
        :type plug_item_hash: int
        """

        self._plug_item_hash = plug_item_hash
