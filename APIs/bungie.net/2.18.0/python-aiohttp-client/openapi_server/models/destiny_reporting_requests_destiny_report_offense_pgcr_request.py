# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyReportingRequestsDestinyReportOffensePgcrRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offending_character_id: int=None, reason_category_hashes: List[int]=None, reason_hashes: List[int]=None):
        """DestinyReportingRequestsDestinyReportOffensePgcrRequest - a model defined in OpenAPI

        :param offending_character_id: The offending_character_id of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        :param reason_category_hashes: The reason_category_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        :param reason_hashes: The reason_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        """
        self.openapi_types = {
            'offending_character_id': int,
            'reason_category_hashes': List[int],
            'reason_hashes': List[int]
        }

        self.attribute_map = {
            'offending_character_id': 'offendingCharacterId',
            'reason_category_hashes': 'reasonCategoryHashes',
            'reason_hashes': 'reasonHashes'
        }

        self._offending_character_id = offending_character_id
        self._reason_category_hashes = reason_category_hashes
        self._reason_hashes = reason_hashes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyReportingRequestsDestinyReportOffensePgcrRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Reporting.Requests.DestinyReportOffensePgcrRequest of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offending_character_id(self):
        """Gets the offending_character_id of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.

        Within the PGCR provided when calling the Reporting endpoint, this should be the character ID of the user that you thought was violating terms of use. They must exist in the PGCR provided.

        :return: The offending_character_id of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        :rtype: int
        """
        return self._offending_character_id

    @offending_character_id.setter
    def offending_character_id(self, offending_character_id):
        """Sets the offending_character_id of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.

        Within the PGCR provided when calling the Reporting endpoint, this should be the character ID of the user that you thought was violating terms of use. They must exist in the PGCR provided.

        :param offending_character_id: The offending_character_id of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        :type offending_character_id: int
        """

        self._offending_character_id = offending_character_id

    @property
    def reason_category_hashes(self):
        """Gets the reason_category_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.

        So you've decided to report someone instead of cursing them and their descendants. Well, okay then. This is the category or categorie(s) of infractions for which you are reporting the user. These are hash identifiers that map to DestinyReportReasonCategoryDefinition entries.

        :return: The reason_category_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        :rtype: List[int]
        """
        return self._reason_category_hashes

    @reason_category_hashes.setter
    def reason_category_hashes(self, reason_category_hashes):
        """Sets the reason_category_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.

        So you've decided to report someone instead of cursing them and their descendants. Well, okay then. This is the category or categorie(s) of infractions for which you are reporting the user. These are hash identifiers that map to DestinyReportReasonCategoryDefinition entries.

        :param reason_category_hashes: The reason_category_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        :type reason_category_hashes: List[int]
        """

        self._reason_category_hashes = reason_category_hashes

    @property
    def reason_hashes(self):
        """Gets the reason_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.

        If applicable, provide a more specific reason(s) within the general category of problems provided by the reasonHash. This is also an identifier for a reason. All reasonHashes provided must be children of at least one the reasonCategoryHashes provided.

        :return: The reason_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        :rtype: List[int]
        """
        return self._reason_hashes

    @reason_hashes.setter
    def reason_hashes(self, reason_hashes):
        """Sets the reason_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.

        If applicable, provide a more specific reason(s) within the general category of problems provided by the reasonHash. This is also an identifier for a reason. All reasonHashes provided must be children of at least one the reasonCategoryHashes provided.

        :param reason_hashes: The reason_hashes of this DestinyReportingRequestsDestinyReportOffensePgcrRequest.
        :type reason_hashes: List[int]
        """

        self._reason_hashes = reason_hashes
