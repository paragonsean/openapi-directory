# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_historical_stats_destiny_historical_stats_activity import DestinyHistoricalStatsDestinyHistoricalStatsActivity
from openapi_server.models.destiny_historical_stats_destiny_historical_stats_value import DestinyHistoricalStatsDestinyHistoricalStatsValue
from openapi_server import util


class DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_details: DestinyHistoricalStatsDestinyHistoricalStatsActivity=None, period: datetime=None, values: Dict[str, DestinyHistoricalStatsDestinyHistoricalStatsValue]=None):
        """DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup - a model defined in OpenAPI

        :param activity_details: The activity_details of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        :param period: The period of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        :param values: The values of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        """
        self.openapi_types = {
            'activity_details': DestinyHistoricalStatsDestinyHistoricalStatsActivity,
            'period': datetime,
            'values': Dict[str, DestinyHistoricalStatsDestinyHistoricalStatsValue]
        }

        self.attribute_map = {
            'activity_details': 'activityDetails',
            'period': 'period',
            'values': 'values'
        }

        self._activity_details = activity_details
        self._period = period
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.HistoricalStats.DestinyHistoricalStatsPeriodGroup of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_details(self):
        """Gets the activity_details of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.

        If the period group is for a specific activity, this property will be set.

        :return: The activity_details of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        :rtype: DestinyHistoricalStatsDestinyHistoricalStatsActivity
        """
        return self._activity_details

    @activity_details.setter
    def activity_details(self, activity_details):
        """Sets the activity_details of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.

        If the period group is for a specific activity, this property will be set.

        :param activity_details: The activity_details of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        :type activity_details: DestinyHistoricalStatsDestinyHistoricalStatsActivity
        """

        self._activity_details = activity_details

    @property
    def period(self):
        """Gets the period of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.

        Period for the group. If the stat periodType is day, then this will have a specific day. If the type is monthly, then this value will be the first day of the applicable month. This value is not set when the periodType is 'all time'.

        :return: The period of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        :rtype: datetime
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.

        Period for the group. If the stat periodType is day, then this will have a specific day. If the type is monthly, then this value will be the first day of the applicable month. This value is not set when the periodType is 'all time'.

        :param period: The period of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        :type period: datetime
        """

        self._period = period

    @property
    def values(self):
        """Gets the values of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.

        Collection of stats for the period.

        :return: The values of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        :rtype: Dict[str, DestinyHistoricalStatsDestinyHistoricalStatsValue]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.

        Collection of stats for the period.

        :param values: The values of this DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.
        :type values: Dict[str, DestinyHistoricalStatsDestinyHistoricalStatsValue]
        """

        self._values = values
