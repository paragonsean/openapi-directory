# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_common_destiny_display_properties_definition import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
from openapi_server.models.destiny_misc_destiny_color import DestinyMiscDestinyColor
from openapi_server import util


class DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_commendation_hashes: List[int]=None, child_commendation_node_hashes: List[int]=None, color: DestinyMiscDestinyColor=None, display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition=None, hash: int=None, index: int=None, parent_commendation_node_hash: int=None, redacted: bool=None):
        """DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition - a model defined in OpenAPI

        :param child_commendation_hashes: The child_commendation_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :param child_commendation_node_hashes: The child_commendation_node_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :param color: The color of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :param display_properties: The display_properties of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :param hash: The hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :param index: The index of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :param parent_commendation_node_hash: The parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :param redacted: The redacted of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        """
        self.openapi_types = {
            'child_commendation_hashes': List[int],
            'child_commendation_node_hashes': List[int],
            'color': DestinyMiscDestinyColor,
            'display_properties': DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
            'hash': int,
            'index': int,
            'parent_commendation_node_hash': int,
            'redacted': bool
        }

        self.attribute_map = {
            'child_commendation_hashes': 'childCommendationHashes',
            'child_commendation_node_hashes': 'childCommendationNodeHashes',
            'color': 'color',
            'display_properties': 'displayProperties',
            'hash': 'hash',
            'index': 'index',
            'parent_commendation_node_hash': 'parentCommendationNodeHash',
            'redacted': 'redacted'
        }

        self._child_commendation_hashes = child_commendation_hashes
        self._child_commendation_node_hashes = child_commendation_node_hashes
        self._color = color
        self._display_properties = display_properties
        self._hash = hash
        self._index = index
        self._parent_commendation_node_hash = parent_commendation_node_hash
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Social.DestinySocialCommendationNodeDefinition of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_commendation_hashes(self):
        """Gets the child_commendation_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        A list of hashes that map to child commendations.

        :return: The child_commendation_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :rtype: List[int]
        """
        return self._child_commendation_hashes

    @child_commendation_hashes.setter
    def child_commendation_hashes(self, child_commendation_hashes):
        """Sets the child_commendation_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        A list of hashes that map to child commendations.

        :param child_commendation_hashes: The child_commendation_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :type child_commendation_hashes: List[int]
        """

        self._child_commendation_hashes = child_commendation_hashes

    @property
    def child_commendation_node_hashes(self):
        """Gets the child_commendation_node_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        A list of hashes that map to child commendation nodes. Only the root commendations node is expected to have child nodes.

        :return: The child_commendation_node_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :rtype: List[int]
        """
        return self._child_commendation_node_hashes

    @child_commendation_node_hashes.setter
    def child_commendation_node_hashes(self, child_commendation_node_hashes):
        """Sets the child_commendation_node_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        A list of hashes that map to child commendation nodes. Only the root commendations node is expected to have child nodes.

        :param child_commendation_node_hashes: The child_commendation_node_hashes of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :type child_commendation_node_hashes: List[int]
        """

        self._child_commendation_node_hashes = child_commendation_node_hashes

    @property
    def color(self):
        """Gets the color of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        The color associated with this group of commendations.

        :return: The color of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :rtype: DestinyMiscDestinyColor
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        The color associated with this group of commendations.

        :param color: The color of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :type color: DestinyMiscDestinyColor
        """

        self._color = color

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.


        :return: The display_properties of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :rtype: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.


        :param display_properties: The display_properties of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :type display_properties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :type index: int
        """

        self._index = index

    @property
    def parent_commendation_node_hash(self):
        """Gets the parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.


        :return: The parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :rtype: int
        """
        return self._parent_commendation_node_hash

    @parent_commendation_node_hash.setter
    def parent_commendation_node_hash(self, parent_commendation_node_hash):
        """Sets the parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.


        :param parent_commendation_node_hash: The parent_commendation_node_hash of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :type parent_commendation_node_hash: int
        """

        self._parent_commendation_node_hash = parent_commendation_node_hash

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsSocialDestinySocialCommendationNodeDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
