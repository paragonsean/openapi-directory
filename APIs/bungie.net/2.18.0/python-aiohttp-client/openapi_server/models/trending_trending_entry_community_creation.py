# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrendingTrendingEntryCommunityCreation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, author_membership_id: int=None, body: str=None, media: str=None, post_id: int=None, title: str=None, upvotes: int=None):
        """TrendingTrendingEntryCommunityCreation - a model defined in OpenAPI

        :param author: The author of this TrendingTrendingEntryCommunityCreation.
        :param author_membership_id: The author_membership_id of this TrendingTrendingEntryCommunityCreation.
        :param body: The body of this TrendingTrendingEntryCommunityCreation.
        :param media: The media of this TrendingTrendingEntryCommunityCreation.
        :param post_id: The post_id of this TrendingTrendingEntryCommunityCreation.
        :param title: The title of this TrendingTrendingEntryCommunityCreation.
        :param upvotes: The upvotes of this TrendingTrendingEntryCommunityCreation.
        """
        self.openapi_types = {
            'author': str,
            'author_membership_id': int,
            'body': str,
            'media': str,
            'post_id': int,
            'title': str,
            'upvotes': int
        }

        self.attribute_map = {
            'author': 'author',
            'author_membership_id': 'authorMembershipId',
            'body': 'body',
            'media': 'media',
            'post_id': 'postId',
            'title': 'title',
            'upvotes': 'upvotes'
        }

        self._author = author
        self._author_membership_id = author_membership_id
        self._body = body
        self._media = media
        self._post_id = post_id
        self._title = title
        self._upvotes = upvotes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrendingTrendingEntryCommunityCreation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Trending.TrendingEntryCommunityCreation of this TrendingTrendingEntryCommunityCreation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this TrendingTrendingEntryCommunityCreation.


        :return: The author of this TrendingTrendingEntryCommunityCreation.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this TrendingTrendingEntryCommunityCreation.


        :param author: The author of this TrendingTrendingEntryCommunityCreation.
        :type author: str
        """

        self._author = author

    @property
    def author_membership_id(self):
        """Gets the author_membership_id of this TrendingTrendingEntryCommunityCreation.


        :return: The author_membership_id of this TrendingTrendingEntryCommunityCreation.
        :rtype: int
        """
        return self._author_membership_id

    @author_membership_id.setter
    def author_membership_id(self, author_membership_id):
        """Sets the author_membership_id of this TrendingTrendingEntryCommunityCreation.


        :param author_membership_id: The author_membership_id of this TrendingTrendingEntryCommunityCreation.
        :type author_membership_id: int
        """

        self._author_membership_id = author_membership_id

    @property
    def body(self):
        """Gets the body of this TrendingTrendingEntryCommunityCreation.


        :return: The body of this TrendingTrendingEntryCommunityCreation.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this TrendingTrendingEntryCommunityCreation.


        :param body: The body of this TrendingTrendingEntryCommunityCreation.
        :type body: str
        """

        self._body = body

    @property
    def media(self):
        """Gets the media of this TrendingTrendingEntryCommunityCreation.


        :return: The media of this TrendingTrendingEntryCommunityCreation.
        :rtype: str
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this TrendingTrendingEntryCommunityCreation.


        :param media: The media of this TrendingTrendingEntryCommunityCreation.
        :type media: str
        """

        self._media = media

    @property
    def post_id(self):
        """Gets the post_id of this TrendingTrendingEntryCommunityCreation.


        :return: The post_id of this TrendingTrendingEntryCommunityCreation.
        :rtype: int
        """
        return self._post_id

    @post_id.setter
    def post_id(self, post_id):
        """Sets the post_id of this TrendingTrendingEntryCommunityCreation.


        :param post_id: The post_id of this TrendingTrendingEntryCommunityCreation.
        :type post_id: int
        """

        self._post_id = post_id

    @property
    def title(self):
        """Gets the title of this TrendingTrendingEntryCommunityCreation.


        :return: The title of this TrendingTrendingEntryCommunityCreation.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this TrendingTrendingEntryCommunityCreation.


        :param title: The title of this TrendingTrendingEntryCommunityCreation.
        :type title: str
        """

        self._title = title

    @property
    def upvotes(self):
        """Gets the upvotes of this TrendingTrendingEntryCommunityCreation.


        :return: The upvotes of this TrendingTrendingEntryCommunityCreation.
        :rtype: int
        """
        return self._upvotes

    @upvotes.setter
    def upvotes(self, upvotes):
        """Sets the upvotes of this TrendingTrendingEntryCommunityCreation.


        :param upvotes: The upvotes of this TrendingTrendingEntryCommunityCreation.
        :type upvotes: int
        """

        self._upvotes = upvotes
