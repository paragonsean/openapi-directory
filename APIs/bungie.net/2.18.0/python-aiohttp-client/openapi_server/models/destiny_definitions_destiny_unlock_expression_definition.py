# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsDestinyUnlockExpressionDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scope: int=None):
        """DestinyDefinitionsDestinyUnlockExpressionDefinition - a model defined in OpenAPI

        :param scope: The scope of this DestinyDefinitionsDestinyUnlockExpressionDefinition.
        """
        self.openapi_types = {
            'scope': int
        }

        self.attribute_map = {
            'scope': 'scope'
        }

        self._scope = scope

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyUnlockExpressionDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyUnlockExpressionDefinition of this DestinyDefinitionsDestinyUnlockExpressionDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scope(self):
        """Gets the scope of this DestinyDefinitionsDestinyUnlockExpressionDefinition.

        A shortcut for determining the most restrictive gating that this expression performs. See the DestinyGatingScope enum's documentation for more details.

        :return: The scope of this DestinyDefinitionsDestinyUnlockExpressionDefinition.
        :rtype: int
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this DestinyDefinitionsDestinyUnlockExpressionDefinition.

        A shortcut for determining the most restrictive gating that this expression performs. See the DestinyGatingScope enum's documentation for more details.

        :param scope: The scope of this DestinyDefinitionsDestinyUnlockExpressionDefinition.
        :type scope: int
        """

        self._scope = scope
