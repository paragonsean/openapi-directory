# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash: int=None, index: int=None, name: str=None, redacted: bool=None):
        """DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition - a model defined in OpenAPI

        :param hash: The hash of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :param index: The index of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :param name: The name of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :param redacted: The redacted of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        """
        self.openapi_types = {
            'hash': int,
            'index': int,
            'name': str,
            'redacted': bool
        }

        self.attribute_map = {
            'hash': 'hash',
            'index': 'index',
            'name': 'name',
            'redacted': 'redacted'
        }

        self._hash = hash
        self._index = index
        self._name = name
        self._redacted = redacted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Loadouts.DestinyLoadoutNameDefinition of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :type index: int
        """

        self._index = index

    @property
    def name(self):
        """Gets the name of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.


        :return: The name of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.


        :param name: The name of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :type name: str
        """

        self._name = name

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsLoadoutsDestinyLoadoutNameDefinition.
        :type redacted: bool
        """

        self._redacted = redacted
