# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ignores_ignore_response import IgnoresIgnoreResponse
from openapi_server import util


class TagsModelsContractsTagResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignore_status: IgnoresIgnoreResponse=None, tag_text: str=None):
        """TagsModelsContractsTagResponse - a model defined in OpenAPI

        :param ignore_status: The ignore_status of this TagsModelsContractsTagResponse.
        :param tag_text: The tag_text of this TagsModelsContractsTagResponse.
        """
        self.openapi_types = {
            'ignore_status': IgnoresIgnoreResponse,
            'tag_text': str
        }

        self.attribute_map = {
            'ignore_status': 'ignoreStatus',
            'tag_text': 'tagText'
        }

        self._ignore_status = ignore_status
        self._tag_text = tag_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagsModelsContractsTagResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tags.Models.Contracts.TagResponse of this TagsModelsContractsTagResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignore_status(self):
        """Gets the ignore_status of this TagsModelsContractsTagResponse.


        :return: The ignore_status of this TagsModelsContractsTagResponse.
        :rtype: IgnoresIgnoreResponse
        """
        return self._ignore_status

    @ignore_status.setter
    def ignore_status(self, ignore_status):
        """Sets the ignore_status of this TagsModelsContractsTagResponse.


        :param ignore_status: The ignore_status of this TagsModelsContractsTagResponse.
        :type ignore_status: IgnoresIgnoreResponse
        """

        self._ignore_status = ignore_status

    @property
    def tag_text(self):
        """Gets the tag_text of this TagsModelsContractsTagResponse.


        :return: The tag_text of this TagsModelsContractsTagResponse.
        :rtype: str
        """
        return self._tag_text

    @tag_text.setter
    def tag_text(self, tag_text):
        """Sets the tag_text of this TagsModelsContractsTagResponse.


        :param tag_text: The tag_text of this TagsModelsContractsTagResponse.
        :type tag_text: str
        """

        self._tag_text = tag_text
