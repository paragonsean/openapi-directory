# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_destiny_progression import DestinyDestinyProgression
from openapi_server import util


class DestinyEntitiesVendorsDestinyVendorComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_purchase: bool=None, enabled: bool=None, next_refresh_date: datetime=None, progression: DestinyDestinyProgression=None, seasonal_rank: int=None, vendor_hash: int=None, vendor_location_index: int=None):
        """DestinyEntitiesVendorsDestinyVendorComponent - a model defined in OpenAPI

        :param can_purchase: The can_purchase of this DestinyEntitiesVendorsDestinyVendorComponent.
        :param enabled: The enabled of this DestinyEntitiesVendorsDestinyVendorComponent.
        :param next_refresh_date: The next_refresh_date of this DestinyEntitiesVendorsDestinyVendorComponent.
        :param progression: The progression of this DestinyEntitiesVendorsDestinyVendorComponent.
        :param seasonal_rank: The seasonal_rank of this DestinyEntitiesVendorsDestinyVendorComponent.
        :param vendor_hash: The vendor_hash of this DestinyEntitiesVendorsDestinyVendorComponent.
        :param vendor_location_index: The vendor_location_index of this DestinyEntitiesVendorsDestinyVendorComponent.
        """
        self.openapi_types = {
            'can_purchase': bool,
            'enabled': bool,
            'next_refresh_date': datetime,
            'progression': DestinyDestinyProgression,
            'seasonal_rank': int,
            'vendor_hash': int,
            'vendor_location_index': int
        }

        self.attribute_map = {
            'can_purchase': 'canPurchase',
            'enabled': 'enabled',
            'next_refresh_date': 'nextRefreshDate',
            'progression': 'progression',
            'seasonal_rank': 'seasonalRank',
            'vendor_hash': 'vendorHash',
            'vendor_location_index': 'vendorLocationIndex'
        }

        self._can_purchase = can_purchase
        self._enabled = enabled
        self._next_refresh_date = next_refresh_date
        self._progression = progression
        self._seasonal_rank = seasonal_rank
        self._vendor_hash = vendor_hash
        self._vendor_location_index = vendor_location_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyEntitiesVendorsDestinyVendorComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Entities.Vendors.DestinyVendorComponent of this DestinyEntitiesVendorsDestinyVendorComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_purchase(self):
        """Gets the can_purchase of this DestinyEntitiesVendorsDestinyVendorComponent.

        If True, you can purchase from the Vendor.

        :return: The can_purchase of this DestinyEntitiesVendorsDestinyVendorComponent.
        :rtype: bool
        """
        return self._can_purchase

    @can_purchase.setter
    def can_purchase(self, can_purchase):
        """Sets the can_purchase of this DestinyEntitiesVendorsDestinyVendorComponent.

        If True, you can purchase from the Vendor.

        :param can_purchase: The can_purchase of this DestinyEntitiesVendorsDestinyVendorComponent.
        :type can_purchase: bool
        """

        self._can_purchase = can_purchase

    @property
    def enabled(self):
        """Gets the enabled of this DestinyEntitiesVendorsDestinyVendorComponent.

        If True, the Vendor is currently accessible.   If False, they may not actually be visible in the world at the moment.

        :return: The enabled of this DestinyEntitiesVendorsDestinyVendorComponent.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this DestinyEntitiesVendorsDestinyVendorComponent.

        If True, the Vendor is currently accessible.   If False, they may not actually be visible in the world at the moment.

        :param enabled: The enabled of this DestinyEntitiesVendorsDestinyVendorComponent.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def next_refresh_date(self):
        """Gets the next_refresh_date of this DestinyEntitiesVendorsDestinyVendorComponent.

        The date when this vendor's inventory will next rotate/refresh.  Note that this is distinct from the date ranges that the vendor is visible/available in-game: this field indicates the specific time when the vendor's available items refresh and rotate, regardless of whether the vendor is actually available at that time. Unfortunately, these two values may be (and are, for the case of important vendors like Xur) different.  Issue https://github.com/Bungie-net/api/issues/353 is tracking a fix to start providing visibility date ranges where possible in addition to this refresh date, so that all important dates for vendors are available for use.

        :return: The next_refresh_date of this DestinyEntitiesVendorsDestinyVendorComponent.
        :rtype: datetime
        """
        return self._next_refresh_date

    @next_refresh_date.setter
    def next_refresh_date(self, next_refresh_date):
        """Sets the next_refresh_date of this DestinyEntitiesVendorsDestinyVendorComponent.

        The date when this vendor's inventory will next rotate/refresh.  Note that this is distinct from the date ranges that the vendor is visible/available in-game: this field indicates the specific time when the vendor's available items refresh and rotate, regardless of whether the vendor is actually available at that time. Unfortunately, these two values may be (and are, for the case of important vendors like Xur) different.  Issue https://github.com/Bungie-net/api/issues/353 is tracking a fix to start providing visibility date ranges where possible in addition to this refresh date, so that all important dates for vendors are available for use.

        :param next_refresh_date: The next_refresh_date of this DestinyEntitiesVendorsDestinyVendorComponent.
        :type next_refresh_date: datetime
        """

        self._next_refresh_date = next_refresh_date

    @property
    def progression(self):
        """Gets the progression of this DestinyEntitiesVendorsDestinyVendorComponent.

        If the Vendor has a related Reputation, this is the Progression data that represents the character's Reputation level with this Vendor.

        :return: The progression of this DestinyEntitiesVendorsDestinyVendorComponent.
        :rtype: DestinyDestinyProgression
        """
        return self._progression

    @progression.setter
    def progression(self, progression):
        """Sets the progression of this DestinyEntitiesVendorsDestinyVendorComponent.

        If the Vendor has a related Reputation, this is the Progression data that represents the character's Reputation level with this Vendor.

        :param progression: The progression of this DestinyEntitiesVendorsDestinyVendorComponent.
        :type progression: DestinyDestinyProgression
        """

        self._progression = progression

    @property
    def seasonal_rank(self):
        """Gets the seasonal_rank of this DestinyEntitiesVendorsDestinyVendorComponent.

        If this vendor has a seasonal rank, this will be the calculated value of that rank. How nice is that? I mean, that's pretty sweeet. It's a whole 32 bit integer.

        :return: The seasonal_rank of this DestinyEntitiesVendorsDestinyVendorComponent.
        :rtype: int
        """
        return self._seasonal_rank

    @seasonal_rank.setter
    def seasonal_rank(self, seasonal_rank):
        """Sets the seasonal_rank of this DestinyEntitiesVendorsDestinyVendorComponent.

        If this vendor has a seasonal rank, this will be the calculated value of that rank. How nice is that? I mean, that's pretty sweeet. It's a whole 32 bit integer.

        :param seasonal_rank: The seasonal_rank of this DestinyEntitiesVendorsDestinyVendorComponent.
        :type seasonal_rank: int
        """

        self._seasonal_rank = seasonal_rank

    @property
    def vendor_hash(self):
        """Gets the vendor_hash of this DestinyEntitiesVendorsDestinyVendorComponent.

        The unique identifier for the vendor. Use it to look up their DestinyVendorDefinition.

        :return: The vendor_hash of this DestinyEntitiesVendorsDestinyVendorComponent.
        :rtype: int
        """
        return self._vendor_hash

    @vendor_hash.setter
    def vendor_hash(self, vendor_hash):
        """Sets the vendor_hash of this DestinyEntitiesVendorsDestinyVendorComponent.

        The unique identifier for the vendor. Use it to look up their DestinyVendorDefinition.

        :param vendor_hash: The vendor_hash of this DestinyEntitiesVendorsDestinyVendorComponent.
        :type vendor_hash: int
        """

        self._vendor_hash = vendor_hash

    @property
    def vendor_location_index(self):
        """Gets the vendor_location_index of this DestinyEntitiesVendorsDestinyVendorComponent.

        An index into the vendor definition's \"locations\" property array, indicating which location they are at currently. If -1, then the vendor has no known location (and you may choose not to show them in your UI as a result. I mean, it's your bag honey)

        :return: The vendor_location_index of this DestinyEntitiesVendorsDestinyVendorComponent.
        :rtype: int
        """
        return self._vendor_location_index

    @vendor_location_index.setter
    def vendor_location_index(self, vendor_location_index):
        """Sets the vendor_location_index of this DestinyEntitiesVendorsDestinyVendorComponent.

        An index into the vendor definition's \"locations\" property array, indicating which location they are at currently. If -1, then the vendor has no known location (and you may choose not to show them in your UI as a result. I mean, it's your bag honey)

        :param vendor_location_index: The vendor_location_index of this DestinyEntitiesVendorsDestinyVendorComponent.
        :type vendor_location_index: int
        """

        self._vendor_location_index = vendor_location_index
