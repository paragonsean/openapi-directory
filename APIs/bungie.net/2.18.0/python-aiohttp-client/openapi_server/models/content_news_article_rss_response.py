# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_news_article_rss_item import ContentNewsArticleRssItem
from openapi_server import util


class ContentNewsArticleRssResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_filter: str=None, current_pagination_token: int=None, news_articles: List[ContentNewsArticleRssItem]=None, next_pagination_token: int=None, result_count_this_page: int=None):
        """ContentNewsArticleRssResponse - a model defined in OpenAPI

        :param category_filter: The category_filter of this ContentNewsArticleRssResponse.
        :param current_pagination_token: The current_pagination_token of this ContentNewsArticleRssResponse.
        :param news_articles: The news_articles of this ContentNewsArticleRssResponse.
        :param next_pagination_token: The next_pagination_token of this ContentNewsArticleRssResponse.
        :param result_count_this_page: The result_count_this_page of this ContentNewsArticleRssResponse.
        """
        self.openapi_types = {
            'category_filter': str,
            'current_pagination_token': int,
            'news_articles': List[ContentNewsArticleRssItem],
            'next_pagination_token': int,
            'result_count_this_page': int
        }

        self.attribute_map = {
            'category_filter': 'CategoryFilter',
            'current_pagination_token': 'CurrentPaginationToken',
            'news_articles': 'NewsArticles',
            'next_pagination_token': 'NextPaginationToken',
            'result_count_this_page': 'ResultCountThisPage'
        }

        self._category_filter = category_filter
        self._current_pagination_token = current_pagination_token
        self._news_articles = news_articles
        self._next_pagination_token = next_pagination_token
        self._result_count_this_page = result_count_this_page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentNewsArticleRssResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Content.NewsArticleRssResponse of this ContentNewsArticleRssResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_filter(self):
        """Gets the category_filter of this ContentNewsArticleRssResponse.


        :return: The category_filter of this ContentNewsArticleRssResponse.
        :rtype: str
        """
        return self._category_filter

    @category_filter.setter
    def category_filter(self, category_filter):
        """Sets the category_filter of this ContentNewsArticleRssResponse.


        :param category_filter: The category_filter of this ContentNewsArticleRssResponse.
        :type category_filter: str
        """

        self._category_filter = category_filter

    @property
    def current_pagination_token(self):
        """Gets the current_pagination_token of this ContentNewsArticleRssResponse.


        :return: The current_pagination_token of this ContentNewsArticleRssResponse.
        :rtype: int
        """
        return self._current_pagination_token

    @current_pagination_token.setter
    def current_pagination_token(self, current_pagination_token):
        """Sets the current_pagination_token of this ContentNewsArticleRssResponse.


        :param current_pagination_token: The current_pagination_token of this ContentNewsArticleRssResponse.
        :type current_pagination_token: int
        """

        self._current_pagination_token = current_pagination_token

    @property
    def news_articles(self):
        """Gets the news_articles of this ContentNewsArticleRssResponse.


        :return: The news_articles of this ContentNewsArticleRssResponse.
        :rtype: List[ContentNewsArticleRssItem]
        """
        return self._news_articles

    @news_articles.setter
    def news_articles(self, news_articles):
        """Sets the news_articles of this ContentNewsArticleRssResponse.


        :param news_articles: The news_articles of this ContentNewsArticleRssResponse.
        :type news_articles: List[ContentNewsArticleRssItem]
        """

        self._news_articles = news_articles

    @property
    def next_pagination_token(self):
        """Gets the next_pagination_token of this ContentNewsArticleRssResponse.


        :return: The next_pagination_token of this ContentNewsArticleRssResponse.
        :rtype: int
        """
        return self._next_pagination_token

    @next_pagination_token.setter
    def next_pagination_token(self, next_pagination_token):
        """Sets the next_pagination_token of this ContentNewsArticleRssResponse.


        :param next_pagination_token: The next_pagination_token of this ContentNewsArticleRssResponse.
        :type next_pagination_token: int
        """

        self._next_pagination_token = next_pagination_token

    @property
    def result_count_this_page(self):
        """Gets the result_count_this_page of this ContentNewsArticleRssResponse.


        :return: The result_count_this_page of this ContentNewsArticleRssResponse.
        :rtype: int
        """
        return self._result_count_this_page

    @result_count_this_page.setter
    def result_count_this_page(self, result_count_this_page):
        """Sets the result_count_this_page of this ContentNewsArticleRssResponse.


        :param result_count_this_page: The result_count_this_page of this ContentNewsArticleRssResponse.
        :type result_count_this_page: int
        """

        self._result_count_this_page = result_count_this_page
