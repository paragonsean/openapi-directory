# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyAdvancedAwaAuthorizationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_token: str=None, developer_note: str=None, maximum_number_of_uses: int=None, membership_type: int=None, response_reason: int=None, type: int=None, user_selection: int=None, valid_until: datetime=None):
        """DestinyAdvancedAwaAuthorizationResult - a model defined in OpenAPI

        :param action_token: The action_token of this DestinyAdvancedAwaAuthorizationResult.
        :param developer_note: The developer_note of this DestinyAdvancedAwaAuthorizationResult.
        :param maximum_number_of_uses: The maximum_number_of_uses of this DestinyAdvancedAwaAuthorizationResult.
        :param membership_type: The membership_type of this DestinyAdvancedAwaAuthorizationResult.
        :param response_reason: The response_reason of this DestinyAdvancedAwaAuthorizationResult.
        :param type: The type of this DestinyAdvancedAwaAuthorizationResult.
        :param user_selection: The user_selection of this DestinyAdvancedAwaAuthorizationResult.
        :param valid_until: The valid_until of this DestinyAdvancedAwaAuthorizationResult.
        """
        self.openapi_types = {
            'action_token': str,
            'developer_note': str,
            'maximum_number_of_uses': int,
            'membership_type': int,
            'response_reason': int,
            'type': int,
            'user_selection': int,
            'valid_until': datetime
        }

        self.attribute_map = {
            'action_token': 'actionToken',
            'developer_note': 'developerNote',
            'maximum_number_of_uses': 'maximumNumberOfUses',
            'membership_type': 'membershipType',
            'response_reason': 'responseReason',
            'type': 'type',
            'user_selection': 'userSelection',
            'valid_until': 'validUntil'
        }

        self._action_token = action_token
        self._developer_note = developer_note
        self._maximum_number_of_uses = maximum_number_of_uses
        self._membership_type = membership_type
        self._response_reason = response_reason
        self._type = type
        self._user_selection = user_selection
        self._valid_until = valid_until

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyAdvancedAwaAuthorizationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Advanced.AwaAuthorizationResult of this DestinyAdvancedAwaAuthorizationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_token(self):
        """Gets the action_token of this DestinyAdvancedAwaAuthorizationResult.

        Credential used to prove the user authorized an advanced write action.

        :return: The action_token of this DestinyAdvancedAwaAuthorizationResult.
        :rtype: str
        """
        return self._action_token

    @action_token.setter
    def action_token(self, action_token):
        """Sets the action_token of this DestinyAdvancedAwaAuthorizationResult.

        Credential used to prove the user authorized an advanced write action.

        :param action_token: The action_token of this DestinyAdvancedAwaAuthorizationResult.
        :type action_token: str
        """

        self._action_token = action_token

    @property
    def developer_note(self):
        """Gets the developer_note of this DestinyAdvancedAwaAuthorizationResult.

        Message to the app developer to help understand the response.

        :return: The developer_note of this DestinyAdvancedAwaAuthorizationResult.
        :rtype: str
        """
        return self._developer_note

    @developer_note.setter
    def developer_note(self, developer_note):
        """Sets the developer_note of this DestinyAdvancedAwaAuthorizationResult.

        Message to the app developer to help understand the response.

        :param developer_note: The developer_note of this DestinyAdvancedAwaAuthorizationResult.
        :type developer_note: str
        """

        self._developer_note = developer_note

    @property
    def maximum_number_of_uses(self):
        """Gets the maximum_number_of_uses of this DestinyAdvancedAwaAuthorizationResult.

        This token may be used to perform the requested action this number of times, at a maximum. If this value is 0, then there is no limit.

        :return: The maximum_number_of_uses of this DestinyAdvancedAwaAuthorizationResult.
        :rtype: int
        """
        return self._maximum_number_of_uses

    @maximum_number_of_uses.setter
    def maximum_number_of_uses(self, maximum_number_of_uses):
        """Sets the maximum_number_of_uses of this DestinyAdvancedAwaAuthorizationResult.

        This token may be used to perform the requested action this number of times, at a maximum. If this value is 0, then there is no limit.

        :param maximum_number_of_uses: The maximum_number_of_uses of this DestinyAdvancedAwaAuthorizationResult.
        :type maximum_number_of_uses: int
        """

        self._maximum_number_of_uses = maximum_number_of_uses

    @property
    def membership_type(self):
        """Gets the membership_type of this DestinyAdvancedAwaAuthorizationResult.

        MembershipType from the permission request.

        :return: The membership_type of this DestinyAdvancedAwaAuthorizationResult.
        :rtype: int
        """
        return self._membership_type

    @membership_type.setter
    def membership_type(self, membership_type):
        """Sets the membership_type of this DestinyAdvancedAwaAuthorizationResult.

        MembershipType from the permission request.

        :param membership_type: The membership_type of this DestinyAdvancedAwaAuthorizationResult.
        :type membership_type: int
        """

        self._membership_type = membership_type

    @property
    def response_reason(self):
        """Gets the response_reason of this DestinyAdvancedAwaAuthorizationResult.


        :return: The response_reason of this DestinyAdvancedAwaAuthorizationResult.
        :rtype: int
        """
        return self._response_reason

    @response_reason.setter
    def response_reason(self, response_reason):
        """Sets the response_reason of this DestinyAdvancedAwaAuthorizationResult.


        :param response_reason: The response_reason of this DestinyAdvancedAwaAuthorizationResult.
        :type response_reason: int
        """

        self._response_reason = response_reason

    @property
    def type(self):
        """Gets the type of this DestinyAdvancedAwaAuthorizationResult.

        Advanced Write Action Type from the permission request.

        :return: The type of this DestinyAdvancedAwaAuthorizationResult.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DestinyAdvancedAwaAuthorizationResult.

        Advanced Write Action Type from the permission request.

        :param type: The type of this DestinyAdvancedAwaAuthorizationResult.
        :type type: int
        """

        self._type = type

    @property
    def user_selection(self):
        """Gets the user_selection of this DestinyAdvancedAwaAuthorizationResult.

        Indication of how the user responded to the request. If the value is \"Approved\" the actionToken will contain the token that can be presented when performing the advanced write action.

        :return: The user_selection of this DestinyAdvancedAwaAuthorizationResult.
        :rtype: int
        """
        return self._user_selection

    @user_selection.setter
    def user_selection(self, user_selection):
        """Sets the user_selection of this DestinyAdvancedAwaAuthorizationResult.

        Indication of how the user responded to the request. If the value is \"Approved\" the actionToken will contain the token that can be presented when performing the advanced write action.

        :param user_selection: The user_selection of this DestinyAdvancedAwaAuthorizationResult.
        :type user_selection: int
        """

        self._user_selection = user_selection

    @property
    def valid_until(self):
        """Gets the valid_until of this DestinyAdvancedAwaAuthorizationResult.

        Time, UTC, when token expires.

        :return: The valid_until of this DestinyAdvancedAwaAuthorizationResult.
        :rtype: datetime
        """
        return self._valid_until

    @valid_until.setter
    def valid_until(self, valid_until):
        """Sets the valid_until of this DestinyAdvancedAwaAuthorizationResult.

        Time, UTC, when token expires.

        :param valid_until: The valid_until of this DestinyAdvancedAwaAuthorizationResult.
        :type valid_until: datetime
        """

        self._valid_until = valid_until
