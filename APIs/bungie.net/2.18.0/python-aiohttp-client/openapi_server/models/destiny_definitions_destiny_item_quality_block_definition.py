# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_destiny_item_version_definition import DestinyDefinitionsDestinyItemVersionDefinition
from openapi_server import util


class DestinyDefinitionsDestinyItemQualityBlockDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_version: int=None, display_version_watermark_icons: List[str]=None, infusion_category_hash: int=None, infusion_category_hashes: List[int]=None, infusion_category_name: str=None, item_levels: List[int]=None, progression_level_requirement_hash: int=None, quality_level: int=None, versions: List[DestinyDefinitionsDestinyItemVersionDefinition]=None):
        """DestinyDefinitionsDestinyItemQualityBlockDefinition - a model defined in OpenAPI

        :param current_version: The current_version of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :param display_version_watermark_icons: The display_version_watermark_icons of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :param infusion_category_hash: The infusion_category_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :param infusion_category_hashes: The infusion_category_hashes of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :param infusion_category_name: The infusion_category_name of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :param item_levels: The item_levels of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :param progression_level_requirement_hash: The progression_level_requirement_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :param quality_level: The quality_level of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :param versions: The versions of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        """
        self.openapi_types = {
            'current_version': int,
            'display_version_watermark_icons': List[str],
            'infusion_category_hash': int,
            'infusion_category_hashes': List[int],
            'infusion_category_name': str,
            'item_levels': List[int],
            'progression_level_requirement_hash': int,
            'quality_level': int,
            'versions': List[DestinyDefinitionsDestinyItemVersionDefinition]
        }

        self.attribute_map = {
            'current_version': 'currentVersion',
            'display_version_watermark_icons': 'displayVersionWatermarkIcons',
            'infusion_category_hash': 'infusionCategoryHash',
            'infusion_category_hashes': 'infusionCategoryHashes',
            'infusion_category_name': 'infusionCategoryName',
            'item_levels': 'itemLevels',
            'progression_level_requirement_hash': 'progressionLevelRequirementHash',
            'quality_level': 'qualityLevel',
            'versions': 'versions'
        }

        self._current_version = current_version
        self._display_version_watermark_icons = display_version_watermark_icons
        self._infusion_category_hash = infusion_category_hash
        self._infusion_category_hashes = infusion_category_hashes
        self._infusion_category_name = infusion_category_name
        self._item_levels = item_levels
        self._progression_level_requirement_hash = progression_level_requirement_hash
        self._quality_level = quality_level
        self._versions = versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyItemQualityBlockDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyItemQualityBlockDefinition of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_version(self):
        """Gets the current_version of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The latest version available for this item.

        :return: The current_version of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: int
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The latest version available for this item.

        :param current_version: The current_version of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type current_version: int
        """

        self._current_version = current_version

    @property
    def display_version_watermark_icons(self):
        """Gets the display_version_watermark_icons of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        Icon overlays to denote the item version and power cap status.

        :return: The display_version_watermark_icons of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: List[str]
        """
        return self._display_version_watermark_icons

    @display_version_watermark_icons.setter
    def display_version_watermark_icons(self, display_version_watermark_icons):
        """Sets the display_version_watermark_icons of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        Icon overlays to denote the item version and power cap status.

        :param display_version_watermark_icons: The display_version_watermark_icons of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type display_version_watermark_icons: List[str]
        """

        self._display_version_watermark_icons = display_version_watermark_icons

    @property
    def infusion_category_hash(self):
        """Gets the infusion_category_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The hash identifier for the infusion. It does not map to a Definition entity.  DEPRECATED: Items can now have multiple infusion categories. Please use infusionCategoryHashes instead.

        :return: The infusion_category_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: int
        """
        return self._infusion_category_hash

    @infusion_category_hash.setter
    def infusion_category_hash(self, infusion_category_hash):
        """Sets the infusion_category_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The hash identifier for the infusion. It does not map to a Definition entity.  DEPRECATED: Items can now have multiple infusion categories. Please use infusionCategoryHashes instead.

        :param infusion_category_hash: The infusion_category_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type infusion_category_hash: int
        """

        self._infusion_category_hash = infusion_category_hash

    @property
    def infusion_category_hashes(self):
        """Gets the infusion_category_hashes of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        If any one of these hashes matches any value in another item's infusionCategoryHashes, the two can infuse with each other.

        :return: The infusion_category_hashes of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: List[int]
        """
        return self._infusion_category_hashes

    @infusion_category_hashes.setter
    def infusion_category_hashes(self, infusion_category_hashes):
        """Sets the infusion_category_hashes of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        If any one of these hashes matches any value in another item's infusionCategoryHashes, the two can infuse with each other.

        :param infusion_category_hashes: The infusion_category_hashes of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type infusion_category_hashes: List[int]
        """

        self._infusion_category_hashes = infusion_category_hashes

    @property
    def infusion_category_name(self):
        """Gets the infusion_category_name of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The string identifier for this item's \"infusability\", if any.   Items that match the same infusionCategoryName are allowed to infuse with each other.  DEPRECATED: Items can now have multiple infusion categories. Please use infusionCategoryHashes instead.

        :return: The infusion_category_name of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: str
        """
        return self._infusion_category_name

    @infusion_category_name.setter
    def infusion_category_name(self, infusion_category_name):
        """Sets the infusion_category_name of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The string identifier for this item's \"infusability\", if any.   Items that match the same infusionCategoryName are allowed to infuse with each other.  DEPRECATED: Items can now have multiple infusion categories. Please use infusionCategoryHashes instead.

        :param infusion_category_name: The infusion_category_name of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type infusion_category_name: str
        """

        self._infusion_category_name = infusion_category_name

    @property
    def item_levels(self):
        """Gets the item_levels of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The \"base\" defined level of an item. This is a list because, in theory, each Expansion could define its own base level for an item.  In practice, not only was that never done in Destiny 1, but now this isn't even populated at all. When it's not populated, the level at which it spawns has to be inferred by Reward information, of which BNet receives an imperfect view and will only be reliable on instanced data as a result.

        :return: The item_levels of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: List[int]
        """
        return self._item_levels

    @item_levels.setter
    def item_levels(self, item_levels):
        """Sets the item_levels of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The \"base\" defined level of an item. This is a list because, in theory, each Expansion could define its own base level for an item.  In practice, not only was that never done in Destiny 1, but now this isn't even populated at all. When it's not populated, the level at which it spawns has to be inferred by Reward information, of which BNet receives an imperfect view and will only be reliable on instanced data as a result.

        :param item_levels: The item_levels of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type item_levels: List[int]
        """

        self._item_levels = item_levels

    @property
    def progression_level_requirement_hash(self):
        """Gets the progression_level_requirement_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        An item can refer to pre-set level requirements. They are defined in DestinyProgressionLevelRequirementDefinition, and you can use this hash to find the appropriate definition.

        :return: The progression_level_requirement_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: int
        """
        return self._progression_level_requirement_hash

    @progression_level_requirement_hash.setter
    def progression_level_requirement_hash(self, progression_level_requirement_hash):
        """Sets the progression_level_requirement_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        An item can refer to pre-set level requirements. They are defined in DestinyProgressionLevelRequirementDefinition, and you can use this hash to find the appropriate definition.

        :param progression_level_requirement_hash: The progression_level_requirement_hash of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type progression_level_requirement_hash: int
        """

        self._progression_level_requirement_hash = progression_level_requirement_hash

    @property
    def quality_level(self):
        """Gets the quality_level of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        qualityLevel is used in combination with the item's level to calculate stats like Attack and Defense. It plays a role in that calculation, but not nearly as large as itemLevel does.

        :return: The quality_level of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: int
        """
        return self._quality_level

    @quality_level.setter
    def quality_level(self, quality_level):
        """Sets the quality_level of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        qualityLevel is used in combination with the item's level to calculate stats like Attack and Defense. It plays a role in that calculation, but not nearly as large as itemLevel does.

        :param quality_level: The quality_level of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type quality_level: int
        """

        self._quality_level = quality_level

    @property
    def versions(self):
        """Gets the versions of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The list of versions available for this item.

        :return: The versions of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :rtype: List[DestinyDefinitionsDestinyItemVersionDefinition]
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this DestinyDefinitionsDestinyItemQualityBlockDefinition.

        The list of versions available for this item.

        :param versions: The versions of this DestinyDefinitionsDestinyItemQualityBlockDefinition.
        :type versions: List[DestinyDefinitionsDestinyItemVersionDefinition]
        """

        self._versions = versions
