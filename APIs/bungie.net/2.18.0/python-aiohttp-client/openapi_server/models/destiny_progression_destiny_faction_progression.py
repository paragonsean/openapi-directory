# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_destiny_progression_reset_entry import DestinyDestinyProgressionResetEntry
from openapi_server import util


class DestinyProgressionDestinyFactionProgression(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_progress: int=None, current_reset_count: int=None, daily_limit: int=None, daily_progress: int=None, faction_hash: int=None, faction_vendor_index: int=None, level: int=None, level_cap: int=None, next_level_at: int=None, progress_to_next_level: int=None, progression_hash: int=None, reward_item_states: List[int]=None, season_resets: List[DestinyDestinyProgressionResetEntry]=None, step_index: int=None, weekly_limit: int=None, weekly_progress: int=None):
        """DestinyProgressionDestinyFactionProgression - a model defined in OpenAPI

        :param current_progress: The current_progress of this DestinyProgressionDestinyFactionProgression.
        :param current_reset_count: The current_reset_count of this DestinyProgressionDestinyFactionProgression.
        :param daily_limit: The daily_limit of this DestinyProgressionDestinyFactionProgression.
        :param daily_progress: The daily_progress of this DestinyProgressionDestinyFactionProgression.
        :param faction_hash: The faction_hash of this DestinyProgressionDestinyFactionProgression.
        :param faction_vendor_index: The faction_vendor_index of this DestinyProgressionDestinyFactionProgression.
        :param level: The level of this DestinyProgressionDestinyFactionProgression.
        :param level_cap: The level_cap of this DestinyProgressionDestinyFactionProgression.
        :param next_level_at: The next_level_at of this DestinyProgressionDestinyFactionProgression.
        :param progress_to_next_level: The progress_to_next_level of this DestinyProgressionDestinyFactionProgression.
        :param progression_hash: The progression_hash of this DestinyProgressionDestinyFactionProgression.
        :param reward_item_states: The reward_item_states of this DestinyProgressionDestinyFactionProgression.
        :param season_resets: The season_resets of this DestinyProgressionDestinyFactionProgression.
        :param step_index: The step_index of this DestinyProgressionDestinyFactionProgression.
        :param weekly_limit: The weekly_limit of this DestinyProgressionDestinyFactionProgression.
        :param weekly_progress: The weekly_progress of this DestinyProgressionDestinyFactionProgression.
        """
        self.openapi_types = {
            'current_progress': int,
            'current_reset_count': int,
            'daily_limit': int,
            'daily_progress': int,
            'faction_hash': int,
            'faction_vendor_index': int,
            'level': int,
            'level_cap': int,
            'next_level_at': int,
            'progress_to_next_level': int,
            'progression_hash': int,
            'reward_item_states': List[int],
            'season_resets': List[DestinyDestinyProgressionResetEntry],
            'step_index': int,
            'weekly_limit': int,
            'weekly_progress': int
        }

        self.attribute_map = {
            'current_progress': 'currentProgress',
            'current_reset_count': 'currentResetCount',
            'daily_limit': 'dailyLimit',
            'daily_progress': 'dailyProgress',
            'faction_hash': 'factionHash',
            'faction_vendor_index': 'factionVendorIndex',
            'level': 'level',
            'level_cap': 'levelCap',
            'next_level_at': 'nextLevelAt',
            'progress_to_next_level': 'progressToNextLevel',
            'progression_hash': 'progressionHash',
            'reward_item_states': 'rewardItemStates',
            'season_resets': 'seasonResets',
            'step_index': 'stepIndex',
            'weekly_limit': 'weeklyLimit',
            'weekly_progress': 'weeklyProgress'
        }

        self._current_progress = current_progress
        self._current_reset_count = current_reset_count
        self._daily_limit = daily_limit
        self._daily_progress = daily_progress
        self._faction_hash = faction_hash
        self._faction_vendor_index = faction_vendor_index
        self._level = level
        self._level_cap = level_cap
        self._next_level_at = next_level_at
        self._progress_to_next_level = progress_to_next_level
        self._progression_hash = progression_hash
        self._reward_item_states = reward_item_states
        self._season_resets = season_resets
        self._step_index = step_index
        self._weekly_limit = weekly_limit
        self._weekly_progress = weekly_progress

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyProgressionDestinyFactionProgression':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Progression.DestinyFactionProgression of this DestinyProgressionDestinyFactionProgression.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_progress(self):
        """Gets the current_progress of this DestinyProgressionDestinyFactionProgression.

        This is the total amount of progress obtained overall for this progression (for instance, the total amount of Character Level experience earned)

        :return: The current_progress of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._current_progress

    @current_progress.setter
    def current_progress(self, current_progress):
        """Sets the current_progress of this DestinyProgressionDestinyFactionProgression.

        This is the total amount of progress obtained overall for this progression (for instance, the total amount of Character Level experience earned)

        :param current_progress: The current_progress of this DestinyProgressionDestinyFactionProgression.
        :type current_progress: int
        """

        self._current_progress = current_progress

    @property
    def current_reset_count(self):
        """Gets the current_reset_count of this DestinyProgressionDestinyFactionProgression.

        The number of resets of this progression you've executed this season, if applicable to this progression.

        :return: The current_reset_count of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._current_reset_count

    @current_reset_count.setter
    def current_reset_count(self, current_reset_count):
        """Sets the current_reset_count of this DestinyProgressionDestinyFactionProgression.

        The number of resets of this progression you've executed this season, if applicable to this progression.

        :param current_reset_count: The current_reset_count of this DestinyProgressionDestinyFactionProgression.
        :type current_reset_count: int
        """

        self._current_reset_count = current_reset_count

    @property
    def daily_limit(self):
        """Gets the daily_limit of this DestinyProgressionDestinyFactionProgression.

        If this progression has a daily limit, this is that limit.

        :return: The daily_limit of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._daily_limit

    @daily_limit.setter
    def daily_limit(self, daily_limit):
        """Sets the daily_limit of this DestinyProgressionDestinyFactionProgression.

        If this progression has a daily limit, this is that limit.

        :param daily_limit: The daily_limit of this DestinyProgressionDestinyFactionProgression.
        :type daily_limit: int
        """

        self._daily_limit = daily_limit

    @property
    def daily_progress(self):
        """Gets the daily_progress of this DestinyProgressionDestinyFactionProgression.

        The amount of progress earned today for this progression.

        :return: The daily_progress of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._daily_progress

    @daily_progress.setter
    def daily_progress(self, daily_progress):
        """Sets the daily_progress of this DestinyProgressionDestinyFactionProgression.

        The amount of progress earned today for this progression.

        :param daily_progress: The daily_progress of this DestinyProgressionDestinyFactionProgression.
        :type daily_progress: int
        """

        self._daily_progress = daily_progress

    @property
    def faction_hash(self):
        """Gets the faction_hash of this DestinyProgressionDestinyFactionProgression.

        The hash identifier of the Faction related to this progression. Use it to look up the DestinyFactionDefinition for more rendering info.

        :return: The faction_hash of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._faction_hash

    @faction_hash.setter
    def faction_hash(self, faction_hash):
        """Sets the faction_hash of this DestinyProgressionDestinyFactionProgression.

        The hash identifier of the Faction related to this progression. Use it to look up the DestinyFactionDefinition for more rendering info.

        :param faction_hash: The faction_hash of this DestinyProgressionDestinyFactionProgression.
        :type faction_hash: int
        """

        self._faction_hash = faction_hash

    @property
    def faction_vendor_index(self):
        """Gets the faction_vendor_index of this DestinyProgressionDestinyFactionProgression.

        The index of the Faction vendor that is currently available. Will be set to -1 if no vendors are available.

        :return: The faction_vendor_index of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._faction_vendor_index

    @faction_vendor_index.setter
    def faction_vendor_index(self, faction_vendor_index):
        """Sets the faction_vendor_index of this DestinyProgressionDestinyFactionProgression.

        The index of the Faction vendor that is currently available. Will be set to -1 if no vendors are available.

        :param faction_vendor_index: The faction_vendor_index of this DestinyProgressionDestinyFactionProgression.
        :type faction_vendor_index: int
        """

        self._faction_vendor_index = faction_vendor_index

    @property
    def level(self):
        """Gets the level of this DestinyProgressionDestinyFactionProgression.

        This is the level of the progression (for instance, the Character Level).

        :return: The level of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this DestinyProgressionDestinyFactionProgression.

        This is the level of the progression (for instance, the Character Level).

        :param level: The level of this DestinyProgressionDestinyFactionProgression.
        :type level: int
        """

        self._level = level

    @property
    def level_cap(self):
        """Gets the level_cap of this DestinyProgressionDestinyFactionProgression.

        This is the maximum possible level you can achieve for this progression (for example, the maximum character level obtainable)

        :return: The level_cap of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._level_cap

    @level_cap.setter
    def level_cap(self, level_cap):
        """Sets the level_cap of this DestinyProgressionDestinyFactionProgression.

        This is the maximum possible level you can achieve for this progression (for example, the maximum character level obtainable)

        :param level_cap: The level_cap of this DestinyProgressionDestinyFactionProgression.
        :type level_cap: int
        """

        self._level_cap = level_cap

    @property
    def next_level_at(self):
        """Gets the next_level_at of this DestinyProgressionDestinyFactionProgression.

        The total amount of progression (i.e. \"Experience\") needed in order to reach the next level.

        :return: The next_level_at of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._next_level_at

    @next_level_at.setter
    def next_level_at(self, next_level_at):
        """Sets the next_level_at of this DestinyProgressionDestinyFactionProgression.

        The total amount of progression (i.e. \"Experience\") needed in order to reach the next level.

        :param next_level_at: The next_level_at of this DestinyProgressionDestinyFactionProgression.
        :type next_level_at: int
        """

        self._next_level_at = next_level_at

    @property
    def progress_to_next_level(self):
        """Gets the progress_to_next_level of this DestinyProgressionDestinyFactionProgression.

        The amount of progression (i.e. \"Experience\") needed to reach the next level of this Progression. Jeez, progression is such an overloaded word.

        :return: The progress_to_next_level of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._progress_to_next_level

    @progress_to_next_level.setter
    def progress_to_next_level(self, progress_to_next_level):
        """Sets the progress_to_next_level of this DestinyProgressionDestinyFactionProgression.

        The amount of progression (i.e. \"Experience\") needed to reach the next level of this Progression. Jeez, progression is such an overloaded word.

        :param progress_to_next_level: The progress_to_next_level of this DestinyProgressionDestinyFactionProgression.
        :type progress_to_next_level: int
        """

        self._progress_to_next_level = progress_to_next_level

    @property
    def progression_hash(self):
        """Gets the progression_hash of this DestinyProgressionDestinyFactionProgression.

        The hash identifier of the Progression in question. Use it to look up the DestinyProgressionDefinition in static data.

        :return: The progression_hash of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._progression_hash

    @progression_hash.setter
    def progression_hash(self, progression_hash):
        """Sets the progression_hash of this DestinyProgressionDestinyFactionProgression.

        The hash identifier of the Progression in question. Use it to look up the DestinyProgressionDefinition in static data.

        :param progression_hash: The progression_hash of this DestinyProgressionDestinyFactionProgression.
        :type progression_hash: int
        """

        self._progression_hash = progression_hash

    @property
    def reward_item_states(self):
        """Gets the reward_item_states of this DestinyProgressionDestinyFactionProgression.

        Information about historical rewards for this progression, if there is any data for it.

        :return: The reward_item_states of this DestinyProgressionDestinyFactionProgression.
        :rtype: List[int]
        """
        return self._reward_item_states

    @reward_item_states.setter
    def reward_item_states(self, reward_item_states):
        """Sets the reward_item_states of this DestinyProgressionDestinyFactionProgression.

        Information about historical rewards for this progression, if there is any data for it.

        :param reward_item_states: The reward_item_states of this DestinyProgressionDestinyFactionProgression.
        :type reward_item_states: List[int]
        """

        self._reward_item_states = reward_item_states

    @property
    def season_resets(self):
        """Gets the season_resets of this DestinyProgressionDestinyFactionProgression.

        Information about historical resets of this progression, if there is any data for it.

        :return: The season_resets of this DestinyProgressionDestinyFactionProgression.
        :rtype: List[DestinyDestinyProgressionResetEntry]
        """
        return self._season_resets

    @season_resets.setter
    def season_resets(self, season_resets):
        """Sets the season_resets of this DestinyProgressionDestinyFactionProgression.

        Information about historical resets of this progression, if there is any data for it.

        :param season_resets: The season_resets of this DestinyProgressionDestinyFactionProgression.
        :type season_resets: List[DestinyDestinyProgressionResetEntry]
        """

        self._season_resets = season_resets

    @property
    def step_index(self):
        """Gets the step_index of this DestinyProgressionDestinyFactionProgression.

        Progressions define their levels in \"steps\". Since the last step may be repeatable, the user may be at a higher level than the actual Step achieved in the progression. Not necessarily useful, but potentially interesting for those cruising the API. Relate this to the \"steps\" property of the DestinyProgression to see which step the user is on, if you care about that. (Note that this is Content Version dependent since it refers to indexes.)

        :return: The step_index of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._step_index

    @step_index.setter
    def step_index(self, step_index):
        """Sets the step_index of this DestinyProgressionDestinyFactionProgression.

        Progressions define their levels in \"steps\". Since the last step may be repeatable, the user may be at a higher level than the actual Step achieved in the progression. Not necessarily useful, but potentially interesting for those cruising the API. Relate this to the \"steps\" property of the DestinyProgression to see which step the user is on, if you care about that. (Note that this is Content Version dependent since it refers to indexes.)

        :param step_index: The step_index of this DestinyProgressionDestinyFactionProgression.
        :type step_index: int
        """

        self._step_index = step_index

    @property
    def weekly_limit(self):
        """Gets the weekly_limit of this DestinyProgressionDestinyFactionProgression.

        If this progression has a weekly limit, this is that limit.

        :return: The weekly_limit of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._weekly_limit

    @weekly_limit.setter
    def weekly_limit(self, weekly_limit):
        """Sets the weekly_limit of this DestinyProgressionDestinyFactionProgression.

        If this progression has a weekly limit, this is that limit.

        :param weekly_limit: The weekly_limit of this DestinyProgressionDestinyFactionProgression.
        :type weekly_limit: int
        """

        self._weekly_limit = weekly_limit

    @property
    def weekly_progress(self):
        """Gets the weekly_progress of this DestinyProgressionDestinyFactionProgression.

        The amount of progress earned toward this progression in the current week.

        :return: The weekly_progress of this DestinyProgressionDestinyFactionProgression.
        :rtype: int
        """
        return self._weekly_progress

    @weekly_progress.setter
    def weekly_progress(self, weekly_progress):
        """Sets the weekly_progress of this DestinyProgressionDestinyFactionProgression.

        The amount of progress earned toward this progression in the current week.

        :param weekly_progress: The weekly_progress of this DestinyProgressionDestinyFactionProgression.
        :type weekly_progress: int
        """

        self._weekly_progress = weekly_progress
