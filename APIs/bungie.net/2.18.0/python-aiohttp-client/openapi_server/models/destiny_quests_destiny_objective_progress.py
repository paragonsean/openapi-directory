# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyQuestsDestinyObjectiveProgress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_hash: int=None, complete: bool=None, completion_value: int=None, destination_hash: int=None, objective_hash: int=None, progress: int=None, visible: bool=None):
        """DestinyQuestsDestinyObjectiveProgress - a model defined in OpenAPI

        :param activity_hash: The activity_hash of this DestinyQuestsDestinyObjectiveProgress.
        :param complete: The complete of this DestinyQuestsDestinyObjectiveProgress.
        :param completion_value: The completion_value of this DestinyQuestsDestinyObjectiveProgress.
        :param destination_hash: The destination_hash of this DestinyQuestsDestinyObjectiveProgress.
        :param objective_hash: The objective_hash of this DestinyQuestsDestinyObjectiveProgress.
        :param progress: The progress of this DestinyQuestsDestinyObjectiveProgress.
        :param visible: The visible of this DestinyQuestsDestinyObjectiveProgress.
        """
        self.openapi_types = {
            'activity_hash': int,
            'complete': bool,
            'completion_value': int,
            'destination_hash': int,
            'objective_hash': int,
            'progress': int,
            'visible': bool
        }

        self.attribute_map = {
            'activity_hash': 'activityHash',
            'complete': 'complete',
            'completion_value': 'completionValue',
            'destination_hash': 'destinationHash',
            'objective_hash': 'objectiveHash',
            'progress': 'progress',
            'visible': 'visible'
        }

        self._activity_hash = activity_hash
        self._complete = complete
        self._completion_value = completion_value
        self._destination_hash = destination_hash
        self._objective_hash = objective_hash
        self._progress = progress
        self._visible = visible

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyQuestsDestinyObjectiveProgress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Quests.DestinyObjectiveProgress of this DestinyQuestsDestinyObjectiveProgress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_hash(self):
        """Gets the activity_hash of this DestinyQuestsDestinyObjectiveProgress.

        If the Objective has an Activity associated with it, this is the unique identifier of the Activity being referred to. Use to look up the DestinyActivityDefinition in static data. This will give localized data about *what* you should be playing for the objective to be achieved.

        :return: The activity_hash of this DestinyQuestsDestinyObjectiveProgress.
        :rtype: int
        """
        return self._activity_hash

    @activity_hash.setter
    def activity_hash(self, activity_hash):
        """Sets the activity_hash of this DestinyQuestsDestinyObjectiveProgress.

        If the Objective has an Activity associated with it, this is the unique identifier of the Activity being referred to. Use to look up the DestinyActivityDefinition in static data. This will give localized data about *what* you should be playing for the objective to be achieved.

        :param activity_hash: The activity_hash of this DestinyQuestsDestinyObjectiveProgress.
        :type activity_hash: int
        """

        self._activity_hash = activity_hash

    @property
    def complete(self):
        """Gets the complete of this DestinyQuestsDestinyObjectiveProgress.

        Whether or not the Objective is completed.

        :return: The complete of this DestinyQuestsDestinyObjectiveProgress.
        :rtype: bool
        """
        return self._complete

    @complete.setter
    def complete(self, complete):
        """Sets the complete of this DestinyQuestsDestinyObjectiveProgress.

        Whether or not the Objective is completed.

        :param complete: The complete of this DestinyQuestsDestinyObjectiveProgress.
        :type complete: bool
        """

        self._complete = complete

    @property
    def completion_value(self):
        """Gets the completion_value of this DestinyQuestsDestinyObjectiveProgress.

        As of Forsaken, objectives' completion value is determined dynamically at runtime.  This value represents the threshold of progress you need to surpass in order for this objective to be considered \"complete\".  If you were using objective data, switch from using the DestinyObjectiveDefinition's \"completionValue\" to this value.

        :return: The completion_value of this DestinyQuestsDestinyObjectiveProgress.
        :rtype: int
        """
        return self._completion_value

    @completion_value.setter
    def completion_value(self, completion_value):
        """Sets the completion_value of this DestinyQuestsDestinyObjectiveProgress.

        As of Forsaken, objectives' completion value is determined dynamically at runtime.  This value represents the threshold of progress you need to surpass in order for this objective to be considered \"complete\".  If you were using objective data, switch from using the DestinyObjectiveDefinition's \"completionValue\" to this value.

        :param completion_value: The completion_value of this DestinyQuestsDestinyObjectiveProgress.
        :type completion_value: int
        """

        self._completion_value = completion_value

    @property
    def destination_hash(self):
        """Gets the destination_hash of this DestinyQuestsDestinyObjectiveProgress.

        If the Objective has a Destination associated with it, this is the unique identifier of the Destination being referred to. Use to look up the DestinyDestinationDefinition in static data. This will give localized data about *where* in the universe the objective should be achieved.

        :return: The destination_hash of this DestinyQuestsDestinyObjectiveProgress.
        :rtype: int
        """
        return self._destination_hash

    @destination_hash.setter
    def destination_hash(self, destination_hash):
        """Sets the destination_hash of this DestinyQuestsDestinyObjectiveProgress.

        If the Objective has a Destination associated with it, this is the unique identifier of the Destination being referred to. Use to look up the DestinyDestinationDefinition in static data. This will give localized data about *where* in the universe the objective should be achieved.

        :param destination_hash: The destination_hash of this DestinyQuestsDestinyObjectiveProgress.
        :type destination_hash: int
        """

        self._destination_hash = destination_hash

    @property
    def objective_hash(self):
        """Gets the objective_hash of this DestinyQuestsDestinyObjectiveProgress.

        The unique identifier of the Objective being referred to. Use to look up the DestinyObjectiveDefinition in static data.

        :return: The objective_hash of this DestinyQuestsDestinyObjectiveProgress.
        :rtype: int
        """
        return self._objective_hash

    @objective_hash.setter
    def objective_hash(self, objective_hash):
        """Sets the objective_hash of this DestinyQuestsDestinyObjectiveProgress.

        The unique identifier of the Objective being referred to. Use to look up the DestinyObjectiveDefinition in static data.

        :param objective_hash: The objective_hash of this DestinyQuestsDestinyObjectiveProgress.
        :type objective_hash: int
        """

        self._objective_hash = objective_hash

    @property
    def progress(self):
        """Gets the progress of this DestinyQuestsDestinyObjectiveProgress.

        If progress has been made, and the progress can be measured numerically, this will be the value of that progress. You can compare it to the DestinyObjectiveDefinition.completionValue property for current vs. upper bounds, and use DestinyObjectiveDefinition.inProgressValueStyle or completedValueStyle to determine how this should be rendered. Note that progress, in Destiny 2, need not be a literal numeric progression. It could be one of a number of possible values, even a Timestamp. Always examine DestinyObjectiveDefinition.inProgressValueStyle or completedValueStyle before rendering progress.

        :return: The progress of this DestinyQuestsDestinyObjectiveProgress.
        :rtype: int
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this DestinyQuestsDestinyObjectiveProgress.

        If progress has been made, and the progress can be measured numerically, this will be the value of that progress. You can compare it to the DestinyObjectiveDefinition.completionValue property for current vs. upper bounds, and use DestinyObjectiveDefinition.inProgressValueStyle or completedValueStyle to determine how this should be rendered. Note that progress, in Destiny 2, need not be a literal numeric progression. It could be one of a number of possible values, even a Timestamp. Always examine DestinyObjectiveDefinition.inProgressValueStyle or completedValueStyle before rendering progress.

        :param progress: The progress of this DestinyQuestsDestinyObjectiveProgress.
        :type progress: int
        """

        self._progress = progress

    @property
    def visible(self):
        """Gets the visible of this DestinyQuestsDestinyObjectiveProgress.

        If this is true, the objective is visible in-game. Otherwise, it's not yet visible to the player. Up to you if you want to honor this property.

        :return: The visible of this DestinyQuestsDestinyObjectiveProgress.
        :rtype: bool
        """
        return self._visible

    @visible.setter
    def visible(self, visible):
        """Sets the visible of this DestinyQuestsDestinyObjectiveProgress.

        If this is true, the objective is visible in-game. Otherwise, it's not yet visible to the player. Up to you if you want to honor this property.

        :param visible: The visible of this DestinyQuestsDestinyObjectiveProgress.
        :type visible: bool
        """

        self._visible = visible
