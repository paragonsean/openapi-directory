# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_character_destiny_character_customization import DestinyCharacterDestinyCharacterCustomization
from openapi_server.models.destiny_character_destiny_character_peer_view import DestinyCharacterDestinyCharacterPeerView
from openapi_server.models.destiny_dye_reference import DestinyDyeReference
from openapi_server import util


class DestinyEntitiesCharactersDestinyCharacterRenderComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_dyes: List[DestinyDyeReference]=None, customization: DestinyCharacterDestinyCharacterCustomization=None, peer_view: DestinyCharacterDestinyCharacterPeerView=None):
        """DestinyEntitiesCharactersDestinyCharacterRenderComponent - a model defined in OpenAPI

        :param custom_dyes: The custom_dyes of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        :param customization: The customization of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        :param peer_view: The peer_view of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        """
        self.openapi_types = {
            'custom_dyes': List[DestinyDyeReference],
            'customization': DestinyCharacterDestinyCharacterCustomization,
            'peer_view': DestinyCharacterDestinyCharacterPeerView
        }

        self.attribute_map = {
            'custom_dyes': 'customDyes',
            'customization': 'customization',
            'peer_view': 'peerView'
        }

        self._custom_dyes = custom_dyes
        self._customization = customization
        self._peer_view = peer_view

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyEntitiesCharactersDestinyCharacterRenderComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Entities.Characters.DestinyCharacterRenderComponent of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_dyes(self):
        """Gets the custom_dyes of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.

        Custom dyes, calculated by iterating over the character's equipped items. Useful for pre-fetching all of the dye data needed from our server.

        :return: The custom_dyes of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        :rtype: List[DestinyDyeReference]
        """
        return self._custom_dyes

    @custom_dyes.setter
    def custom_dyes(self, custom_dyes):
        """Sets the custom_dyes of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.

        Custom dyes, calculated by iterating over the character's equipped items. Useful for pre-fetching all of the dye data needed from our server.

        :param custom_dyes: The custom_dyes of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        :type custom_dyes: List[DestinyDyeReference]
        """

        self._custom_dyes = custom_dyes

    @property
    def customization(self):
        """Gets the customization of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.

        This is actually something that Spasm.js *doesn't* do right now, and that we don't return assets for yet. This is the data about what character customization options you picked. You can combine this with DestinyCharacterCustomizationOptionDefinition to show some cool info, and hopefully someday to actually render a user's face in 3D. We'll see if we ever end up with time for that.

        :return: The customization of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        :rtype: DestinyCharacterDestinyCharacterCustomization
        """
        return self._customization

    @customization.setter
    def customization(self, customization):
        """Sets the customization of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.

        This is actually something that Spasm.js *doesn't* do right now, and that we don't return assets for yet. This is the data about what character customization options you picked. You can combine this with DestinyCharacterCustomizationOptionDefinition to show some cool info, and hopefully someday to actually render a user's face in 3D. We'll see if we ever end up with time for that.

        :param customization: The customization of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        :type customization: DestinyCharacterDestinyCharacterCustomization
        """

        self._customization = customization

    @property
    def peer_view(self):
        """Gets the peer_view of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.

        A minimal view of:  - Equipped items  - The rendering-related custom options on those equipped items  Combined, that should be enough to render all of the items on the equipped character.

        :return: The peer_view of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        :rtype: DestinyCharacterDestinyCharacterPeerView
        """
        return self._peer_view

    @peer_view.setter
    def peer_view(self, peer_view):
        """Sets the peer_view of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.

        A minimal view of:  - Equipped items  - The rendering-related custom options on those equipped items  Combined, that should be enough to render all of the items on the equipped character.

        :param peer_view: The peer_view of this DestinyEntitiesCharactersDestinyCharacterRenderComponent.
        :type peer_view: DestinyCharacterDestinyCharacterPeerView
        """

        self._peer_view = peer_view
