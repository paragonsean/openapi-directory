# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_destiny_unlock_expression_definition import DestinyDefinitionsDestinyUnlockExpressionDefinition
from openapi_server.models.destiny_definitions_director_destiny_linked_graph_entry_definition import DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition
from openapi_server import util


class DestinyDefinitionsDirectorDestinyLinkedGraphDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, linked_graph_id: int=None, linked_graphs: List[DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition]=None, name: str=None, overview: str=None, unlock_expression: DestinyDefinitionsDestinyUnlockExpressionDefinition=None):
        """DestinyDefinitionsDirectorDestinyLinkedGraphDefinition - a model defined in OpenAPI

        :param description: The description of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :param linked_graph_id: The linked_graph_id of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :param linked_graphs: The linked_graphs of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :param name: The name of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :param overview: The overview of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :param unlock_expression: The unlock_expression of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        """
        self.openapi_types = {
            'description': str,
            'linked_graph_id': int,
            'linked_graphs': List[DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition],
            'name': str,
            'overview': str,
            'unlock_expression': DestinyDefinitionsDestinyUnlockExpressionDefinition
        }

        self.attribute_map = {
            'description': 'description',
            'linked_graph_id': 'linkedGraphId',
            'linked_graphs': 'linkedGraphs',
            'name': 'name',
            'overview': 'overview',
            'unlock_expression': 'unlockExpression'
        }

        self._description = description
        self._linked_graph_id = linked_graph_id
        self._linked_graphs = linked_graphs
        self._name = name
        self._overview = overview
        self._unlock_expression = unlock_expression

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDirectorDestinyLinkedGraphDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Director.DestinyLinkedGraphDefinition of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :return: The description of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :param description: The description of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :type description: str
        """

        self._description = description

    @property
    def linked_graph_id(self):
        """Gets the linked_graph_id of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :return: The linked_graph_id of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :rtype: int
        """
        return self._linked_graph_id

    @linked_graph_id.setter
    def linked_graph_id(self, linked_graph_id):
        """Sets the linked_graph_id of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :param linked_graph_id: The linked_graph_id of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :type linked_graph_id: int
        """

        self._linked_graph_id = linked_graph_id

    @property
    def linked_graphs(self):
        """Gets the linked_graphs of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :return: The linked_graphs of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :rtype: List[DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition]
        """
        return self._linked_graphs

    @linked_graphs.setter
    def linked_graphs(self, linked_graphs):
        """Sets the linked_graphs of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :param linked_graphs: The linked_graphs of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :type linked_graphs: List[DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition]
        """

        self._linked_graphs = linked_graphs

    @property
    def name(self):
        """Gets the name of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :return: The name of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :param name: The name of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :type name: str
        """

        self._name = name

    @property
    def overview(self):
        """Gets the overview of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :return: The overview of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :rtype: str
        """
        return self._overview

    @overview.setter
    def overview(self, overview):
        """Sets the overview of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :param overview: The overview of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :type overview: str
        """

        self._overview = overview

    @property
    def unlock_expression(self):
        """Gets the unlock_expression of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :return: The unlock_expression of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :rtype: DestinyDefinitionsDestinyUnlockExpressionDefinition
        """
        return self._unlock_expression

    @unlock_expression.setter
    def unlock_expression(self, unlock_expression):
        """Sets the unlock_expression of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.


        :param unlock_expression: The unlock_expression of this DestinyDefinitionsDirectorDestinyLinkedGraphDefinition.
        :type unlock_expression: DestinyDefinitionsDestinyUnlockExpressionDefinition
        """

        self._unlock_expression = unlock_expression
