# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_destiny_inventory_item_stat_definition import DestinyDefinitionsDestinyInventoryItemStatDefinition
from openapi_server import util


class DestinyDefinitionsSourcesDestinyItemSourceDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computed_stats: Dict[str, DestinyDefinitionsDestinyInventoryItemStatDefinition]=None, level: int=None, max_level_required: int=None, max_quality: int=None, min_level_required: int=None, min_quality: int=None, source_hashes: List[int]=None):
        """DestinyDefinitionsSourcesDestinyItemSourceDefinition - a model defined in OpenAPI

        :param computed_stats: The computed_stats of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :param level: The level of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :param max_level_required: The max_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :param max_quality: The max_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :param min_level_required: The min_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :param min_quality: The min_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :param source_hashes: The source_hashes of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        """
        self.openapi_types = {
            'computed_stats': Dict[str, DestinyDefinitionsDestinyInventoryItemStatDefinition],
            'level': int,
            'max_level_required': int,
            'max_quality': int,
            'min_level_required': int,
            'min_quality': int,
            'source_hashes': List[int]
        }

        self.attribute_map = {
            'computed_stats': 'computedStats',
            'level': 'level',
            'max_level_required': 'maxLevelRequired',
            'max_quality': 'maxQuality',
            'min_level_required': 'minLevelRequired',
            'min_quality': 'minQuality',
            'source_hashes': 'sourceHashes'
        }

        self._computed_stats = computed_stats
        self._level = level
        self._max_level_required = max_level_required
        self._max_quality = max_quality
        self._min_level_required = min_level_required
        self._min_quality = min_quality
        self._source_hashes = source_hashes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsSourcesDestinyItemSourceDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.Sources.DestinyItemSourceDefinition of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computed_stats(self):
        """Gets the computed_stats of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The stats computed for this level/quality range.

        :return: The computed_stats of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :rtype: Dict[str, DestinyDefinitionsDestinyInventoryItemStatDefinition]
        """
        return self._computed_stats

    @computed_stats.setter
    def computed_stats(self, computed_stats):
        """Sets the computed_stats of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The stats computed for this level/quality range.

        :param computed_stats: The computed_stats of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :type computed_stats: Dict[str, DestinyDefinitionsDestinyInventoryItemStatDefinition]
        """

        self._computed_stats = computed_stats

    @property
    def level(self):
        """Gets the level of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The level at which the item spawns. Essentially the Primary Key for this source data: there will be multiple of these source entries per item that has source data, grouped by the level at which the item spawns.

        :return: The level of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :rtype: int
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The level at which the item spawns. Essentially the Primary Key for this source data: there will be multiple of these source entries per item that has source data, grouped by the level at which the item spawns.

        :param level: The level of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :type level: int
        """

        self._level = level

    @property
    def max_level_required(self):
        """Gets the max_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The maximum Character Level required for equipping the item when the item spawns at the item level defined on this DestinyItemSourceDefinition, as far as we saw in our processing.

        :return: The max_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :rtype: int
        """
        return self._max_level_required

    @max_level_required.setter
    def max_level_required(self, max_level_required):
        """Sets the max_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The maximum Character Level required for equipping the item when the item spawns at the item level defined on this DestinyItemSourceDefinition, as far as we saw in our processing.

        :param max_level_required: The max_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :type max_level_required: int
        """

        self._max_level_required = max_level_required

    @property
    def max_quality(self):
        """Gets the max_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The maximum quality at which the item spawns for this level.

        :return: The max_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :rtype: int
        """
        return self._max_quality

    @max_quality.setter
    def max_quality(self, max_quality):
        """Sets the max_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The maximum quality at which the item spawns for this level.

        :param max_quality: The max_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :type max_quality: int
        """

        self._max_quality = max_quality

    @property
    def min_level_required(self):
        """Gets the min_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The minimum Character Level required for equipping the item when the item spawns at the item level defined on this DestinyItemSourceDefinition, as far as we saw in our processing.

        :return: The min_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :rtype: int
        """
        return self._min_level_required

    @min_level_required.setter
    def min_level_required(self, min_level_required):
        """Sets the min_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The minimum Character Level required for equipping the item when the item spawns at the item level defined on this DestinyItemSourceDefinition, as far as we saw in our processing.

        :param min_level_required: The min_level_required of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :type min_level_required: int
        """

        self._min_level_required = min_level_required

    @property
    def min_quality(self):
        """Gets the min_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The minimum Quality at which the item spawns for this level. Examine DestinyInventoryItemDefinition for more information about what Quality means. Just don't ask Phaedrus about it, he'll never stop talking and you'll have to write a book about it.

        :return: The min_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :rtype: int
        """
        return self._min_quality

    @min_quality.setter
    def min_quality(self, min_quality):
        """Sets the min_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The minimum Quality at which the item spawns for this level. Examine DestinyInventoryItemDefinition for more information about what Quality means. Just don't ask Phaedrus about it, he'll never stop talking and you'll have to write a book about it.

        :param min_quality: The min_quality of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :type min_quality: int
        """

        self._min_quality = min_quality

    @property
    def source_hashes(self):
        """Gets the source_hashes of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The DestinyRewardSourceDefinitions found that can spawn the item at this level.

        :return: The source_hashes of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :rtype: List[int]
        """
        return self._source_hashes

    @source_hashes.setter
    def source_hashes(self, source_hashes):
        """Sets the source_hashes of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.

        The DestinyRewardSourceDefinitions found that can spawn the item at this level.

        :param source_hashes: The source_hashes of this DestinyDefinitionsSourcesDestinyItemSourceDefinition.
        :type source_hashes: List[int]
        """

        self._source_hashes = source_hashes
