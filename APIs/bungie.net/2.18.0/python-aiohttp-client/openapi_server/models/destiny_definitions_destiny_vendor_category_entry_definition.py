# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_destiny_vendor_category_overlay_definition import DestinyDefinitionsDestinyVendorCategoryOverlayDefinition
from openapi_server import util


class DestinyDefinitionsDestinyVendorCategoryEntryDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buy_string_override: str=None, category_hash: int=None, category_index: int=None, disabled_description: str=None, display_title: str=None, hide_from_regular_purchase: bool=None, hide_if_no_currency: bool=None, is_display_only: bool=None, is_preview: bool=None, overlay: DestinyDefinitionsDestinyVendorCategoryOverlayDefinition=None, quantity_available: int=None, reset_interval_minutes_override: int=None, reset_offset_minutes_override: int=None, show_unavailable_items: bool=None, sort_value: int=None, vendor_item_indexes: List[int]=None):
        """DestinyDefinitionsDestinyVendorCategoryEntryDefinition - a model defined in OpenAPI

        :param buy_string_override: The buy_string_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param category_hash: The category_hash of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param category_index: The category_index of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param disabled_description: The disabled_description of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param display_title: The display_title of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param hide_from_regular_purchase: The hide_from_regular_purchase of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param hide_if_no_currency: The hide_if_no_currency of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param is_display_only: The is_display_only of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param is_preview: The is_preview of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param overlay: The overlay of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param quantity_available: The quantity_available of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param reset_interval_minutes_override: The reset_interval_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param reset_offset_minutes_override: The reset_offset_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param show_unavailable_items: The show_unavailable_items of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param sort_value: The sort_value of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :param vendor_item_indexes: The vendor_item_indexes of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        """
        self.openapi_types = {
            'buy_string_override': str,
            'category_hash': int,
            'category_index': int,
            'disabled_description': str,
            'display_title': str,
            'hide_from_regular_purchase': bool,
            'hide_if_no_currency': bool,
            'is_display_only': bool,
            'is_preview': bool,
            'overlay': DestinyDefinitionsDestinyVendorCategoryOverlayDefinition,
            'quantity_available': int,
            'reset_interval_minutes_override': int,
            'reset_offset_minutes_override': int,
            'show_unavailable_items': bool,
            'sort_value': int,
            'vendor_item_indexes': List[int]
        }

        self.attribute_map = {
            'buy_string_override': 'buyStringOverride',
            'category_hash': 'categoryHash',
            'category_index': 'categoryIndex',
            'disabled_description': 'disabledDescription',
            'display_title': 'displayTitle',
            'hide_from_regular_purchase': 'hideFromRegularPurchase',
            'hide_if_no_currency': 'hideIfNoCurrency',
            'is_display_only': 'isDisplayOnly',
            'is_preview': 'isPreview',
            'overlay': 'overlay',
            'quantity_available': 'quantityAvailable',
            'reset_interval_minutes_override': 'resetIntervalMinutesOverride',
            'reset_offset_minutes_override': 'resetOffsetMinutesOverride',
            'show_unavailable_items': 'showUnavailableItems',
            'sort_value': 'sortValue',
            'vendor_item_indexes': 'vendorItemIndexes'
        }

        self._buy_string_override = buy_string_override
        self._category_hash = category_hash
        self._category_index = category_index
        self._disabled_description = disabled_description
        self._display_title = display_title
        self._hide_from_regular_purchase = hide_from_regular_purchase
        self._hide_if_no_currency = hide_if_no_currency
        self._is_display_only = is_display_only
        self._is_preview = is_preview
        self._overlay = overlay
        self._quantity_available = quantity_available
        self._reset_interval_minutes_override = reset_interval_minutes_override
        self._reset_offset_minutes_override = reset_offset_minutes_override
        self._show_unavailable_items = show_unavailable_items
        self._sort_value = sort_value
        self._vendor_item_indexes = vendor_item_indexes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyVendorCategoryEntryDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyVendorCategoryEntryDefinition of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buy_string_override(self):
        """Gets the buy_string_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The localized string for making purchases from this category, if it is different from the vendor's string for purchasing.

        :return: The buy_string_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: str
        """
        return self._buy_string_override

    @buy_string_override.setter
    def buy_string_override(self, buy_string_override):
        """Sets the buy_string_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The localized string for making purchases from this category, if it is different from the vendor's string for purchasing.

        :param buy_string_override: The buy_string_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type buy_string_override: str
        """

        self._buy_string_override = buy_string_override

    @property
    def category_hash(self):
        """Gets the category_hash of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The hashed identifier for the category.

        :return: The category_hash of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: int
        """
        return self._category_hash

    @category_hash.setter
    def category_hash(self, category_hash):
        """Sets the category_hash of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The hashed identifier for the category.

        :param category_hash: The category_hash of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type category_hash: int
        """

        self._category_hash = category_hash

    @property
    def category_index(self):
        """Gets the category_index of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The index of the category in the original category definitions for the vendor.

        :return: The category_index of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: int
        """
        return self._category_index

    @category_index.setter
    def category_index(self, category_index):
        """Sets the category_index of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The index of the category in the original category definitions for the vendor.

        :param category_index: The category_index of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type category_index: int
        """

        self._category_index = category_index

    @property
    def disabled_description(self):
        """Gets the disabled_description of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If the category is disabled, this is the localized description to show.

        :return: The disabled_description of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: str
        """
        return self._disabled_description

    @disabled_description.setter
    def disabled_description(self, disabled_description):
        """Sets the disabled_description of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If the category is disabled, this is the localized description to show.

        :param disabled_description: The disabled_description of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type disabled_description: str
        """

        self._disabled_description = disabled_description

    @property
    def display_title(self):
        """Gets the display_title of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The localized title of the category.

        :return: The display_title of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: str
        """
        return self._display_title

    @display_title.setter
    def display_title(self, display_title):
        """Sets the display_title of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The localized title of the category.

        :param display_title: The display_title of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type display_title: str
        """

        self._display_title = display_title

    @property
    def hide_from_regular_purchase(self):
        """Gets the hide_from_regular_purchase of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        True if this category doesn't allow purchases.

        :return: The hide_from_regular_purchase of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: bool
        """
        return self._hide_from_regular_purchase

    @hide_from_regular_purchase.setter
    def hide_from_regular_purchase(self, hide_from_regular_purchase):
        """Sets the hide_from_regular_purchase of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        True if this category doesn't allow purchases.

        :param hide_from_regular_purchase: The hide_from_regular_purchase of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type hide_from_regular_purchase: bool
        """

        self._hide_from_regular_purchase = hide_from_regular_purchase

    @property
    def hide_if_no_currency(self):
        """Gets the hide_if_no_currency of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If you don't have the currency required to buy items from this category, should the items be hidden?

        :return: The hide_if_no_currency of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: bool
        """
        return self._hide_if_no_currency

    @hide_if_no_currency.setter
    def hide_if_no_currency(self, hide_if_no_currency):
        """Sets the hide_if_no_currency of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If you don't have the currency required to buy items from this category, should the items be hidden?

        :param hide_if_no_currency: The hide_if_no_currency of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type hide_if_no_currency: bool
        """

        self._hide_if_no_currency = hide_if_no_currency

    @property
    def is_display_only(self):
        """Gets the is_display_only of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If true, this category only displays items: you can't purchase anything in them.

        :return: The is_display_only of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: bool
        """
        return self._is_display_only

    @is_display_only.setter
    def is_display_only(self, is_display_only):
        """Sets the is_display_only of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If true, this category only displays items: you can't purchase anything in them.

        :param is_display_only: The is_display_only of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type is_display_only: bool
        """

        self._is_display_only = is_display_only

    @property
    def is_preview(self):
        """Gets the is_preview of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        Sometimes a category isn't actually used to sell items, but rather to preview them. This implies different UI (and manual placement of the category in the UI) in the game, and special treatment.

        :return: The is_preview of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: bool
        """
        return self._is_preview

    @is_preview.setter
    def is_preview(self, is_preview):
        """Sets the is_preview of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        Sometimes a category isn't actually used to sell items, but rather to preview them. This implies different UI (and manual placement of the category in the UI) in the game, and special treatment.

        :param is_preview: The is_preview of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type is_preview: bool
        """

        self._is_preview = is_preview

    @property
    def overlay(self):
        """Gets the overlay of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If this category has an overlay prompt that should appear, this contains the details of that prompt.

        :return: The overlay of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: DestinyDefinitionsDestinyVendorCategoryOverlayDefinition
        """
        return self._overlay

    @overlay.setter
    def overlay(self, overlay):
        """Sets the overlay of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If this category has an overlay prompt that should appear, this contains the details of that prompt.

        :param overlay: The overlay of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type overlay: DestinyDefinitionsDestinyVendorCategoryOverlayDefinition
        """

        self._overlay = overlay

    @property
    def quantity_available(self):
        """Gets the quantity_available of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The amount of items that will be available when this category is shown.

        :return: The quantity_available of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: int
        """
        return self._quantity_available

    @quantity_available.setter
    def quantity_available(self, quantity_available):
        """Sets the quantity_available of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        The amount of items that will be available when this category is shown.

        :param quantity_available: The quantity_available of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type quantity_available: int
        """

        self._quantity_available = quantity_available

    @property
    def reset_interval_minutes_override(self):
        """Gets the reset_interval_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.


        :return: The reset_interval_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: int
        """
        return self._reset_interval_minutes_override

    @reset_interval_minutes_override.setter
    def reset_interval_minutes_override(self, reset_interval_minutes_override):
        """Sets the reset_interval_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.


        :param reset_interval_minutes_override: The reset_interval_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type reset_interval_minutes_override: int
        """

        self._reset_interval_minutes_override = reset_interval_minutes_override

    @property
    def reset_offset_minutes_override(self):
        """Gets the reset_offset_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.


        :return: The reset_offset_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: int
        """
        return self._reset_offset_minutes_override

    @reset_offset_minutes_override.setter
    def reset_offset_minutes_override(self, reset_offset_minutes_override):
        """Sets the reset_offset_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.


        :param reset_offset_minutes_override: The reset_offset_minutes_override of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type reset_offset_minutes_override: int
        """

        self._reset_offset_minutes_override = reset_offset_minutes_override

    @property
    def show_unavailable_items(self):
        """Gets the show_unavailable_items of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If items aren't up for sale in this category, should we still show them (greyed out)?

        :return: The show_unavailable_items of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: bool
        """
        return self._show_unavailable_items

    @show_unavailable_items.setter
    def show_unavailable_items(self, show_unavailable_items):
        """Sets the show_unavailable_items of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        If items aren't up for sale in this category, should we still show them (greyed out)?

        :param show_unavailable_items: The show_unavailable_items of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type show_unavailable_items: bool
        """

        self._show_unavailable_items = show_unavailable_items

    @property
    def sort_value(self):
        """Gets the sort_value of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        Used in sorting items in vendors... but there's a lot more to it. Just go with the order provided in the itemIndexes property on the DestinyVendorCategoryComponent instead, it should be more reliable than trying to recalculate it yourself.

        :return: The sort_value of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: int
        """
        return self._sort_value

    @sort_value.setter
    def sort_value(self, sort_value):
        """Sets the sort_value of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        Used in sorting items in vendors... but there's a lot more to it. Just go with the order provided in the itemIndexes property on the DestinyVendorCategoryComponent instead, it should be more reliable than trying to recalculate it yourself.

        :param sort_value: The sort_value of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type sort_value: int
        """

        self._sort_value = sort_value

    @property
    def vendor_item_indexes(self):
        """Gets the vendor_item_indexes of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        A shortcut for the vendor item indexes sold under this category. Saves us from some expensive reorganization at runtime.

        :return: The vendor_item_indexes of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :rtype: List[int]
        """
        return self._vendor_item_indexes

    @vendor_item_indexes.setter
    def vendor_item_indexes(self, vendor_item_indexes):
        """Sets the vendor_item_indexes of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.

        A shortcut for the vendor item indexes sold under this category. Saves us from some expensive reorganization at runtime.

        :param vendor_item_indexes: The vendor_item_indexes of this DestinyDefinitionsDestinyVendorCategoryEntryDefinition.
        :type vendor_item_indexes: List[int]
        """

        self._vendor_item_indexes = vendor_item_indexes
