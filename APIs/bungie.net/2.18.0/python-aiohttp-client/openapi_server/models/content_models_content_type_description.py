# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_models_content_preview import ContentModelsContentPreview
from openapi_server.models.content_models_content_type_property import ContentModelsContentTypeProperty
from openapi_server.models.content_models_content_type_property_section import ContentModelsContentTypePropertySection
from openapi_server.models.content_models_tag_metadata_definition import ContentModelsTagMetadataDefinition
from openapi_server.models.content_models_tag_metadata_item import ContentModelsTagMetadataItem
from openapi_server import util


class ContentModelsContentTypeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_comments: bool=None, auto_english_property_fallback: bool=None, bind_identifier_to_property: str=None, bound_regex: str=None, bulk_uploadable: bool=None, c_type: str=None, content_description: str=None, force_identifier_binding: bool=None, name: str=None, preview_image: str=None, previews: List[ContentModelsContentPreview]=None, priority: int=None, properties: List[ContentModelsContentTypeProperty]=None, property_sections: List[ContentModelsContentTypePropertySection]=None, reminder: str=None, show_in_content_editor: bool=None, suppress_cms_path: bool=None, tag_metadata: List[ContentModelsTagMetadataDefinition]=None, tag_metadata_items: Dict[str, ContentModelsTagMetadataItem]=None, type_of: str=None, usage_examples: List[str]=None):
        """ContentModelsContentTypeDescription - a model defined in OpenAPI

        :param allow_comments: The allow_comments of this ContentModelsContentTypeDescription.
        :param auto_english_property_fallback: The auto_english_property_fallback of this ContentModelsContentTypeDescription.
        :param bind_identifier_to_property: The bind_identifier_to_property of this ContentModelsContentTypeDescription.
        :param bound_regex: The bound_regex of this ContentModelsContentTypeDescription.
        :param bulk_uploadable: The bulk_uploadable of this ContentModelsContentTypeDescription.
        :param c_type: The c_type of this ContentModelsContentTypeDescription.
        :param content_description: The content_description of this ContentModelsContentTypeDescription.
        :param force_identifier_binding: The force_identifier_binding of this ContentModelsContentTypeDescription.
        :param name: The name of this ContentModelsContentTypeDescription.
        :param preview_image: The preview_image of this ContentModelsContentTypeDescription.
        :param previews: The previews of this ContentModelsContentTypeDescription.
        :param priority: The priority of this ContentModelsContentTypeDescription.
        :param properties: The properties of this ContentModelsContentTypeDescription.
        :param property_sections: The property_sections of this ContentModelsContentTypeDescription.
        :param reminder: The reminder of this ContentModelsContentTypeDescription.
        :param show_in_content_editor: The show_in_content_editor of this ContentModelsContentTypeDescription.
        :param suppress_cms_path: The suppress_cms_path of this ContentModelsContentTypeDescription.
        :param tag_metadata: The tag_metadata of this ContentModelsContentTypeDescription.
        :param tag_metadata_items: The tag_metadata_items of this ContentModelsContentTypeDescription.
        :param type_of: The type_of of this ContentModelsContentTypeDescription.
        :param usage_examples: The usage_examples of this ContentModelsContentTypeDescription.
        """
        self.openapi_types = {
            'allow_comments': bool,
            'auto_english_property_fallback': bool,
            'bind_identifier_to_property': str,
            'bound_regex': str,
            'bulk_uploadable': bool,
            'c_type': str,
            'content_description': str,
            'force_identifier_binding': bool,
            'name': str,
            'preview_image': str,
            'previews': List[ContentModelsContentPreview],
            'priority': int,
            'properties': List[ContentModelsContentTypeProperty],
            'property_sections': List[ContentModelsContentTypePropertySection],
            'reminder': str,
            'show_in_content_editor': bool,
            'suppress_cms_path': bool,
            'tag_metadata': List[ContentModelsTagMetadataDefinition],
            'tag_metadata_items': Dict[str, ContentModelsTagMetadataItem],
            'type_of': str,
            'usage_examples': List[str]
        }

        self.attribute_map = {
            'allow_comments': 'allowComments',
            'auto_english_property_fallback': 'autoEnglishPropertyFallback',
            'bind_identifier_to_property': 'bindIdentifierToProperty',
            'bound_regex': 'boundRegex',
            'bulk_uploadable': 'bulkUploadable',
            'c_type': 'cType',
            'content_description': 'contentDescription',
            'force_identifier_binding': 'forceIdentifierBinding',
            'name': 'name',
            'preview_image': 'previewImage',
            'previews': 'previews',
            'priority': 'priority',
            'properties': 'properties',
            'property_sections': 'propertySections',
            'reminder': 'reminder',
            'show_in_content_editor': 'showInContentEditor',
            'suppress_cms_path': 'suppressCmsPath',
            'tag_metadata': 'tagMetadata',
            'tag_metadata_items': 'tagMetadataItems',
            'type_of': 'typeOf',
            'usage_examples': 'usageExamples'
        }

        self._allow_comments = allow_comments
        self._auto_english_property_fallback = auto_english_property_fallback
        self._bind_identifier_to_property = bind_identifier_to_property
        self._bound_regex = bound_regex
        self._bulk_uploadable = bulk_uploadable
        self._c_type = c_type
        self._content_description = content_description
        self._force_identifier_binding = force_identifier_binding
        self._name = name
        self._preview_image = preview_image
        self._previews = previews
        self._priority = priority
        self._properties = properties
        self._property_sections = property_sections
        self._reminder = reminder
        self._show_in_content_editor = show_in_content_editor
        self._suppress_cms_path = suppress_cms_path
        self._tag_metadata = tag_metadata
        self._tag_metadata_items = tag_metadata_items
        self._type_of = type_of
        self._usage_examples = usage_examples

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentModelsContentTypeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Content.Models.ContentTypeDescription of this ContentModelsContentTypeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_comments(self):
        """Gets the allow_comments of this ContentModelsContentTypeDescription.


        :return: The allow_comments of this ContentModelsContentTypeDescription.
        :rtype: bool
        """
        return self._allow_comments

    @allow_comments.setter
    def allow_comments(self, allow_comments):
        """Sets the allow_comments of this ContentModelsContentTypeDescription.


        :param allow_comments: The allow_comments of this ContentModelsContentTypeDescription.
        :type allow_comments: bool
        """

        self._allow_comments = allow_comments

    @property
    def auto_english_property_fallback(self):
        """Gets the auto_english_property_fallback of this ContentModelsContentTypeDescription.


        :return: The auto_english_property_fallback of this ContentModelsContentTypeDescription.
        :rtype: bool
        """
        return self._auto_english_property_fallback

    @auto_english_property_fallback.setter
    def auto_english_property_fallback(self, auto_english_property_fallback):
        """Sets the auto_english_property_fallback of this ContentModelsContentTypeDescription.


        :param auto_english_property_fallback: The auto_english_property_fallback of this ContentModelsContentTypeDescription.
        :type auto_english_property_fallback: bool
        """

        self._auto_english_property_fallback = auto_english_property_fallback

    @property
    def bind_identifier_to_property(self):
        """Gets the bind_identifier_to_property of this ContentModelsContentTypeDescription.


        :return: The bind_identifier_to_property of this ContentModelsContentTypeDescription.
        :rtype: str
        """
        return self._bind_identifier_to_property

    @bind_identifier_to_property.setter
    def bind_identifier_to_property(self, bind_identifier_to_property):
        """Sets the bind_identifier_to_property of this ContentModelsContentTypeDescription.


        :param bind_identifier_to_property: The bind_identifier_to_property of this ContentModelsContentTypeDescription.
        :type bind_identifier_to_property: str
        """

        self._bind_identifier_to_property = bind_identifier_to_property

    @property
    def bound_regex(self):
        """Gets the bound_regex of this ContentModelsContentTypeDescription.


        :return: The bound_regex of this ContentModelsContentTypeDescription.
        :rtype: str
        """
        return self._bound_regex

    @bound_regex.setter
    def bound_regex(self, bound_regex):
        """Sets the bound_regex of this ContentModelsContentTypeDescription.


        :param bound_regex: The bound_regex of this ContentModelsContentTypeDescription.
        :type bound_regex: str
        """

        self._bound_regex = bound_regex

    @property
    def bulk_uploadable(self):
        """Gets the bulk_uploadable of this ContentModelsContentTypeDescription.


        :return: The bulk_uploadable of this ContentModelsContentTypeDescription.
        :rtype: bool
        """
        return self._bulk_uploadable

    @bulk_uploadable.setter
    def bulk_uploadable(self, bulk_uploadable):
        """Sets the bulk_uploadable of this ContentModelsContentTypeDescription.


        :param bulk_uploadable: The bulk_uploadable of this ContentModelsContentTypeDescription.
        :type bulk_uploadable: bool
        """

        self._bulk_uploadable = bulk_uploadable

    @property
    def c_type(self):
        """Gets the c_type of this ContentModelsContentTypeDescription.


        :return: The c_type of this ContentModelsContentTypeDescription.
        :rtype: str
        """
        return self._c_type

    @c_type.setter
    def c_type(self, c_type):
        """Sets the c_type of this ContentModelsContentTypeDescription.


        :param c_type: The c_type of this ContentModelsContentTypeDescription.
        :type c_type: str
        """

        self._c_type = c_type

    @property
    def content_description(self):
        """Gets the content_description of this ContentModelsContentTypeDescription.


        :return: The content_description of this ContentModelsContentTypeDescription.
        :rtype: str
        """
        return self._content_description

    @content_description.setter
    def content_description(self, content_description):
        """Sets the content_description of this ContentModelsContentTypeDescription.


        :param content_description: The content_description of this ContentModelsContentTypeDescription.
        :type content_description: str
        """

        self._content_description = content_description

    @property
    def force_identifier_binding(self):
        """Gets the force_identifier_binding of this ContentModelsContentTypeDescription.


        :return: The force_identifier_binding of this ContentModelsContentTypeDescription.
        :rtype: bool
        """
        return self._force_identifier_binding

    @force_identifier_binding.setter
    def force_identifier_binding(self, force_identifier_binding):
        """Sets the force_identifier_binding of this ContentModelsContentTypeDescription.


        :param force_identifier_binding: The force_identifier_binding of this ContentModelsContentTypeDescription.
        :type force_identifier_binding: bool
        """

        self._force_identifier_binding = force_identifier_binding

    @property
    def name(self):
        """Gets the name of this ContentModelsContentTypeDescription.


        :return: The name of this ContentModelsContentTypeDescription.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContentModelsContentTypeDescription.


        :param name: The name of this ContentModelsContentTypeDescription.
        :type name: str
        """

        self._name = name

    @property
    def preview_image(self):
        """Gets the preview_image of this ContentModelsContentTypeDescription.


        :return: The preview_image of this ContentModelsContentTypeDescription.
        :rtype: str
        """
        return self._preview_image

    @preview_image.setter
    def preview_image(self, preview_image):
        """Sets the preview_image of this ContentModelsContentTypeDescription.


        :param preview_image: The preview_image of this ContentModelsContentTypeDescription.
        :type preview_image: str
        """

        self._preview_image = preview_image

    @property
    def previews(self):
        """Gets the previews of this ContentModelsContentTypeDescription.


        :return: The previews of this ContentModelsContentTypeDescription.
        :rtype: List[ContentModelsContentPreview]
        """
        return self._previews

    @previews.setter
    def previews(self, previews):
        """Sets the previews of this ContentModelsContentTypeDescription.


        :param previews: The previews of this ContentModelsContentTypeDescription.
        :type previews: List[ContentModelsContentPreview]
        """

        self._previews = previews

    @property
    def priority(self):
        """Gets the priority of this ContentModelsContentTypeDescription.


        :return: The priority of this ContentModelsContentTypeDescription.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this ContentModelsContentTypeDescription.


        :param priority: The priority of this ContentModelsContentTypeDescription.
        :type priority: int
        """

        self._priority = priority

    @property
    def properties(self):
        """Gets the properties of this ContentModelsContentTypeDescription.


        :return: The properties of this ContentModelsContentTypeDescription.
        :rtype: List[ContentModelsContentTypeProperty]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this ContentModelsContentTypeDescription.


        :param properties: The properties of this ContentModelsContentTypeDescription.
        :type properties: List[ContentModelsContentTypeProperty]
        """

        self._properties = properties

    @property
    def property_sections(self):
        """Gets the property_sections of this ContentModelsContentTypeDescription.


        :return: The property_sections of this ContentModelsContentTypeDescription.
        :rtype: List[ContentModelsContentTypePropertySection]
        """
        return self._property_sections

    @property_sections.setter
    def property_sections(self, property_sections):
        """Sets the property_sections of this ContentModelsContentTypeDescription.


        :param property_sections: The property_sections of this ContentModelsContentTypeDescription.
        :type property_sections: List[ContentModelsContentTypePropertySection]
        """

        self._property_sections = property_sections

    @property
    def reminder(self):
        """Gets the reminder of this ContentModelsContentTypeDescription.


        :return: The reminder of this ContentModelsContentTypeDescription.
        :rtype: str
        """
        return self._reminder

    @reminder.setter
    def reminder(self, reminder):
        """Sets the reminder of this ContentModelsContentTypeDescription.


        :param reminder: The reminder of this ContentModelsContentTypeDescription.
        :type reminder: str
        """

        self._reminder = reminder

    @property
    def show_in_content_editor(self):
        """Gets the show_in_content_editor of this ContentModelsContentTypeDescription.


        :return: The show_in_content_editor of this ContentModelsContentTypeDescription.
        :rtype: bool
        """
        return self._show_in_content_editor

    @show_in_content_editor.setter
    def show_in_content_editor(self, show_in_content_editor):
        """Sets the show_in_content_editor of this ContentModelsContentTypeDescription.


        :param show_in_content_editor: The show_in_content_editor of this ContentModelsContentTypeDescription.
        :type show_in_content_editor: bool
        """

        self._show_in_content_editor = show_in_content_editor

    @property
    def suppress_cms_path(self):
        """Gets the suppress_cms_path of this ContentModelsContentTypeDescription.


        :return: The suppress_cms_path of this ContentModelsContentTypeDescription.
        :rtype: bool
        """
        return self._suppress_cms_path

    @suppress_cms_path.setter
    def suppress_cms_path(self, suppress_cms_path):
        """Sets the suppress_cms_path of this ContentModelsContentTypeDescription.


        :param suppress_cms_path: The suppress_cms_path of this ContentModelsContentTypeDescription.
        :type suppress_cms_path: bool
        """

        self._suppress_cms_path = suppress_cms_path

    @property
    def tag_metadata(self):
        """Gets the tag_metadata of this ContentModelsContentTypeDescription.


        :return: The tag_metadata of this ContentModelsContentTypeDescription.
        :rtype: List[ContentModelsTagMetadataDefinition]
        """
        return self._tag_metadata

    @tag_metadata.setter
    def tag_metadata(self, tag_metadata):
        """Sets the tag_metadata of this ContentModelsContentTypeDescription.


        :param tag_metadata: The tag_metadata of this ContentModelsContentTypeDescription.
        :type tag_metadata: List[ContentModelsTagMetadataDefinition]
        """

        self._tag_metadata = tag_metadata

    @property
    def tag_metadata_items(self):
        """Gets the tag_metadata_items of this ContentModelsContentTypeDescription.


        :return: The tag_metadata_items of this ContentModelsContentTypeDescription.
        :rtype: Dict[str, ContentModelsTagMetadataItem]
        """
        return self._tag_metadata_items

    @tag_metadata_items.setter
    def tag_metadata_items(self, tag_metadata_items):
        """Sets the tag_metadata_items of this ContentModelsContentTypeDescription.


        :param tag_metadata_items: The tag_metadata_items of this ContentModelsContentTypeDescription.
        :type tag_metadata_items: Dict[str, ContentModelsTagMetadataItem]
        """

        self._tag_metadata_items = tag_metadata_items

    @property
    def type_of(self):
        """Gets the type_of of this ContentModelsContentTypeDescription.


        :return: The type_of of this ContentModelsContentTypeDescription.
        :rtype: str
        """
        return self._type_of

    @type_of.setter
    def type_of(self, type_of):
        """Sets the type_of of this ContentModelsContentTypeDescription.


        :param type_of: The type_of of this ContentModelsContentTypeDescription.
        :type type_of: str
        """

        self._type_of = type_of

    @property
    def usage_examples(self):
        """Gets the usage_examples of this ContentModelsContentTypeDescription.


        :return: The usage_examples of this ContentModelsContentTypeDescription.
        :rtype: List[str]
        """
        return self._usage_examples

    @usage_examples.setter
    def usage_examples(self, usage_examples):
        """Sets the usage_examples of this ContentModelsContentTypeDescription.


        :param usage_examples: The usage_examples of this ContentModelsContentTypeDescription.
        :type usage_examples: List[str]
        """

        self._usage_examples = usage_examples
