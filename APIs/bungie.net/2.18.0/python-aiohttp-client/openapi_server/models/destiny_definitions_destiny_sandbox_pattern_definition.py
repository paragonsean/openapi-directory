# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_definitions_destiny_arrangement_region_filter_definition import DestinyDefinitionsDestinyArrangementRegionFilterDefinition
from openapi_server import util


class DestinyDefinitionsDestinySandboxPatternDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filters: List[DestinyDefinitionsDestinyArrangementRegionFilterDefinition]=None, hash: int=None, index: int=None, pattern_global_tag_id_hash: int=None, pattern_hash: int=None, redacted: bool=None, weapon_content_group_hash: int=None, weapon_translation_group_hash: int=None, weapon_type: int=None, weapon_type_hash: int=None):
        """DestinyDefinitionsDestinySandboxPatternDefinition - a model defined in OpenAPI

        :param filters: The filters of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param hash: The hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param index: The index of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param pattern_global_tag_id_hash: The pattern_global_tag_id_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param pattern_hash: The pattern_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param redacted: The redacted of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param weapon_content_group_hash: The weapon_content_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param weapon_translation_group_hash: The weapon_translation_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param weapon_type: The weapon_type of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :param weapon_type_hash: The weapon_type_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        """
        self.openapi_types = {
            'filters': List[DestinyDefinitionsDestinyArrangementRegionFilterDefinition],
            'hash': int,
            'index': int,
            'pattern_global_tag_id_hash': int,
            'pattern_hash': int,
            'redacted': bool,
            'weapon_content_group_hash': int,
            'weapon_translation_group_hash': int,
            'weapon_type': int,
            'weapon_type_hash': int
        }

        self.attribute_map = {
            'filters': 'filters',
            'hash': 'hash',
            'index': 'index',
            'pattern_global_tag_id_hash': 'patternGlobalTagIdHash',
            'pattern_hash': 'patternHash',
            'redacted': 'redacted',
            'weapon_content_group_hash': 'weaponContentGroupHash',
            'weapon_translation_group_hash': 'weaponTranslationGroupHash',
            'weapon_type': 'weaponType',
            'weapon_type_hash': 'weaponTypeHash'
        }

        self._filters = filters
        self._hash = hash
        self._index = index
        self._pattern_global_tag_id_hash = pattern_global_tag_id_hash
        self._pattern_hash = pattern_hash
        self._redacted = redacted
        self._weapon_content_group_hash = weapon_content_group_hash
        self._weapon_translation_group_hash = weapon_translation_group_hash
        self._weapon_type = weapon_type
        self._weapon_type_hash = weapon_type_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinySandboxPatternDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinySandboxPatternDefinition of this DestinyDefinitionsDestinySandboxPatternDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self):
        """Gets the filters of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :return: The filters of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: List[DestinyDefinitionsDestinyArrangementRegionFilterDefinition]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :param filters: The filters of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type filters: List[DestinyDefinitionsDestinyArrangementRegionFilterDefinition]
        """

        self._filters = filters

    @property
    def hash(self):
        """Gets the hash of this DestinyDefinitionsDestinySandboxPatternDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :return: The hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyDefinitionsDestinySandboxPatternDefinition.

        The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.

        :param hash: The hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type hash: int
        """

        self._hash = hash

    @property
    def index(self):
        """Gets the index of this DestinyDefinitionsDestinySandboxPatternDefinition.

        The index of the entity as it was found in the investment tables.

        :return: The index of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this DestinyDefinitionsDestinySandboxPatternDefinition.

        The index of the entity as it was found in the investment tables.

        :param index: The index of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type index: int
        """

        self._index = index

    @property
    def pattern_global_tag_id_hash(self):
        """Gets the pattern_global_tag_id_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :return: The pattern_global_tag_id_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: int
        """
        return self._pattern_global_tag_id_hash

    @pattern_global_tag_id_hash.setter
    def pattern_global_tag_id_hash(self, pattern_global_tag_id_hash):
        """Sets the pattern_global_tag_id_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :param pattern_global_tag_id_hash: The pattern_global_tag_id_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type pattern_global_tag_id_hash: int
        """

        self._pattern_global_tag_id_hash = pattern_global_tag_id_hash

    @property
    def pattern_hash(self):
        """Gets the pattern_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :return: The pattern_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: int
        """
        return self._pattern_hash

    @pattern_hash.setter
    def pattern_hash(self, pattern_hash):
        """Sets the pattern_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :param pattern_hash: The pattern_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type pattern_hash: int
        """

        self._pattern_hash = pattern_hash

    @property
    def redacted(self):
        """Gets the redacted of this DestinyDefinitionsDestinySandboxPatternDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :return: The redacted of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this DestinyDefinitionsDestinySandboxPatternDefinition.

        If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!

        :param redacted: The redacted of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def weapon_content_group_hash(self):
        """Gets the weapon_content_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :return: The weapon_content_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: int
        """
        return self._weapon_content_group_hash

    @weapon_content_group_hash.setter
    def weapon_content_group_hash(self, weapon_content_group_hash):
        """Sets the weapon_content_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :param weapon_content_group_hash: The weapon_content_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type weapon_content_group_hash: int
        """

        self._weapon_content_group_hash = weapon_content_group_hash

    @property
    def weapon_translation_group_hash(self):
        """Gets the weapon_translation_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :return: The weapon_translation_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: int
        """
        return self._weapon_translation_group_hash

    @weapon_translation_group_hash.setter
    def weapon_translation_group_hash(self, weapon_translation_group_hash):
        """Sets the weapon_translation_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :param weapon_translation_group_hash: The weapon_translation_group_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type weapon_translation_group_hash: int
        """

        self._weapon_translation_group_hash = weapon_translation_group_hash

    @property
    def weapon_type(self):
        """Gets the weapon_type of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :return: The weapon_type of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: int
        """
        return self._weapon_type

    @weapon_type.setter
    def weapon_type(self, weapon_type):
        """Sets the weapon_type of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :param weapon_type: The weapon_type of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type weapon_type: int
        """

        self._weapon_type = weapon_type

    @property
    def weapon_type_hash(self):
        """Gets the weapon_type_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :return: The weapon_type_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :rtype: int
        """
        return self._weapon_type_hash

    @weapon_type_hash.setter
    def weapon_type_hash(self, weapon_type_hash):
        """Sets the weapon_type_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.


        :param weapon_type_hash: The weapon_type_hash of this DestinyDefinitionsDestinySandboxPatternDefinition.
        :type weapon_type_hash: int
        """

        self._weapon_type_hash = weapon_type_hash
