# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tokens_reward_display_properties import TokensRewardDisplayProperties
from openapi_server.models.tokens_user_reward_availability_model import TokensUserRewardAvailabilityModel
from openapi_server import util


class TokensBungieRewardDisplay(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, objective_display_properties: TokensRewardDisplayProperties=None, reward_display_properties: TokensRewardDisplayProperties=None, user_reward_availability_model: TokensUserRewardAvailabilityModel=None):
        """TokensBungieRewardDisplay - a model defined in OpenAPI

        :param objective_display_properties: The objective_display_properties of this TokensBungieRewardDisplay.
        :param reward_display_properties: The reward_display_properties of this TokensBungieRewardDisplay.
        :param user_reward_availability_model: The user_reward_availability_model of this TokensBungieRewardDisplay.
        """
        self.openapi_types = {
            'objective_display_properties': TokensRewardDisplayProperties,
            'reward_display_properties': TokensRewardDisplayProperties,
            'user_reward_availability_model': TokensUserRewardAvailabilityModel
        }

        self.attribute_map = {
            'objective_display_properties': 'ObjectiveDisplayProperties',
            'reward_display_properties': 'RewardDisplayProperties',
            'user_reward_availability_model': 'UserRewardAvailabilityModel'
        }

        self._objective_display_properties = objective_display_properties
        self._reward_display_properties = reward_display_properties
        self._user_reward_availability_model = user_reward_availability_model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TokensBungieRewardDisplay':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tokens.BungieRewardDisplay of this TokensBungieRewardDisplay.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def objective_display_properties(self):
        """Gets the objective_display_properties of this TokensBungieRewardDisplay.


        :return: The objective_display_properties of this TokensBungieRewardDisplay.
        :rtype: TokensRewardDisplayProperties
        """
        return self._objective_display_properties

    @objective_display_properties.setter
    def objective_display_properties(self, objective_display_properties):
        """Sets the objective_display_properties of this TokensBungieRewardDisplay.


        :param objective_display_properties: The objective_display_properties of this TokensBungieRewardDisplay.
        :type objective_display_properties: TokensRewardDisplayProperties
        """

        self._objective_display_properties = objective_display_properties

    @property
    def reward_display_properties(self):
        """Gets the reward_display_properties of this TokensBungieRewardDisplay.


        :return: The reward_display_properties of this TokensBungieRewardDisplay.
        :rtype: TokensRewardDisplayProperties
        """
        return self._reward_display_properties

    @reward_display_properties.setter
    def reward_display_properties(self, reward_display_properties):
        """Sets the reward_display_properties of this TokensBungieRewardDisplay.


        :param reward_display_properties: The reward_display_properties of this TokensBungieRewardDisplay.
        :type reward_display_properties: TokensRewardDisplayProperties
        """

        self._reward_display_properties = reward_display_properties

    @property
    def user_reward_availability_model(self):
        """Gets the user_reward_availability_model of this TokensBungieRewardDisplay.


        :return: The user_reward_availability_model of this TokensBungieRewardDisplay.
        :rtype: TokensUserRewardAvailabilityModel
        """
        return self._user_reward_availability_model

    @user_reward_availability_model.setter
    def user_reward_availability_model(self, user_reward_availability_model):
        """Sets the user_reward_availability_model of this TokensBungieRewardDisplay.


        :param user_reward_availability_model: The user_reward_availability_model of this TokensBungieRewardDisplay.
        :type user_reward_availability_model: TokensUserRewardAvailabilityModel
        """

        self._user_reward_availability_model = user_reward_availability_model
