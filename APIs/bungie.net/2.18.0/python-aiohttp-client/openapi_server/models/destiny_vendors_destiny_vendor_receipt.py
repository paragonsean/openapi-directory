# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_destiny_item_quantity import DestinyDestinyItemQuantity
from openapi_server import util


class DestinyVendorsDestinyVendorReceipt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_paid: List[DestinyDestinyItemQuantity]=None, expires_on: datetime=None, item_received: DestinyDestinyItemQuantity=None, license_unlock_hash: int=None, purchased_by_character_id: int=None, refund_policy: int=None, sequence_number: int=None, time_to_expiration: int=None):
        """DestinyVendorsDestinyVendorReceipt - a model defined in OpenAPI

        :param currency_paid: The currency_paid of this DestinyVendorsDestinyVendorReceipt.
        :param expires_on: The expires_on of this DestinyVendorsDestinyVendorReceipt.
        :param item_received: The item_received of this DestinyVendorsDestinyVendorReceipt.
        :param license_unlock_hash: The license_unlock_hash of this DestinyVendorsDestinyVendorReceipt.
        :param purchased_by_character_id: The purchased_by_character_id of this DestinyVendorsDestinyVendorReceipt.
        :param refund_policy: The refund_policy of this DestinyVendorsDestinyVendorReceipt.
        :param sequence_number: The sequence_number of this DestinyVendorsDestinyVendorReceipt.
        :param time_to_expiration: The time_to_expiration of this DestinyVendorsDestinyVendorReceipt.
        """
        self.openapi_types = {
            'currency_paid': List[DestinyDestinyItemQuantity],
            'expires_on': datetime,
            'item_received': DestinyDestinyItemQuantity,
            'license_unlock_hash': int,
            'purchased_by_character_id': int,
            'refund_policy': int,
            'sequence_number': int,
            'time_to_expiration': int
        }

        self.attribute_map = {
            'currency_paid': 'currencyPaid',
            'expires_on': 'expiresOn',
            'item_received': 'itemReceived',
            'license_unlock_hash': 'licenseUnlockHash',
            'purchased_by_character_id': 'purchasedByCharacterId',
            'refund_policy': 'refundPolicy',
            'sequence_number': 'sequenceNumber',
            'time_to_expiration': 'timeToExpiration'
        }

        self._currency_paid = currency_paid
        self._expires_on = expires_on
        self._item_received = item_received
        self._license_unlock_hash = license_unlock_hash
        self._purchased_by_character_id = purchased_by_character_id
        self._refund_policy = refund_policy
        self._sequence_number = sequence_number
        self._time_to_expiration = time_to_expiration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyVendorsDestinyVendorReceipt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Vendors.DestinyVendorReceipt of this DestinyVendorsDestinyVendorReceipt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_paid(self):
        """Gets the currency_paid of this DestinyVendorsDestinyVendorReceipt.

        The amount paid for the item, in terms of items that were consumed in the purchase and their quantity.

        :return: The currency_paid of this DestinyVendorsDestinyVendorReceipt.
        :rtype: List[DestinyDestinyItemQuantity]
        """
        return self._currency_paid

    @currency_paid.setter
    def currency_paid(self, currency_paid):
        """Sets the currency_paid of this DestinyVendorsDestinyVendorReceipt.

        The amount paid for the item, in terms of items that were consumed in the purchase and their quantity.

        :param currency_paid: The currency_paid of this DestinyVendorsDestinyVendorReceipt.
        :type currency_paid: List[DestinyDestinyItemQuantity]
        """

        self._currency_paid = currency_paid

    @property
    def expires_on(self):
        """Gets the expires_on of this DestinyVendorsDestinyVendorReceipt.

        The date at which this receipt is rendered invalid.

        :return: The expires_on of this DestinyVendorsDestinyVendorReceipt.
        :rtype: datetime
        """
        return self._expires_on

    @expires_on.setter
    def expires_on(self, expires_on):
        """Sets the expires_on of this DestinyVendorsDestinyVendorReceipt.

        The date at which this receipt is rendered invalid.

        :param expires_on: The expires_on of this DestinyVendorsDestinyVendorReceipt.
        :type expires_on: datetime
        """

        self._expires_on = expires_on

    @property
    def item_received(self):
        """Gets the item_received of this DestinyVendorsDestinyVendorReceipt.

        The item that was received, and its quantity.

        :return: The item_received of this DestinyVendorsDestinyVendorReceipt.
        :rtype: DestinyDestinyItemQuantity
        """
        return self._item_received

    @item_received.setter
    def item_received(self, item_received):
        """Sets the item_received of this DestinyVendorsDestinyVendorReceipt.

        The item that was received, and its quantity.

        :param item_received: The item_received of this DestinyVendorsDestinyVendorReceipt.
        :type item_received: DestinyDestinyItemQuantity
        """

        self._item_received = item_received

    @property
    def license_unlock_hash(self):
        """Gets the license_unlock_hash of this DestinyVendorsDestinyVendorReceipt.

        The unlock flag used to determine whether you still have the purchased item.

        :return: The license_unlock_hash of this DestinyVendorsDestinyVendorReceipt.
        :rtype: int
        """
        return self._license_unlock_hash

    @license_unlock_hash.setter
    def license_unlock_hash(self, license_unlock_hash):
        """Sets the license_unlock_hash of this DestinyVendorsDestinyVendorReceipt.

        The unlock flag used to determine whether you still have the purchased item.

        :param license_unlock_hash: The license_unlock_hash of this DestinyVendorsDestinyVendorReceipt.
        :type license_unlock_hash: int
        """

        self._license_unlock_hash = license_unlock_hash

    @property
    def purchased_by_character_id(self):
        """Gets the purchased_by_character_id of this DestinyVendorsDestinyVendorReceipt.

        The ID of the character who made the purchase.

        :return: The purchased_by_character_id of this DestinyVendorsDestinyVendorReceipt.
        :rtype: int
        """
        return self._purchased_by_character_id

    @purchased_by_character_id.setter
    def purchased_by_character_id(self, purchased_by_character_id):
        """Sets the purchased_by_character_id of this DestinyVendorsDestinyVendorReceipt.

        The ID of the character who made the purchase.

        :param purchased_by_character_id: The purchased_by_character_id of this DestinyVendorsDestinyVendorReceipt.
        :type purchased_by_character_id: int
        """

        self._purchased_by_character_id = purchased_by_character_id

    @property
    def refund_policy(self):
        """Gets the refund_policy of this DestinyVendorsDestinyVendorReceipt.

        Whether you can get a refund, and what happens in order for the refund to be received. See the DestinyVendorItemRefundPolicy enum for details.

        :return: The refund_policy of this DestinyVendorsDestinyVendorReceipt.
        :rtype: int
        """
        return self._refund_policy

    @refund_policy.setter
    def refund_policy(self, refund_policy):
        """Sets the refund_policy of this DestinyVendorsDestinyVendorReceipt.

        Whether you can get a refund, and what happens in order for the refund to be received. See the DestinyVendorItemRefundPolicy enum for details.

        :param refund_policy: The refund_policy of this DestinyVendorsDestinyVendorReceipt.
        :type refund_policy: int
        """

        self._refund_policy = refund_policy

    @property
    def sequence_number(self):
        """Gets the sequence_number of this DestinyVendorsDestinyVendorReceipt.

        The identifier of this receipt.

        :return: The sequence_number of this DestinyVendorsDestinyVendorReceipt.
        :rtype: int
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this DestinyVendorsDestinyVendorReceipt.

        The identifier of this receipt.

        :param sequence_number: The sequence_number of this DestinyVendorsDestinyVendorReceipt.
        :type sequence_number: int
        """

        self._sequence_number = sequence_number

    @property
    def time_to_expiration(self):
        """Gets the time_to_expiration of this DestinyVendorsDestinyVendorReceipt.

        The seconds since epoch at which this receipt is rendered invalid.

        :return: The time_to_expiration of this DestinyVendorsDestinyVendorReceipt.
        :rtype: int
        """
        return self._time_to_expiration

    @time_to_expiration.setter
    def time_to_expiration(self, time_to_expiration):
        """Sets the time_to_expiration of this DestinyVendorsDestinyVendorReceipt.

        The seconds since epoch at which this receipt is rendered invalid.

        :param time_to_expiration: The time_to_expiration of this DestinyVendorsDestinyVendorReceipt.
        :type time_to_expiration: int
        """

        self._time_to_expiration = time_to_expiration
