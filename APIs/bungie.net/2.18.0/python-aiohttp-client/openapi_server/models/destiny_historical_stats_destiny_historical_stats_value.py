# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destiny_historical_stats_destiny_historical_stats_value_pair import DestinyHistoricalStatsDestinyHistoricalStatsValuePair
from openapi_server import util


class DestinyHistoricalStatsDestinyHistoricalStatsValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_id: int=None, basic: DestinyHistoricalStatsDestinyHistoricalStatsValuePair=None, pga: DestinyHistoricalStatsDestinyHistoricalStatsValuePair=None, stat_id: str=None, weighted: DestinyHistoricalStatsDestinyHistoricalStatsValuePair=None):
        """DestinyHistoricalStatsDestinyHistoricalStatsValue - a model defined in OpenAPI

        :param activity_id: The activity_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :param basic: The basic of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :param pga: The pga of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :param stat_id: The stat_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :param weighted: The weighted of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        """
        self.openapi_types = {
            'activity_id': int,
            'basic': DestinyHistoricalStatsDestinyHistoricalStatsValuePair,
            'pga': DestinyHistoricalStatsDestinyHistoricalStatsValuePair,
            'stat_id': str,
            'weighted': DestinyHistoricalStatsDestinyHistoricalStatsValuePair
        }

        self.attribute_map = {
            'activity_id': 'activityId',
            'basic': 'basic',
            'pga': 'pga',
            'stat_id': 'statId',
            'weighted': 'weighted'
        }

        self._activity_id = activity_id
        self._basic = basic
        self._pga = pga
        self._stat_id = stat_id
        self._weighted = weighted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyHistoricalStatsDestinyHistoricalStatsValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.HistoricalStats.DestinyHistoricalStatsValue of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_id(self):
        """Gets the activity_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        When a stat represents the best, most, longest, fastest or some other personal best, the actual activity ID where that personal best was established is available on this property.

        :return: The activity_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :rtype: int
        """
        return self._activity_id

    @activity_id.setter
    def activity_id(self, activity_id):
        """Sets the activity_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        When a stat represents the best, most, longest, fastest or some other personal best, the actual activity ID where that personal best was established is available on this property.

        :param activity_id: The activity_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :type activity_id: int
        """

        self._activity_id = activity_id

    @property
    def basic(self):
        """Gets the basic of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        Basic stat value.

        :return: The basic of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :rtype: DestinyHistoricalStatsDestinyHistoricalStatsValuePair
        """
        return self._basic

    @basic.setter
    def basic(self, basic):
        """Sets the basic of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        Basic stat value.

        :param basic: The basic of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :type basic: DestinyHistoricalStatsDestinyHistoricalStatsValuePair
        """

        self._basic = basic

    @property
    def pga(self):
        """Gets the pga of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        Per game average for the statistic, if applicable

        :return: The pga of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :rtype: DestinyHistoricalStatsDestinyHistoricalStatsValuePair
        """
        return self._pga

    @pga.setter
    def pga(self, pga):
        """Sets the pga of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        Per game average for the statistic, if applicable

        :param pga: The pga of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :type pga: DestinyHistoricalStatsDestinyHistoricalStatsValuePair
        """

        self._pga = pga

    @property
    def stat_id(self):
        """Gets the stat_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        Unique ID for this stat

        :return: The stat_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :rtype: str
        """
        return self._stat_id

    @stat_id.setter
    def stat_id(self, stat_id):
        """Sets the stat_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        Unique ID for this stat

        :param stat_id: The stat_id of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :type stat_id: str
        """

        self._stat_id = stat_id

    @property
    def weighted(self):
        """Gets the weighted of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        Weighted value of the stat if a weight greater than 1 has been assigned.

        :return: The weighted of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :rtype: DestinyHistoricalStatsDestinyHistoricalStatsValuePair
        """
        return self._weighted

    @weighted.setter
    def weighted(self, weighted):
        """Sets the weighted of this DestinyHistoricalStatsDestinyHistoricalStatsValue.

        Weighted value of the stat if a weight greater than 1 has been assigned.

        :param weighted: The weighted of this DestinyHistoricalStatsDestinyHistoricalStatsValue.
        :type weighted: DestinyHistoricalStatsDestinyHistoricalStatsValuePair
        """

        self._weighted = weighted
