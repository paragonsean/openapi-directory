# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.interpolation_interpolation_point import InterpolationInterpolationPoint
from openapi_server import util


class DestinyDefinitionsDestinyStatDisplayDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_as_numeric: bool=None, display_interpolation: List[InterpolationInterpolationPoint]=None, maximum_value: int=None, stat_hash: int=None):
        """DestinyDefinitionsDestinyStatDisplayDefinition - a model defined in OpenAPI

        :param display_as_numeric: The display_as_numeric of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :param display_interpolation: The display_interpolation of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :param maximum_value: The maximum_value of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :param stat_hash: The stat_hash of this DestinyDefinitionsDestinyStatDisplayDefinition.
        """
        self.openapi_types = {
            'display_as_numeric': bool,
            'display_interpolation': List[InterpolationInterpolationPoint],
            'maximum_value': int,
            'stat_hash': int
        }

        self.attribute_map = {
            'display_as_numeric': 'displayAsNumeric',
            'display_interpolation': 'displayInterpolation',
            'maximum_value': 'maximumValue',
            'stat_hash': 'statHash'
        }

        self._display_as_numeric = display_as_numeric
        self._display_interpolation = display_interpolation
        self._maximum_value = maximum_value
        self._stat_hash = stat_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyDefinitionsDestinyStatDisplayDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Definitions.DestinyStatDisplayDefinition of this DestinyDefinitionsDestinyStatDisplayDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_as_numeric(self):
        """Gets the display_as_numeric of this DestinyDefinitionsDestinyStatDisplayDefinition.

        If this is true, the stat should be displayed as a number. Otherwise, display it as a progress bar. Or, you know, do whatever you want. There's no displayAsNumeric police.

        :return: The display_as_numeric of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :rtype: bool
        """
        return self._display_as_numeric

    @display_as_numeric.setter
    def display_as_numeric(self, display_as_numeric):
        """Sets the display_as_numeric of this DestinyDefinitionsDestinyStatDisplayDefinition.

        If this is true, the stat should be displayed as a number. Otherwise, display it as a progress bar. Or, you know, do whatever you want. There's no displayAsNumeric police.

        :param display_as_numeric: The display_as_numeric of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :type display_as_numeric: bool
        """

        self._display_as_numeric = display_as_numeric

    @property
    def display_interpolation(self):
        """Gets the display_interpolation of this DestinyDefinitionsDestinyStatDisplayDefinition.

        The interpolation table representing how the Investment Stat is transformed into a Display Stat.   See DestinyStatDefinition for a description of the stages of stat transformation.

        :return: The display_interpolation of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :rtype: List[InterpolationInterpolationPoint]
        """
        return self._display_interpolation

    @display_interpolation.setter
    def display_interpolation(self, display_interpolation):
        """Sets the display_interpolation of this DestinyDefinitionsDestinyStatDisplayDefinition.

        The interpolation table representing how the Investment Stat is transformed into a Display Stat.   See DestinyStatDefinition for a description of the stages of stat transformation.

        :param display_interpolation: The display_interpolation of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :type display_interpolation: List[InterpolationInterpolationPoint]
        """

        self._display_interpolation = display_interpolation

    @property
    def maximum_value(self):
        """Gets the maximum_value of this DestinyDefinitionsDestinyStatDisplayDefinition.

        Regardless of the output of interpolation, this is the maximum possible value that the stat can be. It should also be used as the upper bound for displaying the stat as a progress bar (the minimum always being 0)

        :return: The maximum_value of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :rtype: int
        """
        return self._maximum_value

    @maximum_value.setter
    def maximum_value(self, maximum_value):
        """Sets the maximum_value of this DestinyDefinitionsDestinyStatDisplayDefinition.

        Regardless of the output of interpolation, this is the maximum possible value that the stat can be. It should also be used as the upper bound for displaying the stat as a progress bar (the minimum always being 0)

        :param maximum_value: The maximum_value of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :type maximum_value: int
        """

        self._maximum_value = maximum_value

    @property
    def stat_hash(self):
        """Gets the stat_hash of this DestinyDefinitionsDestinyStatDisplayDefinition.

        The hash identifier for the stat being transformed into a Display stat.  Use it to look up the DestinyStatDefinition, or key into a DestinyInventoryItemDefinition's stats property.

        :return: The stat_hash of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :rtype: int
        """
        return self._stat_hash

    @stat_hash.setter
    def stat_hash(self, stat_hash):
        """Sets the stat_hash of this DestinyDefinitionsDestinyStatDisplayDefinition.

        The hash identifier for the stat being transformed into a Display stat.  Use it to look up the DestinyStatDefinition, or key into a DestinyInventoryItemDefinition's stats property.

        :param stat_hash: The stat_hash of this DestinyDefinitionsDestinyStatDisplayDefinition.
        :type stat_hash: int
        """

        self._stat_hash = stat_hash
