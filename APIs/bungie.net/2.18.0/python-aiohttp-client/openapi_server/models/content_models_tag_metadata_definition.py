# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_models_tag_metadata_item import ContentModelsTagMetadataItem
from openapi_server import util


class ContentModelsTagMetadataDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datatype: str=None, description: str=None, is_required: bool=None, items: List[ContentModelsTagMetadataItem]=None, name: str=None, order: int=None):
        """ContentModelsTagMetadataDefinition - a model defined in OpenAPI

        :param datatype: The datatype of this ContentModelsTagMetadataDefinition.
        :param description: The description of this ContentModelsTagMetadataDefinition.
        :param is_required: The is_required of this ContentModelsTagMetadataDefinition.
        :param items: The items of this ContentModelsTagMetadataDefinition.
        :param name: The name of this ContentModelsTagMetadataDefinition.
        :param order: The order of this ContentModelsTagMetadataDefinition.
        """
        self.openapi_types = {
            'datatype': str,
            'description': str,
            'is_required': bool,
            'items': List[ContentModelsTagMetadataItem],
            'name': str,
            'order': int
        }

        self.attribute_map = {
            'datatype': 'datatype',
            'description': 'description',
            'is_required': 'isRequired',
            'items': 'items',
            'name': 'name',
            'order': 'order'
        }

        self._datatype = datatype
        self._description = description
        self._is_required = is_required
        self._items = items
        self._name = name
        self._order = order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentModelsTagMetadataDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Content.Models.TagMetadataDefinition of this ContentModelsTagMetadataDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datatype(self):
        """Gets the datatype of this ContentModelsTagMetadataDefinition.


        :return: The datatype of this ContentModelsTagMetadataDefinition.
        :rtype: str
        """
        return self._datatype

    @datatype.setter
    def datatype(self, datatype):
        """Sets the datatype of this ContentModelsTagMetadataDefinition.


        :param datatype: The datatype of this ContentModelsTagMetadataDefinition.
        :type datatype: str
        """

        self._datatype = datatype

    @property
    def description(self):
        """Gets the description of this ContentModelsTagMetadataDefinition.


        :return: The description of this ContentModelsTagMetadataDefinition.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ContentModelsTagMetadataDefinition.


        :param description: The description of this ContentModelsTagMetadataDefinition.
        :type description: str
        """

        self._description = description

    @property
    def is_required(self):
        """Gets the is_required of this ContentModelsTagMetadataDefinition.


        :return: The is_required of this ContentModelsTagMetadataDefinition.
        :rtype: bool
        """
        return self._is_required

    @is_required.setter
    def is_required(self, is_required):
        """Sets the is_required of this ContentModelsTagMetadataDefinition.


        :param is_required: The is_required of this ContentModelsTagMetadataDefinition.
        :type is_required: bool
        """

        self._is_required = is_required

    @property
    def items(self):
        """Gets the items of this ContentModelsTagMetadataDefinition.


        :return: The items of this ContentModelsTagMetadataDefinition.
        :rtype: List[ContentModelsTagMetadataItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ContentModelsTagMetadataDefinition.


        :param items: The items of this ContentModelsTagMetadataDefinition.
        :type items: List[ContentModelsTagMetadataItem]
        """

        self._items = items

    @property
    def name(self):
        """Gets the name of this ContentModelsTagMetadataDefinition.


        :return: The name of this ContentModelsTagMetadataDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContentModelsTagMetadataDefinition.


        :param name: The name of this ContentModelsTagMetadataDefinition.
        :type name: str
        """

        self._name = name

    @property
    def order(self):
        """Gets the order of this ContentModelsTagMetadataDefinition.


        :return: The order of this ContentModelsTagMetadataDefinition.
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this ContentModelsTagMetadataDefinition.


        :param order: The order of this ContentModelsTagMetadataDefinition.
        :type order: int
        """

        self._order = order
