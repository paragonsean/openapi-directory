# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinyMilestonesDestinyPublicMilestoneChallengeActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_hash: int=None, boolean_activity_options: Dict[str, bool]=None, challenge_objective_hashes: List[int]=None, loadout_requirement_index: int=None, modifier_hashes: List[int]=None, phase_hashes: List[int]=None):
        """DestinyMilestonesDestinyPublicMilestoneChallengeActivity - a model defined in OpenAPI

        :param activity_hash: The activity_hash of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :param boolean_activity_options: The boolean_activity_options of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :param challenge_objective_hashes: The challenge_objective_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :param loadout_requirement_index: The loadout_requirement_index of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :param modifier_hashes: The modifier_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :param phase_hashes: The phase_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        """
        self.openapi_types = {
            'activity_hash': int,
            'boolean_activity_options': Dict[str, bool],
            'challenge_objective_hashes': List[int],
            'loadout_requirement_index': int,
            'modifier_hashes': List[int],
            'phase_hashes': List[int]
        }

        self.attribute_map = {
            'activity_hash': 'activityHash',
            'boolean_activity_options': 'booleanActivityOptions',
            'challenge_objective_hashes': 'challengeObjectiveHashes',
            'loadout_requirement_index': 'loadoutRequirementIndex',
            'modifier_hashes': 'modifierHashes',
            'phase_hashes': 'phaseHashes'
        }

        self._activity_hash = activity_hash
        self._boolean_activity_options = boolean_activity_options
        self._challenge_objective_hashes = challenge_objective_hashes
        self._loadout_requirement_index = loadout_requirement_index
        self._modifier_hashes = modifier_hashes
        self._phase_hashes = phase_hashes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinyMilestonesDestinyPublicMilestoneChallengeActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destiny.Milestones.DestinyPublicMilestoneChallengeActivity of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_hash(self):
        """Gets the activity_hash of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.


        :return: The activity_hash of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :rtype: int
        """
        return self._activity_hash

    @activity_hash.setter
    def activity_hash(self, activity_hash):
        """Sets the activity_hash of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.


        :param activity_hash: The activity_hash of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :type activity_hash: int
        """

        self._activity_hash = activity_hash

    @property
    def boolean_activity_options(self):
        """Gets the boolean_activity_options of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.

        The set of activity options for this activity, keyed by an identifier that's unique for this activity (not guaranteed to be unique between or across all activities, though should be unique for every *variant* of a given *conceptual* activity: for instance, the original D2 Raid has many variant DestinyActivityDefinitions. While other activities could potentially have the same option hashes, for any given D2 base Raid variant the hash will be unique).  As a concrete example of this data, the hashes you get for Raids will correspond to the currently active \"Challenge Mode\".  We have no human readable information for this data, so it's up to you if you want to associate it with such info to show it.

        :return: The boolean_activity_options of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :rtype: Dict[str, bool]
        """
        return self._boolean_activity_options

    @boolean_activity_options.setter
    def boolean_activity_options(self, boolean_activity_options):
        """Sets the boolean_activity_options of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.

        The set of activity options for this activity, keyed by an identifier that's unique for this activity (not guaranteed to be unique between or across all activities, though should be unique for every *variant* of a given *conceptual* activity: for instance, the original D2 Raid has many variant DestinyActivityDefinitions. While other activities could potentially have the same option hashes, for any given D2 base Raid variant the hash will be unique).  As a concrete example of this data, the hashes you get for Raids will correspond to the currently active \"Challenge Mode\".  We have no human readable information for this data, so it's up to you if you want to associate it with such info to show it.

        :param boolean_activity_options: The boolean_activity_options of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :type boolean_activity_options: Dict[str, bool]
        """

        self._boolean_activity_options = boolean_activity_options

    @property
    def challenge_objective_hashes(self):
        """Gets the challenge_objective_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.


        :return: The challenge_objective_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :rtype: List[int]
        """
        return self._challenge_objective_hashes

    @challenge_objective_hashes.setter
    def challenge_objective_hashes(self, challenge_objective_hashes):
        """Sets the challenge_objective_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.


        :param challenge_objective_hashes: The challenge_objective_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :type challenge_objective_hashes: List[int]
        """

        self._challenge_objective_hashes = challenge_objective_hashes

    @property
    def loadout_requirement_index(self):
        """Gets the loadout_requirement_index of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.

        If returned, this is the index into the DestinyActivityDefinition's \"loadouts\" property, indicating the currently active loadout requirements.

        :return: The loadout_requirement_index of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :rtype: int
        """
        return self._loadout_requirement_index

    @loadout_requirement_index.setter
    def loadout_requirement_index(self, loadout_requirement_index):
        """Sets the loadout_requirement_index of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.

        If returned, this is the index into the DestinyActivityDefinition's \"loadouts\" property, indicating the currently active loadout requirements.

        :param loadout_requirement_index: The loadout_requirement_index of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :type loadout_requirement_index: int
        """

        self._loadout_requirement_index = loadout_requirement_index

    @property
    def modifier_hashes(self):
        """Gets the modifier_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.

        If the activity has modifiers, this will be the list of modifiers that all variants have in common. Perform lookups against DestinyActivityModifierDefinition which defines the modifier being applied to get at the modifier data.  Note that, in the DestiyActivityDefinition, you will see many more modifiers than this being referred to: those are all *possible* modifiers for the activity, not the active ones. Use only the active ones to match what's really live.

        :return: The modifier_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :rtype: List[int]
        """
        return self._modifier_hashes

    @modifier_hashes.setter
    def modifier_hashes(self, modifier_hashes):
        """Sets the modifier_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.

        If the activity has modifiers, this will be the list of modifiers that all variants have in common. Perform lookups against DestinyActivityModifierDefinition which defines the modifier being applied to get at the modifier data.  Note that, in the DestiyActivityDefinition, you will see many more modifiers than this being referred to: those are all *possible* modifiers for the activity, not the active ones. Use only the active ones to match what's really live.

        :param modifier_hashes: The modifier_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :type modifier_hashes: List[int]
        """

        self._modifier_hashes = modifier_hashes

    @property
    def phase_hashes(self):
        """Gets the phase_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.

        The ordered list of phases for this activity, if any. Note that we have no human readable info for phases, nor any entities to relate them to: relating these hashes to something human readable is up to you unfortunately.

        :return: The phase_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :rtype: List[int]
        """
        return self._phase_hashes

    @phase_hashes.setter
    def phase_hashes(self, phase_hashes):
        """Sets the phase_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.

        The ordered list of phases for this activity, if any. Note that we have no human readable info for phases, nor any entities to relate them to: relating these hashes to something human readable is up to you unfortunately.

        :param phase_hashes: The phase_hashes of this DestinyMilestonesDestinyPublicMilestoneChallengeActivity.
        :type phase_hashes: List[int]
        """

        self._phase_hashes = phase_hashes
