/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SocialFriendsBungieFriend;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SocialFriendsBungieFriendRequestListResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SocialFriendsBungieFriendRequestListResponse {
  public static final String SERIALIZED_NAME_INCOMING_REQUESTS = "incomingRequests";
  @SerializedName(SERIALIZED_NAME_INCOMING_REQUESTS)
  private List<SocialFriendsBungieFriend> incomingRequests = new ArrayList<>();

  public static final String SERIALIZED_NAME_OUTGOING_REQUESTS = "outgoingRequests";
  @SerializedName(SERIALIZED_NAME_OUTGOING_REQUESTS)
  private List<SocialFriendsBungieFriend> outgoingRequests = new ArrayList<>();

  public SocialFriendsBungieFriendRequestListResponse() {
  }

  public SocialFriendsBungieFriendRequestListResponse incomingRequests(List<SocialFriendsBungieFriend> incomingRequests) {
    this.incomingRequests = incomingRequests;
    return this;
  }

  public SocialFriendsBungieFriendRequestListResponse addIncomingRequestsItem(SocialFriendsBungieFriend incomingRequestsItem) {
    if (this.incomingRequests == null) {
      this.incomingRequests = new ArrayList<>();
    }
    this.incomingRequests.add(incomingRequestsItem);
    return this;
  }

  /**
   * Get incomingRequests
   * @return incomingRequests
   */
  @javax.annotation.Nullable
  public List<SocialFriendsBungieFriend> getIncomingRequests() {
    return incomingRequests;
  }

  public void setIncomingRequests(List<SocialFriendsBungieFriend> incomingRequests) {
    this.incomingRequests = incomingRequests;
  }


  public SocialFriendsBungieFriendRequestListResponse outgoingRequests(List<SocialFriendsBungieFriend> outgoingRequests) {
    this.outgoingRequests = outgoingRequests;
    return this;
  }

  public SocialFriendsBungieFriendRequestListResponse addOutgoingRequestsItem(SocialFriendsBungieFriend outgoingRequestsItem) {
    if (this.outgoingRequests == null) {
      this.outgoingRequests = new ArrayList<>();
    }
    this.outgoingRequests.add(outgoingRequestsItem);
    return this;
  }

  /**
   * Get outgoingRequests
   * @return outgoingRequests
   */
  @javax.annotation.Nullable
  public List<SocialFriendsBungieFriend> getOutgoingRequests() {
    return outgoingRequests;
  }

  public void setOutgoingRequests(List<SocialFriendsBungieFriend> outgoingRequests) {
    this.outgoingRequests = outgoingRequests;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SocialFriendsBungieFriendRequestListResponse socialFriendsBungieFriendRequestListResponse = (SocialFriendsBungieFriendRequestListResponse) o;
    return Objects.equals(this.incomingRequests, socialFriendsBungieFriendRequestListResponse.incomingRequests) &&
        Objects.equals(this.outgoingRequests, socialFriendsBungieFriendRequestListResponse.outgoingRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(incomingRequests, outgoingRequests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SocialFriendsBungieFriendRequestListResponse {\n");
    sb.append("    incomingRequests: ").append(toIndentedString(incomingRequests)).append("\n");
    sb.append("    outgoingRequests: ").append(toIndentedString(outgoingRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("incomingRequests");
    openapiFields.add("outgoingRequests");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SocialFriendsBungieFriendRequestListResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SocialFriendsBungieFriendRequestListResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SocialFriendsBungieFriendRequestListResponse is not found in the empty JSON string", SocialFriendsBungieFriendRequestListResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SocialFriendsBungieFriendRequestListResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SocialFriendsBungieFriendRequestListResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("incomingRequests") != null && !jsonObj.get("incomingRequests").isJsonNull()) {
        JsonArray jsonArrayincomingRequests = jsonObj.getAsJsonArray("incomingRequests");
        if (jsonArrayincomingRequests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("incomingRequests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `incomingRequests` to be an array in the JSON string but got `%s`", jsonObj.get("incomingRequests").toString()));
          }

          // validate the optional field `incomingRequests` (array)
          for (int i = 0; i < jsonArrayincomingRequests.size(); i++) {
            SocialFriendsBungieFriend.validateJsonElement(jsonArrayincomingRequests.get(i));
          };
        }
      }
      if (jsonObj.get("outgoingRequests") != null && !jsonObj.get("outgoingRequests").isJsonNull()) {
        JsonArray jsonArrayoutgoingRequests = jsonObj.getAsJsonArray("outgoingRequests");
        if (jsonArrayoutgoingRequests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("outgoingRequests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `outgoingRequests` to be an array in the JSON string but got `%s`", jsonObj.get("outgoingRequests").toString()));
          }

          // validate the optional field `outgoingRequests` (array)
          for (int i = 0; i < jsonArrayoutgoingRequests.size(); i++) {
            SocialFriendsBungieFriend.validateJsonElement(jsonArrayoutgoingRequests.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SocialFriendsBungieFriendRequestListResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SocialFriendsBungieFriendRequestListResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SocialFriendsBungieFriendRequestListResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SocialFriendsBungieFriendRequestListResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SocialFriendsBungieFriendRequestListResponse>() {
           @Override
           public void write(JsonWriter out, SocialFriendsBungieFriendRequestListResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SocialFriendsBungieFriendRequestListResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SocialFriendsBungieFriendRequestListResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SocialFriendsBungieFriendRequestListResponse
   * @throws IOException if the JSON string is invalid with respect to SocialFriendsBungieFriendRequestListResponse
   */
  public static SocialFriendsBungieFriendRequestListResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SocialFriendsBungieFriendRequestListResponse.class);
  }

  /**
   * Convert an instance of SocialFriendsBungieFriendRequestListResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

