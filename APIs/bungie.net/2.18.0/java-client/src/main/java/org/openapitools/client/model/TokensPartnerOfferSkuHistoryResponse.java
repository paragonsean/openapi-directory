/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TokensPartnerOfferHistoryResponse;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TokensPartnerOfferSkuHistoryResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TokensPartnerOfferSkuHistoryResponse {
  public static final String SERIALIZED_NAME_ALL_OFFERS_APPLIED = "AllOffersApplied";
  @SerializedName(SERIALIZED_NAME_ALL_OFFERS_APPLIED)
  private Boolean allOffersApplied;

  public static final String SERIALIZED_NAME_CLAIM_DATE = "ClaimDate";
  @SerializedName(SERIALIZED_NAME_CLAIM_DATE)
  private OffsetDateTime claimDate;

  public static final String SERIALIZED_NAME_LOCALIZED_DESCRIPTION = "LocalizedDescription";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_DESCRIPTION)
  private String localizedDescription;

  public static final String SERIALIZED_NAME_LOCALIZED_NAME = "LocalizedName";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_NAME)
  private String localizedName;

  public static final String SERIALIZED_NAME_SKU_IDENTIFIER = "SkuIdentifier";
  @SerializedName(SERIALIZED_NAME_SKU_IDENTIFIER)
  private String skuIdentifier;

  public static final String SERIALIZED_NAME_SKU_OFFERS = "SkuOffers";
  @SerializedName(SERIALIZED_NAME_SKU_OFFERS)
  private List<TokensPartnerOfferHistoryResponse> skuOffers = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "TransactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public TokensPartnerOfferSkuHistoryResponse() {
  }

  public TokensPartnerOfferSkuHistoryResponse allOffersApplied(Boolean allOffersApplied) {
    this.allOffersApplied = allOffersApplied;
    return this;
  }

  /**
   * Get allOffersApplied
   * @return allOffersApplied
   */
  @javax.annotation.Nullable
  public Boolean getAllOffersApplied() {
    return allOffersApplied;
  }

  public void setAllOffersApplied(Boolean allOffersApplied) {
    this.allOffersApplied = allOffersApplied;
  }


  public TokensPartnerOfferSkuHistoryResponse claimDate(OffsetDateTime claimDate) {
    this.claimDate = claimDate;
    return this;
  }

  /**
   * Get claimDate
   * @return claimDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getClaimDate() {
    return claimDate;
  }

  public void setClaimDate(OffsetDateTime claimDate) {
    this.claimDate = claimDate;
  }


  public TokensPartnerOfferSkuHistoryResponse localizedDescription(String localizedDescription) {
    this.localizedDescription = localizedDescription;
    return this;
  }

  /**
   * Get localizedDescription
   * @return localizedDescription
   */
  @javax.annotation.Nullable
  public String getLocalizedDescription() {
    return localizedDescription;
  }

  public void setLocalizedDescription(String localizedDescription) {
    this.localizedDescription = localizedDescription;
  }


  public TokensPartnerOfferSkuHistoryResponse localizedName(String localizedName) {
    this.localizedName = localizedName;
    return this;
  }

  /**
   * Get localizedName
   * @return localizedName
   */
  @javax.annotation.Nullable
  public String getLocalizedName() {
    return localizedName;
  }

  public void setLocalizedName(String localizedName) {
    this.localizedName = localizedName;
  }


  public TokensPartnerOfferSkuHistoryResponse skuIdentifier(String skuIdentifier) {
    this.skuIdentifier = skuIdentifier;
    return this;
  }

  /**
   * Get skuIdentifier
   * @return skuIdentifier
   */
  @javax.annotation.Nullable
  public String getSkuIdentifier() {
    return skuIdentifier;
  }

  public void setSkuIdentifier(String skuIdentifier) {
    this.skuIdentifier = skuIdentifier;
  }


  public TokensPartnerOfferSkuHistoryResponse skuOffers(List<TokensPartnerOfferHistoryResponse> skuOffers) {
    this.skuOffers = skuOffers;
    return this;
  }

  public TokensPartnerOfferSkuHistoryResponse addSkuOffersItem(TokensPartnerOfferHistoryResponse skuOffersItem) {
    if (this.skuOffers == null) {
      this.skuOffers = new ArrayList<>();
    }
    this.skuOffers.add(skuOffersItem);
    return this;
  }

  /**
   * Get skuOffers
   * @return skuOffers
   */
  @javax.annotation.Nullable
  public List<TokensPartnerOfferHistoryResponse> getSkuOffers() {
    return skuOffers;
  }

  public void setSkuOffers(List<TokensPartnerOfferHistoryResponse> skuOffers) {
    this.skuOffers = skuOffers;
  }


  public TokensPartnerOfferSkuHistoryResponse transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokensPartnerOfferSkuHistoryResponse tokensPartnerOfferSkuHistoryResponse = (TokensPartnerOfferSkuHistoryResponse) o;
    return Objects.equals(this.allOffersApplied, tokensPartnerOfferSkuHistoryResponse.allOffersApplied) &&
        Objects.equals(this.claimDate, tokensPartnerOfferSkuHistoryResponse.claimDate) &&
        Objects.equals(this.localizedDescription, tokensPartnerOfferSkuHistoryResponse.localizedDescription) &&
        Objects.equals(this.localizedName, tokensPartnerOfferSkuHistoryResponse.localizedName) &&
        Objects.equals(this.skuIdentifier, tokensPartnerOfferSkuHistoryResponse.skuIdentifier) &&
        Objects.equals(this.skuOffers, tokensPartnerOfferSkuHistoryResponse.skuOffers) &&
        Objects.equals(this.transactionId, tokensPartnerOfferSkuHistoryResponse.transactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allOffersApplied, claimDate, localizedDescription, localizedName, skuIdentifier, skuOffers, transactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokensPartnerOfferSkuHistoryResponse {\n");
    sb.append("    allOffersApplied: ").append(toIndentedString(allOffersApplied)).append("\n");
    sb.append("    claimDate: ").append(toIndentedString(claimDate)).append("\n");
    sb.append("    localizedDescription: ").append(toIndentedString(localizedDescription)).append("\n");
    sb.append("    localizedName: ").append(toIndentedString(localizedName)).append("\n");
    sb.append("    skuIdentifier: ").append(toIndentedString(skuIdentifier)).append("\n");
    sb.append("    skuOffers: ").append(toIndentedString(skuOffers)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AllOffersApplied");
    openapiFields.add("ClaimDate");
    openapiFields.add("LocalizedDescription");
    openapiFields.add("LocalizedName");
    openapiFields.add("SkuIdentifier");
    openapiFields.add("SkuOffers");
    openapiFields.add("TransactionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TokensPartnerOfferSkuHistoryResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TokensPartnerOfferSkuHistoryResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TokensPartnerOfferSkuHistoryResponse is not found in the empty JSON string", TokensPartnerOfferSkuHistoryResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TokensPartnerOfferSkuHistoryResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TokensPartnerOfferSkuHistoryResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("LocalizedDescription") != null && !jsonObj.get("LocalizedDescription").isJsonNull()) && !jsonObj.get("LocalizedDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LocalizedDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LocalizedDescription").toString()));
      }
      if ((jsonObj.get("LocalizedName") != null && !jsonObj.get("LocalizedName").isJsonNull()) && !jsonObj.get("LocalizedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LocalizedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LocalizedName").toString()));
      }
      if ((jsonObj.get("SkuIdentifier") != null && !jsonObj.get("SkuIdentifier").isJsonNull()) && !jsonObj.get("SkuIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SkuIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SkuIdentifier").toString()));
      }
      if (jsonObj.get("SkuOffers") != null && !jsonObj.get("SkuOffers").isJsonNull()) {
        JsonArray jsonArrayskuOffers = jsonObj.getAsJsonArray("SkuOffers");
        if (jsonArrayskuOffers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("SkuOffers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `SkuOffers` to be an array in the JSON string but got `%s`", jsonObj.get("SkuOffers").toString()));
          }

          // validate the optional field `SkuOffers` (array)
          for (int i = 0; i < jsonArrayskuOffers.size(); i++) {
            TokensPartnerOfferHistoryResponse.validateJsonElement(jsonArrayskuOffers.get(i));
          };
        }
      }
      if ((jsonObj.get("TransactionId") != null && !jsonObj.get("TransactionId").isJsonNull()) && !jsonObj.get("TransactionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TransactionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TransactionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TokensPartnerOfferSkuHistoryResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TokensPartnerOfferSkuHistoryResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TokensPartnerOfferSkuHistoryResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TokensPartnerOfferSkuHistoryResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<TokensPartnerOfferSkuHistoryResponse>() {
           @Override
           public void write(JsonWriter out, TokensPartnerOfferSkuHistoryResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TokensPartnerOfferSkuHistoryResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TokensPartnerOfferSkuHistoryResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TokensPartnerOfferSkuHistoryResponse
   * @throws IOException if the JSON string is invalid with respect to TokensPartnerOfferSkuHistoryResponse
   */
  public static TokensPartnerOfferSkuHistoryResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TokensPartnerOfferSkuHistoryResponse.class);
  }

  /**
   * Convert an instance of TokensPartnerOfferSkuHistoryResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

