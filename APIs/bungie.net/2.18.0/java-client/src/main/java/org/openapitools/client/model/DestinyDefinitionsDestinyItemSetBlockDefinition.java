/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemSetBlockEntryDefinition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Primarily for Quests, this is the definition of properties related to the item if it is a quest and its various quest steps.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsDestinyItemSetBlockDefinition {
  public static final String SERIALIZED_NAME_ITEM_LIST = "itemList";
  @SerializedName(SERIALIZED_NAME_ITEM_LIST)
  private List<DestinyDefinitionsDestinyItemSetBlockEntryDefinition> itemList = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUEST_LINE_DESCRIPTION = "questLineDescription";
  @SerializedName(SERIALIZED_NAME_QUEST_LINE_DESCRIPTION)
  private String questLineDescription;

  public static final String SERIALIZED_NAME_QUEST_LINE_NAME = "questLineName";
  @SerializedName(SERIALIZED_NAME_QUEST_LINE_NAME)
  private String questLineName;

  public static final String SERIALIZED_NAME_QUEST_STEP_SUMMARY = "questStepSummary";
  @SerializedName(SERIALIZED_NAME_QUEST_STEP_SUMMARY)
  private String questStepSummary;

  public static final String SERIALIZED_NAME_REQUIRE_ORDERED_SET_ITEM_ADD = "requireOrderedSetItemAdd";
  @SerializedName(SERIALIZED_NAME_REQUIRE_ORDERED_SET_ITEM_ADD)
  private Boolean requireOrderedSetItemAdd;

  public static final String SERIALIZED_NAME_SET_IS_FEATURED = "setIsFeatured";
  @SerializedName(SERIALIZED_NAME_SET_IS_FEATURED)
  private Boolean setIsFeatured;

  public static final String SERIALIZED_NAME_SET_TYPE = "setType";
  @SerializedName(SERIALIZED_NAME_SET_TYPE)
  private String setType;

  public DestinyDefinitionsDestinyItemSetBlockDefinition() {
  }

  public DestinyDefinitionsDestinyItemSetBlockDefinition itemList(List<DestinyDefinitionsDestinyItemSetBlockEntryDefinition> itemList) {
    this.itemList = itemList;
    return this;
  }

  public DestinyDefinitionsDestinyItemSetBlockDefinition addItemListItem(DestinyDefinitionsDestinyItemSetBlockEntryDefinition itemListItem) {
    if (this.itemList == null) {
      this.itemList = new ArrayList<>();
    }
    this.itemList.add(itemListItem);
    return this;
  }

  /**
   * A collection of hashes of set items, for items such as Quest Metadata items that possess this data.
   * @return itemList
   */
  @javax.annotation.Nullable
  public List<DestinyDefinitionsDestinyItemSetBlockEntryDefinition> getItemList() {
    return itemList;
  }

  public void setItemList(List<DestinyDefinitionsDestinyItemSetBlockEntryDefinition> itemList) {
    this.itemList = itemList;
  }


  public DestinyDefinitionsDestinyItemSetBlockDefinition questLineDescription(String questLineDescription) {
    this.questLineDescription = questLineDescription;
    return this;
  }

  /**
   * The description of the quest line that this quest step is a part of.
   * @return questLineDescription
   */
  @javax.annotation.Nullable
  public String getQuestLineDescription() {
    return questLineDescription;
  }

  public void setQuestLineDescription(String questLineDescription) {
    this.questLineDescription = questLineDescription;
  }


  public DestinyDefinitionsDestinyItemSetBlockDefinition questLineName(String questLineName) {
    this.questLineName = questLineName;
    return this;
  }

  /**
   * The name of the quest line that this quest step is a part of.
   * @return questLineName
   */
  @javax.annotation.Nullable
  public String getQuestLineName() {
    return questLineName;
  }

  public void setQuestLineName(String questLineName) {
    this.questLineName = questLineName;
  }


  public DestinyDefinitionsDestinyItemSetBlockDefinition questStepSummary(String questStepSummary) {
    this.questStepSummary = questStepSummary;
    return this;
  }

  /**
   * An additional summary of this step in the quest line.
   * @return questStepSummary
   */
  @javax.annotation.Nullable
  public String getQuestStepSummary() {
    return questStepSummary;
  }

  public void setQuestStepSummary(String questStepSummary) {
    this.questStepSummary = questStepSummary;
  }


  public DestinyDefinitionsDestinyItemSetBlockDefinition requireOrderedSetItemAdd(Boolean requireOrderedSetItemAdd) {
    this.requireOrderedSetItemAdd = requireOrderedSetItemAdd;
    return this;
  }

  /**
   * If true, items in the set can only be added in increasing order, and adding an item will remove any previous item. For Quests, this is by necessity true. Only one quest step is present at a time, and previous steps are removed as you advance in the quest.
   * @return requireOrderedSetItemAdd
   */
  @javax.annotation.Nullable
  public Boolean getRequireOrderedSetItemAdd() {
    return requireOrderedSetItemAdd;
  }

  public void setRequireOrderedSetItemAdd(Boolean requireOrderedSetItemAdd) {
    this.requireOrderedSetItemAdd = requireOrderedSetItemAdd;
  }


  public DestinyDefinitionsDestinyItemSetBlockDefinition setIsFeatured(Boolean setIsFeatured) {
    this.setIsFeatured = setIsFeatured;
    return this;
  }

  /**
   * If true, the UI should treat this quest as \&quot;featured\&quot;
   * @return setIsFeatured
   */
  @javax.annotation.Nullable
  public Boolean getSetIsFeatured() {
    return setIsFeatured;
  }

  public void setSetIsFeatured(Boolean setIsFeatured) {
    this.setIsFeatured = setIsFeatured;
  }


  public DestinyDefinitionsDestinyItemSetBlockDefinition setType(String setType) {
    this.setType = setType;
    return this;
  }

  /**
   * A string identifier we can use to attempt to identify the category of the Quest.
   * @return setType
   */
  @javax.annotation.Nullable
  public String getSetType() {
    return setType;
  }

  public void setSetType(String setType) {
    this.setType = setType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyItemSetBlockDefinition destinyDefinitionsDestinyItemSetBlockDefinition = (DestinyDefinitionsDestinyItemSetBlockDefinition) o;
    return Objects.equals(this.itemList, destinyDefinitionsDestinyItemSetBlockDefinition.itemList) &&
        Objects.equals(this.questLineDescription, destinyDefinitionsDestinyItemSetBlockDefinition.questLineDescription) &&
        Objects.equals(this.questLineName, destinyDefinitionsDestinyItemSetBlockDefinition.questLineName) &&
        Objects.equals(this.questStepSummary, destinyDefinitionsDestinyItemSetBlockDefinition.questStepSummary) &&
        Objects.equals(this.requireOrderedSetItemAdd, destinyDefinitionsDestinyItemSetBlockDefinition.requireOrderedSetItemAdd) &&
        Objects.equals(this.setIsFeatured, destinyDefinitionsDestinyItemSetBlockDefinition.setIsFeatured) &&
        Objects.equals(this.setType, destinyDefinitionsDestinyItemSetBlockDefinition.setType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemList, questLineDescription, questLineName, questStepSummary, requireOrderedSetItemAdd, setIsFeatured, setType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyItemSetBlockDefinition {\n");
    sb.append("    itemList: ").append(toIndentedString(itemList)).append("\n");
    sb.append("    questLineDescription: ").append(toIndentedString(questLineDescription)).append("\n");
    sb.append("    questLineName: ").append(toIndentedString(questLineName)).append("\n");
    sb.append("    questStepSummary: ").append(toIndentedString(questStepSummary)).append("\n");
    sb.append("    requireOrderedSetItemAdd: ").append(toIndentedString(requireOrderedSetItemAdd)).append("\n");
    sb.append("    setIsFeatured: ").append(toIndentedString(setIsFeatured)).append("\n");
    sb.append("    setType: ").append(toIndentedString(setType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("itemList");
    openapiFields.add("questLineDescription");
    openapiFields.add("questLineName");
    openapiFields.add("questStepSummary");
    openapiFields.add("requireOrderedSetItemAdd");
    openapiFields.add("setIsFeatured");
    openapiFields.add("setType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsDestinyItemSetBlockDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsDestinyItemSetBlockDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsDestinyItemSetBlockDefinition is not found in the empty JSON string", DestinyDefinitionsDestinyItemSetBlockDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsDestinyItemSetBlockDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsDestinyItemSetBlockDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("itemList") != null && !jsonObj.get("itemList").isJsonNull()) {
        JsonArray jsonArrayitemList = jsonObj.getAsJsonArray("itemList");
        if (jsonArrayitemList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("itemList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `itemList` to be an array in the JSON string but got `%s`", jsonObj.get("itemList").toString()));
          }

          // validate the optional field `itemList` (array)
          for (int i = 0; i < jsonArrayitemList.size(); i++) {
            DestinyDefinitionsDestinyItemSetBlockEntryDefinition.validateJsonElement(jsonArrayitemList.get(i));
          };
        }
      }
      if ((jsonObj.get("questLineDescription") != null && !jsonObj.get("questLineDescription").isJsonNull()) && !jsonObj.get("questLineDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `questLineDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("questLineDescription").toString()));
      }
      if ((jsonObj.get("questLineName") != null && !jsonObj.get("questLineName").isJsonNull()) && !jsonObj.get("questLineName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `questLineName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("questLineName").toString()));
      }
      if ((jsonObj.get("questStepSummary") != null && !jsonObj.get("questStepSummary").isJsonNull()) && !jsonObj.get("questStepSummary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `questStepSummary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("questStepSummary").toString()));
      }
      if ((jsonObj.get("setType") != null && !jsonObj.get("setType").isJsonNull()) && !jsonObj.get("setType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `setType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("setType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsDestinyItemSetBlockDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsDestinyItemSetBlockDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsDestinyItemSetBlockDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsDestinyItemSetBlockDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsDestinyItemSetBlockDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsDestinyItemSetBlockDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsDestinyItemSetBlockDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsDestinyItemSetBlockDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsDestinyItemSetBlockDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsDestinyItemSetBlockDefinition
   */
  public static DestinyDefinitionsDestinyItemSetBlockDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsDestinyItemSetBlockDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsDestinyItemSetBlockDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

