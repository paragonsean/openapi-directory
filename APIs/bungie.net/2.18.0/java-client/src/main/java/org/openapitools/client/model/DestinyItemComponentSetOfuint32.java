/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemInstanceComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemObjectivesComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemPerksComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemPlugObjectivesComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemRenderComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemReusablePlugsComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemSocketsComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemStatsComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyItemTalentGridComponent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DestinyItemComponentSetOfuint32
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyItemComponentSetOfuint32 {
  public static final String SERIALIZED_NAME_INSTANCES = "instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private DictionaryComponentResponseOfuint32AndDestinyItemInstanceComponent instances;

  public static final String SERIALIZED_NAME_OBJECTIVES = "objectives";
  @SerializedName(SERIALIZED_NAME_OBJECTIVES)
  private DictionaryComponentResponseOfuint32AndDestinyItemObjectivesComponent objectives;

  public static final String SERIALIZED_NAME_PERKS = "perks";
  @SerializedName(SERIALIZED_NAME_PERKS)
  private DictionaryComponentResponseOfuint32AndDestinyItemPerksComponent perks;

  public static final String SERIALIZED_NAME_PLUG_OBJECTIVES = "plugObjectives";
  @SerializedName(SERIALIZED_NAME_PLUG_OBJECTIVES)
  private DictionaryComponentResponseOfuint32AndDestinyItemPlugObjectivesComponent plugObjectives;

  public static final String SERIALIZED_NAME_PLUG_STATES = "plugStates";
  @SerializedName(SERIALIZED_NAME_PLUG_STATES)
  private DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent plugStates;

  public static final String SERIALIZED_NAME_RENDER_DATA = "renderData";
  @SerializedName(SERIALIZED_NAME_RENDER_DATA)
  private DictionaryComponentResponseOfuint32AndDestinyItemRenderComponent renderData;

  public static final String SERIALIZED_NAME_REUSABLE_PLUGS = "reusablePlugs";
  @SerializedName(SERIALIZED_NAME_REUSABLE_PLUGS)
  private DictionaryComponentResponseOfuint32AndDestinyItemReusablePlugsComponent reusablePlugs;

  public static final String SERIALIZED_NAME_SOCKETS = "sockets";
  @SerializedName(SERIALIZED_NAME_SOCKETS)
  private DictionaryComponentResponseOfuint32AndDestinyItemSocketsComponent sockets;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  private DictionaryComponentResponseOfuint32AndDestinyItemStatsComponent stats;

  public static final String SERIALIZED_NAME_TALENT_GRIDS = "talentGrids";
  @SerializedName(SERIALIZED_NAME_TALENT_GRIDS)
  private DictionaryComponentResponseOfuint32AndDestinyItemTalentGridComponent talentGrids;

  public DestinyItemComponentSetOfuint32() {
  }

  public DestinyItemComponentSetOfuint32 instances(DictionaryComponentResponseOfuint32AndDestinyItemInstanceComponent instances) {
    this.instances = instances;
    return this;
  }

  /**
   * Get instances
   * @return instances
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemInstanceComponent getInstances() {
    return instances;
  }

  public void setInstances(DictionaryComponentResponseOfuint32AndDestinyItemInstanceComponent instances) {
    this.instances = instances;
  }


  public DestinyItemComponentSetOfuint32 objectives(DictionaryComponentResponseOfuint32AndDestinyItemObjectivesComponent objectives) {
    this.objectives = objectives;
    return this;
  }

  /**
   * Get objectives
   * @return objectives
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemObjectivesComponent getObjectives() {
    return objectives;
  }

  public void setObjectives(DictionaryComponentResponseOfuint32AndDestinyItemObjectivesComponent objectives) {
    this.objectives = objectives;
  }


  public DestinyItemComponentSetOfuint32 perks(DictionaryComponentResponseOfuint32AndDestinyItemPerksComponent perks) {
    this.perks = perks;
    return this;
  }

  /**
   * Get perks
   * @return perks
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemPerksComponent getPerks() {
    return perks;
  }

  public void setPerks(DictionaryComponentResponseOfuint32AndDestinyItemPerksComponent perks) {
    this.perks = perks;
  }


  public DestinyItemComponentSetOfuint32 plugObjectives(DictionaryComponentResponseOfuint32AndDestinyItemPlugObjectivesComponent plugObjectives) {
    this.plugObjectives = plugObjectives;
    return this;
  }

  /**
   * Get plugObjectives
   * @return plugObjectives
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemPlugObjectivesComponent getPlugObjectives() {
    return plugObjectives;
  }

  public void setPlugObjectives(DictionaryComponentResponseOfuint32AndDestinyItemPlugObjectivesComponent plugObjectives) {
    this.plugObjectives = plugObjectives;
  }


  public DestinyItemComponentSetOfuint32 plugStates(DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent plugStates) {
    this.plugStates = plugStates;
    return this;
  }

  /**
   * Get plugStates
   * @return plugStates
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent getPlugStates() {
    return plugStates;
  }

  public void setPlugStates(DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent plugStates) {
    this.plugStates = plugStates;
  }


  public DestinyItemComponentSetOfuint32 renderData(DictionaryComponentResponseOfuint32AndDestinyItemRenderComponent renderData) {
    this.renderData = renderData;
    return this;
  }

  /**
   * Get renderData
   * @return renderData
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemRenderComponent getRenderData() {
    return renderData;
  }

  public void setRenderData(DictionaryComponentResponseOfuint32AndDestinyItemRenderComponent renderData) {
    this.renderData = renderData;
  }


  public DestinyItemComponentSetOfuint32 reusablePlugs(DictionaryComponentResponseOfuint32AndDestinyItemReusablePlugsComponent reusablePlugs) {
    this.reusablePlugs = reusablePlugs;
    return this;
  }

  /**
   * Get reusablePlugs
   * @return reusablePlugs
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemReusablePlugsComponent getReusablePlugs() {
    return reusablePlugs;
  }

  public void setReusablePlugs(DictionaryComponentResponseOfuint32AndDestinyItemReusablePlugsComponent reusablePlugs) {
    this.reusablePlugs = reusablePlugs;
  }


  public DestinyItemComponentSetOfuint32 sockets(DictionaryComponentResponseOfuint32AndDestinyItemSocketsComponent sockets) {
    this.sockets = sockets;
    return this;
  }

  /**
   * Get sockets
   * @return sockets
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemSocketsComponent getSockets() {
    return sockets;
  }

  public void setSockets(DictionaryComponentResponseOfuint32AndDestinyItemSocketsComponent sockets) {
    this.sockets = sockets;
  }


  public DestinyItemComponentSetOfuint32 stats(DictionaryComponentResponseOfuint32AndDestinyItemStatsComponent stats) {
    this.stats = stats;
    return this;
  }

  /**
   * Get stats
   * @return stats
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemStatsComponent getStats() {
    return stats;
  }

  public void setStats(DictionaryComponentResponseOfuint32AndDestinyItemStatsComponent stats) {
    this.stats = stats;
  }


  public DestinyItemComponentSetOfuint32 talentGrids(DictionaryComponentResponseOfuint32AndDestinyItemTalentGridComponent talentGrids) {
    this.talentGrids = talentGrids;
    return this;
  }

  /**
   * Get talentGrids
   * @return talentGrids
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyItemTalentGridComponent getTalentGrids() {
    return talentGrids;
  }

  public void setTalentGrids(DictionaryComponentResponseOfuint32AndDestinyItemTalentGridComponent talentGrids) {
    this.talentGrids = talentGrids;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyItemComponentSetOfuint32 destinyItemComponentSetOfuint32 = (DestinyItemComponentSetOfuint32) o;
    return Objects.equals(this.instances, destinyItemComponentSetOfuint32.instances) &&
        Objects.equals(this.objectives, destinyItemComponentSetOfuint32.objectives) &&
        Objects.equals(this.perks, destinyItemComponentSetOfuint32.perks) &&
        Objects.equals(this.plugObjectives, destinyItemComponentSetOfuint32.plugObjectives) &&
        Objects.equals(this.plugStates, destinyItemComponentSetOfuint32.plugStates) &&
        Objects.equals(this.renderData, destinyItemComponentSetOfuint32.renderData) &&
        Objects.equals(this.reusablePlugs, destinyItemComponentSetOfuint32.reusablePlugs) &&
        Objects.equals(this.sockets, destinyItemComponentSetOfuint32.sockets) &&
        Objects.equals(this.stats, destinyItemComponentSetOfuint32.stats) &&
        Objects.equals(this.talentGrids, destinyItemComponentSetOfuint32.talentGrids);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instances, objectives, perks, plugObjectives, plugStates, renderData, reusablePlugs, sockets, stats, talentGrids);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyItemComponentSetOfuint32 {\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    objectives: ").append(toIndentedString(objectives)).append("\n");
    sb.append("    perks: ").append(toIndentedString(perks)).append("\n");
    sb.append("    plugObjectives: ").append(toIndentedString(plugObjectives)).append("\n");
    sb.append("    plugStates: ").append(toIndentedString(plugStates)).append("\n");
    sb.append("    renderData: ").append(toIndentedString(renderData)).append("\n");
    sb.append("    reusablePlugs: ").append(toIndentedString(reusablePlugs)).append("\n");
    sb.append("    sockets: ").append(toIndentedString(sockets)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    talentGrids: ").append(toIndentedString(talentGrids)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instances");
    openapiFields.add("objectives");
    openapiFields.add("perks");
    openapiFields.add("plugObjectives");
    openapiFields.add("plugStates");
    openapiFields.add("renderData");
    openapiFields.add("reusablePlugs");
    openapiFields.add("sockets");
    openapiFields.add("stats");
    openapiFields.add("talentGrids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyItemComponentSetOfuint32
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyItemComponentSetOfuint32.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyItemComponentSetOfuint32 is not found in the empty JSON string", DestinyItemComponentSetOfuint32.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyItemComponentSetOfuint32.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyItemComponentSetOfuint32` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `instances`
      if (jsonObj.get("instances") != null && !jsonObj.get("instances").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemInstanceComponent.validateJsonElement(jsonObj.get("instances"));
      }
      // validate the optional field `objectives`
      if (jsonObj.get("objectives") != null && !jsonObj.get("objectives").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemObjectivesComponent.validateJsonElement(jsonObj.get("objectives"));
      }
      // validate the optional field `perks`
      if (jsonObj.get("perks") != null && !jsonObj.get("perks").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemPerksComponent.validateJsonElement(jsonObj.get("perks"));
      }
      // validate the optional field `plugObjectives`
      if (jsonObj.get("plugObjectives") != null && !jsonObj.get("plugObjectives").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemPlugObjectivesComponent.validateJsonElement(jsonObj.get("plugObjectives"));
      }
      // validate the optional field `plugStates`
      if (jsonObj.get("plugStates") != null && !jsonObj.get("plugStates").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent.validateJsonElement(jsonObj.get("plugStates"));
      }
      // validate the optional field `renderData`
      if (jsonObj.get("renderData") != null && !jsonObj.get("renderData").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemRenderComponent.validateJsonElement(jsonObj.get("renderData"));
      }
      // validate the optional field `reusablePlugs`
      if (jsonObj.get("reusablePlugs") != null && !jsonObj.get("reusablePlugs").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemReusablePlugsComponent.validateJsonElement(jsonObj.get("reusablePlugs"));
      }
      // validate the optional field `sockets`
      if (jsonObj.get("sockets") != null && !jsonObj.get("sockets").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemSocketsComponent.validateJsonElement(jsonObj.get("sockets"));
      }
      // validate the optional field `stats`
      if (jsonObj.get("stats") != null && !jsonObj.get("stats").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemStatsComponent.validateJsonElement(jsonObj.get("stats"));
      }
      // validate the optional field `talentGrids`
      if (jsonObj.get("talentGrids") != null && !jsonObj.get("talentGrids").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyItemTalentGridComponent.validateJsonElement(jsonObj.get("talentGrids"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyItemComponentSetOfuint32.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyItemComponentSetOfuint32' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyItemComponentSetOfuint32> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyItemComponentSetOfuint32.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyItemComponentSetOfuint32>() {
           @Override
           public void write(JsonWriter out, DestinyItemComponentSetOfuint32 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyItemComponentSetOfuint32 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyItemComponentSetOfuint32 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyItemComponentSetOfuint32
   * @throws IOException if the JSON string is invalid with respect to DestinyItemComponentSetOfuint32
   */
  public static DestinyItemComponentSetOfuint32 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyItemComponentSetOfuint32.class);
  }

  /**
   * Convert an instance of DestinyItemComponentSetOfuint32 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

