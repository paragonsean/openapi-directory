/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.TrendingGetTrendingCategories200Response;
import org.openapitools.client.model.TrendingGetTrendingCategory200Response;
import org.openapitools.client.model.TrendingGetTrendingEntryDetail200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TrendingApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public TrendingApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TrendingApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for trendingGetTrendingCategories
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call trendingGetTrendingCategoriesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/Trending/Categories/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call trendingGetTrendingCategoriesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return trendingGetTrendingCategoriesCall(_callback);

    }

    /**
     * 
     * Returns trending items for Bungie.net, collapsed into the first page of items per category. For pagination within a category, call GetTrendingCategory.
     * @return TrendingGetTrendingCategories200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public TrendingGetTrendingCategories200Response trendingGetTrendingCategories() throws ApiException {
        ApiResponse<TrendingGetTrendingCategories200Response> localVarResp = trendingGetTrendingCategoriesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * Returns trending items for Bungie.net, collapsed into the first page of items per category. For pagination within a category, call GetTrendingCategory.
     * @return ApiResponse&lt;TrendingGetTrendingCategories200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TrendingGetTrendingCategories200Response> trendingGetTrendingCategoriesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = trendingGetTrendingCategoriesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<TrendingGetTrendingCategories200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns trending items for Bungie.net, collapsed into the first page of items per category. For pagination within a category, call GetTrendingCategory.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call trendingGetTrendingCategoriesAsync(final ApiCallback<TrendingGetTrendingCategories200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = trendingGetTrendingCategoriesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<TrendingGetTrendingCategories200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for trendingGetTrendingCategory
     * @param categoryId The ID of the category for whom you want additional results. (required)
     * @param pageNumber The page # of results to return. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call trendingGetTrendingCategoryCall(String categoryId, Integer pageNumber, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/Trending/Categories/{categoryId}/{pageNumber}/"
            .replace("{" + "categoryId" + "}", localVarApiClient.escapeString(categoryId.toString()))
            .replace("{" + "pageNumber" + "}", localVarApiClient.escapeString(pageNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call trendingGetTrendingCategoryValidateBeforeCall(String categoryId, Integer pageNumber, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'categoryId' is set
        if (categoryId == null) {
            throw new ApiException("Missing the required parameter 'categoryId' when calling trendingGetTrendingCategory(Async)");
        }

        // verify the required parameter 'pageNumber' is set
        if (pageNumber == null) {
            throw new ApiException("Missing the required parameter 'pageNumber' when calling trendingGetTrendingCategory(Async)");
        }

        return trendingGetTrendingCategoryCall(categoryId, pageNumber, _callback);

    }

    /**
     * 
     * Returns paginated lists of trending items for a category.
     * @param categoryId The ID of the category for whom you want additional results. (required)
     * @param pageNumber The page # of results to return. (required)
     * @return TrendingGetTrendingCategory200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public TrendingGetTrendingCategory200Response trendingGetTrendingCategory(String categoryId, Integer pageNumber) throws ApiException {
        ApiResponse<TrendingGetTrendingCategory200Response> localVarResp = trendingGetTrendingCategoryWithHttpInfo(categoryId, pageNumber);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns paginated lists of trending items for a category.
     * @param categoryId The ID of the category for whom you want additional results. (required)
     * @param pageNumber The page # of results to return. (required)
     * @return ApiResponse&lt;TrendingGetTrendingCategory200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TrendingGetTrendingCategory200Response> trendingGetTrendingCategoryWithHttpInfo(String categoryId, Integer pageNumber) throws ApiException {
        okhttp3.Call localVarCall = trendingGetTrendingCategoryValidateBeforeCall(categoryId, pageNumber, null);
        Type localVarReturnType = new TypeToken<TrendingGetTrendingCategory200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns paginated lists of trending items for a category.
     * @param categoryId The ID of the category for whom you want additional results. (required)
     * @param pageNumber The page # of results to return. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call trendingGetTrendingCategoryAsync(String categoryId, Integer pageNumber, final ApiCallback<TrendingGetTrendingCategory200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = trendingGetTrendingCategoryValidateBeforeCall(categoryId, pageNumber, _callback);
        Type localVarReturnType = new TypeToken<TrendingGetTrendingCategory200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for trendingGetTrendingEntryDetail
     * @param identifier The identifier for the entity to be returned. (required)
     * @param trendingEntryType The type of entity to be returned. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call trendingGetTrendingEntryDetailCall(String identifier, Integer trendingEntryType, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/Trending/Details/{trendingEntryType}/{identifier}/"
            .replace("{" + "identifier" + "}", localVarApiClient.escapeString(identifier.toString()))
            .replace("{" + "trendingEntryType" + "}", localVarApiClient.escapeString(trendingEntryType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call trendingGetTrendingEntryDetailValidateBeforeCall(String identifier, Integer trendingEntryType, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling trendingGetTrendingEntryDetail(Async)");
        }

        // verify the required parameter 'trendingEntryType' is set
        if (trendingEntryType == null) {
            throw new ApiException("Missing the required parameter 'trendingEntryType' when calling trendingGetTrendingEntryDetail(Async)");
        }

        return trendingGetTrendingEntryDetailCall(identifier, trendingEntryType, _callback);

    }

    /**
     * 
     * Returns the detailed results for a specific trending entry. Note that trending entries are uniquely identified by a combination of *both* the TrendingEntryType *and* the identifier: the identifier alone is not guaranteed to be globally unique.
     * @param identifier The identifier for the entity to be returned. (required)
     * @param trendingEntryType The type of entity to be returned. (required)
     * @return TrendingGetTrendingEntryDetail200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public TrendingGetTrendingEntryDetail200Response trendingGetTrendingEntryDetail(String identifier, Integer trendingEntryType) throws ApiException {
        ApiResponse<TrendingGetTrendingEntryDetail200Response> localVarResp = trendingGetTrendingEntryDetailWithHttpInfo(identifier, trendingEntryType);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns the detailed results for a specific trending entry. Note that trending entries are uniquely identified by a combination of *both* the TrendingEntryType *and* the identifier: the identifier alone is not guaranteed to be globally unique.
     * @param identifier The identifier for the entity to be returned. (required)
     * @param trendingEntryType The type of entity to be returned. (required)
     * @return ApiResponse&lt;TrendingGetTrendingEntryDetail200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TrendingGetTrendingEntryDetail200Response> trendingGetTrendingEntryDetailWithHttpInfo(String identifier, Integer trendingEntryType) throws ApiException {
        okhttp3.Call localVarCall = trendingGetTrendingEntryDetailValidateBeforeCall(identifier, trendingEntryType, null);
        Type localVarReturnType = new TypeToken<TrendingGetTrendingEntryDetail200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns the detailed results for a specific trending entry. Note that trending entries are uniquely identified by a combination of *both* the TrendingEntryType *and* the identifier: the identifier alone is not guaranteed to be globally unique.
     * @param identifier The identifier for the entity to be returned. (required)
     * @param trendingEntryType The type of entity to be returned. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Look at the Response property for more information about the nature of this response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call trendingGetTrendingEntryDetailAsync(String identifier, Integer trendingEntryType, final ApiCallback<TrendingGetTrendingEntryDetail200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = trendingGetTrendingEntryDetailValidateBeforeCall(identifier, trendingEntryType, _callback);
        Type localVarReturnType = new TypeToken<TrendingGetTrendingEntryDetail200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
