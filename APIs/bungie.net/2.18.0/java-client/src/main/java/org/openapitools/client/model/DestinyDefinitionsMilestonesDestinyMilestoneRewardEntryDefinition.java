/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;
import org.openapitools.client.model.DestinyDestinyItemQuantity;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The definition of a specific reward, which may be contained in a category of rewards and that has optional information about how it is obtained.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition {
  public static final String SERIALIZED_NAME_DISPLAY_PROPERTIES = "displayProperties";
  @SerializedName(SERIALIZED_NAME_DISPLAY_PROPERTIES)
  private DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<DestinyDestinyItemQuantity> items = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private Integer order;

  public static final String SERIALIZED_NAME_REWARD_ENTRY_HASH = "rewardEntryHash";
  @SerializedName(SERIALIZED_NAME_REWARD_ENTRY_HASH)
  private Integer rewardEntryHash;

  public static final String SERIALIZED_NAME_REWARD_ENTRY_IDENTIFIER = "rewardEntryIdentifier";
  @SerializedName(SERIALIZED_NAME_REWARD_ENTRY_IDENTIFIER)
  private String rewardEntryIdentifier;

  public static final String SERIALIZED_NAME_VENDOR_HASH = "vendorHash";
  @SerializedName(SERIALIZED_NAME_VENDOR_HASH)
  private Integer vendorHash;

  public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition() {
  }

  public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition displayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

  /**
   * For us to bother returning this info, we should be able to return some kind of information about why these rewards are grouped together. This is ideally that information. Look at how confident I am that this will always remain true.
   * @return displayProperties
   */
  @javax.annotation.Nullable
  public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
  }


  public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition items(List<DestinyDestinyItemQuantity> items) {
    this.items = items;
    return this;
  }

  public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition addItemsItem(DestinyDestinyItemQuantity itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * The items you will get as rewards, and how much of it you&#39;ll get.
   * @return items
   */
  @javax.annotation.Nullable
  public List<DestinyDestinyItemQuantity> getItems() {
    return items;
  }

  public void setItems(List<DestinyDestinyItemQuantity> items) {
    this.items = items;
  }


  public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition order(Integer order) {
    this.order = order;
    return this;
  }

  /**
   * If you want to follow BNet&#39;s ordering of these rewards, use this number within a given category to order the rewards. Yeah, I know. I feel dirty too.
   * @return order
   */
  @javax.annotation.Nullable
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }


  public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition rewardEntryHash(Integer rewardEntryHash) {
    this.rewardEntryHash = rewardEntryHash;
    return this;
  }

  /**
   * The identifier for this reward entry. Runtime data will refer to reward entries by this hash. Only guaranteed unique within the specific Milestone.
   * @return rewardEntryHash
   */
  @javax.annotation.Nullable
  public Integer getRewardEntryHash() {
    return rewardEntryHash;
  }

  public void setRewardEntryHash(Integer rewardEntryHash) {
    this.rewardEntryHash = rewardEntryHash;
  }


  public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition rewardEntryIdentifier(String rewardEntryIdentifier) {
    this.rewardEntryIdentifier = rewardEntryIdentifier;
    return this;
  }

  /**
   * The string identifier, if you care about it. Only guaranteed unique within the specific Milestone.
   * @return rewardEntryIdentifier
   */
  @javax.annotation.Nullable
  public String getRewardEntryIdentifier() {
    return rewardEntryIdentifier;
  }

  public void setRewardEntryIdentifier(String rewardEntryIdentifier) {
    this.rewardEntryIdentifier = rewardEntryIdentifier;
  }


  public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition vendorHash(Integer vendorHash) {
    this.vendorHash = vendorHash;
    return this;
  }

  /**
   * If this reward is redeemed at a Vendor, this is the hash of the Vendor to go to in order to redeem the reward. Use this hash to look up the DestinyVendorDefinition.
   * @return vendorHash
   */
  @javax.annotation.Nullable
  public Integer getVendorHash() {
    return vendorHash;
  }

  public void setVendorHash(Integer vendorHash) {
    this.vendorHash = vendorHash;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition destinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition = (DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition) o;
    return Objects.equals(this.displayProperties, destinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.displayProperties) &&
        Objects.equals(this.items, destinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.items) &&
        Objects.equals(this.order, destinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.order) &&
        Objects.equals(this.rewardEntryHash, destinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.rewardEntryHash) &&
        Objects.equals(this.rewardEntryIdentifier, destinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.rewardEntryIdentifier) &&
        Objects.equals(this.vendorHash, destinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.vendorHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayProperties, items, order, rewardEntryHash, rewardEntryIdentifier, vendorHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition {\n");
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    rewardEntryHash: ").append(toIndentedString(rewardEntryHash)).append("\n");
    sb.append("    rewardEntryIdentifier: ").append(toIndentedString(rewardEntryIdentifier)).append("\n");
    sb.append("    vendorHash: ").append(toIndentedString(vendorHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayProperties");
    openapiFields.add("items");
    openapiFields.add("order");
    openapiFields.add("rewardEntryHash");
    openapiFields.add("rewardEntryIdentifier");
    openapiFields.add("vendorHash");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition is not found in the empty JSON string", DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `displayProperties`
      if (jsonObj.get("displayProperties") != null && !jsonObj.get("displayProperties").isJsonNull()) {
        DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJsonElement(jsonObj.get("displayProperties"));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            DestinyDestinyItemQuantity.validateJsonElement(jsonArrayitems.get(i));
          };
        }
      }
      if ((jsonObj.get("rewardEntryIdentifier") != null && !jsonObj.get("rewardEntryIdentifier").isJsonNull()) && !jsonObj.get("rewardEntryIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rewardEntryIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rewardEntryIdentifier").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition
   */
  public static DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

