/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DestinyDefinitionsDestinyStatDisplayDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyStatOverrideDefinition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * When an inventory item (DestinyInventoryItemDefinition) has Stats (such as Attack Power), the item will refer to a Stat Group. This definition enumerates the properties used to transform the item&#39;s \&quot;Investment\&quot; stats into \&quot;Display\&quot; stats.  See DestinyStatDefinition&#39;s documentation for information about the transformation of Stats, and the meaning of an Investment vs. a Display stat.  If you don&#39;t want to do these calculations on your own, fear not: pulling live data from the BNet endpoints will return display stat values pre-computed and ready for you to use. I highly recommend this approach, saves a lot of time and also accounts for certain stat modifiers that can&#39;t easily be accounted for without live data (such as stat modifiers on Talent Grids and Socket Plugs)
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsDestinyStatGroupDefinition {
  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private Integer hash;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_MAXIMUM_VALUE = "maximumValue";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_VALUE)
  private Integer maximumValue;

  public static final String SERIALIZED_NAME_OVERRIDES = "overrides";
  @SerializedName(SERIALIZED_NAME_OVERRIDES)
  private Map<String, DestinyDefinitionsDestinyStatOverrideDefinition> overrides = new HashMap<>();

  public static final String SERIALIZED_NAME_REDACTED = "redacted";
  @SerializedName(SERIALIZED_NAME_REDACTED)
  private Boolean redacted;

  public static final String SERIALIZED_NAME_SCALED_STATS = "scaledStats";
  @SerializedName(SERIALIZED_NAME_SCALED_STATS)
  private List<DestinyDefinitionsDestinyStatDisplayDefinition> scaledStats = new ArrayList<>();

  public static final String SERIALIZED_NAME_UI_POSITION = "uiPosition";
  @SerializedName(SERIALIZED_NAME_UI_POSITION)
  private Integer uiPosition;

  public DestinyDefinitionsDestinyStatGroupDefinition() {
  }

  public DestinyDefinitionsDestinyStatGroupDefinition hash(Integer hash) {
    this.hash = hash;
    return this;
  }

  /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
   * @return hash
   */
  @javax.annotation.Nullable
  public Integer getHash() {
    return hash;
  }

  public void setHash(Integer hash) {
    this.hash = hash;
  }


  public DestinyDefinitionsDestinyStatGroupDefinition index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * The index of the entity as it was found in the investment tables.
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public DestinyDefinitionsDestinyStatGroupDefinition maximumValue(Integer maximumValue) {
    this.maximumValue = maximumValue;
    return this;
  }

  /**
   * The maximum possible value that any stat in this group can be transformed into.  This is used by stats that *don&#39;t* have scaledStats entries below, but that still need to be displayed as a progress bar, in which case this is used as the upper bound for said progress bar. (the lower bound is always 0)
   * @return maximumValue
   */
  @javax.annotation.Nullable
  public Integer getMaximumValue() {
    return maximumValue;
  }

  public void setMaximumValue(Integer maximumValue) {
    this.maximumValue = maximumValue;
  }


  public DestinyDefinitionsDestinyStatGroupDefinition overrides(Map<String, DestinyDefinitionsDestinyStatOverrideDefinition> overrides) {
    this.overrides = overrides;
    return this;
  }

  public DestinyDefinitionsDestinyStatGroupDefinition putOverridesItem(String key, DestinyDefinitionsDestinyStatOverrideDefinition overridesItem) {
    if (this.overrides == null) {
      this.overrides = new HashMap<>();
    }
    this.overrides.put(key, overridesItem);
    return this;
  }

  /**
   * The game has the ability to override, based on the stat group, what the localized text is that is displayed for Stats being shown on the item.  Mercifully, no Stat Groups use this feature currently. If they start using them, we&#39;ll all need to start using them (and those of you who are more prudent than I am can go ahead and start pre-checking for this.)
   * @return overrides
   */
  @javax.annotation.Nullable
  public Map<String, DestinyDefinitionsDestinyStatOverrideDefinition> getOverrides() {
    return overrides;
  }

  public void setOverrides(Map<String, DestinyDefinitionsDestinyStatOverrideDefinition> overrides) {
    this.overrides = overrides;
  }


  public DestinyDefinitionsDestinyStatGroupDefinition redacted(Boolean redacted) {
    this.redacted = redacted;
    return this;
  }

  /**
   * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
   * @return redacted
   */
  @javax.annotation.Nullable
  public Boolean getRedacted() {
    return redacted;
  }

  public void setRedacted(Boolean redacted) {
    this.redacted = redacted;
  }


  public DestinyDefinitionsDestinyStatGroupDefinition scaledStats(List<DestinyDefinitionsDestinyStatDisplayDefinition> scaledStats) {
    this.scaledStats = scaledStats;
    return this;
  }

  public DestinyDefinitionsDestinyStatGroupDefinition addScaledStatsItem(DestinyDefinitionsDestinyStatDisplayDefinition scaledStatsItem) {
    if (this.scaledStats == null) {
      this.scaledStats = new ArrayList<>();
    }
    this.scaledStats.add(scaledStatsItem);
    return this;
  }

  /**
   * Any stat that requires scaling to be transformed from an \&quot;Investment\&quot; stat to a \&quot;Display\&quot; stat will have an entry in this list. For more information on what those types of stats mean and the transformation process, see DestinyStatDefinition.  In retrospect, I wouldn&#39;t mind if this was a dictionary keyed by the stat hash instead. But I&#39;m going to leave it be because [[After Apple Picking]].
   * @return scaledStats
   */
  @javax.annotation.Nullable
  public List<DestinyDefinitionsDestinyStatDisplayDefinition> getScaledStats() {
    return scaledStats;
  }

  public void setScaledStats(List<DestinyDefinitionsDestinyStatDisplayDefinition> scaledStats) {
    this.scaledStats = scaledStats;
  }


  public DestinyDefinitionsDestinyStatGroupDefinition uiPosition(Integer uiPosition) {
    this.uiPosition = uiPosition;
    return this;
  }

  /**
   * This apparently indicates the position of the stats in the UI? I&#39;ve returned it in case anyone can use it, but it&#39;s not of any use to us on BNet. Something&#39;s being lost in translation with this value.
   * @return uiPosition
   */
  @javax.annotation.Nullable
  public Integer getUiPosition() {
    return uiPosition;
  }

  public void setUiPosition(Integer uiPosition) {
    this.uiPosition = uiPosition;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyStatGroupDefinition destinyDefinitionsDestinyStatGroupDefinition = (DestinyDefinitionsDestinyStatGroupDefinition) o;
    return Objects.equals(this.hash, destinyDefinitionsDestinyStatGroupDefinition.hash) &&
        Objects.equals(this.index, destinyDefinitionsDestinyStatGroupDefinition.index) &&
        Objects.equals(this.maximumValue, destinyDefinitionsDestinyStatGroupDefinition.maximumValue) &&
        Objects.equals(this.overrides, destinyDefinitionsDestinyStatGroupDefinition.overrides) &&
        Objects.equals(this.redacted, destinyDefinitionsDestinyStatGroupDefinition.redacted) &&
        Objects.equals(this.scaledStats, destinyDefinitionsDestinyStatGroupDefinition.scaledStats) &&
        Objects.equals(this.uiPosition, destinyDefinitionsDestinyStatGroupDefinition.uiPosition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hash, index, maximumValue, overrides, redacted, scaledStats, uiPosition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyStatGroupDefinition {\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    maximumValue: ").append(toIndentedString(maximumValue)).append("\n");
    sb.append("    overrides: ").append(toIndentedString(overrides)).append("\n");
    sb.append("    redacted: ").append(toIndentedString(redacted)).append("\n");
    sb.append("    scaledStats: ").append(toIndentedString(scaledStats)).append("\n");
    sb.append("    uiPosition: ").append(toIndentedString(uiPosition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("hash");
    openapiFields.add("index");
    openapiFields.add("maximumValue");
    openapiFields.add("overrides");
    openapiFields.add("redacted");
    openapiFields.add("scaledStats");
    openapiFields.add("uiPosition");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsDestinyStatGroupDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsDestinyStatGroupDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsDestinyStatGroupDefinition is not found in the empty JSON string", DestinyDefinitionsDestinyStatGroupDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsDestinyStatGroupDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsDestinyStatGroupDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("scaledStats") != null && !jsonObj.get("scaledStats").isJsonNull()) {
        JsonArray jsonArrayscaledStats = jsonObj.getAsJsonArray("scaledStats");
        if (jsonArrayscaledStats != null) {
          // ensure the json data is an array
          if (!jsonObj.get("scaledStats").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `scaledStats` to be an array in the JSON string but got `%s`", jsonObj.get("scaledStats").toString()));
          }

          // validate the optional field `scaledStats` (array)
          for (int i = 0; i < jsonArrayscaledStats.size(); i++) {
            DestinyDefinitionsDestinyStatDisplayDefinition.validateJsonElement(jsonArrayscaledStats.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsDestinyStatGroupDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsDestinyStatGroupDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsDestinyStatGroupDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsDestinyStatGroupDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsDestinyStatGroupDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsDestinyStatGroupDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsDestinyStatGroupDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsDestinyStatGroupDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsDestinyStatGroupDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsDestinyStatGroupDefinition
   */
  public static DestinyDefinitionsDestinyStatGroupDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsDestinyStatGroupDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsDestinyStatGroupDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

