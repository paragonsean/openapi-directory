/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.DestinyItemComponentSetOfint32;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyVendorComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent;
import org.openapitools.client.model.SingleComponentResponseOfDestinyCurrenciesComponent;
import org.openapitools.client.model.SingleComponentResponseOfDestinyStringVariablesComponent;
import org.openapitools.client.model.SingleComponentResponseOfDestinyVendorGroupComponent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A response containing all of the components for all requested vendors.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyResponsesDestinyVendorsResponse {
  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent categories;

  public static final String SERIALIZED_NAME_CURRENCY_LOOKUPS = "currencyLookups";
  @SerializedName(SERIALIZED_NAME_CURRENCY_LOOKUPS)
  private SingleComponentResponseOfDestinyCurrenciesComponent currencyLookups;

  public static final String SERIALIZED_NAME_ITEM_COMPONENTS = "itemComponents";
  @SerializedName(SERIALIZED_NAME_ITEM_COMPONENTS)
  private Map<String, DestinyItemComponentSetOfint32> itemComponents = new HashMap<>();

  public static final String SERIALIZED_NAME_SALES = "sales";
  @SerializedName(SERIALIZED_NAME_SALES)
  private DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent sales;

  public static final String SERIALIZED_NAME_STRING_VARIABLES = "stringVariables";
  @SerializedName(SERIALIZED_NAME_STRING_VARIABLES)
  private SingleComponentResponseOfDestinyStringVariablesComponent stringVariables;

  public static final String SERIALIZED_NAME_VENDOR_GROUPS = "vendorGroups";
  @SerializedName(SERIALIZED_NAME_VENDOR_GROUPS)
  private SingleComponentResponseOfDestinyVendorGroupComponent vendorGroups;

  public static final String SERIALIZED_NAME_VENDORS = "vendors";
  @SerializedName(SERIALIZED_NAME_VENDORS)
  private DictionaryComponentResponseOfuint32AndDestinyVendorComponent vendors;

  public DestinyResponsesDestinyVendorsResponse() {
  }

  public DestinyResponsesDestinyVendorsResponse categories(DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent categories) {
    this.categories = categories;
    return this;
  }

  /**
   * Categories that the vendor has available, and references to the sales therein. These are keyed by the Vendor Hash, so you will get one Categories Component per vendor returned.  COMPONENT TYPE: VendorCategories
   * @return categories
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent getCategories() {
    return categories;
  }

  public void setCategories(DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent categories) {
    this.categories = categories;
  }


  public DestinyResponsesDestinyVendorsResponse currencyLookups(SingleComponentResponseOfDestinyCurrenciesComponent currencyLookups) {
    this.currencyLookups = currencyLookups;
    return this;
  }

  /**
   * A \&quot;lookup\&quot; convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups
   * @return currencyLookups
   */
  @javax.annotation.Nullable
  public SingleComponentResponseOfDestinyCurrenciesComponent getCurrencyLookups() {
    return currencyLookups;
  }

  public void setCurrencyLookups(SingleComponentResponseOfDestinyCurrenciesComponent currencyLookups) {
    this.currencyLookups = currencyLookups;
  }


  public DestinyResponsesDestinyVendorsResponse itemComponents(Map<String, DestinyItemComponentSetOfint32> itemComponents) {
    this.itemComponents = itemComponents;
    return this;
  }

  public DestinyResponsesDestinyVendorsResponse putItemComponentsItem(String key, DestinyItemComponentSetOfint32 itemComponentsItem) {
    if (this.itemComponents == null) {
      this.itemComponents = new HashMap<>();
    }
    this.itemComponents.put(key, itemComponentsItem);
    return this;
  }

  /**
   * The set of item detail components, one set of item components per Vendor. These are keyed by the Vendor Hash, so you will get one Item Component Set per vendor returned.  The components contained inside are themselves keyed by the vendorSaleIndex, and will have whatever item-level components you requested (Sockets, Stats, Instance data etc...) per item being sold by the vendor.
   * @return itemComponents
   */
  @javax.annotation.Nullable
  public Map<String, DestinyItemComponentSetOfint32> getItemComponents() {
    return itemComponents;
  }

  public void setItemComponents(Map<String, DestinyItemComponentSetOfint32> itemComponents) {
    this.itemComponents = itemComponents;
  }


  public DestinyResponsesDestinyVendorsResponse sales(DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent sales) {
    this.sales = sales;
    return this;
  }

  /**
   * Sales, keyed by the vendorItemIndex of the item being sold. These are keyed by the Vendor Hash, so you will get one Sale Item Set Component per vendor returned.  Note that within the Sale Item Set component, the sales are themselves keyed by the vendorSaleIndex, so you can relate it to the corrent sale item definition within the Vendor&#39;s definition.  COMPONENT TYPE: VendorSales
   * @return sales
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent getSales() {
    return sales;
  }

  public void setSales(DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent sales) {
    this.sales = sales;
  }


  public DestinyResponsesDestinyVendorsResponse stringVariables(SingleComponentResponseOfDestinyStringVariablesComponent stringVariables) {
    this.stringVariables = stringVariables;
    return this;
  }

  /**
   * A map of string variable values by hash for this character context.  COMPONENT TYPE: StringVariables
   * @return stringVariables
   */
  @javax.annotation.Nullable
  public SingleComponentResponseOfDestinyStringVariablesComponent getStringVariables() {
    return stringVariables;
  }

  public void setStringVariables(SingleComponentResponseOfDestinyStringVariablesComponent stringVariables) {
    this.stringVariables = stringVariables;
  }


  public DestinyResponsesDestinyVendorsResponse vendorGroups(SingleComponentResponseOfDestinyVendorGroupComponent vendorGroups) {
    this.vendorGroups = vendorGroups;
    return this;
  }

  /**
   * For Vendors being returned, this will give you the information you need to group them and order them in the same way that the Bungie Companion app performs grouping. It will automatically be returned if you request the Vendors component.  COMPONENT TYPE: Vendors
   * @return vendorGroups
   */
  @javax.annotation.Nullable
  public SingleComponentResponseOfDestinyVendorGroupComponent getVendorGroups() {
    return vendorGroups;
  }

  public void setVendorGroups(SingleComponentResponseOfDestinyVendorGroupComponent vendorGroups) {
    this.vendorGroups = vendorGroups;
  }


  public DestinyResponsesDestinyVendorsResponse vendors(DictionaryComponentResponseOfuint32AndDestinyVendorComponent vendors) {
    this.vendors = vendors;
    return this;
  }

  /**
   * The base properties of the vendor. These are keyed by the Vendor Hash, so you will get one Vendor Component per vendor returned.  COMPONENT TYPE: Vendors
   * @return vendors
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyVendorComponent getVendors() {
    return vendors;
  }

  public void setVendors(DictionaryComponentResponseOfuint32AndDestinyVendorComponent vendors) {
    this.vendors = vendors;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyResponsesDestinyVendorsResponse destinyResponsesDestinyVendorsResponse = (DestinyResponsesDestinyVendorsResponse) o;
    return Objects.equals(this.categories, destinyResponsesDestinyVendorsResponse.categories) &&
        Objects.equals(this.currencyLookups, destinyResponsesDestinyVendorsResponse.currencyLookups) &&
        Objects.equals(this.itemComponents, destinyResponsesDestinyVendorsResponse.itemComponents) &&
        Objects.equals(this.sales, destinyResponsesDestinyVendorsResponse.sales) &&
        Objects.equals(this.stringVariables, destinyResponsesDestinyVendorsResponse.stringVariables) &&
        Objects.equals(this.vendorGroups, destinyResponsesDestinyVendorsResponse.vendorGroups) &&
        Objects.equals(this.vendors, destinyResponsesDestinyVendorsResponse.vendors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categories, currencyLookups, itemComponents, sales, stringVariables, vendorGroups, vendors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyResponsesDestinyVendorsResponse {\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    currencyLookups: ").append(toIndentedString(currencyLookups)).append("\n");
    sb.append("    itemComponents: ").append(toIndentedString(itemComponents)).append("\n");
    sb.append("    sales: ").append(toIndentedString(sales)).append("\n");
    sb.append("    stringVariables: ").append(toIndentedString(stringVariables)).append("\n");
    sb.append("    vendorGroups: ").append(toIndentedString(vendorGroups)).append("\n");
    sb.append("    vendors: ").append(toIndentedString(vendors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categories");
    openapiFields.add("currencyLookups");
    openapiFields.add("itemComponents");
    openapiFields.add("sales");
    openapiFields.add("stringVariables");
    openapiFields.add("vendorGroups");
    openapiFields.add("vendors");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyResponsesDestinyVendorsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyResponsesDestinyVendorsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyResponsesDestinyVendorsResponse is not found in the empty JSON string", DestinyResponsesDestinyVendorsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyResponsesDestinyVendorsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyResponsesDestinyVendorsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `categories`
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent.validateJsonElement(jsonObj.get("categories"));
      }
      // validate the optional field `currencyLookups`
      if (jsonObj.get("currencyLookups") != null && !jsonObj.get("currencyLookups").isJsonNull()) {
        SingleComponentResponseOfDestinyCurrenciesComponent.validateJsonElement(jsonObj.get("currencyLookups"));
      }
      // validate the optional field `sales`
      if (jsonObj.get("sales") != null && !jsonObj.get("sales").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent.validateJsonElement(jsonObj.get("sales"));
      }
      // validate the optional field `stringVariables`
      if (jsonObj.get("stringVariables") != null && !jsonObj.get("stringVariables").isJsonNull()) {
        SingleComponentResponseOfDestinyStringVariablesComponent.validateJsonElement(jsonObj.get("stringVariables"));
      }
      // validate the optional field `vendorGroups`
      if (jsonObj.get("vendorGroups") != null && !jsonObj.get("vendorGroups").isJsonNull()) {
        SingleComponentResponseOfDestinyVendorGroupComponent.validateJsonElement(jsonObj.get("vendorGroups"));
      }
      // validate the optional field `vendors`
      if (jsonObj.get("vendors") != null && !jsonObj.get("vendors").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyVendorComponent.validateJsonElement(jsonObj.get("vendors"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyResponsesDestinyVendorsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyResponsesDestinyVendorsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyResponsesDestinyVendorsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyResponsesDestinyVendorsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyResponsesDestinyVendorsResponse>() {
           @Override
           public void write(JsonWriter out, DestinyResponsesDestinyVendorsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyResponsesDestinyVendorsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyResponsesDestinyVendorsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyResponsesDestinyVendorsResponse
   * @throws IOException if the JSON string is invalid with respect to DestinyResponsesDestinyVendorsResponse
   */
  public static DestinyResponsesDestinyVendorsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyResponsesDestinyVendorsResponse.class);
  }

  /**
   * Convert an instance of DestinyResponsesDestinyVendorsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

