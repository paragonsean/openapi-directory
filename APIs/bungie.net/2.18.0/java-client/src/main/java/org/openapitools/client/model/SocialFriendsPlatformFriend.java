/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SocialFriendsPlatformFriend
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SocialFriendsPlatformFriend {
  public static final String SERIALIZED_NAME_BUNGIE_GLOBAL_DISPLAY_NAME = "bungieGlobalDisplayName";
  @SerializedName(SERIALIZED_NAME_BUNGIE_GLOBAL_DISPLAY_NAME)
  private String bungieGlobalDisplayName;

  public static final String SERIALIZED_NAME_BUNGIE_GLOBAL_DISPLAY_NAME_CODE = "bungieGlobalDisplayNameCode";
  @SerializedName(SERIALIZED_NAME_BUNGIE_GLOBAL_DISPLAY_NAME_CODE)
  private Integer bungieGlobalDisplayNameCode;

  public static final String SERIALIZED_NAME_BUNGIE_NET_MEMBERSHIP_ID = "bungieNetMembershipId";
  @SerializedName(SERIALIZED_NAME_BUNGIE_NET_MEMBERSHIP_ID)
  private Long bungieNetMembershipId;

  public static final String SERIALIZED_NAME_DESTINY_MEMBERSHIP_ID = "destinyMembershipId";
  @SerializedName(SERIALIZED_NAME_DESTINY_MEMBERSHIP_ID)
  private Long destinyMembershipId;

  /**
   * Gets or Sets destinyMembershipType
   */
  @JsonAdapter(DestinyMembershipTypeEnum.Adapter.class)
  public enum DestinyMembershipTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_10(10),
    
    NUMBER_254(254),
    
    NUMBER_MINUS_1(-1);

    private Integer value;

    DestinyMembershipTypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DestinyMembershipTypeEnum fromValue(Integer value) {
      for (DestinyMembershipTypeEnum b : DestinyMembershipTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DestinyMembershipTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DestinyMembershipTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DestinyMembershipTypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return DestinyMembershipTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      DestinyMembershipTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DESTINY_MEMBERSHIP_TYPE = "destinyMembershipType";
  @SerializedName(SERIALIZED_NAME_DESTINY_MEMBERSHIP_TYPE)
  private DestinyMembershipTypeEnum destinyMembershipType;

  public static final String SERIALIZED_NAME_FRIEND_PLATFORM = "friendPlatform";
  @SerializedName(SERIALIZED_NAME_FRIEND_PLATFORM)
  private Integer friendPlatform;

  public static final String SERIALIZED_NAME_PLATFORM_DISPLAY_NAME = "platformDisplayName";
  @SerializedName(SERIALIZED_NAME_PLATFORM_DISPLAY_NAME)
  private String platformDisplayName;

  public SocialFriendsPlatformFriend() {
  }

  public SocialFriendsPlatformFriend bungieGlobalDisplayName(String bungieGlobalDisplayName) {
    this.bungieGlobalDisplayName = bungieGlobalDisplayName;
    return this;
  }

  /**
   * Get bungieGlobalDisplayName
   * @return bungieGlobalDisplayName
   */
  @javax.annotation.Nullable
  public String getBungieGlobalDisplayName() {
    return bungieGlobalDisplayName;
  }

  public void setBungieGlobalDisplayName(String bungieGlobalDisplayName) {
    this.bungieGlobalDisplayName = bungieGlobalDisplayName;
  }


  public SocialFriendsPlatformFriend bungieGlobalDisplayNameCode(Integer bungieGlobalDisplayNameCode) {
    this.bungieGlobalDisplayNameCode = bungieGlobalDisplayNameCode;
    return this;
  }

  /**
   * Get bungieGlobalDisplayNameCode
   * @return bungieGlobalDisplayNameCode
   */
  @javax.annotation.Nullable
  public Integer getBungieGlobalDisplayNameCode() {
    return bungieGlobalDisplayNameCode;
  }

  public void setBungieGlobalDisplayNameCode(Integer bungieGlobalDisplayNameCode) {
    this.bungieGlobalDisplayNameCode = bungieGlobalDisplayNameCode;
  }


  public SocialFriendsPlatformFriend bungieNetMembershipId(Long bungieNetMembershipId) {
    this.bungieNetMembershipId = bungieNetMembershipId;
    return this;
  }

  /**
   * Get bungieNetMembershipId
   * @return bungieNetMembershipId
   */
  @javax.annotation.Nullable
  public Long getBungieNetMembershipId() {
    return bungieNetMembershipId;
  }

  public void setBungieNetMembershipId(Long bungieNetMembershipId) {
    this.bungieNetMembershipId = bungieNetMembershipId;
  }


  public SocialFriendsPlatformFriend destinyMembershipId(Long destinyMembershipId) {
    this.destinyMembershipId = destinyMembershipId;
    return this;
  }

  /**
   * Get destinyMembershipId
   * @return destinyMembershipId
   */
  @javax.annotation.Nullable
  public Long getDestinyMembershipId() {
    return destinyMembershipId;
  }

  public void setDestinyMembershipId(Long destinyMembershipId) {
    this.destinyMembershipId = destinyMembershipId;
  }


  public SocialFriendsPlatformFriend destinyMembershipType(DestinyMembershipTypeEnum destinyMembershipType) {
    this.destinyMembershipType = destinyMembershipType;
    return this;
  }

  /**
   * Get destinyMembershipType
   * @return destinyMembershipType
   */
  @javax.annotation.Nullable
  public DestinyMembershipTypeEnum getDestinyMembershipType() {
    return destinyMembershipType;
  }

  public void setDestinyMembershipType(DestinyMembershipTypeEnum destinyMembershipType) {
    this.destinyMembershipType = destinyMembershipType;
  }


  public SocialFriendsPlatformFriend friendPlatform(Integer friendPlatform) {
    this.friendPlatform = friendPlatform;
    return this;
  }

  /**
   * Get friendPlatform
   * @return friendPlatform
   */
  @javax.annotation.Nullable
  public Integer getFriendPlatform() {
    return friendPlatform;
  }

  public void setFriendPlatform(Integer friendPlatform) {
    this.friendPlatform = friendPlatform;
  }


  public SocialFriendsPlatformFriend platformDisplayName(String platformDisplayName) {
    this.platformDisplayName = platformDisplayName;
    return this;
  }

  /**
   * Get platformDisplayName
   * @return platformDisplayName
   */
  @javax.annotation.Nullable
  public String getPlatformDisplayName() {
    return platformDisplayName;
  }

  public void setPlatformDisplayName(String platformDisplayName) {
    this.platformDisplayName = platformDisplayName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SocialFriendsPlatformFriend socialFriendsPlatformFriend = (SocialFriendsPlatformFriend) o;
    return Objects.equals(this.bungieGlobalDisplayName, socialFriendsPlatformFriend.bungieGlobalDisplayName) &&
        Objects.equals(this.bungieGlobalDisplayNameCode, socialFriendsPlatformFriend.bungieGlobalDisplayNameCode) &&
        Objects.equals(this.bungieNetMembershipId, socialFriendsPlatformFriend.bungieNetMembershipId) &&
        Objects.equals(this.destinyMembershipId, socialFriendsPlatformFriend.destinyMembershipId) &&
        Objects.equals(this.destinyMembershipType, socialFriendsPlatformFriend.destinyMembershipType) &&
        Objects.equals(this.friendPlatform, socialFriendsPlatformFriend.friendPlatform) &&
        Objects.equals(this.platformDisplayName, socialFriendsPlatformFriend.platformDisplayName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bungieGlobalDisplayName, bungieGlobalDisplayNameCode, bungieNetMembershipId, destinyMembershipId, destinyMembershipType, friendPlatform, platformDisplayName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SocialFriendsPlatformFriend {\n");
    sb.append("    bungieGlobalDisplayName: ").append(toIndentedString(bungieGlobalDisplayName)).append("\n");
    sb.append("    bungieGlobalDisplayNameCode: ").append(toIndentedString(bungieGlobalDisplayNameCode)).append("\n");
    sb.append("    bungieNetMembershipId: ").append(toIndentedString(bungieNetMembershipId)).append("\n");
    sb.append("    destinyMembershipId: ").append(toIndentedString(destinyMembershipId)).append("\n");
    sb.append("    destinyMembershipType: ").append(toIndentedString(destinyMembershipType)).append("\n");
    sb.append("    friendPlatform: ").append(toIndentedString(friendPlatform)).append("\n");
    sb.append("    platformDisplayName: ").append(toIndentedString(platformDisplayName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bungieGlobalDisplayName");
    openapiFields.add("bungieGlobalDisplayNameCode");
    openapiFields.add("bungieNetMembershipId");
    openapiFields.add("destinyMembershipId");
    openapiFields.add("destinyMembershipType");
    openapiFields.add("friendPlatform");
    openapiFields.add("platformDisplayName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SocialFriendsPlatformFriend
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SocialFriendsPlatformFriend.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SocialFriendsPlatformFriend is not found in the empty JSON string", SocialFriendsPlatformFriend.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SocialFriendsPlatformFriend.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SocialFriendsPlatformFriend` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bungieGlobalDisplayName") != null && !jsonObj.get("bungieGlobalDisplayName").isJsonNull()) && !jsonObj.get("bungieGlobalDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bungieGlobalDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bungieGlobalDisplayName").toString()));
      }
      // validate the optional field `destinyMembershipType`
      if (jsonObj.get("destinyMembershipType") != null && !jsonObj.get("destinyMembershipType").isJsonNull()) {
        DestinyMembershipTypeEnum.validateJsonElement(jsonObj.get("destinyMembershipType"));
      }
      if ((jsonObj.get("platformDisplayName") != null && !jsonObj.get("platformDisplayName").isJsonNull()) && !jsonObj.get("platformDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platformDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platformDisplayName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SocialFriendsPlatformFriend.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SocialFriendsPlatformFriend' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SocialFriendsPlatformFriend> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SocialFriendsPlatformFriend.class));

       return (TypeAdapter<T>) new TypeAdapter<SocialFriendsPlatformFriend>() {
           @Override
           public void write(JsonWriter out, SocialFriendsPlatformFriend value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SocialFriendsPlatformFriend read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SocialFriendsPlatformFriend given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SocialFriendsPlatformFriend
   * @throws IOException if the JSON string is invalid with respect to SocialFriendsPlatformFriend
   */
  public static SocialFriendsPlatformFriend fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SocialFriendsPlatformFriend.class);
  }

  /**
   * Convert an instance of SocialFriendsPlatformFriend to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

