/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The properties of an individual checklist item. Note that almost everything is optional: it is *highly* variable what kind of data we&#39;ll actually be able to return: at times we may have no other relationships to entities at all.  Whatever UI you build, do it with the knowledge that any given entry might not actually be able to be associated with some other Destiny entity.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition {
  public static final String SERIALIZED_NAME_ACTIVITY_HASH = "activityHash";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_HASH)
  private Integer activityHash;

  public static final String SERIALIZED_NAME_BUBBLE_HASH = "bubbleHash";
  @SerializedName(SERIALIZED_NAME_BUBBLE_HASH)
  private Integer bubbleHash;

  public static final String SERIALIZED_NAME_DESTINATION_HASH = "destinationHash";
  @SerializedName(SERIALIZED_NAME_DESTINATION_HASH)
  private Integer destinationHash;

  public static final String SERIALIZED_NAME_DISPLAY_PROPERTIES = "displayProperties";
  @SerializedName(SERIALIZED_NAME_DISPLAY_PROPERTIES)
  private DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties;

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private Integer hash;

  public static final String SERIALIZED_NAME_ITEM_HASH = "itemHash";
  @SerializedName(SERIALIZED_NAME_ITEM_HASH)
  private Integer itemHash;

  public static final String SERIALIZED_NAME_LOCATION_HASH = "locationHash";
  @SerializedName(SERIALIZED_NAME_LOCATION_HASH)
  private Integer locationHash;

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private Integer scope;

  public static final String SERIALIZED_NAME_VENDOR_HASH = "vendorHash";
  @SerializedName(SERIALIZED_NAME_VENDOR_HASH)
  private Integer vendorHash;

  public static final String SERIALIZED_NAME_VENDOR_INTERACTION_INDEX = "vendorInteractionIndex";
  @SerializedName(SERIALIZED_NAME_VENDOR_INTERACTION_INDEX)
  private Integer vendorInteractionIndex;

  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition() {
  }

  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition activityHash(Integer activityHash) {
    this.activityHash = activityHash;
    return this;
  }

  /**
   * Get activityHash
   * @return activityHash
   */
  @javax.annotation.Nullable
  public Integer getActivityHash() {
    return activityHash;
  }

  public void setActivityHash(Integer activityHash) {
    this.activityHash = activityHash;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition bubbleHash(Integer bubbleHash) {
    this.bubbleHash = bubbleHash;
    return this;
  }

  /**
   * Note that a Bubble&#39;s hash doesn&#39;t uniquely identify a \&quot;top level\&quot; entity in Destiny. Only the combination of location and bubble can uniquely identify a place in the world of Destiny: so if bubbleHash is populated, locationHash must too be populated for it to have any meaning.  You can use this property if it is populated to look up the DestinyLocationDefinition&#39;s associated .locationReleases[].activityBubbleName property.
   * @return bubbleHash
   */
  @javax.annotation.Nullable
  public Integer getBubbleHash() {
    return bubbleHash;
  }

  public void setBubbleHash(Integer bubbleHash) {
    this.bubbleHash = bubbleHash;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition destinationHash(Integer destinationHash) {
    this.destinationHash = destinationHash;
    return this;
  }

  /**
   * Get destinationHash
   * @return destinationHash
   */
  @javax.annotation.Nullable
  public Integer getDestinationHash() {
    return destinationHash;
  }

  public void setDestinationHash(Integer destinationHash) {
    this.destinationHash = destinationHash;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition displayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

  /**
   * Even if no other associations exist, we will give you *something* for display properties. In cases where we have no associated entities, it may be as simple as a numerical identifier.
   * @return displayProperties
   */
  @javax.annotation.Nullable
  public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition hash(Integer hash) {
    this.hash = hash;
    return this;
  }

  /**
   * The identifier for this Checklist entry. Guaranteed unique only within this Checklist Definition, and not globally/for all checklists.
   * @return hash
   */
  @javax.annotation.Nullable
  public Integer getHash() {
    return hash;
  }

  public void setHash(Integer hash) {
    this.hash = hash;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition itemHash(Integer itemHash) {
    this.itemHash = itemHash;
    return this;
  }

  /**
   * Get itemHash
   * @return itemHash
   */
  @javax.annotation.Nullable
  public Integer getItemHash() {
    return itemHash;
  }

  public void setItemHash(Integer itemHash) {
    this.itemHash = itemHash;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition locationHash(Integer locationHash) {
    this.locationHash = locationHash;
    return this;
  }

  /**
   * Get locationHash
   * @return locationHash
   */
  @javax.annotation.Nullable
  public Integer getLocationHash() {
    return locationHash;
  }

  public void setLocationHash(Integer locationHash) {
    this.locationHash = locationHash;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition scope(Integer scope) {
    this.scope = scope;
    return this;
  }

  /**
   * The scope at which this specific entry can be computed.
   * @return scope
   */
  @javax.annotation.Nullable
  public Integer getScope() {
    return scope;
  }

  public void setScope(Integer scope) {
    this.scope = scope;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition vendorHash(Integer vendorHash) {
    this.vendorHash = vendorHash;
    return this;
  }

  /**
   * Get vendorHash
   * @return vendorHash
   */
  @javax.annotation.Nullable
  public Integer getVendorHash() {
    return vendorHash;
  }

  public void setVendorHash(Integer vendorHash) {
    this.vendorHash = vendorHash;
  }


  public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition vendorInteractionIndex(Integer vendorInteractionIndex) {
    this.vendorInteractionIndex = vendorInteractionIndex;
    return this;
  }

  /**
   * Get vendorInteractionIndex
   * @return vendorInteractionIndex
   */
  @javax.annotation.Nullable
  public Integer getVendorInteractionIndex() {
    return vendorInteractionIndex;
  }

  public void setVendorInteractionIndex(Integer vendorInteractionIndex) {
    this.vendorInteractionIndex = vendorInteractionIndex;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition destinyDefinitionsChecklistsDestinyChecklistEntryDefinition = (DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition) o;
    return Objects.equals(this.activityHash, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.activityHash) &&
        Objects.equals(this.bubbleHash, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.bubbleHash) &&
        Objects.equals(this.destinationHash, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.destinationHash) &&
        Objects.equals(this.displayProperties, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.displayProperties) &&
        Objects.equals(this.hash, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.hash) &&
        Objects.equals(this.itemHash, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.itemHash) &&
        Objects.equals(this.locationHash, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.locationHash) &&
        Objects.equals(this.scope, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.scope) &&
        Objects.equals(this.vendorHash, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.vendorHash) &&
        Objects.equals(this.vendorInteractionIndex, destinyDefinitionsChecklistsDestinyChecklistEntryDefinition.vendorInteractionIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityHash, bubbleHash, destinationHash, displayProperties, hash, itemHash, locationHash, scope, vendorHash, vendorInteractionIndex);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition {\n");
    sb.append("    activityHash: ").append(toIndentedString(activityHash)).append("\n");
    sb.append("    bubbleHash: ").append(toIndentedString(bubbleHash)).append("\n");
    sb.append("    destinationHash: ").append(toIndentedString(destinationHash)).append("\n");
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    itemHash: ").append(toIndentedString(itemHash)).append("\n");
    sb.append("    locationHash: ").append(toIndentedString(locationHash)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    vendorHash: ").append(toIndentedString(vendorHash)).append("\n");
    sb.append("    vendorInteractionIndex: ").append(toIndentedString(vendorInteractionIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activityHash");
    openapiFields.add("bubbleHash");
    openapiFields.add("destinationHash");
    openapiFields.add("displayProperties");
    openapiFields.add("hash");
    openapiFields.add("itemHash");
    openapiFields.add("locationHash");
    openapiFields.add("scope");
    openapiFields.add("vendorHash");
    openapiFields.add("vendorInteractionIndex");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition is not found in the empty JSON string", DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `displayProperties`
      if (jsonObj.get("displayProperties") != null && !jsonObj.get("displayProperties").isJsonNull()) {
        DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJsonElement(jsonObj.get("displayProperties"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition
   */
  public static DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsChecklistsDestinyChecklistEntryDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

