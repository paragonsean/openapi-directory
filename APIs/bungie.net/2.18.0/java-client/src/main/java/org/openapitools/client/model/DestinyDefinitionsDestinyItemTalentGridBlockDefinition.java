/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This defines information that can only come from a talent grid on an item. Items mostly have negligible talent grid data these days, but instanced items still retain grids as a source for some of this common information.  Builds/Subclasses are the only items left that still have talent grids with meaningful Nodes.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsDestinyItemTalentGridBlockDefinition {
  public static final String SERIALIZED_NAME_BUILD_NAME = "buildName";
  @SerializedName(SERIALIZED_NAME_BUILD_NAME)
  private String buildName;

  public static final String SERIALIZED_NAME_HUD_DAMAGE_TYPE = "hudDamageType";
  @SerializedName(SERIALIZED_NAME_HUD_DAMAGE_TYPE)
  private Integer hudDamageType;

  public static final String SERIALIZED_NAME_HUD_ICON = "hudIcon";
  @SerializedName(SERIALIZED_NAME_HUD_ICON)
  private String hudIcon;

  public static final String SERIALIZED_NAME_ITEM_DETAIL_STRING = "itemDetailString";
  @SerializedName(SERIALIZED_NAME_ITEM_DETAIL_STRING)
  private String itemDetailString;

  public static final String SERIALIZED_NAME_TALENT_GRID_HASH = "talentGridHash";
  @SerializedName(SERIALIZED_NAME_TALENT_GRID_HASH)
  private Integer talentGridHash;

  public DestinyDefinitionsDestinyItemTalentGridBlockDefinition() {
  }

  public DestinyDefinitionsDestinyItemTalentGridBlockDefinition buildName(String buildName) {
    this.buildName = buildName;
    return this;
  }

  /**
   * A shortcut string identifier for the \&quot;build\&quot; in question, if this talent grid has an associated build. Doesn&#39;t map to anything we can expose at the moment.
   * @return buildName
   */
  @javax.annotation.Nullable
  public String getBuildName() {
    return buildName;
  }

  public void setBuildName(String buildName) {
    this.buildName = buildName;
  }


  public DestinyDefinitionsDestinyItemTalentGridBlockDefinition hudDamageType(Integer hudDamageType) {
    this.hudDamageType = hudDamageType;
    return this;
  }

  /**
   * If the talent grid implies a damage type, this is the enum value for that damage type.
   * @return hudDamageType
   */
  @javax.annotation.Nullable
  public Integer getHudDamageType() {
    return hudDamageType;
  }

  public void setHudDamageType(Integer hudDamageType) {
    this.hudDamageType = hudDamageType;
  }


  public DestinyDefinitionsDestinyItemTalentGridBlockDefinition hudIcon(String hudIcon) {
    this.hudIcon = hudIcon;
    return this;
  }

  /**
   * If the talent grid has a special icon that&#39;s shown in the game UI (like builds, funny that), this is the identifier for that icon. Sadly, we don&#39;t actually get that icon right now. I&#39;ll be looking to replace this with a path to the actual icon itself.
   * @return hudIcon
   */
  @javax.annotation.Nullable
  public String getHudIcon() {
    return hudIcon;
  }

  public void setHudIcon(String hudIcon) {
    this.hudIcon = hudIcon;
  }


  public DestinyDefinitionsDestinyItemTalentGridBlockDefinition itemDetailString(String itemDetailString) {
    this.itemDetailString = itemDetailString;
    return this;
  }

  /**
   * This is meant to be a subtitle for looking at the talent grid. In practice, somewhat frustratingly, this always merely says the localized word for \&quot;Details\&quot;. Great. Maybe it&#39;ll have more if talent grids ever get used for more than builds and subclasses again.
   * @return itemDetailString
   */
  @javax.annotation.Nullable
  public String getItemDetailString() {
    return itemDetailString;
  }

  public void setItemDetailString(String itemDetailString) {
    this.itemDetailString = itemDetailString;
  }


  public DestinyDefinitionsDestinyItemTalentGridBlockDefinition talentGridHash(Integer talentGridHash) {
    this.talentGridHash = talentGridHash;
    return this;
  }

  /**
   * The hash identifier of the DestinyTalentGridDefinition attached to this item.
   * @return talentGridHash
   */
  @javax.annotation.Nullable
  public Integer getTalentGridHash() {
    return talentGridHash;
  }

  public void setTalentGridHash(Integer talentGridHash) {
    this.talentGridHash = talentGridHash;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyItemTalentGridBlockDefinition destinyDefinitionsDestinyItemTalentGridBlockDefinition = (DestinyDefinitionsDestinyItemTalentGridBlockDefinition) o;
    return Objects.equals(this.buildName, destinyDefinitionsDestinyItemTalentGridBlockDefinition.buildName) &&
        Objects.equals(this.hudDamageType, destinyDefinitionsDestinyItemTalentGridBlockDefinition.hudDamageType) &&
        Objects.equals(this.hudIcon, destinyDefinitionsDestinyItemTalentGridBlockDefinition.hudIcon) &&
        Objects.equals(this.itemDetailString, destinyDefinitionsDestinyItemTalentGridBlockDefinition.itemDetailString) &&
        Objects.equals(this.talentGridHash, destinyDefinitionsDestinyItemTalentGridBlockDefinition.talentGridHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buildName, hudDamageType, hudIcon, itemDetailString, talentGridHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyItemTalentGridBlockDefinition {\n");
    sb.append("    buildName: ").append(toIndentedString(buildName)).append("\n");
    sb.append("    hudDamageType: ").append(toIndentedString(hudDamageType)).append("\n");
    sb.append("    hudIcon: ").append(toIndentedString(hudIcon)).append("\n");
    sb.append("    itemDetailString: ").append(toIndentedString(itemDetailString)).append("\n");
    sb.append("    talentGridHash: ").append(toIndentedString(talentGridHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buildName");
    openapiFields.add("hudDamageType");
    openapiFields.add("hudIcon");
    openapiFields.add("itemDetailString");
    openapiFields.add("talentGridHash");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsDestinyItemTalentGridBlockDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsDestinyItemTalentGridBlockDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsDestinyItemTalentGridBlockDefinition is not found in the empty JSON string", DestinyDefinitionsDestinyItemTalentGridBlockDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsDestinyItemTalentGridBlockDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsDestinyItemTalentGridBlockDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("buildName") != null && !jsonObj.get("buildName").isJsonNull()) && !jsonObj.get("buildName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buildName").toString()));
      }
      if ((jsonObj.get("hudIcon") != null && !jsonObj.get("hudIcon").isJsonNull()) && !jsonObj.get("hudIcon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hudIcon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hudIcon").toString()));
      }
      if ((jsonObj.get("itemDetailString") != null && !jsonObj.get("itemDetailString").isJsonNull()) && !jsonObj.get("itemDetailString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemDetailString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemDetailString").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsDestinyItemTalentGridBlockDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsDestinyItemTalentGridBlockDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsDestinyItemTalentGridBlockDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsDestinyItemTalentGridBlockDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsDestinyItemTalentGridBlockDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsDestinyItemTalentGridBlockDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsDestinyItemTalentGridBlockDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsDestinyItemTalentGridBlockDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsDestinyItemTalentGridBlockDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsDestinyItemTalentGridBlockDefinition
   */
  public static DestinyDefinitionsDestinyItemTalentGridBlockDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsDestinyItemTalentGridBlockDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsDestinyItemTalentGridBlockDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

