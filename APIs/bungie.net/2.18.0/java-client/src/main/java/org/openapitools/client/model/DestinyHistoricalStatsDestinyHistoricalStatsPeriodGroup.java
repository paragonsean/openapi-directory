/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.DestinyHistoricalStatsDestinyHistoricalStatsActivity;
import org.openapitools.client.model.DestinyHistoricalStatsDestinyHistoricalStatsValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup {
  public static final String SERIALIZED_NAME_ACTIVITY_DETAILS = "activityDetails";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_DETAILS)
  private DestinyHistoricalStatsDestinyHistoricalStatsActivity activityDetails;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private OffsetDateTime period;

  public static final String SERIALIZED_NAME_VALUES = "values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private Map<String, DestinyHistoricalStatsDestinyHistoricalStatsValue> values = new HashMap<>();

  public DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup() {
  }

  public DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup activityDetails(DestinyHistoricalStatsDestinyHistoricalStatsActivity activityDetails) {
    this.activityDetails = activityDetails;
    return this;
  }

  /**
   * If the period group is for a specific activity, this property will be set.
   * @return activityDetails
   */
  @javax.annotation.Nullable
  public DestinyHistoricalStatsDestinyHistoricalStatsActivity getActivityDetails() {
    return activityDetails;
  }

  public void setActivityDetails(DestinyHistoricalStatsDestinyHistoricalStatsActivity activityDetails) {
    this.activityDetails = activityDetails;
  }


  public DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup period(OffsetDateTime period) {
    this.period = period;
    return this;
  }

  /**
   * Period for the group. If the stat periodType is day, then this will have a specific day. If the type is monthly, then this value will be the first day of the applicable month. This value is not set when the periodType is &#39;all time&#39;.
   * @return period
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPeriod() {
    return period;
  }

  public void setPeriod(OffsetDateTime period) {
    this.period = period;
  }


  public DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup values(Map<String, DestinyHistoricalStatsDestinyHistoricalStatsValue> values) {
    this.values = values;
    return this;
  }

  public DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup putValuesItem(String key, DestinyHistoricalStatsDestinyHistoricalStatsValue valuesItem) {
    if (this.values == null) {
      this.values = new HashMap<>();
    }
    this.values.put(key, valuesItem);
    return this;
  }

  /**
   * Collection of stats for the period.
   * @return values
   */
  @javax.annotation.Nullable
  public Map<String, DestinyHistoricalStatsDestinyHistoricalStatsValue> getValues() {
    return values;
  }

  public void setValues(Map<String, DestinyHistoricalStatsDestinyHistoricalStatsValue> values) {
    this.values = values;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup destinyHistoricalStatsDestinyHistoricalStatsPeriodGroup = (DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup) o;
    return Objects.equals(this.activityDetails, destinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.activityDetails) &&
        Objects.equals(this.period, destinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.period) &&
        Objects.equals(this.values, destinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityDetails, period, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup {\n");
    sb.append("    activityDetails: ").append(toIndentedString(activityDetails)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activityDetails");
    openapiFields.add("period");
    openapiFields.add("values");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup is not found in the empty JSON string", DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `activityDetails`
      if (jsonObj.get("activityDetails") != null && !jsonObj.get("activityDetails").isJsonNull()) {
        DestinyHistoricalStatsDestinyHistoricalStatsActivity.validateJsonElement(jsonObj.get("activityDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup>() {
           @Override
           public void write(JsonWriter out, DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup
   * @throws IOException if the JSON string is invalid with respect to DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup
   */
  public static DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup.class);
  }

  /**
   * Convert an instance of DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

