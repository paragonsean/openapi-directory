/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyComponentsProfilesDestinyProfileTransitoryCurrentActivity;
import org.openapitools.client.model.DestinyComponentsProfilesDestinyProfileTransitoryJoinability;
import org.openapitools.client.model.DestinyComponentsProfilesDestinyProfileTransitoryPartyMember;
import org.openapitools.client.model.DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This is an experimental set of data that Bungie considers to be \&quot;transitory\&quot; - information that may be useful for API users, but that is coming from a non-authoritative data source about information that could potentially change at a more frequent pace than Bungie.net will receive updates about it.  This information is provided exclusively for convenience should any of it be useful to users: we provide no guarantees to the accuracy or timeliness of data that comes from this source. Know that this data can potentially be out-of-date or even wrong entirely if the user disconnected from the game or suddenly changed their status before we can receive refreshed data.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyComponentsProfilesDestinyProfileTransitoryComponent {
  public static final String SERIALIZED_NAME_CURRENT_ACTIVITY = "currentActivity";
  @SerializedName(SERIALIZED_NAME_CURRENT_ACTIVITY)
  private DestinyComponentsProfilesDestinyProfileTransitoryCurrentActivity currentActivity;

  public static final String SERIALIZED_NAME_JOINABILITY = "joinability";
  @SerializedName(SERIALIZED_NAME_JOINABILITY)
  private DestinyComponentsProfilesDestinyProfileTransitoryJoinability joinability;

  public static final String SERIALIZED_NAME_LAST_ORBITED_DESTINATION_HASH = "lastOrbitedDestinationHash";
  @SerializedName(SERIALIZED_NAME_LAST_ORBITED_DESTINATION_HASH)
  private Integer lastOrbitedDestinationHash;

  public static final String SERIALIZED_NAME_PARTY_MEMBERS = "partyMembers";
  @SerializedName(SERIALIZED_NAME_PARTY_MEMBERS)
  private List<DestinyComponentsProfilesDestinyProfileTransitoryPartyMember> partyMembers = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRACKING = "tracking";
  @SerializedName(SERIALIZED_NAME_TRACKING)
  private List<DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry> tracking = new ArrayList<>();

  public DestinyComponentsProfilesDestinyProfileTransitoryComponent() {
  }

  public DestinyComponentsProfilesDestinyProfileTransitoryComponent currentActivity(DestinyComponentsProfilesDestinyProfileTransitoryCurrentActivity currentActivity) {
    this.currentActivity = currentActivity;
    return this;
  }

  /**
   * If you are in an activity, this is some transitory info about the activity currently being played.
   * @return currentActivity
   */
  @javax.annotation.Nullable
  public DestinyComponentsProfilesDestinyProfileTransitoryCurrentActivity getCurrentActivity() {
    return currentActivity;
  }

  public void setCurrentActivity(DestinyComponentsProfilesDestinyProfileTransitoryCurrentActivity currentActivity) {
    this.currentActivity = currentActivity;
  }


  public DestinyComponentsProfilesDestinyProfileTransitoryComponent joinability(DestinyComponentsProfilesDestinyProfileTransitoryJoinability joinability) {
    this.joinability = joinability;
    return this;
  }

  /**
   * Information about whether and what might prevent you from joining this person on a fireteam.
   * @return joinability
   */
  @javax.annotation.Nullable
  public DestinyComponentsProfilesDestinyProfileTransitoryJoinability getJoinability() {
    return joinability;
  }

  public void setJoinability(DestinyComponentsProfilesDestinyProfileTransitoryJoinability joinability) {
    this.joinability = joinability;
  }


  public DestinyComponentsProfilesDestinyProfileTransitoryComponent lastOrbitedDestinationHash(Integer lastOrbitedDestinationHash) {
    this.lastOrbitedDestinationHash = lastOrbitedDestinationHash;
    return this;
  }

  /**
   * The hash identifier for the DestinyDestinationDefinition of the last location you were orbiting when in orbit.
   * @return lastOrbitedDestinationHash
   */
  @javax.annotation.Nullable
  public Integer getLastOrbitedDestinationHash() {
    return lastOrbitedDestinationHash;
  }

  public void setLastOrbitedDestinationHash(Integer lastOrbitedDestinationHash) {
    this.lastOrbitedDestinationHash = lastOrbitedDestinationHash;
  }


  public DestinyComponentsProfilesDestinyProfileTransitoryComponent partyMembers(List<DestinyComponentsProfilesDestinyProfileTransitoryPartyMember> partyMembers) {
    this.partyMembers = partyMembers;
    return this;
  }

  public DestinyComponentsProfilesDestinyProfileTransitoryComponent addPartyMembersItem(DestinyComponentsProfilesDestinyProfileTransitoryPartyMember partyMembersItem) {
    if (this.partyMembers == null) {
      this.partyMembers = new ArrayList<>();
    }
    this.partyMembers.add(partyMembersItem);
    return this;
  }

  /**
   * If you have any members currently in your party, this is some (very) bare-bones information about those members.
   * @return partyMembers
   */
  @javax.annotation.Nullable
  public List<DestinyComponentsProfilesDestinyProfileTransitoryPartyMember> getPartyMembers() {
    return partyMembers;
  }

  public void setPartyMembers(List<DestinyComponentsProfilesDestinyProfileTransitoryPartyMember> partyMembers) {
    this.partyMembers = partyMembers;
  }


  public DestinyComponentsProfilesDestinyProfileTransitoryComponent tracking(List<DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry> tracking) {
    this.tracking = tracking;
    return this;
  }

  public DestinyComponentsProfilesDestinyProfileTransitoryComponent addTrackingItem(DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry trackingItem) {
    if (this.tracking == null) {
      this.tracking = new ArrayList<>();
    }
    this.tracking.add(trackingItem);
    return this;
  }

  /**
   * Information about tracked entities.
   * @return tracking
   */
  @javax.annotation.Nullable
  public List<DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry> getTracking() {
    return tracking;
  }

  public void setTracking(List<DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry> tracking) {
    this.tracking = tracking;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyComponentsProfilesDestinyProfileTransitoryComponent destinyComponentsProfilesDestinyProfileTransitoryComponent = (DestinyComponentsProfilesDestinyProfileTransitoryComponent) o;
    return Objects.equals(this.currentActivity, destinyComponentsProfilesDestinyProfileTransitoryComponent.currentActivity) &&
        Objects.equals(this.joinability, destinyComponentsProfilesDestinyProfileTransitoryComponent.joinability) &&
        Objects.equals(this.lastOrbitedDestinationHash, destinyComponentsProfilesDestinyProfileTransitoryComponent.lastOrbitedDestinationHash) &&
        Objects.equals(this.partyMembers, destinyComponentsProfilesDestinyProfileTransitoryComponent.partyMembers) &&
        Objects.equals(this.tracking, destinyComponentsProfilesDestinyProfileTransitoryComponent.tracking);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentActivity, joinability, lastOrbitedDestinationHash, partyMembers, tracking);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyComponentsProfilesDestinyProfileTransitoryComponent {\n");
    sb.append("    currentActivity: ").append(toIndentedString(currentActivity)).append("\n");
    sb.append("    joinability: ").append(toIndentedString(joinability)).append("\n");
    sb.append("    lastOrbitedDestinationHash: ").append(toIndentedString(lastOrbitedDestinationHash)).append("\n");
    sb.append("    partyMembers: ").append(toIndentedString(partyMembers)).append("\n");
    sb.append("    tracking: ").append(toIndentedString(tracking)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currentActivity");
    openapiFields.add("joinability");
    openapiFields.add("lastOrbitedDestinationHash");
    openapiFields.add("partyMembers");
    openapiFields.add("tracking");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyComponentsProfilesDestinyProfileTransitoryComponent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyComponentsProfilesDestinyProfileTransitoryComponent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyComponentsProfilesDestinyProfileTransitoryComponent is not found in the empty JSON string", DestinyComponentsProfilesDestinyProfileTransitoryComponent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyComponentsProfilesDestinyProfileTransitoryComponent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyComponentsProfilesDestinyProfileTransitoryComponent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `currentActivity`
      if (jsonObj.get("currentActivity") != null && !jsonObj.get("currentActivity").isJsonNull()) {
        DestinyComponentsProfilesDestinyProfileTransitoryCurrentActivity.validateJsonElement(jsonObj.get("currentActivity"));
      }
      // validate the optional field `joinability`
      if (jsonObj.get("joinability") != null && !jsonObj.get("joinability").isJsonNull()) {
        DestinyComponentsProfilesDestinyProfileTransitoryJoinability.validateJsonElement(jsonObj.get("joinability"));
      }
      if (jsonObj.get("partyMembers") != null && !jsonObj.get("partyMembers").isJsonNull()) {
        JsonArray jsonArraypartyMembers = jsonObj.getAsJsonArray("partyMembers");
        if (jsonArraypartyMembers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("partyMembers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `partyMembers` to be an array in the JSON string but got `%s`", jsonObj.get("partyMembers").toString()));
          }

          // validate the optional field `partyMembers` (array)
          for (int i = 0; i < jsonArraypartyMembers.size(); i++) {
            DestinyComponentsProfilesDestinyProfileTransitoryPartyMember.validateJsonElement(jsonArraypartyMembers.get(i));
          };
        }
      }
      if (jsonObj.get("tracking") != null && !jsonObj.get("tracking").isJsonNull()) {
        JsonArray jsonArraytracking = jsonObj.getAsJsonArray("tracking");
        if (jsonArraytracking != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tracking").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tracking` to be an array in the JSON string but got `%s`", jsonObj.get("tracking").toString()));
          }

          // validate the optional field `tracking` (array)
          for (int i = 0; i < jsonArraytracking.size(); i++) {
            DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry.validateJsonElement(jsonArraytracking.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyComponentsProfilesDestinyProfileTransitoryComponent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyComponentsProfilesDestinyProfileTransitoryComponent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyComponentsProfilesDestinyProfileTransitoryComponent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyComponentsProfilesDestinyProfileTransitoryComponent.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyComponentsProfilesDestinyProfileTransitoryComponent>() {
           @Override
           public void write(JsonWriter out, DestinyComponentsProfilesDestinyProfileTransitoryComponent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyComponentsProfilesDestinyProfileTransitoryComponent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyComponentsProfilesDestinyProfileTransitoryComponent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyComponentsProfilesDestinyProfileTransitoryComponent
   * @throws IOException if the JSON string is invalid with respect to DestinyComponentsProfilesDestinyProfileTransitoryComponent
   */
  public static DestinyComponentsProfilesDestinyProfileTransitoryComponent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyComponentsProfilesDestinyProfileTransitoryComponent.class);
  }

  /**
   * Convert an instance of DestinyComponentsProfilesDestinyProfileTransitoryComponent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

