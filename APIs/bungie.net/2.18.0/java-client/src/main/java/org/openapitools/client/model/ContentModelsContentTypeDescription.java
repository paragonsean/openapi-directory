/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ContentModelsContentPreview;
import org.openapitools.client.model.ContentModelsContentTypeProperty;
import org.openapitools.client.model.ContentModelsContentTypePropertySection;
import org.openapitools.client.model.ContentModelsTagMetadataDefinition;
import org.openapitools.client.model.ContentModelsTagMetadataItem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContentModelsContentTypeDescription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContentModelsContentTypeDescription {
  public static final String SERIALIZED_NAME_ALLOW_COMMENTS = "allowComments";
  @SerializedName(SERIALIZED_NAME_ALLOW_COMMENTS)
  private Boolean allowComments;

  public static final String SERIALIZED_NAME_AUTO_ENGLISH_PROPERTY_FALLBACK = "autoEnglishPropertyFallback";
  @SerializedName(SERIALIZED_NAME_AUTO_ENGLISH_PROPERTY_FALLBACK)
  private Boolean autoEnglishPropertyFallback;

  public static final String SERIALIZED_NAME_BIND_IDENTIFIER_TO_PROPERTY = "bindIdentifierToProperty";
  @SerializedName(SERIALIZED_NAME_BIND_IDENTIFIER_TO_PROPERTY)
  private String bindIdentifierToProperty;

  public static final String SERIALIZED_NAME_BOUND_REGEX = "boundRegex";
  @SerializedName(SERIALIZED_NAME_BOUND_REGEX)
  private String boundRegex;

  public static final String SERIALIZED_NAME_BULK_UPLOADABLE = "bulkUploadable";
  @SerializedName(SERIALIZED_NAME_BULK_UPLOADABLE)
  private Boolean bulkUploadable;

  public static final String SERIALIZED_NAME_C_TYPE = "cType";
  @SerializedName(SERIALIZED_NAME_C_TYPE)
  private String cType;

  public static final String SERIALIZED_NAME_CONTENT_DESCRIPTION = "contentDescription";
  @SerializedName(SERIALIZED_NAME_CONTENT_DESCRIPTION)
  private String contentDescription;

  public static final String SERIALIZED_NAME_FORCE_IDENTIFIER_BINDING = "forceIdentifierBinding";
  @SerializedName(SERIALIZED_NAME_FORCE_IDENTIFIER_BINDING)
  private Boolean forceIdentifierBinding;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PREVIEW_IMAGE = "previewImage";
  @SerializedName(SERIALIZED_NAME_PREVIEW_IMAGE)
  private String previewImage;

  public static final String SERIALIZED_NAME_PREVIEWS = "previews";
  @SerializedName(SERIALIZED_NAME_PREVIEWS)
  private List<ContentModelsContentPreview> previews = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private List<ContentModelsContentTypeProperty> properties = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROPERTY_SECTIONS = "propertySections";
  @SerializedName(SERIALIZED_NAME_PROPERTY_SECTIONS)
  private List<ContentModelsContentTypePropertySection> propertySections = new ArrayList<>();

  public static final String SERIALIZED_NAME_REMINDER = "reminder";
  @SerializedName(SERIALIZED_NAME_REMINDER)
  private String reminder;

  public static final String SERIALIZED_NAME_SHOW_IN_CONTENT_EDITOR = "showInContentEditor";
  @SerializedName(SERIALIZED_NAME_SHOW_IN_CONTENT_EDITOR)
  private Boolean showInContentEditor;

  public static final String SERIALIZED_NAME_SUPPRESS_CMS_PATH = "suppressCmsPath";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_CMS_PATH)
  private Boolean suppressCmsPath;

  public static final String SERIALIZED_NAME_TAG_METADATA = "tagMetadata";
  @SerializedName(SERIALIZED_NAME_TAG_METADATA)
  private List<ContentModelsTagMetadataDefinition> tagMetadata = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAG_METADATA_ITEMS = "tagMetadataItems";
  @SerializedName(SERIALIZED_NAME_TAG_METADATA_ITEMS)
  private Map<String, ContentModelsTagMetadataItem> tagMetadataItems = new HashMap<>();

  public static final String SERIALIZED_NAME_TYPE_OF = "typeOf";
  @SerializedName(SERIALIZED_NAME_TYPE_OF)
  private String typeOf;

  public static final String SERIALIZED_NAME_USAGE_EXAMPLES = "usageExamples";
  @SerializedName(SERIALIZED_NAME_USAGE_EXAMPLES)
  private List<String> usageExamples = new ArrayList<>();

  public ContentModelsContentTypeDescription() {
  }

  public ContentModelsContentTypeDescription allowComments(Boolean allowComments) {
    this.allowComments = allowComments;
    return this;
  }

  /**
   * Get allowComments
   * @return allowComments
   */
  @javax.annotation.Nullable
  public Boolean getAllowComments() {
    return allowComments;
  }

  public void setAllowComments(Boolean allowComments) {
    this.allowComments = allowComments;
  }


  public ContentModelsContentTypeDescription autoEnglishPropertyFallback(Boolean autoEnglishPropertyFallback) {
    this.autoEnglishPropertyFallback = autoEnglishPropertyFallback;
    return this;
  }

  /**
   * Get autoEnglishPropertyFallback
   * @return autoEnglishPropertyFallback
   */
  @javax.annotation.Nullable
  public Boolean getAutoEnglishPropertyFallback() {
    return autoEnglishPropertyFallback;
  }

  public void setAutoEnglishPropertyFallback(Boolean autoEnglishPropertyFallback) {
    this.autoEnglishPropertyFallback = autoEnglishPropertyFallback;
  }


  public ContentModelsContentTypeDescription bindIdentifierToProperty(String bindIdentifierToProperty) {
    this.bindIdentifierToProperty = bindIdentifierToProperty;
    return this;
  }

  /**
   * Get bindIdentifierToProperty
   * @return bindIdentifierToProperty
   */
  @javax.annotation.Nullable
  public String getBindIdentifierToProperty() {
    return bindIdentifierToProperty;
  }

  public void setBindIdentifierToProperty(String bindIdentifierToProperty) {
    this.bindIdentifierToProperty = bindIdentifierToProperty;
  }


  public ContentModelsContentTypeDescription boundRegex(String boundRegex) {
    this.boundRegex = boundRegex;
    return this;
  }

  /**
   * Get boundRegex
   * @return boundRegex
   */
  @javax.annotation.Nullable
  public String getBoundRegex() {
    return boundRegex;
  }

  public void setBoundRegex(String boundRegex) {
    this.boundRegex = boundRegex;
  }


  public ContentModelsContentTypeDescription bulkUploadable(Boolean bulkUploadable) {
    this.bulkUploadable = bulkUploadable;
    return this;
  }

  /**
   * Get bulkUploadable
   * @return bulkUploadable
   */
  @javax.annotation.Nullable
  public Boolean getBulkUploadable() {
    return bulkUploadable;
  }

  public void setBulkUploadable(Boolean bulkUploadable) {
    this.bulkUploadable = bulkUploadable;
  }


  public ContentModelsContentTypeDescription cType(String cType) {
    this.cType = cType;
    return this;
  }

  /**
   * Get cType
   * @return cType
   */
  @javax.annotation.Nullable
  public String getcType() {
    return cType;
  }

  public void setcType(String cType) {
    this.cType = cType;
  }


  public ContentModelsContentTypeDescription contentDescription(String contentDescription) {
    this.contentDescription = contentDescription;
    return this;
  }

  /**
   * Get contentDescription
   * @return contentDescription
   */
  @javax.annotation.Nullable
  public String getContentDescription() {
    return contentDescription;
  }

  public void setContentDescription(String contentDescription) {
    this.contentDescription = contentDescription;
  }


  public ContentModelsContentTypeDescription forceIdentifierBinding(Boolean forceIdentifierBinding) {
    this.forceIdentifierBinding = forceIdentifierBinding;
    return this;
  }

  /**
   * Get forceIdentifierBinding
   * @return forceIdentifierBinding
   */
  @javax.annotation.Nullable
  public Boolean getForceIdentifierBinding() {
    return forceIdentifierBinding;
  }

  public void setForceIdentifierBinding(Boolean forceIdentifierBinding) {
    this.forceIdentifierBinding = forceIdentifierBinding;
  }


  public ContentModelsContentTypeDescription name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ContentModelsContentTypeDescription previewImage(String previewImage) {
    this.previewImage = previewImage;
    return this;
  }

  /**
   * Get previewImage
   * @return previewImage
   */
  @javax.annotation.Nullable
  public String getPreviewImage() {
    return previewImage;
  }

  public void setPreviewImage(String previewImage) {
    this.previewImage = previewImage;
  }


  public ContentModelsContentTypeDescription previews(List<ContentModelsContentPreview> previews) {
    this.previews = previews;
    return this;
  }

  public ContentModelsContentTypeDescription addPreviewsItem(ContentModelsContentPreview previewsItem) {
    if (this.previews == null) {
      this.previews = new ArrayList<>();
    }
    this.previews.add(previewsItem);
    return this;
  }

  /**
   * Get previews
   * @return previews
   */
  @javax.annotation.Nullable
  public List<ContentModelsContentPreview> getPreviews() {
    return previews;
  }

  public void setPreviews(List<ContentModelsContentPreview> previews) {
    this.previews = previews;
  }


  public ContentModelsContentTypeDescription priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Get priority
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public ContentModelsContentTypeDescription properties(List<ContentModelsContentTypeProperty> properties) {
    this.properties = properties;
    return this;
  }

  public ContentModelsContentTypeDescription addPropertiesItem(ContentModelsContentTypeProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public List<ContentModelsContentTypeProperty> getProperties() {
    return properties;
  }

  public void setProperties(List<ContentModelsContentTypeProperty> properties) {
    this.properties = properties;
  }


  public ContentModelsContentTypeDescription propertySections(List<ContentModelsContentTypePropertySection> propertySections) {
    this.propertySections = propertySections;
    return this;
  }

  public ContentModelsContentTypeDescription addPropertySectionsItem(ContentModelsContentTypePropertySection propertySectionsItem) {
    if (this.propertySections == null) {
      this.propertySections = new ArrayList<>();
    }
    this.propertySections.add(propertySectionsItem);
    return this;
  }

  /**
   * Get propertySections
   * @return propertySections
   */
  @javax.annotation.Nullable
  public List<ContentModelsContentTypePropertySection> getPropertySections() {
    return propertySections;
  }

  public void setPropertySections(List<ContentModelsContentTypePropertySection> propertySections) {
    this.propertySections = propertySections;
  }


  public ContentModelsContentTypeDescription reminder(String reminder) {
    this.reminder = reminder;
    return this;
  }

  /**
   * Get reminder
   * @return reminder
   */
  @javax.annotation.Nullable
  public String getReminder() {
    return reminder;
  }

  public void setReminder(String reminder) {
    this.reminder = reminder;
  }


  public ContentModelsContentTypeDescription showInContentEditor(Boolean showInContentEditor) {
    this.showInContentEditor = showInContentEditor;
    return this;
  }

  /**
   * Get showInContentEditor
   * @return showInContentEditor
   */
  @javax.annotation.Nullable
  public Boolean getShowInContentEditor() {
    return showInContentEditor;
  }

  public void setShowInContentEditor(Boolean showInContentEditor) {
    this.showInContentEditor = showInContentEditor;
  }


  public ContentModelsContentTypeDescription suppressCmsPath(Boolean suppressCmsPath) {
    this.suppressCmsPath = suppressCmsPath;
    return this;
  }

  /**
   * Get suppressCmsPath
   * @return suppressCmsPath
   */
  @javax.annotation.Nullable
  public Boolean getSuppressCmsPath() {
    return suppressCmsPath;
  }

  public void setSuppressCmsPath(Boolean suppressCmsPath) {
    this.suppressCmsPath = suppressCmsPath;
  }


  public ContentModelsContentTypeDescription tagMetadata(List<ContentModelsTagMetadataDefinition> tagMetadata) {
    this.tagMetadata = tagMetadata;
    return this;
  }

  public ContentModelsContentTypeDescription addTagMetadataItem(ContentModelsTagMetadataDefinition tagMetadataItem) {
    if (this.tagMetadata == null) {
      this.tagMetadata = new ArrayList<>();
    }
    this.tagMetadata.add(tagMetadataItem);
    return this;
  }

  /**
   * Get tagMetadata
   * @return tagMetadata
   */
  @javax.annotation.Nullable
  public List<ContentModelsTagMetadataDefinition> getTagMetadata() {
    return tagMetadata;
  }

  public void setTagMetadata(List<ContentModelsTagMetadataDefinition> tagMetadata) {
    this.tagMetadata = tagMetadata;
  }


  public ContentModelsContentTypeDescription tagMetadataItems(Map<String, ContentModelsTagMetadataItem> tagMetadataItems) {
    this.tagMetadataItems = tagMetadataItems;
    return this;
  }

  public ContentModelsContentTypeDescription putTagMetadataItemsItem(String key, ContentModelsTagMetadataItem tagMetadataItemsItem) {
    if (this.tagMetadataItems == null) {
      this.tagMetadataItems = new HashMap<>();
    }
    this.tagMetadataItems.put(key, tagMetadataItemsItem);
    return this;
  }

  /**
   * Get tagMetadataItems
   * @return tagMetadataItems
   */
  @javax.annotation.Nullable
  public Map<String, ContentModelsTagMetadataItem> getTagMetadataItems() {
    return tagMetadataItems;
  }

  public void setTagMetadataItems(Map<String, ContentModelsTagMetadataItem> tagMetadataItems) {
    this.tagMetadataItems = tagMetadataItems;
  }


  public ContentModelsContentTypeDescription typeOf(String typeOf) {
    this.typeOf = typeOf;
    return this;
  }

  /**
   * Get typeOf
   * @return typeOf
   */
  @javax.annotation.Nullable
  public String getTypeOf() {
    return typeOf;
  }

  public void setTypeOf(String typeOf) {
    this.typeOf = typeOf;
  }


  public ContentModelsContentTypeDescription usageExamples(List<String> usageExamples) {
    this.usageExamples = usageExamples;
    return this;
  }

  public ContentModelsContentTypeDescription addUsageExamplesItem(String usageExamplesItem) {
    if (this.usageExamples == null) {
      this.usageExamples = new ArrayList<>();
    }
    this.usageExamples.add(usageExamplesItem);
    return this;
  }

  /**
   * Get usageExamples
   * @return usageExamples
   */
  @javax.annotation.Nullable
  public List<String> getUsageExamples() {
    return usageExamples;
  }

  public void setUsageExamples(List<String> usageExamples) {
    this.usageExamples = usageExamples;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentModelsContentTypeDescription contentModelsContentTypeDescription = (ContentModelsContentTypeDescription) o;
    return Objects.equals(this.allowComments, contentModelsContentTypeDescription.allowComments) &&
        Objects.equals(this.autoEnglishPropertyFallback, contentModelsContentTypeDescription.autoEnglishPropertyFallback) &&
        Objects.equals(this.bindIdentifierToProperty, contentModelsContentTypeDescription.bindIdentifierToProperty) &&
        Objects.equals(this.boundRegex, contentModelsContentTypeDescription.boundRegex) &&
        Objects.equals(this.bulkUploadable, contentModelsContentTypeDescription.bulkUploadable) &&
        Objects.equals(this.cType, contentModelsContentTypeDescription.cType) &&
        Objects.equals(this.contentDescription, contentModelsContentTypeDescription.contentDescription) &&
        Objects.equals(this.forceIdentifierBinding, contentModelsContentTypeDescription.forceIdentifierBinding) &&
        Objects.equals(this.name, contentModelsContentTypeDescription.name) &&
        Objects.equals(this.previewImage, contentModelsContentTypeDescription.previewImage) &&
        Objects.equals(this.previews, contentModelsContentTypeDescription.previews) &&
        Objects.equals(this.priority, contentModelsContentTypeDescription.priority) &&
        Objects.equals(this.properties, contentModelsContentTypeDescription.properties) &&
        Objects.equals(this.propertySections, contentModelsContentTypeDescription.propertySections) &&
        Objects.equals(this.reminder, contentModelsContentTypeDescription.reminder) &&
        Objects.equals(this.showInContentEditor, contentModelsContentTypeDescription.showInContentEditor) &&
        Objects.equals(this.suppressCmsPath, contentModelsContentTypeDescription.suppressCmsPath) &&
        Objects.equals(this.tagMetadata, contentModelsContentTypeDescription.tagMetadata) &&
        Objects.equals(this.tagMetadataItems, contentModelsContentTypeDescription.tagMetadataItems) &&
        Objects.equals(this.typeOf, contentModelsContentTypeDescription.typeOf) &&
        Objects.equals(this.usageExamples, contentModelsContentTypeDescription.usageExamples);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowComments, autoEnglishPropertyFallback, bindIdentifierToProperty, boundRegex, bulkUploadable, cType, contentDescription, forceIdentifierBinding, name, previewImage, previews, priority, properties, propertySections, reminder, showInContentEditor, suppressCmsPath, tagMetadata, tagMetadataItems, typeOf, usageExamples);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentModelsContentTypeDescription {\n");
    sb.append("    allowComments: ").append(toIndentedString(allowComments)).append("\n");
    sb.append("    autoEnglishPropertyFallback: ").append(toIndentedString(autoEnglishPropertyFallback)).append("\n");
    sb.append("    bindIdentifierToProperty: ").append(toIndentedString(bindIdentifierToProperty)).append("\n");
    sb.append("    boundRegex: ").append(toIndentedString(boundRegex)).append("\n");
    sb.append("    bulkUploadable: ").append(toIndentedString(bulkUploadable)).append("\n");
    sb.append("    cType: ").append(toIndentedString(cType)).append("\n");
    sb.append("    contentDescription: ").append(toIndentedString(contentDescription)).append("\n");
    sb.append("    forceIdentifierBinding: ").append(toIndentedString(forceIdentifierBinding)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    previewImage: ").append(toIndentedString(previewImage)).append("\n");
    sb.append("    previews: ").append(toIndentedString(previews)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    propertySections: ").append(toIndentedString(propertySections)).append("\n");
    sb.append("    reminder: ").append(toIndentedString(reminder)).append("\n");
    sb.append("    showInContentEditor: ").append(toIndentedString(showInContentEditor)).append("\n");
    sb.append("    suppressCmsPath: ").append(toIndentedString(suppressCmsPath)).append("\n");
    sb.append("    tagMetadata: ").append(toIndentedString(tagMetadata)).append("\n");
    sb.append("    tagMetadataItems: ").append(toIndentedString(tagMetadataItems)).append("\n");
    sb.append("    typeOf: ").append(toIndentedString(typeOf)).append("\n");
    sb.append("    usageExamples: ").append(toIndentedString(usageExamples)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowComments");
    openapiFields.add("autoEnglishPropertyFallback");
    openapiFields.add("bindIdentifierToProperty");
    openapiFields.add("boundRegex");
    openapiFields.add("bulkUploadable");
    openapiFields.add("cType");
    openapiFields.add("contentDescription");
    openapiFields.add("forceIdentifierBinding");
    openapiFields.add("name");
    openapiFields.add("previewImage");
    openapiFields.add("previews");
    openapiFields.add("priority");
    openapiFields.add("properties");
    openapiFields.add("propertySections");
    openapiFields.add("reminder");
    openapiFields.add("showInContentEditor");
    openapiFields.add("suppressCmsPath");
    openapiFields.add("tagMetadata");
    openapiFields.add("tagMetadataItems");
    openapiFields.add("typeOf");
    openapiFields.add("usageExamples");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContentModelsContentTypeDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContentModelsContentTypeDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContentModelsContentTypeDescription is not found in the empty JSON string", ContentModelsContentTypeDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContentModelsContentTypeDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContentModelsContentTypeDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bindIdentifierToProperty") != null && !jsonObj.get("bindIdentifierToProperty").isJsonNull()) && !jsonObj.get("bindIdentifierToProperty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bindIdentifierToProperty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bindIdentifierToProperty").toString()));
      }
      if ((jsonObj.get("boundRegex") != null && !jsonObj.get("boundRegex").isJsonNull()) && !jsonObj.get("boundRegex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `boundRegex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("boundRegex").toString()));
      }
      if ((jsonObj.get("cType") != null && !jsonObj.get("cType").isJsonNull()) && !jsonObj.get("cType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cType").toString()));
      }
      if ((jsonObj.get("contentDescription") != null && !jsonObj.get("contentDescription").isJsonNull()) && !jsonObj.get("contentDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentDescription").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("previewImage") != null && !jsonObj.get("previewImage").isJsonNull()) && !jsonObj.get("previewImage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previewImage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previewImage").toString()));
      }
      if (jsonObj.get("previews") != null && !jsonObj.get("previews").isJsonNull()) {
        JsonArray jsonArraypreviews = jsonObj.getAsJsonArray("previews");
        if (jsonArraypreviews != null) {
          // ensure the json data is an array
          if (!jsonObj.get("previews").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `previews` to be an array in the JSON string but got `%s`", jsonObj.get("previews").toString()));
          }

          // validate the optional field `previews` (array)
          for (int i = 0; i < jsonArraypreviews.size(); i++) {
            ContentModelsContentPreview.validateJsonElement(jsonArraypreviews.get(i));
          };
        }
      }
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        JsonArray jsonArrayproperties = jsonObj.getAsJsonArray("properties");
        if (jsonArrayproperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("properties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `properties` to be an array in the JSON string but got `%s`", jsonObj.get("properties").toString()));
          }

          // validate the optional field `properties` (array)
          for (int i = 0; i < jsonArrayproperties.size(); i++) {
            ContentModelsContentTypeProperty.validateJsonElement(jsonArrayproperties.get(i));
          };
        }
      }
      if (jsonObj.get("propertySections") != null && !jsonObj.get("propertySections").isJsonNull()) {
        JsonArray jsonArraypropertySections = jsonObj.getAsJsonArray("propertySections");
        if (jsonArraypropertySections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("propertySections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `propertySections` to be an array in the JSON string but got `%s`", jsonObj.get("propertySections").toString()));
          }

          // validate the optional field `propertySections` (array)
          for (int i = 0; i < jsonArraypropertySections.size(); i++) {
            ContentModelsContentTypePropertySection.validateJsonElement(jsonArraypropertySections.get(i));
          };
        }
      }
      if ((jsonObj.get("reminder") != null && !jsonObj.get("reminder").isJsonNull()) && !jsonObj.get("reminder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reminder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reminder").toString()));
      }
      if (jsonObj.get("tagMetadata") != null && !jsonObj.get("tagMetadata").isJsonNull()) {
        JsonArray jsonArraytagMetadata = jsonObj.getAsJsonArray("tagMetadata");
        if (jsonArraytagMetadata != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tagMetadata").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tagMetadata` to be an array in the JSON string but got `%s`", jsonObj.get("tagMetadata").toString()));
          }

          // validate the optional field `tagMetadata` (array)
          for (int i = 0; i < jsonArraytagMetadata.size(); i++) {
            ContentModelsTagMetadataDefinition.validateJsonElement(jsonArraytagMetadata.get(i));
          };
        }
      }
      if ((jsonObj.get("typeOf") != null && !jsonObj.get("typeOf").isJsonNull()) && !jsonObj.get("typeOf").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typeOf` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typeOf").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("usageExamples") != null && !jsonObj.get("usageExamples").isJsonNull() && !jsonObj.get("usageExamples").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `usageExamples` to be an array in the JSON string but got `%s`", jsonObj.get("usageExamples").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContentModelsContentTypeDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContentModelsContentTypeDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContentModelsContentTypeDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContentModelsContentTypeDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<ContentModelsContentTypeDescription>() {
           @Override
           public void write(JsonWriter out, ContentModelsContentTypeDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContentModelsContentTypeDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContentModelsContentTypeDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContentModelsContentTypeDescription
   * @throws IOException if the JSON string is invalid with respect to ContentModelsContentTypeDescription
   */
  public static ContentModelsContentTypeDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContentModelsContentTypeDescription.class);
  }

  /**
   * Convert an instance of ContentModelsContentTypeDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

