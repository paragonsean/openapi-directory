/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyPublicVendorComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent;
import org.openapitools.client.model.DictionaryComponentResponseOfuint32AndPublicDestinyVendorSaleItemSetComponent;
import org.openapitools.client.model.SingleComponentResponseOfDestinyStringVariablesComponent;
import org.openapitools.client.model.SingleComponentResponseOfDestinyVendorGroupComponent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A response containing all valid components for the public Vendors endpoint.   It is a decisively smaller subset of data compared to what we can get when we know the specific user making the request.   If you want any of the other data - item details, whether or not you can buy it, etc... you&#39;ll have to call in the context of a character. I know, sad but true.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyResponsesDestinyPublicVendorsResponse {
  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent categories;

  public static final String SERIALIZED_NAME_SALES = "sales";
  @SerializedName(SERIALIZED_NAME_SALES)
  private DictionaryComponentResponseOfuint32AndPublicDestinyVendorSaleItemSetComponent sales;

  public static final String SERIALIZED_NAME_STRING_VARIABLES = "stringVariables";
  @SerializedName(SERIALIZED_NAME_STRING_VARIABLES)
  private SingleComponentResponseOfDestinyStringVariablesComponent stringVariables;

  public static final String SERIALIZED_NAME_VENDOR_GROUPS = "vendorGroups";
  @SerializedName(SERIALIZED_NAME_VENDOR_GROUPS)
  private SingleComponentResponseOfDestinyVendorGroupComponent vendorGroups;

  public static final String SERIALIZED_NAME_VENDORS = "vendors";
  @SerializedName(SERIALIZED_NAME_VENDORS)
  private DictionaryComponentResponseOfuint32AndDestinyPublicVendorComponent vendors;

  public DestinyResponsesDestinyPublicVendorsResponse() {
  }

  public DestinyResponsesDestinyPublicVendorsResponse categories(DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent categories) {
    this.categories = categories;
    return this;
  }

  /**
   * Categories that the vendor has available, and references to the sales therein. These are keyed by the Vendor Hash, so you will get one Categories Component per vendor returned.  COMPONENT TYPE: VendorCategories
   * @return categories
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent getCategories() {
    return categories;
  }

  public void setCategories(DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent categories) {
    this.categories = categories;
  }


  public DestinyResponsesDestinyPublicVendorsResponse sales(DictionaryComponentResponseOfuint32AndPublicDestinyVendorSaleItemSetComponent sales) {
    this.sales = sales;
    return this;
  }

  /**
   * Sales, keyed by the vendorItemIndex of the item being sold. These are keyed by the Vendor Hash, so you will get one Sale Item Set Component per vendor returned.  Note that within the Sale Item Set component, the sales are themselves keyed by the vendorSaleIndex, so you can relate it to the corrent sale item definition within the Vendor&#39;s definition.  COMPONENT TYPE: VendorSales
   * @return sales
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndPublicDestinyVendorSaleItemSetComponent getSales() {
    return sales;
  }

  public void setSales(DictionaryComponentResponseOfuint32AndPublicDestinyVendorSaleItemSetComponent sales) {
    this.sales = sales;
  }


  public DestinyResponsesDestinyPublicVendorsResponse stringVariables(SingleComponentResponseOfDestinyStringVariablesComponent stringVariables) {
    this.stringVariables = stringVariables;
    return this;
  }

  /**
   * A set of string variable values by hash for a public vendors context.  COMPONENT TYPE: StringVariables
   * @return stringVariables
   */
  @javax.annotation.Nullable
  public SingleComponentResponseOfDestinyStringVariablesComponent getStringVariables() {
    return stringVariables;
  }

  public void setStringVariables(SingleComponentResponseOfDestinyStringVariablesComponent stringVariables) {
    this.stringVariables = stringVariables;
  }


  public DestinyResponsesDestinyPublicVendorsResponse vendorGroups(SingleComponentResponseOfDestinyVendorGroupComponent vendorGroups) {
    this.vendorGroups = vendorGroups;
    return this;
  }

  /**
   * For Vendors being returned, this will give you the information you need to group them and order them in the same way that the Bungie Companion app performs grouping. It will automatically be returned if you request the Vendors component.  COMPONENT TYPE: Vendors
   * @return vendorGroups
   */
  @javax.annotation.Nullable
  public SingleComponentResponseOfDestinyVendorGroupComponent getVendorGroups() {
    return vendorGroups;
  }

  public void setVendorGroups(SingleComponentResponseOfDestinyVendorGroupComponent vendorGroups) {
    this.vendorGroups = vendorGroups;
  }


  public DestinyResponsesDestinyPublicVendorsResponse vendors(DictionaryComponentResponseOfuint32AndDestinyPublicVendorComponent vendors) {
    this.vendors = vendors;
    return this;
  }

  /**
   * The base properties of the vendor. These are keyed by the Vendor Hash, so you will get one Vendor Component per vendor returned.  COMPONENT TYPE: Vendors
   * @return vendors
   */
  @javax.annotation.Nullable
  public DictionaryComponentResponseOfuint32AndDestinyPublicVendorComponent getVendors() {
    return vendors;
  }

  public void setVendors(DictionaryComponentResponseOfuint32AndDestinyPublicVendorComponent vendors) {
    this.vendors = vendors;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyResponsesDestinyPublicVendorsResponse destinyResponsesDestinyPublicVendorsResponse = (DestinyResponsesDestinyPublicVendorsResponse) o;
    return Objects.equals(this.categories, destinyResponsesDestinyPublicVendorsResponse.categories) &&
        Objects.equals(this.sales, destinyResponsesDestinyPublicVendorsResponse.sales) &&
        Objects.equals(this.stringVariables, destinyResponsesDestinyPublicVendorsResponse.stringVariables) &&
        Objects.equals(this.vendorGroups, destinyResponsesDestinyPublicVendorsResponse.vendorGroups) &&
        Objects.equals(this.vendors, destinyResponsesDestinyPublicVendorsResponse.vendors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categories, sales, stringVariables, vendorGroups, vendors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyResponsesDestinyPublicVendorsResponse {\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    sales: ").append(toIndentedString(sales)).append("\n");
    sb.append("    stringVariables: ").append(toIndentedString(stringVariables)).append("\n");
    sb.append("    vendorGroups: ").append(toIndentedString(vendorGroups)).append("\n");
    sb.append("    vendors: ").append(toIndentedString(vendors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categories");
    openapiFields.add("sales");
    openapiFields.add("stringVariables");
    openapiFields.add("vendorGroups");
    openapiFields.add("vendors");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyResponsesDestinyPublicVendorsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyResponsesDestinyPublicVendorsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyResponsesDestinyPublicVendorsResponse is not found in the empty JSON string", DestinyResponsesDestinyPublicVendorsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyResponsesDestinyPublicVendorsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyResponsesDestinyPublicVendorsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `categories`
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent.validateJsonElement(jsonObj.get("categories"));
      }
      // validate the optional field `sales`
      if (jsonObj.get("sales") != null && !jsonObj.get("sales").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndPublicDestinyVendorSaleItemSetComponent.validateJsonElement(jsonObj.get("sales"));
      }
      // validate the optional field `stringVariables`
      if (jsonObj.get("stringVariables") != null && !jsonObj.get("stringVariables").isJsonNull()) {
        SingleComponentResponseOfDestinyStringVariablesComponent.validateJsonElement(jsonObj.get("stringVariables"));
      }
      // validate the optional field `vendorGroups`
      if (jsonObj.get("vendorGroups") != null && !jsonObj.get("vendorGroups").isJsonNull()) {
        SingleComponentResponseOfDestinyVendorGroupComponent.validateJsonElement(jsonObj.get("vendorGroups"));
      }
      // validate the optional field `vendors`
      if (jsonObj.get("vendors") != null && !jsonObj.get("vendors").isJsonNull()) {
        DictionaryComponentResponseOfuint32AndDestinyPublicVendorComponent.validateJsonElement(jsonObj.get("vendors"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyResponsesDestinyPublicVendorsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyResponsesDestinyPublicVendorsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyResponsesDestinyPublicVendorsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyResponsesDestinyPublicVendorsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyResponsesDestinyPublicVendorsResponse>() {
           @Override
           public void write(JsonWriter out, DestinyResponsesDestinyPublicVendorsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyResponsesDestinyPublicVendorsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyResponsesDestinyPublicVendorsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyResponsesDestinyPublicVendorsResponse
   * @throws IOException if the JSON string is invalid with respect to DestinyResponsesDestinyPublicVendorsResponse
   */
  public static DestinyResponsesDestinyPublicVendorsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyResponsesDestinyPublicVendorsResponse.class);
  }

  /**
   * Convert an instance of DestinyResponsesDestinyPublicVendorsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

