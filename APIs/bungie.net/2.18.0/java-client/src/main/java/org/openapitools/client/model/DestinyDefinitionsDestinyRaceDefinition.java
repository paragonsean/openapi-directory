/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * In Destiny, \&quot;Races\&quot; are really more like \&quot;Species\&quot;. Sort of. I mean, are the Awoken a separate species from humans? I&#39;m not sure. But either way, they&#39;re defined here. You&#39;ll see Exo, Awoken, and Human as examples of these Species. Players will choose one for their character.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsDestinyRaceDefinition {
  public static final String SERIALIZED_NAME_DISPLAY_PROPERTIES = "displayProperties";
  @SerializedName(SERIALIZED_NAME_DISPLAY_PROPERTIES)
  private DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties;

  public static final String SERIALIZED_NAME_GENDERED_RACE_NAMES = "genderedRaceNames";
  @SerializedName(SERIALIZED_NAME_GENDERED_RACE_NAMES)
  private Map<String, String> genderedRaceNames = new HashMap<>();

  public static final String SERIALIZED_NAME_GENDERED_RACE_NAMES_BY_GENDER_HASH = "genderedRaceNamesByGenderHash";
  @SerializedName(SERIALIZED_NAME_GENDERED_RACE_NAMES_BY_GENDER_HASH)
  private Map<String, String> genderedRaceNamesByGenderHash = new HashMap<>();

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private Integer hash;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_RACE_TYPE = "raceType";
  @SerializedName(SERIALIZED_NAME_RACE_TYPE)
  private Integer raceType;

  public static final String SERIALIZED_NAME_REDACTED = "redacted";
  @SerializedName(SERIALIZED_NAME_REDACTED)
  private Boolean redacted;

  public DestinyDefinitionsDestinyRaceDefinition() {
  }

  public DestinyDefinitionsDestinyRaceDefinition displayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

  /**
   * Get displayProperties
   * @return displayProperties
   */
  @javax.annotation.Nullable
  public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
  }


  public DestinyDefinitionsDestinyRaceDefinition genderedRaceNames(Map<String, String> genderedRaceNames) {
    this.genderedRaceNames = genderedRaceNames;
    return this;
  }

  public DestinyDefinitionsDestinyRaceDefinition putGenderedRaceNamesItem(String key, String genderedRaceNamesItem) {
    if (this.genderedRaceNames == null) {
      this.genderedRaceNames = new HashMap<>();
    }
    this.genderedRaceNames.put(key, genderedRaceNamesItem);
    return this;
  }

  /**
   * A localized string referring to the singular form of the Race&#39;s name when referred to in gendered form. Keyed by the DestinyGender.
   * @return genderedRaceNames
   */
  @javax.annotation.Nullable
  public Map<String, String> getGenderedRaceNames() {
    return genderedRaceNames;
  }

  public void setGenderedRaceNames(Map<String, String> genderedRaceNames) {
    this.genderedRaceNames = genderedRaceNames;
  }


  public DestinyDefinitionsDestinyRaceDefinition genderedRaceNamesByGenderHash(Map<String, String> genderedRaceNamesByGenderHash) {
    this.genderedRaceNamesByGenderHash = genderedRaceNamesByGenderHash;
    return this;
  }

  public DestinyDefinitionsDestinyRaceDefinition putGenderedRaceNamesByGenderHashItem(String key, String genderedRaceNamesByGenderHashItem) {
    if (this.genderedRaceNamesByGenderHash == null) {
      this.genderedRaceNamesByGenderHash = new HashMap<>();
    }
    this.genderedRaceNamesByGenderHash.put(key, genderedRaceNamesByGenderHashItem);
    return this;
  }

  /**
   * Get genderedRaceNamesByGenderHash
   * @return genderedRaceNamesByGenderHash
   */
  @javax.annotation.Nullable
  public Map<String, String> getGenderedRaceNamesByGenderHash() {
    return genderedRaceNamesByGenderHash;
  }

  public void setGenderedRaceNamesByGenderHash(Map<String, String> genderedRaceNamesByGenderHash) {
    this.genderedRaceNamesByGenderHash = genderedRaceNamesByGenderHash;
  }


  public DestinyDefinitionsDestinyRaceDefinition hash(Integer hash) {
    this.hash = hash;
    return this;
  }

  /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
   * @return hash
   */
  @javax.annotation.Nullable
  public Integer getHash() {
    return hash;
  }

  public void setHash(Integer hash) {
    this.hash = hash;
  }


  public DestinyDefinitionsDestinyRaceDefinition index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * The index of the entity as it was found in the investment tables.
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public DestinyDefinitionsDestinyRaceDefinition raceType(Integer raceType) {
    this.raceType = raceType;
    return this;
  }

  /**
   * An enumeration defining the existing, known Races/Species for player characters. This value will be the enum value matching this definition.
   * @return raceType
   */
  @javax.annotation.Nullable
  public Integer getRaceType() {
    return raceType;
  }

  public void setRaceType(Integer raceType) {
    this.raceType = raceType;
  }


  public DestinyDefinitionsDestinyRaceDefinition redacted(Boolean redacted) {
    this.redacted = redacted;
    return this;
  }

  /**
   * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
   * @return redacted
   */
  @javax.annotation.Nullable
  public Boolean getRedacted() {
    return redacted;
  }

  public void setRedacted(Boolean redacted) {
    this.redacted = redacted;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyRaceDefinition destinyDefinitionsDestinyRaceDefinition = (DestinyDefinitionsDestinyRaceDefinition) o;
    return Objects.equals(this.displayProperties, destinyDefinitionsDestinyRaceDefinition.displayProperties) &&
        Objects.equals(this.genderedRaceNames, destinyDefinitionsDestinyRaceDefinition.genderedRaceNames) &&
        Objects.equals(this.genderedRaceNamesByGenderHash, destinyDefinitionsDestinyRaceDefinition.genderedRaceNamesByGenderHash) &&
        Objects.equals(this.hash, destinyDefinitionsDestinyRaceDefinition.hash) &&
        Objects.equals(this.index, destinyDefinitionsDestinyRaceDefinition.index) &&
        Objects.equals(this.raceType, destinyDefinitionsDestinyRaceDefinition.raceType) &&
        Objects.equals(this.redacted, destinyDefinitionsDestinyRaceDefinition.redacted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayProperties, genderedRaceNames, genderedRaceNamesByGenderHash, hash, index, raceType, redacted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyRaceDefinition {\n");
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    genderedRaceNames: ").append(toIndentedString(genderedRaceNames)).append("\n");
    sb.append("    genderedRaceNamesByGenderHash: ").append(toIndentedString(genderedRaceNamesByGenderHash)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    raceType: ").append(toIndentedString(raceType)).append("\n");
    sb.append("    redacted: ").append(toIndentedString(redacted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayProperties");
    openapiFields.add("genderedRaceNames");
    openapiFields.add("genderedRaceNamesByGenderHash");
    openapiFields.add("hash");
    openapiFields.add("index");
    openapiFields.add("raceType");
    openapiFields.add("redacted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsDestinyRaceDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsDestinyRaceDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsDestinyRaceDefinition is not found in the empty JSON string", DestinyDefinitionsDestinyRaceDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsDestinyRaceDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsDestinyRaceDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `displayProperties`
      if (jsonObj.get("displayProperties") != null && !jsonObj.get("displayProperties").isJsonNull()) {
        DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJsonElement(jsonObj.get("displayProperties"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsDestinyRaceDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsDestinyRaceDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsDestinyRaceDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsDestinyRaceDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsDestinyRaceDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsDestinyRaceDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsDestinyRaceDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsDestinyRaceDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsDestinyRaceDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsDestinyRaceDefinition
   */
  public static DestinyDefinitionsDestinyRaceDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsDestinyRaceDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsDestinyRaceDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

