/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.GroupsV2GroupUserInfoCard;
import org.openapitools.client.model.UserUserInfoCard;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GroupsV2GroupMemberApplication
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GroupsV2GroupMemberApplication {
  public static final String SERIALIZED_NAME_BUNGIE_NET_USER_INFO = "bungieNetUserInfo";
  @SerializedName(SERIALIZED_NAME_BUNGIE_NET_USER_INFO)
  private UserUserInfoCard bungieNetUserInfo;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_DESTINY_USER_INFO = "destinyUserInfo";
  @SerializedName(SERIALIZED_NAME_DESTINY_USER_INFO)
  private GroupsV2GroupUserInfoCard destinyUserInfo;

  public static final String SERIALIZED_NAME_GROUP_ID = "groupId";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private Long groupId;

  public static final String SERIALIZED_NAME_REQUEST_MESSAGE = "requestMessage";
  @SerializedName(SERIALIZED_NAME_REQUEST_MESSAGE)
  private String requestMessage;

  public static final String SERIALIZED_NAME_RESOLVE_DATE = "resolveDate";
  @SerializedName(SERIALIZED_NAME_RESOLVE_DATE)
  private OffsetDateTime resolveDate;

  public static final String SERIALIZED_NAME_RESOLVE_MESSAGE = "resolveMessage";
  @SerializedName(SERIALIZED_NAME_RESOLVE_MESSAGE)
  private String resolveMessage;

  public static final String SERIALIZED_NAME_RESOLVE_STATE = "resolveState";
  @SerializedName(SERIALIZED_NAME_RESOLVE_STATE)
  private Integer resolveState;

  public static final String SERIALIZED_NAME_RESOLVED_BY_MEMBERSHIP_ID = "resolvedByMembershipId";
  @SerializedName(SERIALIZED_NAME_RESOLVED_BY_MEMBERSHIP_ID)
  private Long resolvedByMembershipId;

  public GroupsV2GroupMemberApplication() {
  }

  public GroupsV2GroupMemberApplication bungieNetUserInfo(UserUserInfoCard bungieNetUserInfo) {
    this.bungieNetUserInfo = bungieNetUserInfo;
    return this;
  }

  /**
   * Get bungieNetUserInfo
   * @return bungieNetUserInfo
   */
  @javax.annotation.Nullable
  public UserUserInfoCard getBungieNetUserInfo() {
    return bungieNetUserInfo;
  }

  public void setBungieNetUserInfo(UserUserInfoCard bungieNetUserInfo) {
    this.bungieNetUserInfo = bungieNetUserInfo;
  }


  public GroupsV2GroupMemberApplication creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public GroupsV2GroupMemberApplication destinyUserInfo(GroupsV2GroupUserInfoCard destinyUserInfo) {
    this.destinyUserInfo = destinyUserInfo;
    return this;
  }

  /**
   * Get destinyUserInfo
   * @return destinyUserInfo
   */
  @javax.annotation.Nullable
  public GroupsV2GroupUserInfoCard getDestinyUserInfo() {
    return destinyUserInfo;
  }

  public void setDestinyUserInfo(GroupsV2GroupUserInfoCard destinyUserInfo) {
    this.destinyUserInfo = destinyUserInfo;
  }


  public GroupsV2GroupMemberApplication groupId(Long groupId) {
    this.groupId = groupId;
    return this;
  }

  /**
   * Get groupId
   * @return groupId
   */
  @javax.annotation.Nullable
  public Long getGroupId() {
    return groupId;
  }

  public void setGroupId(Long groupId) {
    this.groupId = groupId;
  }


  public GroupsV2GroupMemberApplication requestMessage(String requestMessage) {
    this.requestMessage = requestMessage;
    return this;
  }

  /**
   * Get requestMessage
   * @return requestMessage
   */
  @javax.annotation.Nullable
  public String getRequestMessage() {
    return requestMessage;
  }

  public void setRequestMessage(String requestMessage) {
    this.requestMessage = requestMessage;
  }


  public GroupsV2GroupMemberApplication resolveDate(OffsetDateTime resolveDate) {
    this.resolveDate = resolveDate;
    return this;
  }

  /**
   * Get resolveDate
   * @return resolveDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getResolveDate() {
    return resolveDate;
  }

  public void setResolveDate(OffsetDateTime resolveDate) {
    this.resolveDate = resolveDate;
  }


  public GroupsV2GroupMemberApplication resolveMessage(String resolveMessage) {
    this.resolveMessage = resolveMessage;
    return this;
  }

  /**
   * Get resolveMessage
   * @return resolveMessage
   */
  @javax.annotation.Nullable
  public String getResolveMessage() {
    return resolveMessage;
  }

  public void setResolveMessage(String resolveMessage) {
    this.resolveMessage = resolveMessage;
  }


  public GroupsV2GroupMemberApplication resolveState(Integer resolveState) {
    this.resolveState = resolveState;
    return this;
  }

  /**
   * Get resolveState
   * @return resolveState
   */
  @javax.annotation.Nullable
  public Integer getResolveState() {
    return resolveState;
  }

  public void setResolveState(Integer resolveState) {
    this.resolveState = resolveState;
  }


  public GroupsV2GroupMemberApplication resolvedByMembershipId(Long resolvedByMembershipId) {
    this.resolvedByMembershipId = resolvedByMembershipId;
    return this;
  }

  /**
   * Get resolvedByMembershipId
   * @return resolvedByMembershipId
   */
  @javax.annotation.Nullable
  public Long getResolvedByMembershipId() {
    return resolvedByMembershipId;
  }

  public void setResolvedByMembershipId(Long resolvedByMembershipId) {
    this.resolvedByMembershipId = resolvedByMembershipId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupsV2GroupMemberApplication groupsV2GroupMemberApplication = (GroupsV2GroupMemberApplication) o;
    return Objects.equals(this.bungieNetUserInfo, groupsV2GroupMemberApplication.bungieNetUserInfo) &&
        Objects.equals(this.creationDate, groupsV2GroupMemberApplication.creationDate) &&
        Objects.equals(this.destinyUserInfo, groupsV2GroupMemberApplication.destinyUserInfo) &&
        Objects.equals(this.groupId, groupsV2GroupMemberApplication.groupId) &&
        Objects.equals(this.requestMessage, groupsV2GroupMemberApplication.requestMessage) &&
        Objects.equals(this.resolveDate, groupsV2GroupMemberApplication.resolveDate) &&
        Objects.equals(this.resolveMessage, groupsV2GroupMemberApplication.resolveMessage) &&
        Objects.equals(this.resolveState, groupsV2GroupMemberApplication.resolveState) &&
        Objects.equals(this.resolvedByMembershipId, groupsV2GroupMemberApplication.resolvedByMembershipId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bungieNetUserInfo, creationDate, destinyUserInfo, groupId, requestMessage, resolveDate, resolveMessage, resolveState, resolvedByMembershipId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupsV2GroupMemberApplication {\n");
    sb.append("    bungieNetUserInfo: ").append(toIndentedString(bungieNetUserInfo)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    destinyUserInfo: ").append(toIndentedString(destinyUserInfo)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    requestMessage: ").append(toIndentedString(requestMessage)).append("\n");
    sb.append("    resolveDate: ").append(toIndentedString(resolveDate)).append("\n");
    sb.append("    resolveMessage: ").append(toIndentedString(resolveMessage)).append("\n");
    sb.append("    resolveState: ").append(toIndentedString(resolveState)).append("\n");
    sb.append("    resolvedByMembershipId: ").append(toIndentedString(resolvedByMembershipId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bungieNetUserInfo");
    openapiFields.add("creationDate");
    openapiFields.add("destinyUserInfo");
    openapiFields.add("groupId");
    openapiFields.add("requestMessage");
    openapiFields.add("resolveDate");
    openapiFields.add("resolveMessage");
    openapiFields.add("resolveState");
    openapiFields.add("resolvedByMembershipId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GroupsV2GroupMemberApplication
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GroupsV2GroupMemberApplication.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GroupsV2GroupMemberApplication is not found in the empty JSON string", GroupsV2GroupMemberApplication.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GroupsV2GroupMemberApplication.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GroupsV2GroupMemberApplication` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bungieNetUserInfo`
      if (jsonObj.get("bungieNetUserInfo") != null && !jsonObj.get("bungieNetUserInfo").isJsonNull()) {
        UserUserInfoCard.validateJsonElement(jsonObj.get("bungieNetUserInfo"));
      }
      // validate the optional field `destinyUserInfo`
      if (jsonObj.get("destinyUserInfo") != null && !jsonObj.get("destinyUserInfo").isJsonNull()) {
        GroupsV2GroupUserInfoCard.validateJsonElement(jsonObj.get("destinyUserInfo"));
      }
      if ((jsonObj.get("requestMessage") != null && !jsonObj.get("requestMessage").isJsonNull()) && !jsonObj.get("requestMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestMessage").toString()));
      }
      if ((jsonObj.get("resolveMessage") != null && !jsonObj.get("resolveMessage").isJsonNull()) && !jsonObj.get("resolveMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resolveMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resolveMessage").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GroupsV2GroupMemberApplication.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GroupsV2GroupMemberApplication' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GroupsV2GroupMemberApplication> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GroupsV2GroupMemberApplication.class));

       return (TypeAdapter<T>) new TypeAdapter<GroupsV2GroupMemberApplication>() {
           @Override
           public void write(JsonWriter out, GroupsV2GroupMemberApplication value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GroupsV2GroupMemberApplication read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GroupsV2GroupMemberApplication given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GroupsV2GroupMemberApplication
   * @throws IOException if the JSON string is invalid with respect to GroupsV2GroupMemberApplication
   */
  public static GroupsV2GroupMemberApplication fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GroupsV2GroupMemberApplication.class);
  }

  /**
   * Convert an instance of GroupsV2GroupMemberApplication to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

