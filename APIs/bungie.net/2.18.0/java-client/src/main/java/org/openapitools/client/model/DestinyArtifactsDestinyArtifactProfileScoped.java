/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DestinyDestinyProgression;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a Seasonal Artifact and all data related to it for the requested Account.  It can be combined with Character-scoped data for a full picture of what a character has available/has chosen, or just these settings can be used for overview information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyArtifactsDestinyArtifactProfileScoped {
  public static final String SERIALIZED_NAME_ARTIFACT_HASH = "artifactHash";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_HASH)
  private Integer artifactHash;

  public static final String SERIALIZED_NAME_POINT_PROGRESSION = "pointProgression";
  @SerializedName(SERIALIZED_NAME_POINT_PROGRESSION)
  private DestinyDestinyProgression pointProgression;

  public static final String SERIALIZED_NAME_POINTS_ACQUIRED = "pointsAcquired";
  @SerializedName(SERIALIZED_NAME_POINTS_ACQUIRED)
  private Integer pointsAcquired;

  public static final String SERIALIZED_NAME_POWER_BONUS = "powerBonus";
  @SerializedName(SERIALIZED_NAME_POWER_BONUS)
  private Integer powerBonus;

  public static final String SERIALIZED_NAME_POWER_BONUS_PROGRESSION = "powerBonusProgression";
  @SerializedName(SERIALIZED_NAME_POWER_BONUS_PROGRESSION)
  private DestinyDestinyProgression powerBonusProgression;

  public DestinyArtifactsDestinyArtifactProfileScoped() {
  }

  public DestinyArtifactsDestinyArtifactProfileScoped artifactHash(Integer artifactHash) {
    this.artifactHash = artifactHash;
    return this;
  }

  /**
   * Get artifactHash
   * @return artifactHash
   */
  @javax.annotation.Nullable
  public Integer getArtifactHash() {
    return artifactHash;
  }

  public void setArtifactHash(Integer artifactHash) {
    this.artifactHash = artifactHash;
  }


  public DestinyArtifactsDestinyArtifactProfileScoped pointProgression(DestinyDestinyProgression pointProgression) {
    this.pointProgression = pointProgression;
    return this;
  }

  /**
   * Get pointProgression
   * @return pointProgression
   */
  @javax.annotation.Nullable
  public DestinyDestinyProgression getPointProgression() {
    return pointProgression;
  }

  public void setPointProgression(DestinyDestinyProgression pointProgression) {
    this.pointProgression = pointProgression;
  }


  public DestinyArtifactsDestinyArtifactProfileScoped pointsAcquired(Integer pointsAcquired) {
    this.pointsAcquired = pointsAcquired;
    return this;
  }

  /**
   * Get pointsAcquired
   * @return pointsAcquired
   */
  @javax.annotation.Nullable
  public Integer getPointsAcquired() {
    return pointsAcquired;
  }

  public void setPointsAcquired(Integer pointsAcquired) {
    this.pointsAcquired = pointsAcquired;
  }


  public DestinyArtifactsDestinyArtifactProfileScoped powerBonus(Integer powerBonus) {
    this.powerBonus = powerBonus;
    return this;
  }

  /**
   * Get powerBonus
   * @return powerBonus
   */
  @javax.annotation.Nullable
  public Integer getPowerBonus() {
    return powerBonus;
  }

  public void setPowerBonus(Integer powerBonus) {
    this.powerBonus = powerBonus;
  }


  public DestinyArtifactsDestinyArtifactProfileScoped powerBonusProgression(DestinyDestinyProgression powerBonusProgression) {
    this.powerBonusProgression = powerBonusProgression;
    return this;
  }

  /**
   * Get powerBonusProgression
   * @return powerBonusProgression
   */
  @javax.annotation.Nullable
  public DestinyDestinyProgression getPowerBonusProgression() {
    return powerBonusProgression;
  }

  public void setPowerBonusProgression(DestinyDestinyProgression powerBonusProgression) {
    this.powerBonusProgression = powerBonusProgression;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyArtifactsDestinyArtifactProfileScoped destinyArtifactsDestinyArtifactProfileScoped = (DestinyArtifactsDestinyArtifactProfileScoped) o;
    return Objects.equals(this.artifactHash, destinyArtifactsDestinyArtifactProfileScoped.artifactHash) &&
        Objects.equals(this.pointProgression, destinyArtifactsDestinyArtifactProfileScoped.pointProgression) &&
        Objects.equals(this.pointsAcquired, destinyArtifactsDestinyArtifactProfileScoped.pointsAcquired) &&
        Objects.equals(this.powerBonus, destinyArtifactsDestinyArtifactProfileScoped.powerBonus) &&
        Objects.equals(this.powerBonusProgression, destinyArtifactsDestinyArtifactProfileScoped.powerBonusProgression);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artifactHash, pointProgression, pointsAcquired, powerBonus, powerBonusProgression);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyArtifactsDestinyArtifactProfileScoped {\n");
    sb.append("    artifactHash: ").append(toIndentedString(artifactHash)).append("\n");
    sb.append("    pointProgression: ").append(toIndentedString(pointProgression)).append("\n");
    sb.append("    pointsAcquired: ").append(toIndentedString(pointsAcquired)).append("\n");
    sb.append("    powerBonus: ").append(toIndentedString(powerBonus)).append("\n");
    sb.append("    powerBonusProgression: ").append(toIndentedString(powerBonusProgression)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("artifactHash");
    openapiFields.add("pointProgression");
    openapiFields.add("pointsAcquired");
    openapiFields.add("powerBonus");
    openapiFields.add("powerBonusProgression");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyArtifactsDestinyArtifactProfileScoped
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyArtifactsDestinyArtifactProfileScoped.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyArtifactsDestinyArtifactProfileScoped is not found in the empty JSON string", DestinyArtifactsDestinyArtifactProfileScoped.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyArtifactsDestinyArtifactProfileScoped.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyArtifactsDestinyArtifactProfileScoped` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `pointProgression`
      if (jsonObj.get("pointProgression") != null && !jsonObj.get("pointProgression").isJsonNull()) {
        DestinyDestinyProgression.validateJsonElement(jsonObj.get("pointProgression"));
      }
      // validate the optional field `powerBonusProgression`
      if (jsonObj.get("powerBonusProgression") != null && !jsonObj.get("powerBonusProgression").isJsonNull()) {
        DestinyDestinyProgression.validateJsonElement(jsonObj.get("powerBonusProgression"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyArtifactsDestinyArtifactProfileScoped.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyArtifactsDestinyArtifactProfileScoped' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyArtifactsDestinyArtifactProfileScoped> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyArtifactsDestinyArtifactProfileScoped.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyArtifactsDestinyArtifactProfileScoped>() {
           @Override
           public void write(JsonWriter out, DestinyArtifactsDestinyArtifactProfileScoped value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyArtifactsDestinyArtifactProfileScoped read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyArtifactsDestinyArtifactProfileScoped given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyArtifactsDestinyArtifactProfileScoped
   * @throws IOException if the JSON string is invalid with respect to DestinyArtifactsDestinyArtifactProfileScoped
   */
  public static DestinyArtifactsDestinyArtifactProfileScoped fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyArtifactsDestinyArtifactProfileScoped.class);
  }

  /**
   * Convert an instance of DestinyArtifactsDestinyArtifactProfileScoped to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

