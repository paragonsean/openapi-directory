/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Some basic information about whether you can be joined, how many slots are left etc. Note that this can change quickly, so it may not actually be useful. But perhaps it will be in some use cases?
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyComponentsProfilesDestinyProfileTransitoryJoinability {
  public static final String SERIALIZED_NAME_CLOSED_REASONS = "closedReasons";
  @SerializedName(SERIALIZED_NAME_CLOSED_REASONS)
  private Integer closedReasons;

  public static final String SERIALIZED_NAME_OPEN_SLOTS = "openSlots";
  @SerializedName(SERIALIZED_NAME_OPEN_SLOTS)
  private Integer openSlots;

  public static final String SERIALIZED_NAME_PRIVACY_SETTING = "privacySetting";
  @SerializedName(SERIALIZED_NAME_PRIVACY_SETTING)
  private Integer privacySetting;

  public DestinyComponentsProfilesDestinyProfileTransitoryJoinability() {
  }

  public DestinyComponentsProfilesDestinyProfileTransitoryJoinability closedReasons(Integer closedReasons) {
    this.closedReasons = closedReasons;
    return this;
  }

  /**
   * Reasons why a person can&#39;t join this person&#39;s fireteam.
   * @return closedReasons
   */
  @javax.annotation.Nullable
  public Integer getClosedReasons() {
    return closedReasons;
  }

  public void setClosedReasons(Integer closedReasons) {
    this.closedReasons = closedReasons;
  }


  public DestinyComponentsProfilesDestinyProfileTransitoryJoinability openSlots(Integer openSlots) {
    this.openSlots = openSlots;
    return this;
  }

  /**
   * The number of slots still available on this person&#39;s fireteam.
   * @return openSlots
   */
  @javax.annotation.Nullable
  public Integer getOpenSlots() {
    return openSlots;
  }

  public void setOpenSlots(Integer openSlots) {
    this.openSlots = openSlots;
  }


  public DestinyComponentsProfilesDestinyProfileTransitoryJoinability privacySetting(Integer privacySetting) {
    this.privacySetting = privacySetting;
    return this;
  }

  /**
   * Who the person is currently allowing invites from.
   * @return privacySetting
   */
  @javax.annotation.Nullable
  public Integer getPrivacySetting() {
    return privacySetting;
  }

  public void setPrivacySetting(Integer privacySetting) {
    this.privacySetting = privacySetting;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyComponentsProfilesDestinyProfileTransitoryJoinability destinyComponentsProfilesDestinyProfileTransitoryJoinability = (DestinyComponentsProfilesDestinyProfileTransitoryJoinability) o;
    return Objects.equals(this.closedReasons, destinyComponentsProfilesDestinyProfileTransitoryJoinability.closedReasons) &&
        Objects.equals(this.openSlots, destinyComponentsProfilesDestinyProfileTransitoryJoinability.openSlots) &&
        Objects.equals(this.privacySetting, destinyComponentsProfilesDestinyProfileTransitoryJoinability.privacySetting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(closedReasons, openSlots, privacySetting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyComponentsProfilesDestinyProfileTransitoryJoinability {\n");
    sb.append("    closedReasons: ").append(toIndentedString(closedReasons)).append("\n");
    sb.append("    openSlots: ").append(toIndentedString(openSlots)).append("\n");
    sb.append("    privacySetting: ").append(toIndentedString(privacySetting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("closedReasons");
    openapiFields.add("openSlots");
    openapiFields.add("privacySetting");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyComponentsProfilesDestinyProfileTransitoryJoinability
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyComponentsProfilesDestinyProfileTransitoryJoinability.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyComponentsProfilesDestinyProfileTransitoryJoinability is not found in the empty JSON string", DestinyComponentsProfilesDestinyProfileTransitoryJoinability.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyComponentsProfilesDestinyProfileTransitoryJoinability.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyComponentsProfilesDestinyProfileTransitoryJoinability` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyComponentsProfilesDestinyProfileTransitoryJoinability.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyComponentsProfilesDestinyProfileTransitoryJoinability' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyComponentsProfilesDestinyProfileTransitoryJoinability> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyComponentsProfilesDestinyProfileTransitoryJoinability.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyComponentsProfilesDestinyProfileTransitoryJoinability>() {
           @Override
           public void write(JsonWriter out, DestinyComponentsProfilesDestinyProfileTransitoryJoinability value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyComponentsProfilesDestinyProfileTransitoryJoinability read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyComponentsProfilesDestinyProfileTransitoryJoinability given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyComponentsProfilesDestinyProfileTransitoryJoinability
   * @throws IOException if the JSON string is invalid with respect to DestinyComponentsProfilesDestinyProfileTransitoryJoinability
   */
  public static DestinyComponentsProfilesDestinyProfileTransitoryJoinability fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyComponentsProfilesDestinyProfileTransitoryJoinability.class);
  }

  /**
   * Convert an instance of DestinyComponentsProfilesDestinyProfileTransitoryJoinability to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

