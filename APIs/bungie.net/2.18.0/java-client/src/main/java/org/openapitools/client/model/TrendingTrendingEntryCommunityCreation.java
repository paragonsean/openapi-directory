/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TrendingTrendingEntryCommunityCreation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TrendingTrendingEntryCommunityCreation {
  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_AUTHOR_MEMBERSHIP_ID = "authorMembershipId";
  @SerializedName(SERIALIZED_NAME_AUTHOR_MEMBERSHIP_ID)
  private Long authorMembershipId;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private String media;

  public static final String SERIALIZED_NAME_POST_ID = "postId";
  @SerializedName(SERIALIZED_NAME_POST_ID)
  private Long postId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_UPVOTES = "upvotes";
  @SerializedName(SERIALIZED_NAME_UPVOTES)
  private Integer upvotes;

  public TrendingTrendingEntryCommunityCreation() {
  }

  public TrendingTrendingEntryCommunityCreation author(String author) {
    this.author = author;
    return this;
  }

  /**
   * Get author
   * @return author
   */
  @javax.annotation.Nullable
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  public TrendingTrendingEntryCommunityCreation authorMembershipId(Long authorMembershipId) {
    this.authorMembershipId = authorMembershipId;
    return this;
  }

  /**
   * Get authorMembershipId
   * @return authorMembershipId
   */
  @javax.annotation.Nullable
  public Long getAuthorMembershipId() {
    return authorMembershipId;
  }

  public void setAuthorMembershipId(Long authorMembershipId) {
    this.authorMembershipId = authorMembershipId;
  }


  public TrendingTrendingEntryCommunityCreation body(String body) {
    this.body = body;
    return this;
  }

  /**
   * Get body
   * @return body
   */
  @javax.annotation.Nullable
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  public TrendingTrendingEntryCommunityCreation media(String media) {
    this.media = media;
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @javax.annotation.Nullable
  public String getMedia() {
    return media;
  }

  public void setMedia(String media) {
    this.media = media;
  }


  public TrendingTrendingEntryCommunityCreation postId(Long postId) {
    this.postId = postId;
    return this;
  }

  /**
   * Get postId
   * @return postId
   */
  @javax.annotation.Nullable
  public Long getPostId() {
    return postId;
  }

  public void setPostId(Long postId) {
    this.postId = postId;
  }


  public TrendingTrendingEntryCommunityCreation title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public TrendingTrendingEntryCommunityCreation upvotes(Integer upvotes) {
    this.upvotes = upvotes;
    return this;
  }

  /**
   * Get upvotes
   * @return upvotes
   */
  @javax.annotation.Nullable
  public Integer getUpvotes() {
    return upvotes;
  }

  public void setUpvotes(Integer upvotes) {
    this.upvotes = upvotes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrendingTrendingEntryCommunityCreation trendingTrendingEntryCommunityCreation = (TrendingTrendingEntryCommunityCreation) o;
    return Objects.equals(this.author, trendingTrendingEntryCommunityCreation.author) &&
        Objects.equals(this.authorMembershipId, trendingTrendingEntryCommunityCreation.authorMembershipId) &&
        Objects.equals(this.body, trendingTrendingEntryCommunityCreation.body) &&
        Objects.equals(this.media, trendingTrendingEntryCommunityCreation.media) &&
        Objects.equals(this.postId, trendingTrendingEntryCommunityCreation.postId) &&
        Objects.equals(this.title, trendingTrendingEntryCommunityCreation.title) &&
        Objects.equals(this.upvotes, trendingTrendingEntryCommunityCreation.upvotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, authorMembershipId, body, media, postId, title, upvotes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrendingTrendingEntryCommunityCreation {\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    authorMembershipId: ").append(toIndentedString(authorMembershipId)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    postId: ").append(toIndentedString(postId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    upvotes: ").append(toIndentedString(upvotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("author");
    openapiFields.add("authorMembershipId");
    openapiFields.add("body");
    openapiFields.add("media");
    openapiFields.add("postId");
    openapiFields.add("title");
    openapiFields.add("upvotes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TrendingTrendingEntryCommunityCreation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TrendingTrendingEntryCommunityCreation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TrendingTrendingEntryCommunityCreation is not found in the empty JSON string", TrendingTrendingEntryCommunityCreation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TrendingTrendingEntryCommunityCreation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TrendingTrendingEntryCommunityCreation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) && !jsonObj.get("author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("author").toString()));
      }
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if ((jsonObj.get("media") != null && !jsonObj.get("media").isJsonNull()) && !jsonObj.get("media").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `media` to be a primitive type in the JSON string but got `%s`", jsonObj.get("media").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TrendingTrendingEntryCommunityCreation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TrendingTrendingEntryCommunityCreation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TrendingTrendingEntryCommunityCreation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TrendingTrendingEntryCommunityCreation.class));

       return (TypeAdapter<T>) new TypeAdapter<TrendingTrendingEntryCommunityCreation>() {
           @Override
           public void write(JsonWriter out, TrendingTrendingEntryCommunityCreation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TrendingTrendingEntryCommunityCreation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TrendingTrendingEntryCommunityCreation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TrendingTrendingEntryCommunityCreation
   * @throws IOException if the JSON string is invalid with respect to TrendingTrendingEntryCommunityCreation
   */
  public static TrendingTrendingEntryCommunityCreation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TrendingTrendingEntryCommunityCreation.class);
  }

  /**
   * Convert an instance of TrendingTrendingEntryCommunityCreation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

