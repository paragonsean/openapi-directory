/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a \&quot;raw\&quot; investment stat, before calculated stats are calculated and before any DestinyStatGroupDefinition is applied to transform the stat into something closer to what you see in-game.  Because these won&#39;t match what you see in-game, consider carefully whether you really want to use these stats. I have left them in case someone can do something useful or interesting with the pre-processed statistics.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsDestinyItemInvestmentStatDefinition {
  public static final String SERIALIZED_NAME_IS_CONDITIONALLY_ACTIVE = "isConditionallyActive";
  @SerializedName(SERIALIZED_NAME_IS_CONDITIONALLY_ACTIVE)
  private Boolean isConditionallyActive;

  public static final String SERIALIZED_NAME_STAT_TYPE_HASH = "statTypeHash";
  @SerializedName(SERIALIZED_NAME_STAT_TYPE_HASH)
  private Integer statTypeHash;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Integer value;

  public DestinyDefinitionsDestinyItemInvestmentStatDefinition() {
  }

  public DestinyDefinitionsDestinyItemInvestmentStatDefinition isConditionallyActive(Boolean isConditionallyActive) {
    this.isConditionallyActive = isConditionallyActive;
    return this;
  }

  /**
   * If this is true, the stat will only be applied on the item in certain game state conditions, and we can&#39;t know statically whether or not this stat will be applied. Check the \&quot;live\&quot; API data instead for whether this value is being applied on a specific instance of the item in question, and you can use this to decide whether you want to show the stat on the generic view of the item, or whether you want to show some kind of caveat or warning about the stat value being conditional on game state.
   * @return isConditionallyActive
   */
  @javax.annotation.Nullable
  public Boolean getIsConditionallyActive() {
    return isConditionallyActive;
  }

  public void setIsConditionallyActive(Boolean isConditionallyActive) {
    this.isConditionallyActive = isConditionallyActive;
  }


  public DestinyDefinitionsDestinyItemInvestmentStatDefinition statTypeHash(Integer statTypeHash) {
    this.statTypeHash = statTypeHash;
    return this;
  }

  /**
   * The hash identifier for the DestinyStatDefinition defining this stat.
   * @return statTypeHash
   */
  @javax.annotation.Nullable
  public Integer getStatTypeHash() {
    return statTypeHash;
  }

  public void setStatTypeHash(Integer statTypeHash) {
    this.statTypeHash = statTypeHash;
  }


  public DestinyDefinitionsDestinyItemInvestmentStatDefinition value(Integer value) {
    this.value = value;
    return this;
  }

  /**
   * The raw \&quot;Investment\&quot; value for the stat, before transformations are performed to turn this raw stat into stats that are displayed in the game UI.
   * @return value
   */
  @javax.annotation.Nullable
  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyItemInvestmentStatDefinition destinyDefinitionsDestinyItemInvestmentStatDefinition = (DestinyDefinitionsDestinyItemInvestmentStatDefinition) o;
    return Objects.equals(this.isConditionallyActive, destinyDefinitionsDestinyItemInvestmentStatDefinition.isConditionallyActive) &&
        Objects.equals(this.statTypeHash, destinyDefinitionsDestinyItemInvestmentStatDefinition.statTypeHash) &&
        Objects.equals(this.value, destinyDefinitionsDestinyItemInvestmentStatDefinition.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isConditionallyActive, statTypeHash, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyItemInvestmentStatDefinition {\n");
    sb.append("    isConditionallyActive: ").append(toIndentedString(isConditionallyActive)).append("\n");
    sb.append("    statTypeHash: ").append(toIndentedString(statTypeHash)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("isConditionallyActive");
    openapiFields.add("statTypeHash");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsDestinyItemInvestmentStatDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsDestinyItemInvestmentStatDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsDestinyItemInvestmentStatDefinition is not found in the empty JSON string", DestinyDefinitionsDestinyItemInvestmentStatDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsDestinyItemInvestmentStatDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsDestinyItemInvestmentStatDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsDestinyItemInvestmentStatDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsDestinyItemInvestmentStatDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsDestinyItemInvestmentStatDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsDestinyItemInvestmentStatDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsDestinyItemInvestmentStatDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsDestinyItemInvestmentStatDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsDestinyItemInvestmentStatDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsDestinyItemInvestmentStatDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsDestinyItemInvestmentStatDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsDestinyItemInvestmentStatDefinition
   */
  public static DestinyDefinitionsDestinyItemInvestmentStatDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsDestinyItemInvestmentStatDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsDestinyItemInvestmentStatDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

