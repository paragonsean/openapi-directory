/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * If the Milestone or a component has vendors whose inventories could/should be displayed that are relevant to it, this will return the vendor in question.   It also contains information we need to determine whether that vendor is actually relevant at the moment, given the user&#39;s current state.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition {
  public static final String SERIALIZED_NAME_VENDOR_HASH = "vendorHash";
  @SerializedName(SERIALIZED_NAME_VENDOR_HASH)
  private Integer vendorHash;

  public DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition() {
  }

  public DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition vendorHash(Integer vendorHash) {
    this.vendorHash = vendorHash;
    return this;
  }

  /**
   * The hash of the vendor whose wares should be shown as associated with the Milestone.
   * @return vendorHash
   */
  @javax.annotation.Nullable
  public Integer getVendorHash() {
    return vendorHash;
  }

  public void setVendorHash(Integer vendorHash) {
    this.vendorHash = vendorHash;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition destinyDefinitionsMilestonesDestinyMilestoneVendorDefinition = (DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition) o;
    return Objects.equals(this.vendorHash, destinyDefinitionsMilestonesDestinyMilestoneVendorDefinition.vendorHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vendorHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition {\n");
    sb.append("    vendorHash: ").append(toIndentedString(vendorHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("vendorHash");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition is not found in the empty JSON string", DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition
   */
  public static DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

