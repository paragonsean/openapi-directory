/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.DestinyComponentsRecordsDestinyRecordComponent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DestinyComponentsRecordsDestinyProfileRecordsComponent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyComponentsRecordsDestinyProfileRecordsComponent {
  public static final String SERIALIZED_NAME_ACTIVE_SCORE = "activeScore";
  @SerializedName(SERIALIZED_NAME_ACTIVE_SCORE)
  private Integer activeScore;

  public static final String SERIALIZED_NAME_LEGACY_SCORE = "legacyScore";
  @SerializedName(SERIALIZED_NAME_LEGACY_SCORE)
  private Integer legacyScore;

  public static final String SERIALIZED_NAME_LIFETIME_SCORE = "lifetimeScore";
  @SerializedName(SERIALIZED_NAME_LIFETIME_SCORE)
  private Integer lifetimeScore;

  public static final String SERIALIZED_NAME_RECORD_CATEGORIES_ROOT_NODE_HASH = "recordCategoriesRootNodeHash";
  @SerializedName(SERIALIZED_NAME_RECORD_CATEGORIES_ROOT_NODE_HASH)
  private Integer recordCategoriesRootNodeHash;

  public static final String SERIALIZED_NAME_RECORD_SEALS_ROOT_NODE_HASH = "recordSealsRootNodeHash";
  @SerializedName(SERIALIZED_NAME_RECORD_SEALS_ROOT_NODE_HASH)
  private Integer recordSealsRootNodeHash;

  public static final String SERIALIZED_NAME_RECORDS = "records";
  @SerializedName(SERIALIZED_NAME_RECORDS)
  private Map<String, DestinyComponentsRecordsDestinyRecordComponent> records = new HashMap<>();

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Integer score;

  public static final String SERIALIZED_NAME_TRACKED_RECORD_HASH = "trackedRecordHash";
  @SerializedName(SERIALIZED_NAME_TRACKED_RECORD_HASH)
  private Integer trackedRecordHash;

  public DestinyComponentsRecordsDestinyProfileRecordsComponent() {
  }

  public DestinyComponentsRecordsDestinyProfileRecordsComponent activeScore(Integer activeScore) {
    this.activeScore = activeScore;
    return this;
  }

  /**
   * Your &#39;active&#39; Triumphs score.
   * @return activeScore
   */
  @javax.annotation.Nullable
  public Integer getActiveScore() {
    return activeScore;
  }

  public void setActiveScore(Integer activeScore) {
    this.activeScore = activeScore;
  }


  public DestinyComponentsRecordsDestinyProfileRecordsComponent legacyScore(Integer legacyScore) {
    this.legacyScore = legacyScore;
    return this;
  }

  /**
   * Your &#39;legacy&#39; Triumphs score.
   * @return legacyScore
   */
  @javax.annotation.Nullable
  public Integer getLegacyScore() {
    return legacyScore;
  }

  public void setLegacyScore(Integer legacyScore) {
    this.legacyScore = legacyScore;
  }


  public DestinyComponentsRecordsDestinyProfileRecordsComponent lifetimeScore(Integer lifetimeScore) {
    this.lifetimeScore = lifetimeScore;
    return this;
  }

  /**
   * Your &#39;lifetime&#39; Triumphs score.
   * @return lifetimeScore
   */
  @javax.annotation.Nullable
  public Integer getLifetimeScore() {
    return lifetimeScore;
  }

  public void setLifetimeScore(Integer lifetimeScore) {
    this.lifetimeScore = lifetimeScore;
  }


  public DestinyComponentsRecordsDestinyProfileRecordsComponent recordCategoriesRootNodeHash(Integer recordCategoriesRootNodeHash) {
    this.recordCategoriesRootNodeHash = recordCategoriesRootNodeHash;
    return this;
  }

  /**
   * The hash for the root presentation node definition of Triumph categories.
   * @return recordCategoriesRootNodeHash
   */
  @javax.annotation.Nullable
  public Integer getRecordCategoriesRootNodeHash() {
    return recordCategoriesRootNodeHash;
  }

  public void setRecordCategoriesRootNodeHash(Integer recordCategoriesRootNodeHash) {
    this.recordCategoriesRootNodeHash = recordCategoriesRootNodeHash;
  }


  public DestinyComponentsRecordsDestinyProfileRecordsComponent recordSealsRootNodeHash(Integer recordSealsRootNodeHash) {
    this.recordSealsRootNodeHash = recordSealsRootNodeHash;
    return this;
  }

  /**
   * The hash for the root presentation node definition of Triumph Seals.
   * @return recordSealsRootNodeHash
   */
  @javax.annotation.Nullable
  public Integer getRecordSealsRootNodeHash() {
    return recordSealsRootNodeHash;
  }

  public void setRecordSealsRootNodeHash(Integer recordSealsRootNodeHash) {
    this.recordSealsRootNodeHash = recordSealsRootNodeHash;
  }


  public DestinyComponentsRecordsDestinyProfileRecordsComponent records(Map<String, DestinyComponentsRecordsDestinyRecordComponent> records) {
    this.records = records;
    return this;
  }

  public DestinyComponentsRecordsDestinyProfileRecordsComponent putRecordsItem(String key, DestinyComponentsRecordsDestinyRecordComponent recordsItem) {
    if (this.records == null) {
      this.records = new HashMap<>();
    }
    this.records.put(key, recordsItem);
    return this;
  }

  /**
   * Get records
   * @return records
   */
  @javax.annotation.Nullable
  public Map<String, DestinyComponentsRecordsDestinyRecordComponent> getRecords() {
    return records;
  }

  public void setRecords(Map<String, DestinyComponentsRecordsDestinyRecordComponent> records) {
    this.records = records;
  }


  public DestinyComponentsRecordsDestinyProfileRecordsComponent score(Integer score) {
    this.score = score;
    return this;
  }

  /**
   * Your &#39;active&#39; Triumphs score, maintained for backwards compatibility.
   * @return score
   */
  @javax.annotation.Nullable
  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }


  public DestinyComponentsRecordsDestinyProfileRecordsComponent trackedRecordHash(Integer trackedRecordHash) {
    this.trackedRecordHash = trackedRecordHash;
    return this;
  }

  /**
   * If this profile is tracking a record, this is the hash identifier of the record it is tracking.
   * @return trackedRecordHash
   */
  @javax.annotation.Nullable
  public Integer getTrackedRecordHash() {
    return trackedRecordHash;
  }

  public void setTrackedRecordHash(Integer trackedRecordHash) {
    this.trackedRecordHash = trackedRecordHash;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyComponentsRecordsDestinyProfileRecordsComponent destinyComponentsRecordsDestinyProfileRecordsComponent = (DestinyComponentsRecordsDestinyProfileRecordsComponent) o;
    return Objects.equals(this.activeScore, destinyComponentsRecordsDestinyProfileRecordsComponent.activeScore) &&
        Objects.equals(this.legacyScore, destinyComponentsRecordsDestinyProfileRecordsComponent.legacyScore) &&
        Objects.equals(this.lifetimeScore, destinyComponentsRecordsDestinyProfileRecordsComponent.lifetimeScore) &&
        Objects.equals(this.recordCategoriesRootNodeHash, destinyComponentsRecordsDestinyProfileRecordsComponent.recordCategoriesRootNodeHash) &&
        Objects.equals(this.recordSealsRootNodeHash, destinyComponentsRecordsDestinyProfileRecordsComponent.recordSealsRootNodeHash) &&
        Objects.equals(this.records, destinyComponentsRecordsDestinyProfileRecordsComponent.records) &&
        Objects.equals(this.score, destinyComponentsRecordsDestinyProfileRecordsComponent.score) &&
        Objects.equals(this.trackedRecordHash, destinyComponentsRecordsDestinyProfileRecordsComponent.trackedRecordHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeScore, legacyScore, lifetimeScore, recordCategoriesRootNodeHash, recordSealsRootNodeHash, records, score, trackedRecordHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyComponentsRecordsDestinyProfileRecordsComponent {\n");
    sb.append("    activeScore: ").append(toIndentedString(activeScore)).append("\n");
    sb.append("    legacyScore: ").append(toIndentedString(legacyScore)).append("\n");
    sb.append("    lifetimeScore: ").append(toIndentedString(lifetimeScore)).append("\n");
    sb.append("    recordCategoriesRootNodeHash: ").append(toIndentedString(recordCategoriesRootNodeHash)).append("\n");
    sb.append("    recordSealsRootNodeHash: ").append(toIndentedString(recordSealsRootNodeHash)).append("\n");
    sb.append("    records: ").append(toIndentedString(records)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    trackedRecordHash: ").append(toIndentedString(trackedRecordHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activeScore");
    openapiFields.add("legacyScore");
    openapiFields.add("lifetimeScore");
    openapiFields.add("recordCategoriesRootNodeHash");
    openapiFields.add("recordSealsRootNodeHash");
    openapiFields.add("records");
    openapiFields.add("score");
    openapiFields.add("trackedRecordHash");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyComponentsRecordsDestinyProfileRecordsComponent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyComponentsRecordsDestinyProfileRecordsComponent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyComponentsRecordsDestinyProfileRecordsComponent is not found in the empty JSON string", DestinyComponentsRecordsDestinyProfileRecordsComponent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyComponentsRecordsDestinyProfileRecordsComponent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyComponentsRecordsDestinyProfileRecordsComponent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyComponentsRecordsDestinyProfileRecordsComponent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyComponentsRecordsDestinyProfileRecordsComponent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyComponentsRecordsDestinyProfileRecordsComponent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyComponentsRecordsDestinyProfileRecordsComponent.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyComponentsRecordsDestinyProfileRecordsComponent>() {
           @Override
           public void write(JsonWriter out, DestinyComponentsRecordsDestinyProfileRecordsComponent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyComponentsRecordsDestinyProfileRecordsComponent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyComponentsRecordsDestinyProfileRecordsComponent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyComponentsRecordsDestinyProfileRecordsComponent
   * @throws IOException if the JSON string is invalid with respect to DestinyComponentsRecordsDestinyProfileRecordsComponent
   */
  public static DestinyComponentsRecordsDestinyProfileRecordsComponent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyComponentsRecordsDestinyProfileRecordsComponent.class);
  }

  /**
   * Convert an instance of DestinyComponentsRecordsDestinyProfileRecordsComponent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

