/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DestinyMilestonesDestinyMilestoneContent;
import org.openapitools.client.model.DestinyMilestonesDestinyPublicMilestone;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TrendingTrendingEntryDestinyRitual
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TrendingTrendingEntryDestinyRitual {
  public static final String SERIALIZED_NAME_DATE_END = "dateEnd";
  @SerializedName(SERIALIZED_NAME_DATE_END)
  private OffsetDateTime dateEnd;

  public static final String SERIALIZED_NAME_DATE_START = "dateStart";
  @SerializedName(SERIALIZED_NAME_DATE_START)
  private OffsetDateTime dateStart;

  public static final String SERIALIZED_NAME_EVENT_CONTENT = "eventContent";
  @SerializedName(SERIALIZED_NAME_EVENT_CONTENT)
  private DestinyMilestonesDestinyMilestoneContent eventContent;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  private String icon;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_MILESTONE_DETAILS = "milestoneDetails";
  @SerializedName(SERIALIZED_NAME_MILESTONE_DETAILS)
  private DestinyMilestonesDestinyPublicMilestone milestoneDetails;

  public static final String SERIALIZED_NAME_SUBTITLE = "subtitle";
  @SerializedName(SERIALIZED_NAME_SUBTITLE)
  private String subtitle;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public TrendingTrendingEntryDestinyRitual() {
  }

  public TrendingTrendingEntryDestinyRitual dateEnd(OffsetDateTime dateEnd) {
    this.dateEnd = dateEnd;
    return this;
  }

  /**
   * Get dateEnd
   * @return dateEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateEnd() {
    return dateEnd;
  }

  public void setDateEnd(OffsetDateTime dateEnd) {
    this.dateEnd = dateEnd;
  }


  public TrendingTrendingEntryDestinyRitual dateStart(OffsetDateTime dateStart) {
    this.dateStart = dateStart;
    return this;
  }

  /**
   * Get dateStart
   * @return dateStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateStart() {
    return dateStart;
  }

  public void setDateStart(OffsetDateTime dateStart) {
    this.dateStart = dateStart;
  }


  public TrendingTrendingEntryDestinyRitual eventContent(DestinyMilestonesDestinyMilestoneContent eventContent) {
    this.eventContent = eventContent;
    return this;
  }

  /**
   * A destiny event will not necessarily have milestone \&quot;custom content\&quot;, but if it does the details will be here.
   * @return eventContent
   */
  @javax.annotation.Nullable
  public DestinyMilestonesDestinyMilestoneContent getEventContent() {
    return eventContent;
  }

  public void setEventContent(DestinyMilestonesDestinyMilestoneContent eventContent) {
    this.eventContent = eventContent;
  }


  public TrendingTrendingEntryDestinyRitual icon(String icon) {
    this.icon = icon;
    return this;
  }

  /**
   * Get icon
   * @return icon
   */
  @javax.annotation.Nullable
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }


  public TrendingTrendingEntryDestinyRitual image(String image) {
    this.image = image;
    return this;
  }

  /**
   * Get image
   * @return image
   */
  @javax.annotation.Nullable
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }


  public TrendingTrendingEntryDestinyRitual milestoneDetails(DestinyMilestonesDestinyPublicMilestone milestoneDetails) {
    this.milestoneDetails = milestoneDetails;
    return this;
  }

  /**
   * A destiny event does not necessarily have a related Milestone, but if it does the details will be returned here.
   * @return milestoneDetails
   */
  @javax.annotation.Nullable
  public DestinyMilestonesDestinyPublicMilestone getMilestoneDetails() {
    return milestoneDetails;
  }

  public void setMilestoneDetails(DestinyMilestonesDestinyPublicMilestone milestoneDetails) {
    this.milestoneDetails = milestoneDetails;
  }


  public TrendingTrendingEntryDestinyRitual subtitle(String subtitle) {
    this.subtitle = subtitle;
    return this;
  }

  /**
   * Get subtitle
   * @return subtitle
   */
  @javax.annotation.Nullable
  public String getSubtitle() {
    return subtitle;
  }

  public void setSubtitle(String subtitle) {
    this.subtitle = subtitle;
  }


  public TrendingTrendingEntryDestinyRitual title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrendingTrendingEntryDestinyRitual trendingTrendingEntryDestinyRitual = (TrendingTrendingEntryDestinyRitual) o;
    return Objects.equals(this.dateEnd, trendingTrendingEntryDestinyRitual.dateEnd) &&
        Objects.equals(this.dateStart, trendingTrendingEntryDestinyRitual.dateStart) &&
        Objects.equals(this.eventContent, trendingTrendingEntryDestinyRitual.eventContent) &&
        Objects.equals(this.icon, trendingTrendingEntryDestinyRitual.icon) &&
        Objects.equals(this.image, trendingTrendingEntryDestinyRitual.image) &&
        Objects.equals(this.milestoneDetails, trendingTrendingEntryDestinyRitual.milestoneDetails) &&
        Objects.equals(this.subtitle, trendingTrendingEntryDestinyRitual.subtitle) &&
        Objects.equals(this.title, trendingTrendingEntryDestinyRitual.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateEnd, dateStart, eventContent, icon, image, milestoneDetails, subtitle, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrendingTrendingEntryDestinyRitual {\n");
    sb.append("    dateEnd: ").append(toIndentedString(dateEnd)).append("\n");
    sb.append("    dateStart: ").append(toIndentedString(dateStart)).append("\n");
    sb.append("    eventContent: ").append(toIndentedString(eventContent)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    milestoneDetails: ").append(toIndentedString(milestoneDetails)).append("\n");
    sb.append("    subtitle: ").append(toIndentedString(subtitle)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dateEnd");
    openapiFields.add("dateStart");
    openapiFields.add("eventContent");
    openapiFields.add("icon");
    openapiFields.add("image");
    openapiFields.add("milestoneDetails");
    openapiFields.add("subtitle");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TrendingTrendingEntryDestinyRitual
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TrendingTrendingEntryDestinyRitual.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TrendingTrendingEntryDestinyRitual is not found in the empty JSON string", TrendingTrendingEntryDestinyRitual.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TrendingTrendingEntryDestinyRitual.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TrendingTrendingEntryDestinyRitual` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `eventContent`
      if (jsonObj.get("eventContent") != null && !jsonObj.get("eventContent").isJsonNull()) {
        DestinyMilestonesDestinyMilestoneContent.validateJsonElement(jsonObj.get("eventContent"));
      }
      if ((jsonObj.get("icon") != null && !jsonObj.get("icon").isJsonNull()) && !jsonObj.get("icon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icon").toString()));
      }
      if ((jsonObj.get("image") != null && !jsonObj.get("image").isJsonNull()) && !jsonObj.get("image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image").toString()));
      }
      // validate the optional field `milestoneDetails`
      if (jsonObj.get("milestoneDetails") != null && !jsonObj.get("milestoneDetails").isJsonNull()) {
        DestinyMilestonesDestinyPublicMilestone.validateJsonElement(jsonObj.get("milestoneDetails"));
      }
      if ((jsonObj.get("subtitle") != null && !jsonObj.get("subtitle").isJsonNull()) && !jsonObj.get("subtitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtitle").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TrendingTrendingEntryDestinyRitual.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TrendingTrendingEntryDestinyRitual' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TrendingTrendingEntryDestinyRitual> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TrendingTrendingEntryDestinyRitual.class));

       return (TypeAdapter<T>) new TypeAdapter<TrendingTrendingEntryDestinyRitual>() {
           @Override
           public void write(JsonWriter out, TrendingTrendingEntryDestinyRitual value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TrendingTrendingEntryDestinyRitual read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TrendingTrendingEntryDestinyRitual given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TrendingTrendingEntryDestinyRitual
   * @throws IOException if the JSON string is invalid with respect to TrendingTrendingEntryDestinyRitual
   */
  public static TrendingTrendingEntryDestinyRitual fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TrendingTrendingEntryDestinyRitual.class);
  }

  /**
   * Convert an instance of TrendingTrendingEntryDestinyRitual to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

