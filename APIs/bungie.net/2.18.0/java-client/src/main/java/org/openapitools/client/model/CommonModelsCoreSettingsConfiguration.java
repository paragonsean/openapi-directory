/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CommonModelsCoreSetting;
import org.openapitools.client.model.CommonModelsCoreSystem;
import org.openapitools.client.model.CommonModelsDestiny2CoreSettings;
import org.openapitools.client.model.UserEmailSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CommonModelsCoreSettingsConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CommonModelsCoreSettingsConfiguration {
  public static final String SERIALIZED_NAME_CLAN_BANNER_DECAL_COLORS = "clanBannerDecalColors";
  @SerializedName(SERIALIZED_NAME_CLAN_BANNER_DECAL_COLORS)
  private List<CommonModelsCoreSetting> clanBannerDecalColors = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLAN_BANNER_DECALS = "clanBannerDecals";
  @SerializedName(SERIALIZED_NAME_CLAN_BANNER_DECALS)
  private List<CommonModelsCoreSetting> clanBannerDecals = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLAN_BANNER_GONFALON_COLORS = "clanBannerGonfalonColors";
  @SerializedName(SERIALIZED_NAME_CLAN_BANNER_GONFALON_COLORS)
  private List<CommonModelsCoreSetting> clanBannerGonfalonColors = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLAN_BANNER_GONFALON_DETAIL_COLORS = "clanBannerGonfalonDetailColors";
  @SerializedName(SERIALIZED_NAME_CLAN_BANNER_GONFALON_DETAIL_COLORS)
  private List<CommonModelsCoreSetting> clanBannerGonfalonDetailColors = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLAN_BANNER_GONFALON_DETAILS = "clanBannerGonfalonDetails";
  @SerializedName(SERIALIZED_NAME_CLAN_BANNER_GONFALON_DETAILS)
  private List<CommonModelsCoreSetting> clanBannerGonfalonDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLAN_BANNER_GONFALONS = "clanBannerGonfalons";
  @SerializedName(SERIALIZED_NAME_CLAN_BANNER_GONFALONS)
  private List<CommonModelsCoreSetting> clanBannerGonfalons = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLAN_BANNER_STANDARDS = "clanBannerStandards";
  @SerializedName(SERIALIZED_NAME_CLAN_BANNER_STANDARDS)
  private List<CommonModelsCoreSetting> clanBannerStandards = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_GROUP_THEME = "defaultGroupTheme";
  @SerializedName(SERIALIZED_NAME_DEFAULT_GROUP_THEME)
  private CommonModelsCoreSetting defaultGroupTheme;

  public static final String SERIALIZED_NAME_DESTINY2_CORE_SETTINGS = "destiny2CoreSettings";
  @SerializedName(SERIALIZED_NAME_DESTINY2_CORE_SETTINGS)
  private CommonModelsDestiny2CoreSettings destiny2CoreSettings;

  public static final String SERIALIZED_NAME_DESTINY_MEMBERSHIP_TYPES = "destinyMembershipTypes";
  @SerializedName(SERIALIZED_NAME_DESTINY_MEMBERSHIP_TYPES)
  private List<CommonModelsCoreSetting> destinyMembershipTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAIL_SETTINGS = "emailSettings";
  @SerializedName(SERIALIZED_NAME_EMAIL_SETTINGS)
  private UserEmailSettings emailSettings;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private String environment;

  public static final String SERIALIZED_NAME_FIRETEAM_ACTIVITIES = "fireteamActivities";
  @SerializedName(SERIALIZED_NAME_FIRETEAM_ACTIVITIES)
  private List<CommonModelsCoreSetting> fireteamActivities = new ArrayList<>();

  public static final String SERIALIZED_NAME_FORUM_CATEGORIES = "forumCategories";
  @SerializedName(SERIALIZED_NAME_FORUM_CATEGORIES)
  private List<CommonModelsCoreSetting> forumCategories = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUP_AVATARS = "groupAvatars";
  @SerializedName(SERIALIZED_NAME_GROUP_AVATARS)
  private List<CommonModelsCoreSetting> groupAvatars = new ArrayList<>();

  public static final String SERIALIZED_NAME_IGNORE_REASONS = "ignoreReasons";
  @SerializedName(SERIALIZED_NAME_IGNORE_REASONS)
  private List<CommonModelsCoreSetting> ignoreReasons = new ArrayList<>();

  public static final String SERIALIZED_NAME_RECRUITMENT_ACTIVITIES = "recruitmentActivities";
  @SerializedName(SERIALIZED_NAME_RECRUITMENT_ACTIVITIES)
  private List<CommonModelsCoreSetting> recruitmentActivities = new ArrayList<>();

  public static final String SERIALIZED_NAME_RECRUITMENT_MISC_TAGS = "recruitmentMiscTags";
  @SerializedName(SERIALIZED_NAME_RECRUITMENT_MISC_TAGS)
  private List<CommonModelsCoreSetting> recruitmentMiscTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_RECRUITMENT_PLATFORM_TAGS = "recruitmentPlatformTags";
  @SerializedName(SERIALIZED_NAME_RECRUITMENT_PLATFORM_TAGS)
  private List<CommonModelsCoreSetting> recruitmentPlatformTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYSTEM_CONTENT_LOCALES = "systemContentLocales";
  @SerializedName(SERIALIZED_NAME_SYSTEM_CONTENT_LOCALES)
  private List<CommonModelsCoreSetting> systemContentLocales = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYSTEMS = "systems";
  @SerializedName(SERIALIZED_NAME_SYSTEMS)
  private Map<String, CommonModelsCoreSystem> systems = new HashMap<>();

  public static final String SERIALIZED_NAME_USER_CONTENT_LOCALES = "userContentLocales";
  @SerializedName(SERIALIZED_NAME_USER_CONTENT_LOCALES)
  private List<CommonModelsCoreSetting> userContentLocales = new ArrayList<>();

  public CommonModelsCoreSettingsConfiguration() {
  }

  public CommonModelsCoreSettingsConfiguration clanBannerDecalColors(List<CommonModelsCoreSetting> clanBannerDecalColors) {
    this.clanBannerDecalColors = clanBannerDecalColors;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addClanBannerDecalColorsItem(CommonModelsCoreSetting clanBannerDecalColorsItem) {
    if (this.clanBannerDecalColors == null) {
      this.clanBannerDecalColors = new ArrayList<>();
    }
    this.clanBannerDecalColors.add(clanBannerDecalColorsItem);
    return this;
  }

  /**
   * Get clanBannerDecalColors
   * @return clanBannerDecalColors
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getClanBannerDecalColors() {
    return clanBannerDecalColors;
  }

  public void setClanBannerDecalColors(List<CommonModelsCoreSetting> clanBannerDecalColors) {
    this.clanBannerDecalColors = clanBannerDecalColors;
  }


  public CommonModelsCoreSettingsConfiguration clanBannerDecals(List<CommonModelsCoreSetting> clanBannerDecals) {
    this.clanBannerDecals = clanBannerDecals;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addClanBannerDecalsItem(CommonModelsCoreSetting clanBannerDecalsItem) {
    if (this.clanBannerDecals == null) {
      this.clanBannerDecals = new ArrayList<>();
    }
    this.clanBannerDecals.add(clanBannerDecalsItem);
    return this;
  }

  /**
   * Get clanBannerDecals
   * @return clanBannerDecals
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getClanBannerDecals() {
    return clanBannerDecals;
  }

  public void setClanBannerDecals(List<CommonModelsCoreSetting> clanBannerDecals) {
    this.clanBannerDecals = clanBannerDecals;
  }


  public CommonModelsCoreSettingsConfiguration clanBannerGonfalonColors(List<CommonModelsCoreSetting> clanBannerGonfalonColors) {
    this.clanBannerGonfalonColors = clanBannerGonfalonColors;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addClanBannerGonfalonColorsItem(CommonModelsCoreSetting clanBannerGonfalonColorsItem) {
    if (this.clanBannerGonfalonColors == null) {
      this.clanBannerGonfalonColors = new ArrayList<>();
    }
    this.clanBannerGonfalonColors.add(clanBannerGonfalonColorsItem);
    return this;
  }

  /**
   * Get clanBannerGonfalonColors
   * @return clanBannerGonfalonColors
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getClanBannerGonfalonColors() {
    return clanBannerGonfalonColors;
  }

  public void setClanBannerGonfalonColors(List<CommonModelsCoreSetting> clanBannerGonfalonColors) {
    this.clanBannerGonfalonColors = clanBannerGonfalonColors;
  }


  public CommonModelsCoreSettingsConfiguration clanBannerGonfalonDetailColors(List<CommonModelsCoreSetting> clanBannerGonfalonDetailColors) {
    this.clanBannerGonfalonDetailColors = clanBannerGonfalonDetailColors;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addClanBannerGonfalonDetailColorsItem(CommonModelsCoreSetting clanBannerGonfalonDetailColorsItem) {
    if (this.clanBannerGonfalonDetailColors == null) {
      this.clanBannerGonfalonDetailColors = new ArrayList<>();
    }
    this.clanBannerGonfalonDetailColors.add(clanBannerGonfalonDetailColorsItem);
    return this;
  }

  /**
   * Get clanBannerGonfalonDetailColors
   * @return clanBannerGonfalonDetailColors
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getClanBannerGonfalonDetailColors() {
    return clanBannerGonfalonDetailColors;
  }

  public void setClanBannerGonfalonDetailColors(List<CommonModelsCoreSetting> clanBannerGonfalonDetailColors) {
    this.clanBannerGonfalonDetailColors = clanBannerGonfalonDetailColors;
  }


  public CommonModelsCoreSettingsConfiguration clanBannerGonfalonDetails(List<CommonModelsCoreSetting> clanBannerGonfalonDetails) {
    this.clanBannerGonfalonDetails = clanBannerGonfalonDetails;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addClanBannerGonfalonDetailsItem(CommonModelsCoreSetting clanBannerGonfalonDetailsItem) {
    if (this.clanBannerGonfalonDetails == null) {
      this.clanBannerGonfalonDetails = new ArrayList<>();
    }
    this.clanBannerGonfalonDetails.add(clanBannerGonfalonDetailsItem);
    return this;
  }

  /**
   * Get clanBannerGonfalonDetails
   * @return clanBannerGonfalonDetails
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getClanBannerGonfalonDetails() {
    return clanBannerGonfalonDetails;
  }

  public void setClanBannerGonfalonDetails(List<CommonModelsCoreSetting> clanBannerGonfalonDetails) {
    this.clanBannerGonfalonDetails = clanBannerGonfalonDetails;
  }


  public CommonModelsCoreSettingsConfiguration clanBannerGonfalons(List<CommonModelsCoreSetting> clanBannerGonfalons) {
    this.clanBannerGonfalons = clanBannerGonfalons;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addClanBannerGonfalonsItem(CommonModelsCoreSetting clanBannerGonfalonsItem) {
    if (this.clanBannerGonfalons == null) {
      this.clanBannerGonfalons = new ArrayList<>();
    }
    this.clanBannerGonfalons.add(clanBannerGonfalonsItem);
    return this;
  }

  /**
   * Get clanBannerGonfalons
   * @return clanBannerGonfalons
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getClanBannerGonfalons() {
    return clanBannerGonfalons;
  }

  public void setClanBannerGonfalons(List<CommonModelsCoreSetting> clanBannerGonfalons) {
    this.clanBannerGonfalons = clanBannerGonfalons;
  }


  public CommonModelsCoreSettingsConfiguration clanBannerStandards(List<CommonModelsCoreSetting> clanBannerStandards) {
    this.clanBannerStandards = clanBannerStandards;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addClanBannerStandardsItem(CommonModelsCoreSetting clanBannerStandardsItem) {
    if (this.clanBannerStandards == null) {
      this.clanBannerStandards = new ArrayList<>();
    }
    this.clanBannerStandards.add(clanBannerStandardsItem);
    return this;
  }

  /**
   * Get clanBannerStandards
   * @return clanBannerStandards
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getClanBannerStandards() {
    return clanBannerStandards;
  }

  public void setClanBannerStandards(List<CommonModelsCoreSetting> clanBannerStandards) {
    this.clanBannerStandards = clanBannerStandards;
  }


  public CommonModelsCoreSettingsConfiguration defaultGroupTheme(CommonModelsCoreSetting defaultGroupTheme) {
    this.defaultGroupTheme = defaultGroupTheme;
    return this;
  }

  /**
   * Get defaultGroupTheme
   * @return defaultGroupTheme
   */
  @javax.annotation.Nullable
  public CommonModelsCoreSetting getDefaultGroupTheme() {
    return defaultGroupTheme;
  }

  public void setDefaultGroupTheme(CommonModelsCoreSetting defaultGroupTheme) {
    this.defaultGroupTheme = defaultGroupTheme;
  }


  public CommonModelsCoreSettingsConfiguration destiny2CoreSettings(CommonModelsDestiny2CoreSettings destiny2CoreSettings) {
    this.destiny2CoreSettings = destiny2CoreSettings;
    return this;
  }

  /**
   * Get destiny2CoreSettings
   * @return destiny2CoreSettings
   */
  @javax.annotation.Nullable
  public CommonModelsDestiny2CoreSettings getDestiny2CoreSettings() {
    return destiny2CoreSettings;
  }

  public void setDestiny2CoreSettings(CommonModelsDestiny2CoreSettings destiny2CoreSettings) {
    this.destiny2CoreSettings = destiny2CoreSettings;
  }


  public CommonModelsCoreSettingsConfiguration destinyMembershipTypes(List<CommonModelsCoreSetting> destinyMembershipTypes) {
    this.destinyMembershipTypes = destinyMembershipTypes;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addDestinyMembershipTypesItem(CommonModelsCoreSetting destinyMembershipTypesItem) {
    if (this.destinyMembershipTypes == null) {
      this.destinyMembershipTypes = new ArrayList<>();
    }
    this.destinyMembershipTypes.add(destinyMembershipTypesItem);
    return this;
  }

  /**
   * Get destinyMembershipTypes
   * @return destinyMembershipTypes
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getDestinyMembershipTypes() {
    return destinyMembershipTypes;
  }

  public void setDestinyMembershipTypes(List<CommonModelsCoreSetting> destinyMembershipTypes) {
    this.destinyMembershipTypes = destinyMembershipTypes;
  }


  public CommonModelsCoreSettingsConfiguration emailSettings(UserEmailSettings emailSettings) {
    this.emailSettings = emailSettings;
    return this;
  }

  /**
   * Get emailSettings
   * @return emailSettings
   */
  @javax.annotation.Nullable
  public UserEmailSettings getEmailSettings() {
    return emailSettings;
  }

  public void setEmailSettings(UserEmailSettings emailSettings) {
    this.emailSettings = emailSettings;
  }


  public CommonModelsCoreSettingsConfiguration environment(String environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public String getEnvironment() {
    return environment;
  }

  public void setEnvironment(String environment) {
    this.environment = environment;
  }


  public CommonModelsCoreSettingsConfiguration fireteamActivities(List<CommonModelsCoreSetting> fireteamActivities) {
    this.fireteamActivities = fireteamActivities;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addFireteamActivitiesItem(CommonModelsCoreSetting fireteamActivitiesItem) {
    if (this.fireteamActivities == null) {
      this.fireteamActivities = new ArrayList<>();
    }
    this.fireteamActivities.add(fireteamActivitiesItem);
    return this;
  }

  /**
   * Get fireteamActivities
   * @return fireteamActivities
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getFireteamActivities() {
    return fireteamActivities;
  }

  public void setFireteamActivities(List<CommonModelsCoreSetting> fireteamActivities) {
    this.fireteamActivities = fireteamActivities;
  }


  public CommonModelsCoreSettingsConfiguration forumCategories(List<CommonModelsCoreSetting> forumCategories) {
    this.forumCategories = forumCategories;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addForumCategoriesItem(CommonModelsCoreSetting forumCategoriesItem) {
    if (this.forumCategories == null) {
      this.forumCategories = new ArrayList<>();
    }
    this.forumCategories.add(forumCategoriesItem);
    return this;
  }

  /**
   * Get forumCategories
   * @return forumCategories
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getForumCategories() {
    return forumCategories;
  }

  public void setForumCategories(List<CommonModelsCoreSetting> forumCategories) {
    this.forumCategories = forumCategories;
  }


  public CommonModelsCoreSettingsConfiguration groupAvatars(List<CommonModelsCoreSetting> groupAvatars) {
    this.groupAvatars = groupAvatars;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addGroupAvatarsItem(CommonModelsCoreSetting groupAvatarsItem) {
    if (this.groupAvatars == null) {
      this.groupAvatars = new ArrayList<>();
    }
    this.groupAvatars.add(groupAvatarsItem);
    return this;
  }

  /**
   * Get groupAvatars
   * @return groupAvatars
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getGroupAvatars() {
    return groupAvatars;
  }

  public void setGroupAvatars(List<CommonModelsCoreSetting> groupAvatars) {
    this.groupAvatars = groupAvatars;
  }


  public CommonModelsCoreSettingsConfiguration ignoreReasons(List<CommonModelsCoreSetting> ignoreReasons) {
    this.ignoreReasons = ignoreReasons;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addIgnoreReasonsItem(CommonModelsCoreSetting ignoreReasonsItem) {
    if (this.ignoreReasons == null) {
      this.ignoreReasons = new ArrayList<>();
    }
    this.ignoreReasons.add(ignoreReasonsItem);
    return this;
  }

  /**
   * Get ignoreReasons
   * @return ignoreReasons
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getIgnoreReasons() {
    return ignoreReasons;
  }

  public void setIgnoreReasons(List<CommonModelsCoreSetting> ignoreReasons) {
    this.ignoreReasons = ignoreReasons;
  }


  public CommonModelsCoreSettingsConfiguration recruitmentActivities(List<CommonModelsCoreSetting> recruitmentActivities) {
    this.recruitmentActivities = recruitmentActivities;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addRecruitmentActivitiesItem(CommonModelsCoreSetting recruitmentActivitiesItem) {
    if (this.recruitmentActivities == null) {
      this.recruitmentActivities = new ArrayList<>();
    }
    this.recruitmentActivities.add(recruitmentActivitiesItem);
    return this;
  }

  /**
   * Get recruitmentActivities
   * @return recruitmentActivities
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getRecruitmentActivities() {
    return recruitmentActivities;
  }

  public void setRecruitmentActivities(List<CommonModelsCoreSetting> recruitmentActivities) {
    this.recruitmentActivities = recruitmentActivities;
  }


  public CommonModelsCoreSettingsConfiguration recruitmentMiscTags(List<CommonModelsCoreSetting> recruitmentMiscTags) {
    this.recruitmentMiscTags = recruitmentMiscTags;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addRecruitmentMiscTagsItem(CommonModelsCoreSetting recruitmentMiscTagsItem) {
    if (this.recruitmentMiscTags == null) {
      this.recruitmentMiscTags = new ArrayList<>();
    }
    this.recruitmentMiscTags.add(recruitmentMiscTagsItem);
    return this;
  }

  /**
   * Get recruitmentMiscTags
   * @return recruitmentMiscTags
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getRecruitmentMiscTags() {
    return recruitmentMiscTags;
  }

  public void setRecruitmentMiscTags(List<CommonModelsCoreSetting> recruitmentMiscTags) {
    this.recruitmentMiscTags = recruitmentMiscTags;
  }


  public CommonModelsCoreSettingsConfiguration recruitmentPlatformTags(List<CommonModelsCoreSetting> recruitmentPlatformTags) {
    this.recruitmentPlatformTags = recruitmentPlatformTags;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addRecruitmentPlatformTagsItem(CommonModelsCoreSetting recruitmentPlatformTagsItem) {
    if (this.recruitmentPlatformTags == null) {
      this.recruitmentPlatformTags = new ArrayList<>();
    }
    this.recruitmentPlatformTags.add(recruitmentPlatformTagsItem);
    return this;
  }

  /**
   * Get recruitmentPlatformTags
   * @return recruitmentPlatformTags
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getRecruitmentPlatformTags() {
    return recruitmentPlatformTags;
  }

  public void setRecruitmentPlatformTags(List<CommonModelsCoreSetting> recruitmentPlatformTags) {
    this.recruitmentPlatformTags = recruitmentPlatformTags;
  }


  public CommonModelsCoreSettingsConfiguration systemContentLocales(List<CommonModelsCoreSetting> systemContentLocales) {
    this.systemContentLocales = systemContentLocales;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addSystemContentLocalesItem(CommonModelsCoreSetting systemContentLocalesItem) {
    if (this.systemContentLocales == null) {
      this.systemContentLocales = new ArrayList<>();
    }
    this.systemContentLocales.add(systemContentLocalesItem);
    return this;
  }

  /**
   * Get systemContentLocales
   * @return systemContentLocales
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getSystemContentLocales() {
    return systemContentLocales;
  }

  public void setSystemContentLocales(List<CommonModelsCoreSetting> systemContentLocales) {
    this.systemContentLocales = systemContentLocales;
  }


  public CommonModelsCoreSettingsConfiguration systems(Map<String, CommonModelsCoreSystem> systems) {
    this.systems = systems;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration putSystemsItem(String key, CommonModelsCoreSystem systemsItem) {
    if (this.systems == null) {
      this.systems = new HashMap<>();
    }
    this.systems.put(key, systemsItem);
    return this;
  }

  /**
   * Get systems
   * @return systems
   */
  @javax.annotation.Nullable
  public Map<String, CommonModelsCoreSystem> getSystems() {
    return systems;
  }

  public void setSystems(Map<String, CommonModelsCoreSystem> systems) {
    this.systems = systems;
  }


  public CommonModelsCoreSettingsConfiguration userContentLocales(List<CommonModelsCoreSetting> userContentLocales) {
    this.userContentLocales = userContentLocales;
    return this;
  }

  public CommonModelsCoreSettingsConfiguration addUserContentLocalesItem(CommonModelsCoreSetting userContentLocalesItem) {
    if (this.userContentLocales == null) {
      this.userContentLocales = new ArrayList<>();
    }
    this.userContentLocales.add(userContentLocalesItem);
    return this;
  }

  /**
   * Get userContentLocales
   * @return userContentLocales
   */
  @javax.annotation.Nullable
  public List<CommonModelsCoreSetting> getUserContentLocales() {
    return userContentLocales;
  }

  public void setUserContentLocales(List<CommonModelsCoreSetting> userContentLocales) {
    this.userContentLocales = userContentLocales;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommonModelsCoreSettingsConfiguration commonModelsCoreSettingsConfiguration = (CommonModelsCoreSettingsConfiguration) o;
    return Objects.equals(this.clanBannerDecalColors, commonModelsCoreSettingsConfiguration.clanBannerDecalColors) &&
        Objects.equals(this.clanBannerDecals, commonModelsCoreSettingsConfiguration.clanBannerDecals) &&
        Objects.equals(this.clanBannerGonfalonColors, commonModelsCoreSettingsConfiguration.clanBannerGonfalonColors) &&
        Objects.equals(this.clanBannerGonfalonDetailColors, commonModelsCoreSettingsConfiguration.clanBannerGonfalonDetailColors) &&
        Objects.equals(this.clanBannerGonfalonDetails, commonModelsCoreSettingsConfiguration.clanBannerGonfalonDetails) &&
        Objects.equals(this.clanBannerGonfalons, commonModelsCoreSettingsConfiguration.clanBannerGonfalons) &&
        Objects.equals(this.clanBannerStandards, commonModelsCoreSettingsConfiguration.clanBannerStandards) &&
        Objects.equals(this.defaultGroupTheme, commonModelsCoreSettingsConfiguration.defaultGroupTheme) &&
        Objects.equals(this.destiny2CoreSettings, commonModelsCoreSettingsConfiguration.destiny2CoreSettings) &&
        Objects.equals(this.destinyMembershipTypes, commonModelsCoreSettingsConfiguration.destinyMembershipTypes) &&
        Objects.equals(this.emailSettings, commonModelsCoreSettingsConfiguration.emailSettings) &&
        Objects.equals(this.environment, commonModelsCoreSettingsConfiguration.environment) &&
        Objects.equals(this.fireteamActivities, commonModelsCoreSettingsConfiguration.fireteamActivities) &&
        Objects.equals(this.forumCategories, commonModelsCoreSettingsConfiguration.forumCategories) &&
        Objects.equals(this.groupAvatars, commonModelsCoreSettingsConfiguration.groupAvatars) &&
        Objects.equals(this.ignoreReasons, commonModelsCoreSettingsConfiguration.ignoreReasons) &&
        Objects.equals(this.recruitmentActivities, commonModelsCoreSettingsConfiguration.recruitmentActivities) &&
        Objects.equals(this.recruitmentMiscTags, commonModelsCoreSettingsConfiguration.recruitmentMiscTags) &&
        Objects.equals(this.recruitmentPlatformTags, commonModelsCoreSettingsConfiguration.recruitmentPlatformTags) &&
        Objects.equals(this.systemContentLocales, commonModelsCoreSettingsConfiguration.systemContentLocales) &&
        Objects.equals(this.systems, commonModelsCoreSettingsConfiguration.systems) &&
        Objects.equals(this.userContentLocales, commonModelsCoreSettingsConfiguration.userContentLocales);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clanBannerDecalColors, clanBannerDecals, clanBannerGonfalonColors, clanBannerGonfalonDetailColors, clanBannerGonfalonDetails, clanBannerGonfalons, clanBannerStandards, defaultGroupTheme, destiny2CoreSettings, destinyMembershipTypes, emailSettings, environment, fireteamActivities, forumCategories, groupAvatars, ignoreReasons, recruitmentActivities, recruitmentMiscTags, recruitmentPlatformTags, systemContentLocales, systems, userContentLocales);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommonModelsCoreSettingsConfiguration {\n");
    sb.append("    clanBannerDecalColors: ").append(toIndentedString(clanBannerDecalColors)).append("\n");
    sb.append("    clanBannerDecals: ").append(toIndentedString(clanBannerDecals)).append("\n");
    sb.append("    clanBannerGonfalonColors: ").append(toIndentedString(clanBannerGonfalonColors)).append("\n");
    sb.append("    clanBannerGonfalonDetailColors: ").append(toIndentedString(clanBannerGonfalonDetailColors)).append("\n");
    sb.append("    clanBannerGonfalonDetails: ").append(toIndentedString(clanBannerGonfalonDetails)).append("\n");
    sb.append("    clanBannerGonfalons: ").append(toIndentedString(clanBannerGonfalons)).append("\n");
    sb.append("    clanBannerStandards: ").append(toIndentedString(clanBannerStandards)).append("\n");
    sb.append("    defaultGroupTheme: ").append(toIndentedString(defaultGroupTheme)).append("\n");
    sb.append("    destiny2CoreSettings: ").append(toIndentedString(destiny2CoreSettings)).append("\n");
    sb.append("    destinyMembershipTypes: ").append(toIndentedString(destinyMembershipTypes)).append("\n");
    sb.append("    emailSettings: ").append(toIndentedString(emailSettings)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    fireteamActivities: ").append(toIndentedString(fireteamActivities)).append("\n");
    sb.append("    forumCategories: ").append(toIndentedString(forumCategories)).append("\n");
    sb.append("    groupAvatars: ").append(toIndentedString(groupAvatars)).append("\n");
    sb.append("    ignoreReasons: ").append(toIndentedString(ignoreReasons)).append("\n");
    sb.append("    recruitmentActivities: ").append(toIndentedString(recruitmentActivities)).append("\n");
    sb.append("    recruitmentMiscTags: ").append(toIndentedString(recruitmentMiscTags)).append("\n");
    sb.append("    recruitmentPlatformTags: ").append(toIndentedString(recruitmentPlatformTags)).append("\n");
    sb.append("    systemContentLocales: ").append(toIndentedString(systemContentLocales)).append("\n");
    sb.append("    systems: ").append(toIndentedString(systems)).append("\n");
    sb.append("    userContentLocales: ").append(toIndentedString(userContentLocales)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clanBannerDecalColors");
    openapiFields.add("clanBannerDecals");
    openapiFields.add("clanBannerGonfalonColors");
    openapiFields.add("clanBannerGonfalonDetailColors");
    openapiFields.add("clanBannerGonfalonDetails");
    openapiFields.add("clanBannerGonfalons");
    openapiFields.add("clanBannerStandards");
    openapiFields.add("defaultGroupTheme");
    openapiFields.add("destiny2CoreSettings");
    openapiFields.add("destinyMembershipTypes");
    openapiFields.add("emailSettings");
    openapiFields.add("environment");
    openapiFields.add("fireteamActivities");
    openapiFields.add("forumCategories");
    openapiFields.add("groupAvatars");
    openapiFields.add("ignoreReasons");
    openapiFields.add("recruitmentActivities");
    openapiFields.add("recruitmentMiscTags");
    openapiFields.add("recruitmentPlatformTags");
    openapiFields.add("systemContentLocales");
    openapiFields.add("systems");
    openapiFields.add("userContentLocales");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CommonModelsCoreSettingsConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommonModelsCoreSettingsConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommonModelsCoreSettingsConfiguration is not found in the empty JSON string", CommonModelsCoreSettingsConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommonModelsCoreSettingsConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommonModelsCoreSettingsConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("clanBannerDecalColors") != null && !jsonObj.get("clanBannerDecalColors").isJsonNull()) {
        JsonArray jsonArrayclanBannerDecalColors = jsonObj.getAsJsonArray("clanBannerDecalColors");
        if (jsonArrayclanBannerDecalColors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clanBannerDecalColors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clanBannerDecalColors` to be an array in the JSON string but got `%s`", jsonObj.get("clanBannerDecalColors").toString()));
          }

          // validate the optional field `clanBannerDecalColors` (array)
          for (int i = 0; i < jsonArrayclanBannerDecalColors.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayclanBannerDecalColors.get(i));
          };
        }
      }
      if (jsonObj.get("clanBannerDecals") != null && !jsonObj.get("clanBannerDecals").isJsonNull()) {
        JsonArray jsonArrayclanBannerDecals = jsonObj.getAsJsonArray("clanBannerDecals");
        if (jsonArrayclanBannerDecals != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clanBannerDecals").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clanBannerDecals` to be an array in the JSON string but got `%s`", jsonObj.get("clanBannerDecals").toString()));
          }

          // validate the optional field `clanBannerDecals` (array)
          for (int i = 0; i < jsonArrayclanBannerDecals.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayclanBannerDecals.get(i));
          };
        }
      }
      if (jsonObj.get("clanBannerGonfalonColors") != null && !jsonObj.get("clanBannerGonfalonColors").isJsonNull()) {
        JsonArray jsonArrayclanBannerGonfalonColors = jsonObj.getAsJsonArray("clanBannerGonfalonColors");
        if (jsonArrayclanBannerGonfalonColors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clanBannerGonfalonColors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clanBannerGonfalonColors` to be an array in the JSON string but got `%s`", jsonObj.get("clanBannerGonfalonColors").toString()));
          }

          // validate the optional field `clanBannerGonfalonColors` (array)
          for (int i = 0; i < jsonArrayclanBannerGonfalonColors.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayclanBannerGonfalonColors.get(i));
          };
        }
      }
      if (jsonObj.get("clanBannerGonfalonDetailColors") != null && !jsonObj.get("clanBannerGonfalonDetailColors").isJsonNull()) {
        JsonArray jsonArrayclanBannerGonfalonDetailColors = jsonObj.getAsJsonArray("clanBannerGonfalonDetailColors");
        if (jsonArrayclanBannerGonfalonDetailColors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clanBannerGonfalonDetailColors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clanBannerGonfalonDetailColors` to be an array in the JSON string but got `%s`", jsonObj.get("clanBannerGonfalonDetailColors").toString()));
          }

          // validate the optional field `clanBannerGonfalonDetailColors` (array)
          for (int i = 0; i < jsonArrayclanBannerGonfalonDetailColors.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayclanBannerGonfalonDetailColors.get(i));
          };
        }
      }
      if (jsonObj.get("clanBannerGonfalonDetails") != null && !jsonObj.get("clanBannerGonfalonDetails").isJsonNull()) {
        JsonArray jsonArrayclanBannerGonfalonDetails = jsonObj.getAsJsonArray("clanBannerGonfalonDetails");
        if (jsonArrayclanBannerGonfalonDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clanBannerGonfalonDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clanBannerGonfalonDetails` to be an array in the JSON string but got `%s`", jsonObj.get("clanBannerGonfalonDetails").toString()));
          }

          // validate the optional field `clanBannerGonfalonDetails` (array)
          for (int i = 0; i < jsonArrayclanBannerGonfalonDetails.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayclanBannerGonfalonDetails.get(i));
          };
        }
      }
      if (jsonObj.get("clanBannerGonfalons") != null && !jsonObj.get("clanBannerGonfalons").isJsonNull()) {
        JsonArray jsonArrayclanBannerGonfalons = jsonObj.getAsJsonArray("clanBannerGonfalons");
        if (jsonArrayclanBannerGonfalons != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clanBannerGonfalons").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clanBannerGonfalons` to be an array in the JSON string but got `%s`", jsonObj.get("clanBannerGonfalons").toString()));
          }

          // validate the optional field `clanBannerGonfalons` (array)
          for (int i = 0; i < jsonArrayclanBannerGonfalons.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayclanBannerGonfalons.get(i));
          };
        }
      }
      if (jsonObj.get("clanBannerStandards") != null && !jsonObj.get("clanBannerStandards").isJsonNull()) {
        JsonArray jsonArrayclanBannerStandards = jsonObj.getAsJsonArray("clanBannerStandards");
        if (jsonArrayclanBannerStandards != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clanBannerStandards").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clanBannerStandards` to be an array in the JSON string but got `%s`", jsonObj.get("clanBannerStandards").toString()));
          }

          // validate the optional field `clanBannerStandards` (array)
          for (int i = 0; i < jsonArrayclanBannerStandards.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayclanBannerStandards.get(i));
          };
        }
      }
      // validate the optional field `defaultGroupTheme`
      if (jsonObj.get("defaultGroupTheme") != null && !jsonObj.get("defaultGroupTheme").isJsonNull()) {
        CommonModelsCoreSetting.validateJsonElement(jsonObj.get("defaultGroupTheme"));
      }
      // validate the optional field `destiny2CoreSettings`
      if (jsonObj.get("destiny2CoreSettings") != null && !jsonObj.get("destiny2CoreSettings").isJsonNull()) {
        CommonModelsDestiny2CoreSettings.validateJsonElement(jsonObj.get("destiny2CoreSettings"));
      }
      if (jsonObj.get("destinyMembershipTypes") != null && !jsonObj.get("destinyMembershipTypes").isJsonNull()) {
        JsonArray jsonArraydestinyMembershipTypes = jsonObj.getAsJsonArray("destinyMembershipTypes");
        if (jsonArraydestinyMembershipTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("destinyMembershipTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `destinyMembershipTypes` to be an array in the JSON string but got `%s`", jsonObj.get("destinyMembershipTypes").toString()));
          }

          // validate the optional field `destinyMembershipTypes` (array)
          for (int i = 0; i < jsonArraydestinyMembershipTypes.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArraydestinyMembershipTypes.get(i));
          };
        }
      }
      // validate the optional field `emailSettings`
      if (jsonObj.get("emailSettings") != null && !jsonObj.get("emailSettings").isJsonNull()) {
        UserEmailSettings.validateJsonElement(jsonObj.get("emailSettings"));
      }
      if ((jsonObj.get("environment") != null && !jsonObj.get("environment").isJsonNull()) && !jsonObj.get("environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment").toString()));
      }
      if (jsonObj.get("fireteamActivities") != null && !jsonObj.get("fireteamActivities").isJsonNull()) {
        JsonArray jsonArrayfireteamActivities = jsonObj.getAsJsonArray("fireteamActivities");
        if (jsonArrayfireteamActivities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fireteamActivities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fireteamActivities` to be an array in the JSON string but got `%s`", jsonObj.get("fireteamActivities").toString()));
          }

          // validate the optional field `fireteamActivities` (array)
          for (int i = 0; i < jsonArrayfireteamActivities.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayfireteamActivities.get(i));
          };
        }
      }
      if (jsonObj.get("forumCategories") != null && !jsonObj.get("forumCategories").isJsonNull()) {
        JsonArray jsonArrayforumCategories = jsonObj.getAsJsonArray("forumCategories");
        if (jsonArrayforumCategories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("forumCategories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `forumCategories` to be an array in the JSON string but got `%s`", jsonObj.get("forumCategories").toString()));
          }

          // validate the optional field `forumCategories` (array)
          for (int i = 0; i < jsonArrayforumCategories.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayforumCategories.get(i));
          };
        }
      }
      if (jsonObj.get("groupAvatars") != null && !jsonObj.get("groupAvatars").isJsonNull()) {
        JsonArray jsonArraygroupAvatars = jsonObj.getAsJsonArray("groupAvatars");
        if (jsonArraygroupAvatars != null) {
          // ensure the json data is an array
          if (!jsonObj.get("groupAvatars").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `groupAvatars` to be an array in the JSON string but got `%s`", jsonObj.get("groupAvatars").toString()));
          }

          // validate the optional field `groupAvatars` (array)
          for (int i = 0; i < jsonArraygroupAvatars.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArraygroupAvatars.get(i));
          };
        }
      }
      if (jsonObj.get("ignoreReasons") != null && !jsonObj.get("ignoreReasons").isJsonNull()) {
        JsonArray jsonArrayignoreReasons = jsonObj.getAsJsonArray("ignoreReasons");
        if (jsonArrayignoreReasons != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ignoreReasons").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ignoreReasons` to be an array in the JSON string but got `%s`", jsonObj.get("ignoreReasons").toString()));
          }

          // validate the optional field `ignoreReasons` (array)
          for (int i = 0; i < jsonArrayignoreReasons.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayignoreReasons.get(i));
          };
        }
      }
      if (jsonObj.get("recruitmentActivities") != null && !jsonObj.get("recruitmentActivities").isJsonNull()) {
        JsonArray jsonArrayrecruitmentActivities = jsonObj.getAsJsonArray("recruitmentActivities");
        if (jsonArrayrecruitmentActivities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("recruitmentActivities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `recruitmentActivities` to be an array in the JSON string but got `%s`", jsonObj.get("recruitmentActivities").toString()));
          }

          // validate the optional field `recruitmentActivities` (array)
          for (int i = 0; i < jsonArrayrecruitmentActivities.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayrecruitmentActivities.get(i));
          };
        }
      }
      if (jsonObj.get("recruitmentMiscTags") != null && !jsonObj.get("recruitmentMiscTags").isJsonNull()) {
        JsonArray jsonArrayrecruitmentMiscTags = jsonObj.getAsJsonArray("recruitmentMiscTags");
        if (jsonArrayrecruitmentMiscTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("recruitmentMiscTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `recruitmentMiscTags` to be an array in the JSON string but got `%s`", jsonObj.get("recruitmentMiscTags").toString()));
          }

          // validate the optional field `recruitmentMiscTags` (array)
          for (int i = 0; i < jsonArrayrecruitmentMiscTags.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayrecruitmentMiscTags.get(i));
          };
        }
      }
      if (jsonObj.get("recruitmentPlatformTags") != null && !jsonObj.get("recruitmentPlatformTags").isJsonNull()) {
        JsonArray jsonArrayrecruitmentPlatformTags = jsonObj.getAsJsonArray("recruitmentPlatformTags");
        if (jsonArrayrecruitmentPlatformTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("recruitmentPlatformTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `recruitmentPlatformTags` to be an array in the JSON string but got `%s`", jsonObj.get("recruitmentPlatformTags").toString()));
          }

          // validate the optional field `recruitmentPlatformTags` (array)
          for (int i = 0; i < jsonArrayrecruitmentPlatformTags.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayrecruitmentPlatformTags.get(i));
          };
        }
      }
      if (jsonObj.get("systemContentLocales") != null && !jsonObj.get("systemContentLocales").isJsonNull()) {
        JsonArray jsonArraysystemContentLocales = jsonObj.getAsJsonArray("systemContentLocales");
        if (jsonArraysystemContentLocales != null) {
          // ensure the json data is an array
          if (!jsonObj.get("systemContentLocales").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `systemContentLocales` to be an array in the JSON string but got `%s`", jsonObj.get("systemContentLocales").toString()));
          }

          // validate the optional field `systemContentLocales` (array)
          for (int i = 0; i < jsonArraysystemContentLocales.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArraysystemContentLocales.get(i));
          };
        }
      }
      if (jsonObj.get("userContentLocales") != null && !jsonObj.get("userContentLocales").isJsonNull()) {
        JsonArray jsonArrayuserContentLocales = jsonObj.getAsJsonArray("userContentLocales");
        if (jsonArrayuserContentLocales != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userContentLocales").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userContentLocales` to be an array in the JSON string but got `%s`", jsonObj.get("userContentLocales").toString()));
          }

          // validate the optional field `userContentLocales` (array)
          for (int i = 0; i < jsonArrayuserContentLocales.size(); i++) {
            CommonModelsCoreSetting.validateJsonElement(jsonArrayuserContentLocales.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommonModelsCoreSettingsConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommonModelsCoreSettingsConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommonModelsCoreSettingsConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommonModelsCoreSettingsConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CommonModelsCoreSettingsConfiguration>() {
           @Override
           public void write(JsonWriter out, CommonModelsCoreSettingsConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommonModelsCoreSettingsConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CommonModelsCoreSettingsConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CommonModelsCoreSettingsConfiguration
   * @throws IOException if the JSON string is invalid with respect to CommonModelsCoreSettingsConfiguration
   */
  public static CommonModelsCoreSettingsConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommonModelsCoreSettingsConfiguration.class);
  }

  /**
   * Convert an instance of CommonModelsCoreSettingsConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

