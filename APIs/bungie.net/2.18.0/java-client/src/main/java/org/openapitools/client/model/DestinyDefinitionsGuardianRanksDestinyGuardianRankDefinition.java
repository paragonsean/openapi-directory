/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition {
  public static final String SERIALIZED_NAME_DISPLAY_PROPERTIES = "displayProperties";
  @SerializedName(SERIALIZED_NAME_DISPLAY_PROPERTIES)
  private DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties;

  public static final String SERIALIZED_NAME_FOREGROUND_IMAGE_PATH = "foregroundImagePath";
  @SerializedName(SERIALIZED_NAME_FOREGROUND_IMAGE_PATH)
  private String foregroundImagePath;

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private Integer hash;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_OVERLAY_IMAGE_PATH = "overlayImagePath";
  @SerializedName(SERIALIZED_NAME_OVERLAY_IMAGE_PATH)
  private String overlayImagePath;

  public static final String SERIALIZED_NAME_OVERLAY_MASK_IMAGE_PATH = "overlayMaskImagePath";
  @SerializedName(SERIALIZED_NAME_OVERLAY_MASK_IMAGE_PATH)
  private String overlayMaskImagePath;

  public static final String SERIALIZED_NAME_PRESENTATION_NODE_HASH = "presentationNodeHash";
  @SerializedName(SERIALIZED_NAME_PRESENTATION_NODE_HASH)
  private Integer presentationNodeHash;

  public static final String SERIALIZED_NAME_RANK_NUMBER = "rankNumber";
  @SerializedName(SERIALIZED_NAME_RANK_NUMBER)
  private Integer rankNumber;

  public static final String SERIALIZED_NAME_REDACTED = "redacted";
  @SerializedName(SERIALIZED_NAME_REDACTED)
  private Boolean redacted;

  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition() {
  }

  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition displayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

  /**
   * Get displayProperties
   * @return displayProperties
   */
  @javax.annotation.Nullable
  public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
  }


  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition foregroundImagePath(String foregroundImagePath) {
    this.foregroundImagePath = foregroundImagePath;
    return this;
  }

  /**
   * Get foregroundImagePath
   * @return foregroundImagePath
   */
  @javax.annotation.Nullable
  public String getForegroundImagePath() {
    return foregroundImagePath;
  }

  public void setForegroundImagePath(String foregroundImagePath) {
    this.foregroundImagePath = foregroundImagePath;
  }


  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition hash(Integer hash) {
    this.hash = hash;
    return this;
  }

  /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
   * @return hash
   */
  @javax.annotation.Nullable
  public Integer getHash() {
    return hash;
  }

  public void setHash(Integer hash) {
    this.hash = hash;
  }


  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * The index of the entity as it was found in the investment tables.
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition overlayImagePath(String overlayImagePath) {
    this.overlayImagePath = overlayImagePath;
    return this;
  }

  /**
   * Get overlayImagePath
   * @return overlayImagePath
   */
  @javax.annotation.Nullable
  public String getOverlayImagePath() {
    return overlayImagePath;
  }

  public void setOverlayImagePath(String overlayImagePath) {
    this.overlayImagePath = overlayImagePath;
  }


  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition overlayMaskImagePath(String overlayMaskImagePath) {
    this.overlayMaskImagePath = overlayMaskImagePath;
    return this;
  }

  /**
   * Get overlayMaskImagePath
   * @return overlayMaskImagePath
   */
  @javax.annotation.Nullable
  public String getOverlayMaskImagePath() {
    return overlayMaskImagePath;
  }

  public void setOverlayMaskImagePath(String overlayMaskImagePath) {
    this.overlayMaskImagePath = overlayMaskImagePath;
  }


  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition presentationNodeHash(Integer presentationNodeHash) {
    this.presentationNodeHash = presentationNodeHash;
    return this;
  }

  /**
   * Get presentationNodeHash
   * @return presentationNodeHash
   */
  @javax.annotation.Nullable
  public Integer getPresentationNodeHash() {
    return presentationNodeHash;
  }

  public void setPresentationNodeHash(Integer presentationNodeHash) {
    this.presentationNodeHash = presentationNodeHash;
  }


  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition rankNumber(Integer rankNumber) {
    this.rankNumber = rankNumber;
    return this;
  }

  /**
   * Get rankNumber
   * @return rankNumber
   */
  @javax.annotation.Nullable
  public Integer getRankNumber() {
    return rankNumber;
  }

  public void setRankNumber(Integer rankNumber) {
    this.rankNumber = rankNumber;
  }


  public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition redacted(Boolean redacted) {
    this.redacted = redacted;
    return this;
  }

  /**
   * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
   * @return redacted
   */
  @javax.annotation.Nullable
  public Boolean getRedacted() {
    return redacted;
  }

  public void setRedacted(Boolean redacted) {
    this.redacted = redacted;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition = (DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition) o;
    return Objects.equals(this.displayProperties, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.displayProperties) &&
        Objects.equals(this.foregroundImagePath, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.foregroundImagePath) &&
        Objects.equals(this.hash, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.hash) &&
        Objects.equals(this.index, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.index) &&
        Objects.equals(this.overlayImagePath, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.overlayImagePath) &&
        Objects.equals(this.overlayMaskImagePath, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.overlayMaskImagePath) &&
        Objects.equals(this.presentationNodeHash, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.presentationNodeHash) &&
        Objects.equals(this.rankNumber, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.rankNumber) &&
        Objects.equals(this.redacted, destinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.redacted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayProperties, foregroundImagePath, hash, index, overlayImagePath, overlayMaskImagePath, presentationNodeHash, rankNumber, redacted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition {\n");
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    foregroundImagePath: ").append(toIndentedString(foregroundImagePath)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    overlayImagePath: ").append(toIndentedString(overlayImagePath)).append("\n");
    sb.append("    overlayMaskImagePath: ").append(toIndentedString(overlayMaskImagePath)).append("\n");
    sb.append("    presentationNodeHash: ").append(toIndentedString(presentationNodeHash)).append("\n");
    sb.append("    rankNumber: ").append(toIndentedString(rankNumber)).append("\n");
    sb.append("    redacted: ").append(toIndentedString(redacted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayProperties");
    openapiFields.add("foregroundImagePath");
    openapiFields.add("hash");
    openapiFields.add("index");
    openapiFields.add("overlayImagePath");
    openapiFields.add("overlayMaskImagePath");
    openapiFields.add("presentationNodeHash");
    openapiFields.add("rankNumber");
    openapiFields.add("redacted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition is not found in the empty JSON string", DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `displayProperties`
      if (jsonObj.get("displayProperties") != null && !jsonObj.get("displayProperties").isJsonNull()) {
        DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJsonElement(jsonObj.get("displayProperties"));
      }
      if ((jsonObj.get("foregroundImagePath") != null && !jsonObj.get("foregroundImagePath").isJsonNull()) && !jsonObj.get("foregroundImagePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `foregroundImagePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("foregroundImagePath").toString()));
      }
      if ((jsonObj.get("overlayImagePath") != null && !jsonObj.get("overlayImagePath").isJsonNull()) && !jsonObj.get("overlayImagePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overlayImagePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overlayImagePath").toString()));
      }
      if ((jsonObj.get("overlayMaskImagePath") != null && !jsonObj.get("overlayMaskImagePath").isJsonNull()) && !jsonObj.get("overlayMaskImagePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overlayMaskImagePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overlayMaskImagePath").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition
   */
  public static DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsGuardianRanksDestinyGuardianRankDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

