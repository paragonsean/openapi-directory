/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Raw data about the customization options chosen for a character&#39;s face and appearance.  You can look up the relevant class/race/gender combo in DestinyCharacterCustomizationOptionDefinition for the character, and then look up these values within the CustomizationOptions found to pull some data about their choices. Warning: not all of that data is meaningful. Some data has useful icons. Others have nothing, and are only meant for 3D rendering purposes (which we sadly do not expose yet)
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyCharacterDestinyCharacterCustomization {
  public static final String SERIALIZED_NAME_DECAL_COLOR = "decalColor";
  @SerializedName(SERIALIZED_NAME_DECAL_COLOR)
  private Integer decalColor;

  public static final String SERIALIZED_NAME_DECAL_INDEX = "decalIndex";
  @SerializedName(SERIALIZED_NAME_DECAL_INDEX)
  private Integer decalIndex;

  public static final String SERIALIZED_NAME_EYE_COLOR = "eyeColor";
  @SerializedName(SERIALIZED_NAME_EYE_COLOR)
  private Integer eyeColor;

  public static final String SERIALIZED_NAME_FACE = "face";
  @SerializedName(SERIALIZED_NAME_FACE)
  private Integer face;

  public static final String SERIALIZED_NAME_FEATURE_COLORS = "featureColors";
  @SerializedName(SERIALIZED_NAME_FEATURE_COLORS)
  private List<Integer> featureColors = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEATURE_INDEX = "featureIndex";
  @SerializedName(SERIALIZED_NAME_FEATURE_INDEX)
  private Integer featureIndex;

  public static final String SERIALIZED_NAME_HAIR_COLORS = "hairColors";
  @SerializedName(SERIALIZED_NAME_HAIR_COLORS)
  private List<Integer> hairColors = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAIR_INDEX = "hairIndex";
  @SerializedName(SERIALIZED_NAME_HAIR_INDEX)
  private Integer hairIndex;

  public static final String SERIALIZED_NAME_LIP_COLOR = "lipColor";
  @SerializedName(SERIALIZED_NAME_LIP_COLOR)
  private Integer lipColor;

  public static final String SERIALIZED_NAME_PERSONALITY = "personality";
  @SerializedName(SERIALIZED_NAME_PERSONALITY)
  private Integer personality;

  public static final String SERIALIZED_NAME_SKIN_COLOR = "skinColor";
  @SerializedName(SERIALIZED_NAME_SKIN_COLOR)
  private Integer skinColor;

  public static final String SERIALIZED_NAME_WEAR_HELMET = "wearHelmet";
  @SerializedName(SERIALIZED_NAME_WEAR_HELMET)
  private Boolean wearHelmet;

  public DestinyCharacterDestinyCharacterCustomization() {
  }

  public DestinyCharacterDestinyCharacterCustomization decalColor(Integer decalColor) {
    this.decalColor = decalColor;
    return this;
  }

  /**
   * Get decalColor
   * @return decalColor
   */
  @javax.annotation.Nullable
  public Integer getDecalColor() {
    return decalColor;
  }

  public void setDecalColor(Integer decalColor) {
    this.decalColor = decalColor;
  }


  public DestinyCharacterDestinyCharacterCustomization decalIndex(Integer decalIndex) {
    this.decalIndex = decalIndex;
    return this;
  }

  /**
   * Get decalIndex
   * @return decalIndex
   */
  @javax.annotation.Nullable
  public Integer getDecalIndex() {
    return decalIndex;
  }

  public void setDecalIndex(Integer decalIndex) {
    this.decalIndex = decalIndex;
  }


  public DestinyCharacterDestinyCharacterCustomization eyeColor(Integer eyeColor) {
    this.eyeColor = eyeColor;
    return this;
  }

  /**
   * Get eyeColor
   * @return eyeColor
   */
  @javax.annotation.Nullable
  public Integer getEyeColor() {
    return eyeColor;
  }

  public void setEyeColor(Integer eyeColor) {
    this.eyeColor = eyeColor;
  }


  public DestinyCharacterDestinyCharacterCustomization face(Integer face) {
    this.face = face;
    return this;
  }

  /**
   * Get face
   * @return face
   */
  @javax.annotation.Nullable
  public Integer getFace() {
    return face;
  }

  public void setFace(Integer face) {
    this.face = face;
  }


  public DestinyCharacterDestinyCharacterCustomization featureColors(List<Integer> featureColors) {
    this.featureColors = featureColors;
    return this;
  }

  public DestinyCharacterDestinyCharacterCustomization addFeatureColorsItem(Integer featureColorsItem) {
    if (this.featureColors == null) {
      this.featureColors = new ArrayList<>();
    }
    this.featureColors.add(featureColorsItem);
    return this;
  }

  /**
   * Get featureColors
   * @return featureColors
   */
  @javax.annotation.Nullable
  public List<Integer> getFeatureColors() {
    return featureColors;
  }

  public void setFeatureColors(List<Integer> featureColors) {
    this.featureColors = featureColors;
  }


  public DestinyCharacterDestinyCharacterCustomization featureIndex(Integer featureIndex) {
    this.featureIndex = featureIndex;
    return this;
  }

  /**
   * Get featureIndex
   * @return featureIndex
   */
  @javax.annotation.Nullable
  public Integer getFeatureIndex() {
    return featureIndex;
  }

  public void setFeatureIndex(Integer featureIndex) {
    this.featureIndex = featureIndex;
  }


  public DestinyCharacterDestinyCharacterCustomization hairColors(List<Integer> hairColors) {
    this.hairColors = hairColors;
    return this;
  }

  public DestinyCharacterDestinyCharacterCustomization addHairColorsItem(Integer hairColorsItem) {
    if (this.hairColors == null) {
      this.hairColors = new ArrayList<>();
    }
    this.hairColors.add(hairColorsItem);
    return this;
  }

  /**
   * Get hairColors
   * @return hairColors
   */
  @javax.annotation.Nullable
  public List<Integer> getHairColors() {
    return hairColors;
  }

  public void setHairColors(List<Integer> hairColors) {
    this.hairColors = hairColors;
  }


  public DestinyCharacterDestinyCharacterCustomization hairIndex(Integer hairIndex) {
    this.hairIndex = hairIndex;
    return this;
  }

  /**
   * Get hairIndex
   * @return hairIndex
   */
  @javax.annotation.Nullable
  public Integer getHairIndex() {
    return hairIndex;
  }

  public void setHairIndex(Integer hairIndex) {
    this.hairIndex = hairIndex;
  }


  public DestinyCharacterDestinyCharacterCustomization lipColor(Integer lipColor) {
    this.lipColor = lipColor;
    return this;
  }

  /**
   * Get lipColor
   * @return lipColor
   */
  @javax.annotation.Nullable
  public Integer getLipColor() {
    return lipColor;
  }

  public void setLipColor(Integer lipColor) {
    this.lipColor = lipColor;
  }


  public DestinyCharacterDestinyCharacterCustomization personality(Integer personality) {
    this.personality = personality;
    return this;
  }

  /**
   * Get personality
   * @return personality
   */
  @javax.annotation.Nullable
  public Integer getPersonality() {
    return personality;
  }

  public void setPersonality(Integer personality) {
    this.personality = personality;
  }


  public DestinyCharacterDestinyCharacterCustomization skinColor(Integer skinColor) {
    this.skinColor = skinColor;
    return this;
  }

  /**
   * Get skinColor
   * @return skinColor
   */
  @javax.annotation.Nullable
  public Integer getSkinColor() {
    return skinColor;
  }

  public void setSkinColor(Integer skinColor) {
    this.skinColor = skinColor;
  }


  public DestinyCharacterDestinyCharacterCustomization wearHelmet(Boolean wearHelmet) {
    this.wearHelmet = wearHelmet;
    return this;
  }

  /**
   * Get wearHelmet
   * @return wearHelmet
   */
  @javax.annotation.Nullable
  public Boolean getWearHelmet() {
    return wearHelmet;
  }

  public void setWearHelmet(Boolean wearHelmet) {
    this.wearHelmet = wearHelmet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyCharacterDestinyCharacterCustomization destinyCharacterDestinyCharacterCustomization = (DestinyCharacterDestinyCharacterCustomization) o;
    return Objects.equals(this.decalColor, destinyCharacterDestinyCharacterCustomization.decalColor) &&
        Objects.equals(this.decalIndex, destinyCharacterDestinyCharacterCustomization.decalIndex) &&
        Objects.equals(this.eyeColor, destinyCharacterDestinyCharacterCustomization.eyeColor) &&
        Objects.equals(this.face, destinyCharacterDestinyCharacterCustomization.face) &&
        Objects.equals(this.featureColors, destinyCharacterDestinyCharacterCustomization.featureColors) &&
        Objects.equals(this.featureIndex, destinyCharacterDestinyCharacterCustomization.featureIndex) &&
        Objects.equals(this.hairColors, destinyCharacterDestinyCharacterCustomization.hairColors) &&
        Objects.equals(this.hairIndex, destinyCharacterDestinyCharacterCustomization.hairIndex) &&
        Objects.equals(this.lipColor, destinyCharacterDestinyCharacterCustomization.lipColor) &&
        Objects.equals(this.personality, destinyCharacterDestinyCharacterCustomization.personality) &&
        Objects.equals(this.skinColor, destinyCharacterDestinyCharacterCustomization.skinColor) &&
        Objects.equals(this.wearHelmet, destinyCharacterDestinyCharacterCustomization.wearHelmet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(decalColor, decalIndex, eyeColor, face, featureColors, featureIndex, hairColors, hairIndex, lipColor, personality, skinColor, wearHelmet);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyCharacterDestinyCharacterCustomization {\n");
    sb.append("    decalColor: ").append(toIndentedString(decalColor)).append("\n");
    sb.append("    decalIndex: ").append(toIndentedString(decalIndex)).append("\n");
    sb.append("    eyeColor: ").append(toIndentedString(eyeColor)).append("\n");
    sb.append("    face: ").append(toIndentedString(face)).append("\n");
    sb.append("    featureColors: ").append(toIndentedString(featureColors)).append("\n");
    sb.append("    featureIndex: ").append(toIndentedString(featureIndex)).append("\n");
    sb.append("    hairColors: ").append(toIndentedString(hairColors)).append("\n");
    sb.append("    hairIndex: ").append(toIndentedString(hairIndex)).append("\n");
    sb.append("    lipColor: ").append(toIndentedString(lipColor)).append("\n");
    sb.append("    personality: ").append(toIndentedString(personality)).append("\n");
    sb.append("    skinColor: ").append(toIndentedString(skinColor)).append("\n");
    sb.append("    wearHelmet: ").append(toIndentedString(wearHelmet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("decalColor");
    openapiFields.add("decalIndex");
    openapiFields.add("eyeColor");
    openapiFields.add("face");
    openapiFields.add("featureColors");
    openapiFields.add("featureIndex");
    openapiFields.add("hairColors");
    openapiFields.add("hairIndex");
    openapiFields.add("lipColor");
    openapiFields.add("personality");
    openapiFields.add("skinColor");
    openapiFields.add("wearHelmet");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyCharacterDestinyCharacterCustomization
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyCharacterDestinyCharacterCustomization.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyCharacterDestinyCharacterCustomization is not found in the empty JSON string", DestinyCharacterDestinyCharacterCustomization.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyCharacterDestinyCharacterCustomization.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyCharacterDestinyCharacterCustomization` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("featureColors") != null && !jsonObj.get("featureColors").isJsonNull() && !jsonObj.get("featureColors").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `featureColors` to be an array in the JSON string but got `%s`", jsonObj.get("featureColors").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("hairColors") != null && !jsonObj.get("hairColors").isJsonNull() && !jsonObj.get("hairColors").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hairColors` to be an array in the JSON string but got `%s`", jsonObj.get("hairColors").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyCharacterDestinyCharacterCustomization.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyCharacterDestinyCharacterCustomization' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyCharacterDestinyCharacterCustomization> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyCharacterDestinyCharacterCustomization.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyCharacterDestinyCharacterCustomization>() {
           @Override
           public void write(JsonWriter out, DestinyCharacterDestinyCharacterCustomization value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyCharacterDestinyCharacterCustomization read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyCharacterDestinyCharacterCustomization given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyCharacterDestinyCharacterCustomization
   * @throws IOException if the JSON string is invalid with respect to DestinyCharacterDestinyCharacterCustomization
   */
  public static DestinyCharacterDestinyCharacterCustomization fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyCharacterDestinyCharacterCustomization.class);
  }

  /**
   * Convert an instance of DestinyCharacterDestinyCharacterCustomization to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

