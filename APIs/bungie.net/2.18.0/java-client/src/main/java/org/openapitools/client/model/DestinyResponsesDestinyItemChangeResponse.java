/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyEntitiesItemsDestinyItemComponent;
import org.openapitools.client.model.DestinyResponsesDestinyItemResponse;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DestinyResponsesDestinyItemChangeResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyResponsesDestinyItemChangeResponse {
  public static final String SERIALIZED_NAME_ADDED_INVENTORY_ITEMS = "addedInventoryItems";
  @SerializedName(SERIALIZED_NAME_ADDED_INVENTORY_ITEMS)
  private List<DestinyEntitiesItemsDestinyItemComponent> addedInventoryItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_ITEM = "item";
  @SerializedName(SERIALIZED_NAME_ITEM)
  private DestinyResponsesDestinyItemResponse item;

  public static final String SERIALIZED_NAME_REMOVED_INVENTORY_ITEMS = "removedInventoryItems";
  @SerializedName(SERIALIZED_NAME_REMOVED_INVENTORY_ITEMS)
  private List<DestinyEntitiesItemsDestinyItemComponent> removedInventoryItems = new ArrayList<>();

  public DestinyResponsesDestinyItemChangeResponse() {
  }

  public DestinyResponsesDestinyItemChangeResponse addedInventoryItems(List<DestinyEntitiesItemsDestinyItemComponent> addedInventoryItems) {
    this.addedInventoryItems = addedInventoryItems;
    return this;
  }

  public DestinyResponsesDestinyItemChangeResponse addAddedInventoryItemsItem(DestinyEntitiesItemsDestinyItemComponent addedInventoryItemsItem) {
    if (this.addedInventoryItems == null) {
      this.addedInventoryItems = new ArrayList<>();
    }
    this.addedInventoryItems.add(addedInventoryItemsItem);
    return this;
  }

  /**
   * Items that appeared in the inventory possibly as a result of an action.
   * @return addedInventoryItems
   */
  @javax.annotation.Nullable
  public List<DestinyEntitiesItemsDestinyItemComponent> getAddedInventoryItems() {
    return addedInventoryItems;
  }

  public void setAddedInventoryItems(List<DestinyEntitiesItemsDestinyItemComponent> addedInventoryItems) {
    this.addedInventoryItems = addedInventoryItems;
  }


  public DestinyResponsesDestinyItemChangeResponse item(DestinyResponsesDestinyItemResponse item) {
    this.item = item;
    return this;
  }

  /**
   * Get item
   * @return item
   */
  @javax.annotation.Nullable
  public DestinyResponsesDestinyItemResponse getItem() {
    return item;
  }

  public void setItem(DestinyResponsesDestinyItemResponse item) {
    this.item = item;
  }


  public DestinyResponsesDestinyItemChangeResponse removedInventoryItems(List<DestinyEntitiesItemsDestinyItemComponent> removedInventoryItems) {
    this.removedInventoryItems = removedInventoryItems;
    return this;
  }

  public DestinyResponsesDestinyItemChangeResponse addRemovedInventoryItemsItem(DestinyEntitiesItemsDestinyItemComponent removedInventoryItemsItem) {
    if (this.removedInventoryItems == null) {
      this.removedInventoryItems = new ArrayList<>();
    }
    this.removedInventoryItems.add(removedInventoryItemsItem);
    return this;
  }

  /**
   * Items that disappeared from the inventory possibly as a result of an action.
   * @return removedInventoryItems
   */
  @javax.annotation.Nullable
  public List<DestinyEntitiesItemsDestinyItemComponent> getRemovedInventoryItems() {
    return removedInventoryItems;
  }

  public void setRemovedInventoryItems(List<DestinyEntitiesItemsDestinyItemComponent> removedInventoryItems) {
    this.removedInventoryItems = removedInventoryItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyResponsesDestinyItemChangeResponse destinyResponsesDestinyItemChangeResponse = (DestinyResponsesDestinyItemChangeResponse) o;
    return Objects.equals(this.addedInventoryItems, destinyResponsesDestinyItemChangeResponse.addedInventoryItems) &&
        Objects.equals(this.item, destinyResponsesDestinyItemChangeResponse.item) &&
        Objects.equals(this.removedInventoryItems, destinyResponsesDestinyItemChangeResponse.removedInventoryItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addedInventoryItems, item, removedInventoryItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyResponsesDestinyItemChangeResponse {\n");
    sb.append("    addedInventoryItems: ").append(toIndentedString(addedInventoryItems)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    removedInventoryItems: ").append(toIndentedString(removedInventoryItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addedInventoryItems");
    openapiFields.add("item");
    openapiFields.add("removedInventoryItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyResponsesDestinyItemChangeResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyResponsesDestinyItemChangeResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyResponsesDestinyItemChangeResponse is not found in the empty JSON string", DestinyResponsesDestinyItemChangeResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyResponsesDestinyItemChangeResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyResponsesDestinyItemChangeResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("addedInventoryItems") != null && !jsonObj.get("addedInventoryItems").isJsonNull()) {
        JsonArray jsonArrayaddedInventoryItems = jsonObj.getAsJsonArray("addedInventoryItems");
        if (jsonArrayaddedInventoryItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addedInventoryItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addedInventoryItems` to be an array in the JSON string but got `%s`", jsonObj.get("addedInventoryItems").toString()));
          }

          // validate the optional field `addedInventoryItems` (array)
          for (int i = 0; i < jsonArrayaddedInventoryItems.size(); i++) {
            DestinyEntitiesItemsDestinyItemComponent.validateJsonElement(jsonArrayaddedInventoryItems.get(i));
          };
        }
      }
      // validate the optional field `item`
      if (jsonObj.get("item") != null && !jsonObj.get("item").isJsonNull()) {
        DestinyResponsesDestinyItemResponse.validateJsonElement(jsonObj.get("item"));
      }
      if (jsonObj.get("removedInventoryItems") != null && !jsonObj.get("removedInventoryItems").isJsonNull()) {
        JsonArray jsonArrayremovedInventoryItems = jsonObj.getAsJsonArray("removedInventoryItems");
        if (jsonArrayremovedInventoryItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("removedInventoryItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `removedInventoryItems` to be an array in the JSON string but got `%s`", jsonObj.get("removedInventoryItems").toString()));
          }

          // validate the optional field `removedInventoryItems` (array)
          for (int i = 0; i < jsonArrayremovedInventoryItems.size(); i++) {
            DestinyEntitiesItemsDestinyItemComponent.validateJsonElement(jsonArrayremovedInventoryItems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyResponsesDestinyItemChangeResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyResponsesDestinyItemChangeResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyResponsesDestinyItemChangeResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyResponsesDestinyItemChangeResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyResponsesDestinyItemChangeResponse>() {
           @Override
           public void write(JsonWriter out, DestinyResponsesDestinyItemChangeResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyResponsesDestinyItemChangeResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyResponsesDestinyItemChangeResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyResponsesDestinyItemChangeResponse
   * @throws IOException if the JSON string is invalid with respect to DestinyResponsesDestinyItemChangeResponse
   */
  public static DestinyResponsesDestinyItemChangeResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyResponsesDestinyItemChangeResponse.class);
  }

  /**
   * Convert an instance of DestinyResponsesDestinyItemChangeResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

