/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ContentModelsContentTypeDefaultValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContentModelsContentTypeProperty
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContentModelsContentTypeProperty {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, String> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_BIND_TO_PROPERTY = "bindToProperty";
  @SerializedName(SERIALIZED_NAME_BIND_TO_PROPERTY)
  private String bindToProperty;

  public static final String SERIALIZED_NAME_BOUND_REGEX = "boundRegex";
  @SerializedName(SERIALIZED_NAME_BOUND_REGEX)
  private String boundRegex;

  public static final String SERIALIZED_NAME_CHILD_PROPERTIES = "childProperties";
  @SerializedName(SERIALIZED_NAME_CHILD_PROPERTIES)
  private List<ContentModelsContentTypeProperty> childProperties = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTENT_TYPE_ALLOWED = "contentTypeAllowed";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE_ALLOWED)
  private String contentTypeAllowed;

  public static final String SERIALIZED_NAME_DATATYPE = "datatype";
  @SerializedName(SERIALIZED_NAME_DATATYPE)
  private Integer datatype;

  public static final String SERIALIZED_NAME_DEFAULT_VALUES = "defaultValues";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUES)
  private List<ContentModelsContentTypeDefaultValue> defaultValues = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ENTITYTYPE = "entitytype";
  @SerializedName(SERIALIZED_NAME_ENTITYTYPE)
  private String entitytype;

  public static final String SERIALIZED_NAME_FALLBACK = "fallback";
  @SerializedName(SERIALIZED_NAME_FALLBACK)
  private Boolean fallback;

  public static final String SERIALIZED_NAME_IS_COMBO = "isCombo";
  @SerializedName(SERIALIZED_NAME_IS_COMBO)
  private Boolean isCombo;

  public static final String SERIALIZED_NAME_IS_EXTERNAL_ALLOWED = "isExternalAllowed";
  @SerializedName(SERIALIZED_NAME_IS_EXTERNAL_ALLOWED)
  private Boolean isExternalAllowed;

  public static final String SERIALIZED_NAME_IS_IMAGE = "isImage";
  @SerializedName(SERIALIZED_NAME_IS_IMAGE)
  private Boolean isImage;

  public static final String SERIALIZED_NAME_IS_TITLE = "isTitle";
  @SerializedName(SERIALIZED_NAME_IS_TITLE)
  private Boolean isTitle;

  public static final String SERIALIZED_NAME_IS_VIDEO = "isVideo";
  @SerializedName(SERIALIZED_NAME_IS_VIDEO)
  private Boolean isVideo;

  public static final String SERIALIZED_NAME_LEGAL_CONTENT_TYPES = "legalContentTypes";
  @SerializedName(SERIALIZED_NAME_LEGAL_CONTENT_TYPES)
  private List<String> legalContentTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOCALIZABLE = "localizable";
  @SerializedName(SERIALIZED_NAME_LOCALIZABLE)
  private Boolean localizable;

  public static final String SERIALIZED_NAME_MAX_BYTE_LENGTH = "maxByteLength";
  @SerializedName(SERIALIZED_NAME_MAX_BYTE_LENGTH)
  private Integer maxByteLength;

  public static final String SERIALIZED_NAME_MAX_FILE_SIZE = "maxFileSize";
  @SerializedName(SERIALIZED_NAME_MAX_FILE_SIZE)
  private Integer maxFileSize;

  public static final String SERIALIZED_NAME_MAX_HEIGHT = "maxHeight";
  @SerializedName(SERIALIZED_NAME_MAX_HEIGHT)
  private Integer maxHeight;

  public static final String SERIALIZED_NAME_MAX_LENGTH = "maxLength";
  @SerializedName(SERIALIZED_NAME_MAX_LENGTH)
  private Integer maxLength;

  public static final String SERIALIZED_NAME_MAX_WIDTH = "maxWidth";
  @SerializedName(SERIALIZED_NAME_MAX_WIDTH)
  private Integer maxWidth;

  public static final String SERIALIZED_NAME_MIN_HEIGHT = "minHeight";
  @SerializedName(SERIALIZED_NAME_MIN_HEIGHT)
  private Integer minHeight;

  public static final String SERIALIZED_NAME_MIN_WIDTH = "minWidth";
  @SerializedName(SERIALIZED_NAME_MIN_WIDTH)
  private Integer minWidth;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private Integer order;

  public static final String SERIALIZED_NAME_PROPERTY_DESCRIPTION = "propertyDescription";
  @SerializedName(SERIALIZED_NAME_PROPERTY_DESCRIPTION)
  private String propertyDescription;

  public static final String SERIALIZED_NAME_PROPERTY_SECTION = "propertySection";
  @SerializedName(SERIALIZED_NAME_PROPERTY_SECTION)
  private String propertySection;

  public static final String SERIALIZED_NAME_READABLE_NAME = "readableName";
  @SerializedName(SERIALIZED_NAME_READABLE_NAME)
  private String readableName;

  public static final String SERIALIZED_NAME_REGEXP = "regexp";
  @SerializedName(SERIALIZED_NAME_REGEXP)
  private String regexp;

  public static final String SERIALIZED_NAME_REPRESENTATION_SELECTION = "representationSelection";
  @SerializedName(SERIALIZED_NAME_REPRESENTATION_SELECTION)
  private Map<String, String> representationSelection = new HashMap<>();

  public static final String SERIALIZED_NAME_REPRESENTATION_VALIDATION_STRING = "representationValidationString";
  @SerializedName(SERIALIZED_NAME_REPRESENTATION_VALIDATION_STRING)
  private String representationValidationString;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required;

  public static final String SERIALIZED_NAME_ROOT_PROPERTY_NAME = "rootPropertyName";
  @SerializedName(SERIALIZED_NAME_ROOT_PROPERTY_NAME)
  private String rootPropertyName;

  public static final String SERIALIZED_NAME_RSS_ATTRIBUTE = "rssAttribute";
  @SerializedName(SERIALIZED_NAME_RSS_ATTRIBUTE)
  private String rssAttribute;

  public static final String SERIALIZED_NAME_SUPPRESS_PROPERTY = "suppressProperty";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_PROPERTY)
  private Boolean suppressProperty;

  public static final String SERIALIZED_NAME_VALIDATE_AS = "validateAs";
  @SerializedName(SERIALIZED_NAME_VALIDATE_AS)
  private String validateAs;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Boolean visible;

  public static final String SERIALIZED_NAME_VISIBLE_DEPENDENCY = "visibleDependency";
  @SerializedName(SERIALIZED_NAME_VISIBLE_DEPENDENCY)
  private String visibleDependency;

  public static final String SERIALIZED_NAME_VISIBLE_ON = "visibleOn";
  @SerializedName(SERIALIZED_NAME_VISIBLE_ON)
  private String visibleOn;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Integer weight;

  public ContentModelsContentTypeProperty() {
  }

  public ContentModelsContentTypeProperty attributes(Map<String, String> attributes) {
    this.attributes = attributes;
    return this;
  }

  public ContentModelsContentTypeProperty putAttributesItem(String key, String attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, String> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, String> attributes) {
    this.attributes = attributes;
  }


  public ContentModelsContentTypeProperty bindToProperty(String bindToProperty) {
    this.bindToProperty = bindToProperty;
    return this;
  }

  /**
   * Get bindToProperty
   * @return bindToProperty
   */
  @javax.annotation.Nullable
  public String getBindToProperty() {
    return bindToProperty;
  }

  public void setBindToProperty(String bindToProperty) {
    this.bindToProperty = bindToProperty;
  }


  public ContentModelsContentTypeProperty boundRegex(String boundRegex) {
    this.boundRegex = boundRegex;
    return this;
  }

  /**
   * Get boundRegex
   * @return boundRegex
   */
  @javax.annotation.Nullable
  public String getBoundRegex() {
    return boundRegex;
  }

  public void setBoundRegex(String boundRegex) {
    this.boundRegex = boundRegex;
  }


  public ContentModelsContentTypeProperty childProperties(List<ContentModelsContentTypeProperty> childProperties) {
    this.childProperties = childProperties;
    return this;
  }

  public ContentModelsContentTypeProperty addChildPropertiesItem(ContentModelsContentTypeProperty childPropertiesItem) {
    if (this.childProperties == null) {
      this.childProperties = new ArrayList<>();
    }
    this.childProperties.add(childPropertiesItem);
    return this;
  }

  /**
   * Get childProperties
   * @return childProperties
   */
  @javax.annotation.Nullable
  public List<ContentModelsContentTypeProperty> getChildProperties() {
    return childProperties;
  }

  public void setChildProperties(List<ContentModelsContentTypeProperty> childProperties) {
    this.childProperties = childProperties;
  }


  public ContentModelsContentTypeProperty contentTypeAllowed(String contentTypeAllowed) {
    this.contentTypeAllowed = contentTypeAllowed;
    return this;
  }

  /**
   * Get contentTypeAllowed
   * @return contentTypeAllowed
   */
  @javax.annotation.Nullable
  public String getContentTypeAllowed() {
    return contentTypeAllowed;
  }

  public void setContentTypeAllowed(String contentTypeAllowed) {
    this.contentTypeAllowed = contentTypeAllowed;
  }


  public ContentModelsContentTypeProperty datatype(Integer datatype) {
    this.datatype = datatype;
    return this;
  }

  /**
   * Get datatype
   * @return datatype
   */
  @javax.annotation.Nullable
  public Integer getDatatype() {
    return datatype;
  }

  public void setDatatype(Integer datatype) {
    this.datatype = datatype;
  }


  public ContentModelsContentTypeProperty defaultValues(List<ContentModelsContentTypeDefaultValue> defaultValues) {
    this.defaultValues = defaultValues;
    return this;
  }

  public ContentModelsContentTypeProperty addDefaultValuesItem(ContentModelsContentTypeDefaultValue defaultValuesItem) {
    if (this.defaultValues == null) {
      this.defaultValues = new ArrayList<>();
    }
    this.defaultValues.add(defaultValuesItem);
    return this;
  }

  /**
   * Get defaultValues
   * @return defaultValues
   */
  @javax.annotation.Nullable
  public List<ContentModelsContentTypeDefaultValue> getDefaultValues() {
    return defaultValues;
  }

  public void setDefaultValues(List<ContentModelsContentTypeDefaultValue> defaultValues) {
    this.defaultValues = defaultValues;
  }


  public ContentModelsContentTypeProperty enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ContentModelsContentTypeProperty entitytype(String entitytype) {
    this.entitytype = entitytype;
    return this;
  }

  /**
   * Get entitytype
   * @return entitytype
   */
  @javax.annotation.Nullable
  public String getEntitytype() {
    return entitytype;
  }

  public void setEntitytype(String entitytype) {
    this.entitytype = entitytype;
  }


  public ContentModelsContentTypeProperty fallback(Boolean fallback) {
    this.fallback = fallback;
    return this;
  }

  /**
   * Get fallback
   * @return fallback
   */
  @javax.annotation.Nullable
  public Boolean getFallback() {
    return fallback;
  }

  public void setFallback(Boolean fallback) {
    this.fallback = fallback;
  }


  public ContentModelsContentTypeProperty isCombo(Boolean isCombo) {
    this.isCombo = isCombo;
    return this;
  }

  /**
   * Get isCombo
   * @return isCombo
   */
  @javax.annotation.Nullable
  public Boolean getIsCombo() {
    return isCombo;
  }

  public void setIsCombo(Boolean isCombo) {
    this.isCombo = isCombo;
  }


  public ContentModelsContentTypeProperty isExternalAllowed(Boolean isExternalAllowed) {
    this.isExternalAllowed = isExternalAllowed;
    return this;
  }

  /**
   * Get isExternalAllowed
   * @return isExternalAllowed
   */
  @javax.annotation.Nullable
  public Boolean getIsExternalAllowed() {
    return isExternalAllowed;
  }

  public void setIsExternalAllowed(Boolean isExternalAllowed) {
    this.isExternalAllowed = isExternalAllowed;
  }


  public ContentModelsContentTypeProperty isImage(Boolean isImage) {
    this.isImage = isImage;
    return this;
  }

  /**
   * Get isImage
   * @return isImage
   */
  @javax.annotation.Nullable
  public Boolean getIsImage() {
    return isImage;
  }

  public void setIsImage(Boolean isImage) {
    this.isImage = isImage;
  }


  public ContentModelsContentTypeProperty isTitle(Boolean isTitle) {
    this.isTitle = isTitle;
    return this;
  }

  /**
   * Get isTitle
   * @return isTitle
   */
  @javax.annotation.Nullable
  public Boolean getIsTitle() {
    return isTitle;
  }

  public void setIsTitle(Boolean isTitle) {
    this.isTitle = isTitle;
  }


  public ContentModelsContentTypeProperty isVideo(Boolean isVideo) {
    this.isVideo = isVideo;
    return this;
  }

  /**
   * Get isVideo
   * @return isVideo
   */
  @javax.annotation.Nullable
  public Boolean getIsVideo() {
    return isVideo;
  }

  public void setIsVideo(Boolean isVideo) {
    this.isVideo = isVideo;
  }


  public ContentModelsContentTypeProperty legalContentTypes(List<String> legalContentTypes) {
    this.legalContentTypes = legalContentTypes;
    return this;
  }

  public ContentModelsContentTypeProperty addLegalContentTypesItem(String legalContentTypesItem) {
    if (this.legalContentTypes == null) {
      this.legalContentTypes = new ArrayList<>();
    }
    this.legalContentTypes.add(legalContentTypesItem);
    return this;
  }

  /**
   * Get legalContentTypes
   * @return legalContentTypes
   */
  @javax.annotation.Nullable
  public List<String> getLegalContentTypes() {
    return legalContentTypes;
  }

  public void setLegalContentTypes(List<String> legalContentTypes) {
    this.legalContentTypes = legalContentTypes;
  }


  public ContentModelsContentTypeProperty localizable(Boolean localizable) {
    this.localizable = localizable;
    return this;
  }

  /**
   * Get localizable
   * @return localizable
   */
  @javax.annotation.Nullable
  public Boolean getLocalizable() {
    return localizable;
  }

  public void setLocalizable(Boolean localizable) {
    this.localizable = localizable;
  }


  public ContentModelsContentTypeProperty maxByteLength(Integer maxByteLength) {
    this.maxByteLength = maxByteLength;
    return this;
  }

  /**
   * Get maxByteLength
   * @return maxByteLength
   */
  @javax.annotation.Nullable
  public Integer getMaxByteLength() {
    return maxByteLength;
  }

  public void setMaxByteLength(Integer maxByteLength) {
    this.maxByteLength = maxByteLength;
  }


  public ContentModelsContentTypeProperty maxFileSize(Integer maxFileSize) {
    this.maxFileSize = maxFileSize;
    return this;
  }

  /**
   * Get maxFileSize
   * @return maxFileSize
   */
  @javax.annotation.Nullable
  public Integer getMaxFileSize() {
    return maxFileSize;
  }

  public void setMaxFileSize(Integer maxFileSize) {
    this.maxFileSize = maxFileSize;
  }


  public ContentModelsContentTypeProperty maxHeight(Integer maxHeight) {
    this.maxHeight = maxHeight;
    return this;
  }

  /**
   * Get maxHeight
   * @return maxHeight
   */
  @javax.annotation.Nullable
  public Integer getMaxHeight() {
    return maxHeight;
  }

  public void setMaxHeight(Integer maxHeight) {
    this.maxHeight = maxHeight;
  }


  public ContentModelsContentTypeProperty maxLength(Integer maxLength) {
    this.maxLength = maxLength;
    return this;
  }

  /**
   * Get maxLength
   * @return maxLength
   */
  @javax.annotation.Nullable
  public Integer getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(Integer maxLength) {
    this.maxLength = maxLength;
  }


  public ContentModelsContentTypeProperty maxWidth(Integer maxWidth) {
    this.maxWidth = maxWidth;
    return this;
  }

  /**
   * Get maxWidth
   * @return maxWidth
   */
  @javax.annotation.Nullable
  public Integer getMaxWidth() {
    return maxWidth;
  }

  public void setMaxWidth(Integer maxWidth) {
    this.maxWidth = maxWidth;
  }


  public ContentModelsContentTypeProperty minHeight(Integer minHeight) {
    this.minHeight = minHeight;
    return this;
  }

  /**
   * Get minHeight
   * @return minHeight
   */
  @javax.annotation.Nullable
  public Integer getMinHeight() {
    return minHeight;
  }

  public void setMinHeight(Integer minHeight) {
    this.minHeight = minHeight;
  }


  public ContentModelsContentTypeProperty minWidth(Integer minWidth) {
    this.minWidth = minWidth;
    return this;
  }

  /**
   * Get minWidth
   * @return minWidth
   */
  @javax.annotation.Nullable
  public Integer getMinWidth() {
    return minWidth;
  }

  public void setMinWidth(Integer minWidth) {
    this.minWidth = minWidth;
  }


  public ContentModelsContentTypeProperty name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ContentModelsContentTypeProperty order(Integer order) {
    this.order = order;
    return this;
  }

  /**
   * Get order
   * @return order
   */
  @javax.annotation.Nullable
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }


  public ContentModelsContentTypeProperty propertyDescription(String propertyDescription) {
    this.propertyDescription = propertyDescription;
    return this;
  }

  /**
   * Get propertyDescription
   * @return propertyDescription
   */
  @javax.annotation.Nullable
  public String getPropertyDescription() {
    return propertyDescription;
  }

  public void setPropertyDescription(String propertyDescription) {
    this.propertyDescription = propertyDescription;
  }


  public ContentModelsContentTypeProperty propertySection(String propertySection) {
    this.propertySection = propertySection;
    return this;
  }

  /**
   * Get propertySection
   * @return propertySection
   */
  @javax.annotation.Nullable
  public String getPropertySection() {
    return propertySection;
  }

  public void setPropertySection(String propertySection) {
    this.propertySection = propertySection;
  }


  public ContentModelsContentTypeProperty readableName(String readableName) {
    this.readableName = readableName;
    return this;
  }

  /**
   * Get readableName
   * @return readableName
   */
  @javax.annotation.Nullable
  public String getReadableName() {
    return readableName;
  }

  public void setReadableName(String readableName) {
    this.readableName = readableName;
  }


  public ContentModelsContentTypeProperty regexp(String regexp) {
    this.regexp = regexp;
    return this;
  }

  /**
   * Get regexp
   * @return regexp
   */
  @javax.annotation.Nullable
  public String getRegexp() {
    return regexp;
  }

  public void setRegexp(String regexp) {
    this.regexp = regexp;
  }


  public ContentModelsContentTypeProperty representationSelection(Map<String, String> representationSelection) {
    this.representationSelection = representationSelection;
    return this;
  }

  public ContentModelsContentTypeProperty putRepresentationSelectionItem(String key, String representationSelectionItem) {
    if (this.representationSelection == null) {
      this.representationSelection = new HashMap<>();
    }
    this.representationSelection.put(key, representationSelectionItem);
    return this;
  }

  /**
   * Get representationSelection
   * @return representationSelection
   */
  @javax.annotation.Nullable
  public Map<String, String> getRepresentationSelection() {
    return representationSelection;
  }

  public void setRepresentationSelection(Map<String, String> representationSelection) {
    this.representationSelection = representationSelection;
  }


  public ContentModelsContentTypeProperty representationValidationString(String representationValidationString) {
    this.representationValidationString = representationValidationString;
    return this;
  }

  /**
   * Get representationValidationString
   * @return representationValidationString
   */
  @javax.annotation.Nullable
  public String getRepresentationValidationString() {
    return representationValidationString;
  }

  public void setRepresentationValidationString(String representationValidationString) {
    this.representationValidationString = representationValidationString;
  }


  public ContentModelsContentTypeProperty required(Boolean required) {
    this.required = required;
    return this;
  }

  /**
   * Get required
   * @return required
   */
  @javax.annotation.Nullable
  public Boolean getRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }


  public ContentModelsContentTypeProperty rootPropertyName(String rootPropertyName) {
    this.rootPropertyName = rootPropertyName;
    return this;
  }

  /**
   * Get rootPropertyName
   * @return rootPropertyName
   */
  @javax.annotation.Nullable
  public String getRootPropertyName() {
    return rootPropertyName;
  }

  public void setRootPropertyName(String rootPropertyName) {
    this.rootPropertyName = rootPropertyName;
  }


  public ContentModelsContentTypeProperty rssAttribute(String rssAttribute) {
    this.rssAttribute = rssAttribute;
    return this;
  }

  /**
   * Get rssAttribute
   * @return rssAttribute
   */
  @javax.annotation.Nullable
  public String getRssAttribute() {
    return rssAttribute;
  }

  public void setRssAttribute(String rssAttribute) {
    this.rssAttribute = rssAttribute;
  }


  public ContentModelsContentTypeProperty suppressProperty(Boolean suppressProperty) {
    this.suppressProperty = suppressProperty;
    return this;
  }

  /**
   * Get suppressProperty
   * @return suppressProperty
   */
  @javax.annotation.Nullable
  public Boolean getSuppressProperty() {
    return suppressProperty;
  }

  public void setSuppressProperty(Boolean suppressProperty) {
    this.suppressProperty = suppressProperty;
  }


  public ContentModelsContentTypeProperty validateAs(String validateAs) {
    this.validateAs = validateAs;
    return this;
  }

  /**
   * Get validateAs
   * @return validateAs
   */
  @javax.annotation.Nullable
  public String getValidateAs() {
    return validateAs;
  }

  public void setValidateAs(String validateAs) {
    this.validateAs = validateAs;
  }


  public ContentModelsContentTypeProperty value(String value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  public ContentModelsContentTypeProperty visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

  /**
   * Get visible
   * @return visible
   */
  @javax.annotation.Nullable
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  public ContentModelsContentTypeProperty visibleDependency(String visibleDependency) {
    this.visibleDependency = visibleDependency;
    return this;
  }

  /**
   * Get visibleDependency
   * @return visibleDependency
   */
  @javax.annotation.Nullable
  public String getVisibleDependency() {
    return visibleDependency;
  }

  public void setVisibleDependency(String visibleDependency) {
    this.visibleDependency = visibleDependency;
  }


  public ContentModelsContentTypeProperty visibleOn(String visibleOn) {
    this.visibleOn = visibleOn;
    return this;
  }

  /**
   * Get visibleOn
   * @return visibleOn
   */
  @javax.annotation.Nullable
  public String getVisibleOn() {
    return visibleOn;
  }

  public void setVisibleOn(String visibleOn) {
    this.visibleOn = visibleOn;
  }


  public ContentModelsContentTypeProperty weight(Integer weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Get weight
   * @return weight
   */
  @javax.annotation.Nullable
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentModelsContentTypeProperty contentModelsContentTypeProperty = (ContentModelsContentTypeProperty) o;
    return Objects.equals(this.attributes, contentModelsContentTypeProperty.attributes) &&
        Objects.equals(this.bindToProperty, contentModelsContentTypeProperty.bindToProperty) &&
        Objects.equals(this.boundRegex, contentModelsContentTypeProperty.boundRegex) &&
        Objects.equals(this.childProperties, contentModelsContentTypeProperty.childProperties) &&
        Objects.equals(this.contentTypeAllowed, contentModelsContentTypeProperty.contentTypeAllowed) &&
        Objects.equals(this.datatype, contentModelsContentTypeProperty.datatype) &&
        Objects.equals(this.defaultValues, contentModelsContentTypeProperty.defaultValues) &&
        Objects.equals(this.enabled, contentModelsContentTypeProperty.enabled) &&
        Objects.equals(this.entitytype, contentModelsContentTypeProperty.entitytype) &&
        Objects.equals(this.fallback, contentModelsContentTypeProperty.fallback) &&
        Objects.equals(this.isCombo, contentModelsContentTypeProperty.isCombo) &&
        Objects.equals(this.isExternalAllowed, contentModelsContentTypeProperty.isExternalAllowed) &&
        Objects.equals(this.isImage, contentModelsContentTypeProperty.isImage) &&
        Objects.equals(this.isTitle, contentModelsContentTypeProperty.isTitle) &&
        Objects.equals(this.isVideo, contentModelsContentTypeProperty.isVideo) &&
        Objects.equals(this.legalContentTypes, contentModelsContentTypeProperty.legalContentTypes) &&
        Objects.equals(this.localizable, contentModelsContentTypeProperty.localizable) &&
        Objects.equals(this.maxByteLength, contentModelsContentTypeProperty.maxByteLength) &&
        Objects.equals(this.maxFileSize, contentModelsContentTypeProperty.maxFileSize) &&
        Objects.equals(this.maxHeight, contentModelsContentTypeProperty.maxHeight) &&
        Objects.equals(this.maxLength, contentModelsContentTypeProperty.maxLength) &&
        Objects.equals(this.maxWidth, contentModelsContentTypeProperty.maxWidth) &&
        Objects.equals(this.minHeight, contentModelsContentTypeProperty.minHeight) &&
        Objects.equals(this.minWidth, contentModelsContentTypeProperty.minWidth) &&
        Objects.equals(this.name, contentModelsContentTypeProperty.name) &&
        Objects.equals(this.order, contentModelsContentTypeProperty.order) &&
        Objects.equals(this.propertyDescription, contentModelsContentTypeProperty.propertyDescription) &&
        Objects.equals(this.propertySection, contentModelsContentTypeProperty.propertySection) &&
        Objects.equals(this.readableName, contentModelsContentTypeProperty.readableName) &&
        Objects.equals(this.regexp, contentModelsContentTypeProperty.regexp) &&
        Objects.equals(this.representationSelection, contentModelsContentTypeProperty.representationSelection) &&
        Objects.equals(this.representationValidationString, contentModelsContentTypeProperty.representationValidationString) &&
        Objects.equals(this.required, contentModelsContentTypeProperty.required) &&
        Objects.equals(this.rootPropertyName, contentModelsContentTypeProperty.rootPropertyName) &&
        Objects.equals(this.rssAttribute, contentModelsContentTypeProperty.rssAttribute) &&
        Objects.equals(this.suppressProperty, contentModelsContentTypeProperty.suppressProperty) &&
        Objects.equals(this.validateAs, contentModelsContentTypeProperty.validateAs) &&
        Objects.equals(this.value, contentModelsContentTypeProperty.value) &&
        Objects.equals(this.visible, contentModelsContentTypeProperty.visible) &&
        Objects.equals(this.visibleDependency, contentModelsContentTypeProperty.visibleDependency) &&
        Objects.equals(this.visibleOn, contentModelsContentTypeProperty.visibleOn) &&
        Objects.equals(this.weight, contentModelsContentTypeProperty.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, bindToProperty, boundRegex, childProperties, contentTypeAllowed, datatype, defaultValues, enabled, entitytype, fallback, isCombo, isExternalAllowed, isImage, isTitle, isVideo, legalContentTypes, localizable, maxByteLength, maxFileSize, maxHeight, maxLength, maxWidth, minHeight, minWidth, name, order, propertyDescription, propertySection, readableName, regexp, representationSelection, representationValidationString, required, rootPropertyName, rssAttribute, suppressProperty, validateAs, value, visible, visibleDependency, visibleOn, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentModelsContentTypeProperty {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    bindToProperty: ").append(toIndentedString(bindToProperty)).append("\n");
    sb.append("    boundRegex: ").append(toIndentedString(boundRegex)).append("\n");
    sb.append("    childProperties: ").append(toIndentedString(childProperties)).append("\n");
    sb.append("    contentTypeAllowed: ").append(toIndentedString(contentTypeAllowed)).append("\n");
    sb.append("    datatype: ").append(toIndentedString(datatype)).append("\n");
    sb.append("    defaultValues: ").append(toIndentedString(defaultValues)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    entitytype: ").append(toIndentedString(entitytype)).append("\n");
    sb.append("    fallback: ").append(toIndentedString(fallback)).append("\n");
    sb.append("    isCombo: ").append(toIndentedString(isCombo)).append("\n");
    sb.append("    isExternalAllowed: ").append(toIndentedString(isExternalAllowed)).append("\n");
    sb.append("    isImage: ").append(toIndentedString(isImage)).append("\n");
    sb.append("    isTitle: ").append(toIndentedString(isTitle)).append("\n");
    sb.append("    isVideo: ").append(toIndentedString(isVideo)).append("\n");
    sb.append("    legalContentTypes: ").append(toIndentedString(legalContentTypes)).append("\n");
    sb.append("    localizable: ").append(toIndentedString(localizable)).append("\n");
    sb.append("    maxByteLength: ").append(toIndentedString(maxByteLength)).append("\n");
    sb.append("    maxFileSize: ").append(toIndentedString(maxFileSize)).append("\n");
    sb.append("    maxHeight: ").append(toIndentedString(maxHeight)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    maxWidth: ").append(toIndentedString(maxWidth)).append("\n");
    sb.append("    minHeight: ").append(toIndentedString(minHeight)).append("\n");
    sb.append("    minWidth: ").append(toIndentedString(minWidth)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    propertyDescription: ").append(toIndentedString(propertyDescription)).append("\n");
    sb.append("    propertySection: ").append(toIndentedString(propertySection)).append("\n");
    sb.append("    readableName: ").append(toIndentedString(readableName)).append("\n");
    sb.append("    regexp: ").append(toIndentedString(regexp)).append("\n");
    sb.append("    representationSelection: ").append(toIndentedString(representationSelection)).append("\n");
    sb.append("    representationValidationString: ").append(toIndentedString(representationValidationString)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    rootPropertyName: ").append(toIndentedString(rootPropertyName)).append("\n");
    sb.append("    rssAttribute: ").append(toIndentedString(rssAttribute)).append("\n");
    sb.append("    suppressProperty: ").append(toIndentedString(suppressProperty)).append("\n");
    sb.append("    validateAs: ").append(toIndentedString(validateAs)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    visibleDependency: ").append(toIndentedString(visibleDependency)).append("\n");
    sb.append("    visibleOn: ").append(toIndentedString(visibleOn)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("bindToProperty");
    openapiFields.add("boundRegex");
    openapiFields.add("childProperties");
    openapiFields.add("contentTypeAllowed");
    openapiFields.add("datatype");
    openapiFields.add("defaultValues");
    openapiFields.add("enabled");
    openapiFields.add("entitytype");
    openapiFields.add("fallback");
    openapiFields.add("isCombo");
    openapiFields.add("isExternalAllowed");
    openapiFields.add("isImage");
    openapiFields.add("isTitle");
    openapiFields.add("isVideo");
    openapiFields.add("legalContentTypes");
    openapiFields.add("localizable");
    openapiFields.add("maxByteLength");
    openapiFields.add("maxFileSize");
    openapiFields.add("maxHeight");
    openapiFields.add("maxLength");
    openapiFields.add("maxWidth");
    openapiFields.add("minHeight");
    openapiFields.add("minWidth");
    openapiFields.add("name");
    openapiFields.add("order");
    openapiFields.add("propertyDescription");
    openapiFields.add("propertySection");
    openapiFields.add("readableName");
    openapiFields.add("regexp");
    openapiFields.add("representationSelection");
    openapiFields.add("representationValidationString");
    openapiFields.add("required");
    openapiFields.add("rootPropertyName");
    openapiFields.add("rssAttribute");
    openapiFields.add("suppressProperty");
    openapiFields.add("validateAs");
    openapiFields.add("value");
    openapiFields.add("visible");
    openapiFields.add("visibleDependency");
    openapiFields.add("visibleOn");
    openapiFields.add("weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContentModelsContentTypeProperty
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContentModelsContentTypeProperty.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContentModelsContentTypeProperty is not found in the empty JSON string", ContentModelsContentTypeProperty.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContentModelsContentTypeProperty.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContentModelsContentTypeProperty` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bindToProperty") != null && !jsonObj.get("bindToProperty").isJsonNull()) && !jsonObj.get("bindToProperty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bindToProperty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bindToProperty").toString()));
      }
      if ((jsonObj.get("boundRegex") != null && !jsonObj.get("boundRegex").isJsonNull()) && !jsonObj.get("boundRegex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `boundRegex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("boundRegex").toString()));
      }
      if (jsonObj.get("childProperties") != null && !jsonObj.get("childProperties").isJsonNull()) {
        JsonArray jsonArraychildProperties = jsonObj.getAsJsonArray("childProperties");
        if (jsonArraychildProperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("childProperties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `childProperties` to be an array in the JSON string but got `%s`", jsonObj.get("childProperties").toString()));
          }

          // validate the optional field `childProperties` (array)
          for (int i = 0; i < jsonArraychildProperties.size(); i++) {
            ContentModelsContentTypeProperty.validateJsonElement(jsonArraychildProperties.get(i));
          };
        }
      }
      if ((jsonObj.get("contentTypeAllowed") != null && !jsonObj.get("contentTypeAllowed").isJsonNull()) && !jsonObj.get("contentTypeAllowed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentTypeAllowed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentTypeAllowed").toString()));
      }
      if (jsonObj.get("defaultValues") != null && !jsonObj.get("defaultValues").isJsonNull()) {
        JsonArray jsonArraydefaultValues = jsonObj.getAsJsonArray("defaultValues");
        if (jsonArraydefaultValues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("defaultValues").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `defaultValues` to be an array in the JSON string but got `%s`", jsonObj.get("defaultValues").toString()));
          }

          // validate the optional field `defaultValues` (array)
          for (int i = 0; i < jsonArraydefaultValues.size(); i++) {
            ContentModelsContentTypeDefaultValue.validateJsonElement(jsonArraydefaultValues.get(i));
          };
        }
      }
      if ((jsonObj.get("entitytype") != null && !jsonObj.get("entitytype").isJsonNull()) && !jsonObj.get("entitytype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entitytype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entitytype").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("legalContentTypes") != null && !jsonObj.get("legalContentTypes").isJsonNull() && !jsonObj.get("legalContentTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalContentTypes` to be an array in the JSON string but got `%s`", jsonObj.get("legalContentTypes").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("propertyDescription") != null && !jsonObj.get("propertyDescription").isJsonNull()) && !jsonObj.get("propertyDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `propertyDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("propertyDescription").toString()));
      }
      if ((jsonObj.get("propertySection") != null && !jsonObj.get("propertySection").isJsonNull()) && !jsonObj.get("propertySection").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `propertySection` to be a primitive type in the JSON string but got `%s`", jsonObj.get("propertySection").toString()));
      }
      if ((jsonObj.get("readableName") != null && !jsonObj.get("readableName").isJsonNull()) && !jsonObj.get("readableName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `readableName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("readableName").toString()));
      }
      if ((jsonObj.get("regexp") != null && !jsonObj.get("regexp").isJsonNull()) && !jsonObj.get("regexp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regexp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regexp").toString()));
      }
      if ((jsonObj.get("representationValidationString") != null && !jsonObj.get("representationValidationString").isJsonNull()) && !jsonObj.get("representationValidationString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `representationValidationString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("representationValidationString").toString()));
      }
      if ((jsonObj.get("rootPropertyName") != null && !jsonObj.get("rootPropertyName").isJsonNull()) && !jsonObj.get("rootPropertyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rootPropertyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rootPropertyName").toString()));
      }
      if ((jsonObj.get("rssAttribute") != null && !jsonObj.get("rssAttribute").isJsonNull()) && !jsonObj.get("rssAttribute").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rssAttribute` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rssAttribute").toString()));
      }
      if ((jsonObj.get("validateAs") != null && !jsonObj.get("validateAs").isJsonNull()) && !jsonObj.get("validateAs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `validateAs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("validateAs").toString()));
      }
      if ((jsonObj.get("value") != null && !jsonObj.get("value").isJsonNull()) && !jsonObj.get("value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("value").toString()));
      }
      if ((jsonObj.get("visibleDependency") != null && !jsonObj.get("visibleDependency").isJsonNull()) && !jsonObj.get("visibleDependency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visibleDependency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visibleDependency").toString()));
      }
      if ((jsonObj.get("visibleOn") != null && !jsonObj.get("visibleOn").isJsonNull()) && !jsonObj.get("visibleOn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visibleOn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visibleOn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContentModelsContentTypeProperty.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContentModelsContentTypeProperty' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContentModelsContentTypeProperty> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContentModelsContentTypeProperty.class));

       return (TypeAdapter<T>) new TypeAdapter<ContentModelsContentTypeProperty>() {
           @Override
           public void write(JsonWriter out, ContentModelsContentTypeProperty value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContentModelsContentTypeProperty read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContentModelsContentTypeProperty given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContentModelsContentTypeProperty
   * @throws IOException if the JSON string is invalid with respect to ContentModelsContentTypeProperty
   */
  public static ContentModelsContentTypeProperty fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContentModelsContentTypeProperty.class);
  }

  /**
   * Convert an instance of ContentModelsContentTypeProperty to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

