/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TrendingTrendingEntryCommunityCreation;
import org.openapitools.client.model.TrendingTrendingEntryDestinyActivity;
import org.openapitools.client.model.TrendingTrendingEntryDestinyItem;
import org.openapitools.client.model.TrendingTrendingEntryDestinyRitual;
import org.openapitools.client.model.TrendingTrendingEntryNews;
import org.openapitools.client.model.TrendingTrendingEntrySupportArticle;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TrendingTrendingDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TrendingTrendingDetail {
  public static final String SERIALIZED_NAME_CREATION = "creation";
  @SerializedName(SERIALIZED_NAME_CREATION)
  private TrendingTrendingEntryCommunityCreation creation;

  public static final String SERIALIZED_NAME_DESTINY_ACTIVITY = "destinyActivity";
  @SerializedName(SERIALIZED_NAME_DESTINY_ACTIVITY)
  private TrendingTrendingEntryDestinyActivity destinyActivity;

  public static final String SERIALIZED_NAME_DESTINY_ITEM = "destinyItem";
  @SerializedName(SERIALIZED_NAME_DESTINY_ITEM)
  private TrendingTrendingEntryDestinyItem destinyItem;

  public static final String SERIALIZED_NAME_DESTINY_RITUAL = "destinyRitual";
  @SerializedName(SERIALIZED_NAME_DESTINY_RITUAL)
  private TrendingTrendingEntryDestinyRitual destinyRitual;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entityType";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private Integer entityType;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_NEWS = "news";
  @SerializedName(SERIALIZED_NAME_NEWS)
  private TrendingTrendingEntryNews news;

  public static final String SERIALIZED_NAME_SUPPORT = "support";
  @SerializedName(SERIALIZED_NAME_SUPPORT)
  private TrendingTrendingEntrySupportArticle support;

  public TrendingTrendingDetail() {
  }

  public TrendingTrendingDetail creation(TrendingTrendingEntryCommunityCreation creation) {
    this.creation = creation;
    return this;
  }

  /**
   * Get creation
   * @return creation
   */
  @javax.annotation.Nullable
  public TrendingTrendingEntryCommunityCreation getCreation() {
    return creation;
  }

  public void setCreation(TrendingTrendingEntryCommunityCreation creation) {
    this.creation = creation;
  }


  public TrendingTrendingDetail destinyActivity(TrendingTrendingEntryDestinyActivity destinyActivity) {
    this.destinyActivity = destinyActivity;
    return this;
  }

  /**
   * Get destinyActivity
   * @return destinyActivity
   */
  @javax.annotation.Nullable
  public TrendingTrendingEntryDestinyActivity getDestinyActivity() {
    return destinyActivity;
  }

  public void setDestinyActivity(TrendingTrendingEntryDestinyActivity destinyActivity) {
    this.destinyActivity = destinyActivity;
  }


  public TrendingTrendingDetail destinyItem(TrendingTrendingEntryDestinyItem destinyItem) {
    this.destinyItem = destinyItem;
    return this;
  }

  /**
   * Get destinyItem
   * @return destinyItem
   */
  @javax.annotation.Nullable
  public TrendingTrendingEntryDestinyItem getDestinyItem() {
    return destinyItem;
  }

  public void setDestinyItem(TrendingTrendingEntryDestinyItem destinyItem) {
    this.destinyItem = destinyItem;
  }


  public TrendingTrendingDetail destinyRitual(TrendingTrendingEntryDestinyRitual destinyRitual) {
    this.destinyRitual = destinyRitual;
    return this;
  }

  /**
   * Get destinyRitual
   * @return destinyRitual
   */
  @javax.annotation.Nullable
  public TrendingTrendingEntryDestinyRitual getDestinyRitual() {
    return destinyRitual;
  }

  public void setDestinyRitual(TrendingTrendingEntryDestinyRitual destinyRitual) {
    this.destinyRitual = destinyRitual;
  }


  public TrendingTrendingDetail entityType(Integer entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType
   */
  @javax.annotation.Nullable
  public Integer getEntityType() {
    return entityType;
  }

  public void setEntityType(Integer entityType) {
    this.entityType = entityType;
  }


  public TrendingTrendingDetail identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Get identifier
   * @return identifier
   */
  @javax.annotation.Nullable
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public TrendingTrendingDetail news(TrendingTrendingEntryNews news) {
    this.news = news;
    return this;
  }

  /**
   * Get news
   * @return news
   */
  @javax.annotation.Nullable
  public TrendingTrendingEntryNews getNews() {
    return news;
  }

  public void setNews(TrendingTrendingEntryNews news) {
    this.news = news;
  }


  public TrendingTrendingDetail support(TrendingTrendingEntrySupportArticle support) {
    this.support = support;
    return this;
  }

  /**
   * Get support
   * @return support
   */
  @javax.annotation.Nullable
  public TrendingTrendingEntrySupportArticle getSupport() {
    return support;
  }

  public void setSupport(TrendingTrendingEntrySupportArticle support) {
    this.support = support;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrendingTrendingDetail trendingTrendingDetail = (TrendingTrendingDetail) o;
    return Objects.equals(this.creation, trendingTrendingDetail.creation) &&
        Objects.equals(this.destinyActivity, trendingTrendingDetail.destinyActivity) &&
        Objects.equals(this.destinyItem, trendingTrendingDetail.destinyItem) &&
        Objects.equals(this.destinyRitual, trendingTrendingDetail.destinyRitual) &&
        Objects.equals(this.entityType, trendingTrendingDetail.entityType) &&
        Objects.equals(this.identifier, trendingTrendingDetail.identifier) &&
        Objects.equals(this.news, trendingTrendingDetail.news) &&
        Objects.equals(this.support, trendingTrendingDetail.support);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creation, destinyActivity, destinyItem, destinyRitual, entityType, identifier, news, support);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrendingTrendingDetail {\n");
    sb.append("    creation: ").append(toIndentedString(creation)).append("\n");
    sb.append("    destinyActivity: ").append(toIndentedString(destinyActivity)).append("\n");
    sb.append("    destinyItem: ").append(toIndentedString(destinyItem)).append("\n");
    sb.append("    destinyRitual: ").append(toIndentedString(destinyRitual)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    news: ").append(toIndentedString(news)).append("\n");
    sb.append("    support: ").append(toIndentedString(support)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creation");
    openapiFields.add("destinyActivity");
    openapiFields.add("destinyItem");
    openapiFields.add("destinyRitual");
    openapiFields.add("entityType");
    openapiFields.add("identifier");
    openapiFields.add("news");
    openapiFields.add("support");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TrendingTrendingDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TrendingTrendingDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TrendingTrendingDetail is not found in the empty JSON string", TrendingTrendingDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TrendingTrendingDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TrendingTrendingDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `creation`
      if (jsonObj.get("creation") != null && !jsonObj.get("creation").isJsonNull()) {
        TrendingTrendingEntryCommunityCreation.validateJsonElement(jsonObj.get("creation"));
      }
      // validate the optional field `destinyActivity`
      if (jsonObj.get("destinyActivity") != null && !jsonObj.get("destinyActivity").isJsonNull()) {
        TrendingTrendingEntryDestinyActivity.validateJsonElement(jsonObj.get("destinyActivity"));
      }
      // validate the optional field `destinyItem`
      if (jsonObj.get("destinyItem") != null && !jsonObj.get("destinyItem").isJsonNull()) {
        TrendingTrendingEntryDestinyItem.validateJsonElement(jsonObj.get("destinyItem"));
      }
      // validate the optional field `destinyRitual`
      if (jsonObj.get("destinyRitual") != null && !jsonObj.get("destinyRitual").isJsonNull()) {
        TrendingTrendingEntryDestinyRitual.validateJsonElement(jsonObj.get("destinyRitual"));
      }
      if ((jsonObj.get("identifier") != null && !jsonObj.get("identifier").isJsonNull()) && !jsonObj.get("identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifier").toString()));
      }
      // validate the optional field `news`
      if (jsonObj.get("news") != null && !jsonObj.get("news").isJsonNull()) {
        TrendingTrendingEntryNews.validateJsonElement(jsonObj.get("news"));
      }
      // validate the optional field `support`
      if (jsonObj.get("support") != null && !jsonObj.get("support").isJsonNull()) {
        TrendingTrendingEntrySupportArticle.validateJsonElement(jsonObj.get("support"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TrendingTrendingDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TrendingTrendingDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TrendingTrendingDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TrendingTrendingDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<TrendingTrendingDetail>() {
           @Override
           public void write(JsonWriter out, TrendingTrendingDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TrendingTrendingDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TrendingTrendingDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TrendingTrendingDetail
   * @throws IOException if the JSON string is invalid with respect to TrendingTrendingDetail
   */
  public static TrendingTrendingDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TrendingTrendingDetail.class);
  }

  /**
   * Convert an instance of TrendingTrendingDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

