/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.DestinyHistoricalStatsDestinyHistoricalStatsValue;
import org.openapitools.client.model.DestinyHistoricalStatsDestinyPlayer;
import org.openapitools.client.model.DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DestinyHistoricalStatsDestinyPostGameCarnageReportEntry
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyHistoricalStatsDestinyPostGameCarnageReportEntry {
  public static final String SERIALIZED_NAME_CHARACTER_ID = "characterId";
  @SerializedName(SERIALIZED_NAME_CHARACTER_ID)
  private Long characterId;

  public static final String SERIALIZED_NAME_EXTENDED = "extended";
  @SerializedName(SERIALIZED_NAME_EXTENDED)
  private DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData extended;

  public static final String SERIALIZED_NAME_PLAYER = "player";
  @SerializedName(SERIALIZED_NAME_PLAYER)
  private DestinyHistoricalStatsDestinyPlayer player;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private DestinyHistoricalStatsDestinyHistoricalStatsValue score;

  public static final String SERIALIZED_NAME_STANDING = "standing";
  @SerializedName(SERIALIZED_NAME_STANDING)
  private Integer standing;

  public static final String SERIALIZED_NAME_VALUES = "values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private Map<String, DestinyHistoricalStatsDestinyHistoricalStatsValue> values = new HashMap<>();

  public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry() {
  }

  public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry characterId(Long characterId) {
    this.characterId = characterId;
    return this;
  }

  /**
   * ID of the player&#39;s character used in the activity.
   * @return characterId
   */
  @javax.annotation.Nullable
  public Long getCharacterId() {
    return characterId;
  }

  public void setCharacterId(Long characterId) {
    this.characterId = characterId;
  }


  public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry extended(DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData extended) {
    this.extended = extended;
    return this;
  }

  /**
   * Extended data extracted from the activity blob.
   * @return extended
   */
  @javax.annotation.Nullable
  public DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData getExtended() {
    return extended;
  }

  public void setExtended(DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData extended) {
    this.extended = extended;
  }


  public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry player(DestinyHistoricalStatsDestinyPlayer player) {
    this.player = player;
    return this;
  }

  /**
   * Identity details of the player
   * @return player
   */
  @javax.annotation.Nullable
  public DestinyHistoricalStatsDestinyPlayer getPlayer() {
    return player;
  }

  public void setPlayer(DestinyHistoricalStatsDestinyPlayer player) {
    this.player = player;
  }


  public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry score(DestinyHistoricalStatsDestinyHistoricalStatsValue score) {
    this.score = score;
    return this;
  }

  /**
   * Score of the player if available
   * @return score
   */
  @javax.annotation.Nullable
  public DestinyHistoricalStatsDestinyHistoricalStatsValue getScore() {
    return score;
  }

  public void setScore(DestinyHistoricalStatsDestinyHistoricalStatsValue score) {
    this.score = score;
  }


  public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry standing(Integer standing) {
    this.standing = standing;
    return this;
  }

  /**
   * Standing of the player
   * @return standing
   */
  @javax.annotation.Nullable
  public Integer getStanding() {
    return standing;
  }

  public void setStanding(Integer standing) {
    this.standing = standing;
  }


  public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry values(Map<String, DestinyHistoricalStatsDestinyHistoricalStatsValue> values) {
    this.values = values;
    return this;
  }

  public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry putValuesItem(String key, DestinyHistoricalStatsDestinyHistoricalStatsValue valuesItem) {
    if (this.values == null) {
      this.values = new HashMap<>();
    }
    this.values.put(key, valuesItem);
    return this;
  }

  /**
   * Collection of stats for the player in this activity.
   * @return values
   */
  @javax.annotation.Nullable
  public Map<String, DestinyHistoricalStatsDestinyHistoricalStatsValue> getValues() {
    return values;
  }

  public void setValues(Map<String, DestinyHistoricalStatsDestinyHistoricalStatsValue> values) {
    this.values = values;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyHistoricalStatsDestinyPostGameCarnageReportEntry destinyHistoricalStatsDestinyPostGameCarnageReportEntry = (DestinyHistoricalStatsDestinyPostGameCarnageReportEntry) o;
    return Objects.equals(this.characterId, destinyHistoricalStatsDestinyPostGameCarnageReportEntry.characterId) &&
        Objects.equals(this.extended, destinyHistoricalStatsDestinyPostGameCarnageReportEntry.extended) &&
        Objects.equals(this.player, destinyHistoricalStatsDestinyPostGameCarnageReportEntry.player) &&
        Objects.equals(this.score, destinyHistoricalStatsDestinyPostGameCarnageReportEntry.score) &&
        Objects.equals(this.standing, destinyHistoricalStatsDestinyPostGameCarnageReportEntry.standing) &&
        Objects.equals(this.values, destinyHistoricalStatsDestinyPostGameCarnageReportEntry.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(characterId, extended, player, score, standing, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyHistoricalStatsDestinyPostGameCarnageReportEntry {\n");
    sb.append("    characterId: ").append(toIndentedString(characterId)).append("\n");
    sb.append("    extended: ").append(toIndentedString(extended)).append("\n");
    sb.append("    player: ").append(toIndentedString(player)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    standing: ").append(toIndentedString(standing)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("characterId");
    openapiFields.add("extended");
    openapiFields.add("player");
    openapiFields.add("score");
    openapiFields.add("standing");
    openapiFields.add("values");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyHistoricalStatsDestinyPostGameCarnageReportEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyHistoricalStatsDestinyPostGameCarnageReportEntry is not found in the empty JSON string", DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyHistoricalStatsDestinyPostGameCarnageReportEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `extended`
      if (jsonObj.get("extended") != null && !jsonObj.get("extended").isJsonNull()) {
        DestinyHistoricalStatsDestinyPostGameCarnageReportExtendedData.validateJsonElement(jsonObj.get("extended"));
      }
      // validate the optional field `player`
      if (jsonObj.get("player") != null && !jsonObj.get("player").isJsonNull()) {
        DestinyHistoricalStatsDestinyPlayer.validateJsonElement(jsonObj.get("player"));
      }
      // validate the optional field `score`
      if (jsonObj.get("score") != null && !jsonObj.get("score").isJsonNull()) {
        DestinyHistoricalStatsDestinyHistoricalStatsValue.validateJsonElement(jsonObj.get("score"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyHistoricalStatsDestinyPostGameCarnageReportEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyHistoricalStatsDestinyPostGameCarnageReportEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyHistoricalStatsDestinyPostGameCarnageReportEntry>() {
           @Override
           public void write(JsonWriter out, DestinyHistoricalStatsDestinyPostGameCarnageReportEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyHistoricalStatsDestinyPostGameCarnageReportEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyHistoricalStatsDestinyPostGameCarnageReportEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyHistoricalStatsDestinyPostGameCarnageReportEntry
   * @throws IOException if the JSON string is invalid with respect to DestinyHistoricalStatsDestinyPostGameCarnageReportEntry
   */
  public static DestinyHistoricalStatsDestinyPostGameCarnageReportEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyHistoricalStatsDestinyPostGameCarnageReportEntry.class);
  }

  /**
   * Convert an instance of DestinyHistoricalStatsDestinyPostGameCarnageReportEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

