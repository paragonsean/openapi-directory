/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FireteamFireteamSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FireteamFireteamSummary {
  public static final String SERIALIZED_NAME_ACTIVITY_TYPE = "activityType";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TYPE)
  private Integer activityType;

  public static final String SERIALIZED_NAME_ALTERNATE_SLOT_COUNT = "alternateSlotCount";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_SLOT_COUNT)
  private Integer alternateSlotCount;

  public static final String SERIALIZED_NAME_AVAILABLE_ALTERNATE_SLOT_COUNT = "availableAlternateSlotCount";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_ALTERNATE_SLOT_COUNT)
  private Integer availableAlternateSlotCount;

  public static final String SERIALIZED_NAME_AVAILABLE_PLAYER_SLOT_COUNT = "availablePlayerSlotCount";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_PLAYER_SLOT_COUNT)
  private Integer availablePlayerSlotCount;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_MODIFIED = "dateModified";
  @SerializedName(SERIALIZED_NAME_DATE_MODIFIED)
  private OffsetDateTime dateModified;

  public static final String SERIALIZED_NAME_DATE_PLAYER_MODIFIED = "datePlayerModified";
  @SerializedName(SERIALIZED_NAME_DATE_PLAYER_MODIFIED)
  private OffsetDateTime datePlayerModified;

  public static final String SERIALIZED_NAME_FIRETEAM_ID = "fireteamId";
  @SerializedName(SERIALIZED_NAME_FIRETEAM_ID)
  private Long fireteamId;

  public static final String SERIALIZED_NAME_GROUP_ID = "groupId";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private Long groupId;

  public static final String SERIALIZED_NAME_IS_IMMEDIATE = "isImmediate";
  @SerializedName(SERIALIZED_NAME_IS_IMMEDIATE)
  private Boolean isImmediate;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "isPublic";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic;

  public static final String SERIALIZED_NAME_IS_VALID = "isValid";
  @SerializedName(SERIALIZED_NAME_IS_VALID)
  private Boolean isValid;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_OWNER_CURRENT_GUARDIAN_RANK_SNAPSHOT = "ownerCurrentGuardianRankSnapshot";
  @SerializedName(SERIALIZED_NAME_OWNER_CURRENT_GUARDIAN_RANK_SNAPSHOT)
  private Integer ownerCurrentGuardianRankSnapshot;

  public static final String SERIALIZED_NAME_OWNER_HIGHEST_LIFETIME_GUARDIAN_RANK_SNAPSHOT = "ownerHighestLifetimeGuardianRankSnapshot";
  @SerializedName(SERIALIZED_NAME_OWNER_HIGHEST_LIFETIME_GUARDIAN_RANK_SNAPSHOT)
  private Integer ownerHighestLifetimeGuardianRankSnapshot;

  public static final String SERIALIZED_NAME_OWNER_MEMBERSHIP_ID = "ownerMembershipId";
  @SerializedName(SERIALIZED_NAME_OWNER_MEMBERSHIP_ID)
  private Long ownerMembershipId;

  public static final String SERIALIZED_NAME_OWNER_TOTAL_COMMENDATION_SCORE_SNAPSHOT = "ownerTotalCommendationScoreSnapshot";
  @SerializedName(SERIALIZED_NAME_OWNER_TOTAL_COMMENDATION_SCORE_SNAPSHOT)
  private Integer ownerTotalCommendationScoreSnapshot;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private Integer platform;

  public static final String SERIALIZED_NAME_PLAYER_SLOT_COUNT = "playerSlotCount";
  @SerializedName(SERIALIZED_NAME_PLAYER_SLOT_COUNT)
  private Integer playerSlotCount;

  public static final String SERIALIZED_NAME_SCHEDULED_TIME = "scheduledTime";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_TIME)
  private OffsetDateTime scheduledTime;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TITLE_BEFORE_MODERATION = "titleBeforeModeration";
  @SerializedName(SERIALIZED_NAME_TITLE_BEFORE_MODERATION)
  private String titleBeforeModeration;

  public FireteamFireteamSummary() {
  }

  public FireteamFireteamSummary activityType(Integer activityType) {
    this.activityType = activityType;
    return this;
  }

  /**
   * Get activityType
   * @return activityType
   */
  @javax.annotation.Nullable
  public Integer getActivityType() {
    return activityType;
  }

  public void setActivityType(Integer activityType) {
    this.activityType = activityType;
  }


  public FireteamFireteamSummary alternateSlotCount(Integer alternateSlotCount) {
    this.alternateSlotCount = alternateSlotCount;
    return this;
  }

  /**
   * Get alternateSlotCount
   * @return alternateSlotCount
   */
  @javax.annotation.Nullable
  public Integer getAlternateSlotCount() {
    return alternateSlotCount;
  }

  public void setAlternateSlotCount(Integer alternateSlotCount) {
    this.alternateSlotCount = alternateSlotCount;
  }


  public FireteamFireteamSummary availableAlternateSlotCount(Integer availableAlternateSlotCount) {
    this.availableAlternateSlotCount = availableAlternateSlotCount;
    return this;
  }

  /**
   * Get availableAlternateSlotCount
   * @return availableAlternateSlotCount
   */
  @javax.annotation.Nullable
  public Integer getAvailableAlternateSlotCount() {
    return availableAlternateSlotCount;
  }

  public void setAvailableAlternateSlotCount(Integer availableAlternateSlotCount) {
    this.availableAlternateSlotCount = availableAlternateSlotCount;
  }


  public FireteamFireteamSummary availablePlayerSlotCount(Integer availablePlayerSlotCount) {
    this.availablePlayerSlotCount = availablePlayerSlotCount;
    return this;
  }

  /**
   * Get availablePlayerSlotCount
   * @return availablePlayerSlotCount
   */
  @javax.annotation.Nullable
  public Integer getAvailablePlayerSlotCount() {
    return availablePlayerSlotCount;
  }

  public void setAvailablePlayerSlotCount(Integer availablePlayerSlotCount) {
    this.availablePlayerSlotCount = availablePlayerSlotCount;
  }


  public FireteamFireteamSummary dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * Get dateCreated
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public FireteamFireteamSummary dateModified(OffsetDateTime dateModified) {
    this.dateModified = dateModified;
    return this;
  }

  /**
   * Get dateModified
   * @return dateModified
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateModified() {
    return dateModified;
  }

  public void setDateModified(OffsetDateTime dateModified) {
    this.dateModified = dateModified;
  }


  public FireteamFireteamSummary datePlayerModified(OffsetDateTime datePlayerModified) {
    this.datePlayerModified = datePlayerModified;
    return this;
  }

  /**
   * Get datePlayerModified
   * @return datePlayerModified
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDatePlayerModified() {
    return datePlayerModified;
  }

  public void setDatePlayerModified(OffsetDateTime datePlayerModified) {
    this.datePlayerModified = datePlayerModified;
  }


  public FireteamFireteamSummary fireteamId(Long fireteamId) {
    this.fireteamId = fireteamId;
    return this;
  }

  /**
   * Get fireteamId
   * @return fireteamId
   */
  @javax.annotation.Nullable
  public Long getFireteamId() {
    return fireteamId;
  }

  public void setFireteamId(Long fireteamId) {
    this.fireteamId = fireteamId;
  }


  public FireteamFireteamSummary groupId(Long groupId) {
    this.groupId = groupId;
    return this;
  }

  /**
   * Get groupId
   * @return groupId
   */
  @javax.annotation.Nullable
  public Long getGroupId() {
    return groupId;
  }

  public void setGroupId(Long groupId) {
    this.groupId = groupId;
  }


  public FireteamFireteamSummary isImmediate(Boolean isImmediate) {
    this.isImmediate = isImmediate;
    return this;
  }

  /**
   * Get isImmediate
   * @return isImmediate
   */
  @javax.annotation.Nullable
  public Boolean getIsImmediate() {
    return isImmediate;
  }

  public void setIsImmediate(Boolean isImmediate) {
    this.isImmediate = isImmediate;
  }


  public FireteamFireteamSummary isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

  /**
   * Get isPublic
   * @return isPublic
   */
  @javax.annotation.Nullable
  public Boolean getIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public FireteamFireteamSummary isValid(Boolean isValid) {
    this.isValid = isValid;
    return this;
  }

  /**
   * Get isValid
   * @return isValid
   */
  @javax.annotation.Nullable
  public Boolean getIsValid() {
    return isValid;
  }

  public void setIsValid(Boolean isValid) {
    this.isValid = isValid;
  }


  public FireteamFireteamSummary locale(String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * Get locale
   * @return locale
   */
  @javax.annotation.Nullable
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }


  public FireteamFireteamSummary ownerCurrentGuardianRankSnapshot(Integer ownerCurrentGuardianRankSnapshot) {
    this.ownerCurrentGuardianRankSnapshot = ownerCurrentGuardianRankSnapshot;
    return this;
  }

  /**
   * Get ownerCurrentGuardianRankSnapshot
   * @return ownerCurrentGuardianRankSnapshot
   */
  @javax.annotation.Nullable
  public Integer getOwnerCurrentGuardianRankSnapshot() {
    return ownerCurrentGuardianRankSnapshot;
  }

  public void setOwnerCurrentGuardianRankSnapshot(Integer ownerCurrentGuardianRankSnapshot) {
    this.ownerCurrentGuardianRankSnapshot = ownerCurrentGuardianRankSnapshot;
  }


  public FireteamFireteamSummary ownerHighestLifetimeGuardianRankSnapshot(Integer ownerHighestLifetimeGuardianRankSnapshot) {
    this.ownerHighestLifetimeGuardianRankSnapshot = ownerHighestLifetimeGuardianRankSnapshot;
    return this;
  }

  /**
   * Get ownerHighestLifetimeGuardianRankSnapshot
   * @return ownerHighestLifetimeGuardianRankSnapshot
   */
  @javax.annotation.Nullable
  public Integer getOwnerHighestLifetimeGuardianRankSnapshot() {
    return ownerHighestLifetimeGuardianRankSnapshot;
  }

  public void setOwnerHighestLifetimeGuardianRankSnapshot(Integer ownerHighestLifetimeGuardianRankSnapshot) {
    this.ownerHighestLifetimeGuardianRankSnapshot = ownerHighestLifetimeGuardianRankSnapshot;
  }


  public FireteamFireteamSummary ownerMembershipId(Long ownerMembershipId) {
    this.ownerMembershipId = ownerMembershipId;
    return this;
  }

  /**
   * Get ownerMembershipId
   * @return ownerMembershipId
   */
  @javax.annotation.Nullable
  public Long getOwnerMembershipId() {
    return ownerMembershipId;
  }

  public void setOwnerMembershipId(Long ownerMembershipId) {
    this.ownerMembershipId = ownerMembershipId;
  }


  public FireteamFireteamSummary ownerTotalCommendationScoreSnapshot(Integer ownerTotalCommendationScoreSnapshot) {
    this.ownerTotalCommendationScoreSnapshot = ownerTotalCommendationScoreSnapshot;
    return this;
  }

  /**
   * Get ownerTotalCommendationScoreSnapshot
   * @return ownerTotalCommendationScoreSnapshot
   */
  @javax.annotation.Nullable
  public Integer getOwnerTotalCommendationScoreSnapshot() {
    return ownerTotalCommendationScoreSnapshot;
  }

  public void setOwnerTotalCommendationScoreSnapshot(Integer ownerTotalCommendationScoreSnapshot) {
    this.ownerTotalCommendationScoreSnapshot = ownerTotalCommendationScoreSnapshot;
  }


  public FireteamFireteamSummary platform(Integer platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @javax.annotation.Nullable
  public Integer getPlatform() {
    return platform;
  }

  public void setPlatform(Integer platform) {
    this.platform = platform;
  }


  public FireteamFireteamSummary playerSlotCount(Integer playerSlotCount) {
    this.playerSlotCount = playerSlotCount;
    return this;
  }

  /**
   * Get playerSlotCount
   * @return playerSlotCount
   */
  @javax.annotation.Nullable
  public Integer getPlayerSlotCount() {
    return playerSlotCount;
  }

  public void setPlayerSlotCount(Integer playerSlotCount) {
    this.playerSlotCount = playerSlotCount;
  }


  public FireteamFireteamSummary scheduledTime(OffsetDateTime scheduledTime) {
    this.scheduledTime = scheduledTime;
    return this;
  }

  /**
   * Get scheduledTime
   * @return scheduledTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScheduledTime() {
    return scheduledTime;
  }

  public void setScheduledTime(OffsetDateTime scheduledTime) {
    this.scheduledTime = scheduledTime;
  }


  public FireteamFireteamSummary title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public FireteamFireteamSummary titleBeforeModeration(String titleBeforeModeration) {
    this.titleBeforeModeration = titleBeforeModeration;
    return this;
  }

  /**
   * Get titleBeforeModeration
   * @return titleBeforeModeration
   */
  @javax.annotation.Nullable
  public String getTitleBeforeModeration() {
    return titleBeforeModeration;
  }

  public void setTitleBeforeModeration(String titleBeforeModeration) {
    this.titleBeforeModeration = titleBeforeModeration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FireteamFireteamSummary fireteamFireteamSummary = (FireteamFireteamSummary) o;
    return Objects.equals(this.activityType, fireteamFireteamSummary.activityType) &&
        Objects.equals(this.alternateSlotCount, fireteamFireteamSummary.alternateSlotCount) &&
        Objects.equals(this.availableAlternateSlotCount, fireteamFireteamSummary.availableAlternateSlotCount) &&
        Objects.equals(this.availablePlayerSlotCount, fireteamFireteamSummary.availablePlayerSlotCount) &&
        Objects.equals(this.dateCreated, fireteamFireteamSummary.dateCreated) &&
        Objects.equals(this.dateModified, fireteamFireteamSummary.dateModified) &&
        Objects.equals(this.datePlayerModified, fireteamFireteamSummary.datePlayerModified) &&
        Objects.equals(this.fireteamId, fireteamFireteamSummary.fireteamId) &&
        Objects.equals(this.groupId, fireteamFireteamSummary.groupId) &&
        Objects.equals(this.isImmediate, fireteamFireteamSummary.isImmediate) &&
        Objects.equals(this.isPublic, fireteamFireteamSummary.isPublic) &&
        Objects.equals(this.isValid, fireteamFireteamSummary.isValid) &&
        Objects.equals(this.locale, fireteamFireteamSummary.locale) &&
        Objects.equals(this.ownerCurrentGuardianRankSnapshot, fireteamFireteamSummary.ownerCurrentGuardianRankSnapshot) &&
        Objects.equals(this.ownerHighestLifetimeGuardianRankSnapshot, fireteamFireteamSummary.ownerHighestLifetimeGuardianRankSnapshot) &&
        Objects.equals(this.ownerMembershipId, fireteamFireteamSummary.ownerMembershipId) &&
        Objects.equals(this.ownerTotalCommendationScoreSnapshot, fireteamFireteamSummary.ownerTotalCommendationScoreSnapshot) &&
        Objects.equals(this.platform, fireteamFireteamSummary.platform) &&
        Objects.equals(this.playerSlotCount, fireteamFireteamSummary.playerSlotCount) &&
        Objects.equals(this.scheduledTime, fireteamFireteamSummary.scheduledTime) &&
        Objects.equals(this.title, fireteamFireteamSummary.title) &&
        Objects.equals(this.titleBeforeModeration, fireteamFireteamSummary.titleBeforeModeration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityType, alternateSlotCount, availableAlternateSlotCount, availablePlayerSlotCount, dateCreated, dateModified, datePlayerModified, fireteamId, groupId, isImmediate, isPublic, isValid, locale, ownerCurrentGuardianRankSnapshot, ownerHighestLifetimeGuardianRankSnapshot, ownerMembershipId, ownerTotalCommendationScoreSnapshot, platform, playerSlotCount, scheduledTime, title, titleBeforeModeration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FireteamFireteamSummary {\n");
    sb.append("    activityType: ").append(toIndentedString(activityType)).append("\n");
    sb.append("    alternateSlotCount: ").append(toIndentedString(alternateSlotCount)).append("\n");
    sb.append("    availableAlternateSlotCount: ").append(toIndentedString(availableAlternateSlotCount)).append("\n");
    sb.append("    availablePlayerSlotCount: ").append(toIndentedString(availablePlayerSlotCount)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    datePlayerModified: ").append(toIndentedString(datePlayerModified)).append("\n");
    sb.append("    fireteamId: ").append(toIndentedString(fireteamId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    isImmediate: ").append(toIndentedString(isImmediate)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    ownerCurrentGuardianRankSnapshot: ").append(toIndentedString(ownerCurrentGuardianRankSnapshot)).append("\n");
    sb.append("    ownerHighestLifetimeGuardianRankSnapshot: ").append(toIndentedString(ownerHighestLifetimeGuardianRankSnapshot)).append("\n");
    sb.append("    ownerMembershipId: ").append(toIndentedString(ownerMembershipId)).append("\n");
    sb.append("    ownerTotalCommendationScoreSnapshot: ").append(toIndentedString(ownerTotalCommendationScoreSnapshot)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    playerSlotCount: ").append(toIndentedString(playerSlotCount)).append("\n");
    sb.append("    scheduledTime: ").append(toIndentedString(scheduledTime)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleBeforeModeration: ").append(toIndentedString(titleBeforeModeration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activityType");
    openapiFields.add("alternateSlotCount");
    openapiFields.add("availableAlternateSlotCount");
    openapiFields.add("availablePlayerSlotCount");
    openapiFields.add("dateCreated");
    openapiFields.add("dateModified");
    openapiFields.add("datePlayerModified");
    openapiFields.add("fireteamId");
    openapiFields.add("groupId");
    openapiFields.add("isImmediate");
    openapiFields.add("isPublic");
    openapiFields.add("isValid");
    openapiFields.add("locale");
    openapiFields.add("ownerCurrentGuardianRankSnapshot");
    openapiFields.add("ownerHighestLifetimeGuardianRankSnapshot");
    openapiFields.add("ownerMembershipId");
    openapiFields.add("ownerTotalCommendationScoreSnapshot");
    openapiFields.add("platform");
    openapiFields.add("playerSlotCount");
    openapiFields.add("scheduledTime");
    openapiFields.add("title");
    openapiFields.add("titleBeforeModeration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FireteamFireteamSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FireteamFireteamSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FireteamFireteamSummary is not found in the empty JSON string", FireteamFireteamSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FireteamFireteamSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FireteamFireteamSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("locale") != null && !jsonObj.get("locale").isJsonNull()) && !jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("titleBeforeModeration") != null && !jsonObj.get("titleBeforeModeration").isJsonNull()) && !jsonObj.get("titleBeforeModeration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `titleBeforeModeration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("titleBeforeModeration").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FireteamFireteamSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FireteamFireteamSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FireteamFireteamSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FireteamFireteamSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<FireteamFireteamSummary>() {
           @Override
           public void write(JsonWriter out, FireteamFireteamSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FireteamFireteamSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FireteamFireteamSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FireteamFireteamSummary
   * @throws IOException if the JSON string is invalid with respect to FireteamFireteamSummary
   */
  public static FireteamFireteamSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FireteamFireteamSummary.class);
  }

  /**
   * Convert an instance of FireteamFireteamSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

