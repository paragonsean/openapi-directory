/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyQuestsDestinyObjectiveProgress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Data regarding the progress of a Quest for a specific character. Quests are composed of multiple steps, each with potentially multiple objectives: this QuestStatus will return Objective data for the *currently active* step in this quest.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyQuestsDestinyQuestStatus {
  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private Boolean completed;

  public static final String SERIALIZED_NAME_ITEM_INSTANCE_ID = "itemInstanceId";
  @SerializedName(SERIALIZED_NAME_ITEM_INSTANCE_ID)
  private Long itemInstanceId;

  public static final String SERIALIZED_NAME_QUEST_HASH = "questHash";
  @SerializedName(SERIALIZED_NAME_QUEST_HASH)
  private Integer questHash;

  public static final String SERIALIZED_NAME_REDEEMED = "redeemed";
  @SerializedName(SERIALIZED_NAME_REDEEMED)
  private Boolean redeemed;

  public static final String SERIALIZED_NAME_STARTED = "started";
  @SerializedName(SERIALIZED_NAME_STARTED)
  private Boolean started;

  public static final String SERIALIZED_NAME_STEP_HASH = "stepHash";
  @SerializedName(SERIALIZED_NAME_STEP_HASH)
  private Integer stepHash;

  public static final String SERIALIZED_NAME_STEP_OBJECTIVES = "stepObjectives";
  @SerializedName(SERIALIZED_NAME_STEP_OBJECTIVES)
  private List<DestinyQuestsDestinyObjectiveProgress> stepObjectives = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRACKED = "tracked";
  @SerializedName(SERIALIZED_NAME_TRACKED)
  private Boolean tracked;

  public static final String SERIALIZED_NAME_VENDOR_HASH = "vendorHash";
  @SerializedName(SERIALIZED_NAME_VENDOR_HASH)
  private Integer vendorHash;

  public DestinyQuestsDestinyQuestStatus() {
  }

  public DestinyQuestsDestinyQuestStatus completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

  /**
   * Whether or not the whole quest has been completed, regardless of whether or not you have redeemed the rewards for the quest.
   * @return completed
   */
  @javax.annotation.Nullable
  public Boolean getCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  public DestinyQuestsDestinyQuestStatus itemInstanceId(Long itemInstanceId) {
    this.itemInstanceId = itemInstanceId;
    return this;
  }

  /**
   * The current Quest Step will be an instanced item in the player&#39;s inventory. If you care about that, this is the instance ID of that item.
   * @return itemInstanceId
   */
  @javax.annotation.Nullable
  public Long getItemInstanceId() {
    return itemInstanceId;
  }

  public void setItemInstanceId(Long itemInstanceId) {
    this.itemInstanceId = itemInstanceId;
  }


  public DestinyQuestsDestinyQuestStatus questHash(Integer questHash) {
    this.questHash = questHash;
    return this;
  }

  /**
   * The hash identifier for the Quest Item. (Note: Quests are defined as Items, and thus you would use this to look up the quest&#39;s DestinyInventoryItemDefinition). For information on all steps in the quest, you can then examine its DestinyInventoryItemDefinition.setData property for Quest Steps (which are *also* items). You can use the Item Definition to display human readable data about the overall quest.
   * @return questHash
   */
  @javax.annotation.Nullable
  public Integer getQuestHash() {
    return questHash;
  }

  public void setQuestHash(Integer questHash) {
    this.questHash = questHash;
  }


  public DestinyQuestsDestinyQuestStatus redeemed(Boolean redeemed) {
    this.redeemed = redeemed;
    return this;
  }

  /**
   * Whether or not you have redeemed rewards for this quest.
   * @return redeemed
   */
  @javax.annotation.Nullable
  public Boolean getRedeemed() {
    return redeemed;
  }

  public void setRedeemed(Boolean redeemed) {
    this.redeemed = redeemed;
  }


  public DestinyQuestsDestinyQuestStatus started(Boolean started) {
    this.started = started;
    return this;
  }

  /**
   * Whether or not you have started this quest.
   * @return started
   */
  @javax.annotation.Nullable
  public Boolean getStarted() {
    return started;
  }

  public void setStarted(Boolean started) {
    this.started = started;
  }


  public DestinyQuestsDestinyQuestStatus stepHash(Integer stepHash) {
    this.stepHash = stepHash;
    return this;
  }

  /**
   * The hash identifier of the current Quest Step, which is also a DestinyInventoryItemDefinition. You can use this to get human readable data about the current step and what to do in that step.
   * @return stepHash
   */
  @javax.annotation.Nullable
  public Integer getStepHash() {
    return stepHash;
  }

  public void setStepHash(Integer stepHash) {
    this.stepHash = stepHash;
  }


  public DestinyQuestsDestinyQuestStatus stepObjectives(List<DestinyQuestsDestinyObjectiveProgress> stepObjectives) {
    this.stepObjectives = stepObjectives;
    return this;
  }

  public DestinyQuestsDestinyQuestStatus addStepObjectivesItem(DestinyQuestsDestinyObjectiveProgress stepObjectivesItem) {
    if (this.stepObjectives == null) {
      this.stepObjectives = new ArrayList<>();
    }
    this.stepObjectives.add(stepObjectivesItem);
    return this;
  }

  /**
   * A step can have multiple objectives. This will give you the progress for each objective in the current step, in the order in which they are rendered in-game.
   * @return stepObjectives
   */
  @javax.annotation.Nullable
  public List<DestinyQuestsDestinyObjectiveProgress> getStepObjectives() {
    return stepObjectives;
  }

  public void setStepObjectives(List<DestinyQuestsDestinyObjectiveProgress> stepObjectives) {
    this.stepObjectives = stepObjectives;
  }


  public DestinyQuestsDestinyQuestStatus tracked(Boolean tracked) {
    this.tracked = tracked;
    return this;
  }

  /**
   * Whether or not the quest is tracked
   * @return tracked
   */
  @javax.annotation.Nullable
  public Boolean getTracked() {
    return tracked;
  }

  public void setTracked(Boolean tracked) {
    this.tracked = tracked;
  }


  public DestinyQuestsDestinyQuestStatus vendorHash(Integer vendorHash) {
    this.vendorHash = vendorHash;
    return this;
  }

  /**
   * If the quest has a related Vendor that you should talk to in order to initiate the quest/earn rewards/continue the quest, this will be the hash identifier of that Vendor. Look it up its DestinyVendorDefinition.
   * @return vendorHash
   */
  @javax.annotation.Nullable
  public Integer getVendorHash() {
    return vendorHash;
  }

  public void setVendorHash(Integer vendorHash) {
    this.vendorHash = vendorHash;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyQuestsDestinyQuestStatus destinyQuestsDestinyQuestStatus = (DestinyQuestsDestinyQuestStatus) o;
    return Objects.equals(this.completed, destinyQuestsDestinyQuestStatus.completed) &&
        Objects.equals(this.itemInstanceId, destinyQuestsDestinyQuestStatus.itemInstanceId) &&
        Objects.equals(this.questHash, destinyQuestsDestinyQuestStatus.questHash) &&
        Objects.equals(this.redeemed, destinyQuestsDestinyQuestStatus.redeemed) &&
        Objects.equals(this.started, destinyQuestsDestinyQuestStatus.started) &&
        Objects.equals(this.stepHash, destinyQuestsDestinyQuestStatus.stepHash) &&
        Objects.equals(this.stepObjectives, destinyQuestsDestinyQuestStatus.stepObjectives) &&
        Objects.equals(this.tracked, destinyQuestsDestinyQuestStatus.tracked) &&
        Objects.equals(this.vendorHash, destinyQuestsDestinyQuestStatus.vendorHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completed, itemInstanceId, questHash, redeemed, started, stepHash, stepObjectives, tracked, vendorHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyQuestsDestinyQuestStatus {\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    itemInstanceId: ").append(toIndentedString(itemInstanceId)).append("\n");
    sb.append("    questHash: ").append(toIndentedString(questHash)).append("\n");
    sb.append("    redeemed: ").append(toIndentedString(redeemed)).append("\n");
    sb.append("    started: ").append(toIndentedString(started)).append("\n");
    sb.append("    stepHash: ").append(toIndentedString(stepHash)).append("\n");
    sb.append("    stepObjectives: ").append(toIndentedString(stepObjectives)).append("\n");
    sb.append("    tracked: ").append(toIndentedString(tracked)).append("\n");
    sb.append("    vendorHash: ").append(toIndentedString(vendorHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("completed");
    openapiFields.add("itemInstanceId");
    openapiFields.add("questHash");
    openapiFields.add("redeemed");
    openapiFields.add("started");
    openapiFields.add("stepHash");
    openapiFields.add("stepObjectives");
    openapiFields.add("tracked");
    openapiFields.add("vendorHash");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyQuestsDestinyQuestStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyQuestsDestinyQuestStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyQuestsDestinyQuestStatus is not found in the empty JSON string", DestinyQuestsDestinyQuestStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyQuestsDestinyQuestStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyQuestsDestinyQuestStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("stepObjectives") != null && !jsonObj.get("stepObjectives").isJsonNull()) {
        JsonArray jsonArraystepObjectives = jsonObj.getAsJsonArray("stepObjectives");
        if (jsonArraystepObjectives != null) {
          // ensure the json data is an array
          if (!jsonObj.get("stepObjectives").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `stepObjectives` to be an array in the JSON string but got `%s`", jsonObj.get("stepObjectives").toString()));
          }

          // validate the optional field `stepObjectives` (array)
          for (int i = 0; i < jsonArraystepObjectives.size(); i++) {
            DestinyQuestsDestinyObjectiveProgress.validateJsonElement(jsonArraystepObjectives.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyQuestsDestinyQuestStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyQuestsDestinyQuestStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyQuestsDestinyQuestStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyQuestsDestinyQuestStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyQuestsDestinyQuestStatus>() {
           @Override
           public void write(JsonWriter out, DestinyQuestsDestinyQuestStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyQuestsDestinyQuestStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyQuestsDestinyQuestStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyQuestsDestinyQuestStatus
   * @throws IOException if the JSON string is invalid with respect to DestinyQuestsDestinyQuestStatus
   */
  public static DestinyQuestsDestinyQuestStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyQuestsDestinyQuestStatus.class);
  }

  /**
   * Convert an instance of DestinyQuestsDestinyQuestStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

