/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;
import org.openapitools.client.model.DestinyMiscDestinyColor;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DestinyDefinitionsSocialDestinySocialCommendationDefinition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:58.650260-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinyDefinitionsSocialDestinySocialCommendationDefinition {
  public static final String SERIALIZED_NAME_ACTIVITY_GIVING_LIMIT = "activityGivingLimit";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_GIVING_LIMIT)
  private Integer activityGivingLimit;

  public static final String SERIALIZED_NAME_CARD_IMAGE_PATH = "cardImagePath";
  @SerializedName(SERIALIZED_NAME_CARD_IMAGE_PATH)
  private String cardImagePath;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private DestinyMiscDestinyColor color;

  public static final String SERIALIZED_NAME_DISPLAY_ACTIVITIES = "displayActivities";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ACTIVITIES)
  private List<DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition> displayActivities = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_PRIORITY = "displayPriority";
  @SerializedName(SERIALIZED_NAME_DISPLAY_PRIORITY)
  private Integer displayPriority;

  public static final String SERIALIZED_NAME_DISPLAY_PROPERTIES = "displayProperties";
  @SerializedName(SERIALIZED_NAME_DISPLAY_PROPERTIES)
  private DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties;

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private Integer hash;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_PARENT_COMMENDATION_NODE_HASH = "parentCommendationNodeHash";
  @SerializedName(SERIALIZED_NAME_PARENT_COMMENDATION_NODE_HASH)
  private Integer parentCommendationNodeHash;

  public static final String SERIALIZED_NAME_REDACTED = "redacted";
  @SerializedName(SERIALIZED_NAME_REDACTED)
  private Boolean redacted;

  public DestinyDefinitionsSocialDestinySocialCommendationDefinition() {
  }

  public DestinyDefinitionsSocialDestinySocialCommendationDefinition activityGivingLimit(Integer activityGivingLimit) {
    this.activityGivingLimit = activityGivingLimit;
    return this;
  }

  /**
   * Get activityGivingLimit
   * @return activityGivingLimit
   */
  @javax.annotation.Nullable
  public Integer getActivityGivingLimit() {
    return activityGivingLimit;
  }

  public void setActivityGivingLimit(Integer activityGivingLimit) {
    this.activityGivingLimit = activityGivingLimit;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition cardImagePath(String cardImagePath) {
    this.cardImagePath = cardImagePath;
    return this;
  }

  /**
   * Get cardImagePath
   * @return cardImagePath
   */
  @javax.annotation.Nullable
  public String getCardImagePath() {
    return cardImagePath;
  }

  public void setCardImagePath(String cardImagePath) {
    this.cardImagePath = cardImagePath;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition color(DestinyMiscDestinyColor color) {
    this.color = color;
    return this;
  }

  /**
   * Get color
   * @return color
   */
  @javax.annotation.Nullable
  public DestinyMiscDestinyColor getColor() {
    return color;
  }

  public void setColor(DestinyMiscDestinyColor color) {
    this.color = color;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition displayActivities(List<DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition> displayActivities) {
    this.displayActivities = displayActivities;
    return this;
  }

  public DestinyDefinitionsSocialDestinySocialCommendationDefinition addDisplayActivitiesItem(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayActivitiesItem) {
    if (this.displayActivities == null) {
      this.displayActivities = new ArrayList<>();
    }
    this.displayActivities.add(displayActivitiesItem);
    return this;
  }

  /**
   * The display properties for the the activities that this commendation is available in.
   * @return displayActivities
   */
  @javax.annotation.Nullable
  public List<DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition> getDisplayActivities() {
    return displayActivities;
  }

  public void setDisplayActivities(List<DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition> displayActivities) {
    this.displayActivities = displayActivities;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition displayPriority(Integer displayPriority) {
    this.displayPriority = displayPriority;
    return this;
  }

  /**
   * Get displayPriority
   * @return displayPriority
   */
  @javax.annotation.Nullable
  public Integer getDisplayPriority() {
    return displayPriority;
  }

  public void setDisplayPriority(Integer displayPriority) {
    this.displayPriority = displayPriority;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition displayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

  /**
   * Get displayProperties
   * @return displayProperties
   */
  @javax.annotation.Nullable
  public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition hash(Integer hash) {
    this.hash = hash;
    return this;
  }

  /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
   * @return hash
   */
  @javax.annotation.Nullable
  public Integer getHash() {
    return hash;
  }

  public void setHash(Integer hash) {
    this.hash = hash;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * The index of the entity as it was found in the investment tables.
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition parentCommendationNodeHash(Integer parentCommendationNodeHash) {
    this.parentCommendationNodeHash = parentCommendationNodeHash;
    return this;
  }

  /**
   * Get parentCommendationNodeHash
   * @return parentCommendationNodeHash
   */
  @javax.annotation.Nullable
  public Integer getParentCommendationNodeHash() {
    return parentCommendationNodeHash;
  }

  public void setParentCommendationNodeHash(Integer parentCommendationNodeHash) {
    this.parentCommendationNodeHash = parentCommendationNodeHash;
  }


  public DestinyDefinitionsSocialDestinySocialCommendationDefinition redacted(Boolean redacted) {
    this.redacted = redacted;
    return this;
  }

  /**
   * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
   * @return redacted
   */
  @javax.annotation.Nullable
  public Boolean getRedacted() {
    return redacted;
  }

  public void setRedacted(Boolean redacted) {
    this.redacted = redacted;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsSocialDestinySocialCommendationDefinition destinyDefinitionsSocialDestinySocialCommendationDefinition = (DestinyDefinitionsSocialDestinySocialCommendationDefinition) o;
    return Objects.equals(this.activityGivingLimit, destinyDefinitionsSocialDestinySocialCommendationDefinition.activityGivingLimit) &&
        Objects.equals(this.cardImagePath, destinyDefinitionsSocialDestinySocialCommendationDefinition.cardImagePath) &&
        Objects.equals(this.color, destinyDefinitionsSocialDestinySocialCommendationDefinition.color) &&
        Objects.equals(this.displayActivities, destinyDefinitionsSocialDestinySocialCommendationDefinition.displayActivities) &&
        Objects.equals(this.displayPriority, destinyDefinitionsSocialDestinySocialCommendationDefinition.displayPriority) &&
        Objects.equals(this.displayProperties, destinyDefinitionsSocialDestinySocialCommendationDefinition.displayProperties) &&
        Objects.equals(this.hash, destinyDefinitionsSocialDestinySocialCommendationDefinition.hash) &&
        Objects.equals(this.index, destinyDefinitionsSocialDestinySocialCommendationDefinition.index) &&
        Objects.equals(this.parentCommendationNodeHash, destinyDefinitionsSocialDestinySocialCommendationDefinition.parentCommendationNodeHash) &&
        Objects.equals(this.redacted, destinyDefinitionsSocialDestinySocialCommendationDefinition.redacted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityGivingLimit, cardImagePath, color, displayActivities, displayPriority, displayProperties, hash, index, parentCommendationNodeHash, redacted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsSocialDestinySocialCommendationDefinition {\n");
    sb.append("    activityGivingLimit: ").append(toIndentedString(activityGivingLimit)).append("\n");
    sb.append("    cardImagePath: ").append(toIndentedString(cardImagePath)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    displayActivities: ").append(toIndentedString(displayActivities)).append("\n");
    sb.append("    displayPriority: ").append(toIndentedString(displayPriority)).append("\n");
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    parentCommendationNodeHash: ").append(toIndentedString(parentCommendationNodeHash)).append("\n");
    sb.append("    redacted: ").append(toIndentedString(redacted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activityGivingLimit");
    openapiFields.add("cardImagePath");
    openapiFields.add("color");
    openapiFields.add("displayActivities");
    openapiFields.add("displayPriority");
    openapiFields.add("displayProperties");
    openapiFields.add("hash");
    openapiFields.add("index");
    openapiFields.add("parentCommendationNodeHash");
    openapiFields.add("redacted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinyDefinitionsSocialDestinySocialCommendationDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinyDefinitionsSocialDestinySocialCommendationDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinyDefinitionsSocialDestinySocialCommendationDefinition is not found in the empty JSON string", DestinyDefinitionsSocialDestinySocialCommendationDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinyDefinitionsSocialDestinySocialCommendationDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinyDefinitionsSocialDestinySocialCommendationDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cardImagePath") != null && !jsonObj.get("cardImagePath").isJsonNull()) && !jsonObj.get("cardImagePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardImagePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardImagePath").toString()));
      }
      // validate the optional field `color`
      if (jsonObj.get("color") != null && !jsonObj.get("color").isJsonNull()) {
        DestinyMiscDestinyColor.validateJsonElement(jsonObj.get("color"));
      }
      if (jsonObj.get("displayActivities") != null && !jsonObj.get("displayActivities").isJsonNull()) {
        JsonArray jsonArraydisplayActivities = jsonObj.getAsJsonArray("displayActivities");
        if (jsonArraydisplayActivities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("displayActivities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `displayActivities` to be an array in the JSON string but got `%s`", jsonObj.get("displayActivities").toString()));
          }

          // validate the optional field `displayActivities` (array)
          for (int i = 0; i < jsonArraydisplayActivities.size(); i++) {
            DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJsonElement(jsonArraydisplayActivities.get(i));
          };
        }
      }
      // validate the optional field `displayProperties`
      if (jsonObj.get("displayProperties") != null && !jsonObj.get("displayProperties").isJsonNull()) {
        DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJsonElement(jsonObj.get("displayProperties"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinyDefinitionsSocialDestinySocialCommendationDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinyDefinitionsSocialDestinySocialCommendationDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinyDefinitionsSocialDestinySocialCommendationDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinyDefinitionsSocialDestinySocialCommendationDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinyDefinitionsSocialDestinySocialCommendationDefinition>() {
           @Override
           public void write(JsonWriter out, DestinyDefinitionsSocialDestinySocialCommendationDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinyDefinitionsSocialDestinySocialCommendationDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinyDefinitionsSocialDestinySocialCommendationDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinyDefinitionsSocialDestinySocialCommendationDefinition
   * @throws IOException if the JSON string is invalid with respect to DestinyDefinitionsSocialDestinySocialCommendationDefinition
   */
  public static DestinyDefinitionsSocialDestinySocialCommendationDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinyDefinitionsSocialDestinySocialCommendationDefinition.class);
  }

  /**
   * Convert an instance of DestinyDefinitionsSocialDestinySocialCommendationDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

