/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TrendingGetTrendingCategories200Response;
import org.openapitools.client.model.TrendingGetTrendingCategory200Response;
import org.openapitools.client.model.TrendingGetTrendingEntryDetail200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TrendingApi
 */
@Disabled
public class TrendingApiTest {

    private final TrendingApi api = new TrendingApi();

    /**
     * Returns trending items for Bungie.net, collapsed into the first page of items per category. For pagination within a category, call GetTrendingCategory.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trendingGetTrendingCategoriesTest() throws ApiException {
        TrendingGetTrendingCategories200Response response = api.trendingGetTrendingCategories();
        // TODO: test validations
    }

    /**
     * Returns paginated lists of trending items for a category.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trendingGetTrendingCategoryTest() throws ApiException {
        String categoryId = null;
        Integer pageNumber = null;
        TrendingGetTrendingCategory200Response response = api.trendingGetTrendingCategory(categoryId, pageNumber);
        // TODO: test validations
    }

    /**
     * Returns the detailed results for a specific trending entry. Note that trending entries are uniquely identified by a combination of *both* the TrendingEntryType *and* the identifier: the identifier alone is not guaranteed to be globally unique.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trendingGetTrendingEntryDetailTest() throws ApiException {
        String identifier = null;
        Integer trendingEntryType = null;
        TrendingGetTrendingEntryDetail200Response response = api.trendingGetTrendingEntryDetail(identifier, trendingEntryType);
        // TODO: test validations
    }

}
