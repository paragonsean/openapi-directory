/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyDefinitionsDestinyVendorCategoryOverlayDefinition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DestinyDefinitionsDestinyVendorCategoryEntryDefinition
 */
public class DestinyDefinitionsDestinyVendorCategoryEntryDefinitionTest {
    private final DestinyDefinitionsDestinyVendorCategoryEntryDefinition model = new DestinyDefinitionsDestinyVendorCategoryEntryDefinition();

    /**
     * Model tests for DestinyDefinitionsDestinyVendorCategoryEntryDefinition
     */
    @Test
    public void testDestinyDefinitionsDestinyVendorCategoryEntryDefinition() {
        // TODO: test DestinyDefinitionsDestinyVendorCategoryEntryDefinition
    }

    /**
     * Test the property 'buyStringOverride'
     */
    @Test
    public void buyStringOverrideTest() {
        // TODO: test buyStringOverride
    }

    /**
     * Test the property 'categoryHash'
     */
    @Test
    public void categoryHashTest() {
        // TODO: test categoryHash
    }

    /**
     * Test the property 'categoryIndex'
     */
    @Test
    public void categoryIndexTest() {
        // TODO: test categoryIndex
    }

    /**
     * Test the property 'disabledDescription'
     */
    @Test
    public void disabledDescriptionTest() {
        // TODO: test disabledDescription
    }

    /**
     * Test the property 'displayTitle'
     */
    @Test
    public void displayTitleTest() {
        // TODO: test displayTitle
    }

    /**
     * Test the property 'hideFromRegularPurchase'
     */
    @Test
    public void hideFromRegularPurchaseTest() {
        // TODO: test hideFromRegularPurchase
    }

    /**
     * Test the property 'hideIfNoCurrency'
     */
    @Test
    public void hideIfNoCurrencyTest() {
        // TODO: test hideIfNoCurrency
    }

    /**
     * Test the property 'isDisplayOnly'
     */
    @Test
    public void isDisplayOnlyTest() {
        // TODO: test isDisplayOnly
    }

    /**
     * Test the property 'isPreview'
     */
    @Test
    public void isPreviewTest() {
        // TODO: test isPreview
    }

    /**
     * Test the property 'overlay'
     */
    @Test
    public void overlayTest() {
        // TODO: test overlay
    }

    /**
     * Test the property 'quantityAvailable'
     */
    @Test
    public void quantityAvailableTest() {
        // TODO: test quantityAvailable
    }

    /**
     * Test the property 'resetIntervalMinutesOverride'
     */
    @Test
    public void resetIntervalMinutesOverrideTest() {
        // TODO: test resetIntervalMinutesOverride
    }

    /**
     * Test the property 'resetOffsetMinutesOverride'
     */
    @Test
    public void resetOffsetMinutesOverrideTest() {
        // TODO: test resetOffsetMinutesOverride
    }

    /**
     * Test the property 'showUnavailableItems'
     */
    @Test
    public void showUnavailableItemsTest() {
        // TODO: test showUnavailableItems
    }

    /**
     * Test the property 'sortValue'
     */
    @Test
    public void sortValueTest() {
        // TODO: test sortValue
    }

    /**
     * Test the property 'vendorItemIndexes'
     */
    @Test
    public void vendorItemIndexesTest() {
        // TODO: test vendorItemIndexes
    }

}
