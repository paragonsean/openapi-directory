/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DestinyDefinitionsDestinyTalentExclusiveGroup;
import org.openapitools.client.model.DestinyDefinitionsDestinyTalentNodeCategory;
import org.openapitools.client.model.DestinyDefinitionsDestinyTalentNodeDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyTalentNodeExclusiveSetDefinition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DestinyDefinitionsDestinyTalentGridDefinition
 */
public class DestinyDefinitionsDestinyTalentGridDefinitionTest {
    private final DestinyDefinitionsDestinyTalentGridDefinition model = new DestinyDefinitionsDestinyTalentGridDefinition();

    /**
     * Model tests for DestinyDefinitionsDestinyTalentGridDefinition
     */
    @Test
    public void testDestinyDefinitionsDestinyTalentGridDefinition() {
        // TODO: test DestinyDefinitionsDestinyTalentGridDefinition
    }

    /**
     * Test the property 'exclusiveSets'
     */
    @Test
    public void exclusiveSetsTest() {
        // TODO: test exclusiveSets
    }

    /**
     * Test the property 'gridLevelPerColumn'
     */
    @Test
    public void gridLevelPerColumnTest() {
        // TODO: test gridLevelPerColumn
    }

    /**
     * Test the property 'groups'
     */
    @Test
    public void groupsTest() {
        // TODO: test groups
    }

    /**
     * Test the property 'hash'
     */
    @Test
    public void hashTest() {
        // TODO: test hash
    }

    /**
     * Test the property 'independentNodeIndexes'
     */
    @Test
    public void independentNodeIndexesTest() {
        // TODO: test independentNodeIndexes
    }

    /**
     * Test the property 'index'
     */
    @Test
    public void indexTest() {
        // TODO: test index
    }

    /**
     * Test the property 'maxGridLevel'
     */
    @Test
    public void maxGridLevelTest() {
        // TODO: test maxGridLevel
    }

    /**
     * Test the property 'nodeCategories'
     */
    @Test
    public void nodeCategoriesTest() {
        // TODO: test nodeCategories
    }

    /**
     * Test the property 'nodes'
     */
    @Test
    public void nodesTest() {
        // TODO: test nodes
    }

    /**
     * Test the property 'progressionHash'
     */
    @Test
    public void progressionHashTest() {
        // TODO: test progressionHash
    }

    /**
     * Test the property 'redacted'
     */
    @Test
    public void redactedTest() {
        // TODO: test redacted
    }

}
