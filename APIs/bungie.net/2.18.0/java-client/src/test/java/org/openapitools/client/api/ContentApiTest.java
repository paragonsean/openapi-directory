/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ContentGetContentById200Response;
import org.openapitools.client.model.ContentGetContentType200Response;
import org.openapitools.client.model.ContentRssNewsArticles200Response;
import org.openapitools.client.model.ContentSearchContentWithText200Response;
import org.openapitools.client.model.ContentSearchHelpArticles200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentApi
 */
@Disabled
public class ContentApiTest {

    private final ContentApi api = new ContentApi();

    /**
     * Returns a content item referenced by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentGetContentByIdTest() throws ApiException {
        Long id = null;
        String locale = null;
        Boolean head = null;
        ContentGetContentById200Response response = api.contentGetContentById(id, locale, head);
        // TODO: test validations
    }

    /**
     * Returns the newest item that matches a given tag and Content Type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentGetContentByTagAndTypeTest() throws ApiException {
        String locale = null;
        String tag = null;
        String type = null;
        Boolean head = null;
        ContentGetContentById200Response response = api.contentGetContentByTagAndType(locale, tag, type, head);
        // TODO: test validations
    }

    /**
     * Gets an object describing a particular variant of content.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentGetContentTypeTest() throws ApiException {
        String type = null;
        ContentGetContentType200Response response = api.contentGetContentType(type);
        // TODO: test validations
    }

    /**
     * Returns a JSON string response that is the RSS feed for news articles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentRssNewsArticlesTest() throws ApiException {
        String pageToken = null;
        String categoryfilter = null;
        Boolean includebody = null;
        ContentRssNewsArticles200Response response = api.contentRssNewsArticles(pageToken, categoryfilter, includebody);
        // TODO: test validations
    }

    /**
     * Searches for Content Items that match the given Tag and Content Type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentSearchContentByTagAndTypeTest() throws ApiException {
        String locale = null;
        String tag = null;
        String type = null;
        Integer currentpage = null;
        Boolean head = null;
        Integer itemsperpage = null;
        ContentSearchContentWithText200Response response = api.contentSearchContentByTagAndType(locale, tag, type, currentpage, head, itemsperpage);
        // TODO: test validations
    }

    /**
     * Gets content based on querystring information passed in. Provides basic search and text search capabilities.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentSearchContentWithTextTest() throws ApiException {
        String locale = null;
        String ctype = null;
        Integer currentpage = null;
        Boolean head = null;
        String searchtext = null;
        String source = null;
        String tag = null;
        ContentSearchContentWithText200Response response = api.contentSearchContentWithText(locale, ctype, currentpage, head, searchtext, source, tag);
        // TODO: test validations
    }

    /**
     * Search for Help Articles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentSearchHelpArticlesTest() throws ApiException {
        String searchtext = null;
        String size = null;
        ContentSearchHelpArticles200Response response = api.contentSearchHelpArticles(searchtext, size);
        // TODO: test validations
    }

}
