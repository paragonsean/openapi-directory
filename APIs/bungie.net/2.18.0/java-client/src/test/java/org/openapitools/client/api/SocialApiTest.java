/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GroupV2GetUserClanInviteSetting200Response;
import org.openapitools.client.model.SocialGetFriendList200Response;
import org.openapitools.client.model.SocialGetFriendRequestList200Response;
import org.openapitools.client.model.SocialGetPlatformFriendList200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SocialApi
 */
@Disabled
public class SocialApiTest {

    private final SocialApi api = new SocialApi();

    /**
     * Accepts a friend relationship with the target user. The user must be on your incoming friend request list, though no error will occur if they are not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void socialAcceptFriendRequestTest() throws ApiException {
        String membershipId = null;
        GroupV2GetUserClanInviteSetting200Response response = api.socialAcceptFriendRequest(membershipId);
        // TODO: test validations
    }

    /**
     * Declines a friend relationship with the target user. The user must be on your incoming friend request list, though no error will occur if they are not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void socialDeclineFriendRequestTest() throws ApiException {
        String membershipId = null;
        GroupV2GetUserClanInviteSetting200Response response = api.socialDeclineFriendRequest(membershipId);
        // TODO: test validations
    }

    /**
     * Returns your Bungie Friend list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void socialGetFriendListTest() throws ApiException {
        SocialGetFriendList200Response response = api.socialGetFriendList();
        // TODO: test validations
    }

    /**
     * Returns your friend request queue.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void socialGetFriendRequestListTest() throws ApiException {
        SocialGetFriendRequestList200Response response = api.socialGetFriendRequestList();
        // TODO: test validations
    }

    /**
     * Gets the platform friend of the requested type, with additional information if they have Bungie accounts. Must have a recent login session with said platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void socialGetPlatformFriendListTest() throws ApiException {
        Integer friendPlatform = null;
        String page = null;
        SocialGetPlatformFriendList200Response response = api.socialGetPlatformFriendList(friendPlatform, page);
        // TODO: test validations
    }

    /**
     * Requests a friend relationship with the target user. Any of the target user&#39;s linked membership ids are valid inputs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void socialIssueFriendRequestTest() throws ApiException {
        String membershipId = null;
        GroupV2GetUserClanInviteSetting200Response response = api.socialIssueFriendRequest(membershipId);
        // TODO: test validations
    }

    /**
     * Remove a friend relationship with the target user. The user must be on your friend list, though no error will occur if they are not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void socialRemoveFriendTest() throws ApiException {
        String membershipId = null;
        GroupV2GetUserClanInviteSetting200Response response = api.socialRemoveFriend(membershipId);
        // TODO: test validations
    }

    /**
     * Remove a friend relationship with the target user. The user must be on your outgoing request friend list, though no error will occur if they are not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void socialRemoveFriendRequestTest() throws ApiException {
        String membershipId = null;
        GroupV2GetUserClanInviteSetting200Response response = api.socialRemoveFriendRequest(membershipId);
        // TODO: test validations
    }

}
