/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GroupV2GetUserClanInviteSetting200Response;
import org.openapitools.client.model.TokensGetBungieRewardsList200Response;
import org.openapitools.client.model.TokensGetPartnerOfferSkuHistory200Response;
import org.openapitools.client.model.TokensGetPartnerRewardHistory200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TokensApi
 */
@Disabled
public class TokensApiTest {

    private final TokensApi api = new TokensApi();

    /**
     * Apply a partner offer to the targeted user. This endpoint does not claim a new offer, but any already claimed offers will be applied to the game if not already.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokensApplyMissingPartnerOffersWithoutClaimTest() throws ApiException {
        Integer partnerApplicationId = null;
        Long targetBnetMembershipId = null;
        GroupV2GetUserClanInviteSetting200Response response = api.tokensApplyMissingPartnerOffersWithoutClaim(partnerApplicationId, targetBnetMembershipId);
        // TODO: test validations
    }

    /**
     * Claim a partner offer as the authenticated user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokensClaimPartnerOfferTest() throws ApiException {
        GroupV2GetUserClanInviteSetting200Response response = api.tokensClaimPartnerOffer();
        // TODO: test validations
    }

    /**
     * Twitch Drops self-repair function - scans twitch for drops not marked as fulfilled and resyncs them.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokensForceDropsRepairTest() throws ApiException {
        GroupV2GetUserClanInviteSetting200Response response = api.tokensForceDropsRepair();
        // TODO: test validations
    }

    /**
     * Returns the bungie rewards for the targeted user when a platform membership Id and Type are used.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokensGetBungieRewardsForPlatformUserTest() throws ApiException {
        Long membershipId = null;
        Integer membershipType = null;
        TokensGetBungieRewardsList200Response response = api.tokensGetBungieRewardsForPlatformUser(membershipId, membershipType);
        // TODO: test validations
    }

    /**
     * Returns the bungie rewards for the targeted user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokensGetBungieRewardsForUserTest() throws ApiException {
        Long membershipId = null;
        TokensGetBungieRewardsList200Response response = api.tokensGetBungieRewardsForUser(membershipId);
        // TODO: test validations
    }

    /**
     * Returns a list of the current bungie rewards
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokensGetBungieRewardsListTest() throws ApiException {
        TokensGetBungieRewardsList200Response response = api.tokensGetBungieRewardsList();
        // TODO: test validations
    }

    /**
     * Returns the partner sku and offer history of the targeted user. Elevated permissions are required to see users that are not yourself.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokensGetPartnerOfferSkuHistoryTest() throws ApiException {
        Integer partnerApplicationId = null;
        Long targetBnetMembershipId = null;
        TokensGetPartnerOfferSkuHistory200Response response = api.tokensGetPartnerOfferSkuHistory(partnerApplicationId, targetBnetMembershipId);
        // TODO: test validations
    }

    /**
     * Returns the partner rewards history of the targeted user, both partner offers and Twitch drops.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokensGetPartnerRewardHistoryTest() throws ApiException {
        Integer partnerApplicationId = null;
        Long targetBnetMembershipId = null;
        TokensGetPartnerRewardHistory200Response response = api.tokensGetPartnerRewardHistory(partnerApplicationId, targetBnetMembershipId);
        // TODO: test validations
    }

}
