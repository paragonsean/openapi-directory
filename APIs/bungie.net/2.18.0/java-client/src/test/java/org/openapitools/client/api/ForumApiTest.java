/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CommunityContentGetCommunityContent200Response;
import org.openapitools.client.model.ForumGetForumTagSuggestions200Response;
import org.openapitools.client.model.ForumGetRecruitmentThreadSummaries200Response;
import org.openapitools.client.model.ForumGetTopicForContent200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ForumApi
 */
@Disabled
public class ForumApiTest {

    private final ForumApi api = new ForumApi();

    /**
     * Gets a listing of all topics marked as part of the core group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetCoreTopicsPagedTest() throws ApiException {
        Integer categoryFilter = null;
        Integer page = null;
        Integer quickDate = null;
        Integer sort = null;
        String locales = null;
        CommunityContentGetCommunityContent200Response response = api.forumGetCoreTopicsPaged(categoryFilter, page, quickDate, sort, locales);
        // TODO: test validations
    }

    /**
     * Gets tag suggestions based on partial text entry, matching them with other tags previously used in the forums.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetForumTagSuggestionsTest() throws ApiException {
        String partialtag = null;
        ForumGetForumTagSuggestions200Response response = api.forumGetForumTagSuggestions(partialtag);
        // TODO: test validations
    }

    /**
     * Gets the specified forum poll.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetPollTest() throws ApiException {
        Long topicId = null;
        CommunityContentGetCommunityContent200Response response = api.forumGetPoll(topicId);
        // TODO: test validations
    }

    /**
     * Returns the post specified and its immediate parent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetPostAndParentTest() throws ApiException {
        Long childPostId = null;
        String showbanned = null;
        CommunityContentGetCommunityContent200Response response = api.forumGetPostAndParent(childPostId, showbanned);
        // TODO: test validations
    }

    /**
     * Returns the post specified and its immediate parent of posts that are awaiting approval.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetPostAndParentAwaitingApprovalTest() throws ApiException {
        Long childPostId = null;
        String showbanned = null;
        CommunityContentGetCommunityContent200Response response = api.forumGetPostAndParentAwaitingApproval(childPostId, showbanned);
        // TODO: test validations
    }

    /**
     * Returns a thread of posts at the given parent, optionally returning replies to those posts as well as the original parent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetPostsThreadedPagedTest() throws ApiException {
        Boolean getParentPost = null;
        Integer page = null;
        Integer pageSize = null;
        Long parentPostId = null;
        Integer replySize = null;
        Boolean rootThreadMode = null;
        Integer sortMode = null;
        String showbanned = null;
        CommunityContentGetCommunityContent200Response response = api.forumGetPostsThreadedPaged(getParentPost, page, pageSize, parentPostId, replySize, rootThreadMode, sortMode, showbanned);
        // TODO: test validations
    }

    /**
     * Returns a thread of posts starting at the topicId of the input childPostId, optionally returning replies to those posts as well as the original parent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetPostsThreadedPagedFromChildTest() throws ApiException {
        Long childPostId = null;
        Integer page = null;
        Integer pageSize = null;
        Integer replySize = null;
        Boolean rootThreadMode = null;
        Integer sortMode = null;
        String showbanned = null;
        CommunityContentGetCommunityContent200Response response = api.forumGetPostsThreadedPagedFromChild(childPostId, page, pageSize, replySize, rootThreadMode, sortMode, showbanned);
        // TODO: test validations
    }

    /**
     * Allows the caller to get a list of to 25 recruitment thread summary information objects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetRecruitmentThreadSummariesTest() throws ApiException {
        ForumGetRecruitmentThreadSummaries200Response response = api.forumGetRecruitmentThreadSummaries();
        // TODO: test validations
    }

    /**
     * Gets the post Id for the given content item&#39;s comments, if it exists.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetTopicForContentTest() throws ApiException {
        Long contentId = null;
        ForumGetTopicForContent200Response response = api.forumGetTopicForContent(contentId);
        // TODO: test validations
    }

    /**
     * Get topics from any forum.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forumGetTopicsPagedTest() throws ApiException {
        Integer categoryFilter = null;
        Long group = null;
        Integer page = null;
        Integer pageSize = null;
        Integer quickDate = null;
        Integer sort = null;
        String locales = null;
        String tagstring = null;
        CommunityContentGetCommunityContent200Response response = api.forumGetTopicsPaged(categoryFilter, group, page, pageSize, quickDate, sort, locales, tagstring);
        // TODO: test validations
    }

}
