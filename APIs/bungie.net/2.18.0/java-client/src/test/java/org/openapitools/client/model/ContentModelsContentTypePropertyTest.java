/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ContentModelsContentTypeDefaultValue;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ContentModelsContentTypeProperty
 */
public class ContentModelsContentTypePropertyTest {
    private final ContentModelsContentTypeProperty model = new ContentModelsContentTypeProperty();

    /**
     * Model tests for ContentModelsContentTypeProperty
     */
    @Test
    public void testContentModelsContentTypeProperty() {
        // TODO: test ContentModelsContentTypeProperty
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'bindToProperty'
     */
    @Test
    public void bindToPropertyTest() {
        // TODO: test bindToProperty
    }

    /**
     * Test the property 'boundRegex'
     */
    @Test
    public void boundRegexTest() {
        // TODO: test boundRegex
    }

    /**
     * Test the property 'childProperties'
     */
    @Test
    public void childPropertiesTest() {
        // TODO: test childProperties
    }

    /**
     * Test the property 'contentTypeAllowed'
     */
    @Test
    public void contentTypeAllowedTest() {
        // TODO: test contentTypeAllowed
    }

    /**
     * Test the property 'datatype'
     */
    @Test
    public void datatypeTest() {
        // TODO: test datatype
    }

    /**
     * Test the property 'defaultValues'
     */
    @Test
    public void defaultValuesTest() {
        // TODO: test defaultValues
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'entitytype'
     */
    @Test
    public void entitytypeTest() {
        // TODO: test entitytype
    }

    /**
     * Test the property 'fallback'
     */
    @Test
    public void fallbackTest() {
        // TODO: test fallback
    }

    /**
     * Test the property 'isCombo'
     */
    @Test
    public void isComboTest() {
        // TODO: test isCombo
    }

    /**
     * Test the property 'isExternalAllowed'
     */
    @Test
    public void isExternalAllowedTest() {
        // TODO: test isExternalAllowed
    }

    /**
     * Test the property 'isImage'
     */
    @Test
    public void isImageTest() {
        // TODO: test isImage
    }

    /**
     * Test the property 'isTitle'
     */
    @Test
    public void isTitleTest() {
        // TODO: test isTitle
    }

    /**
     * Test the property 'isVideo'
     */
    @Test
    public void isVideoTest() {
        // TODO: test isVideo
    }

    /**
     * Test the property 'legalContentTypes'
     */
    @Test
    public void legalContentTypesTest() {
        // TODO: test legalContentTypes
    }

    /**
     * Test the property 'localizable'
     */
    @Test
    public void localizableTest() {
        // TODO: test localizable
    }

    /**
     * Test the property 'maxByteLength'
     */
    @Test
    public void maxByteLengthTest() {
        // TODO: test maxByteLength
    }

    /**
     * Test the property 'maxFileSize'
     */
    @Test
    public void maxFileSizeTest() {
        // TODO: test maxFileSize
    }

    /**
     * Test the property 'maxHeight'
     */
    @Test
    public void maxHeightTest() {
        // TODO: test maxHeight
    }

    /**
     * Test the property 'maxLength'
     */
    @Test
    public void maxLengthTest() {
        // TODO: test maxLength
    }

    /**
     * Test the property 'maxWidth'
     */
    @Test
    public void maxWidthTest() {
        // TODO: test maxWidth
    }

    /**
     * Test the property 'minHeight'
     */
    @Test
    public void minHeightTest() {
        // TODO: test minHeight
    }

    /**
     * Test the property 'minWidth'
     */
    @Test
    public void minWidthTest() {
        // TODO: test minWidth
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'order'
     */
    @Test
    public void orderTest() {
        // TODO: test order
    }

    /**
     * Test the property 'propertyDescription'
     */
    @Test
    public void propertyDescriptionTest() {
        // TODO: test propertyDescription
    }

    /**
     * Test the property 'propertySection'
     */
    @Test
    public void propertySectionTest() {
        // TODO: test propertySection
    }

    /**
     * Test the property 'readableName'
     */
    @Test
    public void readableNameTest() {
        // TODO: test readableName
    }

    /**
     * Test the property 'regexp'
     */
    @Test
    public void regexpTest() {
        // TODO: test regexp
    }

    /**
     * Test the property 'representationSelection'
     */
    @Test
    public void representationSelectionTest() {
        // TODO: test representationSelection
    }

    /**
     * Test the property 'representationValidationString'
     */
    @Test
    public void representationValidationStringTest() {
        // TODO: test representationValidationString
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'rootPropertyName'
     */
    @Test
    public void rootPropertyNameTest() {
        // TODO: test rootPropertyName
    }

    /**
     * Test the property 'rssAttribute'
     */
    @Test
    public void rssAttributeTest() {
        // TODO: test rssAttribute
    }

    /**
     * Test the property 'suppressProperty'
     */
    @Test
    public void suppressPropertyTest() {
        // TODO: test suppressProperty
    }

    /**
     * Test the property 'validateAs'
     */
    @Test
    public void validateAsTest() {
        // TODO: test validateAs
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'visible'
     */
    @Test
    public void visibleTest() {
        // TODO: test visible
    }

    /**
     * Test the property 'visibleDependency'
     */
    @Test
    public void visibleDependencyTest() {
        // TODO: test visibleDependency
    }

    /**
     * Test the property 'visibleOn'
     */
    @Test
    public void visibleOnTest() {
        // TODO: test visibleOn
    }

    /**
     * Test the property 'weight'
     */
    @Test
    public void weightTest() {
        // TODO: test weight
    }

}
