/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;
import org.openapitools.client.model.DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition;
import org.openapitools.client.model.DestinyDefinitionsSocketsDestinyPlugWhitelistEntryDefinition;
import org.openapitools.client.model.DestinyDefinitionsSocketsDestinySocketTypeScalarMaterialRequirementEntry;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DestinyDefinitionsSocketsDestinySocketTypeDefinition
 */
public class DestinyDefinitionsSocketsDestinySocketTypeDefinitionTest {
    private final DestinyDefinitionsSocketsDestinySocketTypeDefinition model = new DestinyDefinitionsSocketsDestinySocketTypeDefinition();

    /**
     * Model tests for DestinyDefinitionsSocketsDestinySocketTypeDefinition
     */
    @Test
    public void testDestinyDefinitionsSocketsDestinySocketTypeDefinition() {
        // TODO: test DestinyDefinitionsSocketsDestinySocketTypeDefinition
    }

    /**
     * Test the property 'alwaysRandomizeSockets'
     */
    @Test
    public void alwaysRandomizeSocketsTest() {
        // TODO: test alwaysRandomizeSockets
    }

    /**
     * Test the property 'avoidDuplicatesOnInitialization'
     */
    @Test
    public void avoidDuplicatesOnInitializationTest() {
        // TODO: test avoidDuplicatesOnInitialization
    }

    /**
     * Test the property 'currencyScalars'
     */
    @Test
    public void currencyScalarsTest() {
        // TODO: test currencyScalars
    }

    /**
     * Test the property 'displayProperties'
     */
    @Test
    public void displayPropertiesTest() {
        // TODO: test displayProperties
    }

    /**
     * Test the property 'hash'
     */
    @Test
    public void hashTest() {
        // TODO: test hash
    }

    /**
     * Test the property 'hideDuplicateReusablePlugs'
     */
    @Test
    public void hideDuplicateReusablePlugsTest() {
        // TODO: test hideDuplicateReusablePlugs
    }

    /**
     * Test the property 'index'
     */
    @Test
    public void indexTest() {
        // TODO: test index
    }

    /**
     * Test the property 'insertAction'
     */
    @Test
    public void insertActionTest() {
        // TODO: test insertAction
    }

    /**
     * Test the property 'isPreviewEnabled'
     */
    @Test
    public void isPreviewEnabledTest() {
        // TODO: test isPreviewEnabled
    }

    /**
     * Test the property 'overridesUiAppearance'
     */
    @Test
    public void overridesUiAppearanceTest() {
        // TODO: test overridesUiAppearance
    }

    /**
     * Test the property 'plugWhitelist'
     */
    @Test
    public void plugWhitelistTest() {
        // TODO: test plugWhitelist
    }

    /**
     * Test the property 'redacted'
     */
    @Test
    public void redactedTest() {
        // TODO: test redacted
    }

    /**
     * Test the property 'socketCategoryHash'
     */
    @Test
    public void socketCategoryHashTest() {
        // TODO: test socketCategoryHash
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

}
