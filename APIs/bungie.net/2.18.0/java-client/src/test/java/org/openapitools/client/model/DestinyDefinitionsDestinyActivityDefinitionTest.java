/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyConstantsDestinyEnvironmentLocationMapping;
import org.openapitools.client.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityChallengeDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityGraphListEntryDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityGuidedBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityInsertionPointDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityLoadoutRequirementSet;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityMatchmakingBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityModifierReferenceDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityPlaylistItemDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityRewardDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyActivityUnlockStringDefinition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DestinyDefinitionsDestinyActivityDefinition
 */
public class DestinyDefinitionsDestinyActivityDefinitionTest {
    private final DestinyDefinitionsDestinyActivityDefinition model = new DestinyDefinitionsDestinyActivityDefinition();

    /**
     * Model tests for DestinyDefinitionsDestinyActivityDefinition
     */
    @Test
    public void testDestinyDefinitionsDestinyActivityDefinition() {
        // TODO: test DestinyDefinitionsDestinyActivityDefinition
    }

    /**
     * Test the property 'activityGraphList'
     */
    @Test
    public void activityGraphListTest() {
        // TODO: test activityGraphList
    }

    /**
     * Test the property 'activityLightLevel'
     */
    @Test
    public void activityLightLevelTest() {
        // TODO: test activityLightLevel
    }

    /**
     * Test the property 'activityLocationMappings'
     */
    @Test
    public void activityLocationMappingsTest() {
        // TODO: test activityLocationMappings
    }

    /**
     * Test the property 'activityModeHashes'
     */
    @Test
    public void activityModeHashesTest() {
        // TODO: test activityModeHashes
    }

    /**
     * Test the property 'activityModeTypes'
     */
    @Test
    public void activityModeTypesTest() {
        // TODO: test activityModeTypes
    }

    /**
     * Test the property 'activityTypeHash'
     */
    @Test
    public void activityTypeHashTest() {
        // TODO: test activityTypeHash
    }

    /**
     * Test the property 'challenges'
     */
    @Test
    public void challengesTest() {
        // TODO: test challenges
    }

    /**
     * Test the property 'destinationHash'
     */
    @Test
    public void destinationHashTest() {
        // TODO: test destinationHash
    }

    /**
     * Test the property 'directActivityModeHash'
     */
    @Test
    public void directActivityModeHashTest() {
        // TODO: test directActivityModeHash
    }

    /**
     * Test the property 'directActivityModeType'
     */
    @Test
    public void directActivityModeTypeTest() {
        // TODO: test directActivityModeType
    }

    /**
     * Test the property 'displayProperties'
     */
    @Test
    public void displayPropertiesTest() {
        // TODO: test displayProperties
    }

    /**
     * Test the property 'guidedGame'
     */
    @Test
    public void guidedGameTest() {
        // TODO: test guidedGame
    }

    /**
     * Test the property 'hash'
     */
    @Test
    public void hashTest() {
        // TODO: test hash
    }

    /**
     * Test the property 'index'
     */
    @Test
    public void indexTest() {
        // TODO: test index
    }

    /**
     * Test the property 'insertionPoints'
     */
    @Test
    public void insertionPointsTest() {
        // TODO: test insertionPoints
    }

    /**
     * Test the property 'isPlaylist'
     */
    @Test
    public void isPlaylistTest() {
        // TODO: test isPlaylist
    }

    /**
     * Test the property 'isPvP'
     */
    @Test
    public void isPvPTest() {
        // TODO: test isPvP
    }

    /**
     * Test the property 'loadouts'
     */
    @Test
    public void loadoutsTest() {
        // TODO: test loadouts
    }

    /**
     * Test the property 'matchmaking'
     */
    @Test
    public void matchmakingTest() {
        // TODO: test matchmaking
    }

    /**
     * Test the property 'modifiers'
     */
    @Test
    public void modifiersTest() {
        // TODO: test modifiers
    }

    /**
     * Test the property 'optionalUnlockStrings'
     */
    @Test
    public void optionalUnlockStringsTest() {
        // TODO: test optionalUnlockStrings
    }

    /**
     * Test the property 'originalDisplayProperties'
     */
    @Test
    public void originalDisplayPropertiesTest() {
        // TODO: test originalDisplayProperties
    }

    /**
     * Test the property 'pgcrImage'
     */
    @Test
    public void pgcrImageTest() {
        // TODO: test pgcrImage
    }

    /**
     * Test the property 'placeHash'
     */
    @Test
    public void placeHashTest() {
        // TODO: test placeHash
    }

    /**
     * Test the property 'playlistItems'
     */
    @Test
    public void playlistItemsTest() {
        // TODO: test playlistItems
    }

    /**
     * Test the property 'redacted'
     */
    @Test
    public void redactedTest() {
        // TODO: test redacted
    }

    /**
     * Test the property 'releaseIcon'
     */
    @Test
    public void releaseIconTest() {
        // TODO: test releaseIcon
    }

    /**
     * Test the property 'releaseTime'
     */
    @Test
    public void releaseTimeTest() {
        // TODO: test releaseTime
    }

    /**
     * Test the property 'rewards'
     */
    @Test
    public void rewardsTest() {
        // TODO: test rewards
    }

    /**
     * Test the property 'selectionScreenDisplayProperties'
     */
    @Test
    public void selectionScreenDisplayPropertiesTest() {
        // TODO: test selectionScreenDisplayProperties
    }

    /**
     * Test the property 'tier'
     */
    @Test
    public void tierTest() {
        // TODO: test tier
    }

}
