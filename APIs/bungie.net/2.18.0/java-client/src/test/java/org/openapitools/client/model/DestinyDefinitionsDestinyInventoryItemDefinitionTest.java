/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyDefinitionsAnimationsDestinyAnimationReference;
import org.openapitools.client.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyEquippingBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemActionBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemCraftingBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemGearsetBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemInventoryBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemInvestmentStatDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemMetricBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemObjectiveBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemPerkEntryDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemPreviewBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemQualityBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemSackBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemSetBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemSocketBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemSourceBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemStatBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemSummaryBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemTalentGridBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemTooltipNotification;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemTranslationBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsDestinyItemValueBlockDefinition;
import org.openapitools.client.model.DestinyDefinitionsItemsDestinyItemPlugDefinition;
import org.openapitools.client.model.DestinyMiscDestinyColor;
import org.openapitools.client.model.LinksHyperlinkReference;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DestinyDefinitionsDestinyInventoryItemDefinition
 */
public class DestinyDefinitionsDestinyInventoryItemDefinitionTest {
    private final DestinyDefinitionsDestinyInventoryItemDefinition model = new DestinyDefinitionsDestinyInventoryItemDefinition();

    /**
     * Model tests for DestinyDefinitionsDestinyInventoryItemDefinition
     */
    @Test
    public void testDestinyDefinitionsDestinyInventoryItemDefinition() {
        // TODO: test DestinyDefinitionsDestinyInventoryItemDefinition
    }

    /**
     * Test the property 'action'
     */
    @Test
    public void actionTest() {
        // TODO: test action
    }

    /**
     * Test the property 'allowActions'
     */
    @Test
    public void allowActionsTest() {
        // TODO: test allowActions
    }

    /**
     * Test the property 'animations'
     */
    @Test
    public void animationsTest() {
        // TODO: test animations
    }

    /**
     * Test the property 'backgroundColor'
     */
    @Test
    public void backgroundColorTest() {
        // TODO: test backgroundColor
    }

    /**
     * Test the property 'breakerType'
     */
    @Test
    public void breakerTypeTest() {
        // TODO: test breakerType
    }

    /**
     * Test the property 'breakerTypeHash'
     */
    @Test
    public void breakerTypeHashTest() {
        // TODO: test breakerTypeHash
    }

    /**
     * Test the property 'classType'
     */
    @Test
    public void classTypeTest() {
        // TODO: test classType
    }

    /**
     * Test the property 'collectibleHash'
     */
    @Test
    public void collectibleHashTest() {
        // TODO: test collectibleHash
    }

    /**
     * Test the property 'crafting'
     */
    @Test
    public void craftingTest() {
        // TODO: test crafting
    }

    /**
     * Test the property 'damageTypeHashes'
     */
    @Test
    public void damageTypeHashesTest() {
        // TODO: test damageTypeHashes
    }

    /**
     * Test the property 'damageTypes'
     */
    @Test
    public void damageTypesTest() {
        // TODO: test damageTypes
    }

    /**
     * Test the property 'defaultDamageType'
     */
    @Test
    public void defaultDamageTypeTest() {
        // TODO: test defaultDamageType
    }

    /**
     * Test the property 'defaultDamageTypeHash'
     */
    @Test
    public void defaultDamageTypeHashTest() {
        // TODO: test defaultDamageTypeHash
    }

    /**
     * Test the property 'displayProperties'
     */
    @Test
    public void displayPropertiesTest() {
        // TODO: test displayProperties
    }

    /**
     * Test the property 'displaySource'
     */
    @Test
    public void displaySourceTest() {
        // TODO: test displaySource
    }

    /**
     * Test the property 'doesPostmasterPullHaveSideEffects'
     */
    @Test
    public void doesPostmasterPullHaveSideEffectsTest() {
        // TODO: test doesPostmasterPullHaveSideEffects
    }

    /**
     * Test the property 'emblemObjectiveHash'
     */
    @Test
    public void emblemObjectiveHashTest() {
        // TODO: test emblemObjectiveHash
    }

    /**
     * Test the property 'equippable'
     */
    @Test
    public void equippableTest() {
        // TODO: test equippable
    }

    /**
     * Test the property 'equippingBlock'
     */
    @Test
    public void equippingBlockTest() {
        // TODO: test equippingBlock
    }

    /**
     * Test the property 'flavorText'
     */
    @Test
    public void flavorTextTest() {
        // TODO: test flavorText
    }

    /**
     * Test the property 'gearset'
     */
    @Test
    public void gearsetTest() {
        // TODO: test gearset
    }

    /**
     * Test the property 'hash'
     */
    @Test
    public void hashTest() {
        // TODO: test hash
    }

    /**
     * Test the property 'iconWatermark'
     */
    @Test
    public void iconWatermarkTest() {
        // TODO: test iconWatermark
    }

    /**
     * Test the property 'iconWatermarkShelved'
     */
    @Test
    public void iconWatermarkShelvedTest() {
        // TODO: test iconWatermarkShelved
    }

    /**
     * Test the property 'index'
     */
    @Test
    public void indexTest() {
        // TODO: test index
    }

    /**
     * Test the property 'inventory'
     */
    @Test
    public void inventoryTest() {
        // TODO: test inventory
    }

    /**
     * Test the property 'investmentStats'
     */
    @Test
    public void investmentStatsTest() {
        // TODO: test investmentStats
    }

    /**
     * Test the property 'isWrapper'
     */
    @Test
    public void isWrapperTest() {
        // TODO: test isWrapper
    }

    /**
     * Test the property 'itemCategoryHashes'
     */
    @Test
    public void itemCategoryHashesTest() {
        // TODO: test itemCategoryHashes
    }

    /**
     * Test the property 'itemSubType'
     */
    @Test
    public void itemSubTypeTest() {
        // TODO: test itemSubType
    }

    /**
     * Test the property 'itemType'
     */
    @Test
    public void itemTypeTest() {
        // TODO: test itemType
    }

    /**
     * Test the property 'itemTypeAndTierDisplayName'
     */
    @Test
    public void itemTypeAndTierDisplayNameTest() {
        // TODO: test itemTypeAndTierDisplayName
    }

    /**
     * Test the property 'itemTypeDisplayName'
     */
    @Test
    public void itemTypeDisplayNameTest() {
        // TODO: test itemTypeDisplayName
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'loreHash'
     */
    @Test
    public void loreHashTest() {
        // TODO: test loreHash
    }

    /**
     * Test the property 'metrics'
     */
    @Test
    public void metricsTest() {
        // TODO: test metrics
    }

    /**
     * Test the property 'nonTransferrable'
     */
    @Test
    public void nonTransferrableTest() {
        // TODO: test nonTransferrable
    }

    /**
     * Test the property 'objectives'
     */
    @Test
    public void objectivesTest() {
        // TODO: test objectives
    }

    /**
     * Test the property 'perks'
     */
    @Test
    public void perksTest() {
        // TODO: test perks
    }

    /**
     * Test the property 'plug'
     */
    @Test
    public void plugTest() {
        // TODO: test plug
    }

    /**
     * Test the property 'preview'
     */
    @Test
    public void previewTest() {
        // TODO: test preview
    }

    /**
     * Test the property 'quality'
     */
    @Test
    public void qualityTest() {
        // TODO: test quality
    }

    /**
     * Test the property 'redacted'
     */
    @Test
    public void redactedTest() {
        // TODO: test redacted
    }

    /**
     * Test the property 'sack'
     */
    @Test
    public void sackTest() {
        // TODO: test sack
    }

    /**
     * Test the property 'screenshot'
     */
    @Test
    public void screenshotTest() {
        // TODO: test screenshot
    }

    /**
     * Test the property 'seasonHash'
     */
    @Test
    public void seasonHashTest() {
        // TODO: test seasonHash
    }

    /**
     * Test the property 'secondaryIcon'
     */
    @Test
    public void secondaryIconTest() {
        // TODO: test secondaryIcon
    }

    /**
     * Test the property 'secondaryOverlay'
     */
    @Test
    public void secondaryOverlayTest() {
        // TODO: test secondaryOverlay
    }

    /**
     * Test the property 'secondarySpecial'
     */
    @Test
    public void secondarySpecialTest() {
        // TODO: test secondarySpecial
    }

    /**
     * Test the property 'setData'
     */
    @Test
    public void setDataTest() {
        // TODO: test setData
    }

    /**
     * Test the property 'sockets'
     */
    @Test
    public void socketsTest() {
        // TODO: test sockets
    }

    /**
     * Test the property 'sourceData'
     */
    @Test
    public void sourceDataTest() {
        // TODO: test sourceData
    }

    /**
     * Test the property 'specialItemType'
     */
    @Test
    public void specialItemTypeTest() {
        // TODO: test specialItemType
    }

    /**
     * Test the property 'stats'
     */
    @Test
    public void statsTest() {
        // TODO: test stats
    }

    /**
     * Test the property 'summary'
     */
    @Test
    public void summaryTest() {
        // TODO: test summary
    }

    /**
     * Test the property 'summaryItemHash'
     */
    @Test
    public void summaryItemHashTest() {
        // TODO: test summaryItemHash
    }

    /**
     * Test the property 'talentGrid'
     */
    @Test
    public void talentGridTest() {
        // TODO: test talentGrid
    }

    /**
     * Test the property 'tooltipNotifications'
     */
    @Test
    public void tooltipNotificationsTest() {
        // TODO: test tooltipNotifications
    }

    /**
     * Test the property 'tooltipStyle'
     */
    @Test
    public void tooltipStyleTest() {
        // TODO: test tooltipStyle
    }

    /**
     * Test the property 'traitHashes'
     */
    @Test
    public void traitHashesTest() {
        // TODO: test traitHashes
    }

    /**
     * Test the property 'traitIds'
     */
    @Test
    public void traitIdsTest() {
        // TODO: test traitIds
    }

    /**
     * Test the property 'translationBlock'
     */
    @Test
    public void translationBlockTest() {
        // TODO: test translationBlock
    }

    /**
     * Test the property 'uiItemDisplayStyle'
     */
    @Test
    public void uiItemDisplayStyleTest() {
        // TODO: test uiItemDisplayStyle
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

}
