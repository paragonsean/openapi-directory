/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DestinyDefinitionsItemsDestinyEnergyCapacityEntry;
import org.openapitools.client.model.DestinyDefinitionsItemsDestinyEnergyCostEntry;
import org.openapitools.client.model.DestinyDefinitionsItemsDestinyParentItemOverride;
import org.openapitools.client.model.DestinyDefinitionsItemsDestinyPlugRuleDefinition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DestinyDefinitionsItemsDestinyItemPlugDefinition
 */
public class DestinyDefinitionsItemsDestinyItemPlugDefinitionTest {
    private final DestinyDefinitionsItemsDestinyItemPlugDefinition model = new DestinyDefinitionsItemsDestinyItemPlugDefinition();

    /**
     * Model tests for DestinyDefinitionsItemsDestinyItemPlugDefinition
     */
    @Test
    public void testDestinyDefinitionsItemsDestinyItemPlugDefinition() {
        // TODO: test DestinyDefinitionsItemsDestinyItemPlugDefinition
    }

    /**
     * Test the property 'alternatePlugStyle'
     */
    @Test
    public void alternatePlugStyleTest() {
        // TODO: test alternatePlugStyle
    }

    /**
     * Test the property 'alternateUiPlugLabel'
     */
    @Test
    public void alternateUiPlugLabelTest() {
        // TODO: test alternateUiPlugLabel
    }

    /**
     * Test the property 'enabledMaterialRequirementHash'
     */
    @Test
    public void enabledMaterialRequirementHashTest() {
        // TODO: test enabledMaterialRequirementHash
    }

    /**
     * Test the property 'enabledRules'
     */
    @Test
    public void enabledRulesTest() {
        // TODO: test enabledRules
    }

    /**
     * Test the property 'energyCapacity'
     */
    @Test
    public void energyCapacityTest() {
        // TODO: test energyCapacity
    }

    /**
     * Test the property 'energyCost'
     */
    @Test
    public void energyCostTest() {
        // TODO: test energyCost
    }

    /**
     * Test the property 'insertionMaterialRequirementHash'
     */
    @Test
    public void insertionMaterialRequirementHashTest() {
        // TODO: test insertionMaterialRequirementHash
    }

    /**
     * Test the property 'insertionRules'
     */
    @Test
    public void insertionRulesTest() {
        // TODO: test insertionRules
    }

    /**
     * Test the property 'isDummyPlug'
     */
    @Test
    public void isDummyPlugTest() {
        // TODO: test isDummyPlug
    }

    /**
     * Test the property 'onActionRecreateSelf'
     */
    @Test
    public void onActionRecreateSelfTest() {
        // TODO: test onActionRecreateSelf
    }

    /**
     * Test the property 'parentItemOverride'
     */
    @Test
    public void parentItemOverrideTest() {
        // TODO: test parentItemOverride
    }

    /**
     * Test the property 'plugAvailability'
     */
    @Test
    public void plugAvailabilityTest() {
        // TODO: test plugAvailability
    }

    /**
     * Test the property 'plugCategoryHash'
     */
    @Test
    public void plugCategoryHashTest() {
        // TODO: test plugCategoryHash
    }

    /**
     * Test the property 'plugCategoryIdentifier'
     */
    @Test
    public void plugCategoryIdentifierTest() {
        // TODO: test plugCategoryIdentifier
    }

    /**
     * Test the property 'plugStyle'
     */
    @Test
    public void plugStyleTest() {
        // TODO: test plugStyle
    }

    /**
     * Test the property 'previewItemOverrideHash'
     */
    @Test
    public void previewItemOverrideHashTest() {
        // TODO: test previewItemOverrideHash
    }

    /**
     * Test the property 'uiPlugLabel'
     */
    @Test
    public void uiPlugLabelTest() {
        // TODO: test uiPlugLabel
    }

}
