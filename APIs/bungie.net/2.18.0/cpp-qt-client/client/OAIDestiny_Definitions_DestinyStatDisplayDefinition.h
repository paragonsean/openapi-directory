/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyStatDisplayDefinition.h
 *
 * Describes the way that an Item Stat (see DestinyStatDefinition) is transformed using the DestinyStatGroupDefinition related to that item. See both of the aforementioned definitions for more information about the stages of stat transformation.  This represents the transformation of a stat into a \&quot;Display\&quot; stat (the closest value that BNet can get to the in-game display value of the stat)
 */

#ifndef OAIDestiny_Definitions_DestinyStatDisplayDefinition_H
#define OAIDestiny_Definitions_DestinyStatDisplayDefinition_H

#include <QJsonObject>

#include "OAIInterpolation_InterpolationPoint.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInterpolation_InterpolationPoint;

class OAIDestiny_Definitions_DestinyStatDisplayDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyStatDisplayDefinition();
    OAIDestiny_Definitions_DestinyStatDisplayDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyStatDisplayDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDisplayAsNumeric() const;
    void setDisplayAsNumeric(const bool &display_as_numeric);
    bool is_display_as_numeric_Set() const;
    bool is_display_as_numeric_Valid() const;

    QList<OAIInterpolation_InterpolationPoint> getDisplayInterpolation() const;
    void setDisplayInterpolation(const QList<OAIInterpolation_InterpolationPoint> &display_interpolation);
    bool is_display_interpolation_Set() const;
    bool is_display_interpolation_Valid() const;

    qint32 getMaximumValue() const;
    void setMaximumValue(const qint32 &maximum_value);
    bool is_maximum_value_Set() const;
    bool is_maximum_value_Valid() const;

    qint32 getStatHash() const;
    void setStatHash(const qint32 &stat_hash);
    bool is_stat_hash_Set() const;
    bool is_stat_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_display_as_numeric;
    bool m_display_as_numeric_isSet;
    bool m_display_as_numeric_isValid;

    QList<OAIInterpolation_InterpolationPoint> m_display_interpolation;
    bool m_display_interpolation_isSet;
    bool m_display_interpolation_isValid;

    qint32 m_maximum_value;
    bool m_maximum_value_isSet;
    bool m_maximum_value_isValid;

    qint32 m_stat_hash;
    bool m_stat_hash_isSet;
    bool m_stat_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyStatDisplayDefinition)

#endif // OAIDestiny_Definitions_DestinyStatDisplayDefinition_H
