/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Responses_DestinyProfileUserInfoCard.h
 *
 * 
 */

#ifndef OAIDestiny_Responses_DestinyProfileUserInfoCard_H
#define OAIDestiny_Responses_DestinyProfileUserInfoCard_H

#include <QJsonObject>

#include "OAIDestiny_Components_Inventory_DestinyPlatformSilverComponent.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Components_Inventory_DestinyPlatformSilverComponent;

class OAIDestiny_Responses_DestinyProfileUserInfoCard : public OAIObject {
public:
    OAIDestiny_Responses_DestinyProfileUserInfoCard();
    OAIDestiny_Responses_DestinyProfileUserInfoCard(QString json);
    ~OAIDestiny_Responses_DestinyProfileUserInfoCard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint32> getApplicableMembershipTypes() const;
    void setApplicableMembershipTypes(const QList<qint32> &applicable_membership_types);
    bool is_applicable_membership_types_Set() const;
    bool is_applicable_membership_types_Valid() const;

    QString getBungieGlobalDisplayName() const;
    void setBungieGlobalDisplayName(const QString &bungie_global_display_name);
    bool is_bungie_global_display_name_Set() const;
    bool is_bungie_global_display_name_Valid() const;

    qint32 getBungieGlobalDisplayNameCode() const;
    void setBungieGlobalDisplayNameCode(const qint32 &bungie_global_display_name_code);
    bool is_bungie_global_display_name_code_Set() const;
    bool is_bungie_global_display_name_code_Valid() const;

    qint32 getCrossSaveOverride() const;
    void setCrossSaveOverride(const qint32 &cross_save_override);
    bool is_cross_save_override_Set() const;
    bool is_cross_save_override_Valid() const;

    QDateTime getDateLastPlayed() const;
    void setDateLastPlayed(const QDateTime &date_last_played);
    bool is_date_last_played_Set() const;
    bool is_date_last_played_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getIconPath() const;
    void setIconPath(const QString &icon_path);
    bool is_icon_path_Set() const;
    bool is_icon_path_Valid() const;

    bool isIsCrossSavePrimary() const;
    void setIsCrossSavePrimary(const bool &is_cross_save_primary);
    bool is_is_cross_save_primary_Set() const;
    bool is_is_cross_save_primary_Valid() const;

    bool isIsOverridden() const;
    void setIsOverridden(const bool &is_overridden);
    bool is_is_overridden_Set() const;
    bool is_is_overridden_Valid() const;

    bool isIsPublic() const;
    void setIsPublic(const bool &is_public);
    bool is_is_public_Set() const;
    bool is_is_public_Valid() const;

    qint64 getMembershipId() const;
    void setMembershipId(const qint64 &membership_id);
    bool is_membership_id_Set() const;
    bool is_membership_id_Valid() const;

    qint32 getMembershipType() const;
    void setMembershipType(const qint32 &membership_type);
    bool is_membership_type_Set() const;
    bool is_membership_type_Valid() const;

    OAIDestiny_Components_Inventory_DestinyPlatformSilverComponent getPlatformSilver() const;
    void setPlatformSilver(const OAIDestiny_Components_Inventory_DestinyPlatformSilverComponent &platform_silver);
    bool is_platform_silver_Set() const;
    bool is_platform_silver_Valid() const;

    QString getSupplementalDisplayName() const;
    void setSupplementalDisplayName(const QString &supplemental_display_name);
    bool is_supplemental_display_name_Set() const;
    bool is_supplemental_display_name_Valid() const;

    qint32 getUnpairedGameVersions() const;
    void setUnpairedGameVersions(const qint32 &unpaired_game_versions);
    bool is_unpaired_game_versions_Set() const;
    bool is_unpaired_game_versions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint32> m_applicable_membership_types;
    bool m_applicable_membership_types_isSet;
    bool m_applicable_membership_types_isValid;

    QString m_bungie_global_display_name;
    bool m_bungie_global_display_name_isSet;
    bool m_bungie_global_display_name_isValid;

    qint32 m_bungie_global_display_name_code;
    bool m_bungie_global_display_name_code_isSet;
    bool m_bungie_global_display_name_code_isValid;

    qint32 m_cross_save_override;
    bool m_cross_save_override_isSet;
    bool m_cross_save_override_isValid;

    QDateTime m_date_last_played;
    bool m_date_last_played_isSet;
    bool m_date_last_played_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_icon_path;
    bool m_icon_path_isSet;
    bool m_icon_path_isValid;

    bool m_is_cross_save_primary;
    bool m_is_cross_save_primary_isSet;
    bool m_is_cross_save_primary_isValid;

    bool m_is_overridden;
    bool m_is_overridden_isSet;
    bool m_is_overridden_isValid;

    bool m_is_public;
    bool m_is_public_isSet;
    bool m_is_public_isValid;

    qint64 m_membership_id;
    bool m_membership_id_isSet;
    bool m_membership_id_isValid;

    qint32 m_membership_type;
    bool m_membership_type_isSet;
    bool m_membership_type_isValid;

    OAIDestiny_Components_Inventory_DestinyPlatformSilverComponent m_platform_silver;
    bool m_platform_silver_isSet;
    bool m_platform_silver_isValid;

    QString m_supplemental_display_name;
    bool m_supplemental_display_name_isSet;
    bool m_supplemental_display_name_isValid;

    qint32 m_unpaired_game_versions;
    bool m_unpaired_game_versions_isSet;
    bool m_unpaired_game_versions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Responses_DestinyProfileUserInfoCard)

#endif // OAIDestiny_Responses_DestinyProfileUserInfoCard_H
