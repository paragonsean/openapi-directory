/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent.h
 *
 * Sockets may refer to a \&quot;Plug Set\&quot;: a set of reusable plugs that may be shared across multiple sockets (or even, in theory, multiple sockets over multiple items).  This is the set of those plugs that we came across in the users&#39; inventory, along with the values for plugs in the set. Any given set in this component may be represented in Character and Profile-level, as some plugs may be Profile-level restricted, and some character-level restricted. (note that the ones that are even more specific will remain on the actual socket component itself, as they cannot be reused)
 */

#ifndef OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent_H
#define OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent_H

#include <QJsonObject>

#include "OAIDestiny_Sockets_DestinyItemPlug.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Sockets_DestinyItemPlug;

class OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent : public OAIObject {
public:
    OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent();
    OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent(QString json);
    ~OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QList<OAIDestiny_Sockets_DestinyItemPlug>> getPlugs() const;
    void setPlugs(const QMap<QString, QList<OAIDestiny_Sockets_DestinyItemPlug>> &plugs);
    bool is_plugs_Set() const;
    bool is_plugs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QList<OAIDestiny_Sockets_DestinyItemPlug>> m_plugs;
    bool m_plugs_isSet;
    bool m_plugs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent)

#endif // OAIDestiny_Components_PlugSets_DestinyPlugSetsComponent_H
