/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Artifacts_DestinyArtifactProfileScoped.h
 *
 * Represents a Seasonal Artifact and all data related to it for the requested Account.  It can be combined with Character-scoped data for a full picture of what a character has available/has chosen, or just these settings can be used for overview information.
 */

#ifndef OAIDestiny_Artifacts_DestinyArtifactProfileScoped_H
#define OAIDestiny_Artifacts_DestinyArtifactProfileScoped_H

#include <QJsonObject>

#include "OAIDestiny_DestinyProgression.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_DestinyProgression;

class OAIDestiny_Artifacts_DestinyArtifactProfileScoped : public OAIObject {
public:
    OAIDestiny_Artifacts_DestinyArtifactProfileScoped();
    OAIDestiny_Artifacts_DestinyArtifactProfileScoped(QString json);
    ~OAIDestiny_Artifacts_DestinyArtifactProfileScoped() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getArtifactHash() const;
    void setArtifactHash(const qint32 &artifact_hash);
    bool is_artifact_hash_Set() const;
    bool is_artifact_hash_Valid() const;

    OAIDestiny_DestinyProgression getPointProgression() const;
    void setPointProgression(const OAIDestiny_DestinyProgression &point_progression);
    bool is_point_progression_Set() const;
    bool is_point_progression_Valid() const;

    qint32 getPointsAcquired() const;
    void setPointsAcquired(const qint32 &points_acquired);
    bool is_points_acquired_Set() const;
    bool is_points_acquired_Valid() const;

    qint32 getPowerBonus() const;
    void setPowerBonus(const qint32 &power_bonus);
    bool is_power_bonus_Set() const;
    bool is_power_bonus_Valid() const;

    OAIDestiny_DestinyProgression getPowerBonusProgression() const;
    void setPowerBonusProgression(const OAIDestiny_DestinyProgression &power_bonus_progression);
    bool is_power_bonus_progression_Set() const;
    bool is_power_bonus_progression_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_artifact_hash;
    bool m_artifact_hash_isSet;
    bool m_artifact_hash_isValid;

    OAIDestiny_DestinyProgression m_point_progression;
    bool m_point_progression_isSet;
    bool m_point_progression_isValid;

    qint32 m_points_acquired;
    bool m_points_acquired_isSet;
    bool m_points_acquired_isValid;

    qint32 m_power_bonus;
    bool m_power_bonus_isSet;
    bool m_power_bonus_isValid;

    OAIDestiny_DestinyProgression m_power_bonus_progression;
    bool m_power_bonus_progression_isSet;
    bool m_power_bonus_progression_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Artifacts_DestinyArtifactProfileScoped)

#endif // OAIDestiny_Artifacts_DestinyArtifactProfileScoped_H
