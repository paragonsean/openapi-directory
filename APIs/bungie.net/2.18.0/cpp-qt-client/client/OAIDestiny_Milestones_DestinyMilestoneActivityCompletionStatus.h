/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus.h
 *
 * Represents this player&#39;s personal completion status for the Activity under a Milestone, if the activity has trackable completion and progress information. (most activities won&#39;t, or the concept won&#39;t apply. For instance, it makes sense to talk about a tier of a raid as being Completed or having progress, but it doesn&#39;t make sense to talk about a Crucible Playlist in those terms.
 */

#ifndef OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus_H
#define OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus_H

#include <QJsonObject>

#include "OAIDestiny_Milestones_DestinyMilestoneActivityPhase.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Milestones_DestinyMilestoneActivityPhase;

class OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus : public OAIObject {
public:
    OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus();
    OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus(QString json);
    ~OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCompleted() const;
    void setCompleted(const bool &completed);
    bool is_completed_Set() const;
    bool is_completed_Valid() const;

    QList<OAIDestiny_Milestones_DestinyMilestoneActivityPhase> getPhases() const;
    void setPhases(const QList<OAIDestiny_Milestones_DestinyMilestoneActivityPhase> &phases);
    bool is_phases_Set() const;
    bool is_phases_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_completed;
    bool m_completed_isSet;
    bool m_completed_isValid;

    QList<OAIDestiny_Milestones_DestinyMilestoneActivityPhase> m_phases;
    bool m_phases_isSet;
    bool m_phases_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus)

#endif // OAIDestiny_Milestones_DestinyMilestoneActivityCompletionStatus_H
