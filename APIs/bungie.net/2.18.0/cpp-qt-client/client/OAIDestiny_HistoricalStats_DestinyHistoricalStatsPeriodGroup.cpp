/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup() {
    this->initializeModel();
}

OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::~OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup() {}

void OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::initializeModel() {

    m_activity_details_isSet = false;
    m_activity_details_isValid = false;

    m_period_isSet = false;
    m_period_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::fromJsonObject(QJsonObject json) {

    m_activity_details_isValid = ::OpenAPI::fromJsonValue(m_activity_details, json[QString("activityDetails")]);
    m_activity_details_isSet = !json[QString("activityDetails")].isNull() && m_activity_details_isValid;

    m_period_isValid = ::OpenAPI::fromJsonValue(m_period, json[QString("period")]);
    m_period_isSet = !json[QString("period")].isNull() && m_period_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_details.isSet()) {
        obj.insert(QString("activityDetails"), ::OpenAPI::toJsonValue(m_activity_details));
    }
    if (m_period_isSet) {
        obj.insert(QString("period"), ::OpenAPI::toJsonValue(m_period));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

OAIDestiny_HistoricalStats_DestinyHistoricalStatsActivity OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::getActivityDetails() const {
    return m_activity_details;
}
void OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::setActivityDetails(const OAIDestiny_HistoricalStats_DestinyHistoricalStatsActivity &activity_details) {
    m_activity_details = activity_details;
    m_activity_details_isSet = true;
}

bool OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::is_activity_details_Set() const{
    return m_activity_details_isSet;
}

bool OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::is_activity_details_Valid() const{
    return m_activity_details_isValid;
}

QDateTime OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::getPeriod() const {
    return m_period;
}
void OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::setPeriod(const QDateTime &period) {
    m_period = period;
    m_period_isSet = true;
}

bool OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::is_period_Set() const{
    return m_period_isSet;
}

bool OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::is_period_Valid() const{
    return m_period_isValid;
}

QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::getValues() const {
    return m_values;
}
void OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::setValues(const QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::is_values_Set() const{
    return m_values_isSet;
}

bool OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
