/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse() {
    this->initializeModel();
}

OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::~OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse() {}

void OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::initializeModel() {

    m_collectible_item_components_isSet = false;
    m_collectible_item_components_isValid = false;

    m_collectibles_isSet = false;
    m_collectibles_isValid = false;
}

void OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::fromJsonObject(QJsonObject json) {

    m_collectible_item_components_isValid = ::OpenAPI::fromJsonValue(m_collectible_item_components, json[QString("collectibleItemComponents")]);
    m_collectible_item_components_isSet = !json[QString("collectibleItemComponents")].isNull() && m_collectible_item_components_isValid;

    m_collectibles_isValid = ::OpenAPI::fromJsonValue(m_collectibles, json[QString("collectibles")]);
    m_collectibles_isSet = !json[QString("collectibles")].isNull() && m_collectibles_isValid;
}

QString OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_collectible_item_components.isSet()) {
        obj.insert(QString("collectibleItemComponents"), ::OpenAPI::toJsonValue(m_collectible_item_components));
    }
    if (m_collectibles.isSet()) {
        obj.insert(QString("collectibles"), ::OpenAPI::toJsonValue(m_collectibles));
    }
    return obj;
}

OAIDestinyItemComponentSetOfuint32 OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::getCollectibleItemComponents() const {
    return m_collectible_item_components;
}
void OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::setCollectibleItemComponents(const OAIDestinyItemComponentSetOfuint32 &collectible_item_components) {
    m_collectible_item_components = collectible_item_components;
    m_collectible_item_components_isSet = true;
}

bool OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::is_collectible_item_components_Set() const{
    return m_collectible_item_components_isSet;
}

bool OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::is_collectible_item_components_Valid() const{
    return m_collectible_item_components_isValid;
}

OAISingleComponentResponseOfDestinyCollectiblesComponent OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::getCollectibles() const {
    return m_collectibles;
}
void OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::setCollectibles(const OAISingleComponentResponseOfDestinyCollectiblesComponent &collectibles) {
    m_collectibles = collectibles;
    m_collectibles_isSet = true;
}

bool OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::is_collectibles_Set() const{
    return m_collectibles_isSet;
}

bool OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::is_collectibles_Valid() const{
    return m_collectibles_isValid;
}

bool OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collectible_item_components.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_collectibles.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Responses_DestinyCollectibleNodeDetailResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
