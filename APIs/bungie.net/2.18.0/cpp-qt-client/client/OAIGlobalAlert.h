/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGlobalAlert.h
 *
 * 
 */

#ifndef OAIGlobalAlert_H
#define OAIGlobalAlert_H

#include <QJsonObject>

#include "OAIStreamInfo.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStreamInfo;

class OAIGlobalAlert : public OAIObject {
public:
    OAIGlobalAlert();
    OAIGlobalAlert(QString json);
    ~OAIGlobalAlert() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlertHtml() const;
    void setAlertHtml(const QString &alert_html);
    bool is_alert_html_Set() const;
    bool is_alert_html_Valid() const;

    QString getAlertKey() const;
    void setAlertKey(const QString &alert_key);
    bool is_alert_key_Set() const;
    bool is_alert_key_Valid() const;

    qint32 getAlertLevel() const;
    void setAlertLevel(const qint32 &alert_level);
    bool is_alert_level_Set() const;
    bool is_alert_level_Valid() const;

    QString getAlertLink() const;
    void setAlertLink(const QString &alert_link);
    bool is_alert_link_Set() const;
    bool is_alert_link_Valid() const;

    QDateTime getAlertTimestamp() const;
    void setAlertTimestamp(const QDateTime &alert_timestamp);
    bool is_alert_timestamp_Set() const;
    bool is_alert_timestamp_Valid() const;

    qint32 getAlertType() const;
    void setAlertType(const qint32 &alert_type);
    bool is_alert_type_Set() const;
    bool is_alert_type_Valid() const;

    OAIStreamInfo getStreamInfo() const;
    void setStreamInfo(const OAIStreamInfo &stream_info);
    bool is_stream_info_Set() const;
    bool is_stream_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alert_html;
    bool m_alert_html_isSet;
    bool m_alert_html_isValid;

    QString m_alert_key;
    bool m_alert_key_isSet;
    bool m_alert_key_isValid;

    qint32 m_alert_level;
    bool m_alert_level_isSet;
    bool m_alert_level_isValid;

    QString m_alert_link;
    bool m_alert_link_isSet;
    bool m_alert_link_isValid;

    QDateTime m_alert_timestamp;
    bool m_alert_timestamp_isSet;
    bool m_alert_timestamp_isValid;

    qint32 m_alert_type;
    bool m_alert_type_isSet;
    bool m_alert_type_isValid;

    OAIStreamInfo m_stream_info;
    bool m_stream_info_isSet;
    bool m_stream_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGlobalAlert)

#endif // OAIGlobalAlert_H
