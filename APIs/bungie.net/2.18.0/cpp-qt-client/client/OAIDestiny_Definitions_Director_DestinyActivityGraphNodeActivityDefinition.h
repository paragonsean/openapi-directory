/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition.h
 *
 * The actual activity to be redirected to when you click on the node. Note that a node can have many Activities attached to it: but only one will be active at any given time. The list of Node Activities will be traversed, and the first one found to be active will be displayed. This way, a node can layer multiple variants of an activity on top of each other. For instance, one node can control the weekly Crucible Playlist. There are multiple possible playlists, but only one is active for the week.
 */

#ifndef OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition_H
#define OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition();
    OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition(QString json);
    ~OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActivityHash() const;
    void setActivityHash(const qint32 &activity_hash);
    bool is_activity_hash_Set() const;
    bool is_activity_hash_Valid() const;

    qint32 getNodeActivityId() const;
    void setNodeActivityId(const qint32 &node_activity_id);
    bool is_node_activity_id_Set() const;
    bool is_node_activity_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_activity_hash;
    bool m_activity_hash_isSet;
    bool m_activity_hash_isValid;

    qint32 m_node_activity_id;
    bool m_node_activity_id_isSet;
    bool m_node_activity_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition)

#endif // OAIDestiny_Definitions_Director_DestinyActivityGraphNodeActivityDefinition_H
