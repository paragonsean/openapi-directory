/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition.h
 *
 * 
 */

#ifndef OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition_H
#define OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition();
    OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition(QString json);
    ~OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    QString getForegroundImagePath() const;
    void setForegroundImagePath(const QString &foreground_image_path);
    bool is_foreground_image_path_Set() const;
    bool is_foreground_image_path_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QString getOverlayImagePath() const;
    void setOverlayImagePath(const QString &overlay_image_path);
    bool is_overlay_image_path_Set() const;
    bool is_overlay_image_path_Valid() const;

    QString getOverlayMaskImagePath() const;
    void setOverlayMaskImagePath(const QString &overlay_mask_image_path);
    bool is_overlay_mask_image_path_Set() const;
    bool is_overlay_mask_image_path_Valid() const;

    qint32 getPresentationNodeHash() const;
    void setPresentationNodeHash(const qint32 &presentation_node_hash);
    bool is_presentation_node_hash_Set() const;
    bool is_presentation_node_hash_Valid() const;

    qint32 getRankNumber() const;
    void setRankNumber(const qint32 &rank_number);
    bool is_rank_number_Set() const;
    bool is_rank_number_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    QString m_foreground_image_path;
    bool m_foreground_image_path_isSet;
    bool m_foreground_image_path_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QString m_overlay_image_path;
    bool m_overlay_image_path_isSet;
    bool m_overlay_image_path_isValid;

    QString m_overlay_mask_image_path;
    bool m_overlay_mask_image_path_isSet;
    bool m_overlay_mask_image_path_isValid;

    qint32 m_presentation_node_hash;
    bool m_presentation_node_hash_isSet;
    bool m_presentation_node_hash_isValid;

    qint32 m_rank_number;
    bool m_rank_number_isSet;
    bool m_rank_number_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition)

#endif // OAIDestiny_Definitions_GuardianRanks_DestinyGuardianRankDefinition_H
