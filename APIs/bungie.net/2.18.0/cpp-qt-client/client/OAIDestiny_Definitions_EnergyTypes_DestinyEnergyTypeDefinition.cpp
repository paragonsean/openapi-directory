/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::~OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition() {}

void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::initializeModel() {

    m_capacity_stat_hash_isSet = false;
    m_capacity_stat_hash_isValid = false;

    m_cost_stat_hash_isSet = false;
    m_cost_stat_hash_isValid = false;

    m_display_properties_isSet = false;
    m_display_properties_isValid = false;

    m_enum_value_isSet = false;
    m_enum_value_isValid = false;

    m_hash_isSet = false;
    m_hash_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_redacted_isSet = false;
    m_redacted_isValid = false;

    m_show_icon_isSet = false;
    m_show_icon_isValid = false;

    m_transparent_icon_path_isSet = false;
    m_transparent_icon_path_isValid = false;
}

void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::fromJsonObject(QJsonObject json) {

    m_capacity_stat_hash_isValid = ::OpenAPI::fromJsonValue(m_capacity_stat_hash, json[QString("capacityStatHash")]);
    m_capacity_stat_hash_isSet = !json[QString("capacityStatHash")].isNull() && m_capacity_stat_hash_isValid;

    m_cost_stat_hash_isValid = ::OpenAPI::fromJsonValue(m_cost_stat_hash, json[QString("costStatHash")]);
    m_cost_stat_hash_isSet = !json[QString("costStatHash")].isNull() && m_cost_stat_hash_isValid;

    m_display_properties_isValid = ::OpenAPI::fromJsonValue(m_display_properties, json[QString("displayProperties")]);
    m_display_properties_isSet = !json[QString("displayProperties")].isNull() && m_display_properties_isValid;

    m_enum_value_isValid = ::OpenAPI::fromJsonValue(m_enum_value, json[QString("enumValue")]);
    m_enum_value_isSet = !json[QString("enumValue")].isNull() && m_enum_value_isValid;

    m_hash_isValid = ::OpenAPI::fromJsonValue(m_hash, json[QString("hash")]);
    m_hash_isSet = !json[QString("hash")].isNull() && m_hash_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_redacted_isValid = ::OpenAPI::fromJsonValue(m_redacted, json[QString("redacted")]);
    m_redacted_isSet = !json[QString("redacted")].isNull() && m_redacted_isValid;

    m_show_icon_isValid = ::OpenAPI::fromJsonValue(m_show_icon, json[QString("showIcon")]);
    m_show_icon_isSet = !json[QString("showIcon")].isNull() && m_show_icon_isValid;

    m_transparent_icon_path_isValid = ::OpenAPI::fromJsonValue(m_transparent_icon_path, json[QString("transparentIconPath")]);
    m_transparent_icon_path_isSet = !json[QString("transparentIconPath")].isNull() && m_transparent_icon_path_isValid;
}

QString OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_capacity_stat_hash_isSet) {
        obj.insert(QString("capacityStatHash"), ::OpenAPI::toJsonValue(m_capacity_stat_hash));
    }
    if (m_cost_stat_hash_isSet) {
        obj.insert(QString("costStatHash"), ::OpenAPI::toJsonValue(m_cost_stat_hash));
    }
    if (m_display_properties.isSet()) {
        obj.insert(QString("displayProperties"), ::OpenAPI::toJsonValue(m_display_properties));
    }
    if (m_enum_value_isSet) {
        obj.insert(QString("enumValue"), ::OpenAPI::toJsonValue(m_enum_value));
    }
    if (m_hash_isSet) {
        obj.insert(QString("hash"), ::OpenAPI::toJsonValue(m_hash));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_redacted_isSet) {
        obj.insert(QString("redacted"), ::OpenAPI::toJsonValue(m_redacted));
    }
    if (m_show_icon_isSet) {
        obj.insert(QString("showIcon"), ::OpenAPI::toJsonValue(m_show_icon));
    }
    if (m_transparent_icon_path_isSet) {
        obj.insert(QString("transparentIconPath"), ::OpenAPI::toJsonValue(m_transparent_icon_path));
    }
    return obj;
}

qint32 OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::getCapacityStatHash() const {
    return m_capacity_stat_hash;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setCapacityStatHash(const qint32 &capacity_stat_hash) {
    m_capacity_stat_hash = capacity_stat_hash;
    m_capacity_stat_hash_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_capacity_stat_hash_Set() const{
    return m_capacity_stat_hash_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_capacity_stat_hash_Valid() const{
    return m_capacity_stat_hash_isValid;
}

qint32 OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::getCostStatHash() const {
    return m_cost_stat_hash;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setCostStatHash(const qint32 &cost_stat_hash) {
    m_cost_stat_hash = cost_stat_hash;
    m_cost_stat_hash_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_cost_stat_hash_Set() const{
    return m_cost_stat_hash_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_cost_stat_hash_Valid() const{
    return m_cost_stat_hash_isValid;
}

OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::getDisplayProperties() const {
    return m_display_properties;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties) {
    m_display_properties = display_properties;
    m_display_properties_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_display_properties_Set() const{
    return m_display_properties_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_display_properties_Valid() const{
    return m_display_properties_isValid;
}

qint32 OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::getEnumValue() const {
    return m_enum_value;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setEnumValue(const qint32 &enum_value) {
    m_enum_value = enum_value;
    m_enum_value_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_enum_value_Set() const{
    return m_enum_value_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_enum_value_Valid() const{
    return m_enum_value_isValid;
}

qint32 OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::getHash() const {
    return m_hash;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setHash(const qint32 &hash) {
    m_hash = hash;
    m_hash_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_hash_Set() const{
    return m_hash_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_hash_Valid() const{
    return m_hash_isValid;
}

qint32 OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::getIndex() const {
    return m_index;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setIndex(const qint32 &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_index_Set() const{
    return m_index_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_index_Valid() const{
    return m_index_isValid;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::isRedacted() const {
    return m_redacted;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setRedacted(const bool &redacted) {
    m_redacted = redacted;
    m_redacted_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_redacted_Set() const{
    return m_redacted_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_redacted_Valid() const{
    return m_redacted_isValid;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::isShowIcon() const {
    return m_show_icon;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setShowIcon(const bool &show_icon) {
    m_show_icon = show_icon;
    m_show_icon_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_show_icon_Set() const{
    return m_show_icon_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_show_icon_Valid() const{
    return m_show_icon_isValid;
}

QString OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::getTransparentIconPath() const {
    return m_transparent_icon_path;
}
void OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::setTransparentIconPath(const QString &transparent_icon_path) {
    m_transparent_icon_path = transparent_icon_path;
    m_transparent_icon_path_isSet = true;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_transparent_icon_path_Set() const{
    return m_transparent_icon_path_isSet;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::is_transparent_icon_path_Valid() const{
    return m_transparent_icon_path_isValid;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capacity_stat_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_stat_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enum_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redacted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_icon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transparent_icon_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
