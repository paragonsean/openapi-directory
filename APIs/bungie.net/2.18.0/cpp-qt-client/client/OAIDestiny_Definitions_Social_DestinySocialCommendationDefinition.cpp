/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::~OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition() {}

void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::initializeModel() {

    m_activity_giving_limit_isSet = false;
    m_activity_giving_limit_isValid = false;

    m_card_image_path_isSet = false;
    m_card_image_path_isValid = false;

    m_color_isSet = false;
    m_color_isValid = false;

    m_display_activities_isSet = false;
    m_display_activities_isValid = false;

    m_display_priority_isSet = false;
    m_display_priority_isValid = false;

    m_display_properties_isSet = false;
    m_display_properties_isValid = false;

    m_hash_isSet = false;
    m_hash_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_parent_commendation_node_hash_isSet = false;
    m_parent_commendation_node_hash_isValid = false;

    m_redacted_isSet = false;
    m_redacted_isValid = false;
}

void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::fromJsonObject(QJsonObject json) {

    m_activity_giving_limit_isValid = ::OpenAPI::fromJsonValue(m_activity_giving_limit, json[QString("activityGivingLimit")]);
    m_activity_giving_limit_isSet = !json[QString("activityGivingLimit")].isNull() && m_activity_giving_limit_isValid;

    m_card_image_path_isValid = ::OpenAPI::fromJsonValue(m_card_image_path, json[QString("cardImagePath")]);
    m_card_image_path_isSet = !json[QString("cardImagePath")].isNull() && m_card_image_path_isValid;

    m_color_isValid = ::OpenAPI::fromJsonValue(m_color, json[QString("color")]);
    m_color_isSet = !json[QString("color")].isNull() && m_color_isValid;

    m_display_activities_isValid = ::OpenAPI::fromJsonValue(m_display_activities, json[QString("displayActivities")]);
    m_display_activities_isSet = !json[QString("displayActivities")].isNull() && m_display_activities_isValid;

    m_display_priority_isValid = ::OpenAPI::fromJsonValue(m_display_priority, json[QString("displayPriority")]);
    m_display_priority_isSet = !json[QString("displayPriority")].isNull() && m_display_priority_isValid;

    m_display_properties_isValid = ::OpenAPI::fromJsonValue(m_display_properties, json[QString("displayProperties")]);
    m_display_properties_isSet = !json[QString("displayProperties")].isNull() && m_display_properties_isValid;

    m_hash_isValid = ::OpenAPI::fromJsonValue(m_hash, json[QString("hash")]);
    m_hash_isSet = !json[QString("hash")].isNull() && m_hash_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_parent_commendation_node_hash_isValid = ::OpenAPI::fromJsonValue(m_parent_commendation_node_hash, json[QString("parentCommendationNodeHash")]);
    m_parent_commendation_node_hash_isSet = !json[QString("parentCommendationNodeHash")].isNull() && m_parent_commendation_node_hash_isValid;

    m_redacted_isValid = ::OpenAPI::fromJsonValue(m_redacted, json[QString("redacted")]);
    m_redacted_isSet = !json[QString("redacted")].isNull() && m_redacted_isValid;
}

QString OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_giving_limit_isSet) {
        obj.insert(QString("activityGivingLimit"), ::OpenAPI::toJsonValue(m_activity_giving_limit));
    }
    if (m_card_image_path_isSet) {
        obj.insert(QString("cardImagePath"), ::OpenAPI::toJsonValue(m_card_image_path));
    }
    if (m_color.isSet()) {
        obj.insert(QString("color"), ::OpenAPI::toJsonValue(m_color));
    }
    if (m_display_activities.size() > 0) {
        obj.insert(QString("displayActivities"), ::OpenAPI::toJsonValue(m_display_activities));
    }
    if (m_display_priority_isSet) {
        obj.insert(QString("displayPriority"), ::OpenAPI::toJsonValue(m_display_priority));
    }
    if (m_display_properties.isSet()) {
        obj.insert(QString("displayProperties"), ::OpenAPI::toJsonValue(m_display_properties));
    }
    if (m_hash_isSet) {
        obj.insert(QString("hash"), ::OpenAPI::toJsonValue(m_hash));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_parent_commendation_node_hash_isSet) {
        obj.insert(QString("parentCommendationNodeHash"), ::OpenAPI::toJsonValue(m_parent_commendation_node_hash));
    }
    if (m_redacted_isSet) {
        obj.insert(QString("redacted"), ::OpenAPI::toJsonValue(m_redacted));
    }
    return obj;
}

qint32 OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getActivityGivingLimit() const {
    return m_activity_giving_limit;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setActivityGivingLimit(const qint32 &activity_giving_limit) {
    m_activity_giving_limit = activity_giving_limit;
    m_activity_giving_limit_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_activity_giving_limit_Set() const{
    return m_activity_giving_limit_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_activity_giving_limit_Valid() const{
    return m_activity_giving_limit_isValid;
}

QString OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getCardImagePath() const {
    return m_card_image_path;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setCardImagePath(const QString &card_image_path) {
    m_card_image_path = card_image_path;
    m_card_image_path_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_card_image_path_Set() const{
    return m_card_image_path_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_card_image_path_Valid() const{
    return m_card_image_path_isValid;
}

OAIDestiny_Misc_DestinyColor OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getColor() const {
    return m_color;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setColor(const OAIDestiny_Misc_DestinyColor &color) {
    m_color = color;
    m_color_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_color_Set() const{
    return m_color_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_color_Valid() const{
    return m_color_isValid;
}

QList<OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition> OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getDisplayActivities() const {
    return m_display_activities;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setDisplayActivities(const QList<OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition> &display_activities) {
    m_display_activities = display_activities;
    m_display_activities_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_display_activities_Set() const{
    return m_display_activities_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_display_activities_Valid() const{
    return m_display_activities_isValid;
}

qint32 OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getDisplayPriority() const {
    return m_display_priority;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setDisplayPriority(const qint32 &display_priority) {
    m_display_priority = display_priority;
    m_display_priority_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_display_priority_Set() const{
    return m_display_priority_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_display_priority_Valid() const{
    return m_display_priority_isValid;
}

OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getDisplayProperties() const {
    return m_display_properties;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties) {
    m_display_properties = display_properties;
    m_display_properties_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_display_properties_Set() const{
    return m_display_properties_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_display_properties_Valid() const{
    return m_display_properties_isValid;
}

qint32 OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getHash() const {
    return m_hash;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setHash(const qint32 &hash) {
    m_hash = hash;
    m_hash_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_hash_Set() const{
    return m_hash_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_hash_Valid() const{
    return m_hash_isValid;
}

qint32 OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getIndex() const {
    return m_index;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setIndex(const qint32 &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_index_Set() const{
    return m_index_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_index_Valid() const{
    return m_index_isValid;
}

qint32 OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::getParentCommendationNodeHash() const {
    return m_parent_commendation_node_hash;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setParentCommendationNodeHash(const qint32 &parent_commendation_node_hash) {
    m_parent_commendation_node_hash = parent_commendation_node_hash;
    m_parent_commendation_node_hash_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_parent_commendation_node_hash_Set() const{
    return m_parent_commendation_node_hash_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_parent_commendation_node_hash_Valid() const{
    return m_parent_commendation_node_hash_isValid;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::isRedacted() const {
    return m_redacted;
}
void OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::setRedacted(const bool &redacted) {
    m_redacted = redacted;
    m_redacted_isSet = true;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_redacted_Set() const{
    return m_redacted_isSet;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::is_redacted_Valid() const{
    return m_redacted_isValid;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_giving_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_color.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_activities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_commendation_node_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redacted_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Social_DestinySocialCommendationDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
