/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry.h
 *
 * Represents all of the data related to a single plug to be inserted.  Note that, while you *can* point to a socket that represents infusion, you will receive an error if you attempt to do so. Come on guys, let&#39;s play nice.
 */

#ifndef OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry_H
#define OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry : public OAIObject {
public:
    OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry();
    OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry(QString json);
    ~OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPlugItemHash() const;
    void setPlugItemHash(const qint32 &plug_item_hash);
    bool is_plug_item_hash_Set() const;
    bool is_plug_item_hash_Valid() const;

    qint32 getSocketArrayType() const;
    void setSocketArrayType(const qint32 &socket_array_type);
    bool is_socket_array_type_Set() const;
    bool is_socket_array_type_Valid() const;

    qint32 getSocketIndex() const;
    void setSocketIndex(const qint32 &socket_index);
    bool is_socket_index_Set() const;
    bool is_socket_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_plug_item_hash;
    bool m_plug_item_hash_isSet;
    bool m_plug_item_hash_isValid;

    qint32 m_socket_array_type;
    bool m_socket_array_type_isSet;
    bool m_socket_array_type_isValid;

    qint32 m_socket_index;
    bool m_socket_index_isSet;
    bool m_socket_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry)

#endif // OAIDestiny_Requests_Actions_DestinyInsertPlugsRequestEntry_H
