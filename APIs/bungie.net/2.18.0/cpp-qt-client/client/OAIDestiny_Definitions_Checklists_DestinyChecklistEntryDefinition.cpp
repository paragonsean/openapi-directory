/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::~OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition() {}

void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::initializeModel() {

    m_activity_hash_isSet = false;
    m_activity_hash_isValid = false;

    m_bubble_hash_isSet = false;
    m_bubble_hash_isValid = false;

    m_destination_hash_isSet = false;
    m_destination_hash_isValid = false;

    m_display_properties_isSet = false;
    m_display_properties_isValid = false;

    m_hash_isSet = false;
    m_hash_isValid = false;

    m_item_hash_isSet = false;
    m_item_hash_isValid = false;

    m_location_hash_isSet = false;
    m_location_hash_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;

    m_vendor_hash_isSet = false;
    m_vendor_hash_isValid = false;

    m_vendor_interaction_index_isSet = false;
    m_vendor_interaction_index_isValid = false;
}

void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::fromJsonObject(QJsonObject json) {

    m_activity_hash_isValid = ::OpenAPI::fromJsonValue(m_activity_hash, json[QString("activityHash")]);
    m_activity_hash_isSet = !json[QString("activityHash")].isNull() && m_activity_hash_isValid;

    m_bubble_hash_isValid = ::OpenAPI::fromJsonValue(m_bubble_hash, json[QString("bubbleHash")]);
    m_bubble_hash_isSet = !json[QString("bubbleHash")].isNull() && m_bubble_hash_isValid;

    m_destination_hash_isValid = ::OpenAPI::fromJsonValue(m_destination_hash, json[QString("destinationHash")]);
    m_destination_hash_isSet = !json[QString("destinationHash")].isNull() && m_destination_hash_isValid;

    m_display_properties_isValid = ::OpenAPI::fromJsonValue(m_display_properties, json[QString("displayProperties")]);
    m_display_properties_isSet = !json[QString("displayProperties")].isNull() && m_display_properties_isValid;

    m_hash_isValid = ::OpenAPI::fromJsonValue(m_hash, json[QString("hash")]);
    m_hash_isSet = !json[QString("hash")].isNull() && m_hash_isValid;

    m_item_hash_isValid = ::OpenAPI::fromJsonValue(m_item_hash, json[QString("itemHash")]);
    m_item_hash_isSet = !json[QString("itemHash")].isNull() && m_item_hash_isValid;

    m_location_hash_isValid = ::OpenAPI::fromJsonValue(m_location_hash, json[QString("locationHash")]);
    m_location_hash_isSet = !json[QString("locationHash")].isNull() && m_location_hash_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;

    m_vendor_hash_isValid = ::OpenAPI::fromJsonValue(m_vendor_hash, json[QString("vendorHash")]);
    m_vendor_hash_isSet = !json[QString("vendorHash")].isNull() && m_vendor_hash_isValid;

    m_vendor_interaction_index_isValid = ::OpenAPI::fromJsonValue(m_vendor_interaction_index, json[QString("vendorInteractionIndex")]);
    m_vendor_interaction_index_isSet = !json[QString("vendorInteractionIndex")].isNull() && m_vendor_interaction_index_isValid;
}

QString OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_hash_isSet) {
        obj.insert(QString("activityHash"), ::OpenAPI::toJsonValue(m_activity_hash));
    }
    if (m_bubble_hash_isSet) {
        obj.insert(QString("bubbleHash"), ::OpenAPI::toJsonValue(m_bubble_hash));
    }
    if (m_destination_hash_isSet) {
        obj.insert(QString("destinationHash"), ::OpenAPI::toJsonValue(m_destination_hash));
    }
    if (m_display_properties.isSet()) {
        obj.insert(QString("displayProperties"), ::OpenAPI::toJsonValue(m_display_properties));
    }
    if (m_hash_isSet) {
        obj.insert(QString("hash"), ::OpenAPI::toJsonValue(m_hash));
    }
    if (m_item_hash_isSet) {
        obj.insert(QString("itemHash"), ::OpenAPI::toJsonValue(m_item_hash));
    }
    if (m_location_hash_isSet) {
        obj.insert(QString("locationHash"), ::OpenAPI::toJsonValue(m_location_hash));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    if (m_vendor_hash_isSet) {
        obj.insert(QString("vendorHash"), ::OpenAPI::toJsonValue(m_vendor_hash));
    }
    if (m_vendor_interaction_index_isSet) {
        obj.insert(QString("vendorInteractionIndex"), ::OpenAPI::toJsonValue(m_vendor_interaction_index));
    }
    return obj;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getActivityHash() const {
    return m_activity_hash;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setActivityHash(const qint32 &activity_hash) {
    m_activity_hash = activity_hash;
    m_activity_hash_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_activity_hash_Set() const{
    return m_activity_hash_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_activity_hash_Valid() const{
    return m_activity_hash_isValid;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getBubbleHash() const {
    return m_bubble_hash;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setBubbleHash(const qint32 &bubble_hash) {
    m_bubble_hash = bubble_hash;
    m_bubble_hash_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_bubble_hash_Set() const{
    return m_bubble_hash_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_bubble_hash_Valid() const{
    return m_bubble_hash_isValid;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getDestinationHash() const {
    return m_destination_hash;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setDestinationHash(const qint32 &destination_hash) {
    m_destination_hash = destination_hash;
    m_destination_hash_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_destination_hash_Set() const{
    return m_destination_hash_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_destination_hash_Valid() const{
    return m_destination_hash_isValid;
}

OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getDisplayProperties() const {
    return m_display_properties;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties) {
    m_display_properties = display_properties;
    m_display_properties_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_display_properties_Set() const{
    return m_display_properties_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_display_properties_Valid() const{
    return m_display_properties_isValid;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getHash() const {
    return m_hash;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setHash(const qint32 &hash) {
    m_hash = hash;
    m_hash_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_hash_Set() const{
    return m_hash_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_hash_Valid() const{
    return m_hash_isValid;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getItemHash() const {
    return m_item_hash;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setItemHash(const qint32 &item_hash) {
    m_item_hash = item_hash;
    m_item_hash_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_item_hash_Set() const{
    return m_item_hash_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_item_hash_Valid() const{
    return m_item_hash_isValid;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getLocationHash() const {
    return m_location_hash;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setLocationHash(const qint32 &location_hash) {
    m_location_hash = location_hash;
    m_location_hash_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_location_hash_Set() const{
    return m_location_hash_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_location_hash_Valid() const{
    return m_location_hash_isValid;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getScope() const {
    return m_scope;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setScope(const qint32 &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_scope_Valid() const{
    return m_scope_isValid;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getVendorHash() const {
    return m_vendor_hash;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setVendorHash(const qint32 &vendor_hash) {
    m_vendor_hash = vendor_hash;
    m_vendor_hash_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_vendor_hash_Set() const{
    return m_vendor_hash_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_vendor_hash_Valid() const{
    return m_vendor_hash_isValid;
}

qint32 OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::getVendorInteractionIndex() const {
    return m_vendor_interaction_index;
}
void OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::setVendorInteractionIndex(const qint32 &vendor_interaction_index) {
    m_vendor_interaction_index = vendor_interaction_index;
    m_vendor_interaction_index_isSet = true;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_vendor_interaction_index_Set() const{
    return m_vendor_interaction_index_isSet;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::is_vendor_interaction_index_Valid() const{
    return m_vendor_interaction_index_isValid;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bubble_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_interaction_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
