/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISocial_Friends_BungieFriend.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISocial_Friends_BungieFriend::OAISocial_Friends_BungieFriend(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISocial_Friends_BungieFriend::OAISocial_Friends_BungieFriend() {
    this->initializeModel();
}

OAISocial_Friends_BungieFriend::~OAISocial_Friends_BungieFriend() {}

void OAISocial_Friends_BungieFriend::initializeModel() {

    m_bungie_global_display_name_isSet = false;
    m_bungie_global_display_name_isValid = false;

    m_bungie_global_display_name_code_isSet = false;
    m_bungie_global_display_name_code_isValid = false;

    m_bungie_net_user_isSet = false;
    m_bungie_net_user_isValid = false;

    m_last_seen_as_bungie_membership_type_isSet = false;
    m_last_seen_as_bungie_membership_type_isValid = false;

    m_last_seen_as_membership_id_isSet = false;
    m_last_seen_as_membership_id_isValid = false;

    m_online_status_isSet = false;
    m_online_status_isValid = false;

    m_online_title_isSet = false;
    m_online_title_isValid = false;

    m_relationship_isSet = false;
    m_relationship_isValid = false;
}

void OAISocial_Friends_BungieFriend::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISocial_Friends_BungieFriend::fromJsonObject(QJsonObject json) {

    m_bungie_global_display_name_isValid = ::OpenAPI::fromJsonValue(m_bungie_global_display_name, json[QString("bungieGlobalDisplayName")]);
    m_bungie_global_display_name_isSet = !json[QString("bungieGlobalDisplayName")].isNull() && m_bungie_global_display_name_isValid;

    m_bungie_global_display_name_code_isValid = ::OpenAPI::fromJsonValue(m_bungie_global_display_name_code, json[QString("bungieGlobalDisplayNameCode")]);
    m_bungie_global_display_name_code_isSet = !json[QString("bungieGlobalDisplayNameCode")].isNull() && m_bungie_global_display_name_code_isValid;

    m_bungie_net_user_isValid = ::OpenAPI::fromJsonValue(m_bungie_net_user, json[QString("bungieNetUser")]);
    m_bungie_net_user_isSet = !json[QString("bungieNetUser")].isNull() && m_bungie_net_user_isValid;

    m_last_seen_as_bungie_membership_type_isValid = ::OpenAPI::fromJsonValue(m_last_seen_as_bungie_membership_type, json[QString("lastSeenAsBungieMembershipType")]);
    m_last_seen_as_bungie_membership_type_isSet = !json[QString("lastSeenAsBungieMembershipType")].isNull() && m_last_seen_as_bungie_membership_type_isValid;

    m_last_seen_as_membership_id_isValid = ::OpenAPI::fromJsonValue(m_last_seen_as_membership_id, json[QString("lastSeenAsMembershipId")]);
    m_last_seen_as_membership_id_isSet = !json[QString("lastSeenAsMembershipId")].isNull() && m_last_seen_as_membership_id_isValid;

    m_online_status_isValid = ::OpenAPI::fromJsonValue(m_online_status, json[QString("onlineStatus")]);
    m_online_status_isSet = !json[QString("onlineStatus")].isNull() && m_online_status_isValid;

    m_online_title_isValid = ::OpenAPI::fromJsonValue(m_online_title, json[QString("onlineTitle")]);
    m_online_title_isSet = !json[QString("onlineTitle")].isNull() && m_online_title_isValid;

    m_relationship_isValid = ::OpenAPI::fromJsonValue(m_relationship, json[QString("relationship")]);
    m_relationship_isSet = !json[QString("relationship")].isNull() && m_relationship_isValid;
}

QString OAISocial_Friends_BungieFriend::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISocial_Friends_BungieFriend::asJsonObject() const {
    QJsonObject obj;
    if (m_bungie_global_display_name_isSet) {
        obj.insert(QString("bungieGlobalDisplayName"), ::OpenAPI::toJsonValue(m_bungie_global_display_name));
    }
    if (m_bungie_global_display_name_code_isSet) {
        obj.insert(QString("bungieGlobalDisplayNameCode"), ::OpenAPI::toJsonValue(m_bungie_global_display_name_code));
    }
    if (m_bungie_net_user.isSet()) {
        obj.insert(QString("bungieNetUser"), ::OpenAPI::toJsonValue(m_bungie_net_user));
    }
    if (m_last_seen_as_bungie_membership_type_isSet) {
        obj.insert(QString("lastSeenAsBungieMembershipType"), ::OpenAPI::toJsonValue(m_last_seen_as_bungie_membership_type));
    }
    if (m_last_seen_as_membership_id_isSet) {
        obj.insert(QString("lastSeenAsMembershipId"), ::OpenAPI::toJsonValue(m_last_seen_as_membership_id));
    }
    if (m_online_status_isSet) {
        obj.insert(QString("onlineStatus"), ::OpenAPI::toJsonValue(m_online_status));
    }
    if (m_online_title_isSet) {
        obj.insert(QString("onlineTitle"), ::OpenAPI::toJsonValue(m_online_title));
    }
    if (m_relationship_isSet) {
        obj.insert(QString("relationship"), ::OpenAPI::toJsonValue(m_relationship));
    }
    return obj;
}

QString OAISocial_Friends_BungieFriend::getBungieGlobalDisplayName() const {
    return m_bungie_global_display_name;
}
void OAISocial_Friends_BungieFriend::setBungieGlobalDisplayName(const QString &bungie_global_display_name) {
    m_bungie_global_display_name = bungie_global_display_name;
    m_bungie_global_display_name_isSet = true;
}

bool OAISocial_Friends_BungieFriend::is_bungie_global_display_name_Set() const{
    return m_bungie_global_display_name_isSet;
}

bool OAISocial_Friends_BungieFriend::is_bungie_global_display_name_Valid() const{
    return m_bungie_global_display_name_isValid;
}

qint32 OAISocial_Friends_BungieFriend::getBungieGlobalDisplayNameCode() const {
    return m_bungie_global_display_name_code;
}
void OAISocial_Friends_BungieFriend::setBungieGlobalDisplayNameCode(const qint32 &bungie_global_display_name_code) {
    m_bungie_global_display_name_code = bungie_global_display_name_code;
    m_bungie_global_display_name_code_isSet = true;
}

bool OAISocial_Friends_BungieFriend::is_bungie_global_display_name_code_Set() const{
    return m_bungie_global_display_name_code_isSet;
}

bool OAISocial_Friends_BungieFriend::is_bungie_global_display_name_code_Valid() const{
    return m_bungie_global_display_name_code_isValid;
}

OAIUser_GeneralUser OAISocial_Friends_BungieFriend::getBungieNetUser() const {
    return m_bungie_net_user;
}
void OAISocial_Friends_BungieFriend::setBungieNetUser(const OAIUser_GeneralUser &bungie_net_user) {
    m_bungie_net_user = bungie_net_user;
    m_bungie_net_user_isSet = true;
}

bool OAISocial_Friends_BungieFriend::is_bungie_net_user_Set() const{
    return m_bungie_net_user_isSet;
}

bool OAISocial_Friends_BungieFriend::is_bungie_net_user_Valid() const{
    return m_bungie_net_user_isValid;
}

qint32 OAISocial_Friends_BungieFriend::getLastSeenAsBungieMembershipType() const {
    return m_last_seen_as_bungie_membership_type;
}
void OAISocial_Friends_BungieFriend::setLastSeenAsBungieMembershipType(const qint32 &last_seen_as_bungie_membership_type) {
    m_last_seen_as_bungie_membership_type = last_seen_as_bungie_membership_type;
    m_last_seen_as_bungie_membership_type_isSet = true;
}

bool OAISocial_Friends_BungieFriend::is_last_seen_as_bungie_membership_type_Set() const{
    return m_last_seen_as_bungie_membership_type_isSet;
}

bool OAISocial_Friends_BungieFriend::is_last_seen_as_bungie_membership_type_Valid() const{
    return m_last_seen_as_bungie_membership_type_isValid;
}

qint64 OAISocial_Friends_BungieFriend::getLastSeenAsMembershipId() const {
    return m_last_seen_as_membership_id;
}
void OAISocial_Friends_BungieFriend::setLastSeenAsMembershipId(const qint64 &last_seen_as_membership_id) {
    m_last_seen_as_membership_id = last_seen_as_membership_id;
    m_last_seen_as_membership_id_isSet = true;
}

bool OAISocial_Friends_BungieFriend::is_last_seen_as_membership_id_Set() const{
    return m_last_seen_as_membership_id_isSet;
}

bool OAISocial_Friends_BungieFriend::is_last_seen_as_membership_id_Valid() const{
    return m_last_seen_as_membership_id_isValid;
}

qint32 OAISocial_Friends_BungieFriend::getOnlineStatus() const {
    return m_online_status;
}
void OAISocial_Friends_BungieFriend::setOnlineStatus(const qint32 &online_status) {
    m_online_status = online_status;
    m_online_status_isSet = true;
}

bool OAISocial_Friends_BungieFriend::is_online_status_Set() const{
    return m_online_status_isSet;
}

bool OAISocial_Friends_BungieFriend::is_online_status_Valid() const{
    return m_online_status_isValid;
}

qint32 OAISocial_Friends_BungieFriend::getOnlineTitle() const {
    return m_online_title;
}
void OAISocial_Friends_BungieFriend::setOnlineTitle(const qint32 &online_title) {
    m_online_title = online_title;
    m_online_title_isSet = true;
}

bool OAISocial_Friends_BungieFriend::is_online_title_Set() const{
    return m_online_title_isSet;
}

bool OAISocial_Friends_BungieFriend::is_online_title_Valid() const{
    return m_online_title_isValid;
}

qint32 OAISocial_Friends_BungieFriend::getRelationship() const {
    return m_relationship;
}
void OAISocial_Friends_BungieFriend::setRelationship(const qint32 &relationship) {
    m_relationship = relationship;
    m_relationship_isSet = true;
}

bool OAISocial_Friends_BungieFriend::is_relationship_Set() const{
    return m_relationship_isSet;
}

bool OAISocial_Friends_BungieFriend::is_relationship_Valid() const{
    return m_relationship_isValid;
}

bool OAISocial_Friends_BungieFriend::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bungie_global_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bungie_global_display_name_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bungie_net_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_as_bungie_membership_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_as_membership_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_online_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_online_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relationship_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISocial_Friends_BungieFriend::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
