/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Artifacts_DestinyArtifactTier.h
 *
 * 
 */

#ifndef OAIDestiny_Artifacts_DestinyArtifactTier_H
#define OAIDestiny_Artifacts_DestinyArtifactTier_H

#include <QJsonObject>

#include "OAIDestiny_Artifacts_DestinyArtifactTierItem.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Artifacts_DestinyArtifactTierItem;

class OAIDestiny_Artifacts_DestinyArtifactTier : public OAIObject {
public:
    OAIDestiny_Artifacts_DestinyArtifactTier();
    OAIDestiny_Artifacts_DestinyArtifactTier(QString json);
    ~OAIDestiny_Artifacts_DestinyArtifactTier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsUnlocked() const;
    void setIsUnlocked(const bool &is_unlocked);
    bool is_is_unlocked_Set() const;
    bool is_is_unlocked_Valid() const;

    QList<OAIDestiny_Artifacts_DestinyArtifactTierItem> getItems() const;
    void setItems(const QList<OAIDestiny_Artifacts_DestinyArtifactTierItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    qint32 getPointsToUnlock() const;
    void setPointsToUnlock(const qint32 &points_to_unlock);
    bool is_points_to_unlock_Set() const;
    bool is_points_to_unlock_Valid() const;

    qint32 getTierHash() const;
    void setTierHash(const qint32 &tier_hash);
    bool is_tier_hash_Set() const;
    bool is_tier_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_unlocked;
    bool m_is_unlocked_isSet;
    bool m_is_unlocked_isValid;

    QList<OAIDestiny_Artifacts_DestinyArtifactTierItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    qint32 m_points_to_unlock;
    bool m_points_to_unlock_isSet;
    bool m_points_to_unlock_isValid;

    qint32 m_tier_hash;
    bool m_tier_hash_isSet;
    bool m_tier_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Artifacts_DestinyArtifactTier)

#endif // OAIDestiny_Artifacts_DestinyArtifactTier_H
