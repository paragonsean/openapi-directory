/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition.h
 *
 * The properties of an individual checklist item. Note that almost everything is optional: it is *highly* variable what kind of data we&#39;ll actually be able to return: at times we may have no other relationships to entities at all.  Whatever UI you build, do it with the knowledge that any given entry might not actually be able to be associated with some other Destiny entity.
 */

#ifndef OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition_H
#define OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition();
    OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition(QString json);
    ~OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActivityHash() const;
    void setActivityHash(const qint32 &activity_hash);
    bool is_activity_hash_Set() const;
    bool is_activity_hash_Valid() const;

    qint32 getBubbleHash() const;
    void setBubbleHash(const qint32 &bubble_hash);
    bool is_bubble_hash_Set() const;
    bool is_bubble_hash_Valid() const;

    qint32 getDestinationHash() const;
    void setDestinationHash(const qint32 &destination_hash);
    bool is_destination_hash_Set() const;
    bool is_destination_hash_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getItemHash() const;
    void setItemHash(const qint32 &item_hash);
    bool is_item_hash_Set() const;
    bool is_item_hash_Valid() const;

    qint32 getLocationHash() const;
    void setLocationHash(const qint32 &location_hash);
    bool is_location_hash_Set() const;
    bool is_location_hash_Valid() const;

    qint32 getScope() const;
    void setScope(const qint32 &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    qint32 getVendorHash() const;
    void setVendorHash(const qint32 &vendor_hash);
    bool is_vendor_hash_Set() const;
    bool is_vendor_hash_Valid() const;

    qint32 getVendorInteractionIndex() const;
    void setVendorInteractionIndex(const qint32 &vendor_interaction_index);
    bool is_vendor_interaction_index_Set() const;
    bool is_vendor_interaction_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_activity_hash;
    bool m_activity_hash_isSet;
    bool m_activity_hash_isValid;

    qint32 m_bubble_hash;
    bool m_bubble_hash_isSet;
    bool m_bubble_hash_isValid;

    qint32 m_destination_hash;
    bool m_destination_hash_isSet;
    bool m_destination_hash_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_item_hash;
    bool m_item_hash_isSet;
    bool m_item_hash_isValid;

    qint32 m_location_hash;
    bool m_location_hash_isSet;
    bool m_location_hash_isValid;

    qint32 m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    qint32 m_vendor_hash;
    bool m_vendor_hash_isSet;
    bool m_vendor_hash_isValid;

    qint32 m_vendor_interaction_index;
    bool m_vendor_interaction_index_isSet;
    bool m_vendor_interaction_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition)

#endif // OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition_H
