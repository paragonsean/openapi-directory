/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyDisplayCategoryDefinition.h
 *
 * Display Categories are different from \&quot;categories\&quot; in that these are specifically for visual grouping and display of categories in Vendor UI. The \&quot;categories\&quot; structure is for validation of the contained items, and can be categorized entirely separately from \&quot;Display Categories\&quot;, there need be and often will be no meaningful relationship between the two.
 */

#ifndef OAIDestiny_Definitions_DestinyDisplayCategoryDefinition_H
#define OAIDestiny_Definitions_DestinyDisplayCategoryDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_DestinyDisplayCategoryDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyDisplayCategoryDefinition();
    OAIDestiny_Definitions_DestinyDisplayCategoryDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyDisplayCategoryDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDisplayCategoryHash() const;
    void setDisplayCategoryHash(const qint32 &display_category_hash);
    bool is_display_category_hash_Set() const;
    bool is_display_category_hash_Valid() const;

    bool isDisplayInBanner() const;
    void setDisplayInBanner(const bool &display_in_banner);
    bool is_display_in_banner_Set() const;
    bool is_display_in_banner_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint32 getDisplayStyleHash() const;
    void setDisplayStyleHash(const qint32 &display_style_hash);
    bool is_display_style_hash_Set() const;
    bool is_display_style_hash_Valid() const;

    QString getDisplayStyleIdentifier() const;
    void setDisplayStyleIdentifier(const QString &display_style_identifier);
    bool is_display_style_identifier_Set() const;
    bool is_display_style_identifier_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    qint32 getProgressionHash() const;
    void setProgressionHash(const qint32 &progression_hash);
    bool is_progression_hash_Set() const;
    bool is_progression_hash_Valid() const;

    qint32 getSortOrder() const;
    void setSortOrder(const qint32 &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_display_category_hash;
    bool m_display_category_hash_isSet;
    bool m_display_category_hash_isValid;

    bool m_display_in_banner;
    bool m_display_in_banner_isSet;
    bool m_display_in_banner_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint32 m_display_style_hash;
    bool m_display_style_hash_isSet;
    bool m_display_style_hash_isValid;

    QString m_display_style_identifier;
    bool m_display_style_identifier_isSet;
    bool m_display_style_identifier_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    qint32 m_progression_hash;
    bool m_progression_hash_isSet;
    bool m_progression_hash_isValid;

    qint32 m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyDisplayCategoryDefinition)

#endif // OAIDestiny_Definitions_DestinyDisplayCategoryDefinition_H
