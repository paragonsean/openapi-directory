/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITokens_CollectibleDefinitions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITokens_CollectibleDefinitions::OAITokens_CollectibleDefinitions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITokens_CollectibleDefinitions::OAITokens_CollectibleDefinitions() {
    this->initializeModel();
}

OAITokens_CollectibleDefinitions::~OAITokens_CollectibleDefinitions() {}

void OAITokens_CollectibleDefinitions::initializeModel() {

    m_collectible_definition_isSet = false;
    m_collectible_definition_isValid = false;

    m_destiny_inventory_item_definition_isSet = false;
    m_destiny_inventory_item_definition_isValid = false;
}

void OAITokens_CollectibleDefinitions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITokens_CollectibleDefinitions::fromJsonObject(QJsonObject json) {

    m_collectible_definition_isValid = ::OpenAPI::fromJsonValue(m_collectible_definition, json[QString("CollectibleDefinition")]);
    m_collectible_definition_isSet = !json[QString("CollectibleDefinition")].isNull() && m_collectible_definition_isValid;

    m_destiny_inventory_item_definition_isValid = ::OpenAPI::fromJsonValue(m_destiny_inventory_item_definition, json[QString("DestinyInventoryItemDefinition")]);
    m_destiny_inventory_item_definition_isSet = !json[QString("DestinyInventoryItemDefinition")].isNull() && m_destiny_inventory_item_definition_isValid;
}

QString OAITokens_CollectibleDefinitions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITokens_CollectibleDefinitions::asJsonObject() const {
    QJsonObject obj;
    if (m_collectible_definition.isSet()) {
        obj.insert(QString("CollectibleDefinition"), ::OpenAPI::toJsonValue(m_collectible_definition));
    }
    if (m_destiny_inventory_item_definition.isSet()) {
        obj.insert(QString("DestinyInventoryItemDefinition"), ::OpenAPI::toJsonValue(m_destiny_inventory_item_definition));
    }
    return obj;
}

OAIDestiny_Definitions_Collectibles_DestinyCollectibleDefinition OAITokens_CollectibleDefinitions::getCollectibleDefinition() const {
    return m_collectible_definition;
}
void OAITokens_CollectibleDefinitions::setCollectibleDefinition(const OAIDestiny_Definitions_Collectibles_DestinyCollectibleDefinition &collectible_definition) {
    m_collectible_definition = collectible_definition;
    m_collectible_definition_isSet = true;
}

bool OAITokens_CollectibleDefinitions::is_collectible_definition_Set() const{
    return m_collectible_definition_isSet;
}

bool OAITokens_CollectibleDefinitions::is_collectible_definition_Valid() const{
    return m_collectible_definition_isValid;
}

OAIDestiny_Definitions_DestinyInventoryItemDefinition OAITokens_CollectibleDefinitions::getDestinyInventoryItemDefinition() const {
    return m_destiny_inventory_item_definition;
}
void OAITokens_CollectibleDefinitions::setDestinyInventoryItemDefinition(const OAIDestiny_Definitions_DestinyInventoryItemDefinition &destiny_inventory_item_definition) {
    m_destiny_inventory_item_definition = destiny_inventory_item_definition;
    m_destiny_inventory_item_definition_isSet = true;
}

bool OAITokens_CollectibleDefinitions::is_destiny_inventory_item_definition_Set() const{
    return m_destiny_inventory_item_definition_isSet;
}

bool OAITokens_CollectibleDefinitions::is_destiny_inventory_item_definition_Valid() const{
    return m_destiny_inventory_item_definition_isValid;
}

bool OAITokens_CollectibleDefinitions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collectible_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_destiny_inventory_item_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITokens_CollectibleDefinitions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
