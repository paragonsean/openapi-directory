/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForum_PollResult.h
 *
 * 
 */

#ifndef OAIForum_PollResult_H
#define OAIForum_PollResult_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIForum_PollResult : public OAIObject {
public:
    OAIForum_PollResult();
    OAIForum_PollResult(QString json);
    ~OAIForum_PollResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAnswerSlot() const;
    void setAnswerSlot(const qint32 &answer_slot);
    bool is_answer_slot_Set() const;
    bool is_answer_slot_Valid() const;

    QString getAnswerText() const;
    void setAnswerText(const QString &answer_text);
    bool is_answer_text_Set() const;
    bool is_answer_text_Valid() const;

    QDateTime getLastVoteDate() const;
    void setLastVoteDate(const QDateTime &last_vote_date);
    bool is_last_vote_date_Set() const;
    bool is_last_vote_date_Valid() const;

    bool isRequestingUserVoted() const;
    void setRequestingUserVoted(const bool &requesting_user_voted);
    bool is_requesting_user_voted_Set() const;
    bool is_requesting_user_voted_Valid() const;

    qint32 getVotes() const;
    void setVotes(const qint32 &votes);
    bool is_votes_Set() const;
    bool is_votes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_answer_slot;
    bool m_answer_slot_isSet;
    bool m_answer_slot_isValid;

    QString m_answer_text;
    bool m_answer_text_isSet;
    bool m_answer_text_isValid;

    QDateTime m_last_vote_date;
    bool m_last_vote_date_isSet;
    bool m_last_vote_date_isValid;

    bool m_requesting_user_voted;
    bool m_requesting_user_voted_isSet;
    bool m_requesting_user_voted_isValid;

    qint32 m_votes;
    bool m_votes_isSet;
    bool m_votes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForum_PollResult)

#endif // OAIForum_PollResult_H
