/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISocial_Friends_BungieFriendRequestListResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISocial_Friends_BungieFriendRequestListResponse::OAISocial_Friends_BungieFriendRequestListResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISocial_Friends_BungieFriendRequestListResponse::OAISocial_Friends_BungieFriendRequestListResponse() {
    this->initializeModel();
}

OAISocial_Friends_BungieFriendRequestListResponse::~OAISocial_Friends_BungieFriendRequestListResponse() {}

void OAISocial_Friends_BungieFriendRequestListResponse::initializeModel() {

    m_incoming_requests_isSet = false;
    m_incoming_requests_isValid = false;

    m_outgoing_requests_isSet = false;
    m_outgoing_requests_isValid = false;
}

void OAISocial_Friends_BungieFriendRequestListResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISocial_Friends_BungieFriendRequestListResponse::fromJsonObject(QJsonObject json) {

    m_incoming_requests_isValid = ::OpenAPI::fromJsonValue(m_incoming_requests, json[QString("incomingRequests")]);
    m_incoming_requests_isSet = !json[QString("incomingRequests")].isNull() && m_incoming_requests_isValid;

    m_outgoing_requests_isValid = ::OpenAPI::fromJsonValue(m_outgoing_requests, json[QString("outgoingRequests")]);
    m_outgoing_requests_isSet = !json[QString("outgoingRequests")].isNull() && m_outgoing_requests_isValid;
}

QString OAISocial_Friends_BungieFriendRequestListResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISocial_Friends_BungieFriendRequestListResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_incoming_requests.size() > 0) {
        obj.insert(QString("incomingRequests"), ::OpenAPI::toJsonValue(m_incoming_requests));
    }
    if (m_outgoing_requests.size() > 0) {
        obj.insert(QString("outgoingRequests"), ::OpenAPI::toJsonValue(m_outgoing_requests));
    }
    return obj;
}

QList<OAISocial_Friends_BungieFriend> OAISocial_Friends_BungieFriendRequestListResponse::getIncomingRequests() const {
    return m_incoming_requests;
}
void OAISocial_Friends_BungieFriendRequestListResponse::setIncomingRequests(const QList<OAISocial_Friends_BungieFriend> &incoming_requests) {
    m_incoming_requests = incoming_requests;
    m_incoming_requests_isSet = true;
}

bool OAISocial_Friends_BungieFriendRequestListResponse::is_incoming_requests_Set() const{
    return m_incoming_requests_isSet;
}

bool OAISocial_Friends_BungieFriendRequestListResponse::is_incoming_requests_Valid() const{
    return m_incoming_requests_isValid;
}

QList<OAISocial_Friends_BungieFriend> OAISocial_Friends_BungieFriendRequestListResponse::getOutgoingRequests() const {
    return m_outgoing_requests;
}
void OAISocial_Friends_BungieFriendRequestListResponse::setOutgoingRequests(const QList<OAISocial_Friends_BungieFriend> &outgoing_requests) {
    m_outgoing_requests = outgoing_requests;
    m_outgoing_requests_isSet = true;
}

bool OAISocial_Friends_BungieFriendRequestListResponse::is_outgoing_requests_Set() const{
    return m_outgoing_requests_isSet;
}

bool OAISocial_Friends_BungieFriendRequestListResponse::is_outgoing_requests_Valid() const{
    return m_outgoing_requests_isValid;
}

bool OAISocial_Friends_BungieFriendRequestListResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_incoming_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_outgoing_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISocial_Friends_BungieFriendRequestListResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
