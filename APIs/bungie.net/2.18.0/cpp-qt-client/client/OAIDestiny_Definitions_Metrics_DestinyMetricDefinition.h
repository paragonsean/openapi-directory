/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Metrics_DestinyMetricDefinition.h
 *
 * 
 */

#ifndef OAIDestiny_Definitions_Metrics_DestinyMetricDefinition_H
#define OAIDestiny_Definitions_Metrics_DestinyMetricDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_Metrics_DestinyMetricDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Metrics_DestinyMetricDefinition();
    OAIDestiny_Definitions_Metrics_DestinyMetricDefinition(QString json);
    ~OAIDestiny_Definitions_Metrics_DestinyMetricDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    bool isLowerValueIsBetter() const;
    void setLowerValueIsBetter(const bool &lower_value_is_better);
    bool is_lower_value_is_better_Set() const;
    bool is_lower_value_is_better_Valid() const;

    QList<qint32> getParentNodeHashes() const;
    void setParentNodeHashes(const QList<qint32> &parent_node_hashes);
    bool is_parent_node_hashes_Set() const;
    bool is_parent_node_hashes_Valid() const;

    qint32 getPresentationNodeType() const;
    void setPresentationNodeType(const qint32 &presentation_node_type);
    bool is_presentation_node_type_Set() const;
    bool is_presentation_node_type_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    qint32 getTrackingObjectiveHash() const;
    void setTrackingObjectiveHash(const qint32 &tracking_objective_hash);
    bool is_tracking_objective_hash_Set() const;
    bool is_tracking_objective_hash_Valid() const;

    QList<qint32> getTraitHashes() const;
    void setTraitHashes(const QList<qint32> &trait_hashes);
    bool is_trait_hashes_Set() const;
    bool is_trait_hashes_Valid() const;

    QList<QString> getTraitIds() const;
    void setTraitIds(const QList<QString> &trait_ids);
    bool is_trait_ids_Set() const;
    bool is_trait_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    bool m_lower_value_is_better;
    bool m_lower_value_is_better_isSet;
    bool m_lower_value_is_better_isValid;

    QList<qint32> m_parent_node_hashes;
    bool m_parent_node_hashes_isSet;
    bool m_parent_node_hashes_isValid;

    qint32 m_presentation_node_type;
    bool m_presentation_node_type_isSet;
    bool m_presentation_node_type_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    qint32 m_tracking_objective_hash;
    bool m_tracking_objective_hash_isSet;
    bool m_tracking_objective_hash_isValid;

    QList<qint32> m_trait_hashes;
    bool m_trait_hashes_isSet;
    bool m_trait_hashes_isValid;

    QList<QString> m_trait_ids;
    bool m_trait_ids_isSet;
    bool m_trait_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Metrics_DestinyMetricDefinition)

#endif // OAIDestiny_Definitions_Metrics_DestinyMetricDefinition_H
