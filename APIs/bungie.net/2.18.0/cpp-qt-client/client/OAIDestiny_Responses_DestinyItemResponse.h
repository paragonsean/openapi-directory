/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Responses_DestinyItemResponse.h
 *
 * The response object for retrieving an individual instanced item. None of these components are relevant for an item that doesn&#39;t have an \&quot;itemInstanceId\&quot;: for those, get your information from the DestinyInventoryDefinition.
 */

#ifndef OAIDestiny_Responses_DestinyItemResponse_H
#define OAIDestiny_Responses_DestinyItemResponse_H

#include <QJsonObject>

#include "OAISingleComponentResponseOfDestinyItemComponent.h"
#include "OAISingleComponentResponseOfDestinyItemInstanceComponent.h"
#include "OAISingleComponentResponseOfDestinyItemObjectivesComponent.h"
#include "OAISingleComponentResponseOfDestinyItemPerksComponent.h"
#include "OAISingleComponentResponseOfDestinyItemPlugObjectivesComponent.h"
#include "OAISingleComponentResponseOfDestinyItemRenderComponent.h"
#include "OAISingleComponentResponseOfDestinyItemReusablePlugsComponent.h"
#include "OAISingleComponentResponseOfDestinyItemSocketsComponent.h"
#include "OAISingleComponentResponseOfDestinyItemStatsComponent.h"
#include "OAISingleComponentResponseOfDestinyItemTalentGridComponent.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISingleComponentResponseOfDestinyItemInstanceComponent;
class OAISingleComponentResponseOfDestinyItemComponent;
class OAISingleComponentResponseOfDestinyItemObjectivesComponent;
class OAISingleComponentResponseOfDestinyItemPerksComponent;
class OAISingleComponentResponseOfDestinyItemPlugObjectivesComponent;
class OAISingleComponentResponseOfDestinyItemRenderComponent;
class OAISingleComponentResponseOfDestinyItemReusablePlugsComponent;
class OAISingleComponentResponseOfDestinyItemSocketsComponent;
class OAISingleComponentResponseOfDestinyItemStatsComponent;
class OAISingleComponentResponseOfDestinyItemTalentGridComponent;

class OAIDestiny_Responses_DestinyItemResponse : public OAIObject {
public:
    OAIDestiny_Responses_DestinyItemResponse();
    OAIDestiny_Responses_DestinyItemResponse(QString json);
    ~OAIDestiny_Responses_DestinyItemResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCharacterId() const;
    void setCharacterId(const qint64 &character_id);
    bool is_character_id_Set() const;
    bool is_character_id_Valid() const;

    OAISingleComponentResponseOfDestinyItemInstanceComponent getInstance() const;
    void setInstance(const OAISingleComponentResponseOfDestinyItemInstanceComponent &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    OAISingleComponentResponseOfDestinyItemComponent getItem() const;
    void setItem(const OAISingleComponentResponseOfDestinyItemComponent &item);
    bool is_item_Set() const;
    bool is_item_Valid() const;

    OAISingleComponentResponseOfDestinyItemObjectivesComponent getObjectives() const;
    void setObjectives(const OAISingleComponentResponseOfDestinyItemObjectivesComponent &objectives);
    bool is_objectives_Set() const;
    bool is_objectives_Valid() const;

    OAISingleComponentResponseOfDestinyItemPerksComponent getPerks() const;
    void setPerks(const OAISingleComponentResponseOfDestinyItemPerksComponent &perks);
    bool is_perks_Set() const;
    bool is_perks_Valid() const;

    OAISingleComponentResponseOfDestinyItemPlugObjectivesComponent getPlugObjectives() const;
    void setPlugObjectives(const OAISingleComponentResponseOfDestinyItemPlugObjectivesComponent &plug_objectives);
    bool is_plug_objectives_Set() const;
    bool is_plug_objectives_Valid() const;

    OAISingleComponentResponseOfDestinyItemRenderComponent getRenderData() const;
    void setRenderData(const OAISingleComponentResponseOfDestinyItemRenderComponent &render_data);
    bool is_render_data_Set() const;
    bool is_render_data_Valid() const;

    OAISingleComponentResponseOfDestinyItemReusablePlugsComponent getReusablePlugs() const;
    void setReusablePlugs(const OAISingleComponentResponseOfDestinyItemReusablePlugsComponent &reusable_plugs);
    bool is_reusable_plugs_Set() const;
    bool is_reusable_plugs_Valid() const;

    OAISingleComponentResponseOfDestinyItemSocketsComponent getSockets() const;
    void setSockets(const OAISingleComponentResponseOfDestinyItemSocketsComponent &sockets);
    bool is_sockets_Set() const;
    bool is_sockets_Valid() const;

    OAISingleComponentResponseOfDestinyItemStatsComponent getStats() const;
    void setStats(const OAISingleComponentResponseOfDestinyItemStatsComponent &stats);
    bool is_stats_Set() const;
    bool is_stats_Valid() const;

    OAISingleComponentResponseOfDestinyItemTalentGridComponent getTalentGrid() const;
    void setTalentGrid(const OAISingleComponentResponseOfDestinyItemTalentGridComponent &talent_grid);
    bool is_talent_grid_Set() const;
    bool is_talent_grid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_character_id;
    bool m_character_id_isSet;
    bool m_character_id_isValid;

    OAISingleComponentResponseOfDestinyItemInstanceComponent m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    OAISingleComponentResponseOfDestinyItemComponent m_item;
    bool m_item_isSet;
    bool m_item_isValid;

    OAISingleComponentResponseOfDestinyItemObjectivesComponent m_objectives;
    bool m_objectives_isSet;
    bool m_objectives_isValid;

    OAISingleComponentResponseOfDestinyItemPerksComponent m_perks;
    bool m_perks_isSet;
    bool m_perks_isValid;

    OAISingleComponentResponseOfDestinyItemPlugObjectivesComponent m_plug_objectives;
    bool m_plug_objectives_isSet;
    bool m_plug_objectives_isValid;

    OAISingleComponentResponseOfDestinyItemRenderComponent m_render_data;
    bool m_render_data_isSet;
    bool m_render_data_isValid;

    OAISingleComponentResponseOfDestinyItemReusablePlugsComponent m_reusable_plugs;
    bool m_reusable_plugs_isSet;
    bool m_reusable_plugs_isValid;

    OAISingleComponentResponseOfDestinyItemSocketsComponent m_sockets;
    bool m_sockets_isSet;
    bool m_sockets_isValid;

    OAISingleComponentResponseOfDestinyItemStatsComponent m_stats;
    bool m_stats_isSet;
    bool m_stats_isValid;

    OAISingleComponentResponseOfDestinyItemTalentGridComponent m_talent_grid;
    bool m_talent_grid_isSet;
    bool m_talent_grid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Responses_DestinyItemResponse)

#endif // OAIDestiny_Responses_DestinyItemResponse_H
