/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent.h
 *
 * This component returns anything that could be considered \&quot;Progression\&quot; on a user: data where the user is gaining levels, reputation, completions, rewards, etc...
 */

#ifndef OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent_H
#define OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent_H

#include <QJsonObject>

#include "OAIDestiny_Artifacts_DestinyArtifactCharacterScoped.h"
#include "OAIDestiny_DestinyProgression.h"
#include "OAIDestiny_Entities_Items_DestinyItemPerksComponent.h"
#include "OAIDestiny_Milestones_DestinyMilestone.h"
#include "OAIDestiny_Progression_DestinyFactionProgression.h"
#include "OAIDestiny_Quests_DestinyObjectiveProgress.h"
#include "OAIDestiny_Quests_DestinyQuestStatus.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Progression_DestinyFactionProgression;
class OAIDestiny_Milestones_DestinyMilestone;
class OAIDestiny_DestinyProgression;
class OAIDestiny_Quests_DestinyQuestStatus;
class OAIDestiny_Artifacts_DestinyArtifactCharacterScoped;
class OAIDestiny_Quests_DestinyObjectiveProgress;
class OAIDestiny_Entities_Items_DestinyItemPerksComponent;

class OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent : public OAIObject {
public:
    OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent();
    OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent(QString json);
    ~OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QMap<QString, bool>> getChecklists() const;
    void setChecklists(const QMap<QString, QMap<QString, bool>> &checklists);
    bool is_checklists_Set() const;
    bool is_checklists_Valid() const;

    QMap<QString, OAIDestiny_Progression_DestinyFactionProgression> getFactions() const;
    void setFactions(const QMap<QString, OAIDestiny_Progression_DestinyFactionProgression> &factions);
    bool is_factions_Set() const;
    bool is_factions_Valid() const;

    QMap<QString, OAIDestiny_Milestones_DestinyMilestone> getMilestones() const;
    void setMilestones(const QMap<QString, OAIDestiny_Milestones_DestinyMilestone> &milestones);
    bool is_milestones_Set() const;
    bool is_milestones_Valid() const;

    QMap<QString, OAIDestiny_DestinyProgression> getProgressions() const;
    void setProgressions(const QMap<QString, OAIDestiny_DestinyProgression> &progressions);
    bool is_progressions_Set() const;
    bool is_progressions_Valid() const;

    QList<OAIDestiny_Quests_DestinyQuestStatus> getQuests() const;
    void setQuests(const QList<OAIDestiny_Quests_DestinyQuestStatus> &quests);
    bool is_quests_Set() const;
    bool is_quests_Valid() const;

    OAIDestiny_Artifacts_DestinyArtifactCharacterScoped getSeasonalArtifact() const;
    void setSeasonalArtifact(const OAIDestiny_Artifacts_DestinyArtifactCharacterScoped &seasonal_artifact);
    bool is_seasonal_artifact_Set() const;
    bool is_seasonal_artifact_Valid() const;

    QMap<QString, QList<OAIDestiny_Quests_DestinyObjectiveProgress>> getUninstancedItemObjectives() const;
    void setUninstancedItemObjectives(const QMap<QString, QList<OAIDestiny_Quests_DestinyObjectiveProgress>> &uninstanced_item_objectives);
    bool is_uninstanced_item_objectives_Set() const;
    bool is_uninstanced_item_objectives_Valid() const;

    QMap<QString, OAIDestiny_Entities_Items_DestinyItemPerksComponent> getUninstancedItemPerks() const;
    void setUninstancedItemPerks(const QMap<QString, OAIDestiny_Entities_Items_DestinyItemPerksComponent> &uninstanced_item_perks);
    bool is_uninstanced_item_perks_Set() const;
    bool is_uninstanced_item_perks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QMap<QString, bool>> m_checklists;
    bool m_checklists_isSet;
    bool m_checklists_isValid;

    QMap<QString, OAIDestiny_Progression_DestinyFactionProgression> m_factions;
    bool m_factions_isSet;
    bool m_factions_isValid;

    QMap<QString, OAIDestiny_Milestones_DestinyMilestone> m_milestones;
    bool m_milestones_isSet;
    bool m_milestones_isValid;

    QMap<QString, OAIDestiny_DestinyProgression> m_progressions;
    bool m_progressions_isSet;
    bool m_progressions_isValid;

    QList<OAIDestiny_Quests_DestinyQuestStatus> m_quests;
    bool m_quests_isSet;
    bool m_quests_isValid;

    OAIDestiny_Artifacts_DestinyArtifactCharacterScoped m_seasonal_artifact;
    bool m_seasonal_artifact_isSet;
    bool m_seasonal_artifact_isValid;

    QMap<QString, QList<OAIDestiny_Quests_DestinyObjectiveProgress>> m_uninstanced_item_objectives;
    bool m_uninstanced_item_objectives_isSet;
    bool m_uninstanced_item_objectives_isValid;

    QMap<QString, OAIDestiny_Entities_Items_DestinyItemPerksComponent> m_uninstanced_item_perks;
    bool m_uninstanced_item_perks_isSet;
    bool m_uninstanced_item_perks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent)

#endif // OAIDestiny_Entities_Characters_DestinyCharacterProgressionComponent_H
