/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Responses_DestinyVendorsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Responses_DestinyVendorsResponse::OAIDestiny_Responses_DestinyVendorsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Responses_DestinyVendorsResponse::OAIDestiny_Responses_DestinyVendorsResponse() {
    this->initializeModel();
}

OAIDestiny_Responses_DestinyVendorsResponse::~OAIDestiny_Responses_DestinyVendorsResponse() {}

void OAIDestiny_Responses_DestinyVendorsResponse::initializeModel() {

    m_categories_isSet = false;
    m_categories_isValid = false;

    m_currency_lookups_isSet = false;
    m_currency_lookups_isValid = false;

    m_item_components_isSet = false;
    m_item_components_isValid = false;

    m_sales_isSet = false;
    m_sales_isValid = false;

    m_string_variables_isSet = false;
    m_string_variables_isValid = false;

    m_vendor_groups_isSet = false;
    m_vendor_groups_isValid = false;

    m_vendors_isSet = false;
    m_vendors_isValid = false;
}

void OAIDestiny_Responses_DestinyVendorsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Responses_DestinyVendorsResponse::fromJsonObject(QJsonObject json) {

    m_categories_isValid = ::OpenAPI::fromJsonValue(m_categories, json[QString("categories")]);
    m_categories_isSet = !json[QString("categories")].isNull() && m_categories_isValid;

    m_currency_lookups_isValid = ::OpenAPI::fromJsonValue(m_currency_lookups, json[QString("currencyLookups")]);
    m_currency_lookups_isSet = !json[QString("currencyLookups")].isNull() && m_currency_lookups_isValid;

    m_item_components_isValid = ::OpenAPI::fromJsonValue(m_item_components, json[QString("itemComponents")]);
    m_item_components_isSet = !json[QString("itemComponents")].isNull() && m_item_components_isValid;

    m_sales_isValid = ::OpenAPI::fromJsonValue(m_sales, json[QString("sales")]);
    m_sales_isSet = !json[QString("sales")].isNull() && m_sales_isValid;

    m_string_variables_isValid = ::OpenAPI::fromJsonValue(m_string_variables, json[QString("stringVariables")]);
    m_string_variables_isSet = !json[QString("stringVariables")].isNull() && m_string_variables_isValid;

    m_vendor_groups_isValid = ::OpenAPI::fromJsonValue(m_vendor_groups, json[QString("vendorGroups")]);
    m_vendor_groups_isSet = !json[QString("vendorGroups")].isNull() && m_vendor_groups_isValid;

    m_vendors_isValid = ::OpenAPI::fromJsonValue(m_vendors, json[QString("vendors")]);
    m_vendors_isSet = !json[QString("vendors")].isNull() && m_vendors_isValid;
}

QString OAIDestiny_Responses_DestinyVendorsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Responses_DestinyVendorsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_categories.isSet()) {
        obj.insert(QString("categories"), ::OpenAPI::toJsonValue(m_categories));
    }
    if (m_currency_lookups.isSet()) {
        obj.insert(QString("currencyLookups"), ::OpenAPI::toJsonValue(m_currency_lookups));
    }
    if (m_item_components.size() > 0) {
        obj.insert(QString("itemComponents"), ::OpenAPI::toJsonValue(m_item_components));
    }
    if (m_sales.isSet()) {
        obj.insert(QString("sales"), ::OpenAPI::toJsonValue(m_sales));
    }
    if (m_string_variables.isSet()) {
        obj.insert(QString("stringVariables"), ::OpenAPI::toJsonValue(m_string_variables));
    }
    if (m_vendor_groups.isSet()) {
        obj.insert(QString("vendorGroups"), ::OpenAPI::toJsonValue(m_vendor_groups));
    }
    if (m_vendors.isSet()) {
        obj.insert(QString("vendors"), ::OpenAPI::toJsonValue(m_vendors));
    }
    return obj;
}

OAIDictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent OAIDestiny_Responses_DestinyVendorsResponse::getCategories() const {
    return m_categories;
}
void OAIDestiny_Responses_DestinyVendorsResponse::setCategories(const OAIDictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent &categories) {
    m_categories = categories;
    m_categories_isSet = true;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_categories_Set() const{
    return m_categories_isSet;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_categories_Valid() const{
    return m_categories_isValid;
}

OAISingleComponentResponseOfDestinyCurrenciesComponent OAIDestiny_Responses_DestinyVendorsResponse::getCurrencyLookups() const {
    return m_currency_lookups;
}
void OAIDestiny_Responses_DestinyVendorsResponse::setCurrencyLookups(const OAISingleComponentResponseOfDestinyCurrenciesComponent &currency_lookups) {
    m_currency_lookups = currency_lookups;
    m_currency_lookups_isSet = true;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_currency_lookups_Set() const{
    return m_currency_lookups_isSet;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_currency_lookups_Valid() const{
    return m_currency_lookups_isValid;
}

QMap<QString, OAIDestinyItemComponentSetOfint32> OAIDestiny_Responses_DestinyVendorsResponse::getItemComponents() const {
    return m_item_components;
}
void OAIDestiny_Responses_DestinyVendorsResponse::setItemComponents(const QMap<QString, OAIDestinyItemComponentSetOfint32> &item_components) {
    m_item_components = item_components;
    m_item_components_isSet = true;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_item_components_Set() const{
    return m_item_components_isSet;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_item_components_Valid() const{
    return m_item_components_isValid;
}

OAIDictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent OAIDestiny_Responses_DestinyVendorsResponse::getSales() const {
    return m_sales;
}
void OAIDestiny_Responses_DestinyVendorsResponse::setSales(const OAIDictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent &sales) {
    m_sales = sales;
    m_sales_isSet = true;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_sales_Set() const{
    return m_sales_isSet;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_sales_Valid() const{
    return m_sales_isValid;
}

OAISingleComponentResponseOfDestinyStringVariablesComponent OAIDestiny_Responses_DestinyVendorsResponse::getStringVariables() const {
    return m_string_variables;
}
void OAIDestiny_Responses_DestinyVendorsResponse::setStringVariables(const OAISingleComponentResponseOfDestinyStringVariablesComponent &string_variables) {
    m_string_variables = string_variables;
    m_string_variables_isSet = true;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_string_variables_Set() const{
    return m_string_variables_isSet;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_string_variables_Valid() const{
    return m_string_variables_isValid;
}

OAISingleComponentResponseOfDestinyVendorGroupComponent OAIDestiny_Responses_DestinyVendorsResponse::getVendorGroups() const {
    return m_vendor_groups;
}
void OAIDestiny_Responses_DestinyVendorsResponse::setVendorGroups(const OAISingleComponentResponseOfDestinyVendorGroupComponent &vendor_groups) {
    m_vendor_groups = vendor_groups;
    m_vendor_groups_isSet = true;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_vendor_groups_Set() const{
    return m_vendor_groups_isSet;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_vendor_groups_Valid() const{
    return m_vendor_groups_isValid;
}

OAIDictionaryComponentResponseOfuint32AndDestinyVendorComponent OAIDestiny_Responses_DestinyVendorsResponse::getVendors() const {
    return m_vendors;
}
void OAIDestiny_Responses_DestinyVendorsResponse::setVendors(const OAIDictionaryComponentResponseOfuint32AndDestinyVendorComponent &vendors) {
    m_vendors = vendors;
    m_vendors_isSet = true;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_vendors_Set() const{
    return m_vendors_isSet;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::is_vendors_Valid() const{
    return m_vendors_isValid;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_categories.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_lookups.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_components.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_variables.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Responses_DestinyVendorsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
