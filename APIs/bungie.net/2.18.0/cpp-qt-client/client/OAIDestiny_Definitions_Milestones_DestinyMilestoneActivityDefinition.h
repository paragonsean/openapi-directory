/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition.h
 *
 * Milestones can have associated activities which provide additional information about the context, challenges, modifiers, state etc... related to this Milestone.   Information we need to be able to return that data is defined here, along with Tier data to establish a relationship between a conceptual Activity and its difficulty levels and variants.
 */

#ifndef OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition_H
#define OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityVariantDefinition.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityVariantDefinition;

class OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition();
    OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition(QString json);
    ~OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getConceptualActivityHash() const;
    void setConceptualActivityHash(const qint32 &conceptual_activity_hash);
    bool is_conceptual_activity_hash_Set() const;
    bool is_conceptual_activity_hash_Valid() const;

    QMap<QString, OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityVariantDefinition> getVariants() const;
    void setVariants(const QMap<QString, OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityVariantDefinition> &variants);
    bool is_variants_Set() const;
    bool is_variants_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_conceptual_activity_hash;
    bool m_conceptual_activity_hash_isSet;
    bool m_conceptual_activity_hash_isValid;

    QMap<QString, OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityVariantDefinition> m_variants;
    bool m_variants_isSet;
    bool m_variants_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition)

#endif // OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition_H
