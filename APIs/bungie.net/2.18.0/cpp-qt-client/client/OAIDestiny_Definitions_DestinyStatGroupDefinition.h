/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyStatGroupDefinition.h
 *
 * When an inventory item (DestinyInventoryItemDefinition) has Stats (such as Attack Power), the item will refer to a Stat Group. This definition enumerates the properties used to transform the item&#39;s \&quot;Investment\&quot; stats into \&quot;Display\&quot; stats.  See DestinyStatDefinition&#39;s documentation for information about the transformation of Stats, and the meaning of an Investment vs. a Display stat.  If you don&#39;t want to do these calculations on your own, fear not: pulling live data from the BNet endpoints will return display stat values pre-computed and ready for you to use. I highly recommend this approach, saves a lot of time and also accounts for certain stat modifiers that can&#39;t easily be accounted for without live data (such as stat modifiers on Talent Grids and Socket Plugs)
 */

#ifndef OAIDestiny_Definitions_DestinyStatGroupDefinition_H
#define OAIDestiny_Definitions_DestinyStatGroupDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_DestinyStatDisplayDefinition.h"
#include "OAIDestiny_Definitions_DestinyStatOverrideDefinition.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_DestinyStatOverrideDefinition;
class OAIDestiny_Definitions_DestinyStatDisplayDefinition;

class OAIDestiny_Definitions_DestinyStatGroupDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyStatGroupDefinition();
    OAIDestiny_Definitions_DestinyStatGroupDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyStatGroupDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    qint32 getMaximumValue() const;
    void setMaximumValue(const qint32 &maximum_value);
    bool is_maximum_value_Set() const;
    bool is_maximum_value_Valid() const;

    QMap<QString, OAIDestiny_Definitions_DestinyStatOverrideDefinition> getOverrides() const;
    void setOverrides(const QMap<QString, OAIDestiny_Definitions_DestinyStatOverrideDefinition> &overrides);
    bool is_overrides_Set() const;
    bool is_overrides_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    QList<OAIDestiny_Definitions_DestinyStatDisplayDefinition> getScaledStats() const;
    void setScaledStats(const QList<OAIDestiny_Definitions_DestinyStatDisplayDefinition> &scaled_stats);
    bool is_scaled_stats_Set() const;
    bool is_scaled_stats_Valid() const;

    qint32 getUiPosition() const;
    void setUiPosition(const qint32 &ui_position);
    bool is_ui_position_Set() const;
    bool is_ui_position_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    qint32 m_maximum_value;
    bool m_maximum_value_isSet;
    bool m_maximum_value_isValid;

    QMap<QString, OAIDestiny_Definitions_DestinyStatOverrideDefinition> m_overrides;
    bool m_overrides_isSet;
    bool m_overrides_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    QList<OAIDestiny_Definitions_DestinyStatDisplayDefinition> m_scaled_stats;
    bool m_scaled_stats_isSet;
    bool m_scaled_stats_isValid;

    qint32 m_ui_position;
    bool m_ui_position_isSet;
    bool m_ui_position_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyStatGroupDefinition)

#endif // OAIDestiny_Definitions_DestinyStatGroupDefinition_H
