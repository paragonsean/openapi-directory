/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchema27.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchema27::OAISchema27(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchema27::OAISchema27() {
    this->initializeModel();
}

OAISchema27::~OAISchema27() {}

void OAISchema27::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISchema27::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISchema27::fromJson(QString jsonString) {
    
    if ( jsonString.compare(QString::number(0), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(1), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(2), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(5), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_5;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(6), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_6;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(7), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_7;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(8), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_8;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(9), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_9;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(10), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_10;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(11), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_11;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(12), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_12;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(13), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_13;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(14), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_14;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(16), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_16;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(17), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_17;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(18), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_18;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(19), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_19;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(20), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_20;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(21), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_21;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(22), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_22;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(23), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_23;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(24), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_24;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(25), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_25;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(26), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_26;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(27), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_27;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(28), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_28;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(29), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_29;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(30), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_30;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(31), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_31;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(32), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_32;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(33), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema27::_33;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISchema27::fromJsonValue(QJsonValue json) {
m_value = static_cast<eOAISchema27>(json.toInt());
}

QString OAISchema27::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISchema27::_0:
            val = QString::number(0);
            break;
        case eOAISchema27::_1:
            val = QString::number(1);
            break;
        case eOAISchema27::_2:
            val = QString::number(2);
            break;
        case eOAISchema27::_5:
            val = QString::number(5);
            break;
        case eOAISchema27::_6:
            val = QString::number(6);
            break;
        case eOAISchema27::_7:
            val = QString::number(7);
            break;
        case eOAISchema27::_8:
            val = QString::number(8);
            break;
        case eOAISchema27::_9:
            val = QString::number(9);
            break;
        case eOAISchema27::_10:
            val = QString::number(10);
            break;
        case eOAISchema27::_11:
            val = QString::number(11);
            break;
        case eOAISchema27::_12:
            val = QString::number(12);
            break;
        case eOAISchema27::_13:
            val = QString::number(13);
            break;
        case eOAISchema27::_14:
            val = QString::number(14);
            break;
        case eOAISchema27::_16:
            val = QString::number(16);
            break;
        case eOAISchema27::_17:
            val = QString::number(17);
            break;
        case eOAISchema27::_18:
            val = QString::number(18);
            break;
        case eOAISchema27::_19:
            val = QString::number(19);
            break;
        case eOAISchema27::_20:
            val = QString::number(20);
            break;
        case eOAISchema27::_21:
            val = QString::number(21);
            break;
        case eOAISchema27::_22:
            val = QString::number(22);
            break;
        case eOAISchema27::_23:
            val = QString::number(23);
            break;
        case eOAISchema27::_24:
            val = QString::number(24);
            break;
        case eOAISchema27::_25:
            val = QString::number(25);
            break;
        case eOAISchema27::_26:
            val = QString::number(26);
            break;
        case eOAISchema27::_27:
            val = QString::number(27);
            break;
        case eOAISchema27::_28:
            val = QString::number(28);
            break;
        case eOAISchema27::_29:
            val = QString::number(29);
            break;
        case eOAISchema27::_30:
            val = QString::number(30);
            break;
        case eOAISchema27::_31:
            val = QString::number(31);
            break;
        case eOAISchema27::_32:
            val = QString::number(32);
            break;
        case eOAISchema27::_33:
            val = QString::number(33);
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISchema27::asJsonValue() const {
    
    return QJsonValue(static_cast<int>(m_value));
}


OAISchema27::eOAISchema27 OAISchema27::getValue() const {
    return m_value;
}

void OAISchema27::setValue(const OAISchema27::eOAISchema27& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISchema27::isSet() const {
    
    return m_value_isSet;
}

bool OAISchema27::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
