/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_HistoricalStats_DestinyClanAggregateStat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_HistoricalStats_DestinyClanAggregateStat::OAIDestiny_HistoricalStats_DestinyClanAggregateStat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_HistoricalStats_DestinyClanAggregateStat::OAIDestiny_HistoricalStats_DestinyClanAggregateStat() {
    this->initializeModel();
}

OAIDestiny_HistoricalStats_DestinyClanAggregateStat::~OAIDestiny_HistoricalStats_DestinyClanAggregateStat() {}

void OAIDestiny_HistoricalStats_DestinyClanAggregateStat::initializeModel() {

    m_mode_isSet = false;
    m_mode_isValid = false;

    m_stat_id_isSet = false;
    m_stat_id_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIDestiny_HistoricalStats_DestinyClanAggregateStat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_HistoricalStats_DestinyClanAggregateStat::fromJsonObject(QJsonObject json) {

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("mode")]);
    m_mode_isSet = !json[QString("mode")].isNull() && m_mode_isValid;

    m_stat_id_isValid = ::OpenAPI::fromJsonValue(m_stat_id, json[QString("statId")]);
    m_stat_id_isSet = !json[QString("statId")].isNull() && m_stat_id_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIDestiny_HistoricalStats_DestinyClanAggregateStat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_HistoricalStats_DestinyClanAggregateStat::asJsonObject() const {
    QJsonObject obj;
    if (m_mode_isSet) {
        obj.insert(QString("mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    if (m_stat_id_isSet) {
        obj.insert(QString("statId"), ::OpenAPI::toJsonValue(m_stat_id));
    }
    if (m_value.isSet()) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

qint32 OAIDestiny_HistoricalStats_DestinyClanAggregateStat::getMode() const {
    return m_mode;
}
void OAIDestiny_HistoricalStats_DestinyClanAggregateStat::setMode(const qint32 &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAIDestiny_HistoricalStats_DestinyClanAggregateStat::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAIDestiny_HistoricalStats_DestinyClanAggregateStat::is_mode_Valid() const{
    return m_mode_isValid;
}

QString OAIDestiny_HistoricalStats_DestinyClanAggregateStat::getStatId() const {
    return m_stat_id;
}
void OAIDestiny_HistoricalStats_DestinyClanAggregateStat::setStatId(const QString &stat_id) {
    m_stat_id = stat_id;
    m_stat_id_isSet = true;
}

bool OAIDestiny_HistoricalStats_DestinyClanAggregateStat::is_stat_id_Set() const{
    return m_stat_id_isSet;
}

bool OAIDestiny_HistoricalStats_DestinyClanAggregateStat::is_stat_id_Valid() const{
    return m_stat_id_isValid;
}

OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue OAIDestiny_HistoricalStats_DestinyClanAggregateStat::getValue() const {
    return m_value;
}
void OAIDestiny_HistoricalStats_DestinyClanAggregateStat::setValue(const OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIDestiny_HistoricalStats_DestinyClanAggregateStat::is_value_Set() const{
    return m_value_isSet;
}

bool OAIDestiny_HistoricalStats_DestinyClanAggregateStat::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIDestiny_HistoricalStats_DestinyClanAggregateStat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stat_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_HistoricalStats_DestinyClanAggregateStat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
