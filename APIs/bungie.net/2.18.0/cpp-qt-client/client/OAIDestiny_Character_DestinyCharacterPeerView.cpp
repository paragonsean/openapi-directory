/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Character_DestinyCharacterPeerView.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Character_DestinyCharacterPeerView::OAIDestiny_Character_DestinyCharacterPeerView(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Character_DestinyCharacterPeerView::OAIDestiny_Character_DestinyCharacterPeerView() {
    this->initializeModel();
}

OAIDestiny_Character_DestinyCharacterPeerView::~OAIDestiny_Character_DestinyCharacterPeerView() {}

void OAIDestiny_Character_DestinyCharacterPeerView::initializeModel() {

    m_equipment_isSet = false;
    m_equipment_isValid = false;
}

void OAIDestiny_Character_DestinyCharacterPeerView::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Character_DestinyCharacterPeerView::fromJsonObject(QJsonObject json) {

    m_equipment_isValid = ::OpenAPI::fromJsonValue(m_equipment, json[QString("equipment")]);
    m_equipment_isSet = !json[QString("equipment")].isNull() && m_equipment_isValid;
}

QString OAIDestiny_Character_DestinyCharacterPeerView::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Character_DestinyCharacterPeerView::asJsonObject() const {
    QJsonObject obj;
    if (m_equipment.size() > 0) {
        obj.insert(QString("equipment"), ::OpenAPI::toJsonValue(m_equipment));
    }
    return obj;
}

QList<OAIDestiny_Character_DestinyItemPeerView> OAIDestiny_Character_DestinyCharacterPeerView::getEquipment() const {
    return m_equipment;
}
void OAIDestiny_Character_DestinyCharacterPeerView::setEquipment(const QList<OAIDestiny_Character_DestinyItemPeerView> &equipment) {
    m_equipment = equipment;
    m_equipment_isSet = true;
}

bool OAIDestiny_Character_DestinyCharacterPeerView::is_equipment_Set() const{
    return m_equipment_isSet;
}

bool OAIDestiny_Character_DestinyCharacterPeerView::is_equipment_Valid() const{
    return m_equipment_isValid;
}

bool OAIDestiny_Character_DestinyCharacterPeerView::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_equipment.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Character_DestinyCharacterPeerView::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
