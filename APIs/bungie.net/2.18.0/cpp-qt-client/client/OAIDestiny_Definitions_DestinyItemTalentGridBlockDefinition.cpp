/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::~OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition() {}

void OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::initializeModel() {

    m_build_name_isSet = false;
    m_build_name_isValid = false;

    m_hud_damage_type_isSet = false;
    m_hud_damage_type_isValid = false;

    m_hud_icon_isSet = false;
    m_hud_icon_isValid = false;

    m_item_detail_string_isSet = false;
    m_item_detail_string_isValid = false;

    m_talent_grid_hash_isSet = false;
    m_talent_grid_hash_isValid = false;
}

void OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::fromJsonObject(QJsonObject json) {

    m_build_name_isValid = ::OpenAPI::fromJsonValue(m_build_name, json[QString("buildName")]);
    m_build_name_isSet = !json[QString("buildName")].isNull() && m_build_name_isValid;

    m_hud_damage_type_isValid = ::OpenAPI::fromJsonValue(m_hud_damage_type, json[QString("hudDamageType")]);
    m_hud_damage_type_isSet = !json[QString("hudDamageType")].isNull() && m_hud_damage_type_isValid;

    m_hud_icon_isValid = ::OpenAPI::fromJsonValue(m_hud_icon, json[QString("hudIcon")]);
    m_hud_icon_isSet = !json[QString("hudIcon")].isNull() && m_hud_icon_isValid;

    m_item_detail_string_isValid = ::OpenAPI::fromJsonValue(m_item_detail_string, json[QString("itemDetailString")]);
    m_item_detail_string_isSet = !json[QString("itemDetailString")].isNull() && m_item_detail_string_isValid;

    m_talent_grid_hash_isValid = ::OpenAPI::fromJsonValue(m_talent_grid_hash, json[QString("talentGridHash")]);
    m_talent_grid_hash_isSet = !json[QString("talentGridHash")].isNull() && m_talent_grid_hash_isValid;
}

QString OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_build_name_isSet) {
        obj.insert(QString("buildName"), ::OpenAPI::toJsonValue(m_build_name));
    }
    if (m_hud_damage_type_isSet) {
        obj.insert(QString("hudDamageType"), ::OpenAPI::toJsonValue(m_hud_damage_type));
    }
    if (m_hud_icon_isSet) {
        obj.insert(QString("hudIcon"), ::OpenAPI::toJsonValue(m_hud_icon));
    }
    if (m_item_detail_string_isSet) {
        obj.insert(QString("itemDetailString"), ::OpenAPI::toJsonValue(m_item_detail_string));
    }
    if (m_talent_grid_hash_isSet) {
        obj.insert(QString("talentGridHash"), ::OpenAPI::toJsonValue(m_talent_grid_hash));
    }
    return obj;
}

QString OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::getBuildName() const {
    return m_build_name;
}
void OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::setBuildName(const QString &build_name) {
    m_build_name = build_name;
    m_build_name_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_build_name_Set() const{
    return m_build_name_isSet;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_build_name_Valid() const{
    return m_build_name_isValid;
}

qint32 OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::getHudDamageType() const {
    return m_hud_damage_type;
}
void OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::setHudDamageType(const qint32 &hud_damage_type) {
    m_hud_damage_type = hud_damage_type;
    m_hud_damage_type_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_hud_damage_type_Set() const{
    return m_hud_damage_type_isSet;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_hud_damage_type_Valid() const{
    return m_hud_damage_type_isValid;
}

QString OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::getHudIcon() const {
    return m_hud_icon;
}
void OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::setHudIcon(const QString &hud_icon) {
    m_hud_icon = hud_icon;
    m_hud_icon_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_hud_icon_Set() const{
    return m_hud_icon_isSet;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_hud_icon_Valid() const{
    return m_hud_icon_isValid;
}

QString OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::getItemDetailString() const {
    return m_item_detail_string;
}
void OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::setItemDetailString(const QString &item_detail_string) {
    m_item_detail_string = item_detail_string;
    m_item_detail_string_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_item_detail_string_Set() const{
    return m_item_detail_string_isSet;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_item_detail_string_Valid() const{
    return m_item_detail_string_isValid;
}

qint32 OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::getTalentGridHash() const {
    return m_talent_grid_hash;
}
void OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::setTalentGridHash(const qint32 &talent_grid_hash) {
    m_talent_grid_hash = talent_grid_hash;
    m_talent_grid_hash_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_talent_grid_hash_Set() const{
    return m_talent_grid_hash_isSet;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::is_talent_grid_hash_Valid() const{
    return m_talent_grid_hash_isValid;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hud_damage_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hud_icon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_detail_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_talent_grid_hash_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_DestinyItemTalentGridBlockDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
