/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroupsV2_GroupOptionalConversation.h
 *
 * 
 */

#ifndef OAIGroupsV2_GroupOptionalConversation_H
#define OAIGroupsV2_GroupOptionalConversation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGroupsV2_GroupOptionalConversation : public OAIObject {
public:
    OAIGroupsV2_GroupOptionalConversation();
    OAIGroupsV2_GroupOptionalConversation(QString json);
    ~OAIGroupsV2_GroupOptionalConversation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isChatEnabled() const;
    void setChatEnabled(const bool &chat_enabled);
    bool is_chat_enabled_Set() const;
    bool is_chat_enabled_Valid() const;

    QString getChatName() const;
    void setChatName(const QString &chat_name);
    bool is_chat_name_Set() const;
    bool is_chat_name_Valid() const;

    qint32 getChatSecurity() const;
    void setChatSecurity(const qint32 &chat_security);
    bool is_chat_security_Set() const;
    bool is_chat_security_Valid() const;

    qint64 getConversationId() const;
    void setConversationId(const qint64 &conversation_id);
    bool is_conversation_id_Set() const;
    bool is_conversation_id_Valid() const;

    qint64 getGroupId() const;
    void setGroupId(const qint64 &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_chat_enabled;
    bool m_chat_enabled_isSet;
    bool m_chat_enabled_isValid;

    QString m_chat_name;
    bool m_chat_name_isSet;
    bool m_chat_name_isValid;

    qint32 m_chat_security;
    bool m_chat_security_isSet;
    bool m_chat_security_isValid;

    qint64 m_conversation_id;
    bool m_conversation_id_isSet;
    bool m_conversation_id_isValid;

    qint64 m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroupsV2_GroupOptionalConversation)

#endif // OAIGroupsV2_GroupOptionalConversation_H
