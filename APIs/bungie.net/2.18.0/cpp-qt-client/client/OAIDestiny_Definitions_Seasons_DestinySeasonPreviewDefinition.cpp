/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::~OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition() {}

void OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_images_isSet = false;
    m_images_isValid = false;

    m_link_path_isSet = false;
    m_link_path_isValid = false;

    m_video_link_isSet = false;
    m_video_link_isValid = false;
}

void OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_images_isValid = ::OpenAPI::fromJsonValue(m_images, json[QString("images")]);
    m_images_isSet = !json[QString("images")].isNull() && m_images_isValid;

    m_link_path_isValid = ::OpenAPI::fromJsonValue(m_link_path, json[QString("linkPath")]);
    m_link_path_isSet = !json[QString("linkPath")].isNull() && m_link_path_isValid;

    m_video_link_isValid = ::OpenAPI::fromJsonValue(m_video_link, json[QString("videoLink")]);
    m_video_link_isSet = !json[QString("videoLink")].isNull() && m_video_link_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_images.size() > 0) {
        obj.insert(QString("images"), ::OpenAPI::toJsonValue(m_images));
    }
    if (m_link_path_isSet) {
        obj.insert(QString("linkPath"), ::OpenAPI::toJsonValue(m_link_path));
    }
    if (m_video_link_isSet) {
        obj.insert(QString("videoLink"), ::OpenAPI::toJsonValue(m_video_link));
    }
    return obj;
}

QString OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::getDescription() const {
    return m_description;
}
void OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAIDestiny_Definitions_Seasons_DestinySeasonPreviewImageDefinition> OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::getImages() const {
    return m_images;
}
void OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::setImages(const QList<OAIDestiny_Definitions_Seasons_DestinySeasonPreviewImageDefinition> &images) {
    m_images = images;
    m_images_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::is_images_Set() const{
    return m_images_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::is_images_Valid() const{
    return m_images_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::getLinkPath() const {
    return m_link_path;
}
void OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::setLinkPath(const QString &link_path) {
    m_link_path = link_path;
    m_link_path_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::is_link_path_Set() const{
    return m_link_path_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::is_link_path_Valid() const{
    return m_link_path_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::getVideoLink() const {
    return m_video_link;
}
void OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::setVideoLink(const QString &video_link) {
    m_video_link = video_link;
    m_video_link_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::is_video_link_Set() const{
    return m_video_link_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::is_video_link_Valid() const{
    return m_video_link_isValid;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
