/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroupsV2_GroupV2Card.h
 *
 * A small infocard of group information, usually used for when a list of groups are returned
 */

#ifndef OAIGroupsV2_GroupV2Card_H
#define OAIGroupsV2_GroupV2Card_H

#include <QJsonObject>

#include "OAIGroupsV2_GroupV2ClanInfo.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroupsV2_GroupV2ClanInfo;

class OAIGroupsV2_GroupV2Card : public OAIObject {
public:
    OAIGroupsV2_GroupV2Card();
    OAIGroupsV2_GroupV2Card(QString json);
    ~OAIGroupsV2_GroupV2Card() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbout() const;
    void setAbout(const QString &about);
    bool is_about_Set() const;
    bool is_about_Valid() const;

    QString getAvatarPath() const;
    void setAvatarPath(const QString &avatar_path);
    bool is_avatar_path_Set() const;
    bool is_avatar_path_Valid() const;

    qint32 getCapabilities() const;
    void setCapabilities(const qint32 &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    OAIGroupsV2_GroupV2ClanInfo getClanInfo() const;
    void setClanInfo(const OAIGroupsV2_GroupV2ClanInfo &clan_info);
    bool is_clan_info_Set() const;
    bool is_clan_info_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    qint64 getGroupId() const;
    void setGroupId(const qint64 &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    qint32 getGroupType() const;
    void setGroupType(const qint32 &group_type);
    bool is_group_type_Set() const;
    bool is_group_type_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    qint32 getMemberCount() const;
    void setMemberCount(const qint32 &member_count);
    bool is_member_count_Set() const;
    bool is_member_count_Valid() const;

    qint32 getMembershipOption() const;
    void setMembershipOption(const qint32 &membership_option);
    bool is_membership_option_Set() const;
    bool is_membership_option_Valid() const;

    QString getMotto() const;
    void setMotto(const QString &motto);
    bool is_motto_Set() const;
    bool is_motto_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTheme() const;
    void setTheme(const QString &theme);
    bool is_theme_Set() const;
    bool is_theme_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_about;
    bool m_about_isSet;
    bool m_about_isValid;

    QString m_avatar_path;
    bool m_avatar_path_isSet;
    bool m_avatar_path_isValid;

    qint32 m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    OAIGroupsV2_GroupV2ClanInfo m_clan_info;
    bool m_clan_info_isSet;
    bool m_clan_info_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    qint64 m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    qint32 m_group_type;
    bool m_group_type_isSet;
    bool m_group_type_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    qint32 m_member_count;
    bool m_member_count_isSet;
    bool m_member_count_isValid;

    qint32 m_membership_option;
    bool m_membership_option_isSet;
    bool m_membership_option_isValid;

    QString m_motto;
    bool m_motto_isSet;
    bool m_motto_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_theme;
    bool m_theme_isSet;
    bool m_theme_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroupsV2_GroupV2Card)

#endif // OAIGroupsV2_GroupV2Card_H
