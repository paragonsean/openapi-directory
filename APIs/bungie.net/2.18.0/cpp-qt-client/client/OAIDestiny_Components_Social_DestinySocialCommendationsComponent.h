/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Components_Social_DestinySocialCommendationsComponent.h
 *
 * 
 */

#ifndef OAIDestiny_Components_Social_DestinySocialCommendationsComponent_H
#define OAIDestiny_Components_Social_DestinySocialCommendationsComponent_H

#include <QJsonObject>

#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Components_Social_DestinySocialCommendationsComponent : public OAIObject {
public:
    OAIDestiny_Components_Social_DestinySocialCommendationsComponent();
    OAIDestiny_Components_Social_DestinySocialCommendationsComponent(QString json);
    ~OAIDestiny_Components_Social_DestinySocialCommendationsComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, qint32> getCommendationNodeScoresByHash() const;
    void setCommendationNodeScoresByHash(const QMap<QString, qint32> &commendation_node_scores_by_hash);
    bool is_commendation_node_scores_by_hash_Set() const;
    bool is_commendation_node_scores_by_hash_Valid() const;

    QMap<QString, qint32> getCommendationScoresByHash() const;
    void setCommendationScoresByHash(const QMap<QString, qint32> &commendation_scores_by_hash);
    bool is_commendation_scores_by_hash_Set() const;
    bool is_commendation_scores_by_hash_Valid() const;

    QList<qint32> getScoreDetailValues() const;
    void setScoreDetailValues(const QList<qint32> &score_detail_values);
    bool is_score_detail_values_Set() const;
    bool is_score_detail_values_Valid() const;

    qint32 getTotalScore() const;
    void setTotalScore(const qint32 &total_score);
    bool is_total_score_Set() const;
    bool is_total_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, qint32> m_commendation_node_scores_by_hash;
    bool m_commendation_node_scores_by_hash_isSet;
    bool m_commendation_node_scores_by_hash_isValid;

    QMap<QString, qint32> m_commendation_scores_by_hash;
    bool m_commendation_scores_by_hash_isSet;
    bool m_commendation_scores_by_hash_isValid;

    QList<qint32> m_score_detail_values;
    bool m_score_detail_values_isSet;
    bool m_score_detail_values_isValid;

    qint32 m_total_score;
    bool m_total_score_isSet;
    bool m_total_score_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Components_Social_DestinySocialCommendationsComponent)

#endif // OAIDestiny_Components_Social_DestinySocialCommendationsComponent_H
