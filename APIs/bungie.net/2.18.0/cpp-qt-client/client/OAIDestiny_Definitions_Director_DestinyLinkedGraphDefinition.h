/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition.h
 *
 * This describes links between the current graph and others, as well as when that link is relevant.
 */

#ifndef OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition_H
#define OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_DestinyUnlockExpressionDefinition.h"
#include "OAIDestiny_Definitions_Director_DestinyLinkedGraphEntryDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Director_DestinyLinkedGraphEntryDefinition;
class OAIDestiny_Definitions_DestinyUnlockExpressionDefinition;

class OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition();
    OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition(QString json);
    ~OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getLinkedGraphId() const;
    void setLinkedGraphId(const qint32 &linked_graph_id);
    bool is_linked_graph_id_Set() const;
    bool is_linked_graph_id_Valid() const;

    QList<OAIDestiny_Definitions_Director_DestinyLinkedGraphEntryDefinition> getLinkedGraphs() const;
    void setLinkedGraphs(const QList<OAIDestiny_Definitions_Director_DestinyLinkedGraphEntryDefinition> &linked_graphs);
    bool is_linked_graphs_Set() const;
    bool is_linked_graphs_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOverview() const;
    void setOverview(const QString &overview);
    bool is_overview_Set() const;
    bool is_overview_Valid() const;

    OAIDestiny_Definitions_DestinyUnlockExpressionDefinition getUnlockExpression() const;
    void setUnlockExpression(const OAIDestiny_Definitions_DestinyUnlockExpressionDefinition &unlock_expression);
    bool is_unlock_expression_Set() const;
    bool is_unlock_expression_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_linked_graph_id;
    bool m_linked_graph_id_isSet;
    bool m_linked_graph_id_isValid;

    QList<OAIDestiny_Definitions_Director_DestinyLinkedGraphEntryDefinition> m_linked_graphs;
    bool m_linked_graphs_isSet;
    bool m_linked_graphs_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_overview;
    bool m_overview_isSet;
    bool m_overview_isValid;

    OAIDestiny_Definitions_DestinyUnlockExpressionDefinition m_unlock_expression;
    bool m_unlock_expression_isSet;
    bool m_unlock_expression_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition)

#endif // OAIDestiny_Definitions_Director_DestinyLinkedGraphDefinition_H
