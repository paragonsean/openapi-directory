/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Entities_Items_DestinyItemTalentGridComponent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::OAIDestiny_Entities_Items_DestinyItemTalentGridComponent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::OAIDestiny_Entities_Items_DestinyItemTalentGridComponent() {
    this->initializeModel();
}

OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::~OAIDestiny_Entities_Items_DestinyItemTalentGridComponent() {}

void OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::initializeModel() {

    m_grid_progression_isSet = false;
    m_grid_progression_isValid = false;

    m_is_grid_complete_isSet = false;
    m_is_grid_complete_isValid = false;

    m_nodes_isSet = false;
    m_nodes_isValid = false;

    m_talent_grid_hash_isSet = false;
    m_talent_grid_hash_isValid = false;
}

void OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::fromJsonObject(QJsonObject json) {

    m_grid_progression_isValid = ::OpenAPI::fromJsonValue(m_grid_progression, json[QString("gridProgression")]);
    m_grid_progression_isSet = !json[QString("gridProgression")].isNull() && m_grid_progression_isValid;

    m_is_grid_complete_isValid = ::OpenAPI::fromJsonValue(m_is_grid_complete, json[QString("isGridComplete")]);
    m_is_grid_complete_isSet = !json[QString("isGridComplete")].isNull() && m_is_grid_complete_isValid;

    m_nodes_isValid = ::OpenAPI::fromJsonValue(m_nodes, json[QString("nodes")]);
    m_nodes_isSet = !json[QString("nodes")].isNull() && m_nodes_isValid;

    m_talent_grid_hash_isValid = ::OpenAPI::fromJsonValue(m_talent_grid_hash, json[QString("talentGridHash")]);
    m_talent_grid_hash_isSet = !json[QString("talentGridHash")].isNull() && m_talent_grid_hash_isValid;
}

QString OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::asJsonObject() const {
    QJsonObject obj;
    if (m_grid_progression.isSet()) {
        obj.insert(QString("gridProgression"), ::OpenAPI::toJsonValue(m_grid_progression));
    }
    if (m_is_grid_complete_isSet) {
        obj.insert(QString("isGridComplete"), ::OpenAPI::toJsonValue(m_is_grid_complete));
    }
    if (m_nodes.size() > 0) {
        obj.insert(QString("nodes"), ::OpenAPI::toJsonValue(m_nodes));
    }
    if (m_talent_grid_hash_isSet) {
        obj.insert(QString("talentGridHash"), ::OpenAPI::toJsonValue(m_talent_grid_hash));
    }
    return obj;
}

OAIDestiny_DestinyProgression OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::getGridProgression() const {
    return m_grid_progression;
}
void OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::setGridProgression(const OAIDestiny_DestinyProgression &grid_progression) {
    m_grid_progression = grid_progression;
    m_grid_progression_isSet = true;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::is_grid_progression_Set() const{
    return m_grid_progression_isSet;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::is_grid_progression_Valid() const{
    return m_grid_progression_isValid;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::isIsGridComplete() const {
    return m_is_grid_complete;
}
void OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::setIsGridComplete(const bool &is_grid_complete) {
    m_is_grid_complete = is_grid_complete;
    m_is_grid_complete_isSet = true;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::is_is_grid_complete_Set() const{
    return m_is_grid_complete_isSet;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::is_is_grid_complete_Valid() const{
    return m_is_grid_complete_isValid;
}

QList<OAIDestiny_DestinyTalentNode> OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::getNodes() const {
    return m_nodes;
}
void OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::setNodes(const QList<OAIDestiny_DestinyTalentNode> &nodes) {
    m_nodes = nodes;
    m_nodes_isSet = true;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::is_nodes_Set() const{
    return m_nodes_isSet;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::is_nodes_Valid() const{
    return m_nodes_isValid;
}

qint32 OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::getTalentGridHash() const {
    return m_talent_grid_hash;
}
void OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::setTalentGridHash(const qint32 &talent_grid_hash) {
    m_talent_grid_hash = talent_grid_hash;
    m_talent_grid_hash_isSet = true;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::is_talent_grid_hash_Set() const{
    return m_talent_grid_hash_isSet;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::is_talent_grid_hash_Valid() const{
    return m_talent_grid_hash_isValid;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_grid_progression.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_grid_complete_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nodes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_talent_grid_hash_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Entities_Items_DestinyItemTalentGridComponent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
