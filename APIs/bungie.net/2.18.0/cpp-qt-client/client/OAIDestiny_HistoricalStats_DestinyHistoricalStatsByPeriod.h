/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod.h
 *
 * 
 */

#ifndef OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod_H
#define OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod_H

#include <QJsonObject>

#include "OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup.h"
#include "OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue;
class OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup;

class OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod : public OAIObject {
public:
    OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod();
    OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod(QString json);
    ~OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> getAllTime() const;
    void setAllTime(const QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> &all_time);
    bool is_all_time_Set() const;
    bool is_all_time_Valid() const;

    QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> getAllTimeTier1() const;
    void setAllTimeTier1(const QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> &all_time_tier1);
    bool is_all_time_tier1_Set() const;
    bool is_all_time_tier1_Valid() const;

    QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> getAllTimeTier2() const;
    void setAllTimeTier2(const QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> &all_time_tier2);
    bool is_all_time_tier2_Set() const;
    bool is_all_time_tier2_Valid() const;

    QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> getAllTimeTier3() const;
    void setAllTimeTier3(const QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> &all_time_tier3);
    bool is_all_time_tier3_Set() const;
    bool is_all_time_tier3_Valid() const;

    QList<OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup> getDaily() const;
    void setDaily(const QList<OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup> &daily);
    bool is_daily_Set() const;
    bool is_daily_Valid() const;

    QList<OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup> getMonthly() const;
    void setMonthly(const QList<OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup> &monthly);
    bool is_monthly_Set() const;
    bool is_monthly_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> m_all_time;
    bool m_all_time_isSet;
    bool m_all_time_isValid;

    QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> m_all_time_tier1;
    bool m_all_time_tier1_isSet;
    bool m_all_time_tier1_isValid;

    QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> m_all_time_tier2;
    bool m_all_time_tier2_isSet;
    bool m_all_time_tier2_isValid;

    QMap<QString, OAIDestiny_HistoricalStats_DestinyHistoricalStatsValue> m_all_time_tier3;
    bool m_all_time_tier3_isSet;
    bool m_all_time_tier3_isValid;

    QList<OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup> m_daily;
    bool m_daily_isSet;
    bool m_daily_isValid;

    QList<OAIDestiny_HistoricalStats_DestinyHistoricalStatsPeriodGroup> m_monthly;
    bool m_monthly_isSet;
    bool m_monthly_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod)

#endif // OAIDestiny_HistoricalStats_DestinyHistoricalStatsByPeriod_H
