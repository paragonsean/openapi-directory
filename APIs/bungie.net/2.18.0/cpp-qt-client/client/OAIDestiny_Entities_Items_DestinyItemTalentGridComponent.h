/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Entities_Items_DestinyItemTalentGridComponent.h
 *
 * Well, we&#39;re here in Destiny 2, and Talent Grids are unfortunately still around.  The good news is that they&#39;re pretty much only being used for certain base information on items and for Builds/Subclasses. The bad news is that they still suck. If you really want this information, grab this component.  An important note is that talent grids are defined as such:  A Grid has 1:M Nodes, which has 1:M Steps.  Any given node can only have a single step active at one time, which represents the actual visual contents and effects of the Node (for instance, if you see a \&quot;Super Cool Bonus\&quot; node, the actual icon and text for the node is coming from the current Step of that node).  Nodes can be grouped into exclusivity sets *and* as of D2, exclusivity groups (which are collections of exclusivity sets that affect each other).  See DestinyTalentGridDefinition for more information. Brace yourself, the water&#39;s cold out there in the deep end.
 */

#ifndef OAIDestiny_Entities_Items_DestinyItemTalentGridComponent_H
#define OAIDestiny_Entities_Items_DestinyItemTalentGridComponent_H

#include <QJsonObject>

#include "OAIDestiny_DestinyProgression.h"
#include "OAIDestiny_DestinyTalentNode.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_DestinyProgression;
class OAIDestiny_DestinyTalentNode;

class OAIDestiny_Entities_Items_DestinyItemTalentGridComponent : public OAIObject {
public:
    OAIDestiny_Entities_Items_DestinyItemTalentGridComponent();
    OAIDestiny_Entities_Items_DestinyItemTalentGridComponent(QString json);
    ~OAIDestiny_Entities_Items_DestinyItemTalentGridComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestiny_DestinyProgression getGridProgression() const;
    void setGridProgression(const OAIDestiny_DestinyProgression &grid_progression);
    bool is_grid_progression_Set() const;
    bool is_grid_progression_Valid() const;

    bool isIsGridComplete() const;
    void setIsGridComplete(const bool &is_grid_complete);
    bool is_is_grid_complete_Set() const;
    bool is_is_grid_complete_Valid() const;

    QList<OAIDestiny_DestinyTalentNode> getNodes() const;
    void setNodes(const QList<OAIDestiny_DestinyTalentNode> &nodes);
    bool is_nodes_Set() const;
    bool is_nodes_Valid() const;

    qint32 getTalentGridHash() const;
    void setTalentGridHash(const qint32 &talent_grid_hash);
    bool is_talent_grid_hash_Set() const;
    bool is_talent_grid_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestiny_DestinyProgression m_grid_progression;
    bool m_grid_progression_isSet;
    bool m_grid_progression_isValid;

    bool m_is_grid_complete;
    bool m_is_grid_complete_isSet;
    bool m_is_grid_complete_isValid;

    QList<OAIDestiny_DestinyTalentNode> m_nodes;
    bool m_nodes_isSet;
    bool m_nodes_isValid;

    qint32 m_talent_grid_hash;
    bool m_talent_grid_hash_isSet;
    bool m_talent_grid_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Entities_Items_DestinyItemTalentGridComponent)

#endif // OAIDestiny_Entities_Items_DestinyItemTalentGridComponent_H
