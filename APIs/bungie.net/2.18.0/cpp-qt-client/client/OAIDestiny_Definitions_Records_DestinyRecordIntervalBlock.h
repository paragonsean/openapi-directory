/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock.h
 *
 * 
 */

#ifndef OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock_H
#define OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Records_DestinyRecordIntervalObjective.h"
#include "OAIDestiny_Definitions_Records_DestinyRecordIntervalRewards.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Records_DestinyRecordIntervalObjective;
class OAIDestiny_Definitions_Records_DestinyRecordIntervalRewards;

class OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock : public OAIObject {
public:
    OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock();
    OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock(QString json);
    ~OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDestiny_Definitions_Records_DestinyRecordIntervalObjective> getIntervalObjectives() const;
    void setIntervalObjectives(const QList<OAIDestiny_Definitions_Records_DestinyRecordIntervalObjective> &interval_objectives);
    bool is_interval_objectives_Set() const;
    bool is_interval_objectives_Valid() const;

    QList<OAIDestiny_Definitions_Records_DestinyRecordIntervalRewards> getIntervalRewards() const;
    void setIntervalRewards(const QList<OAIDestiny_Definitions_Records_DestinyRecordIntervalRewards> &interval_rewards);
    bool is_interval_rewards_Set() const;
    bool is_interval_rewards_Valid() const;

    qint32 getOriginalObjectiveArrayInsertionIndex() const;
    void setOriginalObjectiveArrayInsertionIndex(const qint32 &original_objective_array_insertion_index);
    bool is_original_objective_array_insertion_index_Set() const;
    bool is_original_objective_array_insertion_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDestiny_Definitions_Records_DestinyRecordIntervalObjective> m_interval_objectives;
    bool m_interval_objectives_isSet;
    bool m_interval_objectives_isValid;

    QList<OAIDestiny_Definitions_Records_DestinyRecordIntervalRewards> m_interval_rewards;
    bool m_interval_rewards_isSet;
    bool m_interval_rewards_isValid;

    qint32 m_original_objective_array_insertion_index;
    bool m_original_objective_array_insertion_index_isSet;
    bool m_original_objective_array_insertion_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock)

#endif // OAIDestiny_Definitions_Records_DestinyRecordIntervalBlock_H
