/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock.h
 *
 * 
 */

#ifndef OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock_H
#define OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock : public OAIObject {
public:
    OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock();
    OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock(QString json);
    ~OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDisplayStyle() const;
    void setDisplayStyle(const qint32 &display_style);
    bool is_display_style_Set() const;
    bool is_display_style_Valid() const;

    QList<qint32> getParentPresentationNodeHashes() const;
    void setParentPresentationNodeHashes(const QList<qint32> &parent_presentation_node_hashes);
    bool is_parent_presentation_node_hashes_Set() const;
    bool is_parent_presentation_node_hashes_Valid() const;

    qint32 getPresentationNodeType() const;
    void setPresentationNodeType(const qint32 &presentation_node_type);
    bool is_presentation_node_type_Set() const;
    bool is_presentation_node_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_display_style;
    bool m_display_style_isSet;
    bool m_display_style_isValid;

    QList<qint32> m_parent_presentation_node_hashes;
    bool m_parent_presentation_node_hashes_isSet;
    bool m_parent_presentation_node_hashes_isValid;

    qint32 m_presentation_node_type;
    bool m_presentation_node_type_isSet;
    bool m_presentation_node_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock)

#endif // OAIDestiny_Definitions_Presentation_DestinyPresentationChildBlock_H
