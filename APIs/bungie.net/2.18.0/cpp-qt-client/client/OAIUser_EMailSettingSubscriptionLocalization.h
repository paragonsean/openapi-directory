/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser_EMailSettingSubscriptionLocalization.h
 *
 * Localized text relevant to a given EMail setting in a given localization. Extra settings specifically for subscriptions.
 */

#ifndef OAIUser_EMailSettingSubscriptionLocalization_H
#define OAIUser_EMailSettingSubscriptionLocalization_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser_EMailSettingSubscriptionLocalization : public OAIObject {
public:
    OAIUser_EMailSettingSubscriptionLocalization();
    OAIUser_EMailSettingSubscriptionLocalization(QString json);
    ~OAIUser_EMailSettingSubscriptionLocalization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getKnownUserActionText() const;
    void setKnownUserActionText(const QString &known_user_action_text);
    bool is_known_user_action_text_Set() const;
    bool is_known_user_action_text_Valid() const;

    QString getRegisteredUserDescription() const;
    void setRegisteredUserDescription(const QString &registered_user_description);
    bool is_registered_user_description_Set() const;
    bool is_registered_user_description_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUnknownUserActionText() const;
    void setUnknownUserActionText(const QString &unknown_user_action_text);
    bool is_unknown_user_action_text_Set() const;
    bool is_unknown_user_action_text_Valid() const;

    QString getUnknownUserDescription() const;
    void setUnknownUserDescription(const QString &unknown_user_description);
    bool is_unknown_user_description_Set() const;
    bool is_unknown_user_description_Valid() const;

    QString getUnregisteredUserDescription() const;
    void setUnregisteredUserDescription(const QString &unregistered_user_description);
    bool is_unregistered_user_description_Set() const;
    bool is_unregistered_user_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_known_user_action_text;
    bool m_known_user_action_text_isSet;
    bool m_known_user_action_text_isValid;

    QString m_registered_user_description;
    bool m_registered_user_description_isSet;
    bool m_registered_user_description_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_unknown_user_action_text;
    bool m_unknown_user_action_text_isSet;
    bool m_unknown_user_action_text_isValid;

    QString m_unknown_user_description;
    bool m_unknown_user_description_isSet;
    bool m_unknown_user_description_isValid;

    QString m_unregistered_user_description;
    bool m_unregistered_user_description_isSet;
    bool m_unregistered_user_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser_EMailSettingSubscriptionLocalization)

#endif // OAIUser_EMailSettingSubscriptionLocalization_H
