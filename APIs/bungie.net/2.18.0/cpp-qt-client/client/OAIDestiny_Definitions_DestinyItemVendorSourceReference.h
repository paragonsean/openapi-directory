/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyItemVendorSourceReference.h
 *
 * Represents that a vendor could sell this item, and provides a quick link to that vendor and sale item.   Note that we do not and cannot make a guarantee that the vendor will ever *actually* sell this item, only that the Vendor has a definition that indicates it *could* be sold.   Note also that a vendor may sell the same item in multiple \&quot;ways\&quot;, which means there may be multiple vendorItemIndexes for a single Vendor hash.
 */

#ifndef OAIDestiny_Definitions_DestinyItemVendorSourceReference_H
#define OAIDestiny_Definitions_DestinyItemVendorSourceReference_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyItemVendorSourceReference : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyItemVendorSourceReference();
    OAIDestiny_Definitions_DestinyItemVendorSourceReference(QString json);
    ~OAIDestiny_Definitions_DestinyItemVendorSourceReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getVendorHash() const;
    void setVendorHash(const qint32 &vendor_hash);
    bool is_vendor_hash_Set() const;
    bool is_vendor_hash_Valid() const;

    QList<qint32> getVendorItemIndexes() const;
    void setVendorItemIndexes(const QList<qint32> &vendor_item_indexes);
    bool is_vendor_item_indexes_Set() const;
    bool is_vendor_item_indexes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_vendor_hash;
    bool m_vendor_hash_isSet;
    bool m_vendor_hash_isValid;

    QList<qint32> m_vendor_item_indexes;
    bool m_vendor_item_indexes_isSet;
    bool m_vendor_item_indexes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyItemVendorSourceReference)

#endif // OAIDestiny_Definitions_DestinyItemVendorSourceReference_H
