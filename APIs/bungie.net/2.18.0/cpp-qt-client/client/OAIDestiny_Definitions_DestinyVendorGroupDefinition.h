/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyVendorGroupDefinition.h
 *
 * BNet attempts to group vendors into similar collections. These groups aren&#39;t technically game canonical, but they are helpful for filtering vendors or showing them organized into a clean view on a webpage or app.  These definitions represent the groups we&#39;ve built. Unlike in Destiny 1, a Vendors&#39; group may change dynamically as the game state changes: thus, you will want to check DestinyVendorComponent responses to find a vendor&#39;s currently active Group (if you care).  Using this will let you group your vendors in your UI in a similar manner to how we will do grouping in the Companion.
 */

#ifndef OAIDestiny_Definitions_DestinyVendorGroupDefinition_H
#define OAIDestiny_Definitions_DestinyVendorGroupDefinition_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyVendorGroupDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyVendorGroupDefinition();
    OAIDestiny_Definitions_DestinyVendorGroupDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyVendorGroupDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategoryName() const;
    void setCategoryName(const QString &category_name);
    bool is_category_name_Set() const;
    bool is_category_name_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category_name;
    bool m_category_name_isSet;
    bool m_category_name_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyVendorGroupDefinition)

#endif // OAIDestiny_Definitions_DestinyVendorGroupDefinition_H
