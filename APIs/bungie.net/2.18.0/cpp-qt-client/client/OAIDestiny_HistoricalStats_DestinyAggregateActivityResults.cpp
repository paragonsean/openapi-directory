/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_HistoricalStats_DestinyAggregateActivityResults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::OAIDestiny_HistoricalStats_DestinyAggregateActivityResults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::OAIDestiny_HistoricalStats_DestinyAggregateActivityResults() {
    this->initializeModel();
}

OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::~OAIDestiny_HistoricalStats_DestinyAggregateActivityResults() {}

void OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::initializeModel() {

    m_activities_isSet = false;
    m_activities_isValid = false;
}

void OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::fromJsonObject(QJsonObject json) {

    m_activities_isValid = ::OpenAPI::fromJsonValue(m_activities, json[QString("activities")]);
    m_activities_isSet = !json[QString("activities")].isNull() && m_activities_isValid;
}

QString OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::asJsonObject() const {
    QJsonObject obj;
    if (m_activities.size() > 0) {
        obj.insert(QString("activities"), ::OpenAPI::toJsonValue(m_activities));
    }
    return obj;
}

QList<OAIDestiny_HistoricalStats_DestinyAggregateActivityStats> OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::getActivities() const {
    return m_activities;
}
void OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::setActivities(const QList<OAIDestiny_HistoricalStats_DestinyAggregateActivityStats> &activities) {
    m_activities = activities;
    m_activities_isSet = true;
}

bool OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::is_activities_Set() const{
    return m_activities_isSet;
}

bool OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::is_activities_Valid() const{
    return m_activities_isValid;
}

bool OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_HistoricalStats_DestinyAggregateActivityResults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
