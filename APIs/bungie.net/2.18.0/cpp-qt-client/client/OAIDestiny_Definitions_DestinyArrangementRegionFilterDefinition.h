/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition.h
 *
 * 
 */

#ifndef OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition_H
#define OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition_H

#include <QJsonObject>

#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition();
    OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, qint32> getArrangementIndexByStatValue() const;
    void setArrangementIndexByStatValue(const QMap<QString, qint32> &arrangement_index_by_stat_value);
    bool is_arrangement_index_by_stat_value_Set() const;
    bool is_arrangement_index_by_stat_value_Valid() const;

    qint32 getArtArrangementRegionHash() const;
    void setArtArrangementRegionHash(const qint32 &art_arrangement_region_hash);
    bool is_art_arrangement_region_hash_Set() const;
    bool is_art_arrangement_region_hash_Valid() const;

    qint32 getArtArrangementRegionIndex() const;
    void setArtArrangementRegionIndex(const qint32 &art_arrangement_region_index);
    bool is_art_arrangement_region_index_Set() const;
    bool is_art_arrangement_region_index_Valid() const;

    qint32 getStatHash() const;
    void setStatHash(const qint32 &stat_hash);
    bool is_stat_hash_Set() const;
    bool is_stat_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, qint32> m_arrangement_index_by_stat_value;
    bool m_arrangement_index_by_stat_value_isSet;
    bool m_arrangement_index_by_stat_value_isValid;

    qint32 m_art_arrangement_region_hash;
    bool m_art_arrangement_region_hash_isSet;
    bool m_art_arrangement_region_hash_isValid;

    qint32 m_art_arrangement_region_index;
    bool m_art_arrangement_region_index_isSet;
    bool m_art_arrangement_region_index_isValid;

    qint32 m_stat_hash;
    bool m_stat_hash_isSet;
    bool m_stat_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition)

#endif // OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition_H
