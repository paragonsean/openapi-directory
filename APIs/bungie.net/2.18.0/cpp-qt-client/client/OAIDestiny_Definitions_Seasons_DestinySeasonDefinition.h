/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Seasons_DestinySeasonDefinition.h
 *
 * Defines a canonical \&quot;Season\&quot; of Destiny: a range of a few months where the game highlights certain challenges, provides new loot, has new Clan-related rewards and celebrates various seasonal events.
 */

#ifndef OAIDestiny_Definitions_Seasons_DestinySeasonDefinition_H
#define OAIDestiny_Definitions_Seasons_DestinySeasonDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include "OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;
class OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition;

class OAIDestiny_Definitions_Seasons_DestinySeasonDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Seasons_DestinySeasonDefinition();
    OAIDestiny_Definitions_Seasons_DestinySeasonDefinition(QString json);
    ~OAIDestiny_Definitions_Seasons_DestinySeasonDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getArtifactItemHash() const;
    void setArtifactItemHash(const qint32 &artifact_item_hash);
    bool is_artifact_item_hash_Set() const;
    bool is_artifact_item_hash_Valid() const;

    QString getBackgroundImagePath() const;
    void setBackgroundImagePath(const QString &background_image_path);
    bool is_background_image_path_Set() const;
    bool is_background_image_path_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition getPreview() const;
    void setPreview(const OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition &preview);
    bool is_preview_Set() const;
    bool is_preview_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    qint32 getSealPresentationNodeHash() const;
    void setSealPresentationNodeHash(const qint32 &seal_presentation_node_hash);
    bool is_seal_presentation_node_hash_Set() const;
    bool is_seal_presentation_node_hash_Valid() const;

    qint32 getSeasonNumber() const;
    void setSeasonNumber(const qint32 &season_number);
    bool is_season_number_Set() const;
    bool is_season_number_Valid() const;

    qint32 getSeasonPassHash() const;
    void setSeasonPassHash(const qint32 &season_pass_hash);
    bool is_season_pass_hash_Set() const;
    bool is_season_pass_hash_Valid() const;

    qint32 getSeasonPassProgressionHash() const;
    void setSeasonPassProgressionHash(const qint32 &season_pass_progression_hash);
    bool is_season_pass_progression_hash_Set() const;
    bool is_season_pass_progression_hash_Valid() const;

    qint32 getSeasonalChallengesPresentationNodeHash() const;
    void setSeasonalChallengesPresentationNodeHash(const qint32 &seasonal_challenges_presentation_node_hash);
    bool is_seasonal_challenges_presentation_node_hash_Set() const;
    bool is_seasonal_challenges_presentation_node_hash_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_artifact_item_hash;
    bool m_artifact_item_hash_isSet;
    bool m_artifact_item_hash_isValid;

    QString m_background_image_path;
    bool m_background_image_path_isSet;
    bool m_background_image_path_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    OAIDestiny_Definitions_Seasons_DestinySeasonPreviewDefinition m_preview;
    bool m_preview_isSet;
    bool m_preview_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    qint32 m_seal_presentation_node_hash;
    bool m_seal_presentation_node_hash_isSet;
    bool m_seal_presentation_node_hash_isValid;

    qint32 m_season_number;
    bool m_season_number_isSet;
    bool m_season_number_isValid;

    qint32 m_season_pass_hash;
    bool m_season_pass_hash_isSet;
    bool m_season_pass_hash_isValid;

    qint32 m_season_pass_progression_hash;
    bool m_season_pass_progression_hash_isSet;
    bool m_season_pass_progression_hash_isValid;

    qint32 m_seasonal_challenges_presentation_node_hash;
    bool m_seasonal_challenges_presentation_node_hash_isSet;
    bool m_seasonal_challenges_presentation_node_hash_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Seasons_DestinySeasonDefinition)

#endif // OAIDestiny_Definitions_Seasons_DestinySeasonDefinition_H
