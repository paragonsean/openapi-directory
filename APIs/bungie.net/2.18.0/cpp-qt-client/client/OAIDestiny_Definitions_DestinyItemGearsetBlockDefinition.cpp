/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::~OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition() {}

void OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::initializeModel() {

    m_item_list_isSet = false;
    m_item_list_isValid = false;

    m_tracking_value_max_isSet = false;
    m_tracking_value_max_isValid = false;
}

void OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::fromJsonObject(QJsonObject json) {

    m_item_list_isValid = ::OpenAPI::fromJsonValue(m_item_list, json[QString("itemList")]);
    m_item_list_isSet = !json[QString("itemList")].isNull() && m_item_list_isValid;

    m_tracking_value_max_isValid = ::OpenAPI::fromJsonValue(m_tracking_value_max, json[QString("trackingValueMax")]);
    m_tracking_value_max_isSet = !json[QString("trackingValueMax")].isNull() && m_tracking_value_max_isValid;
}

QString OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_item_list.size() > 0) {
        obj.insert(QString("itemList"), ::OpenAPI::toJsonValue(m_item_list));
    }
    if (m_tracking_value_max_isSet) {
        obj.insert(QString("trackingValueMax"), ::OpenAPI::toJsonValue(m_tracking_value_max));
    }
    return obj;
}

QList<qint32> OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::getItemList() const {
    return m_item_list;
}
void OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::setItemList(const QList<qint32> &item_list) {
    m_item_list = item_list;
    m_item_list_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::is_item_list_Set() const{
    return m_item_list_isSet;
}

bool OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::is_item_list_Valid() const{
    return m_item_list_isValid;
}

qint32 OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::getTrackingValueMax() const {
    return m_tracking_value_max;
}
void OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::setTrackingValueMax(const qint32 &tracking_value_max) {
    m_tracking_value_max = tracking_value_max;
    m_tracking_value_max_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::is_tracking_value_max_Set() const{
    return m_tracking_value_max_isSet;
}

bool OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::is_tracking_value_max_Valid() const{
    return m_tracking_value_max_isValid;
}

bool OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_value_max_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_DestinyItemGearsetBlockDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
