/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Items_DestinyParentItemOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Items_DestinyParentItemOverride::OAIDestiny_Definitions_Items_DestinyParentItemOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Items_DestinyParentItemOverride::OAIDestiny_Definitions_Items_DestinyParentItemOverride() {
    this->initializeModel();
}

OAIDestiny_Definitions_Items_DestinyParentItemOverride::~OAIDestiny_Definitions_Items_DestinyParentItemOverride() {}

void OAIDestiny_Definitions_Items_DestinyParentItemOverride::initializeModel() {

    m_additional_equip_requirements_display_strings_isSet = false;
    m_additional_equip_requirements_display_strings_isValid = false;

    m_pip_icon_isSet = false;
    m_pip_icon_isValid = false;
}

void OAIDestiny_Definitions_Items_DestinyParentItemOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Items_DestinyParentItemOverride::fromJsonObject(QJsonObject json) {

    m_additional_equip_requirements_display_strings_isValid = ::OpenAPI::fromJsonValue(m_additional_equip_requirements_display_strings, json[QString("additionalEquipRequirementsDisplayStrings")]);
    m_additional_equip_requirements_display_strings_isSet = !json[QString("additionalEquipRequirementsDisplayStrings")].isNull() && m_additional_equip_requirements_display_strings_isValid;

    m_pip_icon_isValid = ::OpenAPI::fromJsonValue(m_pip_icon, json[QString("pipIcon")]);
    m_pip_icon_isSet = !json[QString("pipIcon")].isNull() && m_pip_icon_isValid;
}

QString OAIDestiny_Definitions_Items_DestinyParentItemOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Items_DestinyParentItemOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_equip_requirements_display_strings.size() > 0) {
        obj.insert(QString("additionalEquipRequirementsDisplayStrings"), ::OpenAPI::toJsonValue(m_additional_equip_requirements_display_strings));
    }
    if (m_pip_icon_isSet) {
        obj.insert(QString("pipIcon"), ::OpenAPI::toJsonValue(m_pip_icon));
    }
    return obj;
}

QList<QString> OAIDestiny_Definitions_Items_DestinyParentItemOverride::getAdditionalEquipRequirementsDisplayStrings() const {
    return m_additional_equip_requirements_display_strings;
}
void OAIDestiny_Definitions_Items_DestinyParentItemOverride::setAdditionalEquipRequirementsDisplayStrings(const QList<QString> &additional_equip_requirements_display_strings) {
    m_additional_equip_requirements_display_strings = additional_equip_requirements_display_strings;
    m_additional_equip_requirements_display_strings_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyParentItemOverride::is_additional_equip_requirements_display_strings_Set() const{
    return m_additional_equip_requirements_display_strings_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyParentItemOverride::is_additional_equip_requirements_display_strings_Valid() const{
    return m_additional_equip_requirements_display_strings_isValid;
}

QString OAIDestiny_Definitions_Items_DestinyParentItemOverride::getPipIcon() const {
    return m_pip_icon;
}
void OAIDestiny_Definitions_Items_DestinyParentItemOverride::setPipIcon(const QString &pip_icon) {
    m_pip_icon = pip_icon;
    m_pip_icon_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyParentItemOverride::is_pip_icon_Set() const{
    return m_pip_icon_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyParentItemOverride::is_pip_icon_Valid() const{
    return m_pip_icon_isValid;
}

bool OAIDestiny_Definitions_Items_DestinyParentItemOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_equip_requirements_display_strings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pip_icon_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Items_DestinyParentItemOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
