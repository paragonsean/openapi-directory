/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_DestinyItemStatBlockDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_DestinyItemStatBlockDefinition::OAIDestiny_Definitions_DestinyItemStatBlockDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_DestinyItemStatBlockDefinition::OAIDestiny_Definitions_DestinyItemStatBlockDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_DestinyItemStatBlockDefinition::~OAIDestiny_Definitions_DestinyItemStatBlockDefinition() {}

void OAIDestiny_Definitions_DestinyItemStatBlockDefinition::initializeModel() {

    m_disable_primary_stat_display_isSet = false;
    m_disable_primary_stat_display_isValid = false;

    m_has_displayable_stats_isSet = false;
    m_has_displayable_stats_isValid = false;

    m_primary_base_stat_hash_isSet = false;
    m_primary_base_stat_hash_isValid = false;

    m_stat_group_hash_isSet = false;
    m_stat_group_hash_isValid = false;

    m_stats_isSet = false;
    m_stats_isValid = false;
}

void OAIDestiny_Definitions_DestinyItemStatBlockDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_DestinyItemStatBlockDefinition::fromJsonObject(QJsonObject json) {

    m_disable_primary_stat_display_isValid = ::OpenAPI::fromJsonValue(m_disable_primary_stat_display, json[QString("disablePrimaryStatDisplay")]);
    m_disable_primary_stat_display_isSet = !json[QString("disablePrimaryStatDisplay")].isNull() && m_disable_primary_stat_display_isValid;

    m_has_displayable_stats_isValid = ::OpenAPI::fromJsonValue(m_has_displayable_stats, json[QString("hasDisplayableStats")]);
    m_has_displayable_stats_isSet = !json[QString("hasDisplayableStats")].isNull() && m_has_displayable_stats_isValid;

    m_primary_base_stat_hash_isValid = ::OpenAPI::fromJsonValue(m_primary_base_stat_hash, json[QString("primaryBaseStatHash")]);
    m_primary_base_stat_hash_isSet = !json[QString("primaryBaseStatHash")].isNull() && m_primary_base_stat_hash_isValid;

    m_stat_group_hash_isValid = ::OpenAPI::fromJsonValue(m_stat_group_hash, json[QString("statGroupHash")]);
    m_stat_group_hash_isSet = !json[QString("statGroupHash")].isNull() && m_stat_group_hash_isValid;

    m_stats_isValid = ::OpenAPI::fromJsonValue(m_stats, json[QString("stats")]);
    m_stats_isSet = !json[QString("stats")].isNull() && m_stats_isValid;
}

QString OAIDestiny_Definitions_DestinyItemStatBlockDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_DestinyItemStatBlockDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_disable_primary_stat_display_isSet) {
        obj.insert(QString("disablePrimaryStatDisplay"), ::OpenAPI::toJsonValue(m_disable_primary_stat_display));
    }
    if (m_has_displayable_stats_isSet) {
        obj.insert(QString("hasDisplayableStats"), ::OpenAPI::toJsonValue(m_has_displayable_stats));
    }
    if (m_primary_base_stat_hash_isSet) {
        obj.insert(QString("primaryBaseStatHash"), ::OpenAPI::toJsonValue(m_primary_base_stat_hash));
    }
    if (m_stat_group_hash_isSet) {
        obj.insert(QString("statGroupHash"), ::OpenAPI::toJsonValue(m_stat_group_hash));
    }
    if (m_stats.size() > 0) {
        obj.insert(QString("stats"), ::OpenAPI::toJsonValue(m_stats));
    }
    return obj;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::isDisablePrimaryStatDisplay() const {
    return m_disable_primary_stat_display;
}
void OAIDestiny_Definitions_DestinyItemStatBlockDefinition::setDisablePrimaryStatDisplay(const bool &disable_primary_stat_display) {
    m_disable_primary_stat_display = disable_primary_stat_display;
    m_disable_primary_stat_display_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_disable_primary_stat_display_Set() const{
    return m_disable_primary_stat_display_isSet;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_disable_primary_stat_display_Valid() const{
    return m_disable_primary_stat_display_isValid;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::isHasDisplayableStats() const {
    return m_has_displayable_stats;
}
void OAIDestiny_Definitions_DestinyItemStatBlockDefinition::setHasDisplayableStats(const bool &has_displayable_stats) {
    m_has_displayable_stats = has_displayable_stats;
    m_has_displayable_stats_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_has_displayable_stats_Set() const{
    return m_has_displayable_stats_isSet;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_has_displayable_stats_Valid() const{
    return m_has_displayable_stats_isValid;
}

qint32 OAIDestiny_Definitions_DestinyItemStatBlockDefinition::getPrimaryBaseStatHash() const {
    return m_primary_base_stat_hash;
}
void OAIDestiny_Definitions_DestinyItemStatBlockDefinition::setPrimaryBaseStatHash(const qint32 &primary_base_stat_hash) {
    m_primary_base_stat_hash = primary_base_stat_hash;
    m_primary_base_stat_hash_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_primary_base_stat_hash_Set() const{
    return m_primary_base_stat_hash_isSet;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_primary_base_stat_hash_Valid() const{
    return m_primary_base_stat_hash_isValid;
}

qint32 OAIDestiny_Definitions_DestinyItemStatBlockDefinition::getStatGroupHash() const {
    return m_stat_group_hash;
}
void OAIDestiny_Definitions_DestinyItemStatBlockDefinition::setStatGroupHash(const qint32 &stat_group_hash) {
    m_stat_group_hash = stat_group_hash;
    m_stat_group_hash_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_stat_group_hash_Set() const{
    return m_stat_group_hash_isSet;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_stat_group_hash_Valid() const{
    return m_stat_group_hash_isValid;
}

QMap<QString, OAIDestiny_Definitions_DestinyInventoryItemStatDefinition> OAIDestiny_Definitions_DestinyItemStatBlockDefinition::getStats() const {
    return m_stats;
}
void OAIDestiny_Definitions_DestinyItemStatBlockDefinition::setStats(const QMap<QString, OAIDestiny_Definitions_DestinyInventoryItemStatDefinition> &stats) {
    m_stats = stats;
    m_stats_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_stats_Set() const{
    return m_stats_isSet;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::is_stats_Valid() const{
    return m_stats_isValid;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disable_primary_stat_display_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_displayable_stats_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_base_stat_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stat_group_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stats.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_DestinyItemStatBlockDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
