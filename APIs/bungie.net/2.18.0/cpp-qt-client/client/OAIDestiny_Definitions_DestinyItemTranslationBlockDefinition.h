/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition.h
 *
 * This Block defines the rendering data associated with the item, if any.
 */

#ifndef OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition_H
#define OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_DestinyGearArtArrangementReference.h"
#include "OAIDestiny_DyeReference.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_DestinyGearArtArrangementReference;
class OAIDestiny_DyeReference;

class OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition();
    OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDestiny_Definitions_DestinyGearArtArrangementReference> getArrangements() const;
    void setArrangements(const QList<OAIDestiny_Definitions_DestinyGearArtArrangementReference> &arrangements);
    bool is_arrangements_Set() const;
    bool is_arrangements_Valid() const;

    QList<OAIDestiny_DyeReference> getCustomDyes() const;
    void setCustomDyes(const QList<OAIDestiny_DyeReference> &custom_dyes);
    bool is_custom_dyes_Set() const;
    bool is_custom_dyes_Valid() const;

    QList<OAIDestiny_DyeReference> getDefaultDyes() const;
    void setDefaultDyes(const QList<OAIDestiny_DyeReference> &default_dyes);
    bool is_default_dyes_Set() const;
    bool is_default_dyes_Valid() const;

    bool isHasGeometry() const;
    void setHasGeometry(const bool &has_geometry);
    bool is_has_geometry_Set() const;
    bool is_has_geometry_Valid() const;

    QList<OAIDestiny_DyeReference> getLockedDyes() const;
    void setLockedDyes(const QList<OAIDestiny_DyeReference> &locked_dyes);
    bool is_locked_dyes_Set() const;
    bool is_locked_dyes_Valid() const;

    qint32 getWeaponPatternHash() const;
    void setWeaponPatternHash(const qint32 &weapon_pattern_hash);
    bool is_weapon_pattern_hash_Set() const;
    bool is_weapon_pattern_hash_Valid() const;

    QString getWeaponPatternIdentifier() const;
    void setWeaponPatternIdentifier(const QString &weapon_pattern_identifier);
    bool is_weapon_pattern_identifier_Set() const;
    bool is_weapon_pattern_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDestiny_Definitions_DestinyGearArtArrangementReference> m_arrangements;
    bool m_arrangements_isSet;
    bool m_arrangements_isValid;

    QList<OAIDestiny_DyeReference> m_custom_dyes;
    bool m_custom_dyes_isSet;
    bool m_custom_dyes_isValid;

    QList<OAIDestiny_DyeReference> m_default_dyes;
    bool m_default_dyes_isSet;
    bool m_default_dyes_isValid;

    bool m_has_geometry;
    bool m_has_geometry_isSet;
    bool m_has_geometry_isValid;

    QList<OAIDestiny_DyeReference> m_locked_dyes;
    bool m_locked_dyes_isSet;
    bool m_locked_dyes_isValid;

    qint32 m_weapon_pattern_hash;
    bool m_weapon_pattern_hash_isSet;
    bool m_weapon_pattern_hash_isValid;

    QString m_weapon_pattern_identifier;
    bool m_weapon_pattern_identifier_isSet;
    bool m_weapon_pattern_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition)

#endif // OAIDestiny_Definitions_DestinyItemTranslationBlockDefinition_H
