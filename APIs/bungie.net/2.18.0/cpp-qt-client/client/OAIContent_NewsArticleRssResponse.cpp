/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContent_NewsArticleRssResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContent_NewsArticleRssResponse::OAIContent_NewsArticleRssResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContent_NewsArticleRssResponse::OAIContent_NewsArticleRssResponse() {
    this->initializeModel();
}

OAIContent_NewsArticleRssResponse::~OAIContent_NewsArticleRssResponse() {}

void OAIContent_NewsArticleRssResponse::initializeModel() {

    m_category_filter_isSet = false;
    m_category_filter_isValid = false;

    m_current_pagination_token_isSet = false;
    m_current_pagination_token_isValid = false;

    m_news_articles_isSet = false;
    m_news_articles_isValid = false;

    m_next_pagination_token_isSet = false;
    m_next_pagination_token_isValid = false;

    m_result_count_this_page_isSet = false;
    m_result_count_this_page_isValid = false;
}

void OAIContent_NewsArticleRssResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContent_NewsArticleRssResponse::fromJsonObject(QJsonObject json) {

    m_category_filter_isValid = ::OpenAPI::fromJsonValue(m_category_filter, json[QString("CategoryFilter")]);
    m_category_filter_isSet = !json[QString("CategoryFilter")].isNull() && m_category_filter_isValid;

    m_current_pagination_token_isValid = ::OpenAPI::fromJsonValue(m_current_pagination_token, json[QString("CurrentPaginationToken")]);
    m_current_pagination_token_isSet = !json[QString("CurrentPaginationToken")].isNull() && m_current_pagination_token_isValid;

    m_news_articles_isValid = ::OpenAPI::fromJsonValue(m_news_articles, json[QString("NewsArticles")]);
    m_news_articles_isSet = !json[QString("NewsArticles")].isNull() && m_news_articles_isValid;

    m_next_pagination_token_isValid = ::OpenAPI::fromJsonValue(m_next_pagination_token, json[QString("NextPaginationToken")]);
    m_next_pagination_token_isSet = !json[QString("NextPaginationToken")].isNull() && m_next_pagination_token_isValid;

    m_result_count_this_page_isValid = ::OpenAPI::fromJsonValue(m_result_count_this_page, json[QString("ResultCountThisPage")]);
    m_result_count_this_page_isSet = !json[QString("ResultCountThisPage")].isNull() && m_result_count_this_page_isValid;
}

QString OAIContent_NewsArticleRssResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContent_NewsArticleRssResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_category_filter_isSet) {
        obj.insert(QString("CategoryFilter"), ::OpenAPI::toJsonValue(m_category_filter));
    }
    if (m_current_pagination_token_isSet) {
        obj.insert(QString("CurrentPaginationToken"), ::OpenAPI::toJsonValue(m_current_pagination_token));
    }
    if (m_news_articles.size() > 0) {
        obj.insert(QString("NewsArticles"), ::OpenAPI::toJsonValue(m_news_articles));
    }
    if (m_next_pagination_token_isSet) {
        obj.insert(QString("NextPaginationToken"), ::OpenAPI::toJsonValue(m_next_pagination_token));
    }
    if (m_result_count_this_page_isSet) {
        obj.insert(QString("ResultCountThisPage"), ::OpenAPI::toJsonValue(m_result_count_this_page));
    }
    return obj;
}

QString OAIContent_NewsArticleRssResponse::getCategoryFilter() const {
    return m_category_filter;
}
void OAIContent_NewsArticleRssResponse::setCategoryFilter(const QString &category_filter) {
    m_category_filter = category_filter;
    m_category_filter_isSet = true;
}

bool OAIContent_NewsArticleRssResponse::is_category_filter_Set() const{
    return m_category_filter_isSet;
}

bool OAIContent_NewsArticleRssResponse::is_category_filter_Valid() const{
    return m_category_filter_isValid;
}

qint32 OAIContent_NewsArticleRssResponse::getCurrentPaginationToken() const {
    return m_current_pagination_token;
}
void OAIContent_NewsArticleRssResponse::setCurrentPaginationToken(const qint32 &current_pagination_token) {
    m_current_pagination_token = current_pagination_token;
    m_current_pagination_token_isSet = true;
}

bool OAIContent_NewsArticleRssResponse::is_current_pagination_token_Set() const{
    return m_current_pagination_token_isSet;
}

bool OAIContent_NewsArticleRssResponse::is_current_pagination_token_Valid() const{
    return m_current_pagination_token_isValid;
}

QList<OAIContent_NewsArticleRssItem> OAIContent_NewsArticleRssResponse::getNewsArticles() const {
    return m_news_articles;
}
void OAIContent_NewsArticleRssResponse::setNewsArticles(const QList<OAIContent_NewsArticleRssItem> &news_articles) {
    m_news_articles = news_articles;
    m_news_articles_isSet = true;
}

bool OAIContent_NewsArticleRssResponse::is_news_articles_Set() const{
    return m_news_articles_isSet;
}

bool OAIContent_NewsArticleRssResponse::is_news_articles_Valid() const{
    return m_news_articles_isValid;
}

qint32 OAIContent_NewsArticleRssResponse::getNextPaginationToken() const {
    return m_next_pagination_token;
}
void OAIContent_NewsArticleRssResponse::setNextPaginationToken(const qint32 &next_pagination_token) {
    m_next_pagination_token = next_pagination_token;
    m_next_pagination_token_isSet = true;
}

bool OAIContent_NewsArticleRssResponse::is_next_pagination_token_Set() const{
    return m_next_pagination_token_isSet;
}

bool OAIContent_NewsArticleRssResponse::is_next_pagination_token_Valid() const{
    return m_next_pagination_token_isValid;
}

qint32 OAIContent_NewsArticleRssResponse::getResultCountThisPage() const {
    return m_result_count_this_page;
}
void OAIContent_NewsArticleRssResponse::setResultCountThisPage(const qint32 &result_count_this_page) {
    m_result_count_this_page = result_count_this_page;
    m_result_count_this_page_isSet = true;
}

bool OAIContent_NewsArticleRssResponse::is_result_count_this_page_Set() const{
    return m_result_count_this_page_isSet;
}

bool OAIContent_NewsArticleRssResponse::is_result_count_this_page_Valid() const{
    return m_result_count_this_page_isValid;
}

bool OAIContent_NewsArticleRssResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_pagination_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_news_articles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_pagination_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_count_this_page_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContent_NewsArticleRssResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
