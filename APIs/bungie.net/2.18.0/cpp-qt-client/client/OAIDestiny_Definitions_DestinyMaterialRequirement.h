/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyMaterialRequirement.h
 *
 * Many actions relating to items require you to expend materials: - Activating a talent node - Inserting a plug into a socket The items will refer to material requirements by a materialRequirementsHash in these cases, and this is the definition for those requirements in terms of the item required, how much of it is required and other interesting info. This is one of the rare/strange times where a single contract class is used both in definitions *and* in live data response contracts. I&#39;m not sure yet whether I regret that.
 */

#ifndef OAIDestiny_Definitions_DestinyMaterialRequirement_H
#define OAIDestiny_Definitions_DestinyMaterialRequirement_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyMaterialRequirement : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyMaterialRequirement();
    OAIDestiny_Definitions_DestinyMaterialRequirement(QString json);
    ~OAIDestiny_Definitions_DestinyMaterialRequirement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    bool isCountIsConstant() const;
    void setCountIsConstant(const bool &count_is_constant);
    bool is_count_is_constant_Set() const;
    bool is_count_is_constant_Valid() const;

    bool isDeleteOnAction() const;
    void setDeleteOnAction(const bool &delete_on_action);
    bool is_delete_on_action_Set() const;
    bool is_delete_on_action_Valid() const;

    qint32 getItemHash() const;
    void setItemHash(const qint32 &item_hash);
    bool is_item_hash_Set() const;
    bool is_item_hash_Valid() const;

    bool isOmitFromRequirements() const;
    void setOmitFromRequirements(const bool &omit_from_requirements);
    bool is_omit_from_requirements_Set() const;
    bool is_omit_from_requirements_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    bool m_count_is_constant;
    bool m_count_is_constant_isSet;
    bool m_count_is_constant_isValid;

    bool m_delete_on_action;
    bool m_delete_on_action_isSet;
    bool m_delete_on_action_isValid;

    qint32 m_item_hash;
    bool m_item_hash_isSet;
    bool m_item_hash_isValid;

    bool m_omit_from_requirements;
    bool m_omit_from_requirements_isSet;
    bool m_omit_from_requirements_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyMaterialRequirement)

#endif // OAIDestiny_Definitions_DestinyMaterialRequirement_H
