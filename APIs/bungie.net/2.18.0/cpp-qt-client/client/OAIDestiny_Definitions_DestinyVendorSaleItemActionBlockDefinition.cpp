/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::~OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition() {}

void OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::initializeModel() {

    m_execute_seconds_isSet = false;
    m_execute_seconds_isValid = false;

    m_is_positive_isSet = false;
    m_is_positive_isValid = false;
}

void OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::fromJsonObject(QJsonObject json) {

    m_execute_seconds_isValid = ::OpenAPI::fromJsonValue(m_execute_seconds, json[QString("executeSeconds")]);
    m_execute_seconds_isSet = !json[QString("executeSeconds")].isNull() && m_execute_seconds_isValid;

    m_is_positive_isValid = ::OpenAPI::fromJsonValue(m_is_positive, json[QString("isPositive")]);
    m_is_positive_isSet = !json[QString("isPositive")].isNull() && m_is_positive_isValid;
}

QString OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_execute_seconds_isSet) {
        obj.insert(QString("executeSeconds"), ::OpenAPI::toJsonValue(m_execute_seconds));
    }
    if (m_is_positive_isSet) {
        obj.insert(QString("isPositive"), ::OpenAPI::toJsonValue(m_is_positive));
    }
    return obj;
}

float OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::getExecuteSeconds() const {
    return m_execute_seconds;
}
void OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::setExecuteSeconds(const float &execute_seconds) {
    m_execute_seconds = execute_seconds;
    m_execute_seconds_isSet = true;
}

bool OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::is_execute_seconds_Set() const{
    return m_execute_seconds_isSet;
}

bool OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::is_execute_seconds_Valid() const{
    return m_execute_seconds_isValid;
}

bool OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::isIsPositive() const {
    return m_is_positive;
}
void OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::setIsPositive(const bool &is_positive) {
    m_is_positive = is_positive;
    m_is_positive_isSet = true;
}

bool OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::is_is_positive_Set() const{
    return m_is_positive_isSet;
}

bool OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::is_is_positive_Valid() const{
    return m_is_positive_isValid;
}

bool OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_execute_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_positive_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_DestinyVendorSaleItemActionBlockDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
