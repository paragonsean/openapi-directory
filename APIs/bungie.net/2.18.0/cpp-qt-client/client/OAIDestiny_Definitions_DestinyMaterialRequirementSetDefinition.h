/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition.h
 *
 * Represent a set of material requirements: Items that either need to be owned or need to be consumed in order to perform an action.  A variety of other entities refer to these as gatekeepers and payments for actions that can be performed in game.
 */

#ifndef OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition_H
#define OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_DestinyMaterialRequirement.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_DestinyMaterialRequirement;

class OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition();
    OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QList<OAIDestiny_Definitions_DestinyMaterialRequirement> getMaterials() const;
    void setMaterials(const QList<OAIDestiny_Definitions_DestinyMaterialRequirement> &materials);
    bool is_materials_Set() const;
    bool is_materials_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QList<OAIDestiny_Definitions_DestinyMaterialRequirement> m_materials;
    bool m_materials_isSet;
    bool m_materials_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition)

#endif // OAIDestiny_Definitions_DestinyMaterialRequirementSetDefinition_H
