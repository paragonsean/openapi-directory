/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchema91.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchema91::OAISchema91(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchema91::OAISchema91() {
    this->initializeModel();
}

OAISchema91::~OAISchema91() {}

void OAISchema91::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISchema91::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISchema91::fromJson(QString jsonString) {
    
    if ( jsonString.compare(QString::number(0), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema91::_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(1), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema91::_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(2), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema91::_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(4), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema91::_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(8), Qt::CaseInsensitive) == 0) {
        m_value = eOAISchema91::_8;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISchema91::fromJsonValue(QJsonValue json) {
m_value = static_cast<eOAISchema91>(json.toInt());
}

QString OAISchema91::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISchema91::_0:
            val = QString::number(0);
            break;
        case eOAISchema91::_1:
            val = QString::number(1);
            break;
        case eOAISchema91::_2:
            val = QString::number(2);
            break;
        case eOAISchema91::_4:
            val = QString::number(4);
            break;
        case eOAISchema91::_8:
            val = QString::number(8);
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISchema91::asJsonValue() const {
    
    return QJsonValue(static_cast<int>(m_value));
}


OAISchema91::eOAISchema91 OAISchema91::getValue() const {
    return m_value;
}

void OAISchema91::setValue(const OAISchema91::eOAISchema91& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISchema91::isSet() const {
    
    return m_value_isSet;
}

bool OAISchema91::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
