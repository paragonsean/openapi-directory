/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition.h
 *
 * By public demand, Checklists are loose sets of \&quot;things to do/things you have done\&quot; in Destiny that we were actually able to track. They include easter eggs you find in the world, unique chests you unlock, and other such data where the first time you do it is significant enough to be tracked, and you have the potential to \&quot;get them all\&quot;.  These may be account-wide, or may be per character. The status of these will be returned in related \&quot;Checklist\&quot; data coming down from API requests such as GetProfile or GetCharacter.  Generally speaking, the items in a checklist can be completed in any order: we return an ordered list which only implies the way we are showing them in our own UI, and you can feel free to alter it as you wish.  Note that, in the future, there will be something resembling the old D1 Record Books in at least some vague form. When that is created, it may be that it will supercede much or all of this Checklist data. It remains to be seen if that will be the case, so for now assume that the Checklists will still exist even after the release of D2: Forsaken.
 */

#ifndef OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition_H
#define OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition.h"
#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;
class OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition;

class OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition();
    OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition(QString json);
    ~OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    QList<OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition> getEntries() const;
    void setEntries(const QList<OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition> &entries);
    bool is_entries_Set() const;
    bool is_entries_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    qint32 getScope() const;
    void setScope(const qint32 &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QString getViewActionString() const;
    void setViewActionString(const QString &view_action_string);
    bool is_view_action_string_Set() const;
    bool is_view_action_string_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    QList<OAIDestiny_Definitions_Checklists_DestinyChecklistEntryDefinition> m_entries;
    bool m_entries_isSet;
    bool m_entries_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    qint32 m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QString m_view_action_string;
    bool m_view_action_string_isSet;
    bool m_view_action_string_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition)

#endif // OAIDestiny_Definitions_Checklists_DestinyChecklistDefinition_H
