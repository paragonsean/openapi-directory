/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Activities_DestinyPublicActivityStatus.h
 *
 * Represents the public-facing status of an activity: any data about what is currently active in the Activity, regardless of an individual character&#39;s progress in it.
 */

#ifndef OAIDestiny_Activities_DestinyPublicActivityStatus_H
#define OAIDestiny_Activities_DestinyPublicActivityStatus_H

#include <QJsonObject>

#include "OAIDestiny_DestinyItemQuantity.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_DestinyItemQuantity;

class OAIDestiny_Activities_DestinyPublicActivityStatus : public OAIObject {
public:
    OAIDestiny_Activities_DestinyPublicActivityStatus();
    OAIDestiny_Activities_DestinyPublicActivityStatus(QString json);
    ~OAIDestiny_Activities_DestinyPublicActivityStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint32> getChallengeObjectiveHashes() const;
    void setChallengeObjectiveHashes(const QList<qint32> &challenge_objective_hashes);
    bool is_challenge_objective_hashes_Set() const;
    bool is_challenge_objective_hashes_Valid() const;

    QList<qint32> getModifierHashes() const;
    void setModifierHashes(const QList<qint32> &modifier_hashes);
    bool is_modifier_hashes_Set() const;
    bool is_modifier_hashes_Valid() const;

    QList<OAIDestiny_DestinyItemQuantity> getRewardTooltipItems() const;
    void setRewardTooltipItems(const QList<OAIDestiny_DestinyItemQuantity> &reward_tooltip_items);
    bool is_reward_tooltip_items_Set() const;
    bool is_reward_tooltip_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint32> m_challenge_objective_hashes;
    bool m_challenge_objective_hashes_isSet;
    bool m_challenge_objective_hashes_isValid;

    QList<qint32> m_modifier_hashes;
    bool m_modifier_hashes_isSet;
    bool m_modifier_hashes_isValid;

    QList<OAIDestiny_DestinyItemQuantity> m_reward_tooltip_items;
    bool m_reward_tooltip_items_isSet;
    bool m_reward_tooltip_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Activities_DestinyPublicActivityStatus)

#endif // OAIDestiny_Activities_DestinyPublicActivityStatus_H
