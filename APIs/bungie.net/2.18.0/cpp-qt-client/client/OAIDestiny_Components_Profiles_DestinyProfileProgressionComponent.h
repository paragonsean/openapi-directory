/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent.h
 *
 * The set of progression-related information that applies at a Profile-wide level for your Destiny experience. This differs from the Jimi Hendrix Experience because there&#39;s less guitars on fire. Yet. #spoileralert?  This will include information such as Checklist info.
 */

#ifndef OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent_H
#define OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent_H

#include <QJsonObject>

#include "OAIDestiny_Artifacts_DestinyArtifactProfileScoped.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Artifacts_DestinyArtifactProfileScoped;

class OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent : public OAIObject {
public:
    OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent();
    OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent(QString json);
    ~OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QMap<QString, bool>> getChecklists() const;
    void setChecklists(const QMap<QString, QMap<QString, bool>> &checklists);
    bool is_checklists_Set() const;
    bool is_checklists_Valid() const;

    OAIDestiny_Artifacts_DestinyArtifactProfileScoped getSeasonalArtifact() const;
    void setSeasonalArtifact(const OAIDestiny_Artifacts_DestinyArtifactProfileScoped &seasonal_artifact);
    bool is_seasonal_artifact_Set() const;
    bool is_seasonal_artifact_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QMap<QString, bool>> m_checklists;
    bool m_checklists_isSet;
    bool m_checklists_isValid;

    OAIDestiny_Artifacts_DestinyArtifactProfileScoped m_seasonal_artifact;
    bool m_seasonal_artifact_isSet;
    bool m_seasonal_artifact_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent)

#endif // OAIDestiny_Components_Profiles_DestinyProfileProgressionComponent_H
