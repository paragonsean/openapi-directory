/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition.h
 *
 * Represents a \&quot;raw\&quot; investment stat, before calculated stats are calculated and before any DestinyStatGroupDefinition is applied to transform the stat into something closer to what you see in-game.  Because these won&#39;t match what you see in-game, consider carefully whether you really want to use these stats. I have left them in case someone can do something useful or interesting with the pre-processed statistics.
 */

#ifndef OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition_H
#define OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition();
    OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsConditionallyActive() const;
    void setIsConditionallyActive(const bool &is_conditionally_active);
    bool is_is_conditionally_active_Set() const;
    bool is_is_conditionally_active_Valid() const;

    qint32 getStatTypeHash() const;
    void setStatTypeHash(const qint32 &stat_type_hash);
    bool is_stat_type_hash_Set() const;
    bool is_stat_type_hash_Valid() const;

    qint32 getValue() const;
    void setValue(const qint32 &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_conditionally_active;
    bool m_is_conditionally_active_isSet;
    bool m_is_conditionally_active_isValid;

    qint32 m_stat_type_hash;
    bool m_stat_type_hash_isSet;
    bool m_stat_type_hash_isValid;

    qint32 m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition)

#endif // OAIDestiny_Definitions_DestinyItemInvestmentStatDefinition_H
