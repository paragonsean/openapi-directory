/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Requests_DestinyItemTransferRequest.h
 *
 * 
 */

#ifndef OAIDestiny_Requests_DestinyItemTransferRequest_H
#define OAIDestiny_Requests_DestinyItemTransferRequest_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Requests_DestinyItemTransferRequest : public OAIObject {
public:
    OAIDestiny_Requests_DestinyItemTransferRequest();
    OAIDestiny_Requests_DestinyItemTransferRequest(QString json);
    ~OAIDestiny_Requests_DestinyItemTransferRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCharacterId() const;
    void setCharacterId(const qint64 &character_id);
    bool is_character_id_Set() const;
    bool is_character_id_Valid() const;

    qint64 getItemId() const;
    void setItemId(const qint64 &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    qint32 getItemReferenceHash() const;
    void setItemReferenceHash(const qint32 &item_reference_hash);
    bool is_item_reference_hash_Set() const;
    bool is_item_reference_hash_Valid() const;

    qint32 getMembershipType() const;
    void setMembershipType(const qint32 &membership_type);
    bool is_membership_type_Set() const;
    bool is_membership_type_Valid() const;

    qint32 getStackSize() const;
    void setStackSize(const qint32 &stack_size);
    bool is_stack_size_Set() const;
    bool is_stack_size_Valid() const;

    bool isTransferToVault() const;
    void setTransferToVault(const bool &transfer_to_vault);
    bool is_transfer_to_vault_Set() const;
    bool is_transfer_to_vault_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_character_id;
    bool m_character_id_isSet;
    bool m_character_id_isValid;

    qint64 m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    qint32 m_item_reference_hash;
    bool m_item_reference_hash_isSet;
    bool m_item_reference_hash_isValid;

    qint32 m_membership_type;
    bool m_membership_type_isSet;
    bool m_membership_type_isValid;

    qint32 m_stack_size;
    bool m_stack_size_isSet;
    bool m_stack_size_isValid;

    bool m_transfer_to_vault;
    bool m_transfer_to_vault_isSet;
    bool m_transfer_to_vault_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Requests_DestinyItemTransferRequest)

#endif // OAIDestiny_Requests_DestinyItemTransferRequest_H
