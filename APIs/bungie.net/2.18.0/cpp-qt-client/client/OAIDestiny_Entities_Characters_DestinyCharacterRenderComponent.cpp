/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent() {
    this->initializeModel();
}

OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::~OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent() {}

void OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::initializeModel() {

    m_custom_dyes_isSet = false;
    m_custom_dyes_isValid = false;

    m_customization_isSet = false;
    m_customization_isValid = false;

    m_peer_view_isSet = false;
    m_peer_view_isValid = false;
}

void OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::fromJsonObject(QJsonObject json) {

    m_custom_dyes_isValid = ::OpenAPI::fromJsonValue(m_custom_dyes, json[QString("customDyes")]);
    m_custom_dyes_isSet = !json[QString("customDyes")].isNull() && m_custom_dyes_isValid;

    m_customization_isValid = ::OpenAPI::fromJsonValue(m_customization, json[QString("customization")]);
    m_customization_isSet = !json[QString("customization")].isNull() && m_customization_isValid;

    m_peer_view_isValid = ::OpenAPI::fromJsonValue(m_peer_view, json[QString("peerView")]);
    m_peer_view_isSet = !json[QString("peerView")].isNull() && m_peer_view_isValid;
}

QString OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_dyes.size() > 0) {
        obj.insert(QString("customDyes"), ::OpenAPI::toJsonValue(m_custom_dyes));
    }
    if (m_customization.isSet()) {
        obj.insert(QString("customization"), ::OpenAPI::toJsonValue(m_customization));
    }
    if (m_peer_view.isSet()) {
        obj.insert(QString("peerView"), ::OpenAPI::toJsonValue(m_peer_view));
    }
    return obj;
}

QList<OAIDestiny_DyeReference> OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::getCustomDyes() const {
    return m_custom_dyes;
}
void OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::setCustomDyes(const QList<OAIDestiny_DyeReference> &custom_dyes) {
    m_custom_dyes = custom_dyes;
    m_custom_dyes_isSet = true;
}

bool OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::is_custom_dyes_Set() const{
    return m_custom_dyes_isSet;
}

bool OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::is_custom_dyes_Valid() const{
    return m_custom_dyes_isValid;
}

OAIDestiny_Character_DestinyCharacterCustomization OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::getCustomization() const {
    return m_customization;
}
void OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::setCustomization(const OAIDestiny_Character_DestinyCharacterCustomization &customization) {
    m_customization = customization;
    m_customization_isSet = true;
}

bool OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::is_customization_Set() const{
    return m_customization_isSet;
}

bool OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::is_customization_Valid() const{
    return m_customization_isValid;
}

OAIDestiny_Character_DestinyCharacterPeerView OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::getPeerView() const {
    return m_peer_view;
}
void OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::setPeerView(const OAIDestiny_Character_DestinyCharacterPeerView &peer_view) {
    m_peer_view = peer_view;
    m_peer_view_isSet = true;
}

bool OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::is_peer_view_Set() const{
    return m_peer_view_isSet;
}

bool OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::is_peer_view_Valid() const{
    return m_peer_view_isValid;
}

bool OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_dyes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_customization.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_peer_view.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
