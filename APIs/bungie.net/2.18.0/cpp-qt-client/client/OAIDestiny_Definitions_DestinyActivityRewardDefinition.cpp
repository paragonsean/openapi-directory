/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_DestinyActivityRewardDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_DestinyActivityRewardDefinition::OAIDestiny_Definitions_DestinyActivityRewardDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_DestinyActivityRewardDefinition::OAIDestiny_Definitions_DestinyActivityRewardDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_DestinyActivityRewardDefinition::~OAIDestiny_Definitions_DestinyActivityRewardDefinition() {}

void OAIDestiny_Definitions_DestinyActivityRewardDefinition::initializeModel() {

    m_reward_items_isSet = false;
    m_reward_items_isValid = false;

    m_reward_text_isSet = false;
    m_reward_text_isValid = false;
}

void OAIDestiny_Definitions_DestinyActivityRewardDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_DestinyActivityRewardDefinition::fromJsonObject(QJsonObject json) {

    m_reward_items_isValid = ::OpenAPI::fromJsonValue(m_reward_items, json[QString("rewardItems")]);
    m_reward_items_isSet = !json[QString("rewardItems")].isNull() && m_reward_items_isValid;

    m_reward_text_isValid = ::OpenAPI::fromJsonValue(m_reward_text, json[QString("rewardText")]);
    m_reward_text_isSet = !json[QString("rewardText")].isNull() && m_reward_text_isValid;
}

QString OAIDestiny_Definitions_DestinyActivityRewardDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_DestinyActivityRewardDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_reward_items.size() > 0) {
        obj.insert(QString("rewardItems"), ::OpenAPI::toJsonValue(m_reward_items));
    }
    if (m_reward_text_isSet) {
        obj.insert(QString("rewardText"), ::OpenAPI::toJsonValue(m_reward_text));
    }
    return obj;
}

QList<OAIDestiny_DestinyItemQuantity> OAIDestiny_Definitions_DestinyActivityRewardDefinition::getRewardItems() const {
    return m_reward_items;
}
void OAIDestiny_Definitions_DestinyActivityRewardDefinition::setRewardItems(const QList<OAIDestiny_DestinyItemQuantity> &reward_items) {
    m_reward_items = reward_items;
    m_reward_items_isSet = true;
}

bool OAIDestiny_Definitions_DestinyActivityRewardDefinition::is_reward_items_Set() const{
    return m_reward_items_isSet;
}

bool OAIDestiny_Definitions_DestinyActivityRewardDefinition::is_reward_items_Valid() const{
    return m_reward_items_isValid;
}

QString OAIDestiny_Definitions_DestinyActivityRewardDefinition::getRewardText() const {
    return m_reward_text;
}
void OAIDestiny_Definitions_DestinyActivityRewardDefinition::setRewardText(const QString &reward_text) {
    m_reward_text = reward_text;
    m_reward_text_isSet = true;
}

bool OAIDestiny_Definitions_DestinyActivityRewardDefinition::is_reward_text_Set() const{
    return m_reward_text_isSet;
}

bool OAIDestiny_Definitions_DestinyActivityRewardDefinition::is_reward_text_Valid() const{
    return m_reward_text_isValid;
}

bool OAIDestiny_Definitions_DestinyActivityRewardDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reward_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_reward_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_DestinyActivityRewardDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
