/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Config_DestinyManifest.h
 *
 * DestinyManifest is the external-facing contract for just the properties needed by those calling the Destiny Platform.
 */

#ifndef OAIDestiny_Config_DestinyManifest_H
#define OAIDestiny_Config_DestinyManifest_H

#include <QJsonObject>

#include "OAIDestiny_Config_GearAssetDataBaseDefinition.h"
#include "OAIDestiny_Config_ImagePyramidEntry.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Config_ImagePyramidEntry;
class OAIDestiny_Config_GearAssetDataBaseDefinition;

class OAIDestiny_Config_DestinyManifest : public OAIObject {
public:
    OAIDestiny_Config_DestinyManifest();
    OAIDestiny_Config_DestinyManifest(QString json);
    ~OAIDestiny_Config_DestinyManifest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDestiny_Config_ImagePyramidEntry> getIconImagePyramidInfo() const;
    void setIconImagePyramidInfo(const QList<OAIDestiny_Config_ImagePyramidEntry> &icon_image_pyramid_info);
    bool is_icon_image_pyramid_info_Set() const;
    bool is_icon_image_pyramid_info_Valid() const;

    QMap<QString, QMap<QString, QString>> getJsonWorldComponentContentPaths() const;
    void setJsonWorldComponentContentPaths(const QMap<QString, QMap<QString, QString>> &json_world_component_content_paths);
    bool is_json_world_component_content_paths_Set() const;
    bool is_json_world_component_content_paths_Valid() const;

    QMap<QString, QString> getJsonWorldContentPaths() const;
    void setJsonWorldContentPaths(const QMap<QString, QString> &json_world_content_paths);
    bool is_json_world_content_paths_Set() const;
    bool is_json_world_content_paths_Valid() const;

    QString getMobileAssetContentPath() const;
    void setMobileAssetContentPath(const QString &mobile_asset_content_path);
    bool is_mobile_asset_content_path_Set() const;
    bool is_mobile_asset_content_path_Valid() const;

    QString getMobileClanBannerDatabasePath() const;
    void setMobileClanBannerDatabasePath(const QString &mobile_clan_banner_database_path);
    bool is_mobile_clan_banner_database_path_Set() const;
    bool is_mobile_clan_banner_database_path_Valid() const;

    QList<OAIDestiny_Config_GearAssetDataBaseDefinition> getMobileGearAssetDataBases() const;
    void setMobileGearAssetDataBases(const QList<OAIDestiny_Config_GearAssetDataBaseDefinition> &mobile_gear_asset_data_bases);
    bool is_mobile_gear_asset_data_bases_Set() const;
    bool is_mobile_gear_asset_data_bases_Valid() const;

    QMap<QString, QString> getMobileGearCdn() const;
    void setMobileGearCdn(const QMap<QString, QString> &mobile_gear_cdn);
    bool is_mobile_gear_cdn_Set() const;
    bool is_mobile_gear_cdn_Valid() const;

    QMap<QString, QString> getMobileWorldContentPaths() const;
    void setMobileWorldContentPaths(const QMap<QString, QString> &mobile_world_content_paths);
    bool is_mobile_world_content_paths_Set() const;
    bool is_mobile_world_content_paths_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDestiny_Config_ImagePyramidEntry> m_icon_image_pyramid_info;
    bool m_icon_image_pyramid_info_isSet;
    bool m_icon_image_pyramid_info_isValid;

    QMap<QString, QMap<QString, QString>> m_json_world_component_content_paths;
    bool m_json_world_component_content_paths_isSet;
    bool m_json_world_component_content_paths_isValid;

    QMap<QString, QString> m_json_world_content_paths;
    bool m_json_world_content_paths_isSet;
    bool m_json_world_content_paths_isValid;

    QString m_mobile_asset_content_path;
    bool m_mobile_asset_content_path_isSet;
    bool m_mobile_asset_content_path_isValid;

    QString m_mobile_clan_banner_database_path;
    bool m_mobile_clan_banner_database_path_isSet;
    bool m_mobile_clan_banner_database_path_isValid;

    QList<OAIDestiny_Config_GearAssetDataBaseDefinition> m_mobile_gear_asset_data_bases;
    bool m_mobile_gear_asset_data_bases_isSet;
    bool m_mobile_gear_asset_data_bases_isValid;

    QMap<QString, QString> m_mobile_gear_cdn;
    bool m_mobile_gear_cdn_isSet;
    bool m_mobile_gear_cdn_isValid;

    QMap<QString, QString> m_mobile_world_content_paths;
    bool m_mobile_world_content_paths_isSet;
    bool m_mobile_world_content_paths_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Config_DestinyManifest)

#endif // OAIDestiny_Config_DestinyManifest_H
