/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_DestinyItemSetBlockDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_DestinyItemSetBlockDefinition::OAIDestiny_Definitions_DestinyItemSetBlockDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_DestinyItemSetBlockDefinition::OAIDestiny_Definitions_DestinyItemSetBlockDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_DestinyItemSetBlockDefinition::~OAIDestiny_Definitions_DestinyItemSetBlockDefinition() {}

void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::initializeModel() {

    m_item_list_isSet = false;
    m_item_list_isValid = false;

    m_quest_line_description_isSet = false;
    m_quest_line_description_isValid = false;

    m_quest_line_name_isSet = false;
    m_quest_line_name_isValid = false;

    m_quest_step_summary_isSet = false;
    m_quest_step_summary_isValid = false;

    m_require_ordered_set_item_add_isSet = false;
    m_require_ordered_set_item_add_isValid = false;

    m_set_is_featured_isSet = false;
    m_set_is_featured_isValid = false;

    m_set_type_isSet = false;
    m_set_type_isValid = false;
}

void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::fromJsonObject(QJsonObject json) {

    m_item_list_isValid = ::OpenAPI::fromJsonValue(m_item_list, json[QString("itemList")]);
    m_item_list_isSet = !json[QString("itemList")].isNull() && m_item_list_isValid;

    m_quest_line_description_isValid = ::OpenAPI::fromJsonValue(m_quest_line_description, json[QString("questLineDescription")]);
    m_quest_line_description_isSet = !json[QString("questLineDescription")].isNull() && m_quest_line_description_isValid;

    m_quest_line_name_isValid = ::OpenAPI::fromJsonValue(m_quest_line_name, json[QString("questLineName")]);
    m_quest_line_name_isSet = !json[QString("questLineName")].isNull() && m_quest_line_name_isValid;

    m_quest_step_summary_isValid = ::OpenAPI::fromJsonValue(m_quest_step_summary, json[QString("questStepSummary")]);
    m_quest_step_summary_isSet = !json[QString("questStepSummary")].isNull() && m_quest_step_summary_isValid;

    m_require_ordered_set_item_add_isValid = ::OpenAPI::fromJsonValue(m_require_ordered_set_item_add, json[QString("requireOrderedSetItemAdd")]);
    m_require_ordered_set_item_add_isSet = !json[QString("requireOrderedSetItemAdd")].isNull() && m_require_ordered_set_item_add_isValid;

    m_set_is_featured_isValid = ::OpenAPI::fromJsonValue(m_set_is_featured, json[QString("setIsFeatured")]);
    m_set_is_featured_isSet = !json[QString("setIsFeatured")].isNull() && m_set_is_featured_isValid;

    m_set_type_isValid = ::OpenAPI::fromJsonValue(m_set_type, json[QString("setType")]);
    m_set_type_isSet = !json[QString("setType")].isNull() && m_set_type_isValid;
}

QString OAIDestiny_Definitions_DestinyItemSetBlockDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_DestinyItemSetBlockDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_item_list.size() > 0) {
        obj.insert(QString("itemList"), ::OpenAPI::toJsonValue(m_item_list));
    }
    if (m_quest_line_description_isSet) {
        obj.insert(QString("questLineDescription"), ::OpenAPI::toJsonValue(m_quest_line_description));
    }
    if (m_quest_line_name_isSet) {
        obj.insert(QString("questLineName"), ::OpenAPI::toJsonValue(m_quest_line_name));
    }
    if (m_quest_step_summary_isSet) {
        obj.insert(QString("questStepSummary"), ::OpenAPI::toJsonValue(m_quest_step_summary));
    }
    if (m_require_ordered_set_item_add_isSet) {
        obj.insert(QString("requireOrderedSetItemAdd"), ::OpenAPI::toJsonValue(m_require_ordered_set_item_add));
    }
    if (m_set_is_featured_isSet) {
        obj.insert(QString("setIsFeatured"), ::OpenAPI::toJsonValue(m_set_is_featured));
    }
    if (m_set_type_isSet) {
        obj.insert(QString("setType"), ::OpenAPI::toJsonValue(m_set_type));
    }
    return obj;
}

QList<OAIDestiny_Definitions_DestinyItemSetBlockEntryDefinition> OAIDestiny_Definitions_DestinyItemSetBlockDefinition::getItemList() const {
    return m_item_list;
}
void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::setItemList(const QList<OAIDestiny_Definitions_DestinyItemSetBlockEntryDefinition> &item_list) {
    m_item_list = item_list;
    m_item_list_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_item_list_Set() const{
    return m_item_list_isSet;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_item_list_Valid() const{
    return m_item_list_isValid;
}

QString OAIDestiny_Definitions_DestinyItemSetBlockDefinition::getQuestLineDescription() const {
    return m_quest_line_description;
}
void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::setQuestLineDescription(const QString &quest_line_description) {
    m_quest_line_description = quest_line_description;
    m_quest_line_description_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_quest_line_description_Set() const{
    return m_quest_line_description_isSet;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_quest_line_description_Valid() const{
    return m_quest_line_description_isValid;
}

QString OAIDestiny_Definitions_DestinyItemSetBlockDefinition::getQuestLineName() const {
    return m_quest_line_name;
}
void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::setQuestLineName(const QString &quest_line_name) {
    m_quest_line_name = quest_line_name;
    m_quest_line_name_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_quest_line_name_Set() const{
    return m_quest_line_name_isSet;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_quest_line_name_Valid() const{
    return m_quest_line_name_isValid;
}

QString OAIDestiny_Definitions_DestinyItemSetBlockDefinition::getQuestStepSummary() const {
    return m_quest_step_summary;
}
void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::setQuestStepSummary(const QString &quest_step_summary) {
    m_quest_step_summary = quest_step_summary;
    m_quest_step_summary_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_quest_step_summary_Set() const{
    return m_quest_step_summary_isSet;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_quest_step_summary_Valid() const{
    return m_quest_step_summary_isValid;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::isRequireOrderedSetItemAdd() const {
    return m_require_ordered_set_item_add;
}
void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::setRequireOrderedSetItemAdd(const bool &require_ordered_set_item_add) {
    m_require_ordered_set_item_add = require_ordered_set_item_add;
    m_require_ordered_set_item_add_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_require_ordered_set_item_add_Set() const{
    return m_require_ordered_set_item_add_isSet;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_require_ordered_set_item_add_Valid() const{
    return m_require_ordered_set_item_add_isValid;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::isSetIsFeatured() const {
    return m_set_is_featured;
}
void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::setSetIsFeatured(const bool &set_is_featured) {
    m_set_is_featured = set_is_featured;
    m_set_is_featured_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_set_is_featured_Set() const{
    return m_set_is_featured_isSet;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_set_is_featured_Valid() const{
    return m_set_is_featured_isValid;
}

QString OAIDestiny_Definitions_DestinyItemSetBlockDefinition::getSetType() const {
    return m_set_type;
}
void OAIDestiny_Definitions_DestinyItemSetBlockDefinition::setSetType(const QString &set_type) {
    m_set_type = set_type;
    m_set_type_isSet = true;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_set_type_Set() const{
    return m_set_type_isSet;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::is_set_type_Valid() const{
    return m_set_type_isValid;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quest_line_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quest_line_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quest_step_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_require_ordered_set_item_add_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_set_is_featured_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_set_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_DestinyItemSetBlockDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
