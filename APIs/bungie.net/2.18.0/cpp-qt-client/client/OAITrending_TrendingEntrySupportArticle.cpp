/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrending_TrendingEntrySupportArticle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrending_TrendingEntrySupportArticle::OAITrending_TrendingEntrySupportArticle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrending_TrendingEntrySupportArticle::OAITrending_TrendingEntrySupportArticle() {
    this->initializeModel();
}

OAITrending_TrendingEntrySupportArticle::~OAITrending_TrendingEntrySupportArticle() {}

void OAITrending_TrendingEntrySupportArticle::initializeModel() {

    m_article_isSet = false;
    m_article_isValid = false;
}

void OAITrending_TrendingEntrySupportArticle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrending_TrendingEntrySupportArticle::fromJsonObject(QJsonObject json) {

    m_article_isValid = ::OpenAPI::fromJsonValue(m_article, json[QString("article")]);
    m_article_isSet = !json[QString("article")].isNull() && m_article_isValid;
}

QString OAITrending_TrendingEntrySupportArticle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrending_TrendingEntrySupportArticle::asJsonObject() const {
    QJsonObject obj;
    if (m_article.isSet()) {
        obj.insert(QString("article"), ::OpenAPI::toJsonValue(m_article));
    }
    return obj;
}

OAIContent_ContentItemPublicContract OAITrending_TrendingEntrySupportArticle::getArticle() const {
    return m_article;
}
void OAITrending_TrendingEntrySupportArticle::setArticle(const OAIContent_ContentItemPublicContract &article) {
    m_article = article;
    m_article_isSet = true;
}

bool OAITrending_TrendingEntrySupportArticle::is_article_Set() const{
    return m_article_isSet;
}

bool OAITrending_TrendingEntrySupportArticle::is_article_Valid() const{
    return m_article_isValid;
}

bool OAITrending_TrendingEntrySupportArticle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_article.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrending_TrendingEntrySupportArticle::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
