/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommon_Models_CoreSetting.h
 *
 * 
 */

#ifndef OAICommon_Models_CoreSetting_H
#define OAICommon_Models_CoreSetting_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICommon_Models_CoreSetting : public OAIObject {
public:
    OAICommon_Models_CoreSetting();
    OAICommon_Models_CoreSetting(QString json);
    ~OAICommon_Models_CoreSetting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICommon_Models_CoreSetting> getChildSettings() const;
    void setChildSettings(const QList<OAICommon_Models_CoreSetting> &child_settings);
    bool is_child_settings_Set() const;
    bool is_child_settings_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QString getImagePath() const;
    void setImagePath(const QString &image_path);
    bool is_image_path_Set() const;
    bool is_image_path_Valid() const;

    bool isIsDefault() const;
    void setIsDefault(const bool &is_default);
    bool is_is_default_Set() const;
    bool is_is_default_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICommon_Models_CoreSetting> m_child_settings;
    bool m_child_settings_isSet;
    bool m_child_settings_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QString m_image_path;
    bool m_image_path_isSet;
    bool m_image_path_isValid;

    bool m_is_default;
    bool m_is_default_isSet;
    bool m_is_default_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommon_Models_CoreSetting)

#endif // OAICommon_Models_CoreSetting_H
