/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyItemValueBlockDefinition.h
 *
 * This defines an item&#39;s \&quot;Value\&quot;. Unfortunately, this appears to be used in different ways depending on the way that the item itself is used.  For items being sold at a Vendor, this is the default \&quot;sale price\&quot; of the item. These days, the vendor itself almost always sets the price, but it still possible for the price to fall back to this value. For quests, it is a preview of rewards you can gain by completing the quest. For dummy items, if the itemValue refers to an Emblem, it is the emblem that should be shown as the reward. (jeez louise)  It will likely be used in a number of other ways in the future, it appears to be a bucket where they put arbitrary items and quantities into the item.
 */

#ifndef OAIDestiny_Definitions_DestinyItemValueBlockDefinition_H
#define OAIDestiny_Definitions_DestinyItemValueBlockDefinition_H

#include <QJsonObject>

#include "OAIDestiny_DestinyItemQuantity.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_DestinyItemQuantity;

class OAIDestiny_Definitions_DestinyItemValueBlockDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyItemValueBlockDefinition();
    OAIDestiny_Definitions_DestinyItemValueBlockDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyItemValueBlockDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDestiny_DestinyItemQuantity> getItemValue() const;
    void setItemValue(const QList<OAIDestiny_DestinyItemQuantity> &item_value);
    bool is_item_value_Set() const;
    bool is_item_value_Valid() const;

    QString getValueDescription() const;
    void setValueDescription(const QString &value_description);
    bool is_value_description_Set() const;
    bool is_value_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDestiny_DestinyItemQuantity> m_item_value;
    bool m_item_value_isSet;
    bool m_item_value_isValid;

    QString m_value_description;
    bool m_value_description_isSet;
    bool m_value_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyItemValueBlockDefinition)

#endif // OAIDestiny_Definitions_DestinyItemValueBlockDefinition_H
