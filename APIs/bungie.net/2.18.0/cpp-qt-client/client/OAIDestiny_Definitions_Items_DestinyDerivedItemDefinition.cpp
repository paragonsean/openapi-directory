/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::~OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition() {}

void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::initializeModel() {

    m_icon_path_isSet = false;
    m_icon_path_isValid = false;

    m_item_description_isSet = false;
    m_item_description_isValid = false;

    m_item_detail_isSet = false;
    m_item_detail_isValid = false;

    m_item_hash_isSet = false;
    m_item_hash_isValid = false;

    m_item_name_isSet = false;
    m_item_name_isValid = false;

    m_vendor_item_index_isSet = false;
    m_vendor_item_index_isValid = false;
}

void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::fromJsonObject(QJsonObject json) {

    m_icon_path_isValid = ::OpenAPI::fromJsonValue(m_icon_path, json[QString("iconPath")]);
    m_icon_path_isSet = !json[QString("iconPath")].isNull() && m_icon_path_isValid;

    m_item_description_isValid = ::OpenAPI::fromJsonValue(m_item_description, json[QString("itemDescription")]);
    m_item_description_isSet = !json[QString("itemDescription")].isNull() && m_item_description_isValid;

    m_item_detail_isValid = ::OpenAPI::fromJsonValue(m_item_detail, json[QString("itemDetail")]);
    m_item_detail_isSet = !json[QString("itemDetail")].isNull() && m_item_detail_isValid;

    m_item_hash_isValid = ::OpenAPI::fromJsonValue(m_item_hash, json[QString("itemHash")]);
    m_item_hash_isSet = !json[QString("itemHash")].isNull() && m_item_hash_isValid;

    m_item_name_isValid = ::OpenAPI::fromJsonValue(m_item_name, json[QString("itemName")]);
    m_item_name_isSet = !json[QString("itemName")].isNull() && m_item_name_isValid;

    m_vendor_item_index_isValid = ::OpenAPI::fromJsonValue(m_vendor_item_index, json[QString("vendorItemIndex")]);
    m_vendor_item_index_isSet = !json[QString("vendorItemIndex")].isNull() && m_vendor_item_index_isValid;
}

QString OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_icon_path_isSet) {
        obj.insert(QString("iconPath"), ::OpenAPI::toJsonValue(m_icon_path));
    }
    if (m_item_description_isSet) {
        obj.insert(QString("itemDescription"), ::OpenAPI::toJsonValue(m_item_description));
    }
    if (m_item_detail_isSet) {
        obj.insert(QString("itemDetail"), ::OpenAPI::toJsonValue(m_item_detail));
    }
    if (m_item_hash_isSet) {
        obj.insert(QString("itemHash"), ::OpenAPI::toJsonValue(m_item_hash));
    }
    if (m_item_name_isSet) {
        obj.insert(QString("itemName"), ::OpenAPI::toJsonValue(m_item_name));
    }
    if (m_vendor_item_index_isSet) {
        obj.insert(QString("vendorItemIndex"), ::OpenAPI::toJsonValue(m_vendor_item_index));
    }
    return obj;
}

QString OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::getIconPath() const {
    return m_icon_path;
}
void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::setIconPath(const QString &icon_path) {
    m_icon_path = icon_path;
    m_icon_path_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_icon_path_Set() const{
    return m_icon_path_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_icon_path_Valid() const{
    return m_icon_path_isValid;
}

QString OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::getItemDescription() const {
    return m_item_description;
}
void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::setItemDescription(const QString &item_description) {
    m_item_description = item_description;
    m_item_description_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_item_description_Set() const{
    return m_item_description_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_item_description_Valid() const{
    return m_item_description_isValid;
}

QString OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::getItemDetail() const {
    return m_item_detail;
}
void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::setItemDetail(const QString &item_detail) {
    m_item_detail = item_detail;
    m_item_detail_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_item_detail_Set() const{
    return m_item_detail_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_item_detail_Valid() const{
    return m_item_detail_isValid;
}

qint32 OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::getItemHash() const {
    return m_item_hash;
}
void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::setItemHash(const qint32 &item_hash) {
    m_item_hash = item_hash;
    m_item_hash_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_item_hash_Set() const{
    return m_item_hash_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_item_hash_Valid() const{
    return m_item_hash_isValid;
}

QString OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::getItemName() const {
    return m_item_name;
}
void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::setItemName(const QString &item_name) {
    m_item_name = item_name;
    m_item_name_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_item_name_Set() const{
    return m_item_name_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_item_name_Valid() const{
    return m_item_name_isValid;
}

qint32 OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::getVendorItemIndex() const {
    return m_vendor_item_index;
}
void OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::setVendorItemIndex(const qint32 &vendor_item_index) {
    m_vendor_item_index = vendor_item_index;
    m_vendor_item_index_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_vendor_item_index_Set() const{
    return m_vendor_item_index_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::is_vendor_item_index_Valid() const{
    return m_vendor_item_index_isValid;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_icon_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_item_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
