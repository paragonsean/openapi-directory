/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Components_Social_DestinySocialCommendationsComponent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Components_Social_DestinySocialCommendationsComponent::OAIDestiny_Components_Social_DestinySocialCommendationsComponent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Components_Social_DestinySocialCommendationsComponent::OAIDestiny_Components_Social_DestinySocialCommendationsComponent() {
    this->initializeModel();
}

OAIDestiny_Components_Social_DestinySocialCommendationsComponent::~OAIDestiny_Components_Social_DestinySocialCommendationsComponent() {}

void OAIDestiny_Components_Social_DestinySocialCommendationsComponent::initializeModel() {

    m_commendation_node_scores_by_hash_isSet = false;
    m_commendation_node_scores_by_hash_isValid = false;

    m_commendation_scores_by_hash_isSet = false;
    m_commendation_scores_by_hash_isValid = false;

    m_score_detail_values_isSet = false;
    m_score_detail_values_isValid = false;

    m_total_score_isSet = false;
    m_total_score_isValid = false;
}

void OAIDestiny_Components_Social_DestinySocialCommendationsComponent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Components_Social_DestinySocialCommendationsComponent::fromJsonObject(QJsonObject json) {

    m_commendation_node_scores_by_hash_isValid = ::OpenAPI::fromJsonValue(m_commendation_node_scores_by_hash, json[QString("commendationNodeScoresByHash")]);
    m_commendation_node_scores_by_hash_isSet = !json[QString("commendationNodeScoresByHash")].isNull() && m_commendation_node_scores_by_hash_isValid;

    m_commendation_scores_by_hash_isValid = ::OpenAPI::fromJsonValue(m_commendation_scores_by_hash, json[QString("commendationScoresByHash")]);
    m_commendation_scores_by_hash_isSet = !json[QString("commendationScoresByHash")].isNull() && m_commendation_scores_by_hash_isValid;

    m_score_detail_values_isValid = ::OpenAPI::fromJsonValue(m_score_detail_values, json[QString("scoreDetailValues")]);
    m_score_detail_values_isSet = !json[QString("scoreDetailValues")].isNull() && m_score_detail_values_isValid;

    m_total_score_isValid = ::OpenAPI::fromJsonValue(m_total_score, json[QString("totalScore")]);
    m_total_score_isSet = !json[QString("totalScore")].isNull() && m_total_score_isValid;
}

QString OAIDestiny_Components_Social_DestinySocialCommendationsComponent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Components_Social_DestinySocialCommendationsComponent::asJsonObject() const {
    QJsonObject obj;
    if (m_commendation_node_scores_by_hash.size() > 0) {
        obj.insert(QString("commendationNodeScoresByHash"), ::OpenAPI::toJsonValue(m_commendation_node_scores_by_hash));
    }
    if (m_commendation_scores_by_hash.size() > 0) {
        obj.insert(QString("commendationScoresByHash"), ::OpenAPI::toJsonValue(m_commendation_scores_by_hash));
    }
    if (m_score_detail_values.size() > 0) {
        obj.insert(QString("scoreDetailValues"), ::OpenAPI::toJsonValue(m_score_detail_values));
    }
    if (m_total_score_isSet) {
        obj.insert(QString("totalScore"), ::OpenAPI::toJsonValue(m_total_score));
    }
    return obj;
}

QMap<QString, qint32> OAIDestiny_Components_Social_DestinySocialCommendationsComponent::getCommendationNodeScoresByHash() const {
    return m_commendation_node_scores_by_hash;
}
void OAIDestiny_Components_Social_DestinySocialCommendationsComponent::setCommendationNodeScoresByHash(const QMap<QString, qint32> &commendation_node_scores_by_hash) {
    m_commendation_node_scores_by_hash = commendation_node_scores_by_hash;
    m_commendation_node_scores_by_hash_isSet = true;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::is_commendation_node_scores_by_hash_Set() const{
    return m_commendation_node_scores_by_hash_isSet;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::is_commendation_node_scores_by_hash_Valid() const{
    return m_commendation_node_scores_by_hash_isValid;
}

QMap<QString, qint32> OAIDestiny_Components_Social_DestinySocialCommendationsComponent::getCommendationScoresByHash() const {
    return m_commendation_scores_by_hash;
}
void OAIDestiny_Components_Social_DestinySocialCommendationsComponent::setCommendationScoresByHash(const QMap<QString, qint32> &commendation_scores_by_hash) {
    m_commendation_scores_by_hash = commendation_scores_by_hash;
    m_commendation_scores_by_hash_isSet = true;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::is_commendation_scores_by_hash_Set() const{
    return m_commendation_scores_by_hash_isSet;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::is_commendation_scores_by_hash_Valid() const{
    return m_commendation_scores_by_hash_isValid;
}

QList<qint32> OAIDestiny_Components_Social_DestinySocialCommendationsComponent::getScoreDetailValues() const {
    return m_score_detail_values;
}
void OAIDestiny_Components_Social_DestinySocialCommendationsComponent::setScoreDetailValues(const QList<qint32> &score_detail_values) {
    m_score_detail_values = score_detail_values;
    m_score_detail_values_isSet = true;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::is_score_detail_values_Set() const{
    return m_score_detail_values_isSet;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::is_score_detail_values_Valid() const{
    return m_score_detail_values_isValid;
}

qint32 OAIDestiny_Components_Social_DestinySocialCommendationsComponent::getTotalScore() const {
    return m_total_score;
}
void OAIDestiny_Components_Social_DestinySocialCommendationsComponent::setTotalScore(const qint32 &total_score) {
    m_total_score = total_score;
    m_total_score_isSet = true;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::is_total_score_Set() const{
    return m_total_score_isSet;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::is_total_score_Valid() const{
    return m_total_score_isValid;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commendation_node_scores_by_hash.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_commendation_scores_by_hash.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_detail_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Components_Social_DestinySocialCommendationsComponent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
