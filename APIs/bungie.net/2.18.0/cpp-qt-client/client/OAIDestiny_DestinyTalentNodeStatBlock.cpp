/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_DestinyTalentNodeStatBlock.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_DestinyTalentNodeStatBlock::OAIDestiny_DestinyTalentNodeStatBlock(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_DestinyTalentNodeStatBlock::OAIDestiny_DestinyTalentNodeStatBlock() {
    this->initializeModel();
}

OAIDestiny_DestinyTalentNodeStatBlock::~OAIDestiny_DestinyTalentNodeStatBlock() {}

void OAIDestiny_DestinyTalentNodeStatBlock::initializeModel() {

    m_current_step_stats_isSet = false;
    m_current_step_stats_isValid = false;

    m_next_step_stats_isSet = false;
    m_next_step_stats_isValid = false;
}

void OAIDestiny_DestinyTalentNodeStatBlock::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_DestinyTalentNodeStatBlock::fromJsonObject(QJsonObject json) {

    m_current_step_stats_isValid = ::OpenAPI::fromJsonValue(m_current_step_stats, json[QString("currentStepStats")]);
    m_current_step_stats_isSet = !json[QString("currentStepStats")].isNull() && m_current_step_stats_isValid;

    m_next_step_stats_isValid = ::OpenAPI::fromJsonValue(m_next_step_stats, json[QString("nextStepStats")]);
    m_next_step_stats_isSet = !json[QString("nextStepStats")].isNull() && m_next_step_stats_isValid;
}

QString OAIDestiny_DestinyTalentNodeStatBlock::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_DestinyTalentNodeStatBlock::asJsonObject() const {
    QJsonObject obj;
    if (m_current_step_stats.size() > 0) {
        obj.insert(QString("currentStepStats"), ::OpenAPI::toJsonValue(m_current_step_stats));
    }
    if (m_next_step_stats.size() > 0) {
        obj.insert(QString("nextStepStats"), ::OpenAPI::toJsonValue(m_next_step_stats));
    }
    return obj;
}

QList<OAIDestiny_DestinyStat> OAIDestiny_DestinyTalentNodeStatBlock::getCurrentStepStats() const {
    return m_current_step_stats;
}
void OAIDestiny_DestinyTalentNodeStatBlock::setCurrentStepStats(const QList<OAIDestiny_DestinyStat> &current_step_stats) {
    m_current_step_stats = current_step_stats;
    m_current_step_stats_isSet = true;
}

bool OAIDestiny_DestinyTalentNodeStatBlock::is_current_step_stats_Set() const{
    return m_current_step_stats_isSet;
}

bool OAIDestiny_DestinyTalentNodeStatBlock::is_current_step_stats_Valid() const{
    return m_current_step_stats_isValid;
}

QList<OAIDestiny_DestinyStat> OAIDestiny_DestinyTalentNodeStatBlock::getNextStepStats() const {
    return m_next_step_stats;
}
void OAIDestiny_DestinyTalentNodeStatBlock::setNextStepStats(const QList<OAIDestiny_DestinyStat> &next_step_stats) {
    m_next_step_stats = next_step_stats;
    m_next_step_stats_isSet = true;
}

bool OAIDestiny_DestinyTalentNodeStatBlock::is_next_step_stats_Set() const{
    return m_next_step_stats_isSet;
}

bool OAIDestiny_DestinyTalentNodeStatBlock::is_next_step_stats_Valid() const{
    return m_next_step_stats_isValid;
}

bool OAIDestiny_DestinyTalentNodeStatBlock::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_step_stats.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_step_stats.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_DestinyTalentNodeStatBlock::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
