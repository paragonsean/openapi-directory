/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Milestones_DestinyMilestoneContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Milestones_DestinyMilestoneContent::OAIDestiny_Milestones_DestinyMilestoneContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Milestones_DestinyMilestoneContent::OAIDestiny_Milestones_DestinyMilestoneContent() {
    this->initializeModel();
}

OAIDestiny_Milestones_DestinyMilestoneContent::~OAIDestiny_Milestones_DestinyMilestoneContent() {}

void OAIDestiny_Milestones_DestinyMilestoneContent::initializeModel() {

    m_about_isSet = false;
    m_about_isValid = false;

    m_item_categories_isSet = false;
    m_item_categories_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tips_isSet = false;
    m_tips_isValid = false;
}

void OAIDestiny_Milestones_DestinyMilestoneContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Milestones_DestinyMilestoneContent::fromJsonObject(QJsonObject json) {

    m_about_isValid = ::OpenAPI::fromJsonValue(m_about, json[QString("about")]);
    m_about_isSet = !json[QString("about")].isNull() && m_about_isValid;

    m_item_categories_isValid = ::OpenAPI::fromJsonValue(m_item_categories, json[QString("itemCategories")]);
    m_item_categories_isSet = !json[QString("itemCategories")].isNull() && m_item_categories_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_tips_isValid = ::OpenAPI::fromJsonValue(m_tips, json[QString("tips")]);
    m_tips_isSet = !json[QString("tips")].isNull() && m_tips_isValid;
}

QString OAIDestiny_Milestones_DestinyMilestoneContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Milestones_DestinyMilestoneContent::asJsonObject() const {
    QJsonObject obj;
    if (m_about_isSet) {
        obj.insert(QString("about"), ::OpenAPI::toJsonValue(m_about));
    }
    if (m_item_categories.size() > 0) {
        obj.insert(QString("itemCategories"), ::OpenAPI::toJsonValue(m_item_categories));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tips.size() > 0) {
        obj.insert(QString("tips"), ::OpenAPI::toJsonValue(m_tips));
    }
    return obj;
}

QString OAIDestiny_Milestones_DestinyMilestoneContent::getAbout() const {
    return m_about;
}
void OAIDestiny_Milestones_DestinyMilestoneContent::setAbout(const QString &about) {
    m_about = about;
    m_about_isSet = true;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::is_about_Set() const{
    return m_about_isSet;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::is_about_Valid() const{
    return m_about_isValid;
}

QList<OAIDestiny_Milestones_DestinyMilestoneContentItemCategory> OAIDestiny_Milestones_DestinyMilestoneContent::getItemCategories() const {
    return m_item_categories;
}
void OAIDestiny_Milestones_DestinyMilestoneContent::setItemCategories(const QList<OAIDestiny_Milestones_DestinyMilestoneContentItemCategory> &item_categories) {
    m_item_categories = item_categories;
    m_item_categories_isSet = true;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::is_item_categories_Set() const{
    return m_item_categories_isSet;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::is_item_categories_Valid() const{
    return m_item_categories_isValid;
}

QString OAIDestiny_Milestones_DestinyMilestoneContent::getStatus() const {
    return m_status;
}
void OAIDestiny_Milestones_DestinyMilestoneContent::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::is_status_Valid() const{
    return m_status_isValid;
}

QList<QString> OAIDestiny_Milestones_DestinyMilestoneContent::getTips() const {
    return m_tips;
}
void OAIDestiny_Milestones_DestinyMilestoneContent::setTips(const QList<QString> &tips) {
    m_tips = tips;
    m_tips_isSet = true;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::is_tips_Set() const{
    return m_tips_isSet;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::is_tips_Valid() const{
    return m_tips_isValid;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_about_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tips.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Milestones_DestinyMilestoneContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
