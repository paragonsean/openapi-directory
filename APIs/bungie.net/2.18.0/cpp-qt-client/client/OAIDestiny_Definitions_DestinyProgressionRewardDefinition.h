/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyProgressionRewardDefinition.h
 *
 * Inventory Items can reward progression when actions are performed on them. A common example of this in Destiny 1 was Bounties, which would reward Experience on your Character and the like when you completed the bounty.  Note that this maps to a DestinyProgressionMappingDefinition, and *not* a DestinyProgressionDefinition directly. This is apparently so that multiple progressions can be granted progression points/experience at the same time.
 */

#ifndef OAIDestiny_Definitions_DestinyProgressionRewardDefinition_H
#define OAIDestiny_Definitions_DestinyProgressionRewardDefinition_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyProgressionRewardDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyProgressionRewardDefinition();
    OAIDestiny_Definitions_DestinyProgressionRewardDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyProgressionRewardDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAmount() const;
    void setAmount(const qint32 &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    bool isApplyThrottles() const;
    void setApplyThrottles(const bool &apply_throttles);
    bool is_apply_throttles_Set() const;
    bool is_apply_throttles_Valid() const;

    qint32 getProgressionMappingHash() const;
    void setProgressionMappingHash(const qint32 &progression_mapping_hash);
    bool is_progression_mapping_hash_Set() const;
    bool is_progression_mapping_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    bool m_apply_throttles;
    bool m_apply_throttles_isSet;
    bool m_apply_throttles_isValid;

    qint32 m_progression_mapping_hash;
    bool m_progression_mapping_hash_isSet;
    bool m_progression_mapping_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyProgressionRewardDefinition)

#endif // OAIDestiny_Definitions_DestinyProgressionRewardDefinition_H
