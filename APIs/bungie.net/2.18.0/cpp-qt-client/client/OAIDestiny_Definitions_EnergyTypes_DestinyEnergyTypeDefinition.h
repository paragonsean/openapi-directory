/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition.h
 *
 * Represents types of Energy that can be used for costs and payments related to Armor 2.0 mods.
 */

#ifndef OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition_H
#define OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition();
    OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition(QString json);
    ~OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCapacityStatHash() const;
    void setCapacityStatHash(const qint32 &capacity_stat_hash);
    bool is_capacity_stat_hash_Set() const;
    bool is_capacity_stat_hash_Valid() const;

    qint32 getCostStatHash() const;
    void setCostStatHash(const qint32 &cost_stat_hash);
    bool is_cost_stat_hash_Set() const;
    bool is_cost_stat_hash_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint32 getEnumValue() const;
    void setEnumValue(const qint32 &enum_value);
    bool is_enum_value_Set() const;
    bool is_enum_value_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    bool isShowIcon() const;
    void setShowIcon(const bool &show_icon);
    bool is_show_icon_Set() const;
    bool is_show_icon_Valid() const;

    QString getTransparentIconPath() const;
    void setTransparentIconPath(const QString &transparent_icon_path);
    bool is_transparent_icon_path_Set() const;
    bool is_transparent_icon_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_capacity_stat_hash;
    bool m_capacity_stat_hash_isSet;
    bool m_capacity_stat_hash_isValid;

    qint32 m_cost_stat_hash;
    bool m_cost_stat_hash_isSet;
    bool m_cost_stat_hash_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint32 m_enum_value;
    bool m_enum_value_isSet;
    bool m_enum_value_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    bool m_show_icon;
    bool m_show_icon_isSet;
    bool m_show_icon_isValid;

    QString m_transparent_icon_path;
    bool m_transparent_icon_path_isSet;
    bool m_transparent_icon_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition)

#endif // OAIDestiny_Definitions_EnergyTypes_DestinyEnergyTypeDefinition_H
