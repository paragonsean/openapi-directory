/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition.h
 *
 * A point of entry into an activity, gated by an unlock flag and with some more-or-less useless (for our purposes) phase information. I&#39;m including it in case we end up being able to bolt more useful information onto it in the future.  UPDATE: Turns out this information isn&#39;t actually useless, and is in fact actually useful for people. Who would have thought? We still don&#39;t have localized info for it, but at least this will help people when they&#39;re looking at phase indexes in stats data, or when they want to know what phases have been completed on a weekly achievement.
 */

#ifndef OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition_H
#define OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition();
    OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPhaseHash() const;
    void setPhaseHash(const qint32 &phase_hash);
    bool is_phase_hash_Set() const;
    bool is_phase_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_phase_hash;
    bool m_phase_hash_isSet;
    bool m_phase_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition)

#endif // OAIDestiny_Definitions_DestinyActivityInsertionPointDefinition_H
