/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition.h
 *
 * If the activity is a playlist, this is the definition for a specific entry in the playlist: a single possible combination of Activity and Activity Mode that can be chosen.
 */

#ifndef OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition_H
#define OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition();
    OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActivityHash() const;
    void setActivityHash(const qint32 &activity_hash);
    bool is_activity_hash_Set() const;
    bool is_activity_hash_Valid() const;

    QList<qint32> getActivityModeHashes() const;
    void setActivityModeHashes(const QList<qint32> &activity_mode_hashes);
    bool is_activity_mode_hashes_Set() const;
    bool is_activity_mode_hashes_Valid() const;

    QList<qint32> getActivityModeTypes() const;
    void setActivityModeTypes(const QList<qint32> &activity_mode_types);
    bool is_activity_mode_types_Set() const;
    bool is_activity_mode_types_Valid() const;

    qint32 getDirectActivityModeHash() const;
    void setDirectActivityModeHash(const qint32 &direct_activity_mode_hash);
    bool is_direct_activity_mode_hash_Set() const;
    bool is_direct_activity_mode_hash_Valid() const;

    qint32 getDirectActivityModeType() const;
    void setDirectActivityModeType(const qint32 &direct_activity_mode_type);
    bool is_direct_activity_mode_type_Set() const;
    bool is_direct_activity_mode_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_activity_hash;
    bool m_activity_hash_isSet;
    bool m_activity_hash_isValid;

    QList<qint32> m_activity_mode_hashes;
    bool m_activity_mode_hashes_isSet;
    bool m_activity_mode_hashes_isValid;

    QList<qint32> m_activity_mode_types;
    bool m_activity_mode_types_isSet;
    bool m_activity_mode_types_isValid;

    qint32 m_direct_activity_mode_hash;
    bool m_direct_activity_mode_hash_isSet;
    bool m_direct_activity_mode_hash_isValid;

    qint32 m_direct_activity_mode_type;
    bool m_direct_activity_mode_type_isSet;
    bool m_direct_activity_mode_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition)

#endif // OAIDestiny_Definitions_DestinyActivityPlaylistItemDefinition_H
