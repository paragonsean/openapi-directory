/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Milestones_DestinyPublicMilestone.h
 *
 * Information about milestones, presented in a character state-agnostic manner. Combine this data with DestinyMilestoneDefinition to get a full picture of the milestone, which is basically a checklist of things to do in the game. Think of this as GetPublicAdvisors 3.0, for those who used the Destiny 1 API.
 */

#ifndef OAIDestiny_Milestones_DestinyPublicMilestone_H
#define OAIDestiny_Milestones_DestinyPublicMilestone_H

#include <QJsonObject>

#include "OAIDestiny_Milestones_DestinyPublicMilestoneChallengeActivity.h"
#include "OAIDestiny_Milestones_DestinyPublicMilestoneQuest.h"
#include "OAIDestiny_Milestones_DestinyPublicMilestoneVendor.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Milestones_DestinyPublicMilestoneChallengeActivity;
class OAIDestiny_Milestones_DestinyPublicMilestoneQuest;
class OAIDestiny_Milestones_DestinyPublicMilestoneVendor;

class OAIDestiny_Milestones_DestinyPublicMilestone : public OAIObject {
public:
    OAIDestiny_Milestones_DestinyPublicMilestone();
    OAIDestiny_Milestones_DestinyPublicMilestone(QString json);
    ~OAIDestiny_Milestones_DestinyPublicMilestone() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDestiny_Milestones_DestinyPublicMilestoneChallengeActivity> getActivities() const;
    void setActivities(const QList<OAIDestiny_Milestones_DestinyPublicMilestoneChallengeActivity> &activities);
    bool is_activities_Set() const;
    bool is_activities_Valid() const;

    QList<OAIDestiny_Milestones_DestinyPublicMilestoneQuest> getAvailableQuests() const;
    void setAvailableQuests(const QList<OAIDestiny_Milestones_DestinyPublicMilestoneQuest> &available_quests);
    bool is_available_quests_Set() const;
    bool is_available_quests_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint32 getMilestoneHash() const;
    void setMilestoneHash(const qint32 &milestone_hash);
    bool is_milestone_hash_Set() const;
    bool is_milestone_hash_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QList<qint32> getVendorHashes() const;
    void setVendorHashes(const QList<qint32> &vendor_hashes);
    bool is_vendor_hashes_Set() const;
    bool is_vendor_hashes_Valid() const;

    QList<OAIDestiny_Milestones_DestinyPublicMilestoneVendor> getVendors() const;
    void setVendors(const QList<OAIDestiny_Milestones_DestinyPublicMilestoneVendor> &vendors);
    bool is_vendors_Set() const;
    bool is_vendors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDestiny_Milestones_DestinyPublicMilestoneChallengeActivity> m_activities;
    bool m_activities_isSet;
    bool m_activities_isValid;

    QList<OAIDestiny_Milestones_DestinyPublicMilestoneQuest> m_available_quests;
    bool m_available_quests_isSet;
    bool m_available_quests_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint32 m_milestone_hash;
    bool m_milestone_hash_isSet;
    bool m_milestone_hash_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QList<qint32> m_vendor_hashes;
    bool m_vendor_hashes_isSet;
    bool m_vendor_hashes_isValid;

    QList<OAIDestiny_Milestones_DestinyPublicMilestoneVendor> m_vendors;
    bool m_vendors_isSet;
    bool m_vendors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Milestones_DestinyPublicMilestone)

#endif // OAIDestiny_Milestones_DestinyPublicMilestone_H
