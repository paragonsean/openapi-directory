/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_HistoricalStats_DestinyPlayer.h
 *
 * 
 */

#ifndef OAIDestiny_HistoricalStats_DestinyPlayer_H
#define OAIDestiny_HistoricalStats_DestinyPlayer_H

#include <QJsonObject>

#include "OAIUser_UserInfoCard.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser_UserInfoCard;

class OAIDestiny_HistoricalStats_DestinyPlayer : public OAIObject {
public:
    OAIDestiny_HistoricalStats_DestinyPlayer();
    OAIDestiny_HistoricalStats_DestinyPlayer(QString json);
    ~OAIDestiny_HistoricalStats_DestinyPlayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUser_UserInfoCard getBungieNetUserInfo() const;
    void setBungieNetUserInfo(const OAIUser_UserInfoCard &bungie_net_user_info);
    bool is_bungie_net_user_info_Set() const;
    bool is_bungie_net_user_info_Valid() const;

    QString getCharacterClass() const;
    void setCharacterClass(const QString &character_class);
    bool is_character_class_Set() const;
    bool is_character_class_Valid() const;

    qint32 getCharacterLevel() const;
    void setCharacterLevel(const qint32 &character_level);
    bool is_character_level_Set() const;
    bool is_character_level_Valid() const;

    QString getClanName() const;
    void setClanName(const QString &clan_name);
    bool is_clan_name_Set() const;
    bool is_clan_name_Valid() const;

    QString getClanTag() const;
    void setClanTag(const QString &clan_tag);
    bool is_clan_tag_Set() const;
    bool is_clan_tag_Valid() const;

    qint32 getClassHash() const;
    void setClassHash(const qint32 &class_hash);
    bool is_class_hash_Set() const;
    bool is_class_hash_Valid() const;

    OAIUser_UserInfoCard getDestinyUserInfo() const;
    void setDestinyUserInfo(const OAIUser_UserInfoCard &destiny_user_info);
    bool is_destiny_user_info_Set() const;
    bool is_destiny_user_info_Valid() const;

    qint32 getEmblemHash() const;
    void setEmblemHash(const qint32 &emblem_hash);
    bool is_emblem_hash_Set() const;
    bool is_emblem_hash_Valid() const;

    qint32 getGenderHash() const;
    void setGenderHash(const qint32 &gender_hash);
    bool is_gender_hash_Set() const;
    bool is_gender_hash_Valid() const;

    qint32 getLightLevel() const;
    void setLightLevel(const qint32 &light_level);
    bool is_light_level_Set() const;
    bool is_light_level_Valid() const;

    qint32 getRaceHash() const;
    void setRaceHash(const qint32 &race_hash);
    bool is_race_hash_Set() const;
    bool is_race_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUser_UserInfoCard m_bungie_net_user_info;
    bool m_bungie_net_user_info_isSet;
    bool m_bungie_net_user_info_isValid;

    QString m_character_class;
    bool m_character_class_isSet;
    bool m_character_class_isValid;

    qint32 m_character_level;
    bool m_character_level_isSet;
    bool m_character_level_isValid;

    QString m_clan_name;
    bool m_clan_name_isSet;
    bool m_clan_name_isValid;

    QString m_clan_tag;
    bool m_clan_tag_isSet;
    bool m_clan_tag_isValid;

    qint32 m_class_hash;
    bool m_class_hash_isSet;
    bool m_class_hash_isValid;

    OAIUser_UserInfoCard m_destiny_user_info;
    bool m_destiny_user_info_isSet;
    bool m_destiny_user_info_isValid;

    qint32 m_emblem_hash;
    bool m_emblem_hash_isSet;
    bool m_emblem_hash_isValid;

    qint32 m_gender_hash;
    bool m_gender_hash_isSet;
    bool m_gender_hash_isValid;

    qint32 m_light_level;
    bool m_light_level_isSet;
    bool m_light_level_isValid;

    qint32 m_race_hash;
    bool m_race_hash_isSet;
    bool m_race_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_HistoricalStats_DestinyPlayer)

#endif // OAIDestiny_HistoricalStats_DestinyPlayer_H
