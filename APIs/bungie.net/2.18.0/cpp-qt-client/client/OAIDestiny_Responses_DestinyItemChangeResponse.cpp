/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Responses_DestinyItemChangeResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Responses_DestinyItemChangeResponse::OAIDestiny_Responses_DestinyItemChangeResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Responses_DestinyItemChangeResponse::OAIDestiny_Responses_DestinyItemChangeResponse() {
    this->initializeModel();
}

OAIDestiny_Responses_DestinyItemChangeResponse::~OAIDestiny_Responses_DestinyItemChangeResponse() {}

void OAIDestiny_Responses_DestinyItemChangeResponse::initializeModel() {

    m_added_inventory_items_isSet = false;
    m_added_inventory_items_isValid = false;

    m_item_isSet = false;
    m_item_isValid = false;

    m_removed_inventory_items_isSet = false;
    m_removed_inventory_items_isValid = false;
}

void OAIDestiny_Responses_DestinyItemChangeResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Responses_DestinyItemChangeResponse::fromJsonObject(QJsonObject json) {

    m_added_inventory_items_isValid = ::OpenAPI::fromJsonValue(m_added_inventory_items, json[QString("addedInventoryItems")]);
    m_added_inventory_items_isSet = !json[QString("addedInventoryItems")].isNull() && m_added_inventory_items_isValid;

    m_item_isValid = ::OpenAPI::fromJsonValue(m_item, json[QString("item")]);
    m_item_isSet = !json[QString("item")].isNull() && m_item_isValid;

    m_removed_inventory_items_isValid = ::OpenAPI::fromJsonValue(m_removed_inventory_items, json[QString("removedInventoryItems")]);
    m_removed_inventory_items_isSet = !json[QString("removedInventoryItems")].isNull() && m_removed_inventory_items_isValid;
}

QString OAIDestiny_Responses_DestinyItemChangeResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Responses_DestinyItemChangeResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_added_inventory_items.size() > 0) {
        obj.insert(QString("addedInventoryItems"), ::OpenAPI::toJsonValue(m_added_inventory_items));
    }
    if (m_item.isSet()) {
        obj.insert(QString("item"), ::OpenAPI::toJsonValue(m_item));
    }
    if (m_removed_inventory_items.size() > 0) {
        obj.insert(QString("removedInventoryItems"), ::OpenAPI::toJsonValue(m_removed_inventory_items));
    }
    return obj;
}

QList<OAIDestiny_Entities_Items_DestinyItemComponent> OAIDestiny_Responses_DestinyItemChangeResponse::getAddedInventoryItems() const {
    return m_added_inventory_items;
}
void OAIDestiny_Responses_DestinyItemChangeResponse::setAddedInventoryItems(const QList<OAIDestiny_Entities_Items_DestinyItemComponent> &added_inventory_items) {
    m_added_inventory_items = added_inventory_items;
    m_added_inventory_items_isSet = true;
}

bool OAIDestiny_Responses_DestinyItemChangeResponse::is_added_inventory_items_Set() const{
    return m_added_inventory_items_isSet;
}

bool OAIDestiny_Responses_DestinyItemChangeResponse::is_added_inventory_items_Valid() const{
    return m_added_inventory_items_isValid;
}

OAIDestiny_Responses_DestinyItemResponse OAIDestiny_Responses_DestinyItemChangeResponse::getItem() const {
    return m_item;
}
void OAIDestiny_Responses_DestinyItemChangeResponse::setItem(const OAIDestiny_Responses_DestinyItemResponse &item) {
    m_item = item;
    m_item_isSet = true;
}

bool OAIDestiny_Responses_DestinyItemChangeResponse::is_item_Set() const{
    return m_item_isSet;
}

bool OAIDestiny_Responses_DestinyItemChangeResponse::is_item_Valid() const{
    return m_item_isValid;
}

QList<OAIDestiny_Entities_Items_DestinyItemComponent> OAIDestiny_Responses_DestinyItemChangeResponse::getRemovedInventoryItems() const {
    return m_removed_inventory_items;
}
void OAIDestiny_Responses_DestinyItemChangeResponse::setRemovedInventoryItems(const QList<OAIDestiny_Entities_Items_DestinyItemComponent> &removed_inventory_items) {
    m_removed_inventory_items = removed_inventory_items;
    m_removed_inventory_items_isSet = true;
}

bool OAIDestiny_Responses_DestinyItemChangeResponse::is_removed_inventory_items_Set() const{
    return m_removed_inventory_items_isSet;
}

bool OAIDestiny_Responses_DestinyItemChangeResponse::is_removed_inventory_items_Valid() const{
    return m_removed_inventory_items_isValid;
}

bool OAIDestiny_Responses_DestinyItemChangeResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_added_inventory_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_removed_inventory_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Responses_DestinyItemChangeResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
