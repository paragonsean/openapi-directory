/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::~OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition() {}

void OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::initializeModel() {

    m_arrangement_index_by_stat_value_isSet = false;
    m_arrangement_index_by_stat_value_isValid = false;

    m_art_arrangement_region_hash_isSet = false;
    m_art_arrangement_region_hash_isValid = false;

    m_art_arrangement_region_index_isSet = false;
    m_art_arrangement_region_index_isValid = false;

    m_stat_hash_isSet = false;
    m_stat_hash_isValid = false;
}

void OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::fromJsonObject(QJsonObject json) {

    m_arrangement_index_by_stat_value_isValid = ::OpenAPI::fromJsonValue(m_arrangement_index_by_stat_value, json[QString("arrangementIndexByStatValue")]);
    m_arrangement_index_by_stat_value_isSet = !json[QString("arrangementIndexByStatValue")].isNull() && m_arrangement_index_by_stat_value_isValid;

    m_art_arrangement_region_hash_isValid = ::OpenAPI::fromJsonValue(m_art_arrangement_region_hash, json[QString("artArrangementRegionHash")]);
    m_art_arrangement_region_hash_isSet = !json[QString("artArrangementRegionHash")].isNull() && m_art_arrangement_region_hash_isValid;

    m_art_arrangement_region_index_isValid = ::OpenAPI::fromJsonValue(m_art_arrangement_region_index, json[QString("artArrangementRegionIndex")]);
    m_art_arrangement_region_index_isSet = !json[QString("artArrangementRegionIndex")].isNull() && m_art_arrangement_region_index_isValid;

    m_stat_hash_isValid = ::OpenAPI::fromJsonValue(m_stat_hash, json[QString("statHash")]);
    m_stat_hash_isSet = !json[QString("statHash")].isNull() && m_stat_hash_isValid;
}

QString OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_arrangement_index_by_stat_value.size() > 0) {
        obj.insert(QString("arrangementIndexByStatValue"), ::OpenAPI::toJsonValue(m_arrangement_index_by_stat_value));
    }
    if (m_art_arrangement_region_hash_isSet) {
        obj.insert(QString("artArrangementRegionHash"), ::OpenAPI::toJsonValue(m_art_arrangement_region_hash));
    }
    if (m_art_arrangement_region_index_isSet) {
        obj.insert(QString("artArrangementRegionIndex"), ::OpenAPI::toJsonValue(m_art_arrangement_region_index));
    }
    if (m_stat_hash_isSet) {
        obj.insert(QString("statHash"), ::OpenAPI::toJsonValue(m_stat_hash));
    }
    return obj;
}

QMap<QString, qint32> OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::getArrangementIndexByStatValue() const {
    return m_arrangement_index_by_stat_value;
}
void OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::setArrangementIndexByStatValue(const QMap<QString, qint32> &arrangement_index_by_stat_value) {
    m_arrangement_index_by_stat_value = arrangement_index_by_stat_value;
    m_arrangement_index_by_stat_value_isSet = true;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::is_arrangement_index_by_stat_value_Set() const{
    return m_arrangement_index_by_stat_value_isSet;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::is_arrangement_index_by_stat_value_Valid() const{
    return m_arrangement_index_by_stat_value_isValid;
}

qint32 OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::getArtArrangementRegionHash() const {
    return m_art_arrangement_region_hash;
}
void OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::setArtArrangementRegionHash(const qint32 &art_arrangement_region_hash) {
    m_art_arrangement_region_hash = art_arrangement_region_hash;
    m_art_arrangement_region_hash_isSet = true;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::is_art_arrangement_region_hash_Set() const{
    return m_art_arrangement_region_hash_isSet;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::is_art_arrangement_region_hash_Valid() const{
    return m_art_arrangement_region_hash_isValid;
}

qint32 OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::getArtArrangementRegionIndex() const {
    return m_art_arrangement_region_index;
}
void OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::setArtArrangementRegionIndex(const qint32 &art_arrangement_region_index) {
    m_art_arrangement_region_index = art_arrangement_region_index;
    m_art_arrangement_region_index_isSet = true;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::is_art_arrangement_region_index_Set() const{
    return m_art_arrangement_region_index_isSet;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::is_art_arrangement_region_index_Valid() const{
    return m_art_arrangement_region_index_isValid;
}

qint32 OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::getStatHash() const {
    return m_stat_hash;
}
void OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::setStatHash(const qint32 &stat_hash) {
    m_stat_hash = stat_hash;
    m_stat_hash_isSet = true;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::is_stat_hash_Set() const{
    return m_stat_hash_isSet;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::is_stat_hash_Valid() const{
    return m_stat_hash_isValid;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arrangement_index_by_stat_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_art_arrangement_region_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_art_arrangement_region_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stat_hash_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_DestinyArrangementRegionFilterDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
