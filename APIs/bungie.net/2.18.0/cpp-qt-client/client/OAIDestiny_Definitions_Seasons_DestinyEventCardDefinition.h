/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition.h
 *
 * Defines the properties of an &#39;Event Card&#39; in Destiny 2, to coincide with a seasonal event for additional challenges, premium rewards, a new seal, and a special title. For example: Solstice of Heroes 2022.
 */

#ifndef OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition_H
#define OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include "OAIDestiny_Definitions_Seasons_DestinyEventCardImages.h"
#include "OAIDestiny_Misc_DestinyColor.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Misc_DestinyColor;
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;
class OAIDestiny_Definitions_Seasons_DestinyEventCardImages;

class OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition();
    OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition(QString json);
    ~OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestiny_Misc_DestinyColor getColor() const;
    void setColor(const OAIDestiny_Misc_DestinyColor &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint64 getEndTime() const;
    void setEndTime(const qint64 &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    OAIDestiny_Definitions_Seasons_DestinyEventCardImages getImages() const;
    void setImages(const OAIDestiny_Definitions_Seasons_DestinyEventCardImages &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QString getLinkRedirectPath() const;
    void setLinkRedirectPath(const QString &link_redirect_path);
    bool is_link_redirect_path_Set() const;
    bool is_link_redirect_path_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    qint32 getSealPresentationNodeHash() const;
    void setSealPresentationNodeHash(const qint32 &seal_presentation_node_hash);
    bool is_seal_presentation_node_hash_Set() const;
    bool is_seal_presentation_node_hash_Valid() const;

    qint32 getTicketCurrencyItemHash() const;
    void setTicketCurrencyItemHash(const qint32 &ticket_currency_item_hash);
    bool is_ticket_currency_item_hash_Set() const;
    bool is_ticket_currency_item_hash_Valid() const;

    qint32 getTicketVendorCategoryHash() const;
    void setTicketVendorCategoryHash(const qint32 &ticket_vendor_category_hash);
    bool is_ticket_vendor_category_hash_Set() const;
    bool is_ticket_vendor_category_hash_Valid() const;

    qint32 getTicketVendorHash() const;
    void setTicketVendorHash(const qint32 &ticket_vendor_hash);
    bool is_ticket_vendor_hash_Set() const;
    bool is_ticket_vendor_hash_Valid() const;

    qint32 getTriumphsPresentationNodeHash() const;
    void setTriumphsPresentationNodeHash(const qint32 &triumphs_presentation_node_hash);
    bool is_triumphs_presentation_node_hash_Set() const;
    bool is_triumphs_presentation_node_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestiny_Misc_DestinyColor m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint64 m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    OAIDestiny_Definitions_Seasons_DestinyEventCardImages m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QString m_link_redirect_path;
    bool m_link_redirect_path_isSet;
    bool m_link_redirect_path_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    qint32 m_seal_presentation_node_hash;
    bool m_seal_presentation_node_hash_isSet;
    bool m_seal_presentation_node_hash_isValid;

    qint32 m_ticket_currency_item_hash;
    bool m_ticket_currency_item_hash_isSet;
    bool m_ticket_currency_item_hash_isValid;

    qint32 m_ticket_vendor_category_hash;
    bool m_ticket_vendor_category_hash_isSet;
    bool m_ticket_vendor_category_hash_isValid;

    qint32 m_ticket_vendor_hash;
    bool m_ticket_vendor_hash_isSet;
    bool m_ticket_vendor_hash_isValid;

    qint32 m_triumphs_presentation_node_hash;
    bool m_triumphs_presentation_node_hash_isSet;
    bool m_triumphs_presentation_node_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition)

#endif // OAIDestiny_Definitions_Seasons_DestinyEventCardDefinition_H
