/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition.h
 *
 * When the interaction is replied to, Reward sites will fire and items potentially selected based on whether the given unlock expression is TRUE.  You can potentially choose one from multiple replies when replying to an interaction: this is how you get either/or rewards from vendors.
 */

#ifndef OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition_H
#define OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition();
    OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getItemRewardsSelection() const;
    void setItemRewardsSelection(const qint32 &item_rewards_selection);
    bool is_item_rewards_selection_Set() const;
    bool is_item_rewards_selection_Valid() const;

    QString getReply() const;
    void setReply(const QString &reply);
    bool is_reply_Set() const;
    bool is_reply_Valid() const;

    qint32 getReplyType() const;
    void setReplyType(const qint32 &reply_type);
    bool is_reply_type_Set() const;
    bool is_reply_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_item_rewards_selection;
    bool m_item_rewards_selection_isSet;
    bool m_item_rewards_selection_isValid;

    QString m_reply;
    bool m_reply_isSet;
    bool m_reply_isValid;

    qint32 m_reply_type;
    bool m_reply_type_isSet;
    bool m_reply_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition)

#endif // OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition_H
