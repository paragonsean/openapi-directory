/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_DestinyEquipItemResults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_DestinyEquipItemResults::OAIDestiny_DestinyEquipItemResults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_DestinyEquipItemResults::OAIDestiny_DestinyEquipItemResults() {
    this->initializeModel();
}

OAIDestiny_DestinyEquipItemResults::~OAIDestiny_DestinyEquipItemResults() {}

void OAIDestiny_DestinyEquipItemResults::initializeModel() {

    m_equip_results_isSet = false;
    m_equip_results_isValid = false;
}

void OAIDestiny_DestinyEquipItemResults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_DestinyEquipItemResults::fromJsonObject(QJsonObject json) {

    m_equip_results_isValid = ::OpenAPI::fromJsonValue(m_equip_results, json[QString("equipResults")]);
    m_equip_results_isSet = !json[QString("equipResults")].isNull() && m_equip_results_isValid;
}

QString OAIDestiny_DestinyEquipItemResults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_DestinyEquipItemResults::asJsonObject() const {
    QJsonObject obj;
    if (m_equip_results.size() > 0) {
        obj.insert(QString("equipResults"), ::OpenAPI::toJsonValue(m_equip_results));
    }
    return obj;
}

QList<OAIDestiny_DestinyEquipItemResult> OAIDestiny_DestinyEquipItemResults::getEquipResults() const {
    return m_equip_results;
}
void OAIDestiny_DestinyEquipItemResults::setEquipResults(const QList<OAIDestiny_DestinyEquipItemResult> &equip_results) {
    m_equip_results = equip_results;
    m_equip_results_isSet = true;
}

bool OAIDestiny_DestinyEquipItemResults::is_equip_results_Set() const{
    return m_equip_results_isSet;
}

bool OAIDestiny_DestinyEquipItemResults::is_equip_results_Valid() const{
    return m_equip_results_isValid;
}

bool OAIDestiny_DestinyEquipItemResults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_equip_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_DestinyEquipItemResults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
