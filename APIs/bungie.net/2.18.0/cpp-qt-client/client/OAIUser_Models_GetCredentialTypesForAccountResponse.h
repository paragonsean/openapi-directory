/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser_Models_GetCredentialTypesForAccountResponse.h
 *
 * 
 */

#ifndef OAIUser_Models_GetCredentialTypesForAccountResponse_H
#define OAIUser_Models_GetCredentialTypesForAccountResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser_Models_GetCredentialTypesForAccountResponse : public OAIObject {
public:
    OAIUser_Models_GetCredentialTypesForAccountResponse();
    OAIUser_Models_GetCredentialTypesForAccountResponse(QString json);
    ~OAIUser_Models_GetCredentialTypesForAccountResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCredentialAsString() const;
    void setCredentialAsString(const QString &credential_as_string);
    bool is_credential_as_string_Set() const;
    bool is_credential_as_string_Valid() const;

    QString getCredentialDisplayName() const;
    void setCredentialDisplayName(const QString &credential_display_name);
    bool is_credential_display_name_Set() const;
    bool is_credential_display_name_Valid() const;

    qint32 getCredentialType() const;
    void setCredentialType(const qint32 &credential_type);
    bool is_credential_type_Set() const;
    bool is_credential_type_Valid() const;

    bool isIsPublic() const;
    void setIsPublic(const bool &is_public);
    bool is_is_public_Set() const;
    bool is_is_public_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_credential_as_string;
    bool m_credential_as_string_isSet;
    bool m_credential_as_string_isValid;

    QString m_credential_display_name;
    bool m_credential_display_name_isSet;
    bool m_credential_display_name_isValid;

    qint32 m_credential_type;
    bool m_credential_type_isSet;
    bool m_credential_type_isValid;

    bool m_is_public;
    bool m_is_public_isSet;
    bool m_is_public_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser_Models_GetCredentialTypesForAccountResponse)

#endif // OAIUser_Models_GetCredentialTypesForAccountResponse_H
