/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition.h
 *
 * Sometimes, we have large sets of reusable plugs that are defined identically and thus can (and in some cases, are so large that they *must*) be shared across the places where they are used. These are the definitions for those reusable sets of plugs.    See DestinyItemSocketEntryDefinition.plugSource and reusablePlugSetHash for the relationship between these reusable plug sets and the sockets that leverage them (for starters, Emotes).   As of the release of Shadowkeep (Late 2019), these will begin to be sourced from game content directly - which means there will be many more of them, but it also means we may not get all data that we used to get for them.   DisplayProperties, in particular, will no longer be guaranteed to contain valid information. We will make a best effort to guess what ought to be populated there where possible, but it will be invalid for many/most plug sets.
 */

#ifndef OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition_H
#define OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include "OAIDestiny_Definitions_DestinyItemSocketEntryPlugItemRandomizedDefinition.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;
class OAIDestiny_Definitions_DestinyItemSocketEntryPlugItemRandomizedDefinition;

class OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition();
    OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition(QString json);
    ~OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    bool isIsFakePlugSet() const;
    void setIsFakePlugSet(const bool &is_fake_plug_set);
    bool is_is_fake_plug_set_Set() const;
    bool is_is_fake_plug_set_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    QList<OAIDestiny_Definitions_DestinyItemSocketEntryPlugItemRandomizedDefinition> getReusablePlugItems() const;
    void setReusablePlugItems(const QList<OAIDestiny_Definitions_DestinyItemSocketEntryPlugItemRandomizedDefinition> &reusable_plug_items);
    bool is_reusable_plug_items_Set() const;
    bool is_reusable_plug_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    bool m_is_fake_plug_set;
    bool m_is_fake_plug_set_isSet;
    bool m_is_fake_plug_set_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    QList<OAIDestiny_Definitions_DestinyItemSocketEntryPlugItemRandomizedDefinition> m_reusable_plug_items;
    bool m_reusable_plug_items_isSet;
    bool m_reusable_plug_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition)

#endif // OAIDestiny_Definitions_Sockets_DestinyPlugSetDefinition_H
