/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITokens_PartnerOfferSkuHistoryResponse.h
 *
 * 
 */

#ifndef OAITokens_PartnerOfferSkuHistoryResponse_H
#define OAITokens_PartnerOfferSkuHistoryResponse_H

#include <QJsonObject>

#include "OAITokens_PartnerOfferHistoryResponse.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITokens_PartnerOfferHistoryResponse;

class OAITokens_PartnerOfferSkuHistoryResponse : public OAIObject {
public:
    OAITokens_PartnerOfferSkuHistoryResponse();
    OAITokens_PartnerOfferSkuHistoryResponse(QString json);
    ~OAITokens_PartnerOfferSkuHistoryResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllOffersApplied() const;
    void setAllOffersApplied(const bool &all_offers_applied);
    bool is_all_offers_applied_Set() const;
    bool is_all_offers_applied_Valid() const;

    QDateTime getClaimDate() const;
    void setClaimDate(const QDateTime &claim_date);
    bool is_claim_date_Set() const;
    bool is_claim_date_Valid() const;

    QString getLocalizedDescription() const;
    void setLocalizedDescription(const QString &localized_description);
    bool is_localized_description_Set() const;
    bool is_localized_description_Valid() const;

    QString getLocalizedName() const;
    void setLocalizedName(const QString &localized_name);
    bool is_localized_name_Set() const;
    bool is_localized_name_Valid() const;

    QString getSkuIdentifier() const;
    void setSkuIdentifier(const QString &sku_identifier);
    bool is_sku_identifier_Set() const;
    bool is_sku_identifier_Valid() const;

    QList<OAITokens_PartnerOfferHistoryResponse> getSkuOffers() const;
    void setSkuOffers(const QList<OAITokens_PartnerOfferHistoryResponse> &sku_offers);
    bool is_sku_offers_Set() const;
    bool is_sku_offers_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_all_offers_applied;
    bool m_all_offers_applied_isSet;
    bool m_all_offers_applied_isValid;

    QDateTime m_claim_date;
    bool m_claim_date_isSet;
    bool m_claim_date_isValid;

    QString m_localized_description;
    bool m_localized_description_isSet;
    bool m_localized_description_isValid;

    QString m_localized_name;
    bool m_localized_name_isSet;
    bool m_localized_name_isValid;

    QString m_sku_identifier;
    bool m_sku_identifier_isSet;
    bool m_sku_identifier_isValid;

    QList<OAITokens_PartnerOfferHistoryResponse> m_sku_offers;
    bool m_sku_offers_isSet;
    bool m_sku_offers_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITokens_PartnerOfferSkuHistoryResponse)

#endif // OAITokens_PartnerOfferSkuHistoryResponse_H
