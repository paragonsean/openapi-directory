/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITokens_RewardAvailabilityModel.h
 *
 * 
 */

#ifndef OAITokens_RewardAvailabilityModel_H
#define OAITokens_RewardAvailabilityModel_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Records_DestinyRecordDefinition.h"
#include "OAITokens_CollectibleDefinitions.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITokens_CollectibleDefinitions;
class OAIDestiny_Definitions_Records_DestinyRecordDefinition;

class OAITokens_RewardAvailabilityModel : public OAIObject {
public:
    OAITokens_RewardAvailabilityModel();
    OAITokens_RewardAvailabilityModel(QString json);
    ~OAITokens_RewardAvailabilityModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITokens_CollectibleDefinitions> getCollectibleDefinitions() const;
    void setCollectibleDefinitions(const QList<OAITokens_CollectibleDefinitions> &collectible_definitions);
    bool is_collectible_definitions_Set() const;
    bool is_collectible_definitions_Valid() const;

    QString getDecryptedToken() const;
    void setDecryptedToken(const QString &decrypted_token);
    bool is_decrypted_token_Set() const;
    bool is_decrypted_token_Valid() const;

    QDateTime getGameEarnByDate() const;
    void setGameEarnByDate(const QDateTime &game_earn_by_date);
    bool is_game_earn_by_date_Set() const;
    bool is_game_earn_by_date_Valid() const;

    bool isHasExistingCode() const;
    void setHasExistingCode(const bool &has_existing_code);
    bool is_has_existing_code_Set() const;
    bool is_has_existing_code_Valid() const;

    bool isHasOffer() const;
    void setHasOffer(const bool &has_offer);
    bool is_has_offer_Set() const;
    bool is_has_offer_Valid() const;

    bool isIsLoyaltyReward() const;
    void setIsLoyaltyReward(const bool &is_loyalty_reward);
    bool is_is_loyalty_reward_Set() const;
    bool is_is_loyalty_reward_Valid() const;

    bool isIsOffer() const;
    void setIsOffer(const bool &is_offer);
    bool is_is_offer_Set() const;
    bool is_is_offer_Valid() const;

    bool isOfferApplied() const;
    void setOfferApplied(const bool &offer_applied);
    bool is_offer_applied_Set() const;
    bool is_offer_applied_Valid() const;

    QList<OAIDestiny_Definitions_Records_DestinyRecordDefinition> getRecordDefinitions() const;
    void setRecordDefinitions(const QList<OAIDestiny_Definitions_Records_DestinyRecordDefinition> &record_definitions);
    bool is_record_definitions_Set() const;
    bool is_record_definitions_Valid() const;

    QDateTime getRedemptionEndDate() const;
    void setRedemptionEndDate(const QDateTime &redemption_end_date);
    bool is_redemption_end_date_Set() const;
    bool is_redemption_end_date_Valid() const;

    QDateTime getShopifyEndDate() const;
    void setShopifyEndDate(const QDateTime &shopify_end_date);
    bool is_shopify_end_date_Set() const;
    bool is_shopify_end_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITokens_CollectibleDefinitions> m_collectible_definitions;
    bool m_collectible_definitions_isSet;
    bool m_collectible_definitions_isValid;

    QString m_decrypted_token;
    bool m_decrypted_token_isSet;
    bool m_decrypted_token_isValid;

    QDateTime m_game_earn_by_date;
    bool m_game_earn_by_date_isSet;
    bool m_game_earn_by_date_isValid;

    bool m_has_existing_code;
    bool m_has_existing_code_isSet;
    bool m_has_existing_code_isValid;

    bool m_has_offer;
    bool m_has_offer_isSet;
    bool m_has_offer_isValid;

    bool m_is_loyalty_reward;
    bool m_is_loyalty_reward_isSet;
    bool m_is_loyalty_reward_isValid;

    bool m_is_offer;
    bool m_is_offer_isSet;
    bool m_is_offer_isValid;

    bool m_offer_applied;
    bool m_offer_applied_isSet;
    bool m_offer_applied_isValid;

    QList<OAIDestiny_Definitions_Records_DestinyRecordDefinition> m_record_definitions;
    bool m_record_definitions_isSet;
    bool m_record_definitions_isValid;

    QDateTime m_redemption_end_date;
    bool m_redemption_end_date_isSet;
    bool m_redemption_end_date_isValid;

    QDateTime m_shopify_end_date;
    bool m_shopify_end_date_isSet;
    bool m_shopify_end_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITokens_RewardAvailabilityModel)

#endif // OAITokens_RewardAvailabilityModel_H
