/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Records_DestinyRecordTitleBlock.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::OAIDestiny_Definitions_Records_DestinyRecordTitleBlock(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::OAIDestiny_Definitions_Records_DestinyRecordTitleBlock() {
    this->initializeModel();
}

OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::~OAIDestiny_Definitions_Records_DestinyRecordTitleBlock() {}

void OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::initializeModel() {

    m_gilding_tracking_record_hash_isSet = false;
    m_gilding_tracking_record_hash_isValid = false;

    m_has_title_isSet = false;
    m_has_title_isValid = false;

    m_titles_by_gender_isSet = false;
    m_titles_by_gender_isValid = false;

    m_titles_by_gender_hash_isSet = false;
    m_titles_by_gender_hash_isValid = false;
}

void OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::fromJsonObject(QJsonObject json) {

    m_gilding_tracking_record_hash_isValid = ::OpenAPI::fromJsonValue(m_gilding_tracking_record_hash, json[QString("gildingTrackingRecordHash")]);
    m_gilding_tracking_record_hash_isSet = !json[QString("gildingTrackingRecordHash")].isNull() && m_gilding_tracking_record_hash_isValid;

    m_has_title_isValid = ::OpenAPI::fromJsonValue(m_has_title, json[QString("hasTitle")]);
    m_has_title_isSet = !json[QString("hasTitle")].isNull() && m_has_title_isValid;

    m_titles_by_gender_isValid = ::OpenAPI::fromJsonValue(m_titles_by_gender, json[QString("titlesByGender")]);
    m_titles_by_gender_isSet = !json[QString("titlesByGender")].isNull() && m_titles_by_gender_isValid;

    m_titles_by_gender_hash_isValid = ::OpenAPI::fromJsonValue(m_titles_by_gender_hash, json[QString("titlesByGenderHash")]);
    m_titles_by_gender_hash_isSet = !json[QString("titlesByGenderHash")].isNull() && m_titles_by_gender_hash_isValid;
}

QString OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::asJsonObject() const {
    QJsonObject obj;
    if (m_gilding_tracking_record_hash_isSet) {
        obj.insert(QString("gildingTrackingRecordHash"), ::OpenAPI::toJsonValue(m_gilding_tracking_record_hash));
    }
    if (m_has_title_isSet) {
        obj.insert(QString("hasTitle"), ::OpenAPI::toJsonValue(m_has_title));
    }
    if (m_titles_by_gender.size() > 0) {
        obj.insert(QString("titlesByGender"), ::OpenAPI::toJsonValue(m_titles_by_gender));
    }
    if (m_titles_by_gender_hash.size() > 0) {
        obj.insert(QString("titlesByGenderHash"), ::OpenAPI::toJsonValue(m_titles_by_gender_hash));
    }
    return obj;
}

qint32 OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::getGildingTrackingRecordHash() const {
    return m_gilding_tracking_record_hash;
}
void OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::setGildingTrackingRecordHash(const qint32 &gilding_tracking_record_hash) {
    m_gilding_tracking_record_hash = gilding_tracking_record_hash;
    m_gilding_tracking_record_hash_isSet = true;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::is_gilding_tracking_record_hash_Set() const{
    return m_gilding_tracking_record_hash_isSet;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::is_gilding_tracking_record_hash_Valid() const{
    return m_gilding_tracking_record_hash_isValid;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::isHasTitle() const {
    return m_has_title;
}
void OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::setHasTitle(const bool &has_title) {
    m_has_title = has_title;
    m_has_title_isSet = true;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::is_has_title_Set() const{
    return m_has_title_isSet;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::is_has_title_Valid() const{
    return m_has_title_isValid;
}

QMap<QString, QString> OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::getTitlesByGender() const {
    return m_titles_by_gender;
}
void OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::setTitlesByGender(const QMap<QString, QString> &titles_by_gender) {
    m_titles_by_gender = titles_by_gender;
    m_titles_by_gender_isSet = true;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::is_titles_by_gender_Set() const{
    return m_titles_by_gender_isSet;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::is_titles_by_gender_Valid() const{
    return m_titles_by_gender_isValid;
}

QMap<QString, QString> OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::getTitlesByGenderHash() const {
    return m_titles_by_gender_hash;
}
void OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::setTitlesByGenderHash(const QMap<QString, QString> &titles_by_gender_hash) {
    m_titles_by_gender_hash = titles_by_gender_hash;
    m_titles_by_gender_hash_isSet = true;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::is_titles_by_gender_hash_Set() const{
    return m_titles_by_gender_hash_isSet;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::is_titles_by_gender_hash_Valid() const{
    return m_titles_by_gender_hash_isValid;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gilding_tracking_record_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_titles_by_gender.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_titles_by_gender_hash.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Records_DestinyRecordTitleBlock::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
