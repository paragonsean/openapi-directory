/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyTalentNodeStepGroups.h
 *
 * These properties are an attempt to categorize talent node steps by certain common properties. See the related enumerations for the type of properties being categorized.
 */

#ifndef OAIDestiny_Definitions_DestinyTalentNodeStepGroups_H
#define OAIDestiny_Definitions_DestinyTalentNodeStepGroups_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyTalentNodeStepGroups : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyTalentNodeStepGroups();
    OAIDestiny_Definitions_DestinyTalentNodeStepGroups(QString json);
    ~OAIDestiny_Definitions_DestinyTalentNodeStepGroups() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDamageTypes() const;
    void setDamageTypes(const qint32 &damage_types);
    bool is_damage_types_Set() const;
    bool is_damage_types_Valid() const;

    qint32 getGuardianAttributes() const;
    void setGuardianAttributes(const qint32 &guardian_attributes);
    bool is_guardian_attributes_Set() const;
    bool is_guardian_attributes_Valid() const;

    qint32 getImpactEffects() const;
    void setImpactEffects(const qint32 &impact_effects);
    bool is_impact_effects_Set() const;
    bool is_impact_effects_Valid() const;

    qint32 getLightAbilities() const;
    void setLightAbilities(const qint32 &light_abilities);
    bool is_light_abilities_Set() const;
    bool is_light_abilities_Valid() const;

    qint32 getWeaponPerformance() const;
    void setWeaponPerformance(const qint32 &weapon_performance);
    bool is_weapon_performance_Set() const;
    bool is_weapon_performance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_damage_types;
    bool m_damage_types_isSet;
    bool m_damage_types_isValid;

    qint32 m_guardian_attributes;
    bool m_guardian_attributes_isSet;
    bool m_guardian_attributes_isValid;

    qint32 m_impact_effects;
    bool m_impact_effects_isSet;
    bool m_impact_effects_isValid;

    qint32 m_light_abilities;
    bool m_light_abilities_isSet;
    bool m_light_abilities_isValid;

    qint32 m_weapon_performance;
    bool m_weapon_performance_isSet;
    bool m_weapon_performance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyTalentNodeStepGroups)

#endif // OAIDestiny_Definitions_DestinyTalentNodeStepGroups_H
