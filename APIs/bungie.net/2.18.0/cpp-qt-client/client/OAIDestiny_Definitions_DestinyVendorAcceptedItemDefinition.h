/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition.h
 *
 * If you ever wondered how the Vault works, here it is.  The Vault is merely a set of inventory buckets that exist on your Profile/Account level. When you transfer items in the Vault, the game is using the Vault Vendor&#39;s DestinyVendorAcceptedItemDefinitions to see where the appropriate destination bucket is for the source bucket from whence your item is moving. If it finds such an entry, it transfers the item to the other bucket.  The mechanics for Postmaster works similarly, which is also a vendor. All driven by Accepted Items.
 */

#ifndef OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition_H
#define OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition();
    OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAcceptedInventoryBucketHash() const;
    void setAcceptedInventoryBucketHash(const qint32 &accepted_inventory_bucket_hash);
    bool is_accepted_inventory_bucket_hash_Set() const;
    bool is_accepted_inventory_bucket_hash_Valid() const;

    qint32 getDestinationInventoryBucketHash() const;
    void setDestinationInventoryBucketHash(const qint32 &destination_inventory_bucket_hash);
    bool is_destination_inventory_bucket_hash_Set() const;
    bool is_destination_inventory_bucket_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_accepted_inventory_bucket_hash;
    bool m_accepted_inventory_bucket_hash_isSet;
    bool m_accepted_inventory_bucket_hash_isValid;

    qint32 m_destination_inventory_bucket_hash;
    bool m_destination_inventory_bucket_hash_isSet;
    bool m_destination_inventory_bucket_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition)

#endif // OAIDestiny_Definitions_DestinyVendorAcceptedItemDefinition_H
