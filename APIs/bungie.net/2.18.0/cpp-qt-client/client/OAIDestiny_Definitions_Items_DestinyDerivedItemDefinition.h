/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition.h
 *
 * This is a reference to, and summary data for, a specific item that you can get as a result of Using or Acquiring some other Item (For example, this could be summary information for an Emote that you can get by opening an an Eververse Box) See DestinyDerivedItemCategoryDefinition for more information.
 */

#ifndef OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition_H
#define OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition();
    OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition(QString json);
    ~OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIconPath() const;
    void setIconPath(const QString &icon_path);
    bool is_icon_path_Set() const;
    bool is_icon_path_Valid() const;

    QString getItemDescription() const;
    void setItemDescription(const QString &item_description);
    bool is_item_description_Set() const;
    bool is_item_description_Valid() const;

    QString getItemDetail() const;
    void setItemDetail(const QString &item_detail);
    bool is_item_detail_Set() const;
    bool is_item_detail_Valid() const;

    qint32 getItemHash() const;
    void setItemHash(const qint32 &item_hash);
    bool is_item_hash_Set() const;
    bool is_item_hash_Valid() const;

    QString getItemName() const;
    void setItemName(const QString &item_name);
    bool is_item_name_Set() const;
    bool is_item_name_Valid() const;

    qint32 getVendorItemIndex() const;
    void setVendorItemIndex(const qint32 &vendor_item_index);
    bool is_vendor_item_index_Set() const;
    bool is_vendor_item_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_icon_path;
    bool m_icon_path_isSet;
    bool m_icon_path_isValid;

    QString m_item_description;
    bool m_item_description_isSet;
    bool m_item_description_isValid;

    QString m_item_detail;
    bool m_item_detail_isSet;
    bool m_item_detail_isValid;

    qint32 m_item_hash;
    bool m_item_hash_isSet;
    bool m_item_hash_isValid;

    QString m_item_name;
    bool m_item_name_isSet;
    bool m_item_name_isValid;

    qint32 m_vendor_item_index;
    bool m_vendor_item_index_isSet;
    bool m_vendor_item_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition)

#endif // OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition_H
