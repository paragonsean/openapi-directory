/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyActivityModeDefinition.h
 *
 * This definition represents an \&quot;Activity Mode\&quot; as it exists in the Historical Stats endpoints. An individual Activity Mode represents a collection of activities that are played in a certain way. For example, Nightfall Strikes are part of a \&quot;Nightfall\&quot; activity mode, and any activities played as the PVP mode \&quot;Clash\&quot; are part of the \&quot;Clash activity mode.  Activity modes are nested under each other in a hierarchy, so that if you ask for - for example - \&quot;AllPvP\&quot;, you will get any PVP activities that the user has played, regardless of what specific PVP mode was being played.
 */

#ifndef OAIDestiny_Definitions_DestinyActivityModeDefinition_H
#define OAIDestiny_Definitions_DestinyActivityModeDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_DestinyActivityModeDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyActivityModeDefinition();
    OAIDestiny_Definitions_DestinyActivityModeDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyActivityModeDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActivityModeCategory() const;
    void setActivityModeCategory(const qint32 &activity_mode_category);
    bool is_activity_mode_category_Set() const;
    bool is_activity_mode_category_Valid() const;

    QMap<QString, qint32> getActivityModeMappings() const;
    void setActivityModeMappings(const QMap<QString, qint32> &activity_mode_mappings);
    bool is_activity_mode_mappings_Set() const;
    bool is_activity_mode_mappings_Valid() const;

    bool isDisplay() const;
    void setDisplay(const bool &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    bool isIsAggregateMode() const;
    void setIsAggregateMode(const bool &is_aggregate_mode);
    bool is_is_aggregate_mode_Set() const;
    bool is_is_aggregate_mode_Valid() const;

    bool isIsTeamBased() const;
    void setIsTeamBased(const bool &is_team_based);
    bool is_is_team_based_Set() const;
    bool is_is_team_based_Valid() const;

    qint32 getModeType() const;
    void setModeType(const qint32 &mode_type);
    bool is_mode_type_Set() const;
    bool is_mode_type_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QList<qint32> getParentHashes() const;
    void setParentHashes(const QList<qint32> &parent_hashes);
    bool is_parent_hashes_Set() const;
    bool is_parent_hashes_Valid() const;

    QString getPgcrImage() const;
    void setPgcrImage(const QString &pgcr_image);
    bool is_pgcr_image_Set() const;
    bool is_pgcr_image_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_activity_mode_category;
    bool m_activity_mode_category_isSet;
    bool m_activity_mode_category_isValid;

    QMap<QString, qint32> m_activity_mode_mappings;
    bool m_activity_mode_mappings_isSet;
    bool m_activity_mode_mappings_isValid;

    bool m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    bool m_is_aggregate_mode;
    bool m_is_aggregate_mode_isSet;
    bool m_is_aggregate_mode_isValid;

    bool m_is_team_based;
    bool m_is_team_based_isSet;
    bool m_is_team_based_isValid;

    qint32 m_mode_type;
    bool m_mode_type_isSet;
    bool m_mode_type_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QList<qint32> m_parent_hashes;
    bool m_parent_hashes_isSet;
    bool m_parent_hashes_isValid;

    QString m_pgcr_image;
    bool m_pgcr_image_isSet;
    bool m_pgcr_image_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyActivityModeDefinition)

#endif // OAIDestiny_Definitions_DestinyActivityModeDefinition_H
