/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyItemSackBlockDefinition.h
 *
 * Some items are \&quot;sacks\&quot; - they can be \&quot;opened\&quot; to produce other items. This is information related to its sack status, mostly UI strings. Engrams are an example of items that are considered to be \&quot;Sacks\&quot;.
 */

#ifndef OAIDestiny_Definitions_DestinyItemSackBlockDefinition_H
#define OAIDestiny_Definitions_DestinyItemSackBlockDefinition_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyItemSackBlockDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyItemSackBlockDefinition();
    OAIDestiny_Definitions_DestinyItemSackBlockDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyItemSackBlockDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetailAction() const;
    void setDetailAction(const QString &detail_action);
    bool is_detail_action_Set() const;
    bool is_detail_action_Valid() const;

    QString getOpenAction() const;
    void setOpenAction(const QString &open_action);
    bool is_open_action_Set() const;
    bool is_open_action_Valid() const;

    bool isOpenOnAcquire() const;
    void setOpenOnAcquire(const bool &open_on_acquire);
    bool is_open_on_acquire_Set() const;
    bool is_open_on_acquire_Valid() const;

    qint32 getSelectItemCount() const;
    void setSelectItemCount(const qint32 &select_item_count);
    bool is_select_item_count_Set() const;
    bool is_select_item_count_Valid() const;

    QString getVendorSackType() const;
    void setVendorSackType(const QString &vendor_sack_type);
    bool is_vendor_sack_type_Set() const;
    bool is_vendor_sack_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_detail_action;
    bool m_detail_action_isSet;
    bool m_detail_action_isValid;

    QString m_open_action;
    bool m_open_action_isSet;
    bool m_open_action_isValid;

    bool m_open_on_acquire;
    bool m_open_on_acquire_isSet;
    bool m_open_on_acquire_isValid;

    qint32 m_select_item_count;
    bool m_select_item_count_isSet;
    bool m_select_item_count_isValid;

    QString m_vendor_sack_type;
    bool m_vendor_sack_type_isSet;
    bool m_vendor_sack_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyItemSackBlockDefinition)

#endif // OAIDestiny_Definitions_DestinyItemSackBlockDefinition_H
