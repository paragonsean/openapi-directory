/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Milestones_DestinyMilestoneActivity.h
 *
 * Sometimes, we know the specific activity that the Milestone wants you to play. This entity provides additional information about that Activity and all of its variants. (sometimes there&#39;s only one variant, but I think you get the point)
 */

#ifndef OAIDestiny_Milestones_DestinyMilestoneActivity_H
#define OAIDestiny_Milestones_DestinyMilestoneActivity_H

#include <QJsonObject>

#include "OAIDestiny_Milestones_DestinyMilestoneActivityVariant.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Milestones_DestinyMilestoneActivityVariant;

class OAIDestiny_Milestones_DestinyMilestoneActivity : public OAIObject {
public:
    OAIDestiny_Milestones_DestinyMilestoneActivity();
    OAIDestiny_Milestones_DestinyMilestoneActivity(QString json);
    ~OAIDestiny_Milestones_DestinyMilestoneActivity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActivityHash() const;
    void setActivityHash(const qint32 &activity_hash);
    bool is_activity_hash_Set() const;
    bool is_activity_hash_Valid() const;

    qint32 getActivityModeHash() const;
    void setActivityModeHash(const qint32 &activity_mode_hash);
    bool is_activity_mode_hash_Set() const;
    bool is_activity_mode_hash_Valid() const;

    qint32 getActivityModeType() const;
    void setActivityModeType(const qint32 &activity_mode_type);
    bool is_activity_mode_type_Set() const;
    bool is_activity_mode_type_Valid() const;

    QList<qint32> getModifierHashes() const;
    void setModifierHashes(const QList<qint32> &modifier_hashes);
    bool is_modifier_hashes_Set() const;
    bool is_modifier_hashes_Valid() const;

    QList<OAIDestiny_Milestones_DestinyMilestoneActivityVariant> getVariants() const;
    void setVariants(const QList<OAIDestiny_Milestones_DestinyMilestoneActivityVariant> &variants);
    bool is_variants_Set() const;
    bool is_variants_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_activity_hash;
    bool m_activity_hash_isSet;
    bool m_activity_hash_isValid;

    qint32 m_activity_mode_hash;
    bool m_activity_mode_hash_isSet;
    bool m_activity_mode_hash_isValid;

    qint32 m_activity_mode_type;
    bool m_activity_mode_type_isSet;
    bool m_activity_mode_type_isValid;

    QList<qint32> m_modifier_hashes;
    bool m_modifier_hashes_isSet;
    bool m_modifier_hashes_isValid;

    QList<OAIDestiny_Milestones_DestinyMilestoneActivityVariant> m_variants;
    bool m_variants_isSet;
    bool m_variants_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Milestones_DestinyMilestoneActivity)

#endif // OAIDestiny_Milestones_DestinyMilestoneActivity_H
