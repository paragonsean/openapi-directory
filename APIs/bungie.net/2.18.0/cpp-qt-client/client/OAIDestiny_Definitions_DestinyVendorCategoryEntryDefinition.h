/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition.h
 *
 * This is the definition for a single Vendor Category, into which Sale Items are grouped.
 */

#ifndef OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition_H
#define OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_DestinyVendorCategoryOverlayDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_DestinyVendorCategoryOverlayDefinition;

class OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition();
    OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBuyStringOverride() const;
    void setBuyStringOverride(const QString &buy_string_override);
    bool is_buy_string_override_Set() const;
    bool is_buy_string_override_Valid() const;

    qint32 getCategoryHash() const;
    void setCategoryHash(const qint32 &category_hash);
    bool is_category_hash_Set() const;
    bool is_category_hash_Valid() const;

    qint32 getCategoryIndex() const;
    void setCategoryIndex(const qint32 &category_index);
    bool is_category_index_Set() const;
    bool is_category_index_Valid() const;

    QString getDisabledDescription() const;
    void setDisabledDescription(const QString &disabled_description);
    bool is_disabled_description_Set() const;
    bool is_disabled_description_Valid() const;

    QString getDisplayTitle() const;
    void setDisplayTitle(const QString &display_title);
    bool is_display_title_Set() const;
    bool is_display_title_Valid() const;

    bool isHideFromRegularPurchase() const;
    void setHideFromRegularPurchase(const bool &hide_from_regular_purchase);
    bool is_hide_from_regular_purchase_Set() const;
    bool is_hide_from_regular_purchase_Valid() const;

    bool isHideIfNoCurrency() const;
    void setHideIfNoCurrency(const bool &hide_if_no_currency);
    bool is_hide_if_no_currency_Set() const;
    bool is_hide_if_no_currency_Valid() const;

    bool isIsDisplayOnly() const;
    void setIsDisplayOnly(const bool &is_display_only);
    bool is_is_display_only_Set() const;
    bool is_is_display_only_Valid() const;

    bool isIsPreview() const;
    void setIsPreview(const bool &is_preview);
    bool is_is_preview_Set() const;
    bool is_is_preview_Valid() const;

    OAIDestiny_Definitions_DestinyVendorCategoryOverlayDefinition getOverlay() const;
    void setOverlay(const OAIDestiny_Definitions_DestinyVendorCategoryOverlayDefinition &overlay);
    bool is_overlay_Set() const;
    bool is_overlay_Valid() const;

    qint32 getQuantityAvailable() const;
    void setQuantityAvailable(const qint32 &quantity_available);
    bool is_quantity_available_Set() const;
    bool is_quantity_available_Valid() const;

    qint32 getResetIntervalMinutesOverride() const;
    void setResetIntervalMinutesOverride(const qint32 &reset_interval_minutes_override);
    bool is_reset_interval_minutes_override_Set() const;
    bool is_reset_interval_minutes_override_Valid() const;

    qint32 getResetOffsetMinutesOverride() const;
    void setResetOffsetMinutesOverride(const qint32 &reset_offset_minutes_override);
    bool is_reset_offset_minutes_override_Set() const;
    bool is_reset_offset_minutes_override_Valid() const;

    bool isShowUnavailableItems() const;
    void setShowUnavailableItems(const bool &show_unavailable_items);
    bool is_show_unavailable_items_Set() const;
    bool is_show_unavailable_items_Valid() const;

    qint32 getSortValue() const;
    void setSortValue(const qint32 &sort_value);
    bool is_sort_value_Set() const;
    bool is_sort_value_Valid() const;

    QList<qint32> getVendorItemIndexes() const;
    void setVendorItemIndexes(const QList<qint32> &vendor_item_indexes);
    bool is_vendor_item_indexes_Set() const;
    bool is_vendor_item_indexes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_buy_string_override;
    bool m_buy_string_override_isSet;
    bool m_buy_string_override_isValid;

    qint32 m_category_hash;
    bool m_category_hash_isSet;
    bool m_category_hash_isValid;

    qint32 m_category_index;
    bool m_category_index_isSet;
    bool m_category_index_isValid;

    QString m_disabled_description;
    bool m_disabled_description_isSet;
    bool m_disabled_description_isValid;

    QString m_display_title;
    bool m_display_title_isSet;
    bool m_display_title_isValid;

    bool m_hide_from_regular_purchase;
    bool m_hide_from_regular_purchase_isSet;
    bool m_hide_from_regular_purchase_isValid;

    bool m_hide_if_no_currency;
    bool m_hide_if_no_currency_isSet;
    bool m_hide_if_no_currency_isValid;

    bool m_is_display_only;
    bool m_is_display_only_isSet;
    bool m_is_display_only_isValid;

    bool m_is_preview;
    bool m_is_preview_isSet;
    bool m_is_preview_isValid;

    OAIDestiny_Definitions_DestinyVendorCategoryOverlayDefinition m_overlay;
    bool m_overlay_isSet;
    bool m_overlay_isValid;

    qint32 m_quantity_available;
    bool m_quantity_available_isSet;
    bool m_quantity_available_isValid;

    qint32 m_reset_interval_minutes_override;
    bool m_reset_interval_minutes_override_isSet;
    bool m_reset_interval_minutes_override_isValid;

    qint32 m_reset_offset_minutes_override;
    bool m_reset_offset_minutes_override_isSet;
    bool m_reset_offset_minutes_override_isValid;

    bool m_show_unavailable_items;
    bool m_show_unavailable_items_isSet;
    bool m_show_unavailable_items_isValid;

    qint32 m_sort_value;
    bool m_sort_value_isSet;
    bool m_sort_value_isValid;

    QList<qint32> m_vendor_item_indexes;
    bool m_vendor_item_indexes_isSet;
    bool m_vendor_item_indexes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition)

#endif // OAIDestiny_Definitions_DestinyVendorCategoryEntryDefinition_H
