/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyVendorItemQuantity.h
 *
 * In addition to item quantity information for vendor prices, this also has any optional information that may exist about how the item&#39;s quantity can be modified. (unfortunately not information that is able to be read outside of the BNet servers, but it&#39;s there)
 */

#ifndef OAIDestiny_Definitions_DestinyVendorItemQuantity_H
#define OAIDestiny_Definitions_DestinyVendorItemQuantity_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyVendorItemQuantity : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyVendorItemQuantity();
    OAIDestiny_Definitions_DestinyVendorItemQuantity(QString json);
    ~OAIDestiny_Definitions_DestinyVendorItemQuantity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isHasConditionalVisibility() const;
    void setHasConditionalVisibility(const bool &has_conditional_visibility);
    bool is_has_conditional_visibility_Set() const;
    bool is_has_conditional_visibility_Valid() const;

    qint32 getItemHash() const;
    void setItemHash(const qint32 &item_hash);
    bool is_item_hash_Set() const;
    bool is_item_hash_Valid() const;

    qint64 getItemInstanceId() const;
    void setItemInstanceId(const qint64 &item_instance_id);
    bool is_item_instance_id_Set() const;
    bool is_item_instance_id_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_has_conditional_visibility;
    bool m_has_conditional_visibility_isSet;
    bool m_has_conditional_visibility_isValid;

    qint32 m_item_hash;
    bool m_item_hash_isSet;
    bool m_item_hash_isValid;

    qint64 m_item_instance_id;
    bool m_item_instance_id_isSet;
    bool m_item_instance_id_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyVendorItemQuantity)

#endif // OAIDestiny_Definitions_DestinyVendorItemQuantity_H
