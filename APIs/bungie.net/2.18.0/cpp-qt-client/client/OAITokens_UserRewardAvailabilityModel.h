/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITokens_UserRewardAvailabilityModel.h
 *
 * 
 */

#ifndef OAITokens_UserRewardAvailabilityModel_H
#define OAITokens_UserRewardAvailabilityModel_H

#include <QJsonObject>

#include "OAITokens_RewardAvailabilityModel.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITokens_RewardAvailabilityModel;

class OAITokens_UserRewardAvailabilityModel : public OAIObject {
public:
    OAITokens_UserRewardAvailabilityModel();
    OAITokens_UserRewardAvailabilityModel(QString json);
    ~OAITokens_UserRewardAvailabilityModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITokens_RewardAvailabilityModel getAvailabilityModel() const;
    void setAvailabilityModel(const OAITokens_RewardAvailabilityModel &availability_model);
    bool is_availability_model_Set() const;
    bool is_availability_model_Valid() const;

    bool isIsAvailableForUser() const;
    void setIsAvailableForUser(const bool &is_available_for_user);
    bool is_is_available_for_user_Set() const;
    bool is_is_available_for_user_Valid() const;

    bool isIsUnlockedForUser() const;
    void setIsUnlockedForUser(const bool &is_unlocked_for_user);
    bool is_is_unlocked_for_user_Set() const;
    bool is_is_unlocked_for_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITokens_RewardAvailabilityModel m_availability_model;
    bool m_availability_model_isSet;
    bool m_availability_model_isValid;

    bool m_is_available_for_user;
    bool m_is_available_for_user_isSet;
    bool m_is_available_for_user_isValid;

    bool m_is_unlocked_for_user;
    bool m_is_unlocked_for_user_isSet;
    bool m_is_unlocked_for_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITokens_UserRewardAvailabilityModel)

#endif // OAITokens_UserRewardAvailabilityModel_H
