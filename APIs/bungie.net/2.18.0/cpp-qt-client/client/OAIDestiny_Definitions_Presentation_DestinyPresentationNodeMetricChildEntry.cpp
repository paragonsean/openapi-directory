/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry() {
    this->initializeModel();
}

OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::~OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry() {}

void OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::initializeModel() {

    m_metric_hash_isSet = false;
    m_metric_hash_isValid = false;

    m_node_display_priority_isSet = false;
    m_node_display_priority_isValid = false;
}

void OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::fromJsonObject(QJsonObject json) {

    m_metric_hash_isValid = ::OpenAPI::fromJsonValue(m_metric_hash, json[QString("metricHash")]);
    m_metric_hash_isSet = !json[QString("metricHash")].isNull() && m_metric_hash_isValid;

    m_node_display_priority_isValid = ::OpenAPI::fromJsonValue(m_node_display_priority, json[QString("nodeDisplayPriority")]);
    m_node_display_priority_isSet = !json[QString("nodeDisplayPriority")].isNull() && m_node_display_priority_isValid;
}

QString OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_metric_hash_isSet) {
        obj.insert(QString("metricHash"), ::OpenAPI::toJsonValue(m_metric_hash));
    }
    if (m_node_display_priority_isSet) {
        obj.insert(QString("nodeDisplayPriority"), ::OpenAPI::toJsonValue(m_node_display_priority));
    }
    return obj;
}

qint32 OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::getMetricHash() const {
    return m_metric_hash;
}
void OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::setMetricHash(const qint32 &metric_hash) {
    m_metric_hash = metric_hash;
    m_metric_hash_isSet = true;
}

bool OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::is_metric_hash_Set() const{
    return m_metric_hash_isSet;
}

bool OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::is_metric_hash_Valid() const{
    return m_metric_hash_isValid;
}

qint32 OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::getNodeDisplayPriority() const {
    return m_node_display_priority;
}
void OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::setNodeDisplayPriority(const qint32 &node_display_priority) {
    m_node_display_priority = node_display_priority;
    m_node_display_priority_isSet = true;
}

bool OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::is_node_display_priority_Set() const{
    return m_node_display_priority_isSet;
}

bool OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::is_node_display_priority_Valid() const{
    return m_node_display_priority_isValid;
}

bool OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metric_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_display_priority_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Presentation_DestinyPresentationNodeMetricChildEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
