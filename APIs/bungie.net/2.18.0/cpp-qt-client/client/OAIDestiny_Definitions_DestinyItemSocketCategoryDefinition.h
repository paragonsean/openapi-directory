/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition.h
 *
 * Sockets are grouped into categories in the UI. These define which category and which sockets are under that category.
 */

#ifndef OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition_H
#define OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition();
    OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getSocketCategoryHash() const;
    void setSocketCategoryHash(const qint32 &socket_category_hash);
    bool is_socket_category_hash_Set() const;
    bool is_socket_category_hash_Valid() const;

    QList<qint32> getSocketIndexes() const;
    void setSocketIndexes(const QList<qint32> &socket_indexes);
    bool is_socket_indexes_Set() const;
    bool is_socket_indexes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_socket_category_hash;
    bool m_socket_category_hash_isSet;
    bool m_socket_category_hash_isValid;

    QList<qint32> m_socket_indexes;
    bool m_socket_indexes_isSet;
    bool m_socket_indexes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition)

#endif // OAIDestiny_Definitions_DestinyItemSocketCategoryDefinition_H
