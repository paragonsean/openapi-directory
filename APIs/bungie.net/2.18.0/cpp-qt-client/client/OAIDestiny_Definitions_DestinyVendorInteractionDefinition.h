/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyVendorInteractionDefinition.h
 *
 * A Vendor Interaction is a dialog shown by the vendor other than sale items or transfer screens. The vendor is showing you something, and asking you to reply to it by choosing an option or reward.
 */

#ifndef OAIDestiny_Definitions_DestinyVendorInteractionDefinition_H
#define OAIDestiny_Definitions_DestinyVendorInteractionDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include "OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition.h"
#include "OAIDestiny_Definitions_DestinyVendorInteractionSackEntryDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;
class OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition;
class OAIDestiny_Definitions_DestinyVendorInteractionSackEntryDefinition;

class OAIDestiny_Definitions_DestinyVendorInteractionDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyVendorInteractionDefinition();
    OAIDestiny_Definitions_DestinyVendorInteractionDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyVendorInteractionDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFlavorLineOne() const;
    void setFlavorLineOne(const QString &flavor_line_one);
    bool is_flavor_line_one_Set() const;
    bool is_flavor_line_one_Valid() const;

    QString getFlavorLineTwo() const;
    void setFlavorLineTwo(const QString &flavor_line_two);
    bool is_flavor_line_two_Set() const;
    bool is_flavor_line_two_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getHeaderDisplayProperties() const;
    void setHeaderDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &header_display_properties);
    bool is_header_display_properties_Set() const;
    bool is_header_display_properties_Valid() const;

    QString getInstructions() const;
    void setInstructions(const QString &instructions);
    bool is_instructions_Set() const;
    bool is_instructions_Valid() const;

    qint32 getInteractionIndex() const;
    void setInteractionIndex(const qint32 &interaction_index);
    bool is_interaction_index_Set() const;
    bool is_interaction_index_Valid() const;

    qint32 getInteractionType() const;
    void setInteractionType(const qint32 &interaction_type);
    bool is_interaction_type_Set() const;
    bool is_interaction_type_Valid() const;

    qint32 getQuestlineItemHash() const;
    void setQuestlineItemHash(const qint32 &questline_item_hash);
    bool is_questline_item_hash_Set() const;
    bool is_questline_item_hash_Valid() const;

    QList<OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition> getReplies() const;
    void setReplies(const QList<OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition> &replies);
    bool is_replies_Set() const;
    bool is_replies_Valid() const;

    QString getRewardBlockLabel() const;
    void setRewardBlockLabel(const QString &reward_block_label);
    bool is_reward_block_label_Set() const;
    bool is_reward_block_label_Valid() const;

    qint32 getRewardVendorCategoryIndex() const;
    void setRewardVendorCategoryIndex(const qint32 &reward_vendor_category_index);
    bool is_reward_vendor_category_index_Set() const;
    bool is_reward_vendor_category_index_Valid() const;

    QList<OAIDestiny_Definitions_DestinyVendorInteractionSackEntryDefinition> getSackInteractionList() const;
    void setSackInteractionList(const QList<OAIDestiny_Definitions_DestinyVendorInteractionSackEntryDefinition> &sack_interaction_list);
    bool is_sack_interaction_list_Set() const;
    bool is_sack_interaction_list_Valid() const;

    qint32 getUiInteractionType() const;
    void setUiInteractionType(const qint32 &ui_interaction_type);
    bool is_ui_interaction_type_Set() const;
    bool is_ui_interaction_type_Valid() const;

    qint32 getVendorCategoryIndex() const;
    void setVendorCategoryIndex(const qint32 &vendor_category_index);
    bool is_vendor_category_index_Set() const;
    bool is_vendor_category_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_flavor_line_one;
    bool m_flavor_line_one_isSet;
    bool m_flavor_line_one_isValid;

    QString m_flavor_line_two;
    bool m_flavor_line_two_isSet;
    bool m_flavor_line_two_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_header_display_properties;
    bool m_header_display_properties_isSet;
    bool m_header_display_properties_isValid;

    QString m_instructions;
    bool m_instructions_isSet;
    bool m_instructions_isValid;

    qint32 m_interaction_index;
    bool m_interaction_index_isSet;
    bool m_interaction_index_isValid;

    qint32 m_interaction_type;
    bool m_interaction_type_isSet;
    bool m_interaction_type_isValid;

    qint32 m_questline_item_hash;
    bool m_questline_item_hash_isSet;
    bool m_questline_item_hash_isValid;

    QList<OAIDestiny_Definitions_DestinyVendorInteractionReplyDefinition> m_replies;
    bool m_replies_isSet;
    bool m_replies_isValid;

    QString m_reward_block_label;
    bool m_reward_block_label_isSet;
    bool m_reward_block_label_isValid;

    qint32 m_reward_vendor_category_index;
    bool m_reward_vendor_category_index_isSet;
    bool m_reward_vendor_category_index_isValid;

    QList<OAIDestiny_Definitions_DestinyVendorInteractionSackEntryDefinition> m_sack_interaction_list;
    bool m_sack_interaction_list_isSet;
    bool m_sack_interaction_list_isValid;

    qint32 m_ui_interaction_type;
    bool m_ui_interaction_type_isSet;
    bool m_ui_interaction_type_isValid;

    qint32 m_vendor_category_index;
    bool m_vendor_category_index_isSet;
    bool m_vendor_category_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyVendorInteractionDefinition)

#endif // OAIDestiny_Definitions_DestinyVendorInteractionDefinition_H
