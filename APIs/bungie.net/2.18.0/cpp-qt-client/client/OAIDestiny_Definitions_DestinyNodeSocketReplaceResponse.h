/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse.h
 *
 * This is a bit of an odd duck. Apparently, if talent nodes steps have this data, the game will go through on step activation and alter the first Socket it finds on the item that has a type matching the given socket type, inserting the indicated plug item.
 */

#ifndef OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse_H
#define OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse();
    OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse(QString json);
    ~OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPlugItemHash() const;
    void setPlugItemHash(const qint32 &plug_item_hash);
    bool is_plug_item_hash_Set() const;
    bool is_plug_item_hash_Valid() const;

    qint32 getSocketTypeHash() const;
    void setSocketTypeHash(const qint32 &socket_type_hash);
    bool is_socket_type_hash_Set() const;
    bool is_socket_type_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_plug_item_hash;
    bool m_plug_item_hash_isSet;
    bool m_plug_item_hash_isValid;

    qint32 m_socket_type_hash;
    bool m_socket_type_hash_isSet;
    bool m_socket_type_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse)

#endif // OAIDestiny_Definitions_DestinyNodeSocketReplaceResponse_H
