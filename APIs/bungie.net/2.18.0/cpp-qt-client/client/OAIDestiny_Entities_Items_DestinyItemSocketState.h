/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Entities_Items_DestinyItemSocketState.h
 *
 * The status of a given item&#39;s socket. (which plug is inserted, if any: whether it is enabled, what \&quot;reusable\&quot; plugs can be inserted, etc...)  If I had it to do over, this would probably have a DestinyItemPlug representing the inserted item instead of most of these properties. :shrug:
 */

#ifndef OAIDestiny_Entities_Items_DestinyItemSocketState_H
#define OAIDestiny_Entities_Items_DestinyItemSocketState_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Entities_Items_DestinyItemSocketState : public OAIObject {
public:
    OAIDestiny_Entities_Items_DestinyItemSocketState();
    OAIDestiny_Entities_Items_DestinyItemSocketState(QString json);
    ~OAIDestiny_Entities_Items_DestinyItemSocketState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint32> getEnableFailIndexes() const;
    void setEnableFailIndexes(const QList<qint32> &enable_fail_indexes);
    bool is_enable_fail_indexes_Set() const;
    bool is_enable_fail_indexes_Valid() const;

    bool isIsEnabled() const;
    void setIsEnabled(const bool &is_enabled);
    bool is_is_enabled_Set() const;
    bool is_is_enabled_Valid() const;

    bool isIsVisible() const;
    void setIsVisible(const bool &is_visible);
    bool is_is_visible_Set() const;
    bool is_is_visible_Valid() const;

    qint32 getPlugHash() const;
    void setPlugHash(const qint32 &plug_hash);
    bool is_plug_hash_Set() const;
    bool is_plug_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint32> m_enable_fail_indexes;
    bool m_enable_fail_indexes_isSet;
    bool m_enable_fail_indexes_isValid;

    bool m_is_enabled;
    bool m_is_enabled_isSet;
    bool m_is_enabled_isValid;

    bool m_is_visible;
    bool m_is_visible_isSet;
    bool m_is_visible_isValid;

    qint32 m_plug_hash;
    bool m_plug_hash_isSet;
    bool m_plug_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Entities_Items_DestinyItemSocketState)

#endif // OAIDestiny_Entities_Items_DestinyItemSocketState_H
