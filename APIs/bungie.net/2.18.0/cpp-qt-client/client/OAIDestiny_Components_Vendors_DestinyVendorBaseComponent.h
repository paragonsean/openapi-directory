/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Components_Vendors_DestinyVendorBaseComponent.h
 *
 * This component contains essential/summary information about the vendor.
 */

#ifndef OAIDestiny_Components_Vendors_DestinyVendorBaseComponent_H
#define OAIDestiny_Components_Vendors_DestinyVendorBaseComponent_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Components_Vendors_DestinyVendorBaseComponent : public OAIObject {
public:
    OAIDestiny_Components_Vendors_DestinyVendorBaseComponent();
    OAIDestiny_Components_Vendors_DestinyVendorBaseComponent(QString json);
    ~OAIDestiny_Components_Vendors_DestinyVendorBaseComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QDateTime getNextRefreshDate() const;
    void setNextRefreshDate(const QDateTime &next_refresh_date);
    bool is_next_refresh_date_Set() const;
    bool is_next_refresh_date_Valid() const;

    qint32 getVendorHash() const;
    void setVendorHash(const qint32 &vendor_hash);
    bool is_vendor_hash_Set() const;
    bool is_vendor_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QDateTime m_next_refresh_date;
    bool m_next_refresh_date_isSet;
    bool m_next_refresh_date_isValid;

    qint32 m_vendor_hash;
    bool m_vendor_hash_isSet;
    bool m_vendor_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Components_Vendors_DestinyVendorBaseComponent)

#endif // OAIDestiny_Components_Vendors_DestinyVendorBaseComponent_H
