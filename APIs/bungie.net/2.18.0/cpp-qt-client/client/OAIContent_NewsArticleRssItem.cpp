/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContent_NewsArticleRssItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContent_NewsArticleRssItem::OAIContent_NewsArticleRssItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContent_NewsArticleRssItem::OAIContent_NewsArticleRssItem() {
    this->initializeModel();
}

OAIContent_NewsArticleRssItem::~OAIContent_NewsArticleRssItem() {}

void OAIContent_NewsArticleRssItem::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_html_content_isSet = false;
    m_html_content_isValid = false;

    m_image_path_isSet = false;
    m_image_path_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_optional_mobile_image_path_isSet = false;
    m_optional_mobile_image_path_isValid = false;

    m_pub_date_isSet = false;
    m_pub_date_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_unique_identifier_isSet = false;
    m_unique_identifier_isValid = false;
}

void OAIContent_NewsArticleRssItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContent_NewsArticleRssItem::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_html_content_isValid = ::OpenAPI::fromJsonValue(m_html_content, json[QString("HtmlContent")]);
    m_html_content_isSet = !json[QString("HtmlContent")].isNull() && m_html_content_isValid;

    m_image_path_isValid = ::OpenAPI::fromJsonValue(m_image_path, json[QString("ImagePath")]);
    m_image_path_isSet = !json[QString("ImagePath")].isNull() && m_image_path_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("Link")]);
    m_link_isSet = !json[QString("Link")].isNull() && m_link_isValid;

    m_optional_mobile_image_path_isValid = ::OpenAPI::fromJsonValue(m_optional_mobile_image_path, json[QString("OptionalMobileImagePath")]);
    m_optional_mobile_image_path_isSet = !json[QString("OptionalMobileImagePath")].isNull() && m_optional_mobile_image_path_isValid;

    m_pub_date_isValid = ::OpenAPI::fromJsonValue(m_pub_date, json[QString("PubDate")]);
    m_pub_date_isSet = !json[QString("PubDate")].isNull() && m_pub_date_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_unique_identifier_isValid = ::OpenAPI::fromJsonValue(m_unique_identifier, json[QString("UniqueIdentifier")]);
    m_unique_identifier_isSet = !json[QString("UniqueIdentifier")].isNull() && m_unique_identifier_isValid;
}

QString OAIContent_NewsArticleRssItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContent_NewsArticleRssItem::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_html_content_isSet) {
        obj.insert(QString("HtmlContent"), ::OpenAPI::toJsonValue(m_html_content));
    }
    if (m_image_path_isSet) {
        obj.insert(QString("ImagePath"), ::OpenAPI::toJsonValue(m_image_path));
    }
    if (m_link_isSet) {
        obj.insert(QString("Link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_optional_mobile_image_path_isSet) {
        obj.insert(QString("OptionalMobileImagePath"), ::OpenAPI::toJsonValue(m_optional_mobile_image_path));
    }
    if (m_pub_date_isSet) {
        obj.insert(QString("PubDate"), ::OpenAPI::toJsonValue(m_pub_date));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_unique_identifier_isSet) {
        obj.insert(QString("UniqueIdentifier"), ::OpenAPI::toJsonValue(m_unique_identifier));
    }
    return obj;
}

QString OAIContent_NewsArticleRssItem::getDescription() const {
    return m_description;
}
void OAIContent_NewsArticleRssItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIContent_NewsArticleRssItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIContent_NewsArticleRssItem::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIContent_NewsArticleRssItem::getHtmlContent() const {
    return m_html_content;
}
void OAIContent_NewsArticleRssItem::setHtmlContent(const QString &html_content) {
    m_html_content = html_content;
    m_html_content_isSet = true;
}

bool OAIContent_NewsArticleRssItem::is_html_content_Set() const{
    return m_html_content_isSet;
}

bool OAIContent_NewsArticleRssItem::is_html_content_Valid() const{
    return m_html_content_isValid;
}

QString OAIContent_NewsArticleRssItem::getImagePath() const {
    return m_image_path;
}
void OAIContent_NewsArticleRssItem::setImagePath(const QString &image_path) {
    m_image_path = image_path;
    m_image_path_isSet = true;
}

bool OAIContent_NewsArticleRssItem::is_image_path_Set() const{
    return m_image_path_isSet;
}

bool OAIContent_NewsArticleRssItem::is_image_path_Valid() const{
    return m_image_path_isValid;
}

QString OAIContent_NewsArticleRssItem::getLink() const {
    return m_link;
}
void OAIContent_NewsArticleRssItem::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIContent_NewsArticleRssItem::is_link_Set() const{
    return m_link_isSet;
}

bool OAIContent_NewsArticleRssItem::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIContent_NewsArticleRssItem::getOptionalMobileImagePath() const {
    return m_optional_mobile_image_path;
}
void OAIContent_NewsArticleRssItem::setOptionalMobileImagePath(const QString &optional_mobile_image_path) {
    m_optional_mobile_image_path = optional_mobile_image_path;
    m_optional_mobile_image_path_isSet = true;
}

bool OAIContent_NewsArticleRssItem::is_optional_mobile_image_path_Set() const{
    return m_optional_mobile_image_path_isSet;
}

bool OAIContent_NewsArticleRssItem::is_optional_mobile_image_path_Valid() const{
    return m_optional_mobile_image_path_isValid;
}

QDateTime OAIContent_NewsArticleRssItem::getPubDate() const {
    return m_pub_date;
}
void OAIContent_NewsArticleRssItem::setPubDate(const QDateTime &pub_date) {
    m_pub_date = pub_date;
    m_pub_date_isSet = true;
}

bool OAIContent_NewsArticleRssItem::is_pub_date_Set() const{
    return m_pub_date_isSet;
}

bool OAIContent_NewsArticleRssItem::is_pub_date_Valid() const{
    return m_pub_date_isValid;
}

QString OAIContent_NewsArticleRssItem::getTitle() const {
    return m_title;
}
void OAIContent_NewsArticleRssItem::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIContent_NewsArticleRssItem::is_title_Set() const{
    return m_title_isSet;
}

bool OAIContent_NewsArticleRssItem::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIContent_NewsArticleRssItem::getUniqueIdentifier() const {
    return m_unique_identifier;
}
void OAIContent_NewsArticleRssItem::setUniqueIdentifier(const QString &unique_identifier) {
    m_unique_identifier = unique_identifier;
    m_unique_identifier_isSet = true;
}

bool OAIContent_NewsArticleRssItem::is_unique_identifier_Set() const{
    return m_unique_identifier_isSet;
}

bool OAIContent_NewsArticleRssItem::is_unique_identifier_Valid() const{
    return m_unique_identifier_isValid;
}

bool OAIContent_NewsArticleRssItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_optional_mobile_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pub_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContent_NewsArticleRssItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
