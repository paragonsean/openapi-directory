/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition.h
 *
 * 
 */

#ifndef OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition_H
#define OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyIconSequenceDefinition.h"
#include "OAIDestiny_Definitions_DestinyVendorRequirementDisplayEntryDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyIconSequenceDefinition;
class OAIDestiny_Definitions_DestinyVendorRequirementDisplayEntryDefinition;

class OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition();
    OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isHasIcon() const;
    void setHasIcon(const bool &has_icon);
    bool is_has_icon_Set() const;
    bool is_has_icon_Valid() const;

    QString getHighResIcon() const;
    void setHighResIcon(const QString &high_res_icon);
    bool is_high_res_icon_Set() const;
    bool is_high_res_icon_Valid() const;

    QString getIcon() const;
    void setIcon(const QString &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    QList<OAIDestiny_Definitions_Common_DestinyIconSequenceDefinition> getIconSequences() const;
    void setIconSequences(const QList<OAIDestiny_Definitions_Common_DestinyIconSequenceDefinition> &icon_sequences);
    bool is_icon_sequences_Set() const;
    bool is_icon_sequences_Valid() const;

    QString getLargeIcon() const;
    void setLargeIcon(const QString &large_icon);
    bool is_large_icon_Set() const;
    bool is_large_icon_Valid() const;

    QString getLargeTransparentIcon() const;
    void setLargeTransparentIcon(const QString &large_transparent_icon);
    bool is_large_transparent_icon_Set() const;
    bool is_large_transparent_icon_Valid() const;

    QString getMapIcon() const;
    void setMapIcon(const QString &map_icon);
    bool is_map_icon_Set() const;
    bool is_map_icon_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOriginalIcon() const;
    void setOriginalIcon(const QString &original_icon);
    bool is_original_icon_Set() const;
    bool is_original_icon_Valid() const;

    QList<OAIDestiny_Definitions_DestinyVendorRequirementDisplayEntryDefinition> getRequirementsDisplay() const;
    void setRequirementsDisplay(const QList<OAIDestiny_Definitions_DestinyVendorRequirementDisplayEntryDefinition> &requirements_display);
    bool is_requirements_display_Set() const;
    bool is_requirements_display_Valid() const;

    QString getSmallTransparentIcon() const;
    void setSmallTransparentIcon(const QString &small_transparent_icon);
    bool is_small_transparent_icon_Set() const;
    bool is_small_transparent_icon_Valid() const;

    QString getSubtitle() const;
    void setSubtitle(const QString &subtitle);
    bool is_subtitle_Set() const;
    bool is_subtitle_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_has_icon;
    bool m_has_icon_isSet;
    bool m_has_icon_isValid;

    QString m_high_res_icon;
    bool m_high_res_icon_isSet;
    bool m_high_res_icon_isValid;

    QString m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    QList<OAIDestiny_Definitions_Common_DestinyIconSequenceDefinition> m_icon_sequences;
    bool m_icon_sequences_isSet;
    bool m_icon_sequences_isValid;

    QString m_large_icon;
    bool m_large_icon_isSet;
    bool m_large_icon_isValid;

    QString m_large_transparent_icon;
    bool m_large_transparent_icon_isSet;
    bool m_large_transparent_icon_isValid;

    QString m_map_icon;
    bool m_map_icon_isSet;
    bool m_map_icon_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_original_icon;
    bool m_original_icon_isSet;
    bool m_original_icon_isValid;

    QList<OAIDestiny_Definitions_DestinyVendorRequirementDisplayEntryDefinition> m_requirements_display;
    bool m_requirements_display_isSet;
    bool m_requirements_display_isValid;

    QString m_small_transparent_icon;
    bool m_small_transparent_icon_isSet;
    bool m_small_transparent_icon_isValid;

    QString m_subtitle;
    bool m_subtitle_isSet;
    bool m_subtitle_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition)

#endif // OAIDestiny_Definitions_DestinyVendorDisplayPropertiesDefinition_H
