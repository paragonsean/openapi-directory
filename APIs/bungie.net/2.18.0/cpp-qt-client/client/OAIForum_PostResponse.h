/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForum_PostResponse.h
 *
 * 
 */

#ifndef OAIForum_PostResponse_H
#define OAIForum_PostResponse_H

#include <QJsonObject>

#include "OAIIgnores_IgnoreResponse.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIgnores_IgnoreResponse;

class OAIForum_PostResponse : public OAIObject {
public:
    OAIForum_PostResponse();
    OAIForum_PostResponse(QString json);
    ~OAIForum_PostResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsPinned() const;
    void setIsPinned(const bool &is_pinned);
    bool is_is_pinned_Set() const;
    bool is_is_pinned_Valid() const;

    OAIIgnores_IgnoreResponse getIgnoreStatus() const;
    void setIgnoreStatus(const OAIIgnores_IgnoreResponse &ignore_status);
    bool is_ignore_status_Set() const;
    bool is_ignore_status_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    bool isIsAnnouncement() const;
    void setIsAnnouncement(const bool &is_announcement);
    bool is_is_announcement_Set() const;
    bool is_is_announcement_Valid() const;

    QDateTime getLastReplyTimestamp() const;
    void setLastReplyTimestamp(const QDateTime &last_reply_timestamp);
    bool is_last_reply_timestamp_Set() const;
    bool is_last_reply_timestamp_Valid() const;

    qint64 getLatestReplyAuthorId() const;
    void setLatestReplyAuthorId(const qint64 &latest_reply_author_id);
    bool is_latest_reply_author_id_Set() const;
    bool is_latest_reply_author_id_Valid() const;

    qint64 getLatestReplyPostId() const;
    void setLatestReplyPostId(const qint64 &latest_reply_post_id);
    bool is_latest_reply_post_id_Set() const;
    bool is_latest_reply_post_id_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    qint32 getPopularity() const;
    void setPopularity(const qint32 &popularity);
    bool is_popularity_Set() const;
    bool is_popularity_Valid() const;

    QString getThumbnail() const;
    void setThumbnail(const QString &thumbnail);
    bool is_thumbnail_Set() const;
    bool is_thumbnail_Valid() const;

    qint32 getUrlMediaType() const;
    void setUrlMediaType(const qint32 &url_media_type);
    bool is_url_media_type_Set() const;
    bool is_url_media_type_Valid() const;

    bool isUserHasMutedPost() const;
    void setUserHasMutedPost(const bool &user_has_muted_post);
    bool is_user_has_muted_post_Set() const;
    bool is_user_has_muted_post_Valid() const;

    bool isUserHasRated() const;
    void setUserHasRated(const bool &user_has_rated);
    bool is_user_has_rated_Set() const;
    bool is_user_has_rated_Valid() const;

    qint32 getUserRating() const;
    void setUserRating(const qint32 &user_rating);
    bool is_user_rating_Set() const;
    bool is_user_rating_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_pinned;
    bool m_is_pinned_isSet;
    bool m_is_pinned_isValid;

    OAIIgnores_IgnoreResponse m_ignore_status;
    bool m_ignore_status_isSet;
    bool m_ignore_status_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    bool m_is_announcement;
    bool m_is_announcement_isSet;
    bool m_is_announcement_isValid;

    QDateTime m_last_reply_timestamp;
    bool m_last_reply_timestamp_isSet;
    bool m_last_reply_timestamp_isValid;

    qint64 m_latest_reply_author_id;
    bool m_latest_reply_author_id_isSet;
    bool m_latest_reply_author_id_isValid;

    qint64 m_latest_reply_post_id;
    bool m_latest_reply_post_id_isSet;
    bool m_latest_reply_post_id_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    qint32 m_popularity;
    bool m_popularity_isSet;
    bool m_popularity_isValid;

    QString m_thumbnail;
    bool m_thumbnail_isSet;
    bool m_thumbnail_isValid;

    qint32 m_url_media_type;
    bool m_url_media_type_isSet;
    bool m_url_media_type_isValid;

    bool m_user_has_muted_post;
    bool m_user_has_muted_post_isSet;
    bool m_user_has_muted_post_isValid;

    bool m_user_has_rated;
    bool m_user_has_rated_isSet;
    bool m_user_has_rated_isValid;

    qint32 m_user_rating;
    bool m_user_rating_isSet;
    bool m_user_rating_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForum_PostResponse)

#endif // OAIForum_PostResponse_H
