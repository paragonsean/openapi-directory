/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroupsV2_GroupV2Card.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroupsV2_GroupV2Card::OAIGroupsV2_GroupV2Card(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroupsV2_GroupV2Card::OAIGroupsV2_GroupV2Card() {
    this->initializeModel();
}

OAIGroupsV2_GroupV2Card::~OAIGroupsV2_GroupV2Card() {}

void OAIGroupsV2_GroupV2Card::initializeModel() {

    m_about_isSet = false;
    m_about_isValid = false;

    m_avatar_path_isSet = false;
    m_avatar_path_isValid = false;

    m_capabilities_isSet = false;
    m_capabilities_isValid = false;

    m_clan_info_isSet = false;
    m_clan_info_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_group_type_isSet = false;
    m_group_type_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_member_count_isSet = false;
    m_member_count_isValid = false;

    m_membership_option_isSet = false;
    m_membership_option_isValid = false;

    m_motto_isSet = false;
    m_motto_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_theme_isSet = false;
    m_theme_isValid = false;
}

void OAIGroupsV2_GroupV2Card::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroupsV2_GroupV2Card::fromJsonObject(QJsonObject json) {

    m_about_isValid = ::OpenAPI::fromJsonValue(m_about, json[QString("about")]);
    m_about_isSet = !json[QString("about")].isNull() && m_about_isValid;

    m_avatar_path_isValid = ::OpenAPI::fromJsonValue(m_avatar_path, json[QString("avatarPath")]);
    m_avatar_path_isSet = !json[QString("avatarPath")].isNull() && m_avatar_path_isValid;

    m_capabilities_isValid = ::OpenAPI::fromJsonValue(m_capabilities, json[QString("capabilities")]);
    m_capabilities_isSet = !json[QString("capabilities")].isNull() && m_capabilities_isValid;

    m_clan_info_isValid = ::OpenAPI::fromJsonValue(m_clan_info, json[QString("clanInfo")]);
    m_clan_info_isSet = !json[QString("clanInfo")].isNull() && m_clan_info_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("creationDate")]);
    m_creation_date_isSet = !json[QString("creationDate")].isNull() && m_creation_date_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("groupId")]);
    m_group_id_isSet = !json[QString("groupId")].isNull() && m_group_id_isValid;

    m_group_type_isValid = ::OpenAPI::fromJsonValue(m_group_type, json[QString("groupType")]);
    m_group_type_isSet = !json[QString("groupType")].isNull() && m_group_type_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_member_count_isValid = ::OpenAPI::fromJsonValue(m_member_count, json[QString("memberCount")]);
    m_member_count_isSet = !json[QString("memberCount")].isNull() && m_member_count_isValid;

    m_membership_option_isValid = ::OpenAPI::fromJsonValue(m_membership_option, json[QString("membershipOption")]);
    m_membership_option_isSet = !json[QString("membershipOption")].isNull() && m_membership_option_isValid;

    m_motto_isValid = ::OpenAPI::fromJsonValue(m_motto, json[QString("motto")]);
    m_motto_isSet = !json[QString("motto")].isNull() && m_motto_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_theme_isValid = ::OpenAPI::fromJsonValue(m_theme, json[QString("theme")]);
    m_theme_isSet = !json[QString("theme")].isNull() && m_theme_isValid;
}

QString OAIGroupsV2_GroupV2Card::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroupsV2_GroupV2Card::asJsonObject() const {
    QJsonObject obj;
    if (m_about_isSet) {
        obj.insert(QString("about"), ::OpenAPI::toJsonValue(m_about));
    }
    if (m_avatar_path_isSet) {
        obj.insert(QString("avatarPath"), ::OpenAPI::toJsonValue(m_avatar_path));
    }
    if (m_capabilities_isSet) {
        obj.insert(QString("capabilities"), ::OpenAPI::toJsonValue(m_capabilities));
    }
    if (m_clan_info.isSet()) {
        obj.insert(QString("clanInfo"), ::OpenAPI::toJsonValue(m_clan_info));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("creationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("groupId"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_group_type_isSet) {
        obj.insert(QString("groupType"), ::OpenAPI::toJsonValue(m_group_type));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_member_count_isSet) {
        obj.insert(QString("memberCount"), ::OpenAPI::toJsonValue(m_member_count));
    }
    if (m_membership_option_isSet) {
        obj.insert(QString("membershipOption"), ::OpenAPI::toJsonValue(m_membership_option));
    }
    if (m_motto_isSet) {
        obj.insert(QString("motto"), ::OpenAPI::toJsonValue(m_motto));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_theme_isSet) {
        obj.insert(QString("theme"), ::OpenAPI::toJsonValue(m_theme));
    }
    return obj;
}

QString OAIGroupsV2_GroupV2Card::getAbout() const {
    return m_about;
}
void OAIGroupsV2_GroupV2Card::setAbout(const QString &about) {
    m_about = about;
    m_about_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_about_Set() const{
    return m_about_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_about_Valid() const{
    return m_about_isValid;
}

QString OAIGroupsV2_GroupV2Card::getAvatarPath() const {
    return m_avatar_path;
}
void OAIGroupsV2_GroupV2Card::setAvatarPath(const QString &avatar_path) {
    m_avatar_path = avatar_path;
    m_avatar_path_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_avatar_path_Set() const{
    return m_avatar_path_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_avatar_path_Valid() const{
    return m_avatar_path_isValid;
}

qint32 OAIGroupsV2_GroupV2Card::getCapabilities() const {
    return m_capabilities;
}
void OAIGroupsV2_GroupV2Card::setCapabilities(const qint32 &capabilities) {
    m_capabilities = capabilities;
    m_capabilities_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_capabilities_Set() const{
    return m_capabilities_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_capabilities_Valid() const{
    return m_capabilities_isValid;
}

OAIGroupsV2_GroupV2ClanInfo OAIGroupsV2_GroupV2Card::getClanInfo() const {
    return m_clan_info;
}
void OAIGroupsV2_GroupV2Card::setClanInfo(const OAIGroupsV2_GroupV2ClanInfo &clan_info) {
    m_clan_info = clan_info;
    m_clan_info_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_clan_info_Set() const{
    return m_clan_info_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_clan_info_Valid() const{
    return m_clan_info_isValid;
}

QDateTime OAIGroupsV2_GroupV2Card::getCreationDate() const {
    return m_creation_date;
}
void OAIGroupsV2_GroupV2Card::setCreationDate(const QDateTime &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

qint64 OAIGroupsV2_GroupV2Card::getGroupId() const {
    return m_group_id;
}
void OAIGroupsV2_GroupV2Card::setGroupId(const qint64 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_group_id_Valid() const{
    return m_group_id_isValid;
}

qint32 OAIGroupsV2_GroupV2Card::getGroupType() const {
    return m_group_type;
}
void OAIGroupsV2_GroupV2Card::setGroupType(const qint32 &group_type) {
    m_group_type = group_type;
    m_group_type_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_group_type_Set() const{
    return m_group_type_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_group_type_Valid() const{
    return m_group_type_isValid;
}

QString OAIGroupsV2_GroupV2Card::getLocale() const {
    return m_locale;
}
void OAIGroupsV2_GroupV2Card::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_locale_Valid() const{
    return m_locale_isValid;
}

qint32 OAIGroupsV2_GroupV2Card::getMemberCount() const {
    return m_member_count;
}
void OAIGroupsV2_GroupV2Card::setMemberCount(const qint32 &member_count) {
    m_member_count = member_count;
    m_member_count_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_member_count_Set() const{
    return m_member_count_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_member_count_Valid() const{
    return m_member_count_isValid;
}

qint32 OAIGroupsV2_GroupV2Card::getMembershipOption() const {
    return m_membership_option;
}
void OAIGroupsV2_GroupV2Card::setMembershipOption(const qint32 &membership_option) {
    m_membership_option = membership_option;
    m_membership_option_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_membership_option_Set() const{
    return m_membership_option_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_membership_option_Valid() const{
    return m_membership_option_isValid;
}

QString OAIGroupsV2_GroupV2Card::getMotto() const {
    return m_motto;
}
void OAIGroupsV2_GroupV2Card::setMotto(const QString &motto) {
    m_motto = motto;
    m_motto_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_motto_Set() const{
    return m_motto_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_motto_Valid() const{
    return m_motto_isValid;
}

QString OAIGroupsV2_GroupV2Card::getName() const {
    return m_name;
}
void OAIGroupsV2_GroupV2Card::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGroupsV2_GroupV2Card::getTheme() const {
    return m_theme;
}
void OAIGroupsV2_GroupV2Card::setTheme(const QString &theme) {
    m_theme = theme;
    m_theme_isSet = true;
}

bool OAIGroupsV2_GroupV2Card::is_theme_Set() const{
    return m_theme_isSet;
}

bool OAIGroupsV2_GroupV2Card::is_theme_Valid() const{
    return m_theme_isValid;
}

bool OAIGroupsV2_GroupV2Card::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_about_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avatar_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_capabilities_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_clan_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_motto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_theme_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroupsV2_GroupV2Card::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
