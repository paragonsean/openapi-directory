/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Seasons_DestinyEventCardImages.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Seasons_DestinyEventCardImages::OAIDestiny_Definitions_Seasons_DestinyEventCardImages(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Seasons_DestinyEventCardImages::OAIDestiny_Definitions_Seasons_DestinyEventCardImages() {
    this->initializeModel();
}

OAIDestiny_Definitions_Seasons_DestinyEventCardImages::~OAIDestiny_Definitions_Seasons_DestinyEventCardImages() {}

void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::initializeModel() {

    m_card_complete_image_path_isSet = false;
    m_card_complete_image_path_isValid = false;

    m_card_complete_wrap_image_path_isSet = false;
    m_card_complete_wrap_image_path_isValid = false;

    m_card_incomplete_image_path_isSet = false;
    m_card_incomplete_image_path_isValid = false;

    m_progress_icon_image_path_isSet = false;
    m_progress_icon_image_path_isValid = false;

    m_theme_background_image_path_isSet = false;
    m_theme_background_image_path_isValid = false;

    m_unowned_card_sleeve_image_path_isSet = false;
    m_unowned_card_sleeve_image_path_isValid = false;

    m_unowned_card_sleeve_wrap_image_path_isSet = false;
    m_unowned_card_sleeve_wrap_image_path_isValid = false;
}

void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::fromJsonObject(QJsonObject json) {

    m_card_complete_image_path_isValid = ::OpenAPI::fromJsonValue(m_card_complete_image_path, json[QString("cardCompleteImagePath")]);
    m_card_complete_image_path_isSet = !json[QString("cardCompleteImagePath")].isNull() && m_card_complete_image_path_isValid;

    m_card_complete_wrap_image_path_isValid = ::OpenAPI::fromJsonValue(m_card_complete_wrap_image_path, json[QString("cardCompleteWrapImagePath")]);
    m_card_complete_wrap_image_path_isSet = !json[QString("cardCompleteWrapImagePath")].isNull() && m_card_complete_wrap_image_path_isValid;

    m_card_incomplete_image_path_isValid = ::OpenAPI::fromJsonValue(m_card_incomplete_image_path, json[QString("cardIncompleteImagePath")]);
    m_card_incomplete_image_path_isSet = !json[QString("cardIncompleteImagePath")].isNull() && m_card_incomplete_image_path_isValid;

    m_progress_icon_image_path_isValid = ::OpenAPI::fromJsonValue(m_progress_icon_image_path, json[QString("progressIconImagePath")]);
    m_progress_icon_image_path_isSet = !json[QString("progressIconImagePath")].isNull() && m_progress_icon_image_path_isValid;

    m_theme_background_image_path_isValid = ::OpenAPI::fromJsonValue(m_theme_background_image_path, json[QString("themeBackgroundImagePath")]);
    m_theme_background_image_path_isSet = !json[QString("themeBackgroundImagePath")].isNull() && m_theme_background_image_path_isValid;

    m_unowned_card_sleeve_image_path_isValid = ::OpenAPI::fromJsonValue(m_unowned_card_sleeve_image_path, json[QString("unownedCardSleeveImagePath")]);
    m_unowned_card_sleeve_image_path_isSet = !json[QString("unownedCardSleeveImagePath")].isNull() && m_unowned_card_sleeve_image_path_isValid;

    m_unowned_card_sleeve_wrap_image_path_isValid = ::OpenAPI::fromJsonValue(m_unowned_card_sleeve_wrap_image_path, json[QString("unownedCardSleeveWrapImagePath")]);
    m_unowned_card_sleeve_wrap_image_path_isSet = !json[QString("unownedCardSleeveWrapImagePath")].isNull() && m_unowned_card_sleeve_wrap_image_path_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinyEventCardImages::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Seasons_DestinyEventCardImages::asJsonObject() const {
    QJsonObject obj;
    if (m_card_complete_image_path_isSet) {
        obj.insert(QString("cardCompleteImagePath"), ::OpenAPI::toJsonValue(m_card_complete_image_path));
    }
    if (m_card_complete_wrap_image_path_isSet) {
        obj.insert(QString("cardCompleteWrapImagePath"), ::OpenAPI::toJsonValue(m_card_complete_wrap_image_path));
    }
    if (m_card_incomplete_image_path_isSet) {
        obj.insert(QString("cardIncompleteImagePath"), ::OpenAPI::toJsonValue(m_card_incomplete_image_path));
    }
    if (m_progress_icon_image_path_isSet) {
        obj.insert(QString("progressIconImagePath"), ::OpenAPI::toJsonValue(m_progress_icon_image_path));
    }
    if (m_theme_background_image_path_isSet) {
        obj.insert(QString("themeBackgroundImagePath"), ::OpenAPI::toJsonValue(m_theme_background_image_path));
    }
    if (m_unowned_card_sleeve_image_path_isSet) {
        obj.insert(QString("unownedCardSleeveImagePath"), ::OpenAPI::toJsonValue(m_unowned_card_sleeve_image_path));
    }
    if (m_unowned_card_sleeve_wrap_image_path_isSet) {
        obj.insert(QString("unownedCardSleeveWrapImagePath"), ::OpenAPI::toJsonValue(m_unowned_card_sleeve_wrap_image_path));
    }
    return obj;
}

QString OAIDestiny_Definitions_Seasons_DestinyEventCardImages::getCardCompleteImagePath() const {
    return m_card_complete_image_path;
}
void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::setCardCompleteImagePath(const QString &card_complete_image_path) {
    m_card_complete_image_path = card_complete_image_path;
    m_card_complete_image_path_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_card_complete_image_path_Set() const{
    return m_card_complete_image_path_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_card_complete_image_path_Valid() const{
    return m_card_complete_image_path_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinyEventCardImages::getCardCompleteWrapImagePath() const {
    return m_card_complete_wrap_image_path;
}
void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::setCardCompleteWrapImagePath(const QString &card_complete_wrap_image_path) {
    m_card_complete_wrap_image_path = card_complete_wrap_image_path;
    m_card_complete_wrap_image_path_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_card_complete_wrap_image_path_Set() const{
    return m_card_complete_wrap_image_path_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_card_complete_wrap_image_path_Valid() const{
    return m_card_complete_wrap_image_path_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinyEventCardImages::getCardIncompleteImagePath() const {
    return m_card_incomplete_image_path;
}
void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::setCardIncompleteImagePath(const QString &card_incomplete_image_path) {
    m_card_incomplete_image_path = card_incomplete_image_path;
    m_card_incomplete_image_path_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_card_incomplete_image_path_Set() const{
    return m_card_incomplete_image_path_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_card_incomplete_image_path_Valid() const{
    return m_card_incomplete_image_path_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinyEventCardImages::getProgressIconImagePath() const {
    return m_progress_icon_image_path;
}
void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::setProgressIconImagePath(const QString &progress_icon_image_path) {
    m_progress_icon_image_path = progress_icon_image_path;
    m_progress_icon_image_path_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_progress_icon_image_path_Set() const{
    return m_progress_icon_image_path_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_progress_icon_image_path_Valid() const{
    return m_progress_icon_image_path_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinyEventCardImages::getThemeBackgroundImagePath() const {
    return m_theme_background_image_path;
}
void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::setThemeBackgroundImagePath(const QString &theme_background_image_path) {
    m_theme_background_image_path = theme_background_image_path;
    m_theme_background_image_path_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_theme_background_image_path_Set() const{
    return m_theme_background_image_path_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_theme_background_image_path_Valid() const{
    return m_theme_background_image_path_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinyEventCardImages::getUnownedCardSleeveImagePath() const {
    return m_unowned_card_sleeve_image_path;
}
void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::setUnownedCardSleeveImagePath(const QString &unowned_card_sleeve_image_path) {
    m_unowned_card_sleeve_image_path = unowned_card_sleeve_image_path;
    m_unowned_card_sleeve_image_path_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_unowned_card_sleeve_image_path_Set() const{
    return m_unowned_card_sleeve_image_path_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_unowned_card_sleeve_image_path_Valid() const{
    return m_unowned_card_sleeve_image_path_isValid;
}

QString OAIDestiny_Definitions_Seasons_DestinyEventCardImages::getUnownedCardSleeveWrapImagePath() const {
    return m_unowned_card_sleeve_wrap_image_path;
}
void OAIDestiny_Definitions_Seasons_DestinyEventCardImages::setUnownedCardSleeveWrapImagePath(const QString &unowned_card_sleeve_wrap_image_path) {
    m_unowned_card_sleeve_wrap_image_path = unowned_card_sleeve_wrap_image_path;
    m_unowned_card_sleeve_wrap_image_path_isSet = true;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_unowned_card_sleeve_wrap_image_path_Set() const{
    return m_unowned_card_sleeve_wrap_image_path_isSet;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::is_unowned_card_sleeve_wrap_image_path_Valid() const{
    return m_unowned_card_sleeve_wrap_image_path_isValid;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card_complete_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_complete_wrap_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_incomplete_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_icon_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_theme_background_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unowned_card_sleeve_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unowned_card_sleeve_wrap_image_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Seasons_DestinyEventCardImages::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
