/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyTalentNodeCategory.h
 *
 * An artificial construct provided by Bungie.Net, where we attempt to group talent nodes by functionality.  This is a single set of references to Talent Nodes that share a common trait or purpose.
 */

#ifndef OAIDestiny_Definitions_DestinyTalentNodeCategory_H
#define OAIDestiny_Definitions_DestinyTalentNodeCategory_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_DestinyTalentNodeCategory : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyTalentNodeCategory();
    OAIDestiny_Definitions_DestinyTalentNodeCategory(QString json);
    ~OAIDestiny_Definitions_DestinyTalentNodeCategory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    bool isIsLoreDriven() const;
    void setIsLoreDriven(const bool &is_lore_driven);
    bool is_is_lore_driven_Set() const;
    bool is_is_lore_driven_Valid() const;

    QList<qint32> getNodeHashes() const;
    void setNodeHashes(const QList<qint32> &node_hashes);
    bool is_node_hashes_Set() const;
    bool is_node_hashes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    bool m_is_lore_driven;
    bool m_is_lore_driven_isSet;
    bool m_is_lore_driven_isValid;

    QList<qint32> m_node_hashes;
    bool m_node_hashes_isSet;
    bool m_node_hashes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyTalentNodeCategory)

#endif // OAIDestiny_Definitions_DestinyTalentNodeCategory_H
