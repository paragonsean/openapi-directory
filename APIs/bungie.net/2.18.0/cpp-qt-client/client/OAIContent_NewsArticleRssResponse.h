/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContent_NewsArticleRssResponse.h
 *
 * 
 */

#ifndef OAIContent_NewsArticleRssResponse_H
#define OAIContent_NewsArticleRssResponse_H

#include <QJsonObject>

#include "OAIContent_NewsArticleRssItem.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContent_NewsArticleRssItem;

class OAIContent_NewsArticleRssResponse : public OAIObject {
public:
    OAIContent_NewsArticleRssResponse();
    OAIContent_NewsArticleRssResponse(QString json);
    ~OAIContent_NewsArticleRssResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategoryFilter() const;
    void setCategoryFilter(const QString &category_filter);
    bool is_category_filter_Set() const;
    bool is_category_filter_Valid() const;

    qint32 getCurrentPaginationToken() const;
    void setCurrentPaginationToken(const qint32 &current_pagination_token);
    bool is_current_pagination_token_Set() const;
    bool is_current_pagination_token_Valid() const;

    QList<OAIContent_NewsArticleRssItem> getNewsArticles() const;
    void setNewsArticles(const QList<OAIContent_NewsArticleRssItem> &news_articles);
    bool is_news_articles_Set() const;
    bool is_news_articles_Valid() const;

    qint32 getNextPaginationToken() const;
    void setNextPaginationToken(const qint32 &next_pagination_token);
    bool is_next_pagination_token_Set() const;
    bool is_next_pagination_token_Valid() const;

    qint32 getResultCountThisPage() const;
    void setResultCountThisPage(const qint32 &result_count_this_page);
    bool is_result_count_this_page_Set() const;
    bool is_result_count_this_page_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category_filter;
    bool m_category_filter_isSet;
    bool m_category_filter_isValid;

    qint32 m_current_pagination_token;
    bool m_current_pagination_token_isSet;
    bool m_current_pagination_token_isValid;

    QList<OAIContent_NewsArticleRssItem> m_news_articles;
    bool m_news_articles_isSet;
    bool m_news_articles_isValid;

    qint32 m_next_pagination_token;
    bool m_next_pagination_token_isSet;
    bool m_next_pagination_token_isValid;

    qint32 m_result_count_this_page;
    bool m_result_count_this_page_isSet;
    bool m_result_count_this_page_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContent_NewsArticleRssResponse)

#endif // OAIContent_NewsArticleRssResponse_H
