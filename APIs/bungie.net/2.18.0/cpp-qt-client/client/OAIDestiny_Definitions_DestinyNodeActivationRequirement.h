/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyNodeActivationRequirement.h
 *
 * Talent nodes have requirements that must be met before they can be activated.  This describes the material costs, the Level of the Talent Grid&#39;s progression required, and other conditional information that limits whether a talent node can be activated.
 */

#ifndef OAIDestiny_Definitions_DestinyNodeActivationRequirement_H
#define OAIDestiny_Definitions_DestinyNodeActivationRequirement_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyNodeActivationRequirement : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyNodeActivationRequirement();
    OAIDestiny_Definitions_DestinyNodeActivationRequirement(QString json);
    ~OAIDestiny_Definitions_DestinyNodeActivationRequirement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getGridLevel() const;
    void setGridLevel(const qint32 &grid_level);
    bool is_grid_level_Set() const;
    bool is_grid_level_Valid() const;

    QList<qint32> getMaterialRequirementHashes() const;
    void setMaterialRequirementHashes(const QList<qint32> &material_requirement_hashes);
    bool is_material_requirement_hashes_Set() const;
    bool is_material_requirement_hashes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_grid_level;
    bool m_grid_level_isSet;
    bool m_grid_level_isValid;

    QList<qint32> m_material_requirement_hashes;
    bool m_material_requirement_hashes_isSet;
    bool m_material_requirement_hashes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyNodeActivationRequirement)

#endif // OAIDestiny_Definitions_DestinyNodeActivationRequirement_H
