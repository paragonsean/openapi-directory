/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchema2.h
 *
 * Represents the possible components that can be returned from Destiny \&quot;Get\&quot; calls such as GetProfile, GetCharacter, GetVendor etc...  When making one of these requests, you will pass one or more of these components as a comma separated list in the \&quot;?components&#x3D;\&quot; querystring parameter. For instance, if you want baseline Profile data, Character Data, and character progressions, you would pass \&quot;?components&#x3D;Profiles,Characters,CharacterProgressions\&quot; You may use either the numerical or string values.
 */

#ifndef OAISchema2_H
#define OAISchema2_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISchema2 : public OAIEnum {
public:
    OAISchema2();
    OAISchema2(QString json);
    ~OAISchema2() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAISchema2 : int {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        _0, 
        _100, 
        _101, 
        _102, 
        _103, 
        _104, 
        _105, 
        _200, 
        _201, 
        _202, 
        _203, 
        _204, 
        _205, 
        _206, 
        _300, 
        _301, 
        _302, 
        _303, 
        _304, 
        _305, 
        _306, 
        _307, 
        _308, 
        _309, 
        _310, 
        _400, 
        _401, 
        _402, 
        _500, 
        _600, 
        _700, 
        _800, 
        _900, 
        _1000, 
        _1100, 
        _1200, 
        _1300, 
        _1400
    };
    OAISchema2::eOAISchema2 getValue() const;
    void setValue(const OAISchema2::eOAISchema2& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAISchema2 m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchema2)

#endif // OAISchema2_H
