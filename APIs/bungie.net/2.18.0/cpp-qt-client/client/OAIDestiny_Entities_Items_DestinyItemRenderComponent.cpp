/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Entities_Items_DestinyItemRenderComponent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Entities_Items_DestinyItemRenderComponent::OAIDestiny_Entities_Items_DestinyItemRenderComponent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Entities_Items_DestinyItemRenderComponent::OAIDestiny_Entities_Items_DestinyItemRenderComponent() {
    this->initializeModel();
}

OAIDestiny_Entities_Items_DestinyItemRenderComponent::~OAIDestiny_Entities_Items_DestinyItemRenderComponent() {}

void OAIDestiny_Entities_Items_DestinyItemRenderComponent::initializeModel() {

    m_art_regions_isSet = false;
    m_art_regions_isValid = false;

    m_use_custom_dyes_isSet = false;
    m_use_custom_dyes_isValid = false;
}

void OAIDestiny_Entities_Items_DestinyItemRenderComponent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Entities_Items_DestinyItemRenderComponent::fromJsonObject(QJsonObject json) {

    m_art_regions_isValid = ::OpenAPI::fromJsonValue(m_art_regions, json[QString("artRegions")]);
    m_art_regions_isSet = !json[QString("artRegions")].isNull() && m_art_regions_isValid;

    m_use_custom_dyes_isValid = ::OpenAPI::fromJsonValue(m_use_custom_dyes, json[QString("useCustomDyes")]);
    m_use_custom_dyes_isSet = !json[QString("useCustomDyes")].isNull() && m_use_custom_dyes_isValid;
}

QString OAIDestiny_Entities_Items_DestinyItemRenderComponent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Entities_Items_DestinyItemRenderComponent::asJsonObject() const {
    QJsonObject obj;
    if (m_art_regions.size() > 0) {
        obj.insert(QString("artRegions"), ::OpenAPI::toJsonValue(m_art_regions));
    }
    if (m_use_custom_dyes_isSet) {
        obj.insert(QString("useCustomDyes"), ::OpenAPI::toJsonValue(m_use_custom_dyes));
    }
    return obj;
}

QMap<QString, qint32> OAIDestiny_Entities_Items_DestinyItemRenderComponent::getArtRegions() const {
    return m_art_regions;
}
void OAIDestiny_Entities_Items_DestinyItemRenderComponent::setArtRegions(const QMap<QString, qint32> &art_regions) {
    m_art_regions = art_regions;
    m_art_regions_isSet = true;
}

bool OAIDestiny_Entities_Items_DestinyItemRenderComponent::is_art_regions_Set() const{
    return m_art_regions_isSet;
}

bool OAIDestiny_Entities_Items_DestinyItemRenderComponent::is_art_regions_Valid() const{
    return m_art_regions_isValid;
}

bool OAIDestiny_Entities_Items_DestinyItemRenderComponent::isUseCustomDyes() const {
    return m_use_custom_dyes;
}
void OAIDestiny_Entities_Items_DestinyItemRenderComponent::setUseCustomDyes(const bool &use_custom_dyes) {
    m_use_custom_dyes = use_custom_dyes;
    m_use_custom_dyes_isSet = true;
}

bool OAIDestiny_Entities_Items_DestinyItemRenderComponent::is_use_custom_dyes_Set() const{
    return m_use_custom_dyes_isSet;
}

bool OAIDestiny_Entities_Items_DestinyItemRenderComponent::is_use_custom_dyes_Valid() const{
    return m_use_custom_dyes_isValid;
}

bool OAIDestiny_Entities_Items_DestinyItemRenderComponent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_art_regions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_custom_dyes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Entities_Items_DestinyItemRenderComponent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
