/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrending_TrendingEntryCommunityCreation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrending_TrendingEntryCommunityCreation::OAITrending_TrendingEntryCommunityCreation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrending_TrendingEntryCommunityCreation::OAITrending_TrendingEntryCommunityCreation() {
    this->initializeModel();
}

OAITrending_TrendingEntryCommunityCreation::~OAITrending_TrendingEntryCommunityCreation() {}

void OAITrending_TrendingEntryCommunityCreation::initializeModel() {

    m_author_isSet = false;
    m_author_isValid = false;

    m_author_membership_id_isSet = false;
    m_author_membership_id_isValid = false;

    m_body_isSet = false;
    m_body_isValid = false;

    m_media_isSet = false;
    m_media_isValid = false;

    m_post_id_isSet = false;
    m_post_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_upvotes_isSet = false;
    m_upvotes_isValid = false;
}

void OAITrending_TrendingEntryCommunityCreation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrending_TrendingEntryCommunityCreation::fromJsonObject(QJsonObject json) {

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_author_membership_id_isValid = ::OpenAPI::fromJsonValue(m_author_membership_id, json[QString("authorMembershipId")]);
    m_author_membership_id_isSet = !json[QString("authorMembershipId")].isNull() && m_author_membership_id_isValid;

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_media_isValid = ::OpenAPI::fromJsonValue(m_media, json[QString("media")]);
    m_media_isSet = !json[QString("media")].isNull() && m_media_isValid;

    m_post_id_isValid = ::OpenAPI::fromJsonValue(m_post_id, json[QString("postId")]);
    m_post_id_isSet = !json[QString("postId")].isNull() && m_post_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_upvotes_isValid = ::OpenAPI::fromJsonValue(m_upvotes, json[QString("upvotes")]);
    m_upvotes_isSet = !json[QString("upvotes")].isNull() && m_upvotes_isValid;
}

QString OAITrending_TrendingEntryCommunityCreation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrending_TrendingEntryCommunityCreation::asJsonObject() const {
    QJsonObject obj;
    if (m_author_isSet) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_author_membership_id_isSet) {
        obj.insert(QString("authorMembershipId"), ::OpenAPI::toJsonValue(m_author_membership_id));
    }
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_media_isSet) {
        obj.insert(QString("media"), ::OpenAPI::toJsonValue(m_media));
    }
    if (m_post_id_isSet) {
        obj.insert(QString("postId"), ::OpenAPI::toJsonValue(m_post_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_upvotes_isSet) {
        obj.insert(QString("upvotes"), ::OpenAPI::toJsonValue(m_upvotes));
    }
    return obj;
}

QString OAITrending_TrendingEntryCommunityCreation::getAuthor() const {
    return m_author;
}
void OAITrending_TrendingEntryCommunityCreation::setAuthor(const QString &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAITrending_TrendingEntryCommunityCreation::is_author_Set() const{
    return m_author_isSet;
}

bool OAITrending_TrendingEntryCommunityCreation::is_author_Valid() const{
    return m_author_isValid;
}

qint64 OAITrending_TrendingEntryCommunityCreation::getAuthorMembershipId() const {
    return m_author_membership_id;
}
void OAITrending_TrendingEntryCommunityCreation::setAuthorMembershipId(const qint64 &author_membership_id) {
    m_author_membership_id = author_membership_id;
    m_author_membership_id_isSet = true;
}

bool OAITrending_TrendingEntryCommunityCreation::is_author_membership_id_Set() const{
    return m_author_membership_id_isSet;
}

bool OAITrending_TrendingEntryCommunityCreation::is_author_membership_id_Valid() const{
    return m_author_membership_id_isValid;
}

QString OAITrending_TrendingEntryCommunityCreation::getBody() const {
    return m_body;
}
void OAITrending_TrendingEntryCommunityCreation::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAITrending_TrendingEntryCommunityCreation::is_body_Set() const{
    return m_body_isSet;
}

bool OAITrending_TrendingEntryCommunityCreation::is_body_Valid() const{
    return m_body_isValid;
}

QString OAITrending_TrendingEntryCommunityCreation::getMedia() const {
    return m_media;
}
void OAITrending_TrendingEntryCommunityCreation::setMedia(const QString &media) {
    m_media = media;
    m_media_isSet = true;
}

bool OAITrending_TrendingEntryCommunityCreation::is_media_Set() const{
    return m_media_isSet;
}

bool OAITrending_TrendingEntryCommunityCreation::is_media_Valid() const{
    return m_media_isValid;
}

qint64 OAITrending_TrendingEntryCommunityCreation::getPostId() const {
    return m_post_id;
}
void OAITrending_TrendingEntryCommunityCreation::setPostId(const qint64 &post_id) {
    m_post_id = post_id;
    m_post_id_isSet = true;
}

bool OAITrending_TrendingEntryCommunityCreation::is_post_id_Set() const{
    return m_post_id_isSet;
}

bool OAITrending_TrendingEntryCommunityCreation::is_post_id_Valid() const{
    return m_post_id_isValid;
}

QString OAITrending_TrendingEntryCommunityCreation::getTitle() const {
    return m_title;
}
void OAITrending_TrendingEntryCommunityCreation::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAITrending_TrendingEntryCommunityCreation::is_title_Set() const{
    return m_title_isSet;
}

bool OAITrending_TrendingEntryCommunityCreation::is_title_Valid() const{
    return m_title_isValid;
}

qint32 OAITrending_TrendingEntryCommunityCreation::getUpvotes() const {
    return m_upvotes;
}
void OAITrending_TrendingEntryCommunityCreation::setUpvotes(const qint32 &upvotes) {
    m_upvotes = upvotes;
    m_upvotes_isSet = true;
}

bool OAITrending_TrendingEntryCommunityCreation::is_upvotes_Set() const{
    return m_upvotes_isSet;
}

bool OAITrending_TrendingEntryCommunityCreation::is_upvotes_Valid() const{
    return m_upvotes_isValid;
}

bool OAITrending_TrendingEntryCommunityCreation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_author_membership_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upvotes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrending_TrendingEntryCommunityCreation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
