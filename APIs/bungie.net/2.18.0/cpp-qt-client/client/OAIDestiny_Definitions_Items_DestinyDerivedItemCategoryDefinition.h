/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition.h
 *
 * A shortcut for the fact that some items have a \&quot;Preview Vendor\&quot; - See DestinyInventoryItemDefinition.preview.previewVendorHash - that is intended to be used to show what items you can get as a result of acquiring or using this item.  A common example of this in Destiny 1 was Eververse \&quot;Boxes,\&quot; which could have many possible items. This \&quot;Preview Vendor\&quot; is not a vendor you can actually see in the game, but it defines categories and sale items for all of the possible items you could get from the Box so that the game can show them to you. We summarize that info here so that you don&#39;t have to do that Vendor lookup and aggregation manually.
 */

#ifndef OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition_H
#define OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition;

class OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition();
    OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition(QString json);
    ~OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategoryDescription() const;
    void setCategoryDescription(const QString &category_description);
    bool is_category_description_Set() const;
    bool is_category_description_Valid() const;

    QList<OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition> getItems() const;
    void setItems(const QList<OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category_description;
    bool m_category_description_isSet;
    bool m_category_description_isValid;

    QList<OAIDestiny_Definitions_Items_DestinyDerivedItemDefinition> m_items;
    bool m_items_isSet;
    bool m_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition)

#endif // OAIDestiny_Definitions_Items_DestinyDerivedItemCategoryDefinition_H
