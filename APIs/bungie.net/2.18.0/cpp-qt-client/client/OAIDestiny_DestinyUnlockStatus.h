/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_DestinyUnlockStatus.h
 *
 * Indicates the status of an \&quot;Unlock Flag\&quot; on a Character or Profile.  These are individual bits of state that can be either set or not set, and sometimes provide interesting human-readable information in their related DestinyUnlockDefinition.
 */

#ifndef OAIDestiny_DestinyUnlockStatus_H
#define OAIDestiny_DestinyUnlockStatus_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_DestinyUnlockStatus : public OAIObject {
public:
    OAIDestiny_DestinyUnlockStatus();
    OAIDestiny_DestinyUnlockStatus(QString json);
    ~OAIDestiny_DestinyUnlockStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsSet() const;
    void setIsSet(const bool &is_set);
    bool is_is_set_Set() const;
    bool is_is_set_Valid() const;

    qint32 getUnlockHash() const;
    void setUnlockHash(const qint32 &unlock_hash);
    bool is_unlock_hash_Set() const;
    bool is_unlock_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_set;
    bool m_is_set_isSet;
    bool m_is_set_isValid;

    qint32 m_unlock_hash;
    bool m_unlock_hash_isSet;
    bool m_unlock_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_DestinyUnlockStatus)

#endif // OAIDestiny_DestinyUnlockStatus_H
