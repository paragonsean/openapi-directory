/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition() {
    this->initializeModel();
}

OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::~OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition() {}

void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::initializeModel() {

    m_activities_isSet = false;
    m_activities_isValid = false;

    m_destination_hash_isSet = false;
    m_destination_hash_isValid = false;

    m_display_properties_isSet = false;
    m_display_properties_isValid = false;

    m_override_image_isSet = false;
    m_override_image_isValid = false;

    m_quest_item_hash_isSet = false;
    m_quest_item_hash_isValid = false;

    m_quest_rewards_isSet = false;
    m_quest_rewards_isValid = false;
}

void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::fromJsonObject(QJsonObject json) {

    m_activities_isValid = ::OpenAPI::fromJsonValue(m_activities, json[QString("activities")]);
    m_activities_isSet = !json[QString("activities")].isNull() && m_activities_isValid;

    m_destination_hash_isValid = ::OpenAPI::fromJsonValue(m_destination_hash, json[QString("destinationHash")]);
    m_destination_hash_isSet = !json[QString("destinationHash")].isNull() && m_destination_hash_isValid;

    m_display_properties_isValid = ::OpenAPI::fromJsonValue(m_display_properties, json[QString("displayProperties")]);
    m_display_properties_isSet = !json[QString("displayProperties")].isNull() && m_display_properties_isValid;

    m_override_image_isValid = ::OpenAPI::fromJsonValue(m_override_image, json[QString("overrideImage")]);
    m_override_image_isSet = !json[QString("overrideImage")].isNull() && m_override_image_isValid;

    m_quest_item_hash_isValid = ::OpenAPI::fromJsonValue(m_quest_item_hash, json[QString("questItemHash")]);
    m_quest_item_hash_isSet = !json[QString("questItemHash")].isNull() && m_quest_item_hash_isValid;

    m_quest_rewards_isValid = ::OpenAPI::fromJsonValue(m_quest_rewards, json[QString("questRewards")]);
    m_quest_rewards_isSet = !json[QString("questRewards")].isNull() && m_quest_rewards_isValid;
}

QString OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_activities.size() > 0) {
        obj.insert(QString("activities"), ::OpenAPI::toJsonValue(m_activities));
    }
    if (m_destination_hash_isSet) {
        obj.insert(QString("destinationHash"), ::OpenAPI::toJsonValue(m_destination_hash));
    }
    if (m_display_properties.isSet()) {
        obj.insert(QString("displayProperties"), ::OpenAPI::toJsonValue(m_display_properties));
    }
    if (m_override_image_isSet) {
        obj.insert(QString("overrideImage"), ::OpenAPI::toJsonValue(m_override_image));
    }
    if (m_quest_item_hash_isSet) {
        obj.insert(QString("questItemHash"), ::OpenAPI::toJsonValue(m_quest_item_hash));
    }
    if (m_quest_rewards.isSet()) {
        obj.insert(QString("questRewards"), ::OpenAPI::toJsonValue(m_quest_rewards));
    }
    return obj;
}

QMap<QString, OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition> OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::getActivities() const {
    return m_activities;
}
void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::setActivities(const QMap<QString, OAIDestiny_Definitions_Milestones_DestinyMilestoneActivityDefinition> &activities) {
    m_activities = activities;
    m_activities_isSet = true;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_activities_Set() const{
    return m_activities_isSet;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_activities_Valid() const{
    return m_activities_isValid;
}

qint32 OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::getDestinationHash() const {
    return m_destination_hash;
}
void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::setDestinationHash(const qint32 &destination_hash) {
    m_destination_hash = destination_hash;
    m_destination_hash_isSet = true;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_destination_hash_Set() const{
    return m_destination_hash_isSet;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_destination_hash_Valid() const{
    return m_destination_hash_isValid;
}

OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::getDisplayProperties() const {
    return m_display_properties;
}
void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties) {
    m_display_properties = display_properties;
    m_display_properties_isSet = true;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_display_properties_Set() const{
    return m_display_properties_isSet;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_display_properties_Valid() const{
    return m_display_properties_isValid;
}

QString OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::getOverrideImage() const {
    return m_override_image;
}
void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::setOverrideImage(const QString &override_image) {
    m_override_image = override_image;
    m_override_image_isSet = true;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_override_image_Set() const{
    return m_override_image_isSet;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_override_image_Valid() const{
    return m_override_image_isValid;
}

qint32 OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::getQuestItemHash() const {
    return m_quest_item_hash;
}
void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::setQuestItemHash(const qint32 &quest_item_hash) {
    m_quest_item_hash = quest_item_hash;
    m_quest_item_hash_isSet = true;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_quest_item_hash_Set() const{
    return m_quest_item_hash_isSet;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_quest_item_hash_Valid() const{
    return m_quest_item_hash_isValid;
}

OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestRewardsDefinition OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::getQuestRewards() const {
    return m_quest_rewards;
}
void OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::setQuestRewards(const OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestRewardsDefinition &quest_rewards) {
    m_quest_rewards = quest_rewards;
    m_quest_rewards_isSet = true;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_quest_rewards_Set() const{
    return m_quest_rewards_isSet;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::is_quest_rewards_Valid() const{
    return m_quest_rewards_isValid;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quest_item_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quest_rewards.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Milestones_DestinyMilestoneQuestDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
