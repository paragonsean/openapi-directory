/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyFactionVendorDefinition.h
 *
 * These definitions represent faction vendors at different points in the game.  A single faction may contain multiple vendors, or the same vendor available at two different locations.
 */

#ifndef OAIDestiny_Definitions_DestinyFactionVendorDefinition_H
#define OAIDestiny_Definitions_DestinyFactionVendorDefinition_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_DestinyFactionVendorDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyFactionVendorDefinition();
    OAIDestiny_Definitions_DestinyFactionVendorDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyFactionVendorDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackgroundImagePath() const;
    void setBackgroundImagePath(const QString &background_image_path);
    bool is_background_image_path_Set() const;
    bool is_background_image_path_Valid() const;

    qint32 getDestinationHash() const;
    void setDestinationHash(const qint32 &destination_hash);
    bool is_destination_hash_Set() const;
    bool is_destination_hash_Valid() const;

    qint32 getVendorHash() const;
    void setVendorHash(const qint32 &vendor_hash);
    bool is_vendor_hash_Set() const;
    bool is_vendor_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_background_image_path;
    bool m_background_image_path_isSet;
    bool m_background_image_path_isValid;

    qint32 m_destination_hash;
    bool m_destination_hash_isSet;
    bool m_destination_hash_isValid;

    qint32 m_vendor_hash;
    bool m_vendor_hash_isSet;
    bool m_vendor_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyFactionVendorDefinition)

#endif // OAIDestiny_Definitions_DestinyFactionVendorDefinition_H
