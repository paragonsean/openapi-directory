/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContent_Models_ContentTypeProperty.h
 *
 * 
 */

#ifndef OAIContent_Models_ContentTypeProperty_H
#define OAIContent_Models_ContentTypeProperty_H

#include <QJsonObject>

#include "OAIContent_Models_ContentTypeDefaultValue.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContent_Models_ContentTypeDefaultValue;

class OAIContent_Models_ContentTypeProperty : public OAIObject {
public:
    OAIContent_Models_ContentTypeProperty();
    OAIContent_Models_ContentTypeProperty(QString json);
    ~OAIContent_Models_ContentTypeProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAttributes() const;
    void setAttributes(const QMap<QString, QString> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getBindToProperty() const;
    void setBindToProperty(const QString &bind_to_property);
    bool is_bind_to_property_Set() const;
    bool is_bind_to_property_Valid() const;

    QString getBoundRegex() const;
    void setBoundRegex(const QString &bound_regex);
    bool is_bound_regex_Set() const;
    bool is_bound_regex_Valid() const;

    QList<OAIContent_Models_ContentTypeProperty> getChildProperties() const;
    void setChildProperties(const QList<OAIContent_Models_ContentTypeProperty> &child_properties);
    bool is_child_properties_Set() const;
    bool is_child_properties_Valid() const;

    QString getContentTypeAllowed() const;
    void setContentTypeAllowed(const QString &content_type_allowed);
    bool is_content_type_allowed_Set() const;
    bool is_content_type_allowed_Valid() const;

    qint32 getDatatype() const;
    void setDatatype(const qint32 &datatype);
    bool is_datatype_Set() const;
    bool is_datatype_Valid() const;

    QList<OAIContent_Models_ContentTypeDefaultValue> getDefaultValues() const;
    void setDefaultValues(const QList<OAIContent_Models_ContentTypeDefaultValue> &default_values);
    bool is_default_values_Set() const;
    bool is_default_values_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getEntitytype() const;
    void setEntitytype(const QString &entitytype);
    bool is_entitytype_Set() const;
    bool is_entitytype_Valid() const;

    bool isFallback() const;
    void setFallback(const bool &fallback);
    bool is_fallback_Set() const;
    bool is_fallback_Valid() const;

    bool isIsCombo() const;
    void setIsCombo(const bool &is_combo);
    bool is_is_combo_Set() const;
    bool is_is_combo_Valid() const;

    bool isIsExternalAllowed() const;
    void setIsExternalAllowed(const bool &is_external_allowed);
    bool is_is_external_allowed_Set() const;
    bool is_is_external_allowed_Valid() const;

    bool isIsImage() const;
    void setIsImage(const bool &is_image);
    bool is_is_image_Set() const;
    bool is_is_image_Valid() const;

    bool isIsTitle() const;
    void setIsTitle(const bool &is_title);
    bool is_is_title_Set() const;
    bool is_is_title_Valid() const;

    bool isIsVideo() const;
    void setIsVideo(const bool &is_video);
    bool is_is_video_Set() const;
    bool is_is_video_Valid() const;

    QList<QString> getLegalContentTypes() const;
    void setLegalContentTypes(const QList<QString> &legal_content_types);
    bool is_legal_content_types_Set() const;
    bool is_legal_content_types_Valid() const;

    bool isLocalizable() const;
    void setLocalizable(const bool &localizable);
    bool is_localizable_Set() const;
    bool is_localizable_Valid() const;

    qint32 getMaxByteLength() const;
    void setMaxByteLength(const qint32 &max_byte_length);
    bool is_max_byte_length_Set() const;
    bool is_max_byte_length_Valid() const;

    qint32 getMaxFileSize() const;
    void setMaxFileSize(const qint32 &max_file_size);
    bool is_max_file_size_Set() const;
    bool is_max_file_size_Valid() const;

    qint32 getMaxHeight() const;
    void setMaxHeight(const qint32 &max_height);
    bool is_max_height_Set() const;
    bool is_max_height_Valid() const;

    qint32 getMaxLength() const;
    void setMaxLength(const qint32 &max_length);
    bool is_max_length_Set() const;
    bool is_max_length_Valid() const;

    qint32 getMaxWidth() const;
    void setMaxWidth(const qint32 &max_width);
    bool is_max_width_Set() const;
    bool is_max_width_Valid() const;

    qint32 getMinHeight() const;
    void setMinHeight(const qint32 &min_height);
    bool is_min_height_Set() const;
    bool is_min_height_Valid() const;

    qint32 getMinWidth() const;
    void setMinWidth(const qint32 &min_width);
    bool is_min_width_Set() const;
    bool is_min_width_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QString getPropertyDescription() const;
    void setPropertyDescription(const QString &property_description);
    bool is_property_description_Set() const;
    bool is_property_description_Valid() const;

    QString getPropertySection() const;
    void setPropertySection(const QString &property_section);
    bool is_property_section_Set() const;
    bool is_property_section_Valid() const;

    QString getReadableName() const;
    void setReadableName(const QString &readable_name);
    bool is_readable_name_Set() const;
    bool is_readable_name_Valid() const;

    QString getRegexp() const;
    void setRegexp(const QString &regexp);
    bool is_regexp_Set() const;
    bool is_regexp_Valid() const;

    QMap<QString, QString> getRepresentationSelection() const;
    void setRepresentationSelection(const QMap<QString, QString> &representation_selection);
    bool is_representation_selection_Set() const;
    bool is_representation_selection_Valid() const;

    QString getRepresentationValidationString() const;
    void setRepresentationValidationString(const QString &representation_validation_string);
    bool is_representation_validation_string_Set() const;
    bool is_representation_validation_string_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    QString getRootPropertyName() const;
    void setRootPropertyName(const QString &root_property_name);
    bool is_root_property_name_Set() const;
    bool is_root_property_name_Valid() const;

    QString getRssAttribute() const;
    void setRssAttribute(const QString &rss_attribute);
    bool is_rss_attribute_Set() const;
    bool is_rss_attribute_Valid() const;

    bool isSuppressProperty() const;
    void setSuppressProperty(const bool &suppress_property);
    bool is_suppress_property_Set() const;
    bool is_suppress_property_Valid() const;

    QString getValidateAs() const;
    void setValidateAs(const QString &validate_as);
    bool is_validate_as_Set() const;
    bool is_validate_as_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    bool isVisible() const;
    void setVisible(const bool &visible);
    bool is_visible_Set() const;
    bool is_visible_Valid() const;

    QString getVisibleDependency() const;
    void setVisibleDependency(const QString &visible_dependency);
    bool is_visible_dependency_Set() const;
    bool is_visible_dependency_Valid() const;

    QString getVisibleOn() const;
    void setVisibleOn(const QString &visible_on);
    bool is_visible_on_Set() const;
    bool is_visible_on_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_bind_to_property;
    bool m_bind_to_property_isSet;
    bool m_bind_to_property_isValid;

    QString m_bound_regex;
    bool m_bound_regex_isSet;
    bool m_bound_regex_isValid;

    QList<OAIContent_Models_ContentTypeProperty> m_child_properties;
    bool m_child_properties_isSet;
    bool m_child_properties_isValid;

    QString m_content_type_allowed;
    bool m_content_type_allowed_isSet;
    bool m_content_type_allowed_isValid;

    qint32 m_datatype;
    bool m_datatype_isSet;
    bool m_datatype_isValid;

    QList<OAIContent_Models_ContentTypeDefaultValue> m_default_values;
    bool m_default_values_isSet;
    bool m_default_values_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_entitytype;
    bool m_entitytype_isSet;
    bool m_entitytype_isValid;

    bool m_fallback;
    bool m_fallback_isSet;
    bool m_fallback_isValid;

    bool m_is_combo;
    bool m_is_combo_isSet;
    bool m_is_combo_isValid;

    bool m_is_external_allowed;
    bool m_is_external_allowed_isSet;
    bool m_is_external_allowed_isValid;

    bool m_is_image;
    bool m_is_image_isSet;
    bool m_is_image_isValid;

    bool m_is_title;
    bool m_is_title_isSet;
    bool m_is_title_isValid;

    bool m_is_video;
    bool m_is_video_isSet;
    bool m_is_video_isValid;

    QList<QString> m_legal_content_types;
    bool m_legal_content_types_isSet;
    bool m_legal_content_types_isValid;

    bool m_localizable;
    bool m_localizable_isSet;
    bool m_localizable_isValid;

    qint32 m_max_byte_length;
    bool m_max_byte_length_isSet;
    bool m_max_byte_length_isValid;

    qint32 m_max_file_size;
    bool m_max_file_size_isSet;
    bool m_max_file_size_isValid;

    qint32 m_max_height;
    bool m_max_height_isSet;
    bool m_max_height_isValid;

    qint32 m_max_length;
    bool m_max_length_isSet;
    bool m_max_length_isValid;

    qint32 m_max_width;
    bool m_max_width_isSet;
    bool m_max_width_isValid;

    qint32 m_min_height;
    bool m_min_height_isSet;
    bool m_min_height_isValid;

    qint32 m_min_width;
    bool m_min_width_isSet;
    bool m_min_width_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QString m_property_description;
    bool m_property_description_isSet;
    bool m_property_description_isValid;

    QString m_property_section;
    bool m_property_section_isSet;
    bool m_property_section_isValid;

    QString m_readable_name;
    bool m_readable_name_isSet;
    bool m_readable_name_isValid;

    QString m_regexp;
    bool m_regexp_isSet;
    bool m_regexp_isValid;

    QMap<QString, QString> m_representation_selection;
    bool m_representation_selection_isSet;
    bool m_representation_selection_isValid;

    QString m_representation_validation_string;
    bool m_representation_validation_string_isSet;
    bool m_representation_validation_string_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    QString m_root_property_name;
    bool m_root_property_name_isSet;
    bool m_root_property_name_isValid;

    QString m_rss_attribute;
    bool m_rss_attribute_isSet;
    bool m_rss_attribute_isValid;

    bool m_suppress_property;
    bool m_suppress_property_isSet;
    bool m_suppress_property_isValid;

    QString m_validate_as;
    bool m_validate_as_isSet;
    bool m_validate_as_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    bool m_visible;
    bool m_visible_isSet;
    bool m_visible_isValid;

    QString m_visible_dependency;
    bool m_visible_dependency_isSet;
    bool m_visible_dependency_isValid;

    QString m_visible_on;
    bool m_visible_on_isSet;
    bool m_visible_on_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContent_Models_ContentTypeProperty)

#endif // OAIContent_Models_ContentTypeProperty_H
