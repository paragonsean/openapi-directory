/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroupsV2_GroupV2.h
 *
 * 
 */

#ifndef OAIGroupsV2_GroupV2_H
#define OAIGroupsV2_GroupV2_H

#include <QJsonObject>

#include "OAIGroupsV2_GroupFeatures.h"
#include "OAIGroupsV2_GroupV2ClanInfoAndInvestment.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroupsV2_GroupV2ClanInfoAndInvestment;
class OAIGroupsV2_GroupFeatures;

class OAIGroupsV2_GroupV2 : public OAIObject {
public:
    OAIGroupsV2_GroupV2();
    OAIGroupsV2_GroupV2(QString json);
    ~OAIGroupsV2_GroupV2() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbout() const;
    void setAbout(const QString &about);
    bool is_about_Set() const;
    bool is_about_Valid() const;

    bool isAllowChat() const;
    void setAllowChat(const bool &allow_chat);
    bool is_allow_chat_Set() const;
    bool is_allow_chat_Valid() const;

    qint32 getAvatarImageIndex() const;
    void setAvatarImageIndex(const qint32 &avatar_image_index);
    bool is_avatar_image_index_Set() const;
    bool is_avatar_image_index_Valid() const;

    QString getAvatarPath() const;
    void setAvatarPath(const QString &avatar_path);
    bool is_avatar_path_Set() const;
    bool is_avatar_path_Valid() const;

    QDateTime getBanExpireDate() const;
    void setBanExpireDate(const QDateTime &ban_expire_date);
    bool is_ban_expire_date_Set() const;
    bool is_ban_expire_date_Valid() const;

    QString getBannerPath() const;
    void setBannerPath(const QString &banner_path);
    bool is_banner_path_Set() const;
    bool is_banner_path_Valid() const;

    qint32 getChatSecurity() const;
    void setChatSecurity(const qint32 &chat_security);
    bool is_chat_security_Set() const;
    bool is_chat_security_Valid() const;

    OAIGroupsV2_GroupV2ClanInfoAndInvestment getClanInfo() const;
    void setClanInfo(const OAIGroupsV2_GroupV2ClanInfoAndInvestment &clan_info);
    bool is_clan_info_Set() const;
    bool is_clan_info_Valid() const;

    qint64 getConversationId() const;
    void setConversationId(const qint64 &conversation_id);
    bool is_conversation_id_Set() const;
    bool is_conversation_id_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    qint32 getDefaultPublicity() const;
    void setDefaultPublicity(const qint32 &default_publicity);
    bool is_default_publicity_Set() const;
    bool is_default_publicity_Valid() const;

    bool isEnableInvitationMessagingForAdmins() const;
    void setEnableInvitationMessagingForAdmins(const bool &enable_invitation_messaging_for_admins);
    bool is_enable_invitation_messaging_for_admins_Set() const;
    bool is_enable_invitation_messaging_for_admins_Valid() const;

    OAIGroupsV2_GroupFeatures getFeatures() const;
    void setFeatures(const OAIGroupsV2_GroupFeatures &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    qint64 getGroupId() const;
    void setGroupId(const qint64 &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    qint32 getGroupType() const;
    void setGroupType(const qint32 &group_type);
    bool is_group_type_Set() const;
    bool is_group_type_Valid() const;

    qint32 getHomepage() const;
    void setHomepage(const qint32 &homepage);
    bool is_homepage_Set() const;
    bool is_homepage_Valid() const;

    bool isIsDefaultPostPublic() const;
    void setIsDefaultPostPublic(const bool &is_default_post_public);
    bool is_is_default_post_public_Set() const;
    bool is_is_default_post_public_Valid() const;

    bool isIsPublic() const;
    void setIsPublic(const bool &is_public);
    bool is_is_public_Set() const;
    bool is_is_public_Valid() const;

    bool isIsPublicTopicAdminOnly() const;
    void setIsPublicTopicAdminOnly(const bool &is_public_topic_admin_only);
    bool is_is_public_topic_admin_only_Set() const;
    bool is_is_public_topic_admin_only_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    qint32 getMemberCount() const;
    void setMemberCount(const qint32 &member_count);
    bool is_member_count_Set() const;
    bool is_member_count_Valid() const;

    qint64 getMembershipIdCreated() const;
    void setMembershipIdCreated(const qint64 &membership_id_created);
    bool is_membership_id_created_Set() const;
    bool is_membership_id_created_Valid() const;

    qint32 getMembershipOption() const;
    void setMembershipOption(const qint32 &membership_option);
    bool is_membership_option_Set() const;
    bool is_membership_option_Valid() const;

    QDateTime getModificationDate() const;
    void setModificationDate(const QDateTime &modification_date);
    bool is_modification_date_Set() const;
    bool is_modification_date_Valid() const;

    QString getMotto() const;
    void setMotto(const QString &motto);
    bool is_motto_Set() const;
    bool is_motto_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTheme() const;
    void setTheme(const QString &theme);
    bool is_theme_Set() const;
    bool is_theme_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_about;
    bool m_about_isSet;
    bool m_about_isValid;

    bool m_allow_chat;
    bool m_allow_chat_isSet;
    bool m_allow_chat_isValid;

    qint32 m_avatar_image_index;
    bool m_avatar_image_index_isSet;
    bool m_avatar_image_index_isValid;

    QString m_avatar_path;
    bool m_avatar_path_isSet;
    bool m_avatar_path_isValid;

    QDateTime m_ban_expire_date;
    bool m_ban_expire_date_isSet;
    bool m_ban_expire_date_isValid;

    QString m_banner_path;
    bool m_banner_path_isSet;
    bool m_banner_path_isValid;

    qint32 m_chat_security;
    bool m_chat_security_isSet;
    bool m_chat_security_isValid;

    OAIGroupsV2_GroupV2ClanInfoAndInvestment m_clan_info;
    bool m_clan_info_isSet;
    bool m_clan_info_isValid;

    qint64 m_conversation_id;
    bool m_conversation_id_isSet;
    bool m_conversation_id_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    qint32 m_default_publicity;
    bool m_default_publicity_isSet;
    bool m_default_publicity_isValid;

    bool m_enable_invitation_messaging_for_admins;
    bool m_enable_invitation_messaging_for_admins_isSet;
    bool m_enable_invitation_messaging_for_admins_isValid;

    OAIGroupsV2_GroupFeatures m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    qint64 m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    qint32 m_group_type;
    bool m_group_type_isSet;
    bool m_group_type_isValid;

    qint32 m_homepage;
    bool m_homepage_isSet;
    bool m_homepage_isValid;

    bool m_is_default_post_public;
    bool m_is_default_post_public_isSet;
    bool m_is_default_post_public_isValid;

    bool m_is_public;
    bool m_is_public_isSet;
    bool m_is_public_isValid;

    bool m_is_public_topic_admin_only;
    bool m_is_public_topic_admin_only_isSet;
    bool m_is_public_topic_admin_only_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    qint32 m_member_count;
    bool m_member_count_isSet;
    bool m_member_count_isValid;

    qint64 m_membership_id_created;
    bool m_membership_id_created_isSet;
    bool m_membership_id_created_isValid;

    qint32 m_membership_option;
    bool m_membership_option_isSet;
    bool m_membership_option_isValid;

    QDateTime m_modification_date;
    bool m_modification_date_isSet;
    bool m_modification_date_isValid;

    QString m_motto;
    bool m_motto_isSet;
    bool m_motto_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_theme;
    bool m_theme_isSet;
    bool m_theme_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroupsV2_GroupV2)

#endif // OAIGroupsV2_GroupV2_H
