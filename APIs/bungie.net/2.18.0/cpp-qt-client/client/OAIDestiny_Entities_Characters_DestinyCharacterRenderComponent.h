/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent.h
 *
 * Only really useful if you&#39;re attempting to render the character&#39;s current appearance in 3D, this returns a bare minimum of information, pre-aggregated, that you&#39;ll need to perform that rendering. Note that you need to combine this with other 3D assets and data from our servers.  Examine the Javascript returned by https://bungie.net/sharedbundle/spasm to see how we use this data, but be warned: the rabbit hole goes pretty deep.
 */

#ifndef OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent_H
#define OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent_H

#include <QJsonObject>

#include "OAIDestiny_Character_DestinyCharacterCustomization.h"
#include "OAIDestiny_Character_DestinyCharacterPeerView.h"
#include "OAIDestiny_DyeReference.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_DyeReference;
class OAIDestiny_Character_DestinyCharacterCustomization;
class OAIDestiny_Character_DestinyCharacterPeerView;

class OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent : public OAIObject {
public:
    OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent();
    OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent(QString json);
    ~OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDestiny_DyeReference> getCustomDyes() const;
    void setCustomDyes(const QList<OAIDestiny_DyeReference> &custom_dyes);
    bool is_custom_dyes_Set() const;
    bool is_custom_dyes_Valid() const;

    OAIDestiny_Character_DestinyCharacterCustomization getCustomization() const;
    void setCustomization(const OAIDestiny_Character_DestinyCharacterCustomization &customization);
    bool is_customization_Set() const;
    bool is_customization_Valid() const;

    OAIDestiny_Character_DestinyCharacterPeerView getPeerView() const;
    void setPeerView(const OAIDestiny_Character_DestinyCharacterPeerView &peer_view);
    bool is_peer_view_Set() const;
    bool is_peer_view_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDestiny_DyeReference> m_custom_dyes;
    bool m_custom_dyes_isSet;
    bool m_custom_dyes_isValid;

    OAIDestiny_Character_DestinyCharacterCustomization m_customization;
    bool m_customization_isSet;
    bool m_customization_isValid;

    OAIDestiny_Character_DestinyCharacterPeerView m_peer_view;
    bool m_peer_view_isSet;
    bool m_peer_view_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent)

#endif // OAIDestiny_Entities_Characters_DestinyCharacterRenderComponent_H
