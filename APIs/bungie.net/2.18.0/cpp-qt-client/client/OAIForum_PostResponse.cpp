/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForum_PostResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForum_PostResponse::OAIForum_PostResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForum_PostResponse::OAIForum_PostResponse() {
    this->initializeModel();
}

OAIForum_PostResponse::~OAIForum_PostResponse() {}

void OAIForum_PostResponse::initializeModel() {

    m_is_pinned_isSet = false;
    m_is_pinned_isValid = false;

    m_ignore_status_isSet = false;
    m_ignore_status_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_is_announcement_isSet = false;
    m_is_announcement_isValid = false;

    m_last_reply_timestamp_isSet = false;
    m_last_reply_timestamp_isValid = false;

    m_latest_reply_author_id_isSet = false;
    m_latest_reply_author_id_isValid = false;

    m_latest_reply_post_id_isSet = false;
    m_latest_reply_post_id_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_popularity_isSet = false;
    m_popularity_isValid = false;

    m_thumbnail_isSet = false;
    m_thumbnail_isValid = false;

    m_url_media_type_isSet = false;
    m_url_media_type_isValid = false;

    m_user_has_muted_post_isSet = false;
    m_user_has_muted_post_isValid = false;

    m_user_has_rated_isSet = false;
    m_user_has_rated_isValid = false;

    m_user_rating_isSet = false;
    m_user_rating_isValid = false;
}

void OAIForum_PostResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForum_PostResponse::fromJsonObject(QJsonObject json) {

    m_is_pinned_isValid = ::OpenAPI::fromJsonValue(m_is_pinned, json[QString("IsPinned")]);
    m_is_pinned_isSet = !json[QString("IsPinned")].isNull() && m_is_pinned_isValid;

    m_ignore_status_isValid = ::OpenAPI::fromJsonValue(m_ignore_status, json[QString("ignoreStatus")]);
    m_ignore_status_isSet = !json[QString("ignoreStatus")].isNull() && m_ignore_status_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("isActive")]);
    m_is_active_isSet = !json[QString("isActive")].isNull() && m_is_active_isValid;

    m_is_announcement_isValid = ::OpenAPI::fromJsonValue(m_is_announcement, json[QString("isAnnouncement")]);
    m_is_announcement_isSet = !json[QString("isAnnouncement")].isNull() && m_is_announcement_isValid;

    m_last_reply_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_reply_timestamp, json[QString("lastReplyTimestamp")]);
    m_last_reply_timestamp_isSet = !json[QString("lastReplyTimestamp")].isNull() && m_last_reply_timestamp_isValid;

    m_latest_reply_author_id_isValid = ::OpenAPI::fromJsonValue(m_latest_reply_author_id, json[QString("latestReplyAuthorId")]);
    m_latest_reply_author_id_isSet = !json[QString("latestReplyAuthorId")].isNull() && m_latest_reply_author_id_isValid;

    m_latest_reply_post_id_isValid = ::OpenAPI::fromJsonValue(m_latest_reply_post_id, json[QString("latestReplyPostId")]);
    m_latest_reply_post_id_isSet = !json[QString("latestReplyPostId")].isNull() && m_latest_reply_post_id_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_popularity_isValid = ::OpenAPI::fromJsonValue(m_popularity, json[QString("popularity")]);
    m_popularity_isSet = !json[QString("popularity")].isNull() && m_popularity_isValid;

    m_thumbnail_isValid = ::OpenAPI::fromJsonValue(m_thumbnail, json[QString("thumbnail")]);
    m_thumbnail_isSet = !json[QString("thumbnail")].isNull() && m_thumbnail_isValid;

    m_url_media_type_isValid = ::OpenAPI::fromJsonValue(m_url_media_type, json[QString("urlMediaType")]);
    m_url_media_type_isSet = !json[QString("urlMediaType")].isNull() && m_url_media_type_isValid;

    m_user_has_muted_post_isValid = ::OpenAPI::fromJsonValue(m_user_has_muted_post, json[QString("userHasMutedPost")]);
    m_user_has_muted_post_isSet = !json[QString("userHasMutedPost")].isNull() && m_user_has_muted_post_isValid;

    m_user_has_rated_isValid = ::OpenAPI::fromJsonValue(m_user_has_rated, json[QString("userHasRated")]);
    m_user_has_rated_isSet = !json[QString("userHasRated")].isNull() && m_user_has_rated_isValid;

    m_user_rating_isValid = ::OpenAPI::fromJsonValue(m_user_rating, json[QString("userRating")]);
    m_user_rating_isSet = !json[QString("userRating")].isNull() && m_user_rating_isValid;
}

QString OAIForum_PostResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForum_PostResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_is_pinned_isSet) {
        obj.insert(QString("IsPinned"), ::OpenAPI::toJsonValue(m_is_pinned));
    }
    if (m_ignore_status.isSet()) {
        obj.insert(QString("ignoreStatus"), ::OpenAPI::toJsonValue(m_ignore_status));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("isActive"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_is_announcement_isSet) {
        obj.insert(QString("isAnnouncement"), ::OpenAPI::toJsonValue(m_is_announcement));
    }
    if (m_last_reply_timestamp_isSet) {
        obj.insert(QString("lastReplyTimestamp"), ::OpenAPI::toJsonValue(m_last_reply_timestamp));
    }
    if (m_latest_reply_author_id_isSet) {
        obj.insert(QString("latestReplyAuthorId"), ::OpenAPI::toJsonValue(m_latest_reply_author_id));
    }
    if (m_latest_reply_post_id_isSet) {
        obj.insert(QString("latestReplyPostId"), ::OpenAPI::toJsonValue(m_latest_reply_post_id));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_popularity_isSet) {
        obj.insert(QString("popularity"), ::OpenAPI::toJsonValue(m_popularity));
    }
    if (m_thumbnail_isSet) {
        obj.insert(QString("thumbnail"), ::OpenAPI::toJsonValue(m_thumbnail));
    }
    if (m_url_media_type_isSet) {
        obj.insert(QString("urlMediaType"), ::OpenAPI::toJsonValue(m_url_media_type));
    }
    if (m_user_has_muted_post_isSet) {
        obj.insert(QString("userHasMutedPost"), ::OpenAPI::toJsonValue(m_user_has_muted_post));
    }
    if (m_user_has_rated_isSet) {
        obj.insert(QString("userHasRated"), ::OpenAPI::toJsonValue(m_user_has_rated));
    }
    if (m_user_rating_isSet) {
        obj.insert(QString("userRating"), ::OpenAPI::toJsonValue(m_user_rating));
    }
    return obj;
}

bool OAIForum_PostResponse::isIsPinned() const {
    return m_is_pinned;
}
void OAIForum_PostResponse::setIsPinned(const bool &is_pinned) {
    m_is_pinned = is_pinned;
    m_is_pinned_isSet = true;
}

bool OAIForum_PostResponse::is_is_pinned_Set() const{
    return m_is_pinned_isSet;
}

bool OAIForum_PostResponse::is_is_pinned_Valid() const{
    return m_is_pinned_isValid;
}

OAIIgnores_IgnoreResponse OAIForum_PostResponse::getIgnoreStatus() const {
    return m_ignore_status;
}
void OAIForum_PostResponse::setIgnoreStatus(const OAIIgnores_IgnoreResponse &ignore_status) {
    m_ignore_status = ignore_status;
    m_ignore_status_isSet = true;
}

bool OAIForum_PostResponse::is_ignore_status_Set() const{
    return m_ignore_status_isSet;
}

bool OAIForum_PostResponse::is_ignore_status_Valid() const{
    return m_ignore_status_isValid;
}

bool OAIForum_PostResponse::isIsActive() const {
    return m_is_active;
}
void OAIForum_PostResponse::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIForum_PostResponse::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIForum_PostResponse::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAIForum_PostResponse::isIsAnnouncement() const {
    return m_is_announcement;
}
void OAIForum_PostResponse::setIsAnnouncement(const bool &is_announcement) {
    m_is_announcement = is_announcement;
    m_is_announcement_isSet = true;
}

bool OAIForum_PostResponse::is_is_announcement_Set() const{
    return m_is_announcement_isSet;
}

bool OAIForum_PostResponse::is_is_announcement_Valid() const{
    return m_is_announcement_isValid;
}

QDateTime OAIForum_PostResponse::getLastReplyTimestamp() const {
    return m_last_reply_timestamp;
}
void OAIForum_PostResponse::setLastReplyTimestamp(const QDateTime &last_reply_timestamp) {
    m_last_reply_timestamp = last_reply_timestamp;
    m_last_reply_timestamp_isSet = true;
}

bool OAIForum_PostResponse::is_last_reply_timestamp_Set() const{
    return m_last_reply_timestamp_isSet;
}

bool OAIForum_PostResponse::is_last_reply_timestamp_Valid() const{
    return m_last_reply_timestamp_isValid;
}

qint64 OAIForum_PostResponse::getLatestReplyAuthorId() const {
    return m_latest_reply_author_id;
}
void OAIForum_PostResponse::setLatestReplyAuthorId(const qint64 &latest_reply_author_id) {
    m_latest_reply_author_id = latest_reply_author_id;
    m_latest_reply_author_id_isSet = true;
}

bool OAIForum_PostResponse::is_latest_reply_author_id_Set() const{
    return m_latest_reply_author_id_isSet;
}

bool OAIForum_PostResponse::is_latest_reply_author_id_Valid() const{
    return m_latest_reply_author_id_isValid;
}

qint64 OAIForum_PostResponse::getLatestReplyPostId() const {
    return m_latest_reply_post_id;
}
void OAIForum_PostResponse::setLatestReplyPostId(const qint64 &latest_reply_post_id) {
    m_latest_reply_post_id = latest_reply_post_id;
    m_latest_reply_post_id_isSet = true;
}

bool OAIForum_PostResponse::is_latest_reply_post_id_Set() const{
    return m_latest_reply_post_id_isSet;
}

bool OAIForum_PostResponse::is_latest_reply_post_id_Valid() const{
    return m_latest_reply_post_id_isValid;
}

QString OAIForum_PostResponse::getLocale() const {
    return m_locale;
}
void OAIForum_PostResponse::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIForum_PostResponse::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIForum_PostResponse::is_locale_Valid() const{
    return m_locale_isValid;
}

qint32 OAIForum_PostResponse::getPopularity() const {
    return m_popularity;
}
void OAIForum_PostResponse::setPopularity(const qint32 &popularity) {
    m_popularity = popularity;
    m_popularity_isSet = true;
}

bool OAIForum_PostResponse::is_popularity_Set() const{
    return m_popularity_isSet;
}

bool OAIForum_PostResponse::is_popularity_Valid() const{
    return m_popularity_isValid;
}

QString OAIForum_PostResponse::getThumbnail() const {
    return m_thumbnail;
}
void OAIForum_PostResponse::setThumbnail(const QString &thumbnail) {
    m_thumbnail = thumbnail;
    m_thumbnail_isSet = true;
}

bool OAIForum_PostResponse::is_thumbnail_Set() const{
    return m_thumbnail_isSet;
}

bool OAIForum_PostResponse::is_thumbnail_Valid() const{
    return m_thumbnail_isValid;
}

qint32 OAIForum_PostResponse::getUrlMediaType() const {
    return m_url_media_type;
}
void OAIForum_PostResponse::setUrlMediaType(const qint32 &url_media_type) {
    m_url_media_type = url_media_type;
    m_url_media_type_isSet = true;
}

bool OAIForum_PostResponse::is_url_media_type_Set() const{
    return m_url_media_type_isSet;
}

bool OAIForum_PostResponse::is_url_media_type_Valid() const{
    return m_url_media_type_isValid;
}

bool OAIForum_PostResponse::isUserHasMutedPost() const {
    return m_user_has_muted_post;
}
void OAIForum_PostResponse::setUserHasMutedPost(const bool &user_has_muted_post) {
    m_user_has_muted_post = user_has_muted_post;
    m_user_has_muted_post_isSet = true;
}

bool OAIForum_PostResponse::is_user_has_muted_post_Set() const{
    return m_user_has_muted_post_isSet;
}

bool OAIForum_PostResponse::is_user_has_muted_post_Valid() const{
    return m_user_has_muted_post_isValid;
}

bool OAIForum_PostResponse::isUserHasRated() const {
    return m_user_has_rated;
}
void OAIForum_PostResponse::setUserHasRated(const bool &user_has_rated) {
    m_user_has_rated = user_has_rated;
    m_user_has_rated_isSet = true;
}

bool OAIForum_PostResponse::is_user_has_rated_Set() const{
    return m_user_has_rated_isSet;
}

bool OAIForum_PostResponse::is_user_has_rated_Valid() const{
    return m_user_has_rated_isValid;
}

qint32 OAIForum_PostResponse::getUserRating() const {
    return m_user_rating;
}
void OAIForum_PostResponse::setUserRating(const qint32 &user_rating) {
    m_user_rating = user_rating;
    m_user_rating_isSet = true;
}

bool OAIForum_PostResponse::is_user_rating_Set() const{
    return m_user_rating_isSet;
}

bool OAIForum_PostResponse::is_user_rating_Valid() const{
    return m_user_rating_isValid;
}

bool OAIForum_PostResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_pinned_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ignore_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_announcement_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_reply_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_reply_author_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_reply_post_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_popularity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_media_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_has_muted_post_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_has_rated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_rating_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForum_PostResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
