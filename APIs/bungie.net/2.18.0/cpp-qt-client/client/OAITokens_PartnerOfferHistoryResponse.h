/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITokens_PartnerOfferHistoryResponse.h
 *
 * 
 */

#ifndef OAITokens_PartnerOfferHistoryResponse_H
#define OAITokens_PartnerOfferHistoryResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITokens_PartnerOfferHistoryResponse : public OAIObject {
public:
    OAITokens_PartnerOfferHistoryResponse();
    OAITokens_PartnerOfferHistoryResponse(QString json);
    ~OAITokens_PartnerOfferHistoryResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getApplyDate() const;
    void setApplyDate(const QDateTime &apply_date);
    bool is_apply_date_Set() const;
    bool is_apply_date_Valid() const;

    bool isIsConsumable() const;
    void setIsConsumable(const bool &is_consumable);
    bool is_is_consumable_Set() const;
    bool is_is_consumable_Valid() const;

    QString getLocalizedDescription() const;
    void setLocalizedDescription(const QString &localized_description);
    bool is_localized_description_Set() const;
    bool is_localized_description_Valid() const;

    QString getLocalizedName() const;
    void setLocalizedName(const QString &localized_name);
    bool is_localized_name_Set() const;
    bool is_localized_name_Valid() const;

    qint64 getMembershipId() const;
    void setMembershipId(const qint64 &membership_id);
    bool is_membership_id_Set() const;
    bool is_membership_id_Valid() const;

    qint32 getMembershipType() const;
    void setMembershipType(const qint32 &membership_type);
    bool is_membership_type_Set() const;
    bool is_membership_type_Valid() const;

    QString getPartnerOfferKey() const;
    void setPartnerOfferKey(const QString &partner_offer_key);
    bool is_partner_offer_key_Set() const;
    bool is_partner_offer_key_Valid() const;

    qint32 getQuantityApplied() const;
    void setQuantityApplied(const qint32 &quantity_applied);
    bool is_quantity_applied_Set() const;
    bool is_quantity_applied_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_apply_date;
    bool m_apply_date_isSet;
    bool m_apply_date_isValid;

    bool m_is_consumable;
    bool m_is_consumable_isSet;
    bool m_is_consumable_isValid;

    QString m_localized_description;
    bool m_localized_description_isSet;
    bool m_localized_description_isValid;

    QString m_localized_name;
    bool m_localized_name_isSet;
    bool m_localized_name_isValid;

    qint64 m_membership_id;
    bool m_membership_id_isSet;
    bool m_membership_id_isValid;

    qint32 m_membership_type;
    bool m_membership_type_isSet;
    bool m_membership_type_isValid;

    QString m_partner_offer_key;
    bool m_partner_offer_key_isSet;
    bool m_partner_offer_key_isValid;

    qint32 m_quantity_applied;
    bool m_quantity_applied_isSet;
    bool m_quantity_applied_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITokens_PartnerOfferHistoryResponse)

#endif // OAITokens_PartnerOfferHistoryResponse_H
