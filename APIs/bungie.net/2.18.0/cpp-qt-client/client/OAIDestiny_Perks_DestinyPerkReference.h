/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Perks_DestinyPerkReference.h
 *
 * The list of perks to display in an item tooltip - and whether or not they have been activated.  Perks apply a variety of effects to a character, and are generally either intrinsic to the item or provided in activated talent nodes or sockets.
 */

#ifndef OAIDestiny_Perks_DestinyPerkReference_H
#define OAIDestiny_Perks_DestinyPerkReference_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Perks_DestinyPerkReference : public OAIObject {
public:
    OAIDestiny_Perks_DestinyPerkReference();
    OAIDestiny_Perks_DestinyPerkReference(QString json);
    ~OAIDestiny_Perks_DestinyPerkReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIconPath() const;
    void setIconPath(const QString &icon_path);
    bool is_icon_path_Set() const;
    bool is_icon_path_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    qint32 getPerkHash() const;
    void setPerkHash(const qint32 &perk_hash);
    bool is_perk_hash_Set() const;
    bool is_perk_hash_Valid() const;

    bool isVisible() const;
    void setVisible(const bool &visible);
    bool is_visible_Set() const;
    bool is_visible_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_icon_path;
    bool m_icon_path_isSet;
    bool m_icon_path_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    qint32 m_perk_hash;
    bool m_perk_hash_isSet;
    bool m_perk_hash_isValid;

    bool m_visible;
    bool m_visible_isSet;
    bool m_visible_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Perks_DestinyPerkReference)

#endif // OAIDestiny_Perks_DestinyPerkReference_H
