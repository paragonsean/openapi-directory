/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchema102.h
 *
 * If you look in the DestinyInventoryItemDefinition&#39;s \&quot;sockets\&quot; property, you&#39;ll see that there are two types of sockets: intrinsic, and \&quot;socketEntry.\&quot;  Unfortunately, because Intrinsic sockets are a whole separate array, it is no longer sufficient to know the index into that array to know which socket we&#39;re talking about. You have to know whether it&#39;s in the default \&quot;socketEntries\&quot; or if it&#39;s in the \&quot;intrinsic\&quot; list.
 */

#ifndef OAISchema102_H
#define OAISchema102_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISchema102 : public OAIEnum {
public:
    OAISchema102();
    OAISchema102(QString json);
    ~OAISchema102() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAISchema102 : int {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        _0, 
        _1
    };
    OAISchema102::eOAISchema102 getValue() const;
    void setValue(const OAISchema102::eOAISchema102& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAISchema102 m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchema102)

#endif // OAISchema102_H
