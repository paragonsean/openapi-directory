/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyItemCategoryDefinition.h
 *
 * In an attempt to categorize items by type, usage, and other interesting properties, we created DestinyItemCategoryDefinition: information about types that is assembled using a set of heuristics that examine the properties of an item such as what inventory bucket it&#39;s in, its item type name, and whether it has or is missing certain blocks of data.  This heuristic is imperfect, however. If you find an item miscategorized, let us know on the Bungie API forums!  We then populate all of the categories that we think an item belongs to in its DestinyInventoryItemDefinition.itemCategoryHashes property. You can use that to provide your own custom item filtering, sorting, aggregating... go nuts on it! And let us know if you see more categories that you wish would be added!
 */

#ifndef OAIDestiny_Definitions_DestinyItemCategoryDefinition_H
#define OAIDestiny_Definitions_DestinyItemCategoryDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_DestinyItemCategoryDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyItemCategoryDefinition();
    OAIDestiny_Definitions_DestinyItemCategoryDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyItemCategoryDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDeprecated() const;
    void setDeprecated(const bool &deprecated);
    bool is_deprecated_Set() const;
    bool is_deprecated_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint32 getGrantDestinyBreakerType() const;
    void setGrantDestinyBreakerType(const qint32 &grant_destiny_breaker_type);
    bool is_grant_destiny_breaker_type_Set() const;
    bool is_grant_destiny_breaker_type_Valid() const;

    qint32 getGrantDestinyClass() const;
    void setGrantDestinyClass(const qint32 &grant_destiny_class);
    bool is_grant_destiny_class_Set() const;
    bool is_grant_destiny_class_Valid() const;

    qint32 getGrantDestinyItemType() const;
    void setGrantDestinyItemType(const qint32 &grant_destiny_item_type);
    bool is_grant_destiny_item_type_Set() const;
    bool is_grant_destiny_item_type_Valid() const;

    qint32 getGrantDestinySubType() const;
    void setGrantDestinySubType(const qint32 &grant_destiny_sub_type);
    bool is_grant_destiny_sub_type_Set() const;
    bool is_grant_destiny_sub_type_Valid() const;

    bool isGroupCategoryOnly() const;
    void setGroupCategoryOnly(const bool &group_category_only);
    bool is_group_category_only_Set() const;
    bool is_group_category_only_Valid() const;

    QList<qint32> getGroupedCategoryHashes() const;
    void setGroupedCategoryHashes(const QList<qint32> &grouped_category_hashes);
    bool is_grouped_category_hashes_Set() const;
    bool is_grouped_category_hashes_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QString getItemTypeRegex() const;
    void setItemTypeRegex(const QString &item_type_regex);
    bool is_item_type_regex_Set() const;
    bool is_item_type_regex_Valid() const;

    QString getItemTypeRegexNot() const;
    void setItemTypeRegexNot(const QString &item_type_regex_not);
    bool is_item_type_regex_not_Set() const;
    bool is_item_type_regex_not_Valid() const;

    QString getOriginBucketIdentifier() const;
    void setOriginBucketIdentifier(const QString &origin_bucket_identifier);
    bool is_origin_bucket_identifier_Set() const;
    bool is_origin_bucket_identifier_Valid() const;

    QList<qint32> getParentCategoryHashes() const;
    void setParentCategoryHashes(const QList<qint32> &parent_category_hashes);
    bool is_parent_category_hashes_Set() const;
    bool is_parent_category_hashes_Valid() const;

    QString getPlugCategoryIdentifier() const;
    void setPlugCategoryIdentifier(const QString &plug_category_identifier);
    bool is_plug_category_identifier_Set() const;
    bool is_plug_category_identifier_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    QString getShortTitle() const;
    void setShortTitle(const QString &short_title);
    bool is_short_title_Set() const;
    bool is_short_title_Valid() const;

    QString getTraitId() const;
    void setTraitId(const QString &trait_id);
    bool is_trait_id_Set() const;
    bool is_trait_id_Valid() const;

    bool isVisible() const;
    void setVisible(const bool &visible);
    bool is_visible_Set() const;
    bool is_visible_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_deprecated;
    bool m_deprecated_isSet;
    bool m_deprecated_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint32 m_grant_destiny_breaker_type;
    bool m_grant_destiny_breaker_type_isSet;
    bool m_grant_destiny_breaker_type_isValid;

    qint32 m_grant_destiny_class;
    bool m_grant_destiny_class_isSet;
    bool m_grant_destiny_class_isValid;

    qint32 m_grant_destiny_item_type;
    bool m_grant_destiny_item_type_isSet;
    bool m_grant_destiny_item_type_isValid;

    qint32 m_grant_destiny_sub_type;
    bool m_grant_destiny_sub_type_isSet;
    bool m_grant_destiny_sub_type_isValid;

    bool m_group_category_only;
    bool m_group_category_only_isSet;
    bool m_group_category_only_isValid;

    QList<qint32> m_grouped_category_hashes;
    bool m_grouped_category_hashes_isSet;
    bool m_grouped_category_hashes_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QString m_item_type_regex;
    bool m_item_type_regex_isSet;
    bool m_item_type_regex_isValid;

    QString m_item_type_regex_not;
    bool m_item_type_regex_not_isSet;
    bool m_item_type_regex_not_isValid;

    QString m_origin_bucket_identifier;
    bool m_origin_bucket_identifier_isSet;
    bool m_origin_bucket_identifier_isValid;

    QList<qint32> m_parent_category_hashes;
    bool m_parent_category_hashes_isSet;
    bool m_parent_category_hashes_isValid;

    QString m_plug_category_identifier;
    bool m_plug_category_identifier_isSet;
    bool m_plug_category_identifier_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    QString m_short_title;
    bool m_short_title_isSet;
    bool m_short_title_isValid;

    QString m_trait_id;
    bool m_trait_id_isSet;
    bool m_trait_id_isValid;

    bool m_visible;
    bool m_visible_isSet;
    bool m_visible_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyItemCategoryDefinition)

#endif // OAIDestiny_Definitions_DestinyItemCategoryDefinition_H
