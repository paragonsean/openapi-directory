/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Components_Kiosks_DestinyKioskItem.h
 *
 * 
 */

#ifndef OAIDestiny_Components_Kiosks_DestinyKioskItem_H
#define OAIDestiny_Components_Kiosks_DestinyKioskItem_H

#include <QJsonObject>

#include "OAIDestiny_Quests_DestinyObjectiveProgress.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Quests_DestinyObjectiveProgress;

class OAIDestiny_Components_Kiosks_DestinyKioskItem : public OAIObject {
public:
    OAIDestiny_Components_Kiosks_DestinyKioskItem();
    OAIDestiny_Components_Kiosks_DestinyKioskItem(QString json);
    ~OAIDestiny_Components_Kiosks_DestinyKioskItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanAcquire() const;
    void setCanAcquire(const bool &can_acquire);
    bool is_can_acquire_Set() const;
    bool is_can_acquire_Valid() const;

    QList<qint32> getFailureIndexes() const;
    void setFailureIndexes(const QList<qint32> &failure_indexes);
    bool is_failure_indexes_Set() const;
    bool is_failure_indexes_Valid() const;

    OAIDestiny_Quests_DestinyObjectiveProgress getFlavorObjective() const;
    void setFlavorObjective(const OAIDestiny_Quests_DestinyObjectiveProgress &flavor_objective);
    bool is_flavor_objective_Set() const;
    bool is_flavor_objective_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_acquire;
    bool m_can_acquire_isSet;
    bool m_can_acquire_isValid;

    QList<qint32> m_failure_indexes;
    bool m_failure_indexes_isSet;
    bool m_failure_indexes_isValid;

    OAIDestiny_Quests_DestinyObjectiveProgress m_flavor_objective;
    bool m_flavor_objective_isSet;
    bool m_flavor_objective_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Components_Kiosks_DestinyKioskItem)

#endif // OAIDestiny_Components_Kiosks_DestinyKioskItem_H
