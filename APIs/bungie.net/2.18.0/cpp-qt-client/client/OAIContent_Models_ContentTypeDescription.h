/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContent_Models_ContentTypeDescription.h
 *
 * 
 */

#ifndef OAIContent_Models_ContentTypeDescription_H
#define OAIContent_Models_ContentTypeDescription_H

#include <QJsonObject>

#include "OAIContent_Models_ContentPreview.h"
#include "OAIContent_Models_ContentTypeProperty.h"
#include "OAIContent_Models_ContentTypePropertySection.h"
#include "OAIContent_Models_TagMetadataDefinition.h"
#include "OAIContent_Models_TagMetadataItem.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContent_Models_ContentPreview;
class OAIContent_Models_ContentTypeProperty;
class OAIContent_Models_ContentTypePropertySection;
class OAIContent_Models_TagMetadataDefinition;
class OAIContent_Models_TagMetadataItem;

class OAIContent_Models_ContentTypeDescription : public OAIObject {
public:
    OAIContent_Models_ContentTypeDescription();
    OAIContent_Models_ContentTypeDescription(QString json);
    ~OAIContent_Models_ContentTypeDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowComments() const;
    void setAllowComments(const bool &allow_comments);
    bool is_allow_comments_Set() const;
    bool is_allow_comments_Valid() const;

    bool isAutoEnglishPropertyFallback() const;
    void setAutoEnglishPropertyFallback(const bool &auto_english_property_fallback);
    bool is_auto_english_property_fallback_Set() const;
    bool is_auto_english_property_fallback_Valid() const;

    QString getBindIdentifierToProperty() const;
    void setBindIdentifierToProperty(const QString &bind_identifier_to_property);
    bool is_bind_identifier_to_property_Set() const;
    bool is_bind_identifier_to_property_Valid() const;

    QString getBoundRegex() const;
    void setBoundRegex(const QString &bound_regex);
    bool is_bound_regex_Set() const;
    bool is_bound_regex_Valid() const;

    bool isBulkUploadable() const;
    void setBulkUploadable(const bool &bulk_uploadable);
    bool is_bulk_uploadable_Set() const;
    bool is_bulk_uploadable_Valid() const;

    QString getCType() const;
    void setCType(const QString &c_type);
    bool is_c_type_Set() const;
    bool is_c_type_Valid() const;

    QString getContentDescription() const;
    void setContentDescription(const QString &content_description);
    bool is_content_description_Set() const;
    bool is_content_description_Valid() const;

    bool isForceIdentifierBinding() const;
    void setForceIdentifierBinding(const bool &force_identifier_binding);
    bool is_force_identifier_binding_Set() const;
    bool is_force_identifier_binding_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPreviewImage() const;
    void setPreviewImage(const QString &preview_image);
    bool is_preview_image_Set() const;
    bool is_preview_image_Valid() const;

    QList<OAIContent_Models_ContentPreview> getPreviews() const;
    void setPreviews(const QList<OAIContent_Models_ContentPreview> &previews);
    bool is_previews_Set() const;
    bool is_previews_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<OAIContent_Models_ContentTypeProperty> getProperties() const;
    void setProperties(const QList<OAIContent_Models_ContentTypeProperty> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QList<OAIContent_Models_ContentTypePropertySection> getPropertySections() const;
    void setPropertySections(const QList<OAIContent_Models_ContentTypePropertySection> &property_sections);
    bool is_property_sections_Set() const;
    bool is_property_sections_Valid() const;

    QString getReminder() const;
    void setReminder(const QString &reminder);
    bool is_reminder_Set() const;
    bool is_reminder_Valid() const;

    bool isShowInContentEditor() const;
    void setShowInContentEditor(const bool &show_in_content_editor);
    bool is_show_in_content_editor_Set() const;
    bool is_show_in_content_editor_Valid() const;

    bool isSuppressCmsPath() const;
    void setSuppressCmsPath(const bool &suppress_cms_path);
    bool is_suppress_cms_path_Set() const;
    bool is_suppress_cms_path_Valid() const;

    QList<OAIContent_Models_TagMetadataDefinition> getTagMetadata() const;
    void setTagMetadata(const QList<OAIContent_Models_TagMetadataDefinition> &tag_metadata);
    bool is_tag_metadata_Set() const;
    bool is_tag_metadata_Valid() const;

    QMap<QString, OAIContent_Models_TagMetadataItem> getTagMetadataItems() const;
    void setTagMetadataItems(const QMap<QString, OAIContent_Models_TagMetadataItem> &tag_metadata_items);
    bool is_tag_metadata_items_Set() const;
    bool is_tag_metadata_items_Valid() const;

    QString getTypeOf() const;
    void setTypeOf(const QString &type_of);
    bool is_type_of_Set() const;
    bool is_type_of_Valid() const;

    QList<QString> getUsageExamples() const;
    void setUsageExamples(const QList<QString> &usage_examples);
    bool is_usage_examples_Set() const;
    bool is_usage_examples_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_comments;
    bool m_allow_comments_isSet;
    bool m_allow_comments_isValid;

    bool m_auto_english_property_fallback;
    bool m_auto_english_property_fallback_isSet;
    bool m_auto_english_property_fallback_isValid;

    QString m_bind_identifier_to_property;
    bool m_bind_identifier_to_property_isSet;
    bool m_bind_identifier_to_property_isValid;

    QString m_bound_regex;
    bool m_bound_regex_isSet;
    bool m_bound_regex_isValid;

    bool m_bulk_uploadable;
    bool m_bulk_uploadable_isSet;
    bool m_bulk_uploadable_isValid;

    QString m_c_type;
    bool m_c_type_isSet;
    bool m_c_type_isValid;

    QString m_content_description;
    bool m_content_description_isSet;
    bool m_content_description_isValid;

    bool m_force_identifier_binding;
    bool m_force_identifier_binding_isSet;
    bool m_force_identifier_binding_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_preview_image;
    bool m_preview_image_isSet;
    bool m_preview_image_isValid;

    QList<OAIContent_Models_ContentPreview> m_previews;
    bool m_previews_isSet;
    bool m_previews_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<OAIContent_Models_ContentTypeProperty> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QList<OAIContent_Models_ContentTypePropertySection> m_property_sections;
    bool m_property_sections_isSet;
    bool m_property_sections_isValid;

    QString m_reminder;
    bool m_reminder_isSet;
    bool m_reminder_isValid;

    bool m_show_in_content_editor;
    bool m_show_in_content_editor_isSet;
    bool m_show_in_content_editor_isValid;

    bool m_suppress_cms_path;
    bool m_suppress_cms_path_isSet;
    bool m_suppress_cms_path_isValid;

    QList<OAIContent_Models_TagMetadataDefinition> m_tag_metadata;
    bool m_tag_metadata_isSet;
    bool m_tag_metadata_isValid;

    QMap<QString, OAIContent_Models_TagMetadataItem> m_tag_metadata_items;
    bool m_tag_metadata_items_isSet;
    bool m_tag_metadata_items_isValid;

    QString m_type_of;
    bool m_type_of_isSet;
    bool m_type_of_isValid;

    QList<QString> m_usage_examples;
    bool m_usage_examples_isSet;
    bool m_usage_examples_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContent_Models_ContentTypeDescription)

#endif // OAIContent_Models_ContentTypeDescription_H
