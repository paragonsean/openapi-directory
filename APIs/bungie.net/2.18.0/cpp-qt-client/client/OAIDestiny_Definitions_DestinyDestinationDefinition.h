/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyDestinationDefinition.h
 *
 * On to one of the more confusing subjects of the API. What is a Destination, and what is the relationship between it, Activities, Locations, and Places?  A \&quot;Destination\&quot; is a specific region/city/area of a larger \&quot;Place\&quot;. For instance, a Place might be Earth where a Destination might be Bellevue, Washington. (Please, pick a more interesting destination if you come to visit Earth).
 */

#ifndef OAIDestiny_Definitions_DestinyDestinationDefinition_H
#define OAIDestiny_Definitions_DestinyDestinationDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include "OAIDestiny_Definitions_DestinyActivityGraphListEntryDefinition.h"
#include "OAIDestiny_Definitions_DestinyBubbleDefinition.h"
#include "OAIDestiny_Definitions_DestinyDestinationBubbleSettingDefinition.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_DestinyActivityGraphListEntryDefinition;
class OAIDestiny_Definitions_DestinyDestinationBubbleSettingDefinition;
class OAIDestiny_Definitions_DestinyBubbleDefinition;
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;

class OAIDestiny_Definitions_DestinyDestinationDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyDestinationDefinition();
    OAIDestiny_Definitions_DestinyDestinationDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyDestinationDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDestiny_Definitions_DestinyActivityGraphListEntryDefinition> getActivityGraphEntries() const;
    void setActivityGraphEntries(const QList<OAIDestiny_Definitions_DestinyActivityGraphListEntryDefinition> &activity_graph_entries);
    bool is_activity_graph_entries_Set() const;
    bool is_activity_graph_entries_Valid() const;

    QList<OAIDestiny_Definitions_DestinyDestinationBubbleSettingDefinition> getBubbleSettings() const;
    void setBubbleSettings(const QList<OAIDestiny_Definitions_DestinyDestinationBubbleSettingDefinition> &bubble_settings);
    bool is_bubble_settings_Set() const;
    bool is_bubble_settings_Valid() const;

    QList<OAIDestiny_Definitions_DestinyBubbleDefinition> getBubbles() const;
    void setBubbles(const QList<OAIDestiny_Definitions_DestinyBubbleDefinition> &bubbles);
    bool is_bubbles_Set() const;
    bool is_bubbles_Valid() const;

    qint32 getDefaultFreeroamActivityHash() const;
    void setDefaultFreeroamActivityHash(const qint32 &default_freeroam_activity_hash);
    bool is_default_freeroam_activity_hash_Set() const;
    bool is_default_freeroam_activity_hash_Valid() const;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    qint32 getPlaceHash() const;
    void setPlaceHash(const qint32 &place_hash);
    bool is_place_hash_Set() const;
    bool is_place_hash_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDestiny_Definitions_DestinyActivityGraphListEntryDefinition> m_activity_graph_entries;
    bool m_activity_graph_entries_isSet;
    bool m_activity_graph_entries_isValid;

    QList<OAIDestiny_Definitions_DestinyDestinationBubbleSettingDefinition> m_bubble_settings;
    bool m_bubble_settings_isSet;
    bool m_bubble_settings_isValid;

    QList<OAIDestiny_Definitions_DestinyBubbleDefinition> m_bubbles;
    bool m_bubbles_isSet;
    bool m_bubbles_isValid;

    qint32 m_default_freeroam_activity_hash;
    bool m_default_freeroam_activity_hash_isSet;
    bool m_default_freeroam_activity_hash_isValid;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    qint32 m_place_hash;
    bool m_place_hash_isSet;
    bool m_place_hash_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyDestinationDefinition)

#endif // OAIDestiny_Definitions_DestinyDestinationDefinition_H
