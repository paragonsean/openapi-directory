/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_DestinyProgressionStepDefinition.h
 *
 * This defines a single Step in a progression (which roughly equates to a level. See DestinyProgressionDefinition for caveats).
 */

#ifndef OAIDestiny_Definitions_DestinyProgressionStepDefinition_H
#define OAIDestiny_Definitions_DestinyProgressionStepDefinition_H

#include <QJsonObject>

#include "OAIDestiny_DestinyItemQuantity.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_DestinyItemQuantity;

class OAIDestiny_Definitions_DestinyProgressionStepDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_DestinyProgressionStepDefinition();
    OAIDestiny_Definitions_DestinyProgressionStepDefinition(QString json);
    ~OAIDestiny_Definitions_DestinyProgressionStepDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDisplayEffectType() const;
    void setDisplayEffectType(const qint32 &display_effect_type);
    bool is_display_effect_type_Set() const;
    bool is_display_effect_type_Valid() const;

    QString getIcon() const;
    void setIcon(const QString &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    qint32 getProgressTotal() const;
    void setProgressTotal(const qint32 &progress_total);
    bool is_progress_total_Set() const;
    bool is_progress_total_Valid() const;

    QList<OAIDestiny_DestinyItemQuantity> getRewardItems() const;
    void setRewardItems(const QList<OAIDestiny_DestinyItemQuantity> &reward_items);
    bool is_reward_items_Set() const;
    bool is_reward_items_Valid() const;

    QString getStepName() const;
    void setStepName(const QString &step_name);
    bool is_step_name_Set() const;
    bool is_step_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_display_effect_type;
    bool m_display_effect_type_isSet;
    bool m_display_effect_type_isValid;

    QString m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    qint32 m_progress_total;
    bool m_progress_total_isSet;
    bool m_progress_total_isValid;

    QList<OAIDestiny_DestinyItemQuantity> m_reward_items;
    bool m_reward_items_isSet;
    bool m_reward_items_isValid;

    QString m_step_name;
    bool m_step_name_isSet;
    bool m_step_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_DestinyProgressionStepDefinition)

#endif // OAIDestiny_Definitions_DestinyProgressionStepDefinition_H
