/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Entities_Items_DestinyItemSocketsComponent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Entities_Items_DestinyItemSocketsComponent::OAIDestiny_Entities_Items_DestinyItemSocketsComponent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Entities_Items_DestinyItemSocketsComponent::OAIDestiny_Entities_Items_DestinyItemSocketsComponent() {
    this->initializeModel();
}

OAIDestiny_Entities_Items_DestinyItemSocketsComponent::~OAIDestiny_Entities_Items_DestinyItemSocketsComponent() {}

void OAIDestiny_Entities_Items_DestinyItemSocketsComponent::initializeModel() {

    m_sockets_isSet = false;
    m_sockets_isValid = false;
}

void OAIDestiny_Entities_Items_DestinyItemSocketsComponent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Entities_Items_DestinyItemSocketsComponent::fromJsonObject(QJsonObject json) {

    m_sockets_isValid = ::OpenAPI::fromJsonValue(m_sockets, json[QString("sockets")]);
    m_sockets_isSet = !json[QString("sockets")].isNull() && m_sockets_isValid;
}

QString OAIDestiny_Entities_Items_DestinyItemSocketsComponent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Entities_Items_DestinyItemSocketsComponent::asJsonObject() const {
    QJsonObject obj;
    if (m_sockets.size() > 0) {
        obj.insert(QString("sockets"), ::OpenAPI::toJsonValue(m_sockets));
    }
    return obj;
}

QList<OAIDestiny_Entities_Items_DestinyItemSocketState> OAIDestiny_Entities_Items_DestinyItemSocketsComponent::getSockets() const {
    return m_sockets;
}
void OAIDestiny_Entities_Items_DestinyItemSocketsComponent::setSockets(const QList<OAIDestiny_Entities_Items_DestinyItemSocketState> &sockets) {
    m_sockets = sockets;
    m_sockets_isSet = true;
}

bool OAIDestiny_Entities_Items_DestinyItemSocketsComponent::is_sockets_Set() const{
    return m_sockets_isSet;
}

bool OAIDestiny_Entities_Items_DestinyItemSocketsComponent::is_sockets_Valid() const{
    return m_sockets_isValid;
}

bool OAIDestiny_Entities_Items_DestinyItemSocketsComponent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sockets.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Entities_Items_DestinyItemSocketsComponent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
