/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition.h
 *
 * Defines the tier type of an item. Mostly this provides human readable properties for types like Common, Rare, etc...  It also provides some base data for infusion that could be useful.
 */

#ifndef OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition_H
#define OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition_H

#include <QJsonObject>

#include "OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition.h"
#include "OAIDestiny_Definitions_Items_DestinyItemTierTypeInfusionBlock.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition;
class OAIDestiny_Definitions_Items_DestinyItemTierTypeInfusionBlock;

class OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition : public OAIObject {
public:
    OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition();
    OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition(QString json);
    ~OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition getDisplayProperties() const;
    void setDisplayProperties(const OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition &display_properties);
    bool is_display_properties_Set() const;
    bool is_display_properties_Valid() const;

    qint32 getHash() const;
    void setHash(const qint32 &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    OAIDestiny_Definitions_Items_DestinyItemTierTypeInfusionBlock getInfusionProcess() const;
    void setInfusionProcess(const OAIDestiny_Definitions_Items_DestinyItemTierTypeInfusionBlock &infusion_process);
    bool is_infusion_process_Set() const;
    bool is_infusion_process_Valid() const;

    bool isRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestiny_Definitions_Common_DestinyDisplayPropertiesDefinition m_display_properties;
    bool m_display_properties_isSet;
    bool m_display_properties_isValid;

    qint32 m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    OAIDestiny_Definitions_Items_DestinyItemTierTypeInfusionBlock m_infusion_process;
    bool m_infusion_process_isSet;
    bool m_infusion_process_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition)

#endif // OAIDestiny_Definitions_Items_DestinyItemTierTypeDefinition_H
