/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Responses_DestinyProfileResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Responses_DestinyProfileResponse::OAIDestiny_Responses_DestinyProfileResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Responses_DestinyProfileResponse::OAIDestiny_Responses_DestinyProfileResponse() {
    this->initializeModel();
}

OAIDestiny_Responses_DestinyProfileResponse::~OAIDestiny_Responses_DestinyProfileResponse() {}

void OAIDestiny_Responses_DestinyProfileResponse::initializeModel() {

    m_character_activities_isSet = false;
    m_character_activities_isValid = false;

    m_character_collectibles_isSet = false;
    m_character_collectibles_isValid = false;

    m_character_craftables_isSet = false;
    m_character_craftables_isValid = false;

    m_character_currency_lookups_isSet = false;
    m_character_currency_lookups_isValid = false;

    m_character_equipment_isSet = false;
    m_character_equipment_isValid = false;

    m_character_inventories_isSet = false;
    m_character_inventories_isValid = false;

    m_character_kiosks_isSet = false;
    m_character_kiosks_isValid = false;

    m_character_loadouts_isSet = false;
    m_character_loadouts_isValid = false;

    m_character_plug_sets_isSet = false;
    m_character_plug_sets_isValid = false;

    m_character_presentation_nodes_isSet = false;
    m_character_presentation_nodes_isValid = false;

    m_character_progressions_isSet = false;
    m_character_progressions_isValid = false;

    m_character_records_isSet = false;
    m_character_records_isValid = false;

    m_character_render_data_isSet = false;
    m_character_render_data_isValid = false;

    m_character_string_variables_isSet = false;
    m_character_string_variables_isValid = false;

    m_character_uninstanced_item_components_isSet = false;
    m_character_uninstanced_item_components_isValid = false;

    m_characters_isSet = false;
    m_characters_isValid = false;

    m_item_components_isSet = false;
    m_item_components_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_platform_silver_isSet = false;
    m_platform_silver_isValid = false;

    m_profile_isSet = false;
    m_profile_isValid = false;

    m_profile_collectibles_isSet = false;
    m_profile_collectibles_isValid = false;

    m_profile_commendations_isSet = false;
    m_profile_commendations_isValid = false;

    m_profile_currencies_isSet = false;
    m_profile_currencies_isValid = false;

    m_profile_inventory_isSet = false;
    m_profile_inventory_isValid = false;

    m_profile_kiosks_isSet = false;
    m_profile_kiosks_isValid = false;

    m_profile_plug_sets_isSet = false;
    m_profile_plug_sets_isValid = false;

    m_profile_presentation_nodes_isSet = false;
    m_profile_presentation_nodes_isValid = false;

    m_profile_progression_isSet = false;
    m_profile_progression_isValid = false;

    m_profile_records_isSet = false;
    m_profile_records_isValid = false;

    m_profile_string_variables_isSet = false;
    m_profile_string_variables_isValid = false;

    m_profile_transitory_data_isSet = false;
    m_profile_transitory_data_isValid = false;

    m_response_minted_timestamp_isSet = false;
    m_response_minted_timestamp_isValid = false;

    m_secondary_components_minted_timestamp_isSet = false;
    m_secondary_components_minted_timestamp_isValid = false;

    m_vendor_receipts_isSet = false;
    m_vendor_receipts_isValid = false;
}

void OAIDestiny_Responses_DestinyProfileResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Responses_DestinyProfileResponse::fromJsonObject(QJsonObject json) {

    m_character_activities_isValid = ::OpenAPI::fromJsonValue(m_character_activities, json[QString("characterActivities")]);
    m_character_activities_isSet = !json[QString("characterActivities")].isNull() && m_character_activities_isValid;

    m_character_collectibles_isValid = ::OpenAPI::fromJsonValue(m_character_collectibles, json[QString("characterCollectibles")]);
    m_character_collectibles_isSet = !json[QString("characterCollectibles")].isNull() && m_character_collectibles_isValid;

    m_character_craftables_isValid = ::OpenAPI::fromJsonValue(m_character_craftables, json[QString("characterCraftables")]);
    m_character_craftables_isSet = !json[QString("characterCraftables")].isNull() && m_character_craftables_isValid;

    m_character_currency_lookups_isValid = ::OpenAPI::fromJsonValue(m_character_currency_lookups, json[QString("characterCurrencyLookups")]);
    m_character_currency_lookups_isSet = !json[QString("characterCurrencyLookups")].isNull() && m_character_currency_lookups_isValid;

    m_character_equipment_isValid = ::OpenAPI::fromJsonValue(m_character_equipment, json[QString("characterEquipment")]);
    m_character_equipment_isSet = !json[QString("characterEquipment")].isNull() && m_character_equipment_isValid;

    m_character_inventories_isValid = ::OpenAPI::fromJsonValue(m_character_inventories, json[QString("characterInventories")]);
    m_character_inventories_isSet = !json[QString("characterInventories")].isNull() && m_character_inventories_isValid;

    m_character_kiosks_isValid = ::OpenAPI::fromJsonValue(m_character_kiosks, json[QString("characterKiosks")]);
    m_character_kiosks_isSet = !json[QString("characterKiosks")].isNull() && m_character_kiosks_isValid;

    m_character_loadouts_isValid = ::OpenAPI::fromJsonValue(m_character_loadouts, json[QString("characterLoadouts")]);
    m_character_loadouts_isSet = !json[QString("characterLoadouts")].isNull() && m_character_loadouts_isValid;

    m_character_plug_sets_isValid = ::OpenAPI::fromJsonValue(m_character_plug_sets, json[QString("characterPlugSets")]);
    m_character_plug_sets_isSet = !json[QString("characterPlugSets")].isNull() && m_character_plug_sets_isValid;

    m_character_presentation_nodes_isValid = ::OpenAPI::fromJsonValue(m_character_presentation_nodes, json[QString("characterPresentationNodes")]);
    m_character_presentation_nodes_isSet = !json[QString("characterPresentationNodes")].isNull() && m_character_presentation_nodes_isValid;

    m_character_progressions_isValid = ::OpenAPI::fromJsonValue(m_character_progressions, json[QString("characterProgressions")]);
    m_character_progressions_isSet = !json[QString("characterProgressions")].isNull() && m_character_progressions_isValid;

    m_character_records_isValid = ::OpenAPI::fromJsonValue(m_character_records, json[QString("characterRecords")]);
    m_character_records_isSet = !json[QString("characterRecords")].isNull() && m_character_records_isValid;

    m_character_render_data_isValid = ::OpenAPI::fromJsonValue(m_character_render_data, json[QString("characterRenderData")]);
    m_character_render_data_isSet = !json[QString("characterRenderData")].isNull() && m_character_render_data_isValid;

    m_character_string_variables_isValid = ::OpenAPI::fromJsonValue(m_character_string_variables, json[QString("characterStringVariables")]);
    m_character_string_variables_isSet = !json[QString("characterStringVariables")].isNull() && m_character_string_variables_isValid;

    m_character_uninstanced_item_components_isValid = ::OpenAPI::fromJsonValue(m_character_uninstanced_item_components, json[QString("characterUninstancedItemComponents")]);
    m_character_uninstanced_item_components_isSet = !json[QString("characterUninstancedItemComponents")].isNull() && m_character_uninstanced_item_components_isValid;

    m_characters_isValid = ::OpenAPI::fromJsonValue(m_characters, json[QString("characters")]);
    m_characters_isSet = !json[QString("characters")].isNull() && m_characters_isValid;

    m_item_components_isValid = ::OpenAPI::fromJsonValue(m_item_components, json[QString("itemComponents")]);
    m_item_components_isSet = !json[QString("itemComponents")].isNull() && m_item_components_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_platform_silver_isValid = ::OpenAPI::fromJsonValue(m_platform_silver, json[QString("platformSilver")]);
    m_platform_silver_isSet = !json[QString("platformSilver")].isNull() && m_platform_silver_isValid;

    m_profile_isValid = ::OpenAPI::fromJsonValue(m_profile, json[QString("profile")]);
    m_profile_isSet = !json[QString("profile")].isNull() && m_profile_isValid;

    m_profile_collectibles_isValid = ::OpenAPI::fromJsonValue(m_profile_collectibles, json[QString("profileCollectibles")]);
    m_profile_collectibles_isSet = !json[QString("profileCollectibles")].isNull() && m_profile_collectibles_isValid;

    m_profile_commendations_isValid = ::OpenAPI::fromJsonValue(m_profile_commendations, json[QString("profileCommendations")]);
    m_profile_commendations_isSet = !json[QString("profileCommendations")].isNull() && m_profile_commendations_isValid;

    m_profile_currencies_isValid = ::OpenAPI::fromJsonValue(m_profile_currencies, json[QString("profileCurrencies")]);
    m_profile_currencies_isSet = !json[QString("profileCurrencies")].isNull() && m_profile_currencies_isValid;

    m_profile_inventory_isValid = ::OpenAPI::fromJsonValue(m_profile_inventory, json[QString("profileInventory")]);
    m_profile_inventory_isSet = !json[QString("profileInventory")].isNull() && m_profile_inventory_isValid;

    m_profile_kiosks_isValid = ::OpenAPI::fromJsonValue(m_profile_kiosks, json[QString("profileKiosks")]);
    m_profile_kiosks_isSet = !json[QString("profileKiosks")].isNull() && m_profile_kiosks_isValid;

    m_profile_plug_sets_isValid = ::OpenAPI::fromJsonValue(m_profile_plug_sets, json[QString("profilePlugSets")]);
    m_profile_plug_sets_isSet = !json[QString("profilePlugSets")].isNull() && m_profile_plug_sets_isValid;

    m_profile_presentation_nodes_isValid = ::OpenAPI::fromJsonValue(m_profile_presentation_nodes, json[QString("profilePresentationNodes")]);
    m_profile_presentation_nodes_isSet = !json[QString("profilePresentationNodes")].isNull() && m_profile_presentation_nodes_isValid;

    m_profile_progression_isValid = ::OpenAPI::fromJsonValue(m_profile_progression, json[QString("profileProgression")]);
    m_profile_progression_isSet = !json[QString("profileProgression")].isNull() && m_profile_progression_isValid;

    m_profile_records_isValid = ::OpenAPI::fromJsonValue(m_profile_records, json[QString("profileRecords")]);
    m_profile_records_isSet = !json[QString("profileRecords")].isNull() && m_profile_records_isValid;

    m_profile_string_variables_isValid = ::OpenAPI::fromJsonValue(m_profile_string_variables, json[QString("profileStringVariables")]);
    m_profile_string_variables_isSet = !json[QString("profileStringVariables")].isNull() && m_profile_string_variables_isValid;

    m_profile_transitory_data_isValid = ::OpenAPI::fromJsonValue(m_profile_transitory_data, json[QString("profileTransitoryData")]);
    m_profile_transitory_data_isSet = !json[QString("profileTransitoryData")].isNull() && m_profile_transitory_data_isValid;

    m_response_minted_timestamp_isValid = ::OpenAPI::fromJsonValue(m_response_minted_timestamp, json[QString("responseMintedTimestamp")]);
    m_response_minted_timestamp_isSet = !json[QString("responseMintedTimestamp")].isNull() && m_response_minted_timestamp_isValid;

    m_secondary_components_minted_timestamp_isValid = ::OpenAPI::fromJsonValue(m_secondary_components_minted_timestamp, json[QString("secondaryComponentsMintedTimestamp")]);
    m_secondary_components_minted_timestamp_isSet = !json[QString("secondaryComponentsMintedTimestamp")].isNull() && m_secondary_components_minted_timestamp_isValid;

    m_vendor_receipts_isValid = ::OpenAPI::fromJsonValue(m_vendor_receipts, json[QString("vendorReceipts")]);
    m_vendor_receipts_isSet = !json[QString("vendorReceipts")].isNull() && m_vendor_receipts_isValid;
}

QString OAIDestiny_Responses_DestinyProfileResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Responses_DestinyProfileResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_character_activities.isSet()) {
        obj.insert(QString("characterActivities"), ::OpenAPI::toJsonValue(m_character_activities));
    }
    if (m_character_collectibles.isSet()) {
        obj.insert(QString("characterCollectibles"), ::OpenAPI::toJsonValue(m_character_collectibles));
    }
    if (m_character_craftables.isSet()) {
        obj.insert(QString("characterCraftables"), ::OpenAPI::toJsonValue(m_character_craftables));
    }
    if (m_character_currency_lookups.isSet()) {
        obj.insert(QString("characterCurrencyLookups"), ::OpenAPI::toJsonValue(m_character_currency_lookups));
    }
    if (m_character_equipment.isSet()) {
        obj.insert(QString("characterEquipment"), ::OpenAPI::toJsonValue(m_character_equipment));
    }
    if (m_character_inventories.isSet()) {
        obj.insert(QString("characterInventories"), ::OpenAPI::toJsonValue(m_character_inventories));
    }
    if (m_character_kiosks.isSet()) {
        obj.insert(QString("characterKiosks"), ::OpenAPI::toJsonValue(m_character_kiosks));
    }
    if (m_character_loadouts.isSet()) {
        obj.insert(QString("characterLoadouts"), ::OpenAPI::toJsonValue(m_character_loadouts));
    }
    if (m_character_plug_sets.isSet()) {
        obj.insert(QString("characterPlugSets"), ::OpenAPI::toJsonValue(m_character_plug_sets));
    }
    if (m_character_presentation_nodes.isSet()) {
        obj.insert(QString("characterPresentationNodes"), ::OpenAPI::toJsonValue(m_character_presentation_nodes));
    }
    if (m_character_progressions.isSet()) {
        obj.insert(QString("characterProgressions"), ::OpenAPI::toJsonValue(m_character_progressions));
    }
    if (m_character_records.isSet()) {
        obj.insert(QString("characterRecords"), ::OpenAPI::toJsonValue(m_character_records));
    }
    if (m_character_render_data.isSet()) {
        obj.insert(QString("characterRenderData"), ::OpenAPI::toJsonValue(m_character_render_data));
    }
    if (m_character_string_variables.isSet()) {
        obj.insert(QString("characterStringVariables"), ::OpenAPI::toJsonValue(m_character_string_variables));
    }
    if (m_character_uninstanced_item_components.size() > 0) {
        obj.insert(QString("characterUninstancedItemComponents"), ::OpenAPI::toJsonValue(m_character_uninstanced_item_components));
    }
    if (m_characters.isSet()) {
        obj.insert(QString("characters"), ::OpenAPI::toJsonValue(m_characters));
    }
    if (m_item_components.isSet()) {
        obj.insert(QString("itemComponents"), ::OpenAPI::toJsonValue(m_item_components));
    }
    if (m_metrics.isSet()) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_platform_silver.isSet()) {
        obj.insert(QString("platformSilver"), ::OpenAPI::toJsonValue(m_platform_silver));
    }
    if (m_profile.isSet()) {
        obj.insert(QString("profile"), ::OpenAPI::toJsonValue(m_profile));
    }
    if (m_profile_collectibles.isSet()) {
        obj.insert(QString("profileCollectibles"), ::OpenAPI::toJsonValue(m_profile_collectibles));
    }
    if (m_profile_commendations.isSet()) {
        obj.insert(QString("profileCommendations"), ::OpenAPI::toJsonValue(m_profile_commendations));
    }
    if (m_profile_currencies.isSet()) {
        obj.insert(QString("profileCurrencies"), ::OpenAPI::toJsonValue(m_profile_currencies));
    }
    if (m_profile_inventory.isSet()) {
        obj.insert(QString("profileInventory"), ::OpenAPI::toJsonValue(m_profile_inventory));
    }
    if (m_profile_kiosks.isSet()) {
        obj.insert(QString("profileKiosks"), ::OpenAPI::toJsonValue(m_profile_kiosks));
    }
    if (m_profile_plug_sets.isSet()) {
        obj.insert(QString("profilePlugSets"), ::OpenAPI::toJsonValue(m_profile_plug_sets));
    }
    if (m_profile_presentation_nodes.isSet()) {
        obj.insert(QString("profilePresentationNodes"), ::OpenAPI::toJsonValue(m_profile_presentation_nodes));
    }
    if (m_profile_progression.isSet()) {
        obj.insert(QString("profileProgression"), ::OpenAPI::toJsonValue(m_profile_progression));
    }
    if (m_profile_records.isSet()) {
        obj.insert(QString("profileRecords"), ::OpenAPI::toJsonValue(m_profile_records));
    }
    if (m_profile_string_variables.isSet()) {
        obj.insert(QString("profileStringVariables"), ::OpenAPI::toJsonValue(m_profile_string_variables));
    }
    if (m_profile_transitory_data.isSet()) {
        obj.insert(QString("profileTransitoryData"), ::OpenAPI::toJsonValue(m_profile_transitory_data));
    }
    if (m_response_minted_timestamp_isSet) {
        obj.insert(QString("responseMintedTimestamp"), ::OpenAPI::toJsonValue(m_response_minted_timestamp));
    }
    if (m_secondary_components_minted_timestamp_isSet) {
        obj.insert(QString("secondaryComponentsMintedTimestamp"), ::OpenAPI::toJsonValue(m_secondary_components_minted_timestamp));
    }
    if (m_vendor_receipts.isSet()) {
        obj.insert(QString("vendorReceipts"), ::OpenAPI::toJsonValue(m_vendor_receipts));
    }
    return obj;
}

OAIDictionaryComponentResponseOfint64AndDestinyCharacterActivitiesComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterActivities() const {
    return m_character_activities;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterActivities(const OAIDictionaryComponentResponseOfint64AndDestinyCharacterActivitiesComponent &character_activities) {
    m_character_activities = character_activities;
    m_character_activities_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_activities_Set() const{
    return m_character_activities_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_activities_Valid() const{
    return m_character_activities_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyCollectiblesComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterCollectibles() const {
    return m_character_collectibles;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterCollectibles(const OAIDictionaryComponentResponseOfint64AndDestinyCollectiblesComponent &character_collectibles) {
    m_character_collectibles = character_collectibles;
    m_character_collectibles_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_collectibles_Set() const{
    return m_character_collectibles_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_collectibles_Valid() const{
    return m_character_collectibles_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyCraftablesComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterCraftables() const {
    return m_character_craftables;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterCraftables(const OAIDictionaryComponentResponseOfint64AndDestinyCraftablesComponent &character_craftables) {
    m_character_craftables = character_craftables;
    m_character_craftables_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_craftables_Set() const{
    return m_character_craftables_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_craftables_Valid() const{
    return m_character_craftables_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyCurrenciesComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterCurrencyLookups() const {
    return m_character_currency_lookups;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterCurrencyLookups(const OAIDictionaryComponentResponseOfint64AndDestinyCurrenciesComponent &character_currency_lookups) {
    m_character_currency_lookups = character_currency_lookups;
    m_character_currency_lookups_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_currency_lookups_Set() const{
    return m_character_currency_lookups_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_currency_lookups_Valid() const{
    return m_character_currency_lookups_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyInventoryComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterEquipment() const {
    return m_character_equipment;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterEquipment(const OAIDictionaryComponentResponseOfint64AndDestinyInventoryComponent &character_equipment) {
    m_character_equipment = character_equipment;
    m_character_equipment_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_equipment_Set() const{
    return m_character_equipment_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_equipment_Valid() const{
    return m_character_equipment_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyInventoryComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterInventories() const {
    return m_character_inventories;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterInventories(const OAIDictionaryComponentResponseOfint64AndDestinyInventoryComponent &character_inventories) {
    m_character_inventories = character_inventories;
    m_character_inventories_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_inventories_Set() const{
    return m_character_inventories_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_inventories_Valid() const{
    return m_character_inventories_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyKiosksComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterKiosks() const {
    return m_character_kiosks;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterKiosks(const OAIDictionaryComponentResponseOfint64AndDestinyKiosksComponent &character_kiosks) {
    m_character_kiosks = character_kiosks;
    m_character_kiosks_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_kiosks_Set() const{
    return m_character_kiosks_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_kiosks_Valid() const{
    return m_character_kiosks_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyLoadoutsComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterLoadouts() const {
    return m_character_loadouts;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterLoadouts(const OAIDictionaryComponentResponseOfint64AndDestinyLoadoutsComponent &character_loadouts) {
    m_character_loadouts = character_loadouts;
    m_character_loadouts_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_loadouts_Set() const{
    return m_character_loadouts_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_loadouts_Valid() const{
    return m_character_loadouts_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyPlugSetsComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterPlugSets() const {
    return m_character_plug_sets;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterPlugSets(const OAIDictionaryComponentResponseOfint64AndDestinyPlugSetsComponent &character_plug_sets) {
    m_character_plug_sets = character_plug_sets;
    m_character_plug_sets_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_plug_sets_Set() const{
    return m_character_plug_sets_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_plug_sets_Valid() const{
    return m_character_plug_sets_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyPresentationNodesComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterPresentationNodes() const {
    return m_character_presentation_nodes;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterPresentationNodes(const OAIDictionaryComponentResponseOfint64AndDestinyPresentationNodesComponent &character_presentation_nodes) {
    m_character_presentation_nodes = character_presentation_nodes;
    m_character_presentation_nodes_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_presentation_nodes_Set() const{
    return m_character_presentation_nodes_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_presentation_nodes_Valid() const{
    return m_character_presentation_nodes_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyCharacterProgressionComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterProgressions() const {
    return m_character_progressions;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterProgressions(const OAIDictionaryComponentResponseOfint64AndDestinyCharacterProgressionComponent &character_progressions) {
    m_character_progressions = character_progressions;
    m_character_progressions_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_progressions_Set() const{
    return m_character_progressions_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_progressions_Valid() const{
    return m_character_progressions_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyCharacterRecordsComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterRecords() const {
    return m_character_records;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterRecords(const OAIDictionaryComponentResponseOfint64AndDestinyCharacterRecordsComponent &character_records) {
    m_character_records = character_records;
    m_character_records_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_records_Set() const{
    return m_character_records_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_records_Valid() const{
    return m_character_records_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyCharacterRenderComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterRenderData() const {
    return m_character_render_data;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterRenderData(const OAIDictionaryComponentResponseOfint64AndDestinyCharacterRenderComponent &character_render_data) {
    m_character_render_data = character_render_data;
    m_character_render_data_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_render_data_Set() const{
    return m_character_render_data_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_render_data_Valid() const{
    return m_character_render_data_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyStringVariablesComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacterStringVariables() const {
    return m_character_string_variables;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterStringVariables(const OAIDictionaryComponentResponseOfint64AndDestinyStringVariablesComponent &character_string_variables) {
    m_character_string_variables = character_string_variables;
    m_character_string_variables_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_string_variables_Set() const{
    return m_character_string_variables_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_string_variables_Valid() const{
    return m_character_string_variables_isValid;
}

QMap<QString, OAIDestinyBaseItemComponentSetOfuint32> OAIDestiny_Responses_DestinyProfileResponse::getCharacterUninstancedItemComponents() const {
    return m_character_uninstanced_item_components;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacterUninstancedItemComponents(const QMap<QString, OAIDestinyBaseItemComponentSetOfuint32> &character_uninstanced_item_components) {
    m_character_uninstanced_item_components = character_uninstanced_item_components;
    m_character_uninstanced_item_components_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_uninstanced_item_components_Set() const{
    return m_character_uninstanced_item_components_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_character_uninstanced_item_components_Valid() const{
    return m_character_uninstanced_item_components_isValid;
}

OAIDictionaryComponentResponseOfint64AndDestinyCharacterComponent OAIDestiny_Responses_DestinyProfileResponse::getCharacters() const {
    return m_characters;
}
void OAIDestiny_Responses_DestinyProfileResponse::setCharacters(const OAIDictionaryComponentResponseOfint64AndDestinyCharacterComponent &characters) {
    m_characters = characters;
    m_characters_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_characters_Set() const{
    return m_characters_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_characters_Valid() const{
    return m_characters_isValid;
}

OAIDestinyItemComponentSetOfint64 OAIDestiny_Responses_DestinyProfileResponse::getItemComponents() const {
    return m_item_components;
}
void OAIDestiny_Responses_DestinyProfileResponse::setItemComponents(const OAIDestinyItemComponentSetOfint64 &item_components) {
    m_item_components = item_components;
    m_item_components_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_item_components_Set() const{
    return m_item_components_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_item_components_Valid() const{
    return m_item_components_isValid;
}

OAISingleComponentResponseOfDestinyMetricsComponent OAIDestiny_Responses_DestinyProfileResponse::getMetrics() const {
    return m_metrics;
}
void OAIDestiny_Responses_DestinyProfileResponse::setMetrics(const OAISingleComponentResponseOfDestinyMetricsComponent &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_metrics_Valid() const{
    return m_metrics_isValid;
}

OAISingleComponentResponseOfDestinyPlatformSilverComponent OAIDestiny_Responses_DestinyProfileResponse::getPlatformSilver() const {
    return m_platform_silver;
}
void OAIDestiny_Responses_DestinyProfileResponse::setPlatformSilver(const OAISingleComponentResponseOfDestinyPlatformSilverComponent &platform_silver) {
    m_platform_silver = platform_silver;
    m_platform_silver_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_platform_silver_Set() const{
    return m_platform_silver_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_platform_silver_Valid() const{
    return m_platform_silver_isValid;
}

OAISingleComponentResponseOfDestinyProfileComponent OAIDestiny_Responses_DestinyProfileResponse::getProfile() const {
    return m_profile;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfile(const OAISingleComponentResponseOfDestinyProfileComponent &profile) {
    m_profile = profile;
    m_profile_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_Set() const{
    return m_profile_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_Valid() const{
    return m_profile_isValid;
}

OAISingleComponentResponseOfDestinyProfileCollectiblesComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileCollectibles() const {
    return m_profile_collectibles;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileCollectibles(const OAISingleComponentResponseOfDestinyProfileCollectiblesComponent &profile_collectibles) {
    m_profile_collectibles = profile_collectibles;
    m_profile_collectibles_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_collectibles_Set() const{
    return m_profile_collectibles_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_collectibles_Valid() const{
    return m_profile_collectibles_isValid;
}

OAISingleComponentResponseOfDestinySocialCommendationsComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileCommendations() const {
    return m_profile_commendations;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileCommendations(const OAISingleComponentResponseOfDestinySocialCommendationsComponent &profile_commendations) {
    m_profile_commendations = profile_commendations;
    m_profile_commendations_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_commendations_Set() const{
    return m_profile_commendations_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_commendations_Valid() const{
    return m_profile_commendations_isValid;
}

OAISingleComponentResponseOfDestinyInventoryComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileCurrencies() const {
    return m_profile_currencies;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileCurrencies(const OAISingleComponentResponseOfDestinyInventoryComponent &profile_currencies) {
    m_profile_currencies = profile_currencies;
    m_profile_currencies_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_currencies_Set() const{
    return m_profile_currencies_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_currencies_Valid() const{
    return m_profile_currencies_isValid;
}

OAISingleComponentResponseOfDestinyInventoryComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileInventory() const {
    return m_profile_inventory;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileInventory(const OAISingleComponentResponseOfDestinyInventoryComponent &profile_inventory) {
    m_profile_inventory = profile_inventory;
    m_profile_inventory_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_inventory_Set() const{
    return m_profile_inventory_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_inventory_Valid() const{
    return m_profile_inventory_isValid;
}

OAISingleComponentResponseOfDestinyKiosksComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileKiosks() const {
    return m_profile_kiosks;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileKiosks(const OAISingleComponentResponseOfDestinyKiosksComponent &profile_kiosks) {
    m_profile_kiosks = profile_kiosks;
    m_profile_kiosks_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_kiosks_Set() const{
    return m_profile_kiosks_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_kiosks_Valid() const{
    return m_profile_kiosks_isValid;
}

OAISingleComponentResponseOfDestinyPlugSetsComponent OAIDestiny_Responses_DestinyProfileResponse::getProfilePlugSets() const {
    return m_profile_plug_sets;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfilePlugSets(const OAISingleComponentResponseOfDestinyPlugSetsComponent &profile_plug_sets) {
    m_profile_plug_sets = profile_plug_sets;
    m_profile_plug_sets_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_plug_sets_Set() const{
    return m_profile_plug_sets_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_plug_sets_Valid() const{
    return m_profile_plug_sets_isValid;
}

OAISingleComponentResponseOfDestinyPresentationNodesComponent OAIDestiny_Responses_DestinyProfileResponse::getProfilePresentationNodes() const {
    return m_profile_presentation_nodes;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfilePresentationNodes(const OAISingleComponentResponseOfDestinyPresentationNodesComponent &profile_presentation_nodes) {
    m_profile_presentation_nodes = profile_presentation_nodes;
    m_profile_presentation_nodes_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_presentation_nodes_Set() const{
    return m_profile_presentation_nodes_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_presentation_nodes_Valid() const{
    return m_profile_presentation_nodes_isValid;
}

OAISingleComponentResponseOfDestinyProfileProgressionComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileProgression() const {
    return m_profile_progression;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileProgression(const OAISingleComponentResponseOfDestinyProfileProgressionComponent &profile_progression) {
    m_profile_progression = profile_progression;
    m_profile_progression_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_progression_Set() const{
    return m_profile_progression_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_progression_Valid() const{
    return m_profile_progression_isValid;
}

OAISingleComponentResponseOfDestinyProfileRecordsComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileRecords() const {
    return m_profile_records;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileRecords(const OAISingleComponentResponseOfDestinyProfileRecordsComponent &profile_records) {
    m_profile_records = profile_records;
    m_profile_records_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_records_Set() const{
    return m_profile_records_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_records_Valid() const{
    return m_profile_records_isValid;
}

OAISingleComponentResponseOfDestinyStringVariablesComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileStringVariables() const {
    return m_profile_string_variables;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileStringVariables(const OAISingleComponentResponseOfDestinyStringVariablesComponent &profile_string_variables) {
    m_profile_string_variables = profile_string_variables;
    m_profile_string_variables_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_string_variables_Set() const{
    return m_profile_string_variables_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_string_variables_Valid() const{
    return m_profile_string_variables_isValid;
}

OAISingleComponentResponseOfDestinyProfileTransitoryComponent OAIDestiny_Responses_DestinyProfileResponse::getProfileTransitoryData() const {
    return m_profile_transitory_data;
}
void OAIDestiny_Responses_DestinyProfileResponse::setProfileTransitoryData(const OAISingleComponentResponseOfDestinyProfileTransitoryComponent &profile_transitory_data) {
    m_profile_transitory_data = profile_transitory_data;
    m_profile_transitory_data_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_transitory_data_Set() const{
    return m_profile_transitory_data_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_profile_transitory_data_Valid() const{
    return m_profile_transitory_data_isValid;
}

QDateTime OAIDestiny_Responses_DestinyProfileResponse::getResponseMintedTimestamp() const {
    return m_response_minted_timestamp;
}
void OAIDestiny_Responses_DestinyProfileResponse::setResponseMintedTimestamp(const QDateTime &response_minted_timestamp) {
    m_response_minted_timestamp = response_minted_timestamp;
    m_response_minted_timestamp_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_response_minted_timestamp_Set() const{
    return m_response_minted_timestamp_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_response_minted_timestamp_Valid() const{
    return m_response_minted_timestamp_isValid;
}

QDateTime OAIDestiny_Responses_DestinyProfileResponse::getSecondaryComponentsMintedTimestamp() const {
    return m_secondary_components_minted_timestamp;
}
void OAIDestiny_Responses_DestinyProfileResponse::setSecondaryComponentsMintedTimestamp(const QDateTime &secondary_components_minted_timestamp) {
    m_secondary_components_minted_timestamp = secondary_components_minted_timestamp;
    m_secondary_components_minted_timestamp_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_secondary_components_minted_timestamp_Set() const{
    return m_secondary_components_minted_timestamp_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_secondary_components_minted_timestamp_Valid() const{
    return m_secondary_components_minted_timestamp_isValid;
}

OAISingleComponentResponseOfDestinyVendorReceiptsComponent OAIDestiny_Responses_DestinyProfileResponse::getVendorReceipts() const {
    return m_vendor_receipts;
}
void OAIDestiny_Responses_DestinyProfileResponse::setVendorReceipts(const OAISingleComponentResponseOfDestinyVendorReceiptsComponent &vendor_receipts) {
    m_vendor_receipts = vendor_receipts;
    m_vendor_receipts_isSet = true;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_vendor_receipts_Set() const{
    return m_vendor_receipts_isSet;
}

bool OAIDestiny_Responses_DestinyProfileResponse::is_vendor_receipts_Valid() const{
    return m_vendor_receipts_isValid;
}

bool OAIDestiny_Responses_DestinyProfileResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_character_activities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_collectibles.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_craftables.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_currency_lookups.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_equipment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_inventories.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_kiosks.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_loadouts.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_plug_sets.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_presentation_nodes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_progressions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_records.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_render_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_string_variables.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_uninstanced_item_components.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_characters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_components.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_silver.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_collectibles.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_commendations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_currencies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_inventory.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_kiosks.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_plug_sets.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_presentation_nodes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_progression.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_records.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_string_variables.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_transitory_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_minted_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_components_minted_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_receipts.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Responses_DestinyProfileResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
