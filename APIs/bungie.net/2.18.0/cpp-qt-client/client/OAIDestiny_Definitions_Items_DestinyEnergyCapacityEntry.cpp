/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry() {
    this->initializeModel();
}

OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::~OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry() {}

void OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::initializeModel() {

    m_capacity_value_isSet = false;
    m_capacity_value_isValid = false;

    m_energy_type_isSet = false;
    m_energy_type_isValid = false;

    m_energy_type_hash_isSet = false;
    m_energy_type_hash_isValid = false;
}

void OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::fromJsonObject(QJsonObject json) {

    m_capacity_value_isValid = ::OpenAPI::fromJsonValue(m_capacity_value, json[QString("capacityValue")]);
    m_capacity_value_isSet = !json[QString("capacityValue")].isNull() && m_capacity_value_isValid;

    m_energy_type_isValid = ::OpenAPI::fromJsonValue(m_energy_type, json[QString("energyType")]);
    m_energy_type_isSet = !json[QString("energyType")].isNull() && m_energy_type_isValid;

    m_energy_type_hash_isValid = ::OpenAPI::fromJsonValue(m_energy_type_hash, json[QString("energyTypeHash")]);
    m_energy_type_hash_isSet = !json[QString("energyTypeHash")].isNull() && m_energy_type_hash_isValid;
}

QString OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_capacity_value_isSet) {
        obj.insert(QString("capacityValue"), ::OpenAPI::toJsonValue(m_capacity_value));
    }
    if (m_energy_type_isSet) {
        obj.insert(QString("energyType"), ::OpenAPI::toJsonValue(m_energy_type));
    }
    if (m_energy_type_hash_isSet) {
        obj.insert(QString("energyTypeHash"), ::OpenAPI::toJsonValue(m_energy_type_hash));
    }
    return obj;
}

qint32 OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::getCapacityValue() const {
    return m_capacity_value;
}
void OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::setCapacityValue(const qint32 &capacity_value) {
    m_capacity_value = capacity_value;
    m_capacity_value_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::is_capacity_value_Set() const{
    return m_capacity_value_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::is_capacity_value_Valid() const{
    return m_capacity_value_isValid;
}

qint32 OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::getEnergyType() const {
    return m_energy_type;
}
void OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::setEnergyType(const qint32 &energy_type) {
    m_energy_type = energy_type;
    m_energy_type_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::is_energy_type_Set() const{
    return m_energy_type_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::is_energy_type_Valid() const{
    return m_energy_type_isValid;
}

qint32 OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::getEnergyTypeHash() const {
    return m_energy_type_hash;
}
void OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::setEnergyTypeHash(const qint32 &energy_type_hash) {
    m_energy_type_hash = energy_type_hash;
    m_energy_type_hash_isSet = true;
}

bool OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::is_energy_type_hash_Set() const{
    return m_energy_type_hash_isSet;
}

bool OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::is_energy_type_hash_Valid() const{
    return m_energy_type_hash_isValid;
}

bool OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capacity_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_energy_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_energy_type_hash_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Definitions_Items_DestinyEnergyCapacityEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
