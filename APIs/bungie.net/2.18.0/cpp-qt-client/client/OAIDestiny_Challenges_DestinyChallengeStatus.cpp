/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestiny_Challenges_DestinyChallengeStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestiny_Challenges_DestinyChallengeStatus::OAIDestiny_Challenges_DestinyChallengeStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestiny_Challenges_DestinyChallengeStatus::OAIDestiny_Challenges_DestinyChallengeStatus() {
    this->initializeModel();
}

OAIDestiny_Challenges_DestinyChallengeStatus::~OAIDestiny_Challenges_DestinyChallengeStatus() {}

void OAIDestiny_Challenges_DestinyChallengeStatus::initializeModel() {

    m_objective_isSet = false;
    m_objective_isValid = false;
}

void OAIDestiny_Challenges_DestinyChallengeStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestiny_Challenges_DestinyChallengeStatus::fromJsonObject(QJsonObject json) {

    m_objective_isValid = ::OpenAPI::fromJsonValue(m_objective, json[QString("objective")]);
    m_objective_isSet = !json[QString("objective")].isNull() && m_objective_isValid;
}

QString OAIDestiny_Challenges_DestinyChallengeStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestiny_Challenges_DestinyChallengeStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_objective.isSet()) {
        obj.insert(QString("objective"), ::OpenAPI::toJsonValue(m_objective));
    }
    return obj;
}

OAIDestiny_Quests_DestinyObjectiveProgress OAIDestiny_Challenges_DestinyChallengeStatus::getObjective() const {
    return m_objective;
}
void OAIDestiny_Challenges_DestinyChallengeStatus::setObjective(const OAIDestiny_Quests_DestinyObjectiveProgress &objective) {
    m_objective = objective;
    m_objective_isSet = true;
}

bool OAIDestiny_Challenges_DestinyChallengeStatus::is_objective_Set() const{
    return m_objective_isSet;
}

bool OAIDestiny_Challenges_DestinyChallengeStatus::is_objective_Valid() const{
    return m_objective_isValid;
}

bool OAIDestiny_Challenges_DestinyChallengeStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_objective.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestiny_Challenges_DestinyChallengeStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
