/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock.h
 *
 * 
 */

#ifndef OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock_H
#define OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock : public OAIObject {
public:
    OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock();
    OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock(QString json);
    ~OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getScoreValue() const;
    void setScoreValue(const qint32 &score_value);
    bool is_score_value_Set() const;
    bool is_score_value_Valid() const;

    qint32 getPartialCompletionObjectiveCountThreshold() const;
    void setPartialCompletionObjectiveCountThreshold(const qint32 &partial_completion_objective_count_threshold);
    bool is_partial_completion_objective_count_threshold_Set() const;
    bool is_partial_completion_objective_count_threshold_Valid() const;

    bool isShouldFireToast() const;
    void setShouldFireToast(const bool &should_fire_toast);
    bool is_should_fire_toast_Set() const;
    bool is_should_fire_toast_Valid() const;

    qint32 getToastStyle() const;
    void setToastStyle(const qint32 &toast_style);
    bool is_toast_style_Set() const;
    bool is_toast_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_score_value;
    bool m_score_value_isSet;
    bool m_score_value_isValid;

    qint32 m_partial_completion_objective_count_threshold;
    bool m_partial_completion_objective_count_threshold_isSet;
    bool m_partial_completion_objective_count_threshold_isValid;

    bool m_should_fire_toast;
    bool m_should_fire_toast_isSet;
    bool m_should_fire_toast_isValid;

    qint32 m_toast_style;
    bool m_toast_style_isSet;
    bool m_toast_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock)

#endif // OAIDestiny_Definitions_Records_DestinyRecordCompletionBlock_H
