/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.SocialApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SocialApi', function() {
    describe('socialAcceptFriendRequest', function() {
      it('should call socialAcceptFriendRequest successfully', function(done) {
        //uncomment below and update the code to test socialAcceptFriendRequest
        //instance.socialAcceptFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialDeclineFriendRequest', function() {
      it('should call socialDeclineFriendRequest successfully', function(done) {
        //uncomment below and update the code to test socialDeclineFriendRequest
        //instance.socialDeclineFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialGetFriendList', function() {
      it('should call socialGetFriendList successfully', function(done) {
        //uncomment below and update the code to test socialGetFriendList
        //instance.socialGetFriendList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialGetFriendRequestList', function() {
      it('should call socialGetFriendRequestList successfully', function(done) {
        //uncomment below and update the code to test socialGetFriendRequestList
        //instance.socialGetFriendRequestList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialGetPlatformFriendList', function() {
      it('should call socialGetPlatformFriendList successfully', function(done) {
        //uncomment below and update the code to test socialGetPlatformFriendList
        //instance.socialGetPlatformFriendList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialIssueFriendRequest', function() {
      it('should call socialIssueFriendRequest successfully', function(done) {
        //uncomment below and update the code to test socialIssueFriendRequest
        //instance.socialIssueFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialRemoveFriend', function() {
      it('should call socialRemoveFriend successfully', function(done) {
        //uncomment below and update the code to test socialRemoveFriend
        //instance.socialRemoveFriend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialRemoveFriendRequest', function() {
      it('should call socialRemoveFriendRequest successfully', function(done) {
        //uncomment below and update the code to test socialRemoveFriendRequest
        //instance.socialRemoveFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
