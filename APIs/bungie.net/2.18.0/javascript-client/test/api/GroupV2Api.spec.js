/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.GroupV2Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GroupV2Api', function() {
    describe('groupV2AbdicateFoundership', function() {
      it('should call groupV2AbdicateFoundership successfully', function(done) {
        //uncomment below and update the code to test groupV2AbdicateFoundership
        //instance.groupV2AbdicateFoundership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2AddOptionalConversation', function() {
      it('should call groupV2AddOptionalConversation successfully', function(done) {
        //uncomment below and update the code to test groupV2AddOptionalConversation
        //instance.groupV2AddOptionalConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2ApproveAllPending', function() {
      it('should call groupV2ApproveAllPending successfully', function(done) {
        //uncomment below and update the code to test groupV2ApproveAllPending
        //instance.groupV2ApproveAllPending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2ApprovePending', function() {
      it('should call groupV2ApprovePending successfully', function(done) {
        //uncomment below and update the code to test groupV2ApprovePending
        //instance.groupV2ApprovePending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2ApprovePendingForList', function() {
      it('should call groupV2ApprovePendingForList successfully', function(done) {
        //uncomment below and update the code to test groupV2ApprovePendingForList
        //instance.groupV2ApprovePendingForList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2BanMember', function() {
      it('should call groupV2BanMember successfully', function(done) {
        //uncomment below and update the code to test groupV2BanMember
        //instance.groupV2BanMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2DenyAllPending', function() {
      it('should call groupV2DenyAllPending successfully', function(done) {
        //uncomment below and update the code to test groupV2DenyAllPending
        //instance.groupV2DenyAllPending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2DenyPendingForList', function() {
      it('should call groupV2DenyPendingForList successfully', function(done) {
        //uncomment below and update the code to test groupV2DenyPendingForList
        //instance.groupV2DenyPendingForList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2EditClanBanner', function() {
      it('should call groupV2EditClanBanner successfully', function(done) {
        //uncomment below and update the code to test groupV2EditClanBanner
        //instance.groupV2EditClanBanner(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2EditFounderOptions', function() {
      it('should call groupV2EditFounderOptions successfully', function(done) {
        //uncomment below and update the code to test groupV2EditFounderOptions
        //instance.groupV2EditFounderOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2EditGroup', function() {
      it('should call groupV2EditGroup successfully', function(done) {
        //uncomment below and update the code to test groupV2EditGroup
        //instance.groupV2EditGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2EditGroupMembership', function() {
      it('should call groupV2EditGroupMembership successfully', function(done) {
        //uncomment below and update the code to test groupV2EditGroupMembership
        //instance.groupV2EditGroupMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2EditOptionalConversation', function() {
      it('should call groupV2EditOptionalConversation successfully', function(done) {
        //uncomment below and update the code to test groupV2EditOptionalConversation
        //instance.groupV2EditOptionalConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetAdminsAndFounderOfGroup', function() {
      it('should call groupV2GetAdminsAndFounderOfGroup successfully', function(done) {
        //uncomment below and update the code to test groupV2GetAdminsAndFounderOfGroup
        //instance.groupV2GetAdminsAndFounderOfGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetAvailableAvatars', function() {
      it('should call groupV2GetAvailableAvatars successfully', function(done) {
        //uncomment below and update the code to test groupV2GetAvailableAvatars
        //instance.groupV2GetAvailableAvatars(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetAvailableThemes', function() {
      it('should call groupV2GetAvailableThemes successfully', function(done) {
        //uncomment below and update the code to test groupV2GetAvailableThemes
        //instance.groupV2GetAvailableThemes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetBannedMembersOfGroup', function() {
      it('should call groupV2GetBannedMembersOfGroup successfully', function(done) {
        //uncomment below and update the code to test groupV2GetBannedMembersOfGroup
        //instance.groupV2GetBannedMembersOfGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetGroup', function() {
      it('should call groupV2GetGroup successfully', function(done) {
        //uncomment below and update the code to test groupV2GetGroup
        //instance.groupV2GetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetGroupByName', function() {
      it('should call groupV2GetGroupByName successfully', function(done) {
        //uncomment below and update the code to test groupV2GetGroupByName
        //instance.groupV2GetGroupByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetGroupByNameV2', function() {
      it('should call groupV2GetGroupByNameV2 successfully', function(done) {
        //uncomment below and update the code to test groupV2GetGroupByNameV2
        //instance.groupV2GetGroupByNameV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetGroupOptionalConversations', function() {
      it('should call groupV2GetGroupOptionalConversations successfully', function(done) {
        //uncomment below and update the code to test groupV2GetGroupOptionalConversations
        //instance.groupV2GetGroupOptionalConversations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetGroupsForMember', function() {
      it('should call groupV2GetGroupsForMember successfully', function(done) {
        //uncomment below and update the code to test groupV2GetGroupsForMember
        //instance.groupV2GetGroupsForMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetInvitedIndividuals', function() {
      it('should call groupV2GetInvitedIndividuals successfully', function(done) {
        //uncomment below and update the code to test groupV2GetInvitedIndividuals
        //instance.groupV2GetInvitedIndividuals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetMembersOfGroup', function() {
      it('should call groupV2GetMembersOfGroup successfully', function(done) {
        //uncomment below and update the code to test groupV2GetMembersOfGroup
        //instance.groupV2GetMembersOfGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetPendingMemberships', function() {
      it('should call groupV2GetPendingMemberships successfully', function(done) {
        //uncomment below and update the code to test groupV2GetPendingMemberships
        //instance.groupV2GetPendingMemberships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetPotentialGroupsForMember', function() {
      it('should call groupV2GetPotentialGroupsForMember successfully', function(done) {
        //uncomment below and update the code to test groupV2GetPotentialGroupsForMember
        //instance.groupV2GetPotentialGroupsForMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetRecommendedGroups', function() {
      it('should call groupV2GetRecommendedGroups successfully', function(done) {
        //uncomment below and update the code to test groupV2GetRecommendedGroups
        //instance.groupV2GetRecommendedGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GetUserClanInviteSetting', function() {
      it('should call groupV2GetUserClanInviteSetting successfully', function(done) {
        //uncomment below and update the code to test groupV2GetUserClanInviteSetting
        //instance.groupV2GetUserClanInviteSetting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2GroupSearch', function() {
      it('should call groupV2GroupSearch successfully', function(done) {
        //uncomment below and update the code to test groupV2GroupSearch
        //instance.groupV2GroupSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2IndividualGroupInvite', function() {
      it('should call groupV2IndividualGroupInvite successfully', function(done) {
        //uncomment below and update the code to test groupV2IndividualGroupInvite
        //instance.groupV2IndividualGroupInvite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2IndividualGroupInviteCancel', function() {
      it('should call groupV2IndividualGroupInviteCancel successfully', function(done) {
        //uncomment below and update the code to test groupV2IndividualGroupInviteCancel
        //instance.groupV2IndividualGroupInviteCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2KickMember', function() {
      it('should call groupV2KickMember successfully', function(done) {
        //uncomment below and update the code to test groupV2KickMember
        //instance.groupV2KickMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2RecoverGroupForFounder', function() {
      it('should call groupV2RecoverGroupForFounder successfully', function(done) {
        //uncomment below and update the code to test groupV2RecoverGroupForFounder
        //instance.groupV2RecoverGroupForFounder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupV2UnbanMember', function() {
      it('should call groupV2UnbanMember successfully', function(done) {
        //uncomment below and update the code to test groupV2UnbanMember
        //instance.groupV2UnbanMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
