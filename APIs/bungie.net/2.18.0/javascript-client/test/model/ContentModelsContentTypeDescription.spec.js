/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.ContentModelsContentTypeDescription();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContentModelsContentTypeDescription', function() {
    it('should create an instance of ContentModelsContentTypeDescription', function() {
      // uncomment below and update the code to test ContentModelsContentTypeDescription
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be.a(BungieNetApi.ContentModelsContentTypeDescription);
    });

    it('should have the property allowComments (base name: "allowComments")', function() {
      // uncomment below and update the code to test the property allowComments
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property autoEnglishPropertyFallback (base name: "autoEnglishPropertyFallback")', function() {
      // uncomment below and update the code to test the property autoEnglishPropertyFallback
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property bindIdentifierToProperty (base name: "bindIdentifierToProperty")', function() {
      // uncomment below and update the code to test the property bindIdentifierToProperty
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property boundRegex (base name: "boundRegex")', function() {
      // uncomment below and update the code to test the property boundRegex
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property bulkUploadable (base name: "bulkUploadable")', function() {
      // uncomment below and update the code to test the property bulkUploadable
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property cType (base name: "cType")', function() {
      // uncomment below and update the code to test the property cType
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property contentDescription (base name: "contentDescription")', function() {
      // uncomment below and update the code to test the property contentDescription
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property forceIdentifierBinding (base name: "forceIdentifierBinding")', function() {
      // uncomment below and update the code to test the property forceIdentifierBinding
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property previewImage (base name: "previewImage")', function() {
      // uncomment below and update the code to test the property previewImage
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property previews (base name: "previews")', function() {
      // uncomment below and update the code to test the property previews
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property propertySections (base name: "propertySections")', function() {
      // uncomment below and update the code to test the property propertySections
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property reminder (base name: "reminder")', function() {
      // uncomment below and update the code to test the property reminder
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property showInContentEditor (base name: "showInContentEditor")', function() {
      // uncomment below and update the code to test the property showInContentEditor
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property suppressCmsPath (base name: "suppressCmsPath")', function() {
      // uncomment below and update the code to test the property suppressCmsPath
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property tagMetadata (base name: "tagMetadata")', function() {
      // uncomment below and update the code to test the property tagMetadata
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property tagMetadataItems (base name: "tagMetadataItems")', function() {
      // uncomment below and update the code to test the property tagMetadataItems
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property typeOf (base name: "typeOf")', function() {
      // uncomment below and update the code to test the property typeOf
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

    it('should have the property usageExamples (base name: "usageExamples")', function() {
      // uncomment below and update the code to test the property usageExamples
      //var instance = new BungieNetApi.ContentModelsContentTypeDescription();
      //expect(instance).to.be();
    });

  });

}));
