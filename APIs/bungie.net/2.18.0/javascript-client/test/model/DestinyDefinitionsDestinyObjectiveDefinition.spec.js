/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DestinyDefinitionsDestinyObjectiveDefinition', function() {
    it('should create an instance of DestinyDefinitionsDestinyObjectiveDefinition', function() {
      // uncomment below and update the code to test DestinyDefinitionsDestinyObjectiveDefinition
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be.a(BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition);
    });

    it('should have the property allowNegativeValue (base name: "allowNegativeValue")', function() {
      // uncomment below and update the code to test the property allowNegativeValue
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property allowOvercompletion (base name: "allowOvercompletion")', function() {
      // uncomment below and update the code to test the property allowOvercompletion
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property allowValueChangeWhenCompleted (base name: "allowValueChangeWhenCompleted")', function() {
      // uncomment below and update the code to test the property allowValueChangeWhenCompleted
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property completedValueStyle (base name: "completedValueStyle")', function() {
      // uncomment below and update the code to test the property completedValueStyle
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property completionValue (base name: "completionValue")', function() {
      // uncomment below and update the code to test the property completionValue
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property displayProperties (base name: "displayProperties")', function() {
      // uncomment below and update the code to test the property displayProperties
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property hash (base name: "hash")', function() {
      // uncomment below and update the code to test the property hash
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property inProgressValueStyle (base name: "inProgressValueStyle")', function() {
      // uncomment below and update the code to test the property inProgressValueStyle
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property index (base name: "index")', function() {
      // uncomment below and update the code to test the property index
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isCountingDownward (base name: "isCountingDownward")', function() {
      // uncomment below and update the code to test the property isCountingDownward
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property locationHash (base name: "locationHash")', function() {
      // uncomment below and update the code to test the property locationHash
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property minimumVisibilityThreshold (base name: "minimumVisibilityThreshold")', function() {
      // uncomment below and update the code to test the property minimumVisibilityThreshold
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property perks (base name: "perks")', function() {
      // uncomment below and update the code to test the property perks
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property progressDescription (base name: "progressDescription")', function() {
      // uncomment below and update the code to test the property progressDescription
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property redacted (base name: "redacted")', function() {
      // uncomment below and update the code to test the property redacted
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property scope (base name: "scope")', function() {
      // uncomment below and update the code to test the property scope
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property showValueOnComplete (base name: "showValueOnComplete")', function() {
      // uncomment below and update the code to test the property showValueOnComplete
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property stats (base name: "stats")', function() {
      // uncomment below and update the code to test the property stats
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property uiLabel (base name: "uiLabel")', function() {
      // uncomment below and update the code to test the property uiLabel
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property uiStyle (base name: "uiStyle")', function() {
      // uncomment below and update the code to test the property uiStyle
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

    it('should have the property valueStyle (base name: "valueStyle")', function() {
      // uncomment below and update the code to test the property valueStyle
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyObjectiveDefinition();
      //expect(instance).to.be();
    });

  });

}));
