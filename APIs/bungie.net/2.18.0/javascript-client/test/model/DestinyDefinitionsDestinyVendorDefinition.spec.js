/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DestinyDefinitionsDestinyVendorDefinition', function() {
    it('should create an instance of DestinyDefinitionsDestinyVendorDefinition', function() {
      // uncomment below and update the code to test DestinyDefinitionsDestinyVendorDefinition
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be.a(BungieNetApi.DestinyDefinitionsDestinyVendorDefinition);
    });

    it('should have the property acceptedItems (base name: "acceptedItems")', function() {
      // uncomment below and update the code to test the property acceptedItems
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property actions (base name: "actions")', function() {
      // uncomment below and update the code to test the property actions
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property buyString (base name: "buyString")', function() {
      // uncomment below and update the code to test the property buyString
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property consolidateCategories (base name: "consolidateCategories")', function() {
      // uncomment below and update the code to test the property consolidateCategories
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property displayCategories (base name: "displayCategories")', function() {
      // uncomment below and update the code to test the property displayCategories
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property displayItemHash (base name: "displayItemHash")', function() {
      // uncomment below and update the code to test the property displayItemHash
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property displayProperties (base name: "displayProperties")', function() {
      // uncomment below and update the code to test the property displayProperties
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property factionHash (base name: "factionHash")', function() {
      // uncomment below and update the code to test the property factionHash
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property failureStrings (base name: "failureStrings")', function() {
      // uncomment below and update the code to test the property failureStrings
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property groups (base name: "groups")', function() {
      // uncomment below and update the code to test the property groups
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property hash (base name: "hash")', function() {
      // uncomment below and update the code to test the property hash
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property ignoreSaleItemHashes (base name: "ignoreSaleItemHashes")', function() {
      // uncomment below and update the code to test the property ignoreSaleItemHashes
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property index (base name: "index")', function() {
      // uncomment below and update the code to test the property index
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property inhibitBuying (base name: "inhibitBuying")', function() {
      // uncomment below and update the code to test the property inhibitBuying
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property inhibitSelling (base name: "inhibitSelling")', function() {
      // uncomment below and update the code to test the property inhibitSelling
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property interactions (base name: "interactions")', function() {
      // uncomment below and update the code to test the property interactions
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property inventoryFlyouts (base name: "inventoryFlyouts")', function() {
      // uncomment below and update the code to test the property inventoryFlyouts
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property itemList (base name: "itemList")', function() {
      // uncomment below and update the code to test the property itemList
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property locations (base name: "locations")', function() {
      // uncomment below and update the code to test the property locations
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property originalCategories (base name: "originalCategories")', function() {
      // uncomment below and update the code to test the property originalCategories
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property redacted (base name: "redacted")', function() {
      // uncomment below and update the code to test the property redacted
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property resetIntervalMinutes (base name: "resetIntervalMinutes")', function() {
      // uncomment below and update the code to test the property resetIntervalMinutes
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property resetOffsetMinutes (base name: "resetOffsetMinutes")', function() {
      // uncomment below and update the code to test the property resetOffsetMinutes
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property returnWithVendorRequest (base name: "returnWithVendorRequest")', function() {
      // uncomment below and update the code to test the property returnWithVendorRequest
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property sellString (base name: "sellString")', function() {
      // uncomment below and update the code to test the property sellString
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property services (base name: "services")', function() {
      // uncomment below and update the code to test the property services
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property unlockRanges (base name: "unlockRanges")', function() {
      // uncomment below and update the code to test the property unlockRanges
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property vendorBanner (base name: "vendorBanner")', function() {
      // uncomment below and update the code to test the property vendorBanner
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property vendorIdentifier (base name: "vendorIdentifier")', function() {
      // uncomment below and update the code to test the property vendorIdentifier
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property vendorPortrait (base name: "vendorPortrait")', function() {
      // uncomment below and update the code to test the property vendorPortrait
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property vendorProgressionType (base name: "vendorProgressionType")', function() {
      // uncomment below and update the code to test the property vendorProgressionType
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property vendorSubcategoryIdentifier (base name: "vendorSubcategoryIdentifier")', function() {
      // uncomment below and update the code to test the property vendorSubcategoryIdentifier
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

    it('should have the property visible (base name: "visible")', function() {
      // uncomment below and update the code to test the property visible
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorDefinition();
      //expect(instance).to.be();
    });

  });

}));
