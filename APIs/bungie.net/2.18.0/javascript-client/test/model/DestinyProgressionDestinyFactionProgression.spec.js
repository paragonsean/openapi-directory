/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DestinyProgressionDestinyFactionProgression', function() {
    it('should create an instance of DestinyProgressionDestinyFactionProgression', function() {
      // uncomment below and update the code to test DestinyProgressionDestinyFactionProgression
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be.a(BungieNetApi.DestinyProgressionDestinyFactionProgression);
    });

    it('should have the property currentProgress (base name: "currentProgress")', function() {
      // uncomment below and update the code to test the property currentProgress
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property currentResetCount (base name: "currentResetCount")', function() {
      // uncomment below and update the code to test the property currentResetCount
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property dailyLimit (base name: "dailyLimit")', function() {
      // uncomment below and update the code to test the property dailyLimit
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property dailyProgress (base name: "dailyProgress")', function() {
      // uncomment below and update the code to test the property dailyProgress
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property factionHash (base name: "factionHash")', function() {
      // uncomment below and update the code to test the property factionHash
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property factionVendorIndex (base name: "factionVendorIndex")', function() {
      // uncomment below and update the code to test the property factionVendorIndex
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "level")', function() {
      // uncomment below and update the code to test the property level
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property levelCap (base name: "levelCap")', function() {
      // uncomment below and update the code to test the property levelCap
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property nextLevelAt (base name: "nextLevelAt")', function() {
      // uncomment below and update the code to test the property nextLevelAt
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property progressToNextLevel (base name: "progressToNextLevel")', function() {
      // uncomment below and update the code to test the property progressToNextLevel
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property progressionHash (base name: "progressionHash")', function() {
      // uncomment below and update the code to test the property progressionHash
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property rewardItemStates (base name: "rewardItemStates")', function() {
      // uncomment below and update the code to test the property rewardItemStates
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property seasonResets (base name: "seasonResets")', function() {
      // uncomment below and update the code to test the property seasonResets
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property stepIndex (base name: "stepIndex")', function() {
      // uncomment below and update the code to test the property stepIndex
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property weeklyLimit (base name: "weeklyLimit")', function() {
      // uncomment below and update the code to test the property weeklyLimit
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

    it('should have the property weeklyProgress (base name: "weeklyProgress")', function() {
      // uncomment below and update the code to test the property weeklyProgress
      //var instance = new BungieNetApi.DestinyProgressionDestinyFactionProgression();
      //expect(instance).to.be();
    });

  });

}));
