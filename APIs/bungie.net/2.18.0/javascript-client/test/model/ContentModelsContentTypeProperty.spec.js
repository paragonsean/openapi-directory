/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.ContentModelsContentTypeProperty();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContentModelsContentTypeProperty', function() {
    it('should create an instance of ContentModelsContentTypeProperty', function() {
      // uncomment below and update the code to test ContentModelsContentTypeProperty
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be.a(BungieNetApi.ContentModelsContentTypeProperty);
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property bindToProperty (base name: "bindToProperty")', function() {
      // uncomment below and update the code to test the property bindToProperty
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property boundRegex (base name: "boundRegex")', function() {
      // uncomment below and update the code to test the property boundRegex
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property childProperties (base name: "childProperties")', function() {
      // uncomment below and update the code to test the property childProperties
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property contentTypeAllowed (base name: "contentTypeAllowed")', function() {
      // uncomment below and update the code to test the property contentTypeAllowed
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property datatype (base name: "datatype")', function() {
      // uncomment below and update the code to test the property datatype
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property defaultValues (base name: "defaultValues")', function() {
      // uncomment below and update the code to test the property defaultValues
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property entitytype (base name: "entitytype")', function() {
      // uncomment below and update the code to test the property entitytype
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property fallback (base name: "fallback")', function() {
      // uncomment below and update the code to test the property fallback
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property isCombo (base name: "isCombo")', function() {
      // uncomment below and update the code to test the property isCombo
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property isExternalAllowed (base name: "isExternalAllowed")', function() {
      // uncomment below and update the code to test the property isExternalAllowed
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property isImage (base name: "isImage")', function() {
      // uncomment below and update the code to test the property isImage
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property isTitle (base name: "isTitle")', function() {
      // uncomment below and update the code to test the property isTitle
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property isVideo (base name: "isVideo")', function() {
      // uncomment below and update the code to test the property isVideo
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property legalContentTypes (base name: "legalContentTypes")', function() {
      // uncomment below and update the code to test the property legalContentTypes
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property localizable (base name: "localizable")', function() {
      // uncomment below and update the code to test the property localizable
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property maxByteLength (base name: "maxByteLength")', function() {
      // uncomment below and update the code to test the property maxByteLength
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property maxFileSize (base name: "maxFileSize")', function() {
      // uncomment below and update the code to test the property maxFileSize
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property maxHeight (base name: "maxHeight")', function() {
      // uncomment below and update the code to test the property maxHeight
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property maxLength (base name: "maxLength")', function() {
      // uncomment below and update the code to test the property maxLength
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property maxWidth (base name: "maxWidth")', function() {
      // uncomment below and update the code to test the property maxWidth
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property minHeight (base name: "minHeight")', function() {
      // uncomment below and update the code to test the property minHeight
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property minWidth (base name: "minWidth")', function() {
      // uncomment below and update the code to test the property minWidth
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property order (base name: "order")', function() {
      // uncomment below and update the code to test the property order
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyDescription (base name: "propertyDescription")', function() {
      // uncomment below and update the code to test the property propertyDescription
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertySection (base name: "propertySection")', function() {
      // uncomment below and update the code to test the property propertySection
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property readableName (base name: "readableName")', function() {
      // uncomment below and update the code to test the property readableName
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property regexp (base name: "regexp")', function() {
      // uncomment below and update the code to test the property regexp
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property representationSelection (base name: "representationSelection")', function() {
      // uncomment below and update the code to test the property representationSelection
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property representationValidationString (base name: "representationValidationString")', function() {
      // uncomment below and update the code to test the property representationValidationString
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property required (base name: "required")', function() {
      // uncomment below and update the code to test the property required
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property rootPropertyName (base name: "rootPropertyName")', function() {
      // uncomment below and update the code to test the property rootPropertyName
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property rssAttribute (base name: "rssAttribute")', function() {
      // uncomment below and update the code to test the property rssAttribute
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property suppressProperty (base name: "suppressProperty")', function() {
      // uncomment below and update the code to test the property suppressProperty
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property validateAs (base name: "validateAs")', function() {
      // uncomment below and update the code to test the property validateAs
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property visible (base name: "visible")', function() {
      // uncomment below and update the code to test the property visible
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property visibleDependency (base name: "visibleDependency")', function() {
      // uncomment below and update the code to test the property visibleDependency
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property visibleOn (base name: "visibleOn")', function() {
      // uncomment below and update the code to test the property visibleOn
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new BungieNetApi.ContentModelsContentTypeProperty();
      //expect(instance).to.be();
    });

  });

}));
