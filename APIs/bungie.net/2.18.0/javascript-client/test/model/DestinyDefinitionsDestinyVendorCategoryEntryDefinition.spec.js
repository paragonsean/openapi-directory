/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DestinyDefinitionsDestinyVendorCategoryEntryDefinition', function() {
    it('should create an instance of DestinyDefinitionsDestinyVendorCategoryEntryDefinition', function() {
      // uncomment below and update the code to test DestinyDefinitionsDestinyVendorCategoryEntryDefinition
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be.a(BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition);
    });

    it('should have the property buyStringOverride (base name: "buyStringOverride")', function() {
      // uncomment below and update the code to test the property buyStringOverride
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property categoryHash (base name: "categoryHash")', function() {
      // uncomment below and update the code to test the property categoryHash
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property categoryIndex (base name: "categoryIndex")', function() {
      // uncomment below and update the code to test the property categoryIndex
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property disabledDescription (base name: "disabledDescription")', function() {
      // uncomment below and update the code to test the property disabledDescription
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property displayTitle (base name: "displayTitle")', function() {
      // uncomment below and update the code to test the property displayTitle
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property hideFromRegularPurchase (base name: "hideFromRegularPurchase")', function() {
      // uncomment below and update the code to test the property hideFromRegularPurchase
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property hideIfNoCurrency (base name: "hideIfNoCurrency")', function() {
      // uncomment below and update the code to test the property hideIfNoCurrency
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isDisplayOnly (base name: "isDisplayOnly")', function() {
      // uncomment below and update the code to test the property isDisplayOnly
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isPreview (base name: "isPreview")', function() {
      // uncomment below and update the code to test the property isPreview
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property overlay (base name: "overlay")', function() {
      // uncomment below and update the code to test the property overlay
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property quantityAvailable (base name: "quantityAvailable")', function() {
      // uncomment below and update the code to test the property quantityAvailable
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property resetIntervalMinutesOverride (base name: "resetIntervalMinutesOverride")', function() {
      // uncomment below and update the code to test the property resetIntervalMinutesOverride
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property resetOffsetMinutesOverride (base name: "resetOffsetMinutesOverride")', function() {
      // uncomment below and update the code to test the property resetOffsetMinutesOverride
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property showUnavailableItems (base name: "showUnavailableItems")', function() {
      // uncomment below and update the code to test the property showUnavailableItems
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property sortValue (base name: "sortValue")', function() {
      // uncomment below and update the code to test the property sortValue
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

    it('should have the property vendorItemIndexes (base name: "vendorItemIndexes")', function() {
      // uncomment below and update the code to test the property vendorItemIndexes
      //var instance = new BungieNetApi.DestinyDefinitionsDestinyVendorCategoryEntryDefinition();
      //expect(instance).to.be();
    });

  });

}));
