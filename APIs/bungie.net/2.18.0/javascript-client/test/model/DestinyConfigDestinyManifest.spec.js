/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BungieNetApi);
  }
}(this, function(expect, BungieNetApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BungieNetApi.DestinyConfigDestinyManifest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DestinyConfigDestinyManifest', function() {
    it('should create an instance of DestinyConfigDestinyManifest', function() {
      // uncomment below and update the code to test DestinyConfigDestinyManifest
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be.a(BungieNetApi.DestinyConfigDestinyManifest);
    });

    it('should have the property iconImagePyramidInfo (base name: "iconImagePyramidInfo")', function() {
      // uncomment below and update the code to test the property iconImagePyramidInfo
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

    it('should have the property jsonWorldComponentContentPaths (base name: "jsonWorldComponentContentPaths")', function() {
      // uncomment below and update the code to test the property jsonWorldComponentContentPaths
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

    it('should have the property jsonWorldContentPaths (base name: "jsonWorldContentPaths")', function() {
      // uncomment below and update the code to test the property jsonWorldContentPaths
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

    it('should have the property mobileAssetContentPath (base name: "mobileAssetContentPath")', function() {
      // uncomment below and update the code to test the property mobileAssetContentPath
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

    it('should have the property mobileClanBannerDatabasePath (base name: "mobileClanBannerDatabasePath")', function() {
      // uncomment below and update the code to test the property mobileClanBannerDatabasePath
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

    it('should have the property mobileGearAssetDataBases (base name: "mobileGearAssetDataBases")', function() {
      // uncomment below and update the code to test the property mobileGearAssetDataBases
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

    it('should have the property mobileGearCDN (base name: "mobileGearCDN")', function() {
      // uncomment below and update the code to test the property mobileGearCDN
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

    it('should have the property mobileWorldContentPaths (base name: "mobileWorldContentPaths")', function() {
      // uncomment below and update the code to test the property mobileWorldContentPaths
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new BungieNetApi.DestinyConfigDestinyManifest();
      //expect(instance).to.be();
    });

  });

}));
