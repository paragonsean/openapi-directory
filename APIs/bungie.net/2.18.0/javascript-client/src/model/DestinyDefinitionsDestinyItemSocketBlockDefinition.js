/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition from './DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition';
import DestinyDefinitionsDestinyItemSocketCategoryDefinition from './DestinyDefinitionsDestinyItemSocketCategoryDefinition';
import DestinyDefinitionsDestinyItemSocketEntryDefinition from './DestinyDefinitionsDestinyItemSocketEntryDefinition';

/**
 * The DestinyDefinitionsDestinyItemSocketBlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyItemSocketBlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemSocketBlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemSocketBlockDefinition</code>.
     * If defined, the item has at least one socket.
     * @alias module:model/DestinyDefinitionsDestinyItemSocketBlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemSocketBlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemSocketBlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemSocketBlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemSocketBlockDefinition} The populated <code>DestinyDefinitionsDestinyItemSocketBlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemSocketBlockDefinition();

            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('intrinsicSockets')) {
                obj['intrinsicSockets'] = ApiClient.convertToType(data['intrinsicSockets'], [DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition]);
            }
            if (data.hasOwnProperty('socketCategories')) {
                obj['socketCategories'] = ApiClient.convertToType(data['socketCategories'], [DestinyDefinitionsDestinyItemSocketCategoryDefinition]);
            }
            if (data.hasOwnProperty('socketEntries')) {
                obj['socketEntries'] = ApiClient.convertToType(data['socketEntries'], [DestinyDefinitionsDestinyItemSocketEntryDefinition]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemSocketBlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemSocketBlockDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['detail'] && !(typeof data['detail'] === 'string' || data['detail'] instanceof String)) {
            throw new Error("Expected the field `detail` to be a primitive type in the JSON string but got " + data['detail']);
        }
        if (data['intrinsicSockets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['intrinsicSockets'])) {
                throw new Error("Expected the field `intrinsicSockets` to be an array in the JSON data but got " + data['intrinsicSockets']);
            }
            // validate the optional field `intrinsicSockets` (array)
            for (const item of data['intrinsicSockets']) {
                DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition.validateJSON(item);
            };
        }
        if (data['socketCategories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['socketCategories'])) {
                throw new Error("Expected the field `socketCategories` to be an array in the JSON data but got " + data['socketCategories']);
            }
            // validate the optional field `socketCategories` (array)
            for (const item of data['socketCategories']) {
                DestinyDefinitionsDestinyItemSocketCategoryDefinition.validateJSON(item);
            };
        }
        if (data['socketEntries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['socketEntries'])) {
                throw new Error("Expected the field `socketEntries` to be an array in the JSON data but got " + data['socketEntries']);
            }
            // validate the optional field `socketEntries` (array)
            for (const item of data['socketEntries']) {
                DestinyDefinitionsDestinyItemSocketEntryDefinition.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This was supposed to be a string that would give per-item details about sockets. In practice, it turns out that all this ever has is the localized word \"details\". ... that's lame, but perhaps it will become something cool in the future.
 * @member {String} detail
 */
DestinyDefinitionsDestinyItemSocketBlockDefinition.prototype['detail'] = undefined;

/**
 * Each intrinsic (or immutable/permanent) socket on an item is defined here, along with the plug that is permanently affixed to the socket.
 * @member {Array.<module:model/DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition>} intrinsicSockets
 */
DestinyDefinitionsDestinyItemSocketBlockDefinition.prototype['intrinsicSockets'] = undefined;

/**
 * A convenience property, that refers to the sockets in the \"sockets\" property, pre-grouped by category and ordered in the manner that they should be grouped in the UI. You could form this yourself with the existing data, but why would you want to? Enjoy life man.
 * @member {Array.<module:model/DestinyDefinitionsDestinyItemSocketCategoryDefinition>} socketCategories
 */
DestinyDefinitionsDestinyItemSocketBlockDefinition.prototype['socketCategories'] = undefined;

/**
 * Each non-intrinsic (or mutable) socket on an item is defined here. Check inside for more info.
 * @member {Array.<module:model/DestinyDefinitionsDestinyItemSocketEntryDefinition>} socketEntries
 */
DestinyDefinitionsDestinyItemSocketBlockDefinition.prototype['socketEntries'] = undefined;






export default DestinyDefinitionsDestinyItemSocketBlockDefinition;

