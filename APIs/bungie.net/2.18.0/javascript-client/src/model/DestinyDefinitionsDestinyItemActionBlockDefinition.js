/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsDestinyItemActionRequiredItemDefinition from './DestinyDefinitionsDestinyItemActionRequiredItemDefinition';
import DestinyDefinitionsDestinyProgressionRewardDefinition from './DestinyDefinitionsDestinyProgressionRewardDefinition';

/**
 * The DestinyDefinitionsDestinyItemActionBlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyItemActionBlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemActionBlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemActionBlockDefinition</code>.
     * If an item can have an action performed on it (like \&quot;Dismantle\&quot;), it will be defined here if you care.
     * @alias module:model/DestinyDefinitionsDestinyItemActionBlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemActionBlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemActionBlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemActionBlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemActionBlockDefinition} The populated <code>DestinyDefinitionsDestinyItemActionBlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemActionBlockDefinition();

            if (data.hasOwnProperty('actionTypeLabel')) {
                obj['actionTypeLabel'] = ApiClient.convertToType(data['actionTypeLabel'], 'String');
            }
            if (data.hasOwnProperty('consumeEntireStack')) {
                obj['consumeEntireStack'] = ApiClient.convertToType(data['consumeEntireStack'], 'Boolean');
            }
            if (data.hasOwnProperty('deleteOnAction')) {
                obj['deleteOnAction'] = ApiClient.convertToType(data['deleteOnAction'], 'Boolean');
            }
            if (data.hasOwnProperty('isPositive')) {
                obj['isPositive'] = ApiClient.convertToType(data['isPositive'], 'Boolean');
            }
            if (data.hasOwnProperty('overlayIcon')) {
                obj['overlayIcon'] = ApiClient.convertToType(data['overlayIcon'], 'String');
            }
            if (data.hasOwnProperty('overlayScreenName')) {
                obj['overlayScreenName'] = ApiClient.convertToType(data['overlayScreenName'], 'String');
            }
            if (data.hasOwnProperty('progressionRewards')) {
                obj['progressionRewards'] = ApiClient.convertToType(data['progressionRewards'], [DestinyDefinitionsDestinyProgressionRewardDefinition]);
            }
            if (data.hasOwnProperty('requiredCooldownHash')) {
                obj['requiredCooldownHash'] = ApiClient.convertToType(data['requiredCooldownHash'], 'Number');
            }
            if (data.hasOwnProperty('requiredCooldownSeconds')) {
                obj['requiredCooldownSeconds'] = ApiClient.convertToType(data['requiredCooldownSeconds'], 'Number');
            }
            if (data.hasOwnProperty('requiredItems')) {
                obj['requiredItems'] = ApiClient.convertToType(data['requiredItems'], [DestinyDefinitionsDestinyItemActionRequiredItemDefinition]);
            }
            if (data.hasOwnProperty('requiredLocation')) {
                obj['requiredLocation'] = ApiClient.convertToType(data['requiredLocation'], 'String');
            }
            if (data.hasOwnProperty('useOnAcquire')) {
                obj['useOnAcquire'] = ApiClient.convertToType(data['useOnAcquire'], 'Boolean');
            }
            if (data.hasOwnProperty('verbDescription')) {
                obj['verbDescription'] = ApiClient.convertToType(data['verbDescription'], 'String');
            }
            if (data.hasOwnProperty('verbName')) {
                obj['verbName'] = ApiClient.convertToType(data['verbName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemActionBlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemActionBlockDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['actionTypeLabel'] && !(typeof data['actionTypeLabel'] === 'string' || data['actionTypeLabel'] instanceof String)) {
            throw new Error("Expected the field `actionTypeLabel` to be a primitive type in the JSON string but got " + data['actionTypeLabel']);
        }
        // ensure the json data is a string
        if (data['overlayIcon'] && !(typeof data['overlayIcon'] === 'string' || data['overlayIcon'] instanceof String)) {
            throw new Error("Expected the field `overlayIcon` to be a primitive type in the JSON string but got " + data['overlayIcon']);
        }
        // ensure the json data is a string
        if (data['overlayScreenName'] && !(typeof data['overlayScreenName'] === 'string' || data['overlayScreenName'] instanceof String)) {
            throw new Error("Expected the field `overlayScreenName` to be a primitive type in the JSON string but got " + data['overlayScreenName']);
        }
        if (data['progressionRewards']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['progressionRewards'])) {
                throw new Error("Expected the field `progressionRewards` to be an array in the JSON data but got " + data['progressionRewards']);
            }
            // validate the optional field `progressionRewards` (array)
            for (const item of data['progressionRewards']) {
                DestinyDefinitionsDestinyProgressionRewardDefinition.validateJSON(item);
            };
        }
        if (data['requiredItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['requiredItems'])) {
                throw new Error("Expected the field `requiredItems` to be an array in the JSON data but got " + data['requiredItems']);
            }
            // validate the optional field `requiredItems` (array)
            for (const item of data['requiredItems']) {
                DestinyDefinitionsDestinyItemActionRequiredItemDefinition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['requiredLocation'] && !(typeof data['requiredLocation'] === 'string' || data['requiredLocation'] instanceof String)) {
            throw new Error("Expected the field `requiredLocation` to be a primitive type in the JSON string but got " + data['requiredLocation']);
        }
        // ensure the json data is a string
        if (data['verbDescription'] && !(typeof data['verbDescription'] === 'string' || data['verbDescription'] instanceof String)) {
            throw new Error("Expected the field `verbDescription` to be a primitive type in the JSON string but got " + data['verbDescription']);
        }
        // ensure the json data is a string
        if (data['verbName'] && !(typeof data['verbName'] === 'string' || data['verbName'] instanceof String)) {
            throw new Error("Expected the field `verbName` to be a primitive type in the JSON string but got " + data['verbName']);
        }

        return true;
    }


}



/**
 * The internal identifier for the action.
 * @member {String} actionTypeLabel
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['actionTypeLabel'] = undefined;

/**
 * If true, the entire stack is deleted when the action completes.
 * @member {Boolean} consumeEntireStack
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['consumeEntireStack'] = undefined;

/**
 * If true, the item is deleted when the action completes.
 * @member {Boolean} deleteOnAction
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['deleteOnAction'] = undefined;

/**
 * The content has this property, however it's not entirely clear how it is used.
 * @member {Boolean} isPositive
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['isPositive'] = undefined;

/**
 * The icon associated with the overlay screen for the action, if any.
 * @member {String} overlayIcon
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['overlayIcon'] = undefined;

/**
 * If the action has an overlay screen associated with it, this is the name of that screen. Unfortunately, we cannot return the screen's data itself.
 * @member {String} overlayScreenName
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['overlayScreenName'] = undefined;

/**
 * If performing this action earns you Progression, this is the list of progressions and values granted for those progressions by performing this action.
 * @member {Array.<module:model/DestinyDefinitionsDestinyProgressionRewardDefinition>} progressionRewards
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['progressionRewards'] = undefined;

/**
 * The identifier hash for the Cooldown associated with this action. We have not pulled this data yet for you to have more data to use for cooldowns.
 * @member {Number} requiredCooldownHash
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['requiredCooldownHash'] = undefined;

/**
 * The number of seconds to delay before allowing this action to be performed again.
 * @member {Number} requiredCooldownSeconds
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['requiredCooldownSeconds'] = undefined;

/**
 * If the action requires other items to exist or be destroyed, this is the list of those items and requirements.
 * @member {Array.<module:model/DestinyDefinitionsDestinyItemActionRequiredItemDefinition>} requiredItems
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['requiredItems'] = undefined;

/**
 * Theoretically, an item could have a localized string for a hint about the location in which the action should be performed. In practice, no items yet have this property.
 * @member {String} requiredLocation
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['requiredLocation'] = undefined;

/**
 * If true, this action will be performed as soon as you earn this item. Some rewards work this way, providing you a single item to pick up from a reward-granting vendor in-game and then immediately consuming itself to provide you multiple items.
 * @member {Boolean} useOnAcquire
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['useOnAcquire'] = undefined;

/**
 * Localized text describing the action being performed.
 * @member {String} verbDescription
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['verbDescription'] = undefined;

/**
 * Localized text for the verb of the action being performed.
 * @member {String} verbName
 */
DestinyDefinitionsDestinyItemActionBlockDefinition.prototype['verbName'] = undefined;






export default DestinyDefinitionsDestinyItemActionBlockDefinition;

