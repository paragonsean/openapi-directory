/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyReportingRequestsDestinyReportOffensePgcrRequest model module.
 * @module model/DestinyReportingRequestsDestinyReportOffensePgcrRequest
 * @version 2.18.0
 */
class DestinyReportingRequestsDestinyReportOffensePgcrRequest {
    /**
     * Constructs a new <code>DestinyReportingRequestsDestinyReportOffensePgcrRequest</code>.
     * If you want to report a player causing trouble in a game, this request will let you report that player and the specific PGCR in which the trouble was caused, along with why.  Please don&#39;t do this just because you dislike the person! I mean, I know people will do it anyways, but can you like take a good walk, or put a curse on them or something? Do me a solid and reconsider.  Note that this request object doesn&#39;t have the actual PGCR ID nor your Account/Character ID in it. We will infer that information from your authentication information and the PGCR ID that you pass into the URL of the reporting endpoint itself.
     * @alias module:model/DestinyReportingRequestsDestinyReportOffensePgcrRequest
     */
    constructor() { 
        
        DestinyReportingRequestsDestinyReportOffensePgcrRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyReportingRequestsDestinyReportOffensePgcrRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyReportingRequestsDestinyReportOffensePgcrRequest} obj Optional instance to populate.
     * @return {module:model/DestinyReportingRequestsDestinyReportOffensePgcrRequest} The populated <code>DestinyReportingRequestsDestinyReportOffensePgcrRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyReportingRequestsDestinyReportOffensePgcrRequest();

            if (data.hasOwnProperty('offendingCharacterId')) {
                obj['offendingCharacterId'] = ApiClient.convertToType(data['offendingCharacterId'], 'Number');
            }
            if (data.hasOwnProperty('reasonCategoryHashes')) {
                obj['reasonCategoryHashes'] = ApiClient.convertToType(data['reasonCategoryHashes'], ['Number']);
            }
            if (data.hasOwnProperty('reasonHashes')) {
                obj['reasonHashes'] = ApiClient.convertToType(data['reasonHashes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyReportingRequestsDestinyReportOffensePgcrRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyReportingRequestsDestinyReportOffensePgcrRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['reasonCategoryHashes'])) {
            throw new Error("Expected the field `reasonCategoryHashes` to be an array in the JSON data but got " + data['reasonCategoryHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reasonHashes'])) {
            throw new Error("Expected the field `reasonHashes` to be an array in the JSON data but got " + data['reasonHashes']);
        }

        return true;
    }


}



/**
 * Within the PGCR provided when calling the Reporting endpoint, this should be the character ID of the user that you thought was violating terms of use. They must exist in the PGCR provided.
 * @member {Number} offendingCharacterId
 */
DestinyReportingRequestsDestinyReportOffensePgcrRequest.prototype['offendingCharacterId'] = undefined;

/**
 * So you've decided to report someone instead of cursing them and their descendants. Well, okay then. This is the category or categorie(s) of infractions for which you are reporting the user. These are hash identifiers that map to DestinyReportReasonCategoryDefinition entries.
 * @member {Array.<Number>} reasonCategoryHashes
 */
DestinyReportingRequestsDestinyReportOffensePgcrRequest.prototype['reasonCategoryHashes'] = undefined;

/**
 * If applicable, provide a more specific reason(s) within the general category of problems provided by the reasonHash. This is also an identifier for a reason. All reasonHashes provided must be children of at least one the reasonCategoryHashes provided.
 * @member {Array.<Number>} reasonHashes
 */
DestinyReportingRequestsDestinyReportOffensePgcrRequest.prototype['reasonHashes'] = undefined;






export default DestinyReportingRequestsDestinyReportOffensePgcrRequest;

