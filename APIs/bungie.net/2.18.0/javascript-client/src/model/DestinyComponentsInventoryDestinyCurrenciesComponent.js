/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyComponentsInventoryDestinyCurrenciesComponent model module.
 * @module model/DestinyComponentsInventoryDestinyCurrenciesComponent
 * @version 2.18.0
 */
class DestinyComponentsInventoryDestinyCurrenciesComponent {
    /**
     * Constructs a new <code>DestinyComponentsInventoryDestinyCurrenciesComponent</code>.
     * This component provides a quick lookup of every item the requested character has and how much of that item they have.  Requesting this component will allow you to circumvent manually putting together the list of which currencies you have for the purpose of testing currency requirements on an item being purchased, or operations that have costs.  You *could* figure this out yourself by doing a GetCharacter or GetProfile request and forming your own lookup table, but that is inconvenient enough that this feels like a worthwhile (and optional) redundency. Don&#39;t bother requesting it if you have already created your own lookup from prior GetCharacter/GetProfile calls.
     * @alias module:model/DestinyComponentsInventoryDestinyCurrenciesComponent
     */
    constructor() { 
        
        DestinyComponentsInventoryDestinyCurrenciesComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyComponentsInventoryDestinyCurrenciesComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyComponentsInventoryDestinyCurrenciesComponent} obj Optional instance to populate.
     * @return {module:model/DestinyComponentsInventoryDestinyCurrenciesComponent} The populated <code>DestinyComponentsInventoryDestinyCurrenciesComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyComponentsInventoryDestinyCurrenciesComponent();

            if (data.hasOwnProperty('itemQuantities')) {
                obj['itemQuantities'] = ApiClient.convertToType(data['itemQuantities'], {'String': 'Number'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyComponentsInventoryDestinyCurrenciesComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyComponentsInventoryDestinyCurrenciesComponent</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A dictionary - keyed by the item's hash identifier (DestinyInventoryItemDefinition), and whose value is the amount of that item you have across all available inventory buckets for purchasing.  This allows you to see whether the requesting character can afford any given purchase/action without having to re-create this list itself.
 * @member {Object.<String, Number>} itemQuantities
 */
DestinyComponentsInventoryDestinyCurrenciesComponent.prototype['itemQuantities'] = undefined;






export default DestinyComponentsInventoryDestinyCurrenciesComponent;

