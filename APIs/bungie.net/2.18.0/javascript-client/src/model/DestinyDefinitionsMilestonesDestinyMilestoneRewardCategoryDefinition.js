/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition from './DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition';
import DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition from './DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition';

/**
 * The DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition model module.
 * @module model/DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition</code>.
     * The definition of a category of rewards, that contains many individual rewards.
     * @alias module:model/DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition
     */
    constructor() { 
        
        DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition} The populated <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition();

            if (data.hasOwnProperty('categoryHash')) {
                obj['categoryHash'] = ApiClient.convertToType(data['categoryHash'], 'Number');
            }
            if (data.hasOwnProperty('categoryIdentifier')) {
                obj['categoryIdentifier'] = ApiClient.convertToType(data['categoryIdentifier'], 'String');
            }
            if (data.hasOwnProperty('displayProperties')) {
                obj['displayProperties'] = ApiClient.convertToType(data['displayProperties'], DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('rewardEntries')) {
                obj['rewardEntries'] = ApiClient.convertToType(data['rewardEntries'], {'String': DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['categoryIdentifier'] && !(typeof data['categoryIdentifier'] === 'string' || data['categoryIdentifier'] instanceof String)) {
            throw new Error("Expected the field `categoryIdentifier` to be a primitive type in the JSON string but got " + data['categoryIdentifier']);
        }
        // validate the optional field `displayProperties`
        if (data['displayProperties']) { // data not null
          DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJSON(data['displayProperties']);
        }

        return true;
    }


}



/**
 * Identifies the reward category. Only guaranteed unique within this specific component!
 * @member {Number} categoryHash
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.prototype['categoryHash'] = undefined;

/**
 * The string identifier for the category, if you want to use it for some end. Guaranteed unique within the specific component.
 * @member {String} categoryIdentifier
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.prototype['categoryIdentifier'] = undefined;

/**
 * Hopefully this is obvious by now.
 * @member {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} displayProperties
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.prototype['displayProperties'] = undefined;

/**
 * If you want to use BNet's recommended order for rendering categories programmatically, use this value and compare it to other categories to determine the order in which they should be rendered. I don't feel great about putting this here, I won't lie.
 * @member {Number} order
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.prototype['order'] = undefined;

/**
 * If this milestone can provide rewards, this will define the sets of rewards that can be earned, the conditions under which they can be acquired, internal data that we'll use at runtime to determine whether you've already earned or redeemed this set of rewards, and the category that this reward should be placed under.
 * @member {Object.<String, module:model/DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition>} rewardEntries
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition.prototype['rewardEntries'] = undefined;






export default DestinyDefinitionsMilestonesDestinyMilestoneRewardCategoryDefinition;

