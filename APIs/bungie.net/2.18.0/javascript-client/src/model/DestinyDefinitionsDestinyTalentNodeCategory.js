/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition from './DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition';

/**
 * The DestinyDefinitionsDestinyTalentNodeCategory model module.
 * @module model/DestinyDefinitionsDestinyTalentNodeCategory
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyTalentNodeCategory {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyTalentNodeCategory</code>.
     * An artificial construct provided by Bungie.Net, where we attempt to group talent nodes by functionality.  This is a single set of references to Talent Nodes that share a common trait or purpose.
     * @alias module:model/DestinyDefinitionsDestinyTalentNodeCategory
     */
    constructor() { 
        
        DestinyDefinitionsDestinyTalentNodeCategory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyTalentNodeCategory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyTalentNodeCategory} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyTalentNodeCategory} The populated <code>DestinyDefinitionsDestinyTalentNodeCategory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyTalentNodeCategory();

            if (data.hasOwnProperty('displayProperties')) {
                obj['displayProperties'] = ApiClient.convertToType(data['displayProperties'], DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition);
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('isLoreDriven')) {
                obj['isLoreDriven'] = ApiClient.convertToType(data['isLoreDriven'], 'Boolean');
            }
            if (data.hasOwnProperty('nodeHashes')) {
                obj['nodeHashes'] = ApiClient.convertToType(data['nodeHashes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyTalentNodeCategory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyTalentNodeCategory</code>.
     */
    static validateJSON(data) {
        // validate the optional field `displayProperties`
        if (data['displayProperties']) { // data not null
          DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJSON(data['displayProperties']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['nodeHashes'])) {
            throw new Error("Expected the field `nodeHashes` to be an array in the JSON data but got " + data['nodeHashes']);
        }

        return true;
    }


}



/**
 * Will contain at least the \"name\", which will be the title of the category. We will likely not have description and an icon yet, but I'm going to keep my options open.
 * @member {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} displayProperties
 */
DestinyDefinitionsDestinyTalentNodeCategory.prototype['displayProperties'] = undefined;

/**
 * Mostly just for debug purposes, but if you find it useful you can have it. This is BNet's manually created identifier for this category.
 * @member {String} identifier
 */
DestinyDefinitionsDestinyTalentNodeCategory.prototype['identifier'] = undefined;

/**
 * If true, we found the localized content in a related DestinyLoreDefinition instead of local BNet localization files. This is mostly for ease of my own future investigations.
 * @member {Boolean} isLoreDriven
 */
DestinyDefinitionsDestinyTalentNodeCategory.prototype['isLoreDriven'] = undefined;

/**
 * The set of all hash identifiers for Talent Nodes (DestinyTalentNodeDefinition) in this Talent Grid that are part of this Category.
 * @member {Array.<Number>} nodeHashes
 */
DestinyDefinitionsDestinyTalentNodeCategory.prototype['nodeHashes'] = undefined;






export default DestinyDefinitionsDestinyTalentNodeCategory;

