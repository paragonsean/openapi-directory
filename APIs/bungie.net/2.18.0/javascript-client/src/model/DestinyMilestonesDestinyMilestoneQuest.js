/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyChallengesDestinyChallengeStatus from './DestinyChallengesDestinyChallengeStatus';
import DestinyMilestonesDestinyMilestoneActivity from './DestinyMilestonesDestinyMilestoneActivity';
import DestinyQuestsDestinyQuestStatus from './DestinyQuestsDestinyQuestStatus';

/**
 * The DestinyMilestonesDestinyMilestoneQuest model module.
 * @module model/DestinyMilestonesDestinyMilestoneQuest
 * @version 2.18.0
 */
class DestinyMilestonesDestinyMilestoneQuest {
    /**
     * Constructs a new <code>DestinyMilestonesDestinyMilestoneQuest</code>.
     * If a Milestone has one or more Quests, this will contain the live information for the character&#39;s status with one of those quests.
     * @alias module:model/DestinyMilestonesDestinyMilestoneQuest
     */
    constructor() { 
        
        DestinyMilestonesDestinyMilestoneQuest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyMilestonesDestinyMilestoneQuest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyMilestonesDestinyMilestoneQuest} obj Optional instance to populate.
     * @return {module:model/DestinyMilestonesDestinyMilestoneQuest} The populated <code>DestinyMilestonesDestinyMilestoneQuest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyMilestonesDestinyMilestoneQuest();

            if (data.hasOwnProperty('activity')) {
                obj['activity'] = ApiClient.convertToType(data['activity'], DestinyMilestonesDestinyMilestoneActivity);
            }
            if (data.hasOwnProperty('challenges')) {
                obj['challenges'] = ApiClient.convertToType(data['challenges'], [DestinyChallengesDestinyChallengeStatus]);
            }
            if (data.hasOwnProperty('questItemHash')) {
                obj['questItemHash'] = ApiClient.convertToType(data['questItemHash'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], DestinyQuestsDestinyQuestStatus);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyMilestonesDestinyMilestoneQuest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyMilestonesDestinyMilestoneQuest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `activity`
        if (data['activity']) { // data not null
          DestinyMilestonesDestinyMilestoneActivity.validateJSON(data['activity']);
        }
        if (data['challenges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['challenges'])) {
                throw new Error("Expected the field `challenges` to be an array in the JSON data but got " + data['challenges']);
            }
            // validate the optional field `challenges` (array)
            for (const item of data['challenges']) {
                DestinyChallengesDestinyChallengeStatus.validateJSON(item);
            };
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          DestinyQuestsDestinyQuestStatus.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * *IF* the Milestone has an active Activity that can give you greater details about what you need to do, it will be returned here. Remember to associate this with the DestinyMilestoneDefinition's activities to get details about the activity, including what specific quest it is related to if you have multiple quests to choose from.
 * @member {module:model/DestinyMilestonesDestinyMilestoneActivity} activity
 */
DestinyMilestonesDestinyMilestoneQuest.prototype['activity'] = undefined;

/**
 * The activities referred to by this quest can have many associated challenges. They are all contained here, with activityHashes so that you can associate them with the specific activity variants in which they can be found. In retrospect, I probably should have put these under the specific Activity Variants, but it's too late to change it now. Theoretically, a quest without Activities can still have Challenges, which is why this is on a higher level than activity/variants, but it probably should have been in both places. That may come as a later revision.
 * @member {Array.<module:model/DestinyChallengesDestinyChallengeStatus>} challenges
 */
DestinyMilestonesDestinyMilestoneQuest.prototype['challenges'] = undefined;

/**
 * Quests are defined as Items in content. As such, this is the hash identifier of the DestinyInventoryItemDefinition that represents this quest. It will have pointers to all of the steps in the quest, and display information for the quest (title, description, icon etc) Individual steps will be referred to in the Quest item's DestinyInventoryItemDefinition.setData property, and themselves are Items with their own renderable data.
 * @member {Number} questItemHash
 */
DestinyMilestonesDestinyMilestoneQuest.prototype['questItemHash'] = undefined;

/**
 * The current status of the quest for the character making the request.
 * @member {module:model/DestinyQuestsDestinyQuestStatus} status
 */
DestinyMilestonesDestinyMilestoneQuest.prototype['status'] = undefined;






export default DestinyMilestonesDestinyMilestoneQuest;

