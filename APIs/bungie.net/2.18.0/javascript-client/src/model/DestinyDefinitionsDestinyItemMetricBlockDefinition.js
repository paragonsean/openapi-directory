/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyItemMetricBlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyItemMetricBlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemMetricBlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemMetricBlockDefinition</code>.
     * The metrics available for display and selection on an item.
     * @alias module:model/DestinyDefinitionsDestinyItemMetricBlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemMetricBlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemMetricBlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemMetricBlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemMetricBlockDefinition} The populated <code>DestinyDefinitionsDestinyItemMetricBlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemMetricBlockDefinition();

            if (data.hasOwnProperty('availableMetricCategoryNodeHashes')) {
                obj['availableMetricCategoryNodeHashes'] = ApiClient.convertToType(data['availableMetricCategoryNodeHashes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemMetricBlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemMetricBlockDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['availableMetricCategoryNodeHashes'])) {
            throw new Error("Expected the field `availableMetricCategoryNodeHashes` to be an array in the JSON data but got " + data['availableMetricCategoryNodeHashes']);
        }

        return true;
    }


}



/**
 * Hash identifiers for any DestinyPresentationNodeDefinition entry that can be used to list available metrics. Any metric listed directly below these nodes, or in any of these nodes' children will be made available for selection.
 * @member {Array.<Number>} availableMetricCategoryNodeHashes
 */
DestinyDefinitionsDestinyItemMetricBlockDefinition.prototype['availableMetricCategoryNodeHashes'] = undefined;






export default DestinyDefinitionsDestinyItemMetricBlockDefinition;

