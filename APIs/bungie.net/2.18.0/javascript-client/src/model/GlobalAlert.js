/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StreamInfo from './StreamInfo';

/**
 * The GlobalAlert model module.
 * @module model/GlobalAlert
 * @version 2.18.0
 */
class GlobalAlert {
    /**
     * Constructs a new <code>GlobalAlert</code>.
     * @alias module:model/GlobalAlert
     */
    constructor() { 
        
        GlobalAlert.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GlobalAlert</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GlobalAlert} obj Optional instance to populate.
     * @return {module:model/GlobalAlert} The populated <code>GlobalAlert</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GlobalAlert();

            if (data.hasOwnProperty('AlertHtml')) {
                obj['AlertHtml'] = ApiClient.convertToType(data['AlertHtml'], 'String');
            }
            if (data.hasOwnProperty('AlertKey')) {
                obj['AlertKey'] = ApiClient.convertToType(data['AlertKey'], 'String');
            }
            if (data.hasOwnProperty('AlertLevel')) {
                obj['AlertLevel'] = ApiClient.convertToType(data['AlertLevel'], 'Number');
            }
            if (data.hasOwnProperty('AlertLink')) {
                obj['AlertLink'] = ApiClient.convertToType(data['AlertLink'], 'String');
            }
            if (data.hasOwnProperty('AlertTimestamp')) {
                obj['AlertTimestamp'] = ApiClient.convertToType(data['AlertTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('AlertType')) {
                obj['AlertType'] = ApiClient.convertToType(data['AlertType'], 'Number');
            }
            if (data.hasOwnProperty('StreamInfo')) {
                obj['StreamInfo'] = StreamInfo.constructFromObject(data['StreamInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GlobalAlert</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GlobalAlert</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AlertHtml'] && !(typeof data['AlertHtml'] === 'string' || data['AlertHtml'] instanceof String)) {
            throw new Error("Expected the field `AlertHtml` to be a primitive type in the JSON string but got " + data['AlertHtml']);
        }
        // ensure the json data is a string
        if (data['AlertKey'] && !(typeof data['AlertKey'] === 'string' || data['AlertKey'] instanceof String)) {
            throw new Error("Expected the field `AlertKey` to be a primitive type in the JSON string but got " + data['AlertKey']);
        }
        // ensure the json data is a string
        if (data['AlertLink'] && !(typeof data['AlertLink'] === 'string' || data['AlertLink'] instanceof String)) {
            throw new Error("Expected the field `AlertLink` to be a primitive type in the JSON string but got " + data['AlertLink']);
        }
        // validate the optional field `StreamInfo`
        if (data['StreamInfo']) { // data not null
          StreamInfo.validateJSON(data['StreamInfo']);
        }

        return true;
    }


}



/**
 * @member {String} AlertHtml
 */
GlobalAlert.prototype['AlertHtml'] = undefined;

/**
 * @member {String} AlertKey
 */
GlobalAlert.prototype['AlertKey'] = undefined;

/**
 * @member {Number} AlertLevel
 */
GlobalAlert.prototype['AlertLevel'] = undefined;

/**
 * @member {String} AlertLink
 */
GlobalAlert.prototype['AlertLink'] = undefined;

/**
 * @member {Date} AlertTimestamp
 */
GlobalAlert.prototype['AlertTimestamp'] = undefined;

/**
 * @member {Number} AlertType
 */
GlobalAlert.prototype['AlertType'] = undefined;

/**
 * @member {module:model/StreamInfo} StreamInfo
 */
GlobalAlert.prototype['StreamInfo'] = undefined;






export default GlobalAlert;

