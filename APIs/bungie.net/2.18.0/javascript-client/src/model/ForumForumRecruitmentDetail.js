/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserGeneralUser from './UserGeneralUser';

/**
 * The ForumForumRecruitmentDetail model module.
 * @module model/ForumForumRecruitmentDetail
 * @version 2.18.0
 */
class ForumForumRecruitmentDetail {
    /**
     * Constructs a new <code>ForumForumRecruitmentDetail</code>.
     * @alias module:model/ForumForumRecruitmentDetail
     */
    constructor() { 
        
        ForumForumRecruitmentDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ForumForumRecruitmentDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ForumForumRecruitmentDetail} obj Optional instance to populate.
     * @return {module:model/ForumForumRecruitmentDetail} The populated <code>ForumForumRecruitmentDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ForumForumRecruitmentDetail();

            if (data.hasOwnProperty('Fireteam')) {
                obj['Fireteam'] = ApiClient.convertToType(data['Fireteam'], [UserGeneralUser]);
            }
            if (data.hasOwnProperty('approved')) {
                obj['approved'] = ApiClient.convertToType(data['approved'], 'Boolean');
            }
            if (data.hasOwnProperty('conversationId')) {
                obj['conversationId'] = ApiClient.convertToType(data['conversationId'], 'Number');
            }
            if (data.hasOwnProperty('intensity')) {
                obj['intensity'] = ApiClient.convertToType(data['intensity'], 'Number');
            }
            if (data.hasOwnProperty('kickedPlayerIds')) {
                obj['kickedPlayerIds'] = ApiClient.convertToType(data['kickedPlayerIds'], ['Number']);
            }
            if (data.hasOwnProperty('microphoneRequired')) {
                obj['microphoneRequired'] = ApiClient.convertToType(data['microphoneRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('playerSlotsRemaining')) {
                obj['playerSlotsRemaining'] = ApiClient.convertToType(data['playerSlotsRemaining'], 'Number');
            }
            if (data.hasOwnProperty('playerSlotsTotal')) {
                obj['playerSlotsTotal'] = ApiClient.convertToType(data['playerSlotsTotal'], 'Number');
            }
            if (data.hasOwnProperty('tone')) {
                obj['tone'] = ApiClient.convertToType(data['tone'], 'Number');
            }
            if (data.hasOwnProperty('topicId')) {
                obj['topicId'] = ApiClient.convertToType(data['topicId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ForumForumRecruitmentDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ForumForumRecruitmentDetail</code>.
     */
    static validateJSON(data) {
        if (data['Fireteam']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Fireteam'])) {
                throw new Error("Expected the field `Fireteam` to be an array in the JSON data but got " + data['Fireteam']);
            }
            // validate the optional field `Fireteam` (array)
            for (const item of data['Fireteam']) {
                UserGeneralUser.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['kickedPlayerIds'])) {
            throw new Error("Expected the field `kickedPlayerIds` to be an array in the JSON data but got " + data['kickedPlayerIds']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/UserGeneralUser>} Fireteam
 */
ForumForumRecruitmentDetail.prototype['Fireteam'] = undefined;

/**
 * @member {Boolean} approved
 */
ForumForumRecruitmentDetail.prototype['approved'] = undefined;

/**
 * @member {Number} conversationId
 */
ForumForumRecruitmentDetail.prototype['conversationId'] = undefined;

/**
 * @member {Number} intensity
 */
ForumForumRecruitmentDetail.prototype['intensity'] = undefined;

/**
 * @member {Array.<Number>} kickedPlayerIds
 */
ForumForumRecruitmentDetail.prototype['kickedPlayerIds'] = undefined;

/**
 * @member {Boolean} microphoneRequired
 */
ForumForumRecruitmentDetail.prototype['microphoneRequired'] = undefined;

/**
 * @member {Number} playerSlotsRemaining
 */
ForumForumRecruitmentDetail.prototype['playerSlotsRemaining'] = undefined;

/**
 * @member {Number} playerSlotsTotal
 */
ForumForumRecruitmentDetail.prototype['playerSlotsTotal'] = undefined;

/**
 * @member {Number} tone
 */
ForumForumRecruitmentDetail.prototype['tone'] = undefined;

/**
 * @member {Number} topicId
 */
ForumForumRecruitmentDetail.prototype['topicId'] = undefined;






export default ForumForumRecruitmentDetail;

