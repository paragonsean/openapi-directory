/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyTalentExclusiveGroup model module.
 * @module model/DestinyDefinitionsDestinyTalentExclusiveGroup
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyTalentExclusiveGroup {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyTalentExclusiveGroup</code>.
     * As of Destiny 2, nodes can exist as part of \&quot;Exclusive Groups\&quot;. These differ from exclusive sets in that, within the group, many nodes can be activated. But the act of activating any node in the group will cause \&quot;opposing\&quot; nodes (nodes in groups that are not allowed to be activated at the same time as this group) to deactivate.
     * @alias module:model/DestinyDefinitionsDestinyTalentExclusiveGroup
     */
    constructor() { 
        
        DestinyDefinitionsDestinyTalentExclusiveGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyTalentExclusiveGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyTalentExclusiveGroup} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyTalentExclusiveGroup} The populated <code>DestinyDefinitionsDestinyTalentExclusiveGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyTalentExclusiveGroup();

            if (data.hasOwnProperty('groupHash')) {
                obj['groupHash'] = ApiClient.convertToType(data['groupHash'], 'Number');
            }
            if (data.hasOwnProperty('loreHash')) {
                obj['loreHash'] = ApiClient.convertToType(data['loreHash'], 'Number');
            }
            if (data.hasOwnProperty('nodeHashes')) {
                obj['nodeHashes'] = ApiClient.convertToType(data['nodeHashes'], ['Number']);
            }
            if (data.hasOwnProperty('opposingGroupHashes')) {
                obj['opposingGroupHashes'] = ApiClient.convertToType(data['opposingGroupHashes'], ['Number']);
            }
            if (data.hasOwnProperty('opposingNodeHashes')) {
                obj['opposingNodeHashes'] = ApiClient.convertToType(data['opposingNodeHashes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyTalentExclusiveGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyTalentExclusiveGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['nodeHashes'])) {
            throw new Error("Expected the field `nodeHashes` to be an array in the JSON data but got " + data['nodeHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['opposingGroupHashes'])) {
            throw new Error("Expected the field `opposingGroupHashes` to be an array in the JSON data but got " + data['opposingGroupHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['opposingNodeHashes'])) {
            throw new Error("Expected the field `opposingNodeHashes` to be an array in the JSON data but got " + data['opposingNodeHashes']);
        }

        return true;
    }


}



/**
 * The identifier for this exclusive group. Only guaranteed unique within the talent grid, not globally.
 * @member {Number} groupHash
 */
DestinyDefinitionsDestinyTalentExclusiveGroup.prototype['groupHash'] = undefined;

/**
 * If this group has an associated piece of lore to show next to it, this will be the identifier for that DestinyLoreDefinition.
 * @member {Number} loreHash
 */
DestinyDefinitionsDestinyTalentExclusiveGroup.prototype['loreHash'] = undefined;

/**
 * A quick reference of the talent nodes that are part of this group, by their Talent Node hashes. (See DestinyTalentNodeDefinition.nodeHash)
 * @member {Array.<Number>} nodeHashes
 */
DestinyDefinitionsDestinyTalentExclusiveGroup.prototype['nodeHashes'] = undefined;

/**
 * A quick reference of Groups whose nodes will be deactivated if any node in this group is activated.
 * @member {Array.<Number>} opposingGroupHashes
 */
DestinyDefinitionsDestinyTalentExclusiveGroup.prototype['opposingGroupHashes'] = undefined;

/**
 * A quick reference of Nodes that will be deactivated if any node in this group is activated, by their Talent Node hashes. (See DestinyTalentNodeDefinition.nodeHash)
 * @member {Array.<Number>} opposingNodeHashes
 */
DestinyDefinitionsDestinyTalentExclusiveGroup.prototype['opposingNodeHashes'] = undefined;






export default DestinyDefinitionsDestinyTalentExclusiveGroup;

