/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyComponentsVendorsDestinyVendorBaseComponent model module.
 * @module model/DestinyComponentsVendorsDestinyVendorBaseComponent
 * @version 2.18.0
 */
class DestinyComponentsVendorsDestinyVendorBaseComponent {
    /**
     * Constructs a new <code>DestinyComponentsVendorsDestinyVendorBaseComponent</code>.
     * This component contains essential/summary information about the vendor.
     * @alias module:model/DestinyComponentsVendorsDestinyVendorBaseComponent
     */
    constructor() { 
        
        DestinyComponentsVendorsDestinyVendorBaseComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyComponentsVendorsDestinyVendorBaseComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyComponentsVendorsDestinyVendorBaseComponent} obj Optional instance to populate.
     * @return {module:model/DestinyComponentsVendorsDestinyVendorBaseComponent} The populated <code>DestinyComponentsVendorsDestinyVendorBaseComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyComponentsVendorsDestinyVendorBaseComponent();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('nextRefreshDate')) {
                obj['nextRefreshDate'] = ApiClient.convertToType(data['nextRefreshDate'], 'Date');
            }
            if (data.hasOwnProperty('vendorHash')) {
                obj['vendorHash'] = ApiClient.convertToType(data['vendorHash'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyComponentsVendorsDestinyVendorBaseComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyComponentsVendorsDestinyVendorBaseComponent</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * If True, the Vendor is currently accessible.   If False, they may not actually be visible in the world at the moment.
 * @member {Boolean} enabled
 */
DestinyComponentsVendorsDestinyVendorBaseComponent.prototype['enabled'] = undefined;

/**
 * The date when this vendor's inventory will next rotate/refresh.  Note that this is distinct from the date ranges that the vendor is visible/available in-game: this field indicates the specific time when the vendor's available items refresh and rotate, regardless of whether the vendor is actually available at that time. Unfortunately, these two values may be (and are, for the case of important vendors like Xur) different.  Issue https://github.com/Bungie-net/api/issues/353 is tracking a fix to start providing visibility date ranges where possible in addition to this refresh date, so that all important dates for vendors are available for use.
 * @member {Date} nextRefreshDate
 */
DestinyComponentsVendorsDestinyVendorBaseComponent.prototype['nextRefreshDate'] = undefined;

/**
 * The unique identifier for the vendor. Use it to look up their DestinyVendorDefinition.
 * @member {Number} vendorHash
 */
DestinyComponentsVendorsDestinyVendorBaseComponent.prototype['vendorHash'] = undefined;






export default DestinyComponentsVendorsDestinyVendorBaseComponent;

