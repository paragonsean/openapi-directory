/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent from './DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent';
import DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent from './DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent';
import DictionaryComponentResponseOfint64AndDestinyItemPerksComponent from './DictionaryComponentResponseOfint64AndDestinyItemPerksComponent';
import DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent from './DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent';
import DictionaryComponentResponseOfint64AndDestinyItemRenderComponent from './DictionaryComponentResponseOfint64AndDestinyItemRenderComponent';
import DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent from './DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent';
import DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent from './DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent';
import DictionaryComponentResponseOfint64AndDestinyItemStatsComponent from './DictionaryComponentResponseOfint64AndDestinyItemStatsComponent';
import DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent from './DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent';
import DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent from './DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent';

/**
 * The DestinyItemComponentSetOfint64 model module.
 * @module model/DestinyItemComponentSetOfint64
 * @version 2.18.0
 */
class DestinyItemComponentSetOfint64 {
    /**
     * Constructs a new <code>DestinyItemComponentSetOfint64</code>.
     * @alias module:model/DestinyItemComponentSetOfint64
     */
    constructor() { 
        
        DestinyItemComponentSetOfint64.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyItemComponentSetOfint64</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyItemComponentSetOfint64} obj Optional instance to populate.
     * @return {module:model/DestinyItemComponentSetOfint64} The populated <code>DestinyItemComponentSetOfint64</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyItemComponentSetOfint64();

            if (data.hasOwnProperty('instances')) {
                obj['instances'] = DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent.constructFromObject(data['instances']);
            }
            if (data.hasOwnProperty('objectives')) {
                obj['objectives'] = DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent.constructFromObject(data['objectives']);
            }
            if (data.hasOwnProperty('perks')) {
                obj['perks'] = DictionaryComponentResponseOfint64AndDestinyItemPerksComponent.constructFromObject(data['perks']);
            }
            if (data.hasOwnProperty('plugObjectives')) {
                obj['plugObjectives'] = DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent.constructFromObject(data['plugObjectives']);
            }
            if (data.hasOwnProperty('plugStates')) {
                obj['plugStates'] = DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent.constructFromObject(data['plugStates']);
            }
            if (data.hasOwnProperty('renderData')) {
                obj['renderData'] = DictionaryComponentResponseOfint64AndDestinyItemRenderComponent.constructFromObject(data['renderData']);
            }
            if (data.hasOwnProperty('reusablePlugs')) {
                obj['reusablePlugs'] = DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent.constructFromObject(data['reusablePlugs']);
            }
            if (data.hasOwnProperty('sockets')) {
                obj['sockets'] = DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent.constructFromObject(data['sockets']);
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = DictionaryComponentResponseOfint64AndDestinyItemStatsComponent.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('talentGrids')) {
                obj['talentGrids'] = DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent.constructFromObject(data['talentGrids']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyItemComponentSetOfint64</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyItemComponentSetOfint64</code>.
     */
    static validateJSON(data) {
        // validate the optional field `instances`
        if (data['instances']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent.validateJSON(data['instances']);
        }
        // validate the optional field `objectives`
        if (data['objectives']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent.validateJSON(data['objectives']);
        }
        // validate the optional field `perks`
        if (data['perks']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemPerksComponent.validateJSON(data['perks']);
        }
        // validate the optional field `plugObjectives`
        if (data['plugObjectives']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent.validateJSON(data['plugObjectives']);
        }
        // validate the optional field `plugStates`
        if (data['plugStates']) { // data not null
          DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent.validateJSON(data['plugStates']);
        }
        // validate the optional field `renderData`
        if (data['renderData']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemRenderComponent.validateJSON(data['renderData']);
        }
        // validate the optional field `reusablePlugs`
        if (data['reusablePlugs']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent.validateJSON(data['reusablePlugs']);
        }
        // validate the optional field `sockets`
        if (data['sockets']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent.validateJSON(data['sockets']);
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemStatsComponent.validateJSON(data['stats']);
        }
        // validate the optional field `talentGrids`
        if (data['talentGrids']) { // data not null
          DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent.validateJSON(data['talentGrids']);
        }

        return true;
    }


}



/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent} instances
 */
DestinyItemComponentSetOfint64.prototype['instances'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent} objectives
 */
DestinyItemComponentSetOfint64.prototype['objectives'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemPerksComponent} perks
 */
DestinyItemComponentSetOfint64.prototype['perks'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent} plugObjectives
 */
DestinyItemComponentSetOfint64.prototype['plugObjectives'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent} plugStates
 */
DestinyItemComponentSetOfint64.prototype['plugStates'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemRenderComponent} renderData
 */
DestinyItemComponentSetOfint64.prototype['renderData'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent} reusablePlugs
 */
DestinyItemComponentSetOfint64.prototype['reusablePlugs'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent} sockets
 */
DestinyItemComponentSetOfint64.prototype['sockets'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemStatsComponent} stats
 */
DestinyItemComponentSetOfint64.prototype['stats'] = undefined;

/**
 * @member {module:model/DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent} talentGrids
 */
DestinyItemComponentSetOfint64.prototype['talentGrids'] = undefined;






export default DestinyItemComponentSetOfint64;

