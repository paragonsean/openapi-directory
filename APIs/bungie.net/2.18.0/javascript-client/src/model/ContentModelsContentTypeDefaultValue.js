/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContentModelsContentTypeDefaultValue model module.
 * @module model/ContentModelsContentTypeDefaultValue
 * @version 2.18.0
 */
class ContentModelsContentTypeDefaultValue {
    /**
     * Constructs a new <code>ContentModelsContentTypeDefaultValue</code>.
     * @alias module:model/ContentModelsContentTypeDefaultValue
     */
    constructor() { 
        
        ContentModelsContentTypeDefaultValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContentModelsContentTypeDefaultValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentModelsContentTypeDefaultValue} obj Optional instance to populate.
     * @return {module:model/ContentModelsContentTypeDefaultValue} The populated <code>ContentModelsContentTypeDefaultValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentModelsContentTypeDefaultValue();

            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'String');
            }
            if (data.hasOwnProperty('whenClause')) {
                obj['whenClause'] = ApiClient.convertToType(data['whenClause'], 'String');
            }
            if (data.hasOwnProperty('whenValue')) {
                obj['whenValue'] = ApiClient.convertToType(data['whenValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentModelsContentTypeDefaultValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentModelsContentTypeDefaultValue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultValue'] && !(typeof data['defaultValue'] === 'string' || data['defaultValue'] instanceof String)) {
            throw new Error("Expected the field `defaultValue` to be a primitive type in the JSON string but got " + data['defaultValue']);
        }
        // ensure the json data is a string
        if (data['whenClause'] && !(typeof data['whenClause'] === 'string' || data['whenClause'] instanceof String)) {
            throw new Error("Expected the field `whenClause` to be a primitive type in the JSON string but got " + data['whenClause']);
        }
        // ensure the json data is a string
        if (data['whenValue'] && !(typeof data['whenValue'] === 'string' || data['whenValue'] instanceof String)) {
            throw new Error("Expected the field `whenValue` to be a primitive type in the JSON string but got " + data['whenValue']);
        }

        return true;
    }


}



/**
 * @member {String} defaultValue
 */
ContentModelsContentTypeDefaultValue.prototype['defaultValue'] = undefined;

/**
 * @member {String} whenClause
 */
ContentModelsContentTypeDefaultValue.prototype['whenClause'] = undefined;

/**
 * @member {String} whenValue
 */
ContentModelsContentTypeDefaultValue.prototype['whenValue'] = undefined;






export default ContentModelsContentTypeDefaultValue;

