/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsItemsDestinyDerivedItemDefinition model module.
 * @module model/DestinyDefinitionsItemsDestinyDerivedItemDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsItemsDestinyDerivedItemDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsItemsDestinyDerivedItemDefinition</code>.
     * This is a reference to, and summary data for, a specific item that you can get as a result of Using or Acquiring some other Item (For example, this could be summary information for an Emote that you can get by opening an an Eververse Box) See DestinyDerivedItemCategoryDefinition for more information.
     * @alias module:model/DestinyDefinitionsItemsDestinyDerivedItemDefinition
     */
    constructor() { 
        
        DestinyDefinitionsItemsDestinyDerivedItemDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsItemsDestinyDerivedItemDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsItemsDestinyDerivedItemDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsItemsDestinyDerivedItemDefinition} The populated <code>DestinyDefinitionsItemsDestinyDerivedItemDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsItemsDestinyDerivedItemDefinition();

            if (data.hasOwnProperty('iconPath')) {
                obj['iconPath'] = ApiClient.convertToType(data['iconPath'], 'String');
            }
            if (data.hasOwnProperty('itemDescription')) {
                obj['itemDescription'] = ApiClient.convertToType(data['itemDescription'], 'String');
            }
            if (data.hasOwnProperty('itemDetail')) {
                obj['itemDetail'] = ApiClient.convertToType(data['itemDetail'], 'String');
            }
            if (data.hasOwnProperty('itemHash')) {
                obj['itemHash'] = ApiClient.convertToType(data['itemHash'], 'Number');
            }
            if (data.hasOwnProperty('itemName')) {
                obj['itemName'] = ApiClient.convertToType(data['itemName'], 'String');
            }
            if (data.hasOwnProperty('vendorItemIndex')) {
                obj['vendorItemIndex'] = ApiClient.convertToType(data['vendorItemIndex'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsItemsDestinyDerivedItemDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsItemsDestinyDerivedItemDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['iconPath'] && !(typeof data['iconPath'] === 'string' || data['iconPath'] instanceof String)) {
            throw new Error("Expected the field `iconPath` to be a primitive type in the JSON string but got " + data['iconPath']);
        }
        // ensure the json data is a string
        if (data['itemDescription'] && !(typeof data['itemDescription'] === 'string' || data['itemDescription'] instanceof String)) {
            throw new Error("Expected the field `itemDescription` to be a primitive type in the JSON string but got " + data['itemDescription']);
        }
        // ensure the json data is a string
        if (data['itemDetail'] && !(typeof data['itemDetail'] === 'string' || data['itemDetail'] instanceof String)) {
            throw new Error("Expected the field `itemDetail` to be a primitive type in the JSON string but got " + data['itemDetail']);
        }
        // ensure the json data is a string
        if (data['itemName'] && !(typeof data['itemName'] === 'string' || data['itemName'] instanceof String)) {
            throw new Error("Expected the field `itemName` to be a primitive type in the JSON string but got " + data['itemName']);
        }

        return true;
    }


}



/**
 * An icon for the item.
 * @member {String} iconPath
 */
DestinyDefinitionsItemsDestinyDerivedItemDefinition.prototype['iconPath'] = undefined;

/**
 * A brief description of the item.
 * @member {String} itemDescription
 */
DestinyDefinitionsItemsDestinyDerivedItemDefinition.prototype['itemDescription'] = undefined;

/**
 * Additional details about the derived item, in addition to the description.
 * @member {String} itemDetail
 */
DestinyDefinitionsItemsDestinyDerivedItemDefinition.prototype['itemDetail'] = undefined;

/**
 * The hash for the DestinyInventoryItemDefinition of this derived item, if there is one. Sometimes we are given this information as a manual override, in which case there won't be an actual DestinyInventoryItemDefinition for what we display, but you can still show the strings from this object itself.
 * @member {Number} itemHash
 */
DestinyDefinitionsItemsDestinyDerivedItemDefinition.prototype['itemHash'] = undefined;

/**
 * The name of the derived item.
 * @member {String} itemName
 */
DestinyDefinitionsItemsDestinyDerivedItemDefinition.prototype['itemName'] = undefined;

/**
 * If the item was derived from a \"Preview Vendor\", this will be an index into the DestinyVendorDefinition's itemList property. Otherwise, -1.
 * @member {Number} vendorItemIndex
 */
DestinyDefinitionsItemsDestinyDerivedItemDefinition.prototype['vendorItemIndex'] = undefined;






export default DestinyDefinitionsItemsDestinyDerivedItemDefinition;

