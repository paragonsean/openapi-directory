/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserUserMembership model module.
 * @module model/UserUserMembership
 * @version 2.18.0
 */
class UserUserMembership {
    /**
     * Constructs a new <code>UserUserMembership</code>.
     * Very basic info about a user as returned by the Account server.
     * @alias module:model/UserUserMembership
     */
    constructor() { 
        
        UserUserMembership.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserUserMembership</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserUserMembership} obj Optional instance to populate.
     * @return {module:model/UserUserMembership} The populated <code>UserUserMembership</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserUserMembership();

            if (data.hasOwnProperty('bungieGlobalDisplayName')) {
                obj['bungieGlobalDisplayName'] = ApiClient.convertToType(data['bungieGlobalDisplayName'], 'String');
            }
            if (data.hasOwnProperty('bungieGlobalDisplayNameCode')) {
                obj['bungieGlobalDisplayNameCode'] = ApiClient.convertToType(data['bungieGlobalDisplayNameCode'], 'Number');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('membershipId')) {
                obj['membershipId'] = ApiClient.convertToType(data['membershipId'], 'Number');
            }
            if (data.hasOwnProperty('membershipType')) {
                obj['membershipType'] = ApiClient.convertToType(data['membershipType'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserUserMembership</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserUserMembership</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bungieGlobalDisplayName'] && !(typeof data['bungieGlobalDisplayName'] === 'string' || data['bungieGlobalDisplayName'] instanceof String)) {
            throw new Error("Expected the field `bungieGlobalDisplayName` to be a primitive type in the JSON string but got " + data['bungieGlobalDisplayName']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }

        return true;
    }


}



/**
 * The bungie global display name, if set.
 * @member {String} bungieGlobalDisplayName
 */
UserUserMembership.prototype['bungieGlobalDisplayName'] = undefined;

/**
 * The bungie global display name code, if set.
 * @member {Number} bungieGlobalDisplayNameCode
 */
UserUserMembership.prototype['bungieGlobalDisplayNameCode'] = undefined;

/**
 * Display Name the player has chosen for themselves. The display name is optional when the data type is used as input to a platform API.
 * @member {String} displayName
 */
UserUserMembership.prototype['displayName'] = undefined;

/**
 * Membership ID as they user is known in the Accounts service
 * @member {Number} membershipId
 */
UserUserMembership.prototype['membershipId'] = undefined;

/**
 * Type of the membership. Not necessarily the native type.
 * @member {Number} membershipType
 */
UserUserMembership.prototype['membershipType'] = undefined;






export default UserUserMembership;

