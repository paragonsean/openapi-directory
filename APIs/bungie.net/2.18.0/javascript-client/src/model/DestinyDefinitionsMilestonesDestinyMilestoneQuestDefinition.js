/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition from './DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition';
import DestinyDefinitionsMilestonesDestinyMilestoneActivityDefinition from './DestinyDefinitionsMilestonesDestinyMilestoneActivityDefinition';
import DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition from './DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition';

/**
 * The DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition model module.
 * @module model/DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition</code>.
     * Any data we need to figure out whether this Quest Item is the currently active one for the conceptual Milestone. Even just typing this description, I already regret it.
     * @alias module:model/DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition
     */
    constructor() { 
        
        DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition} The populated <code>DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition();

            if (data.hasOwnProperty('activities')) {
                obj['activities'] = ApiClient.convertToType(data['activities'], {'String': DestinyDefinitionsMilestonesDestinyMilestoneActivityDefinition});
            }
            if (data.hasOwnProperty('destinationHash')) {
                obj['destinationHash'] = ApiClient.convertToType(data['destinationHash'], 'Number');
            }
            if (data.hasOwnProperty('displayProperties')) {
                obj['displayProperties'] = ApiClient.convertToType(data['displayProperties'], DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition);
            }
            if (data.hasOwnProperty('overrideImage')) {
                obj['overrideImage'] = ApiClient.convertToType(data['overrideImage'], 'String');
            }
            if (data.hasOwnProperty('questItemHash')) {
                obj['questItemHash'] = ApiClient.convertToType(data['questItemHash'], 'Number');
            }
            if (data.hasOwnProperty('questRewards')) {
                obj['questRewards'] = ApiClient.convertToType(data['questRewards'], DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `displayProperties`
        if (data['displayProperties']) { // data not null
          DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJSON(data['displayProperties']);
        }
        // ensure the json data is a string
        if (data['overrideImage'] && !(typeof data['overrideImage'] === 'string' || data['overrideImage'] instanceof String)) {
            throw new Error("Expected the field `overrideImage` to be a primitive type in the JSON string but got " + data['overrideImage']);
        }
        // validate the optional field `questRewards`
        if (data['questRewards']) { // data not null
          DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition.validateJSON(data['questRewards']);
        }

        return true;
    }


}



/**
 * The full set of all possible \"conceptual activities\" that are related to this Milestone. Tiers or alternative modes of play within these conceptual activities will be defined as sub-entities. Keyed by the Conceptual Activity Hash. Use the key to look up DestinyActivityDefinition.
 * @member {Object.<String, module:model/DestinyDefinitionsMilestonesDestinyMilestoneActivityDefinition>} activities
 */
DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.prototype['activities'] = undefined;

/**
 * Sometimes, a Milestone's quest is related to an entire Destination rather than a specific activity. In that situation, this will be the hash of that Destination. Hotspots are currently the only Milestones that expose this data, but that does not preclude this data from being returned for other Milestones in the future.
 * @member {Number} destinationHash
 */
DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.prototype['destinationHash'] = undefined;

/**
 * The individual quests may have different definitions from the overall milestone: if there's a specific active quest, use these displayProperties instead of that of the overall DestinyMilestoneDefinition.
 * @member {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} displayProperties
 */
DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.prototype['displayProperties'] = undefined;

/**
 * If populated, this image can be shown instead of the generic milestone's image when this quest is live, or it can be used to show a background image for the quest itself that differs from that of the Activity or the Milestone.
 * @member {String} overrideImage
 */
DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.prototype['overrideImage'] = undefined;

/**
 * The item representing this Milestone quest. Use this hash to look up the DestinyInventoryItemDefinition for the quest to find its steps and human readable data.
 * @member {Number} questItemHash
 */
DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.prototype['questItemHash'] = undefined;

/**
 * The rewards you will get for completing this quest, as best as we could extract them from our data. Sometimes, it'll be a decent amount of data. Sometimes, it's going to be sucky. Sorry.
 * @member {module:model/DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition} questRewards
 */
DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.prototype['questRewards'] = undefined;






export default DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition;

