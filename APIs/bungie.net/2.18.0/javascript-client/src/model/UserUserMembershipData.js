/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GroupsV2GroupUserInfoCard from './GroupsV2GroupUserInfoCard';
import UserGeneralUser from './UserGeneralUser';

/**
 * The UserUserMembershipData model module.
 * @module model/UserUserMembershipData
 * @version 2.18.0
 */
class UserUserMembershipData {
    /**
     * Constructs a new <code>UserUserMembershipData</code>.
     * @alias module:model/UserUserMembershipData
     */
    constructor() { 
        
        UserUserMembershipData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserUserMembershipData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserUserMembershipData} obj Optional instance to populate.
     * @return {module:model/UserUserMembershipData} The populated <code>UserUserMembershipData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserUserMembershipData();

            if (data.hasOwnProperty('bungieNetUser')) {
                obj['bungieNetUser'] = UserGeneralUser.constructFromObject(data['bungieNetUser']);
            }
            if (data.hasOwnProperty('destinyMemberships')) {
                obj['destinyMemberships'] = ApiClient.convertToType(data['destinyMemberships'], [GroupsV2GroupUserInfoCard]);
            }
            if (data.hasOwnProperty('primaryMembershipId')) {
                obj['primaryMembershipId'] = ApiClient.convertToType(data['primaryMembershipId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserUserMembershipData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserUserMembershipData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bungieNetUser`
        if (data['bungieNetUser']) { // data not null
          UserGeneralUser.validateJSON(data['bungieNetUser']);
        }
        if (data['destinyMemberships']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinyMemberships'])) {
                throw new Error("Expected the field `destinyMemberships` to be an array in the JSON data but got " + data['destinyMemberships']);
            }
            // validate the optional field `destinyMemberships` (array)
            for (const item of data['destinyMemberships']) {
                GroupsV2GroupUserInfoCard.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/UserGeneralUser} bungieNetUser
 */
UserUserMembershipData.prototype['bungieNetUser'] = undefined;

/**
 * this allows you to see destiny memberships that are visible and linked to this account (regardless of whether or not they have characters on the world server)
 * @member {Array.<module:model/GroupsV2GroupUserInfoCard>} destinyMemberships
 */
UserUserMembershipData.prototype['destinyMemberships'] = undefined;

/**
 * If this property is populated, it will have the membership ID of the account considered to be \"primary\" in this user's cross save relationship.   If null, this user has no cross save relationship, nor primary account.
 * @member {Number} primaryMembershipId
 */
UserUserMembershipData.prototype['primaryMembershipId'] = undefined;






export default UserUserMembershipData;

