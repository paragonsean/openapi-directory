/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupsV2GroupQuery model module.
 * @module model/GroupsV2GroupQuery
 * @version 2.18.0
 */
class GroupsV2GroupQuery {
    /**
     * Constructs a new <code>GroupsV2GroupQuery</code>.
     * NOTE: GroupQuery, as of Destiny 2, has essentially two totally different and incompatible \&quot;modes\&quot;.  If you are querying for a group, you can pass any of the properties below.  If you are querying for a Clan, you MUST NOT pass any of the following properties (they must be null or undefined in your request, not just empty string/default values):  - groupMemberCountFilter - localeFilter - tagText  If you pass these, you will get a useless InvalidParameters error.
     * @alias module:model/GroupsV2GroupQuery
     */
    constructor() { 
        
        GroupsV2GroupQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupsV2GroupQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupsV2GroupQuery} obj Optional instance to populate.
     * @return {module:model/GroupsV2GroupQuery} The populated <code>GroupsV2GroupQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupsV2GroupQuery();

            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Number');
            }
            if (data.hasOwnProperty('currentPage')) {
                obj['currentPage'] = ApiClient.convertToType(data['currentPage'], 'Number');
            }
            if (data.hasOwnProperty('groupMemberCountFilter')) {
                obj['groupMemberCountFilter'] = ApiClient.convertToType(data['groupMemberCountFilter'], 'Number');
            }
            if (data.hasOwnProperty('groupType')) {
                obj['groupType'] = ApiClient.convertToType(data['groupType'], 'Number');
            }
            if (data.hasOwnProperty('itemsPerPage')) {
                obj['itemsPerPage'] = ApiClient.convertToType(data['itemsPerPage'], 'Number');
            }
            if (data.hasOwnProperty('localeFilter')) {
                obj['localeFilter'] = ApiClient.convertToType(data['localeFilter'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('requestContinuationToken')) {
                obj['requestContinuationToken'] = ApiClient.convertToType(data['requestContinuationToken'], 'String');
            }
            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ApiClient.convertToType(data['sortBy'], 'Number');
            }
            if (data.hasOwnProperty('tagText')) {
                obj['tagText'] = ApiClient.convertToType(data['tagText'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupsV2GroupQuery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupsV2GroupQuery</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['localeFilter'] && !(typeof data['localeFilter'] === 'string' || data['localeFilter'] instanceof String)) {
            throw new Error("Expected the field `localeFilter` to be a primitive type in the JSON string but got " + data['localeFilter']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['requestContinuationToken'] && !(typeof data['requestContinuationToken'] === 'string' || data['requestContinuationToken'] instanceof String)) {
            throw new Error("Expected the field `requestContinuationToken` to be a primitive type in the JSON string but got " + data['requestContinuationToken']);
        }
        // ensure the json data is a string
        if (data['tagText'] && !(typeof data['tagText'] === 'string' || data['tagText'] instanceof String)) {
            throw new Error("Expected the field `tagText` to be a primitive type in the JSON string but got " + data['tagText']);
        }

        return true;
    }


}



/**
 * @member {Number} creationDate
 */
GroupsV2GroupQuery.prototype['creationDate'] = undefined;

/**
 * @member {Number} currentPage
 */
GroupsV2GroupQuery.prototype['currentPage'] = undefined;

/**
 * @member {module:model/GroupsV2GroupQuery.GroupMemberCountFilterEnum} groupMemberCountFilter
 */
GroupsV2GroupQuery.prototype['groupMemberCountFilter'] = undefined;

/**
 * @member {Number} groupType
 */
GroupsV2GroupQuery.prototype['groupType'] = undefined;

/**
 * @member {Number} itemsPerPage
 */
GroupsV2GroupQuery.prototype['itemsPerPage'] = undefined;

/**
 * @member {String} localeFilter
 */
GroupsV2GroupQuery.prototype['localeFilter'] = undefined;

/**
 * @member {String} name
 */
GroupsV2GroupQuery.prototype['name'] = undefined;

/**
 * @member {String} requestContinuationToken
 */
GroupsV2GroupQuery.prototype['requestContinuationToken'] = undefined;

/**
 * @member {Number} sortBy
 */
GroupsV2GroupQuery.prototype['sortBy'] = undefined;

/**
 * @member {String} tagText
 */
GroupsV2GroupQuery.prototype['tagText'] = undefined;





/**
 * Allowed values for the <code>groupMemberCountFilter</code> property.
 * @enum {Number}
 * @readonly
 */
GroupsV2GroupQuery['GroupMemberCountFilterEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3
};



export default GroupsV2GroupQuery;

