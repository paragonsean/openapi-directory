/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyNodeActivationRequirement model module.
 * @module model/DestinyDefinitionsDestinyNodeActivationRequirement
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyNodeActivationRequirement {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyNodeActivationRequirement</code>.
     * Talent nodes have requirements that must be met before they can be activated.  This describes the material costs, the Level of the Talent Grid&#39;s progression required, and other conditional information that limits whether a talent node can be activated.
     * @alias module:model/DestinyDefinitionsDestinyNodeActivationRequirement
     */
    constructor() { 
        
        DestinyDefinitionsDestinyNodeActivationRequirement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyNodeActivationRequirement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyNodeActivationRequirement} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyNodeActivationRequirement} The populated <code>DestinyDefinitionsDestinyNodeActivationRequirement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyNodeActivationRequirement();

            if (data.hasOwnProperty('gridLevel')) {
                obj['gridLevel'] = ApiClient.convertToType(data['gridLevel'], 'Number');
            }
            if (data.hasOwnProperty('materialRequirementHashes')) {
                obj['materialRequirementHashes'] = ApiClient.convertToType(data['materialRequirementHashes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyNodeActivationRequirement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyNodeActivationRequirement</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['materialRequirementHashes'])) {
            throw new Error("Expected the field `materialRequirementHashes` to be an array in the JSON data but got " + data['materialRequirementHashes']);
        }

        return true;
    }


}



/**
 * The Progression level on the Talent Grid required to activate this node.  See DestinyTalentGridDefinition.progressionHash for the related Progression, and read DestinyProgressionDefinition's documentation to learn more about Progressions.
 * @member {Number} gridLevel
 */
DestinyDefinitionsDestinyNodeActivationRequirement.prototype['gridLevel'] = undefined;

/**
 * The list of hash identifiers for material requirement sets: materials that are required for the node to be activated. See DestinyMaterialRequirementSetDefinition for more information about material requirements.  In this case, only a single DestinyMaterialRequirementSetDefinition will be chosen from this list, and we won't know which one will be chosen until an instance of the item is created.
 * @member {Array.<Number>} materialRequirementHashes
 */
DestinyDefinitionsDestinyNodeActivationRequirement.prototype['materialRequirementHashes'] = undefined;






export default DestinyDefinitionsDestinyNodeActivationRequirement;

