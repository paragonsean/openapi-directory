/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsDestinyItemSetBlockEntryDefinition from './DestinyDefinitionsDestinyItemSetBlockEntryDefinition';

/**
 * The DestinyDefinitionsDestinyItemSetBlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyItemSetBlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemSetBlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemSetBlockDefinition</code>.
     * Primarily for Quests, this is the definition of properties related to the item if it is a quest and its various quest steps.
     * @alias module:model/DestinyDefinitionsDestinyItemSetBlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemSetBlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemSetBlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemSetBlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemSetBlockDefinition} The populated <code>DestinyDefinitionsDestinyItemSetBlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemSetBlockDefinition();

            if (data.hasOwnProperty('itemList')) {
                obj['itemList'] = ApiClient.convertToType(data['itemList'], [DestinyDefinitionsDestinyItemSetBlockEntryDefinition]);
            }
            if (data.hasOwnProperty('questLineDescription')) {
                obj['questLineDescription'] = ApiClient.convertToType(data['questLineDescription'], 'String');
            }
            if (data.hasOwnProperty('questLineName')) {
                obj['questLineName'] = ApiClient.convertToType(data['questLineName'], 'String');
            }
            if (data.hasOwnProperty('questStepSummary')) {
                obj['questStepSummary'] = ApiClient.convertToType(data['questStepSummary'], 'String');
            }
            if (data.hasOwnProperty('requireOrderedSetItemAdd')) {
                obj['requireOrderedSetItemAdd'] = ApiClient.convertToType(data['requireOrderedSetItemAdd'], 'Boolean');
            }
            if (data.hasOwnProperty('setIsFeatured')) {
                obj['setIsFeatured'] = ApiClient.convertToType(data['setIsFeatured'], 'Boolean');
            }
            if (data.hasOwnProperty('setType')) {
                obj['setType'] = ApiClient.convertToType(data['setType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemSetBlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemSetBlockDefinition</code>.
     */
    static validateJSON(data) {
        if (data['itemList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['itemList'])) {
                throw new Error("Expected the field `itemList` to be an array in the JSON data but got " + data['itemList']);
            }
            // validate the optional field `itemList` (array)
            for (const item of data['itemList']) {
                DestinyDefinitionsDestinyItemSetBlockEntryDefinition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['questLineDescription'] && !(typeof data['questLineDescription'] === 'string' || data['questLineDescription'] instanceof String)) {
            throw new Error("Expected the field `questLineDescription` to be a primitive type in the JSON string but got " + data['questLineDescription']);
        }
        // ensure the json data is a string
        if (data['questLineName'] && !(typeof data['questLineName'] === 'string' || data['questLineName'] instanceof String)) {
            throw new Error("Expected the field `questLineName` to be a primitive type in the JSON string but got " + data['questLineName']);
        }
        // ensure the json data is a string
        if (data['questStepSummary'] && !(typeof data['questStepSummary'] === 'string' || data['questStepSummary'] instanceof String)) {
            throw new Error("Expected the field `questStepSummary` to be a primitive type in the JSON string but got " + data['questStepSummary']);
        }
        // ensure the json data is a string
        if (data['setType'] && !(typeof data['setType'] === 'string' || data['setType'] instanceof String)) {
            throw new Error("Expected the field `setType` to be a primitive type in the JSON string but got " + data['setType']);
        }

        return true;
    }


}



/**
 * A collection of hashes of set items, for items such as Quest Metadata items that possess this data.
 * @member {Array.<module:model/DestinyDefinitionsDestinyItemSetBlockEntryDefinition>} itemList
 */
DestinyDefinitionsDestinyItemSetBlockDefinition.prototype['itemList'] = undefined;

/**
 * The description of the quest line that this quest step is a part of.
 * @member {String} questLineDescription
 */
DestinyDefinitionsDestinyItemSetBlockDefinition.prototype['questLineDescription'] = undefined;

/**
 * The name of the quest line that this quest step is a part of.
 * @member {String} questLineName
 */
DestinyDefinitionsDestinyItemSetBlockDefinition.prototype['questLineName'] = undefined;

/**
 * An additional summary of this step in the quest line.
 * @member {String} questStepSummary
 */
DestinyDefinitionsDestinyItemSetBlockDefinition.prototype['questStepSummary'] = undefined;

/**
 * If true, items in the set can only be added in increasing order, and adding an item will remove any previous item. For Quests, this is by necessity true. Only one quest step is present at a time, and previous steps are removed as you advance in the quest.
 * @member {Boolean} requireOrderedSetItemAdd
 */
DestinyDefinitionsDestinyItemSetBlockDefinition.prototype['requireOrderedSetItemAdd'] = undefined;

/**
 * If true, the UI should treat this quest as \"featured\"
 * @member {Boolean} setIsFeatured
 */
DestinyDefinitionsDestinyItemSetBlockDefinition.prototype['setIsFeatured'] = undefined;

/**
 * A string identifier we can use to attempt to identify the category of the Quest.
 * @member {String} setType
 */
DestinyDefinitionsDestinyItemSetBlockDefinition.prototype['setType'] = undefined;






export default DestinyDefinitionsDestinyItemSetBlockDefinition;

