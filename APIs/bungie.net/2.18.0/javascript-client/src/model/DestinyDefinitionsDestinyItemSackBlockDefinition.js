/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyItemSackBlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyItemSackBlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemSackBlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemSackBlockDefinition</code>.
     * Some items are \&quot;sacks\&quot; - they can be \&quot;opened\&quot; to produce other items. This is information related to its sack status, mostly UI strings. Engrams are an example of items that are considered to be \&quot;Sacks\&quot;.
     * @alias module:model/DestinyDefinitionsDestinyItemSackBlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemSackBlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemSackBlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemSackBlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemSackBlockDefinition} The populated <code>DestinyDefinitionsDestinyItemSackBlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemSackBlockDefinition();

            if (data.hasOwnProperty('detailAction')) {
                obj['detailAction'] = ApiClient.convertToType(data['detailAction'], 'String');
            }
            if (data.hasOwnProperty('openAction')) {
                obj['openAction'] = ApiClient.convertToType(data['openAction'], 'String');
            }
            if (data.hasOwnProperty('openOnAcquire')) {
                obj['openOnAcquire'] = ApiClient.convertToType(data['openOnAcquire'], 'Boolean');
            }
            if (data.hasOwnProperty('selectItemCount')) {
                obj['selectItemCount'] = ApiClient.convertToType(data['selectItemCount'], 'Number');
            }
            if (data.hasOwnProperty('vendorSackType')) {
                obj['vendorSackType'] = ApiClient.convertToType(data['vendorSackType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemSackBlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemSackBlockDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['detailAction'] && !(typeof data['detailAction'] === 'string' || data['detailAction'] instanceof String)) {
            throw new Error("Expected the field `detailAction` to be a primitive type in the JSON string but got " + data['detailAction']);
        }
        // ensure the json data is a string
        if (data['openAction'] && !(typeof data['openAction'] === 'string' || data['openAction'] instanceof String)) {
            throw new Error("Expected the field `openAction` to be a primitive type in the JSON string but got " + data['openAction']);
        }
        // ensure the json data is a string
        if (data['vendorSackType'] && !(typeof data['vendorSackType'] === 'string' || data['vendorSackType'] instanceof String)) {
            throw new Error("Expected the field `vendorSackType` to be a primitive type in the JSON string but got " + data['vendorSackType']);
        }

        return true;
    }


}



/**
 * A description of what will happen when you open the sack. As far as I can tell, this is blank currently. Unknown whether it will eventually be populated with useful info.
 * @member {String} detailAction
 */
DestinyDefinitionsDestinyItemSackBlockDefinition.prototype['detailAction'] = undefined;

/**
 * The localized name of the action being performed when you open the sack.
 * @member {String} openAction
 */
DestinyDefinitionsDestinyItemSackBlockDefinition.prototype['openAction'] = undefined;

/**
 * @member {Boolean} openOnAcquire
 */
DestinyDefinitionsDestinyItemSackBlockDefinition.prototype['openOnAcquire'] = undefined;

/**
 * @member {Number} selectItemCount
 */
DestinyDefinitionsDestinyItemSackBlockDefinition.prototype['selectItemCount'] = undefined;

/**
 * @member {String} vendorSackType
 */
DestinyDefinitionsDestinyItemSackBlockDefinition.prototype['vendorSackType'] = undefined;






export default DestinyDefinitionsDestinyItemSackBlockDefinition;

