/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserUserInfoCard from './UserUserInfoCard';

/**
 * The DestinyHistoricalStatsDestinyPlayer model module.
 * @module model/DestinyHistoricalStatsDestinyPlayer
 * @version 2.18.0
 */
class DestinyHistoricalStatsDestinyPlayer {
    /**
     * Constructs a new <code>DestinyHistoricalStatsDestinyPlayer</code>.
     * @alias module:model/DestinyHistoricalStatsDestinyPlayer
     */
    constructor() { 
        
        DestinyHistoricalStatsDestinyPlayer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyHistoricalStatsDestinyPlayer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyHistoricalStatsDestinyPlayer} obj Optional instance to populate.
     * @return {module:model/DestinyHistoricalStatsDestinyPlayer} The populated <code>DestinyHistoricalStatsDestinyPlayer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyHistoricalStatsDestinyPlayer();

            if (data.hasOwnProperty('bungieNetUserInfo')) {
                obj['bungieNetUserInfo'] = ApiClient.convertToType(data['bungieNetUserInfo'], UserUserInfoCard);
            }
            if (data.hasOwnProperty('characterClass')) {
                obj['characterClass'] = ApiClient.convertToType(data['characterClass'], 'String');
            }
            if (data.hasOwnProperty('characterLevel')) {
                obj['characterLevel'] = ApiClient.convertToType(data['characterLevel'], 'Number');
            }
            if (data.hasOwnProperty('clanName')) {
                obj['clanName'] = ApiClient.convertToType(data['clanName'], 'String');
            }
            if (data.hasOwnProperty('clanTag')) {
                obj['clanTag'] = ApiClient.convertToType(data['clanTag'], 'String');
            }
            if (data.hasOwnProperty('classHash')) {
                obj['classHash'] = ApiClient.convertToType(data['classHash'], 'Number');
            }
            if (data.hasOwnProperty('destinyUserInfo')) {
                obj['destinyUserInfo'] = ApiClient.convertToType(data['destinyUserInfo'], UserUserInfoCard);
            }
            if (data.hasOwnProperty('emblemHash')) {
                obj['emblemHash'] = ApiClient.convertToType(data['emblemHash'], 'Number');
            }
            if (data.hasOwnProperty('genderHash')) {
                obj['genderHash'] = ApiClient.convertToType(data['genderHash'], 'Number');
            }
            if (data.hasOwnProperty('lightLevel')) {
                obj['lightLevel'] = ApiClient.convertToType(data['lightLevel'], 'Number');
            }
            if (data.hasOwnProperty('raceHash')) {
                obj['raceHash'] = ApiClient.convertToType(data['raceHash'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyHistoricalStatsDestinyPlayer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyHistoricalStatsDestinyPlayer</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bungieNetUserInfo`
        if (data['bungieNetUserInfo']) { // data not null
          UserUserInfoCard.validateJSON(data['bungieNetUserInfo']);
        }
        // ensure the json data is a string
        if (data['characterClass'] && !(typeof data['characterClass'] === 'string' || data['characterClass'] instanceof String)) {
            throw new Error("Expected the field `characterClass` to be a primitive type in the JSON string but got " + data['characterClass']);
        }
        // ensure the json data is a string
        if (data['clanName'] && !(typeof data['clanName'] === 'string' || data['clanName'] instanceof String)) {
            throw new Error("Expected the field `clanName` to be a primitive type in the JSON string but got " + data['clanName']);
        }
        // ensure the json data is a string
        if (data['clanTag'] && !(typeof data['clanTag'] === 'string' || data['clanTag'] instanceof String)) {
            throw new Error("Expected the field `clanTag` to be a primitive type in the JSON string but got " + data['clanTag']);
        }
        // validate the optional field `destinyUserInfo`
        if (data['destinyUserInfo']) { // data not null
          UserUserInfoCard.validateJSON(data['destinyUserInfo']);
        }

        return true;
    }


}



/**
 * Details about the player as they are known on BungieNet. This will be undefined if the player has marked their credential private, or does not have a BungieNet account.
 * @member {module:model/UserUserInfoCard} bungieNetUserInfo
 */
DestinyHistoricalStatsDestinyPlayer.prototype['bungieNetUserInfo'] = undefined;

/**
 * Class of the character if applicable and available.
 * @member {String} characterClass
 */
DestinyHistoricalStatsDestinyPlayer.prototype['characterClass'] = undefined;

/**
 * Level of the character if available. Zero if it is not available.
 * @member {Number} characterLevel
 */
DestinyHistoricalStatsDestinyPlayer.prototype['characterLevel'] = undefined;

/**
 * Current clan name for the player. This value may be null or an empty string if the user does not have a clan.
 * @member {String} clanName
 */
DestinyHistoricalStatsDestinyPlayer.prototype['clanName'] = undefined;

/**
 * Current clan tag for the player. This value may be null or an empty string if the user does not have a clan.
 * @member {String} clanTag
 */
DestinyHistoricalStatsDestinyPlayer.prototype['clanTag'] = undefined;

/**
 * @member {Number} classHash
 */
DestinyHistoricalStatsDestinyPlayer.prototype['classHash'] = undefined;

/**
 * Details about the player as they are known in game (platform display name, Destiny emblem)
 * @member {module:model/UserUserInfoCard} destinyUserInfo
 */
DestinyHistoricalStatsDestinyPlayer.prototype['destinyUserInfo'] = undefined;

/**
 * If we know the emblem's hash, this can be used to look up the player's emblem at the time of a match when receiving PGCR data, or otherwise their currently equipped emblem (if we are able to obtain it).
 * @member {Number} emblemHash
 */
DestinyHistoricalStatsDestinyPlayer.prototype['emblemHash'] = undefined;

/**
 * @member {Number} genderHash
 */
DestinyHistoricalStatsDestinyPlayer.prototype['genderHash'] = undefined;

/**
 * Light Level of the character if available. Zero if it is not available.
 * @member {Number} lightLevel
 */
DestinyHistoricalStatsDestinyPlayer.prototype['lightLevel'] = undefined;

/**
 * @member {Number} raceHash
 */
DestinyHistoricalStatsDestinyPlayer.prototype['raceHash'] = undefined;






export default DestinyHistoricalStatsDestinyPlayer;

