/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyQuestsDestinyObjectiveProgress from './DestinyQuestsDestinyObjectiveProgress';

/**
 * The DestinyComponentsPresentationDestinyPresentationNodeComponent model module.
 * @module model/DestinyComponentsPresentationDestinyPresentationNodeComponent
 * @version 2.18.0
 */
class DestinyComponentsPresentationDestinyPresentationNodeComponent {
    /**
     * Constructs a new <code>DestinyComponentsPresentationDestinyPresentationNodeComponent</code>.
     * @alias module:model/DestinyComponentsPresentationDestinyPresentationNodeComponent
     */
    constructor() { 
        
        DestinyComponentsPresentationDestinyPresentationNodeComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyComponentsPresentationDestinyPresentationNodeComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyComponentsPresentationDestinyPresentationNodeComponent} obj Optional instance to populate.
     * @return {module:model/DestinyComponentsPresentationDestinyPresentationNodeComponent} The populated <code>DestinyComponentsPresentationDestinyPresentationNodeComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyComponentsPresentationDestinyPresentationNodeComponent();

            if (data.hasOwnProperty('completionValue')) {
                obj['completionValue'] = ApiClient.convertToType(data['completionValue'], 'Number');
            }
            if (data.hasOwnProperty('objective')) {
                obj['objective'] = ApiClient.convertToType(data['objective'], DestinyQuestsDestinyObjectiveProgress);
            }
            if (data.hasOwnProperty('progressValue')) {
                obj['progressValue'] = ApiClient.convertToType(data['progressValue'], 'Number');
            }
            if (data.hasOwnProperty('recordCategoryScore')) {
                obj['recordCategoryScore'] = ApiClient.convertToType(data['recordCategoryScore'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyComponentsPresentationDestinyPresentationNodeComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyComponentsPresentationDestinyPresentationNodeComponent</code>.
     */
    static validateJSON(data) {
        // validate the optional field `objective`
        if (data['objective']) { // data not null
          DestinyQuestsDestinyObjectiveProgress.validateJSON(data['objective']);
        }

        return true;
    }


}



/**
 * The value at which the presentation node is considered to be completed.
 * @member {Number} completionValue
 */
DestinyComponentsPresentationDestinyPresentationNodeComponent.prototype['completionValue'] = undefined;

/**
 * An optional property: presentation nodes MAY have objectives, which can be used to infer more human readable data about the progress. However, progressValue and completionValue ought to be considered the canonical values for progress on Progression Nodes.
 * @member {module:model/DestinyQuestsDestinyObjectiveProgress} objective
 */
DestinyComponentsPresentationDestinyPresentationNodeComponent.prototype['objective'] = undefined;

/**
 * How much of the presentation node is considered to be completed so far by the given character/profile.
 * @member {Number} progressValue
 */
DestinyComponentsPresentationDestinyPresentationNodeComponent.prototype['progressValue'] = undefined;

/**
 * If available, this is the current score for the record category that this node represents.
 * @member {Number} recordCategoryScore
 */
DestinyComponentsPresentationDestinyPresentationNodeComponent.prototype['recordCategoryScore'] = undefined;

/**
 * @member {Number} state
 */
DestinyComponentsPresentationDestinyPresentationNodeComponent.prototype['state'] = undefined;






export default DestinyComponentsPresentationDestinyPresentationNodeComponent;

