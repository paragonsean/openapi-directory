/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyEntitiesItemsDestinyItemInstanceEnergy model module.
 * @module model/DestinyEntitiesItemsDestinyItemInstanceEnergy
 * @version 2.18.0
 */
class DestinyEntitiesItemsDestinyItemInstanceEnergy {
    /**
     * Constructs a new <code>DestinyEntitiesItemsDestinyItemInstanceEnergy</code>.
     * @alias module:model/DestinyEntitiesItemsDestinyItemInstanceEnergy
     */
    constructor() { 
        
        DestinyEntitiesItemsDestinyItemInstanceEnergy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyEntitiesItemsDestinyItemInstanceEnergy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyEntitiesItemsDestinyItemInstanceEnergy} obj Optional instance to populate.
     * @return {module:model/DestinyEntitiesItemsDestinyItemInstanceEnergy} The populated <code>DestinyEntitiesItemsDestinyItemInstanceEnergy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyEntitiesItemsDestinyItemInstanceEnergy();

            if (data.hasOwnProperty('energyCapacity')) {
                obj['energyCapacity'] = ApiClient.convertToType(data['energyCapacity'], 'Number');
            }
            if (data.hasOwnProperty('energyType')) {
                obj['energyType'] = ApiClient.convertToType(data['energyType'], 'Number');
            }
            if (data.hasOwnProperty('energyTypeHash')) {
                obj['energyTypeHash'] = ApiClient.convertToType(data['energyTypeHash'], 'Number');
            }
            if (data.hasOwnProperty('energyUnused')) {
                obj['energyUnused'] = ApiClient.convertToType(data['energyUnused'], 'Number');
            }
            if (data.hasOwnProperty('energyUsed')) {
                obj['energyUsed'] = ApiClient.convertToType(data['energyUsed'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyEntitiesItemsDestinyItemInstanceEnergy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyEntitiesItemsDestinyItemInstanceEnergy</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The total capacity of Energy that the item currently has, regardless of if it is currently being used.
 * @member {Number} energyCapacity
 */
DestinyEntitiesItemsDestinyItemInstanceEnergy.prototype['energyCapacity'] = undefined;

/**
 * This is the enum version of the Energy Type value, for convenience.
 * @member {Number} energyType
 */
DestinyEntitiesItemsDestinyItemInstanceEnergy.prototype['energyType'] = undefined;

/**
 * The type of energy for this item. Plugs that require Energy can only be inserted if they have the \"Any\" Energy Type or the matching energy type of this item. This is a reference to the DestinyEnergyTypeDefinition for the energy type, where you can find extended info about it.
 * @member {Number} energyTypeHash
 */
DestinyEntitiesItemsDestinyItemInstanceEnergy.prototype['energyTypeHash'] = undefined;

/**
 * The amount of energy still available for inserting new plugs.
 * @member {Number} energyUnused
 */
DestinyEntitiesItemsDestinyItemInstanceEnergy.prototype['energyUnused'] = undefined;

/**
 * The amount of Energy currently in use by inserted plugs.
 * @member {Number} energyUsed
 */
DestinyEntitiesItemsDestinyItemInstanceEnergy.prototype['energyUsed'] = undefined;






export default DestinyEntitiesItemsDestinyItemInstanceEnergy;

