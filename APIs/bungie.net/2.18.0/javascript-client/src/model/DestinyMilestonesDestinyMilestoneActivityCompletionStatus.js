/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyMilestonesDestinyMilestoneActivityPhase from './DestinyMilestonesDestinyMilestoneActivityPhase';

/**
 * The DestinyMilestonesDestinyMilestoneActivityCompletionStatus model module.
 * @module model/DestinyMilestonesDestinyMilestoneActivityCompletionStatus
 * @version 2.18.0
 */
class DestinyMilestonesDestinyMilestoneActivityCompletionStatus {
    /**
     * Constructs a new <code>DestinyMilestonesDestinyMilestoneActivityCompletionStatus</code>.
     * Represents this player&#39;s personal completion status for the Activity under a Milestone, if the activity has trackable completion and progress information. (most activities won&#39;t, or the concept won&#39;t apply. For instance, it makes sense to talk about a tier of a raid as being Completed or having progress, but it doesn&#39;t make sense to talk about a Crucible Playlist in those terms.
     * @alias module:model/DestinyMilestonesDestinyMilestoneActivityCompletionStatus
     */
    constructor() { 
        
        DestinyMilestonesDestinyMilestoneActivityCompletionStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyMilestonesDestinyMilestoneActivityCompletionStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyMilestonesDestinyMilestoneActivityCompletionStatus} obj Optional instance to populate.
     * @return {module:model/DestinyMilestonesDestinyMilestoneActivityCompletionStatus} The populated <code>DestinyMilestonesDestinyMilestoneActivityCompletionStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyMilestonesDestinyMilestoneActivityCompletionStatus();

            if (data.hasOwnProperty('completed')) {
                obj['completed'] = ApiClient.convertToType(data['completed'], 'Boolean');
            }
            if (data.hasOwnProperty('phases')) {
                obj['phases'] = ApiClient.convertToType(data['phases'], [DestinyMilestonesDestinyMilestoneActivityPhase]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyMilestonesDestinyMilestoneActivityCompletionStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyMilestonesDestinyMilestoneActivityCompletionStatus</code>.
     */
    static validateJSON(data) {
        if (data['phases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['phases'])) {
                throw new Error("Expected the field `phases` to be an array in the JSON data but got " + data['phases']);
            }
            // validate the optional field `phases` (array)
            for (const item of data['phases']) {
                DestinyMilestonesDestinyMilestoneActivityPhase.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * If the activity has been \"completed\", that information will be returned here.
 * @member {Boolean} completed
 */
DestinyMilestonesDestinyMilestoneActivityCompletionStatus.prototype['completed'] = undefined;

/**
 * If the Activity has discrete \"phases\" that we can track, that info will be here. Otherwise, this value will be NULL. Note that this is a list and not a dictionary: the order implies the ascending order of phases or progression in this activity.
 * @member {Array.<module:model/DestinyMilestonesDestinyMilestoneActivityPhase>} phases
 */
DestinyMilestonesDestinyMilestoneActivityCompletionStatus.prototype['phases'] = undefined;






export default DestinyMilestonesDestinyMilestoneActivityCompletionStatus;

