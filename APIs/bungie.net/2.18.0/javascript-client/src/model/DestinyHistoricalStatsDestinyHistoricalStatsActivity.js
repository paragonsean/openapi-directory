/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyHistoricalStatsDestinyHistoricalStatsActivity model module.
 * @module model/DestinyHistoricalStatsDestinyHistoricalStatsActivity
 * @version 2.18.0
 */
class DestinyHistoricalStatsDestinyHistoricalStatsActivity {
    /**
     * Constructs a new <code>DestinyHistoricalStatsDestinyHistoricalStatsActivity</code>.
     * Summary information about the activity that was played.
     * @alias module:model/DestinyHistoricalStatsDestinyHistoricalStatsActivity
     */
    constructor() { 
        
        DestinyHistoricalStatsDestinyHistoricalStatsActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyHistoricalStatsDestinyHistoricalStatsActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyHistoricalStatsDestinyHistoricalStatsActivity} obj Optional instance to populate.
     * @return {module:model/DestinyHistoricalStatsDestinyHistoricalStatsActivity} The populated <code>DestinyHistoricalStatsDestinyHistoricalStatsActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyHistoricalStatsDestinyHistoricalStatsActivity();

            if (data.hasOwnProperty('directorActivityHash')) {
                obj['directorActivityHash'] = ApiClient.convertToType(data['directorActivityHash'], 'Number');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'Number');
            }
            if (data.hasOwnProperty('isPrivate')) {
                obj['isPrivate'] = ApiClient.convertToType(data['isPrivate'], 'Boolean');
            }
            if (data.hasOwnProperty('membershipType')) {
                obj['membershipType'] = ApiClient.convertToType(data['membershipType'], 'Number');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'Number');
            }
            if (data.hasOwnProperty('modes')) {
                obj['modes'] = ApiClient.convertToType(data['modes'], ['Number']);
            }
            if (data.hasOwnProperty('referenceId')) {
                obj['referenceId'] = ApiClient.convertToType(data['referenceId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyHistoricalStatsDestinyHistoricalStatsActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyHistoricalStatsDestinyHistoricalStatsActivity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['modes'])) {
            throw new Error("Expected the field `modes` to be an array in the JSON data but got " + data['modes']);
        }

        return true;
    }


}



/**
 * The unique hash identifier of the DestinyActivityDefinition that was played.
 * @member {Number} directorActivityHash
 */
DestinyHistoricalStatsDestinyHistoricalStatsActivity.prototype['directorActivityHash'] = undefined;

/**
 * The unique identifier for this *specific* match that was played.  This value can be used to get additional data about this activity such as who else was playing via the GetPostGameCarnageReport endpoint.
 * @member {Number} instanceId
 */
DestinyHistoricalStatsDestinyHistoricalStatsActivity.prototype['instanceId'] = undefined;

/**
 * Whether or not the match was a private match.
 * @member {Boolean} isPrivate
 */
DestinyHistoricalStatsDestinyHistoricalStatsActivity.prototype['isPrivate'] = undefined;

/**
 * The Membership Type indicating the platform on which this match was played.
 * @member {Number} membershipType
 */
DestinyHistoricalStatsDestinyHistoricalStatsActivity.prototype['membershipType'] = undefined;

/**
 * Indicates the most specific game mode of the activity that we could find.
 * @member {Number} mode
 */
DestinyHistoricalStatsDestinyHistoricalStatsActivity.prototype['mode'] = undefined;

/**
 * The list of all Activity Modes to which this activity applies, including aggregates. This will let you see, for example, whether the activity was both Clash and part of the Trials of the Nine event.
 * @member {Array.<Number>} modes
 */
DestinyHistoricalStatsDestinyHistoricalStatsActivity.prototype['modes'] = undefined;

/**
 * The unique hash identifier of the DestinyActivityDefinition that was played. If I had this to do over, it'd be named activityHash. Too late now.
 * @member {Number} referenceId
 */
DestinyHistoricalStatsDestinyHistoricalStatsActivity.prototype['referenceId'] = undefined;






export default DestinyHistoricalStatsDestinyHistoricalStatsActivity;

