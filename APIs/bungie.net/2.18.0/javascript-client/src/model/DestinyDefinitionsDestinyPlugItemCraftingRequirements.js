/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsDestinyPlugItemCraftingUnlockRequirement from './DestinyDefinitionsDestinyPlugItemCraftingUnlockRequirement';

/**
 * The DestinyDefinitionsDestinyPlugItemCraftingRequirements model module.
 * @module model/DestinyDefinitionsDestinyPlugItemCraftingRequirements
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyPlugItemCraftingRequirements {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyPlugItemCraftingRequirements</code>.
     * @alias module:model/DestinyDefinitionsDestinyPlugItemCraftingRequirements
     */
    constructor() { 
        
        DestinyDefinitionsDestinyPlugItemCraftingRequirements.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyPlugItemCraftingRequirements</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyPlugItemCraftingRequirements} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyPlugItemCraftingRequirements} The populated <code>DestinyDefinitionsDestinyPlugItemCraftingRequirements</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyPlugItemCraftingRequirements();

            if (data.hasOwnProperty('materialRequirementHashes')) {
                obj['materialRequirementHashes'] = ApiClient.convertToType(data['materialRequirementHashes'], ['Number']);
            }
            if (data.hasOwnProperty('requiredLevel')) {
                obj['requiredLevel'] = ApiClient.convertToType(data['requiredLevel'], 'Number');
            }
            if (data.hasOwnProperty('unlockRequirements')) {
                obj['unlockRequirements'] = ApiClient.convertToType(data['unlockRequirements'], [DestinyDefinitionsDestinyPlugItemCraftingUnlockRequirement]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyPlugItemCraftingRequirements</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyPlugItemCraftingRequirements</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['materialRequirementHashes'])) {
            throw new Error("Expected the field `materialRequirementHashes` to be an array in the JSON data but got " + data['materialRequirementHashes']);
        }
        if (data['unlockRequirements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['unlockRequirements'])) {
                throw new Error("Expected the field `unlockRequirements` to be an array in the JSON data but got " + data['unlockRequirements']);
            }
            // validate the optional field `unlockRequirements` (array)
            for (const item of data['unlockRequirements']) {
                DestinyDefinitionsDestinyPlugItemCraftingUnlockRequirement.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<Number>} materialRequirementHashes
 */
DestinyDefinitionsDestinyPlugItemCraftingRequirements.prototype['materialRequirementHashes'] = undefined;

/**
 * If the plug has a known level requirement, it'll be available here.
 * @member {Number} requiredLevel
 */
DestinyDefinitionsDestinyPlugItemCraftingRequirements.prototype['requiredLevel'] = undefined;

/**
 * @member {Array.<module:model/DestinyDefinitionsDestinyPlugItemCraftingUnlockRequirement>} unlockRequirements
 */
DestinyDefinitionsDestinyPlugItemCraftingRequirements.prototype['unlockRequirements'] = undefined;






export default DestinyDefinitionsDestinyPlugItemCraftingRequirements;

