/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyMilestonesDestinyPublicMilestoneChallengeActivity model module.
 * @module model/DestinyMilestonesDestinyPublicMilestoneChallengeActivity
 * @version 2.18.0
 */
class DestinyMilestonesDestinyPublicMilestoneChallengeActivity {
    /**
     * Constructs a new <code>DestinyMilestonesDestinyPublicMilestoneChallengeActivity</code>.
     * @alias module:model/DestinyMilestonesDestinyPublicMilestoneChallengeActivity
     */
    constructor() { 
        
        DestinyMilestonesDestinyPublicMilestoneChallengeActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyMilestonesDestinyPublicMilestoneChallengeActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyMilestonesDestinyPublicMilestoneChallengeActivity} obj Optional instance to populate.
     * @return {module:model/DestinyMilestonesDestinyPublicMilestoneChallengeActivity} The populated <code>DestinyMilestonesDestinyPublicMilestoneChallengeActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyMilestonesDestinyPublicMilestoneChallengeActivity();

            if (data.hasOwnProperty('activityHash')) {
                obj['activityHash'] = ApiClient.convertToType(data['activityHash'], 'Number');
            }
            if (data.hasOwnProperty('booleanActivityOptions')) {
                obj['booleanActivityOptions'] = ApiClient.convertToType(data['booleanActivityOptions'], {'String': 'Boolean'});
            }
            if (data.hasOwnProperty('challengeObjectiveHashes')) {
                obj['challengeObjectiveHashes'] = ApiClient.convertToType(data['challengeObjectiveHashes'], ['Number']);
            }
            if (data.hasOwnProperty('loadoutRequirementIndex')) {
                obj['loadoutRequirementIndex'] = ApiClient.convertToType(data['loadoutRequirementIndex'], 'Number');
            }
            if (data.hasOwnProperty('modifierHashes')) {
                obj['modifierHashes'] = ApiClient.convertToType(data['modifierHashes'], ['Number']);
            }
            if (data.hasOwnProperty('phaseHashes')) {
                obj['phaseHashes'] = ApiClient.convertToType(data['phaseHashes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyMilestonesDestinyPublicMilestoneChallengeActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyMilestonesDestinyPublicMilestoneChallengeActivity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['challengeObjectiveHashes'])) {
            throw new Error("Expected the field `challengeObjectiveHashes` to be an array in the JSON data but got " + data['challengeObjectiveHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['modifierHashes'])) {
            throw new Error("Expected the field `modifierHashes` to be an array in the JSON data but got " + data['modifierHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['phaseHashes'])) {
            throw new Error("Expected the field `phaseHashes` to be an array in the JSON data but got " + data['phaseHashes']);
        }

        return true;
    }


}



/**
 * @member {Number} activityHash
 */
DestinyMilestonesDestinyPublicMilestoneChallengeActivity.prototype['activityHash'] = undefined;

/**
 * The set of activity options for this activity, keyed by an identifier that's unique for this activity (not guaranteed to be unique between or across all activities, though should be unique for every *variant* of a given *conceptual* activity: for instance, the original D2 Raid has many variant DestinyActivityDefinitions. While other activities could potentially have the same option hashes, for any given D2 base Raid variant the hash will be unique).  As a concrete example of this data, the hashes you get for Raids will correspond to the currently active \"Challenge Mode\".  We have no human readable information for this data, so it's up to you if you want to associate it with such info to show it.
 * @member {Object.<String, Boolean>} booleanActivityOptions
 */
DestinyMilestonesDestinyPublicMilestoneChallengeActivity.prototype['booleanActivityOptions'] = undefined;

/**
 * @member {Array.<Number>} challengeObjectiveHashes
 */
DestinyMilestonesDestinyPublicMilestoneChallengeActivity.prototype['challengeObjectiveHashes'] = undefined;

/**
 * If returned, this is the index into the DestinyActivityDefinition's \"loadouts\" property, indicating the currently active loadout requirements.
 * @member {Number} loadoutRequirementIndex
 */
DestinyMilestonesDestinyPublicMilestoneChallengeActivity.prototype['loadoutRequirementIndex'] = undefined;

/**
 * If the activity has modifiers, this will be the list of modifiers that all variants have in common. Perform lookups against DestinyActivityModifierDefinition which defines the modifier being applied to get at the modifier data.  Note that, in the DestiyActivityDefinition, you will see many more modifiers than this being referred to: those are all *possible* modifiers for the activity, not the active ones. Use only the active ones to match what's really live.
 * @member {Array.<Number>} modifierHashes
 */
DestinyMilestonesDestinyPublicMilestoneChallengeActivity.prototype['modifierHashes'] = undefined;

/**
 * The ordered list of phases for this activity, if any. Note that we have no human readable info for phases, nor any entities to relate them to: relating these hashes to something human readable is up to you unfortunately.
 * @member {Array.<Number>} phaseHashes
 */
DestinyMilestonesDestinyPublicMilestoneChallengeActivity.prototype['phaseHashes'] = undefined;






export default DestinyMilestonesDestinyPublicMilestoneChallengeActivity;

