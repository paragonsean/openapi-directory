/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition from './DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition';
import DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition from './DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition';

/**
 * The DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition model module.
 * @module model/DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition</code>.
     * The definition for an \&quot;inventory flyout\&quot;: a UI screen where we show you part of an otherwise hidden vendor inventory: like the Vault inventory buckets.
     * @alias module:model/DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition} The populated <code>DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition();

            if (data.hasOwnProperty('buckets')) {
                obj['buckets'] = ApiClient.convertToType(data['buckets'], [DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition]);
            }
            if (data.hasOwnProperty('displayProperties')) {
                obj['displayProperties'] = ApiClient.convertToType(data['displayProperties'], DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition);
            }
            if (data.hasOwnProperty('equipmentSlotHash')) {
                obj['equipmentSlotHash'] = ApiClient.convertToType(data['equipmentSlotHash'], 'Number');
            }
            if (data.hasOwnProperty('flyoutId')) {
                obj['flyoutId'] = ApiClient.convertToType(data['flyoutId'], 'Number');
            }
            if (data.hasOwnProperty('lockedDescription')) {
                obj['lockedDescription'] = ApiClient.convertToType(data['lockedDescription'], 'String');
            }
            if (data.hasOwnProperty('suppressNewness')) {
                obj['suppressNewness'] = ApiClient.convertToType(data['suppressNewness'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition</code>.
     */
    static validateJSON(data) {
        if (data['buckets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['buckets'])) {
                throw new Error("Expected the field `buckets` to be an array in the JSON data but got " + data['buckets']);
            }
            // validate the optional field `buckets` (array)
            for (const item of data['buckets']) {
                DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition.validateJSON(item);
            };
        }
        // validate the optional field `displayProperties`
        if (data['displayProperties']) { // data not null
          DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJSON(data['displayProperties']);
        }
        // ensure the json data is a string
        if (data['lockedDescription'] && !(typeof data['lockedDescription'] === 'string' || data['lockedDescription'] instanceof String)) {
            throw new Error("Expected the field `lockedDescription` to be a primitive type in the JSON string but got " + data['lockedDescription']);
        }

        return true;
    }


}



/**
 * A list of inventory buckets and other metadata to show on the screen.
 * @member {Array.<module:model/DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition>} buckets
 */
DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.prototype['buckets'] = undefined;

/**
 * The title and other common properties of the flyout.
 * @member {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} displayProperties
 */
DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.prototype['displayProperties'] = undefined;

/**
 * If this flyout is meant to show you the contents of the player's equipment slot, this is the slot to show.
 * @member {Number} equipmentSlotHash
 */
DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.prototype['equipmentSlotHash'] = undefined;

/**
 * An identifier for the flyout, in case anything else needs to refer to them.
 * @member {Number} flyoutId
 */
DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.prototype['flyoutId'] = undefined;

/**
 * If the flyout is locked, this is the reason why.
 * @member {String} lockedDescription
 */
DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.prototype['lockedDescription'] = undefined;

/**
 * If this is true, don't show any of the glistening \"this is a new item\" UI elements, like we show on the inventory items themselves in in-game UI.
 * @member {Boolean} suppressNewness
 */
DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition.prototype['suppressNewness'] = undefined;






export default DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition;

