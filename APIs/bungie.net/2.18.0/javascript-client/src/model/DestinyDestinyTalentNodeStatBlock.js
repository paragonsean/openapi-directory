/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDestinyStat from './DestinyDestinyStat';

/**
 * The DestinyDestinyTalentNodeStatBlock model module.
 * @module model/DestinyDestinyTalentNodeStatBlock
 * @version 2.18.0
 */
class DestinyDestinyTalentNodeStatBlock {
    /**
     * Constructs a new <code>DestinyDestinyTalentNodeStatBlock</code>.
     * This property has some history. A talent grid can provide stats on both the item it&#39;s related to and the character equipping the item. This returns data about those stat bonuses.
     * @alias module:model/DestinyDestinyTalentNodeStatBlock
     */
    constructor() { 
        
        DestinyDestinyTalentNodeStatBlock.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDestinyTalentNodeStatBlock</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDestinyTalentNodeStatBlock} obj Optional instance to populate.
     * @return {module:model/DestinyDestinyTalentNodeStatBlock} The populated <code>DestinyDestinyTalentNodeStatBlock</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDestinyTalentNodeStatBlock();

            if (data.hasOwnProperty('currentStepStats')) {
                obj['currentStepStats'] = ApiClient.convertToType(data['currentStepStats'], [DestinyDestinyStat]);
            }
            if (data.hasOwnProperty('nextStepStats')) {
                obj['nextStepStats'] = ApiClient.convertToType(data['nextStepStats'], [DestinyDestinyStat]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDestinyTalentNodeStatBlock</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDestinyTalentNodeStatBlock</code>.
     */
    static validateJSON(data) {
        if (data['currentStepStats']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['currentStepStats'])) {
                throw new Error("Expected the field `currentStepStats` to be an array in the JSON data but got " + data['currentStepStats']);
            }
            // validate the optional field `currentStepStats` (array)
            for (const item of data['currentStepStats']) {
                DestinyDestinyStat.validateJSON(item);
            };
        }
        if (data['nextStepStats']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nextStepStats'])) {
                throw new Error("Expected the field `nextStepStats` to be an array in the JSON data but got " + data['nextStepStats']);
            }
            // validate the optional field `nextStepStats` (array)
            for (const item of data['nextStepStats']) {
                DestinyDestinyStat.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The stat benefits conferred when this talent node is activated for the current Step that is active on the node.
 * @member {Array.<module:model/DestinyDestinyStat>} currentStepStats
 */
DestinyDestinyTalentNodeStatBlock.prototype['currentStepStats'] = undefined;

/**
 * This is a holdover from the old days of Destiny 1, when a node could be activated multiple times, conferring multiple steps worth of benefits: you would use this property to show what activating the \"next\" step on the node would provide vs. what the current step is providing. While Nodes are currently not being used this way, the underlying system for this functionality still exists. I hesitate to remove this property while the ability for designers to make such a talent grid still exists. Whether you want to show it is up to you.
 * @member {Array.<module:model/DestinyDestinyStat>} nextStepStats
 */
DestinyDestinyTalentNodeStatBlock.prototype['nextStepStats'] = undefined;






export default DestinyDestinyTalentNodeStatBlock;

