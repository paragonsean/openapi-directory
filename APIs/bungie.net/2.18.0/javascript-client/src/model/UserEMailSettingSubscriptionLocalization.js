/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserEMailSettingSubscriptionLocalization model module.
 * @module model/UserEMailSettingSubscriptionLocalization
 * @version 2.18.0
 */
class UserEMailSettingSubscriptionLocalization {
    /**
     * Constructs a new <code>UserEMailSettingSubscriptionLocalization</code>.
     * Localized text relevant to a given EMail setting in a given localization. Extra settings specifically for subscriptions.
     * @alias module:model/UserEMailSettingSubscriptionLocalization
     */
    constructor() { 
        
        UserEMailSettingSubscriptionLocalization.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserEMailSettingSubscriptionLocalization</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserEMailSettingSubscriptionLocalization} obj Optional instance to populate.
     * @return {module:model/UserEMailSettingSubscriptionLocalization} The populated <code>UserEMailSettingSubscriptionLocalization</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserEMailSettingSubscriptionLocalization();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('knownUserActionText')) {
                obj['knownUserActionText'] = ApiClient.convertToType(data['knownUserActionText'], 'String');
            }
            if (data.hasOwnProperty('registeredUserDescription')) {
                obj['registeredUserDescription'] = ApiClient.convertToType(data['registeredUserDescription'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('unknownUserActionText')) {
                obj['unknownUserActionText'] = ApiClient.convertToType(data['unknownUserActionText'], 'String');
            }
            if (data.hasOwnProperty('unknownUserDescription')) {
                obj['unknownUserDescription'] = ApiClient.convertToType(data['unknownUserDescription'], 'String');
            }
            if (data.hasOwnProperty('unregisteredUserDescription')) {
                obj['unregisteredUserDescription'] = ApiClient.convertToType(data['unregisteredUserDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserEMailSettingSubscriptionLocalization</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserEMailSettingSubscriptionLocalization</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['knownUserActionText'] && !(typeof data['knownUserActionText'] === 'string' || data['knownUserActionText'] instanceof String)) {
            throw new Error("Expected the field `knownUserActionText` to be a primitive type in the JSON string but got " + data['knownUserActionText']);
        }
        // ensure the json data is a string
        if (data['registeredUserDescription'] && !(typeof data['registeredUserDescription'] === 'string' || data['registeredUserDescription'] instanceof String)) {
            throw new Error("Expected the field `registeredUserDescription` to be a primitive type in the JSON string but got " + data['registeredUserDescription']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['unknownUserActionText'] && !(typeof data['unknownUserActionText'] === 'string' || data['unknownUserActionText'] instanceof String)) {
            throw new Error("Expected the field `unknownUserActionText` to be a primitive type in the JSON string but got " + data['unknownUserActionText']);
        }
        // ensure the json data is a string
        if (data['unknownUserDescription'] && !(typeof data['unknownUserDescription'] === 'string' || data['unknownUserDescription'] instanceof String)) {
            throw new Error("Expected the field `unknownUserDescription` to be a primitive type in the JSON string but got " + data['unknownUserDescription']);
        }
        // ensure the json data is a string
        if (data['unregisteredUserDescription'] && !(typeof data['unregisteredUserDescription'] === 'string' || data['unregisteredUserDescription'] instanceof String)) {
            throw new Error("Expected the field `unregisteredUserDescription` to be a primitive type in the JSON string but got " + data['unregisteredUserDescription']);
        }

        return true;
    }


}



/**
 * @member {String} description
 */
UserEMailSettingSubscriptionLocalization.prototype['description'] = undefined;

/**
 * @member {String} knownUserActionText
 */
UserEMailSettingSubscriptionLocalization.prototype['knownUserActionText'] = undefined;

/**
 * @member {String} registeredUserDescription
 */
UserEMailSettingSubscriptionLocalization.prototype['registeredUserDescription'] = undefined;

/**
 * @member {String} title
 */
UserEMailSettingSubscriptionLocalization.prototype['title'] = undefined;

/**
 * @member {String} unknownUserActionText
 */
UserEMailSettingSubscriptionLocalization.prototype['unknownUserActionText'] = undefined;

/**
 * @member {String} unknownUserDescription
 */
UserEMailSettingSubscriptionLocalization.prototype['unknownUserDescription'] = undefined;

/**
 * @member {String} unregisteredUserDescription
 */
UserEMailSettingSubscriptionLocalization.prototype['unregisteredUserDescription'] = undefined;






export default UserEMailSettingSubscriptionLocalization;

