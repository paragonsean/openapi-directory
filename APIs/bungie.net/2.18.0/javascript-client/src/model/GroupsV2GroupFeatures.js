/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupsV2GroupFeatures model module.
 * @module model/GroupsV2GroupFeatures
 * @version 2.18.0
 */
class GroupsV2GroupFeatures {
    /**
     * Constructs a new <code>GroupsV2GroupFeatures</code>.
     * @alias module:model/GroupsV2GroupFeatures
     */
    constructor() { 
        
        GroupsV2GroupFeatures.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupsV2GroupFeatures</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupsV2GroupFeatures} obj Optional instance to populate.
     * @return {module:model/GroupsV2GroupFeatures} The populated <code>GroupsV2GroupFeatures</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupsV2GroupFeatures();

            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiClient.convertToType(data['capabilities'], 'Number');
            }
            if (data.hasOwnProperty('hostGuidedGamePermissionOverride')) {
                obj['hostGuidedGamePermissionOverride'] = ApiClient.convertToType(data['hostGuidedGamePermissionOverride'], 'Number');
            }
            if (data.hasOwnProperty('invitePermissionOverride')) {
                obj['invitePermissionOverride'] = ApiClient.convertToType(data['invitePermissionOverride'], 'Boolean');
            }
            if (data.hasOwnProperty('joinLevel')) {
                obj['joinLevel'] = ApiClient.convertToType(data['joinLevel'], 'Number');
            }
            if (data.hasOwnProperty('maximumMembers')) {
                obj['maximumMembers'] = ApiClient.convertToType(data['maximumMembers'], 'Number');
            }
            if (data.hasOwnProperty('maximumMembershipsOfGroupType')) {
                obj['maximumMembershipsOfGroupType'] = ApiClient.convertToType(data['maximumMembershipsOfGroupType'], 'Number');
            }
            if (data.hasOwnProperty('membershipTypes')) {
                obj['membershipTypes'] = ApiClient.convertToType(data['membershipTypes'], ['Number']);
            }
            if (data.hasOwnProperty('updateBannerPermissionOverride')) {
                obj['updateBannerPermissionOverride'] = ApiClient.convertToType(data['updateBannerPermissionOverride'], 'Boolean');
            }
            if (data.hasOwnProperty('updateCulturePermissionOverride')) {
                obj['updateCulturePermissionOverride'] = ApiClient.convertToType(data['updateCulturePermissionOverride'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupsV2GroupFeatures</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupsV2GroupFeatures</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['membershipTypes'])) {
            throw new Error("Expected the field `membershipTypes` to be an array in the JSON data but got " + data['membershipTypes']);
        }

        return true;
    }


}



/**
 * @member {Number} capabilities
 */
GroupsV2GroupFeatures.prototype['capabilities'] = undefined;

/**
 * Minimum Member Level allowed to host guided games  Always Allowed: Founder, Acting Founder, Admin  Allowed Overrides: None, Member, Beginner  Default is Member for clans, None for groups, although this means nothing for groups.
 * @member {Number} hostGuidedGamePermissionOverride
 */
GroupsV2GroupFeatures.prototype['hostGuidedGamePermissionOverride'] = undefined;

/**
 * Minimum Member Level allowed to invite new members to group  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.
 * @member {Boolean} invitePermissionOverride
 */
GroupsV2GroupFeatures.prototype['invitePermissionOverride'] = undefined;

/**
 * Level to join a member at when accepting an invite, application, or joining an open clan  Default is Beginner.
 * @member {Number} joinLevel
 */
GroupsV2GroupFeatures.prototype['joinLevel'] = undefined;

/**
 * @member {Number} maximumMembers
 */
GroupsV2GroupFeatures.prototype['maximumMembers'] = undefined;

/**
 * Maximum number of groups of this type a typical membership may join. For example, a user may join about 50 General groups with their Bungie.net account. They may join one clan per Destiny membership.
 * @member {Number} maximumMembershipsOfGroupType
 */
GroupsV2GroupFeatures.prototype['maximumMembershipsOfGroupType'] = undefined;

/**
 * @member {Array.<Number>} membershipTypes
 */
GroupsV2GroupFeatures.prototype['membershipTypes'] = undefined;

/**
 * Minimum Member Level allowed to update banner  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.
 * @member {Boolean} updateBannerPermissionOverride
 */
GroupsV2GroupFeatures.prototype['updateBannerPermissionOverride'] = undefined;

/**
 * Minimum Member Level allowed to update group culture  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.
 * @member {Boolean} updateCulturePermissionOverride
 */
GroupsV2GroupFeatures.prototype['updateCulturePermissionOverride'] = undefined;






export default GroupsV2GroupFeatures;

