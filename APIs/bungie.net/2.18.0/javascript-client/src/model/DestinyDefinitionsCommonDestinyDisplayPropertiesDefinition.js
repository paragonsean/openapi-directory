/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsCommonDestinyIconSequenceDefinition from './DestinyDefinitionsCommonDestinyIconSequenceDefinition';

/**
 * The DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition model module.
 * @module model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition</code>.
     * Many Destiny*Definition contracts - the \&quot;first order\&quot; entities of Destiny that have their own tables in the Manifest Database - also have displayable information. This is the base class for that display information.
     * @alias module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition
     */
    constructor() { 
        
        DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} The populated <code>DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('hasIcon')) {
                obj['hasIcon'] = ApiClient.convertToType(data['hasIcon'], 'Boolean');
            }
            if (data.hasOwnProperty('highResIcon')) {
                obj['highResIcon'] = ApiClient.convertToType(data['highResIcon'], 'String');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('iconSequences')) {
                obj['iconSequences'] = ApiClient.convertToType(data['iconSequences'], [DestinyDefinitionsCommonDestinyIconSequenceDefinition]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['highResIcon'] && !(typeof data['highResIcon'] === 'string' || data['highResIcon'] instanceof String)) {
            throw new Error("Expected the field `highResIcon` to be a primitive type in the JSON string but got " + data['highResIcon']);
        }
        // ensure the json data is a string
        if (data['icon'] && !(typeof data['icon'] === 'string' || data['icon'] instanceof String)) {
            throw new Error("Expected the field `icon` to be a primitive type in the JSON string but got " + data['icon']);
        }
        if (data['iconSequences']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['iconSequences'])) {
                throw new Error("Expected the field `iconSequences` to be an array in the JSON data but got " + data['iconSequences']);
            }
            // validate the optional field `iconSequences` (array)
            for (const item of data['iconSequences']) {
                DestinyDefinitionsCommonDestinyIconSequenceDefinition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {String} description
 */
DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.prototype['description'] = undefined;

/**
 * @member {Boolean} hasIcon
 */
DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.prototype['hasIcon'] = undefined;

/**
 * If this item has a high-res icon (at least for now, many things won't), then the path to that icon will be here.
 * @member {String} highResIcon
 */
DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.prototype['highResIcon'] = undefined;

/**
 * Note that \"icon\" is sometimes misleading, and should be interpreted in the context of the entity. For instance, in Destiny 1 the DestinyRecordBookDefinition's icon was a big picture of a book.  But usually, it will be a small square image that you can use as... well, an icon.  They are currently represented as 96px x 96px images.
 * @member {String} icon
 */
DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.prototype['icon'] = undefined;

/**
 * @member {Array.<module:model/DestinyDefinitionsCommonDestinyIconSequenceDefinition>} iconSequences
 */
DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.prototype['iconSequences'] = undefined;

/**
 * @member {String} name
 */
DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.prototype['name'] = undefined;






export default DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;

