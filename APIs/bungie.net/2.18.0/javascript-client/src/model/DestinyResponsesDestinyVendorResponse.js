/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyItemComponentSetOfint32 from './DestinyItemComponentSetOfint32';
import DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent from './DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent';
import SingleComponentResponseOfDestinyCurrenciesComponent from './SingleComponentResponseOfDestinyCurrenciesComponent';
import SingleComponentResponseOfDestinyStringVariablesComponent from './SingleComponentResponseOfDestinyStringVariablesComponent';
import SingleComponentResponseOfDestinyVendorCategoriesComponent from './SingleComponentResponseOfDestinyVendorCategoriesComponent';
import SingleComponentResponseOfDestinyVendorComponent from './SingleComponentResponseOfDestinyVendorComponent';

/**
 * The DestinyResponsesDestinyVendorResponse model module.
 * @module model/DestinyResponsesDestinyVendorResponse
 * @version 2.18.0
 */
class DestinyResponsesDestinyVendorResponse {
    /**
     * Constructs a new <code>DestinyResponsesDestinyVendorResponse</code>.
     * A response containing all of the components for a vendor.
     * @alias module:model/DestinyResponsesDestinyVendorResponse
     */
    constructor() { 
        
        DestinyResponsesDestinyVendorResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyResponsesDestinyVendorResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyResponsesDestinyVendorResponse} obj Optional instance to populate.
     * @return {module:model/DestinyResponsesDestinyVendorResponse} The populated <code>DestinyResponsesDestinyVendorResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyResponsesDestinyVendorResponse();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], SingleComponentResponseOfDestinyVendorCategoriesComponent);
            }
            if (data.hasOwnProperty('currencyLookups')) {
                obj['currencyLookups'] = ApiClient.convertToType(data['currencyLookups'], SingleComponentResponseOfDestinyCurrenciesComponent);
            }
            if (data.hasOwnProperty('itemComponents')) {
                obj['itemComponents'] = ApiClient.convertToType(data['itemComponents'], DestinyItemComponentSetOfint32);
            }
            if (data.hasOwnProperty('sales')) {
                obj['sales'] = ApiClient.convertToType(data['sales'], DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent);
            }
            if (data.hasOwnProperty('stringVariables')) {
                obj['stringVariables'] = ApiClient.convertToType(data['stringVariables'], SingleComponentResponseOfDestinyStringVariablesComponent);
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], SingleComponentResponseOfDestinyVendorComponent);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyResponsesDestinyVendorResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyResponsesDestinyVendorResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `categories`
        if (data['categories']) { // data not null
          SingleComponentResponseOfDestinyVendorCategoriesComponent.validateJSON(data['categories']);
        }
        // validate the optional field `currencyLookups`
        if (data['currencyLookups']) { // data not null
          SingleComponentResponseOfDestinyCurrenciesComponent.validateJSON(data['currencyLookups']);
        }
        // validate the optional field `itemComponents`
        if (data['itemComponents']) { // data not null
          DestinyItemComponentSetOfint32.validateJSON(data['itemComponents']);
        }
        // validate the optional field `sales`
        if (data['sales']) { // data not null
          DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent.validateJSON(data['sales']);
        }
        // validate the optional field `stringVariables`
        if (data['stringVariables']) { // data not null
          SingleComponentResponseOfDestinyStringVariablesComponent.validateJSON(data['stringVariables']);
        }
        // validate the optional field `vendor`
        if (data['vendor']) { // data not null
          SingleComponentResponseOfDestinyVendorComponent.validateJSON(data['vendor']);
        }

        return true;
    }


}



/**
 * Categories that the vendor has available, and references to the sales therein.  COMPONENT TYPE: VendorCategories
 * @member {module:model/SingleComponentResponseOfDestinyVendorCategoriesComponent} categories
 */
DestinyResponsesDestinyVendorResponse.prototype['categories'] = undefined;

/**
 * A \"lookup\" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups
 * @member {module:model/SingleComponentResponseOfDestinyCurrenciesComponent} currencyLookups
 */
DestinyResponsesDestinyVendorResponse.prototype['currencyLookups'] = undefined;

/**
 * Item components, keyed by the vendorItemIndex of the active sale items.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]
 * @member {module:model/DestinyItemComponentSetOfint32} itemComponents
 */
DestinyResponsesDestinyVendorResponse.prototype['itemComponents'] = undefined;

/**
 * Sales, keyed by the vendorItemIndex of the item being sold.  COMPONENT TYPE: VendorSales
 * @member {module:model/DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent} sales
 */
DestinyResponsesDestinyVendorResponse.prototype['sales'] = undefined;

/**
 * A map of string variable values by hash for this character context.  COMPONENT TYPE: StringVariables
 * @member {module:model/SingleComponentResponseOfDestinyStringVariablesComponent} stringVariables
 */
DestinyResponsesDestinyVendorResponse.prototype['stringVariables'] = undefined;

/**
 * The base properties of the vendor.  COMPONENT TYPE: Vendors
 * @member {module:model/SingleComponentResponseOfDestinyVendorComponent} vendor
 */
DestinyResponsesDestinyVendorResponse.prototype['vendor'] = undefined;






export default DestinyResponsesDestinyVendorResponse;

