/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyEntitiesItemsDestinyItemComponent from './DestinyEntitiesItemsDestinyItemComponent';

/**
 * The DestinyEntitiesInventoryDestinyInventoryComponent model module.
 * @module model/DestinyEntitiesInventoryDestinyInventoryComponent
 * @version 2.18.0
 */
class DestinyEntitiesInventoryDestinyInventoryComponent {
    /**
     * Constructs a new <code>DestinyEntitiesInventoryDestinyInventoryComponent</code>.
     * A list of minimal information for items in an inventory: be it a character&#39;s inventory, or a Profile&#39;s inventory. (Note that the Vault is a collection of inventory buckets in the Profile&#39;s inventory)  Inventory Items returned here are in a flat list, but importantly they have a bucketHash property that indicates the specific inventory bucket that is holding them. These buckets constitute things like the separate sections of the Vault, the user&#39;s inventory slots, etc. See DestinyInventoryBucketDefinition for more info.
     * @alias module:model/DestinyEntitiesInventoryDestinyInventoryComponent
     */
    constructor() { 
        
        DestinyEntitiesInventoryDestinyInventoryComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyEntitiesInventoryDestinyInventoryComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyEntitiesInventoryDestinyInventoryComponent} obj Optional instance to populate.
     * @return {module:model/DestinyEntitiesInventoryDestinyInventoryComponent} The populated <code>DestinyEntitiesInventoryDestinyInventoryComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyEntitiesInventoryDestinyInventoryComponent();

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [DestinyEntitiesItemsDestinyItemComponent]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyEntitiesInventoryDestinyInventoryComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyEntitiesInventoryDestinyInventoryComponent</code>.
     */
    static validateJSON(data) {
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                DestinyEntitiesItemsDestinyItemComponent.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The items in this inventory. If you care to bucket them, use the item's bucketHash property to group them.
 * @member {Array.<module:model/DestinyEntitiesItemsDestinyItemComponent>} items
 */
DestinyEntitiesInventoryDestinyInventoryComponent.prototype['items'] = undefined;






export default DestinyEntitiesInventoryDestinyInventoryComponent;

