/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InterpolationInterpolationPoint from './InterpolationInterpolationPoint';

/**
 * The DestinyDefinitionsDestinyStatDisplayDefinition model module.
 * @module model/DestinyDefinitionsDestinyStatDisplayDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyStatDisplayDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyStatDisplayDefinition</code>.
     * Describes the way that an Item Stat (see DestinyStatDefinition) is transformed using the DestinyStatGroupDefinition related to that item. See both of the aforementioned definitions for more information about the stages of stat transformation.  This represents the transformation of a stat into a \&quot;Display\&quot; stat (the closest value that BNet can get to the in-game display value of the stat)
     * @alias module:model/DestinyDefinitionsDestinyStatDisplayDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyStatDisplayDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyStatDisplayDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyStatDisplayDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyStatDisplayDefinition} The populated <code>DestinyDefinitionsDestinyStatDisplayDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyStatDisplayDefinition();

            if (data.hasOwnProperty('displayAsNumeric')) {
                obj['displayAsNumeric'] = ApiClient.convertToType(data['displayAsNumeric'], 'Boolean');
            }
            if (data.hasOwnProperty('displayInterpolation')) {
                obj['displayInterpolation'] = ApiClient.convertToType(data['displayInterpolation'], [InterpolationInterpolationPoint]);
            }
            if (data.hasOwnProperty('maximumValue')) {
                obj['maximumValue'] = ApiClient.convertToType(data['maximumValue'], 'Number');
            }
            if (data.hasOwnProperty('statHash')) {
                obj['statHash'] = ApiClient.convertToType(data['statHash'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyStatDisplayDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyStatDisplayDefinition</code>.
     */
    static validateJSON(data) {
        if (data['displayInterpolation']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['displayInterpolation'])) {
                throw new Error("Expected the field `displayInterpolation` to be an array in the JSON data but got " + data['displayInterpolation']);
            }
            // validate the optional field `displayInterpolation` (array)
            for (const item of data['displayInterpolation']) {
                InterpolationInterpolationPoint.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * If this is true, the stat should be displayed as a number. Otherwise, display it as a progress bar. Or, you know, do whatever you want. There's no displayAsNumeric police.
 * @member {Boolean} displayAsNumeric
 */
DestinyDefinitionsDestinyStatDisplayDefinition.prototype['displayAsNumeric'] = undefined;

/**
 * The interpolation table representing how the Investment Stat is transformed into a Display Stat.   See DestinyStatDefinition for a description of the stages of stat transformation.
 * @member {Array.<module:model/InterpolationInterpolationPoint>} displayInterpolation
 */
DestinyDefinitionsDestinyStatDisplayDefinition.prototype['displayInterpolation'] = undefined;

/**
 * Regardless of the output of interpolation, this is the maximum possible value that the stat can be. It should also be used as the upper bound for displaying the stat as a progress bar (the minimum always being 0)
 * @member {Number} maximumValue
 */
DestinyDefinitionsDestinyStatDisplayDefinition.prototype['maximumValue'] = undefined;

/**
 * The hash identifier for the stat being transformed into a Display stat.  Use it to look up the DestinyStatDefinition, or key into a DestinyInventoryItemDefinition's stats property.
 * @member {Number} statHash
 */
DestinyDefinitionsDestinyStatDisplayDefinition.prototype['statHash'] = undefined;






export default DestinyDefinitionsDestinyStatDisplayDefinition;

