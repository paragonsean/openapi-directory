/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CommonModelsCoreSetting model module.
 * @module model/CommonModelsCoreSetting
 * @version 2.18.0
 */
class CommonModelsCoreSetting {
    /**
     * Constructs a new <code>CommonModelsCoreSetting</code>.
     * @alias module:model/CommonModelsCoreSetting
     */
    constructor() { 
        
        CommonModelsCoreSetting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommonModelsCoreSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommonModelsCoreSetting} obj Optional instance to populate.
     * @return {module:model/CommonModelsCoreSetting} The populated <code>CommonModelsCoreSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonModelsCoreSetting();

            if (data.hasOwnProperty('childSettings')) {
                obj['childSettings'] = ApiClient.convertToType(data['childSettings'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('imagePath')) {
                obj['imagePath'] = ApiClient.convertToType(data['imagePath'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommonModelsCoreSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommonModelsCoreSetting</code>.
     */
    static validateJSON(data) {
        if (data['childSettings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['childSettings'])) {
                throw new Error("Expected the field `childSettings` to be an array in the JSON data but got " + data['childSettings']);
            }
            // validate the optional field `childSettings` (array)
            for (const item of data['childSettings']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }
        // ensure the json data is a string
        if (data['imagePath'] && !(typeof data['imagePath'] === 'string' || data['imagePath'] instanceof String)) {
            throw new Error("Expected the field `imagePath` to be a primitive type in the JSON string but got " + data['imagePath']);
        }
        // ensure the json data is a string
        if (data['summary'] && !(typeof data['summary'] === 'string' || data['summary'] instanceof String)) {
            throw new Error("Expected the field `summary` to be a primitive type in the JSON string but got " + data['summary']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} childSettings
 */
CommonModelsCoreSetting.prototype['childSettings'] = undefined;

/**
 * @member {String} displayName
 */
CommonModelsCoreSetting.prototype['displayName'] = undefined;

/**
 * @member {String} identifier
 */
CommonModelsCoreSetting.prototype['identifier'] = undefined;

/**
 * @member {String} imagePath
 */
CommonModelsCoreSetting.prototype['imagePath'] = undefined;

/**
 * @member {Boolean} isDefault
 */
CommonModelsCoreSetting.prototype['isDefault'] = undefined;

/**
 * @member {String} summary
 */
CommonModelsCoreSetting.prototype['summary'] = undefined;






export default CommonModelsCoreSetting;

