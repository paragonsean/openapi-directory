/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyEntitiesVendorsDestinyVendorCategory from './DestinyEntitiesVendorsDestinyVendorCategory';

/**
 * The DestinyEntitiesVendorsDestinyVendorCategoriesComponent model module.
 * @module model/DestinyEntitiesVendorsDestinyVendorCategoriesComponent
 * @version 2.18.0
 */
class DestinyEntitiesVendorsDestinyVendorCategoriesComponent {
    /**
     * Constructs a new <code>DestinyEntitiesVendorsDestinyVendorCategoriesComponent</code>.
     * A vendor can have many categories of items that they sell. This component will return the category information for available items, as well as the index into those items in the user&#39;s sale item list.  Note that, since both the category and items are indexes, this data is Content Version dependent. Be sure to check that your content is up to date before using this data. This is an unfortunate, but permanent, limitation of Vendor data.
     * @alias module:model/DestinyEntitiesVendorsDestinyVendorCategoriesComponent
     */
    constructor() { 
        
        DestinyEntitiesVendorsDestinyVendorCategoriesComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyEntitiesVendorsDestinyVendorCategoriesComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyEntitiesVendorsDestinyVendorCategoriesComponent} obj Optional instance to populate.
     * @return {module:model/DestinyEntitiesVendorsDestinyVendorCategoriesComponent} The populated <code>DestinyEntitiesVendorsDestinyVendorCategoriesComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyEntitiesVendorsDestinyVendorCategoriesComponent();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [DestinyEntitiesVendorsDestinyVendorCategory]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyEntitiesVendorsDestinyVendorCategoriesComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyEntitiesVendorsDestinyVendorCategoriesComponent</code>.
     */
    static validateJSON(data) {
        if (data['categories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categories'])) {
                throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
            }
            // validate the optional field `categories` (array)
            for (const item of data['categories']) {
                DestinyEntitiesVendorsDestinyVendorCategory.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of categories for items that the vendor sells, in rendering order.  These categories each point to a \"display category\" in the displayCategories property of the DestinyVendorDefinition, as opposed to the other categories.
 * @member {Array.<module:model/DestinyEntitiesVendorsDestinyVendorCategory>} categories
 */
DestinyEntitiesVendorsDestinyVendorCategoriesComponent.prototype['categories'] = undefined;






export default DestinyEntitiesVendorsDestinyVendorCategoriesComponent;

