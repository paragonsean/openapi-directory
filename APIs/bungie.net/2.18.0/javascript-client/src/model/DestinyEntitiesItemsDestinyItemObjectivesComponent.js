/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyQuestsDestinyObjectiveProgress from './DestinyQuestsDestinyObjectiveProgress';

/**
 * The DestinyEntitiesItemsDestinyItemObjectivesComponent model module.
 * @module model/DestinyEntitiesItemsDestinyItemObjectivesComponent
 * @version 2.18.0
 */
class DestinyEntitiesItemsDestinyItemObjectivesComponent {
    /**
     * Constructs a new <code>DestinyEntitiesItemsDestinyItemObjectivesComponent</code>.
     * Items can have objectives and progression. When you request this block, you will obtain information about any Objectives and progression tied to this item.
     * @alias module:model/DestinyEntitiesItemsDestinyItemObjectivesComponent
     */
    constructor() { 
        
        DestinyEntitiesItemsDestinyItemObjectivesComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyEntitiesItemsDestinyItemObjectivesComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyEntitiesItemsDestinyItemObjectivesComponent} obj Optional instance to populate.
     * @return {module:model/DestinyEntitiesItemsDestinyItemObjectivesComponent} The populated <code>DestinyEntitiesItemsDestinyItemObjectivesComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyEntitiesItemsDestinyItemObjectivesComponent();

            if (data.hasOwnProperty('dateCompleted')) {
                obj['dateCompleted'] = ApiClient.convertToType(data['dateCompleted'], 'Date');
            }
            if (data.hasOwnProperty('flavorObjective')) {
                obj['flavorObjective'] = ApiClient.convertToType(data['flavorObjective'], DestinyQuestsDestinyObjectiveProgress);
            }
            if (data.hasOwnProperty('objectives')) {
                obj['objectives'] = ApiClient.convertToType(data['objectives'], [DestinyQuestsDestinyObjectiveProgress]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyEntitiesItemsDestinyItemObjectivesComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyEntitiesItemsDestinyItemObjectivesComponent</code>.
     */
    static validateJSON(data) {
        // validate the optional field `flavorObjective`
        if (data['flavorObjective']) { // data not null
          DestinyQuestsDestinyObjectiveProgress.validateJSON(data['flavorObjective']);
        }
        if (data['objectives']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['objectives'])) {
                throw new Error("Expected the field `objectives` to be an array in the JSON data but got " + data['objectives']);
            }
            // validate the optional field `objectives` (array)
            for (const item of data['objectives']) {
                DestinyQuestsDestinyObjectiveProgress.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * If we have any information on when these objectives were completed, this will be the date of that completion. This won't be on many items, but could be interesting for some items that do store this information.
 * @member {Date} dateCompleted
 */
DestinyEntitiesItemsDestinyItemObjectivesComponent.prototype['dateCompleted'] = undefined;

/**
 * I may regret naming it this way - but this represents when an item has an objective that doesn't serve a beneficial purpose, but rather is used for \"flavor\" or additional information. For instance, when Emblems track specific stats, those stats are represented as Objectives on the item.
 * @member {module:model/DestinyQuestsDestinyObjectiveProgress} flavorObjective
 */
DestinyEntitiesItemsDestinyItemObjectivesComponent.prototype['flavorObjective'] = undefined;

/**
 * If the item has a hard association with objectives, your progress on them will be defined here.   Objectives are our standard way to describe a series of tasks that have to be completed for a reward.
 * @member {Array.<module:model/DestinyQuestsDestinyObjectiveProgress>} objectives
 */
DestinyEntitiesItemsDestinyItemObjectivesComponent.prototype['objectives'] = undefined;






export default DestinyEntitiesItemsDestinyItemObjectivesComponent;

