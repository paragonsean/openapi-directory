/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyItemVendorSourceReference model module.
 * @module model/DestinyDefinitionsDestinyItemVendorSourceReference
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemVendorSourceReference {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemVendorSourceReference</code>.
     * Represents that a vendor could sell this item, and provides a quick link to that vendor and sale item.   Note that we do not and cannot make a guarantee that the vendor will ever *actually* sell this item, only that the Vendor has a definition that indicates it *could* be sold.   Note also that a vendor may sell the same item in multiple \&quot;ways\&quot;, which means there may be multiple vendorItemIndexes for a single Vendor hash.
     * @alias module:model/DestinyDefinitionsDestinyItemVendorSourceReference
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemVendorSourceReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemVendorSourceReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemVendorSourceReference} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemVendorSourceReference} The populated <code>DestinyDefinitionsDestinyItemVendorSourceReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemVendorSourceReference();

            if (data.hasOwnProperty('vendorHash')) {
                obj['vendorHash'] = ApiClient.convertToType(data['vendorHash'], 'Number');
            }
            if (data.hasOwnProperty('vendorItemIndexes')) {
                obj['vendorItemIndexes'] = ApiClient.convertToType(data['vendorItemIndexes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemVendorSourceReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemVendorSourceReference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['vendorItemIndexes'])) {
            throw new Error("Expected the field `vendorItemIndexes` to be an array in the JSON data but got " + data['vendorItemIndexes']);
        }

        return true;
    }


}



/**
 * The identifier for the vendor that may sell this item.
 * @member {Number} vendorHash
 */
DestinyDefinitionsDestinyItemVendorSourceReference.prototype['vendorHash'] = undefined;

/**
 * The Vendor sale item indexes that represent the sale information for this item. The same vendor may sell an item in multiple \"ways\", hence why this is a list. (for instance, a weapon may be \"sold\" as a reward in a quest, for Glimmer, and for Masterwork Cores: each of those ways would be represented by a different vendor sale item with a different index)
 * @member {Array.<Number>} vendorItemIndexes
 */
DestinyDefinitionsDestinyItemVendorSourceReference.prototype['vendorItemIndexes'] = undefined;






export default DestinyDefinitionsDestinyItemVendorSourceReference;

