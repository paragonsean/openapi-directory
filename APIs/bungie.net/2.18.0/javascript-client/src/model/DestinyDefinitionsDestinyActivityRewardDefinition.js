/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDestinyItemQuantity from './DestinyDestinyItemQuantity';

/**
 * The DestinyDefinitionsDestinyActivityRewardDefinition model module.
 * @module model/DestinyDefinitionsDestinyActivityRewardDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyActivityRewardDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyActivityRewardDefinition</code>.
     * Activities can refer to one or more sets of tooltip-friendly reward data. These are the definitions for those tooltip friendly rewards.
     * @alias module:model/DestinyDefinitionsDestinyActivityRewardDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyActivityRewardDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyActivityRewardDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyActivityRewardDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyActivityRewardDefinition} The populated <code>DestinyDefinitionsDestinyActivityRewardDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyActivityRewardDefinition();

            if (data.hasOwnProperty('rewardItems')) {
                obj['rewardItems'] = ApiClient.convertToType(data['rewardItems'], [DestinyDestinyItemQuantity]);
            }
            if (data.hasOwnProperty('rewardText')) {
                obj['rewardText'] = ApiClient.convertToType(data['rewardText'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyActivityRewardDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyActivityRewardDefinition</code>.
     */
    static validateJSON(data) {
        if (data['rewardItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rewardItems'])) {
                throw new Error("Expected the field `rewardItems` to be an array in the JSON data but got " + data['rewardItems']);
            }
            // validate the optional field `rewardItems` (array)
            for (const item of data['rewardItems']) {
                DestinyDestinyItemQuantity.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['rewardText'] && !(typeof data['rewardText'] === 'string' || data['rewardText'] instanceof String)) {
            throw new Error("Expected the field `rewardText` to be a primitive type in the JSON string but got " + data['rewardText']);
        }

        return true;
    }


}



/**
 * The \"Items provided\" in the reward. This is almost always a pointer to a DestinyInventoryItemDefintion for an item that you can't actually earn in-game, but that has name/description/icon information for the vague concept of the rewards you will receive. This is because the actual reward generation is non-deterministic and extremely complicated, so the best the game can do is tell you what you'll get in vague terms. And so too shall we.  Interesting trivia: you actually *do* earn these items when you complete the activity. They go into a single-slot bucket on your profile, which is how you see the pop-ups of these rewards when you complete an activity that match these \"dummy\" items. You can even see them if you look at the last one you earned in your profile-level inventory through the BNet API! Who said reading documentation is a waste of time?
 * @member {Array.<module:model/DestinyDestinyItemQuantity>} rewardItems
 */
DestinyDefinitionsDestinyActivityRewardDefinition.prototype['rewardItems'] = undefined;

/**
 * The header for the reward set, if any.
 * @member {String} rewardText
 */
DestinyDefinitionsDestinyActivityRewardDefinition.prototype['rewardText'] = undefined;






export default DestinyDefinitionsDestinyActivityRewardDefinition;

