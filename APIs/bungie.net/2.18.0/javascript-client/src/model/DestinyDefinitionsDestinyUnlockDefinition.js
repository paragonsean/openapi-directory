/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition from './DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition';

/**
 * The DestinyDefinitionsDestinyUnlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyUnlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyUnlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyUnlockDefinition</code>.
     * Unlock Flags are small bits (literally, a bit, as in a boolean value) that the game server uses for an extremely wide range of state checks, progress storage, and other interesting tidbits of information.
     * @alias module:model/DestinyDefinitionsDestinyUnlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyUnlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyUnlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyUnlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyUnlockDefinition} The populated <code>DestinyDefinitionsDestinyUnlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyUnlockDefinition();

            if (data.hasOwnProperty('displayProperties')) {
                obj['displayProperties'] = ApiClient.convertToType(data['displayProperties'], DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition);
            }
            if (data.hasOwnProperty('hash')) {
                obj['hash'] = ApiClient.convertToType(data['hash'], 'Number');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('redacted')) {
                obj['redacted'] = ApiClient.convertToType(data['redacted'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyUnlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyUnlockDefinition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `displayProperties`
        if (data['displayProperties']) { // data not null
          DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJSON(data['displayProperties']);
        }

        return true;
    }


}



/**
 * Sometimes, but not frequently, these unlock flags also have human readable information: usually when they are being directly tested for some requirement, in which case the string is a localized description of why the requirement check failed.
 * @member {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} displayProperties
 */
DestinyDefinitionsDestinyUnlockDefinition.prototype['displayProperties'] = undefined;

/**
 * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
 * @member {Number} hash
 */
DestinyDefinitionsDestinyUnlockDefinition.prototype['hash'] = undefined;

/**
 * The index of the entity as it was found in the investment tables.
 * @member {Number} index
 */
DestinyDefinitionsDestinyUnlockDefinition.prototype['index'] = undefined;

/**
 * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
 * @member {Boolean} redacted
 */
DestinyDefinitionsDestinyUnlockDefinition.prototype['redacted'] = undefined;






export default DestinyDefinitionsDestinyUnlockDefinition;

