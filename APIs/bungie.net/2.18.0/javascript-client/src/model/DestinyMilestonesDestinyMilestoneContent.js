/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyMilestonesDestinyMilestoneContentItemCategory from './DestinyMilestonesDestinyMilestoneContentItemCategory';

/**
 * The DestinyMilestonesDestinyMilestoneContent model module.
 * @module model/DestinyMilestonesDestinyMilestoneContent
 * @version 2.18.0
 */
class DestinyMilestonesDestinyMilestoneContent {
    /**
     * Constructs a new <code>DestinyMilestonesDestinyMilestoneContent</code>.
     * Represents localized, extended content related to Milestones. This is intentionally returned by a separate endpoint and not with Character-level Milestone data because we do not put localized data into standard Destiny responses, both for brevity of response and for caching purposes. If you really need this data, hit the Milestone Content endpoint.
     * @alias module:model/DestinyMilestonesDestinyMilestoneContent
     */
    constructor() { 
        
        DestinyMilestonesDestinyMilestoneContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyMilestonesDestinyMilestoneContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyMilestonesDestinyMilestoneContent} obj Optional instance to populate.
     * @return {module:model/DestinyMilestonesDestinyMilestoneContent} The populated <code>DestinyMilestonesDestinyMilestoneContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyMilestonesDestinyMilestoneContent();

            if (data.hasOwnProperty('about')) {
                obj['about'] = ApiClient.convertToType(data['about'], 'String');
            }
            if (data.hasOwnProperty('itemCategories')) {
                obj['itemCategories'] = ApiClient.convertToType(data['itemCategories'], [DestinyMilestonesDestinyMilestoneContentItemCategory]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tips')) {
                obj['tips'] = ApiClient.convertToType(data['tips'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyMilestonesDestinyMilestoneContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyMilestonesDestinyMilestoneContent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['about'] && !(typeof data['about'] === 'string' || data['about'] instanceof String)) {
            throw new Error("Expected the field `about` to be a primitive type in the JSON string but got " + data['about']);
        }
        if (data['itemCategories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['itemCategories'])) {
                throw new Error("Expected the field `itemCategories` to be an array in the JSON data but got " + data['itemCategories']);
            }
            // validate the optional field `itemCategories` (array)
            for (const item of data['itemCategories']) {
                DestinyMilestonesDestinyMilestoneContentItemCategory.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tips'])) {
            throw new Error("Expected the field `tips` to be an array in the JSON data but got " + data['tips']);
        }

        return true;
    }


}



/**
 * The \"About this Milestone\" text from the Firehose.
 * @member {String} about
 */
DestinyMilestonesDestinyMilestoneContent.prototype['about'] = undefined;

/**
 * If DPS has defined items related to this Milestone, they can categorize those items in the Firehose. That data will then be returned as item categories here.
 * @member {Array.<module:model/DestinyMilestonesDestinyMilestoneContentItemCategory>} itemCategories
 */
DestinyMilestonesDestinyMilestoneContent.prototype['itemCategories'] = undefined;

/**
 * The Current Status of the Milestone, as driven by the Firehose.
 * @member {String} status
 */
DestinyMilestonesDestinyMilestoneContent.prototype['status'] = undefined;

/**
 * A list of tips, provided by the Firehose.
 * @member {Array.<String>} tips
 */
DestinyMilestonesDestinyMilestoneContent.prototype['tips'] = undefined;






export default DestinyMilestonesDestinyMilestoneContent;

