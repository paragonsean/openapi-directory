/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyProgressionRewardItemQuantity model module.
 * @module model/DestinyDefinitionsDestinyProgressionRewardItemQuantity
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyProgressionRewardItemQuantity {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyProgressionRewardItemQuantity</code>.
     * @alias module:model/DestinyDefinitionsDestinyProgressionRewardItemQuantity
     */
    constructor() { 
        
        DestinyDefinitionsDestinyProgressionRewardItemQuantity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyProgressionRewardItemQuantity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyProgressionRewardItemQuantity} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyProgressionRewardItemQuantity} The populated <code>DestinyDefinitionsDestinyProgressionRewardItemQuantity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyProgressionRewardItemQuantity();

            if (data.hasOwnProperty('acquisitionBehavior')) {
                obj['acquisitionBehavior'] = ApiClient.convertToType(data['acquisitionBehavior'], 'Number');
            }
            if (data.hasOwnProperty('claimUnlockDisplayStrings')) {
                obj['claimUnlockDisplayStrings'] = ApiClient.convertToType(data['claimUnlockDisplayStrings'], ['String']);
            }
            if (data.hasOwnProperty('hasConditionalVisibility')) {
                obj['hasConditionalVisibility'] = ApiClient.convertToType(data['hasConditionalVisibility'], 'Boolean');
            }
            if (data.hasOwnProperty('itemHash')) {
                obj['itemHash'] = ApiClient.convertToType(data['itemHash'], 'Number');
            }
            if (data.hasOwnProperty('itemInstanceId')) {
                obj['itemInstanceId'] = ApiClient.convertToType(data['itemInstanceId'], 'Number');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('rewardedAtProgressionLevel')) {
                obj['rewardedAtProgressionLevel'] = ApiClient.convertToType(data['rewardedAtProgressionLevel'], 'Number');
            }
            if (data.hasOwnProperty('uiDisplayStyle')) {
                obj['uiDisplayStyle'] = ApiClient.convertToType(data['uiDisplayStyle'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyProgressionRewardItemQuantity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyProgressionRewardItemQuantity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['claimUnlockDisplayStrings'])) {
            throw new Error("Expected the field `claimUnlockDisplayStrings` to be an array in the JSON data but got " + data['claimUnlockDisplayStrings']);
        }
        // ensure the json data is a string
        if (data['uiDisplayStyle'] && !(typeof data['uiDisplayStyle'] === 'string' || data['uiDisplayStyle'] instanceof String)) {
            throw new Error("Expected the field `uiDisplayStyle` to be a primitive type in the JSON string but got " + data['uiDisplayStyle']);
        }

        return true;
    }


}



/**
 * @member {Number} acquisitionBehavior
 */
DestinyDefinitionsDestinyProgressionRewardItemQuantity.prototype['acquisitionBehavior'] = undefined;

/**
 * @member {Array.<String>} claimUnlockDisplayStrings
 */
DestinyDefinitionsDestinyProgressionRewardItemQuantity.prototype['claimUnlockDisplayStrings'] = undefined;

/**
 * Indicates that this item quantity may be conditionally shown or hidden, based on various sources of state. For example: server flags, account state, or character progress.
 * @member {Boolean} hasConditionalVisibility
 */
DestinyDefinitionsDestinyProgressionRewardItemQuantity.prototype['hasConditionalVisibility'] = undefined;

/**
 * The hash identifier for the item in question. Use it to look up the item's DestinyInventoryItemDefinition.
 * @member {Number} itemHash
 */
DestinyDefinitionsDestinyProgressionRewardItemQuantity.prototype['itemHash'] = undefined;

/**
 * If this quantity is referring to a specific instance of an item, this will have the item's instance ID. Normally, this will be null.
 * @member {Number} itemInstanceId
 */
DestinyDefinitionsDestinyProgressionRewardItemQuantity.prototype['itemInstanceId'] = undefined;

/**
 * The amount of the item needed/available depending on the context of where DestinyItemQuantity is being used.
 * @member {Number} quantity
 */
DestinyDefinitionsDestinyProgressionRewardItemQuantity.prototype['quantity'] = undefined;

/**
 * @member {Number} rewardedAtProgressionLevel
 */
DestinyDefinitionsDestinyProgressionRewardItemQuantity.prototype['rewardedAtProgressionLevel'] = undefined;

/**
 * @member {String} uiDisplayStyle
 */
DestinyDefinitionsDestinyProgressionRewardItemQuantity.prototype['uiDisplayStyle'] = undefined;






export default DestinyDefinitionsDestinyProgressionRewardItemQuantity;

