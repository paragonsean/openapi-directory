/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyQuestsDestinyObjectiveProgress model module.
 * @module model/DestinyQuestsDestinyObjectiveProgress
 * @version 2.18.0
 */
class DestinyQuestsDestinyObjectiveProgress {
    /**
     * Constructs a new <code>DestinyQuestsDestinyObjectiveProgress</code>.
     * Returns data about a character&#39;s status with a given Objective. Combine with DestinyObjectiveDefinition static data for display purposes.
     * @alias module:model/DestinyQuestsDestinyObjectiveProgress
     */
    constructor() { 
        
        DestinyQuestsDestinyObjectiveProgress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyQuestsDestinyObjectiveProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyQuestsDestinyObjectiveProgress} obj Optional instance to populate.
     * @return {module:model/DestinyQuestsDestinyObjectiveProgress} The populated <code>DestinyQuestsDestinyObjectiveProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyQuestsDestinyObjectiveProgress();

            if (data.hasOwnProperty('activityHash')) {
                obj['activityHash'] = ApiClient.convertToType(data['activityHash'], 'Number');
            }
            if (data.hasOwnProperty('complete')) {
                obj['complete'] = ApiClient.convertToType(data['complete'], 'Boolean');
            }
            if (data.hasOwnProperty('completionValue')) {
                obj['completionValue'] = ApiClient.convertToType(data['completionValue'], 'Number');
            }
            if (data.hasOwnProperty('destinationHash')) {
                obj['destinationHash'] = ApiClient.convertToType(data['destinationHash'], 'Number');
            }
            if (data.hasOwnProperty('objectiveHash')) {
                obj['objectiveHash'] = ApiClient.convertToType(data['objectiveHash'], 'Number');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = ApiClient.convertToType(data['progress'], 'Number');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyQuestsDestinyObjectiveProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyQuestsDestinyObjectiveProgress</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * If the Objective has an Activity associated with it, this is the unique identifier of the Activity being referred to. Use to look up the DestinyActivityDefinition in static data. This will give localized data about *what* you should be playing for the objective to be achieved.
 * @member {Number} activityHash
 */
DestinyQuestsDestinyObjectiveProgress.prototype['activityHash'] = undefined;

/**
 * Whether or not the Objective is completed.
 * @member {Boolean} complete
 */
DestinyQuestsDestinyObjectiveProgress.prototype['complete'] = undefined;

/**
 * As of Forsaken, objectives' completion value is determined dynamically at runtime.  This value represents the threshold of progress you need to surpass in order for this objective to be considered \"complete\".  If you were using objective data, switch from using the DestinyObjectiveDefinition's \"completionValue\" to this value.
 * @member {Number} completionValue
 */
DestinyQuestsDestinyObjectiveProgress.prototype['completionValue'] = undefined;

/**
 * If the Objective has a Destination associated with it, this is the unique identifier of the Destination being referred to. Use to look up the DestinyDestinationDefinition in static data. This will give localized data about *where* in the universe the objective should be achieved.
 * @member {Number} destinationHash
 */
DestinyQuestsDestinyObjectiveProgress.prototype['destinationHash'] = undefined;

/**
 * The unique identifier of the Objective being referred to. Use to look up the DestinyObjectiveDefinition in static data.
 * @member {Number} objectiveHash
 */
DestinyQuestsDestinyObjectiveProgress.prototype['objectiveHash'] = undefined;

/**
 * If progress has been made, and the progress can be measured numerically, this will be the value of that progress. You can compare it to the DestinyObjectiveDefinition.completionValue property for current vs. upper bounds, and use DestinyObjectiveDefinition.inProgressValueStyle or completedValueStyle to determine how this should be rendered. Note that progress, in Destiny 2, need not be a literal numeric progression. It could be one of a number of possible values, even a Timestamp. Always examine DestinyObjectiveDefinition.inProgressValueStyle or completedValueStyle before rendering progress.
 * @member {Number} progress
 */
DestinyQuestsDestinyObjectiveProgress.prototype['progress'] = undefined;

/**
 * If this is true, the objective is visible in-game. Otherwise, it's not yet visible to the player. Up to you if you want to honor this property.
 * @member {Boolean} visible
 */
DestinyQuestsDestinyObjectiveProgress.prototype['visible'] = undefined;






export default DestinyQuestsDestinyObjectiveProgress;

