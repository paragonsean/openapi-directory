/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry from './DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry';
import DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase from './DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase';
import DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition from './DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition';

/**
 * The DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition model module.
 * @module model/DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition</code>.
     * @alias module:model/DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition
     */
    constructor() { 
        
        DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition} The populated <code>DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition();

            if (data.hasOwnProperty('activityGraphNodes')) {
                obj['activityGraphNodes'] = ApiClient.convertToType(data['activityGraphNodes'], [DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry]);
            }
            if (data.hasOwnProperty('activityHash')) {
                obj['activityHash'] = ApiClient.convertToType(data['activityHash'], 'Number');
            }
            if (data.hasOwnProperty('challenges')) {
                obj['challenges'] = ApiClient.convertToType(data['challenges'], [DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition]);
            }
            if (data.hasOwnProperty('phases')) {
                obj['phases'] = ApiClient.convertToType(data['phases'], [DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition</code>.
     */
    static validateJSON(data) {
        if (data['activityGraphNodes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['activityGraphNodes'])) {
                throw new Error("Expected the field `activityGraphNodes` to be an array in the JSON data but got " + data['activityGraphNodes']);
            }
            // validate the optional field `activityGraphNodes` (array)
            for (const item of data['activityGraphNodes']) {
                DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry.validateJSON(item);
            };
        }
        if (data['challenges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['challenges'])) {
                throw new Error("Expected the field `challenges` to be an array in the JSON data but got " + data['challenges']);
            }
            // validate the optional field `challenges` (array)
            for (const item of data['challenges']) {
                DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition.validateJSON(item);
            };
        }
        if (data['phases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['phases'])) {
                throw new Error("Expected the field `phases` to be an array in the JSON data but got " + data['phases']);
            }
            // validate the optional field `phases` (array)
            for (const item of data['phases']) {
                DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * If the activity and its challenge is visible on any of these nodes, it will be returned.
 * @member {Array.<module:model/DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityGraphNodeEntry>} activityGraphNodes
 */
DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.prototype['activityGraphNodes'] = undefined;

/**
 * The activity for which this challenge is active.
 * @member {Number} activityHash
 */
DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.prototype['activityHash'] = undefined;

/**
 * @member {Array.<module:model/DestinyDefinitionsMilestonesDestinyMilestoneChallengeDefinition>} challenges
 */
DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.prototype['challenges'] = undefined;

/**
 * Phases related to this activity, if there are any.  These will be listed in the order in which they will appear in the actual activity.
 * @member {Array.<module:model/DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityPhase>} phases
 */
DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition.prototype['phases'] = undefined;






export default DestinyDefinitionsMilestonesDestinyMilestoneChallengeActivityDefinition;

