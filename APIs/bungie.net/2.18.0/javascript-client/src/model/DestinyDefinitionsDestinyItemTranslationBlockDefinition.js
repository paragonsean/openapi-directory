/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsDestinyGearArtArrangementReference from './DestinyDefinitionsDestinyGearArtArrangementReference';
import DestinyDyeReference from './DestinyDyeReference';

/**
 * The DestinyDefinitionsDestinyItemTranslationBlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyItemTranslationBlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemTranslationBlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemTranslationBlockDefinition</code>.
     * This Block defines the rendering data associated with the item, if any.
     * @alias module:model/DestinyDefinitionsDestinyItemTranslationBlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemTranslationBlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemTranslationBlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemTranslationBlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemTranslationBlockDefinition} The populated <code>DestinyDefinitionsDestinyItemTranslationBlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemTranslationBlockDefinition();

            if (data.hasOwnProperty('arrangements')) {
                obj['arrangements'] = ApiClient.convertToType(data['arrangements'], [DestinyDefinitionsDestinyGearArtArrangementReference]);
            }
            if (data.hasOwnProperty('customDyes')) {
                obj['customDyes'] = ApiClient.convertToType(data['customDyes'], [DestinyDyeReference]);
            }
            if (data.hasOwnProperty('defaultDyes')) {
                obj['defaultDyes'] = ApiClient.convertToType(data['defaultDyes'], [DestinyDyeReference]);
            }
            if (data.hasOwnProperty('hasGeometry')) {
                obj['hasGeometry'] = ApiClient.convertToType(data['hasGeometry'], 'Boolean');
            }
            if (data.hasOwnProperty('lockedDyes')) {
                obj['lockedDyes'] = ApiClient.convertToType(data['lockedDyes'], [DestinyDyeReference]);
            }
            if (data.hasOwnProperty('weaponPatternHash')) {
                obj['weaponPatternHash'] = ApiClient.convertToType(data['weaponPatternHash'], 'Number');
            }
            if (data.hasOwnProperty('weaponPatternIdentifier')) {
                obj['weaponPatternIdentifier'] = ApiClient.convertToType(data['weaponPatternIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemTranslationBlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemTranslationBlockDefinition</code>.
     */
    static validateJSON(data) {
        if (data['arrangements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['arrangements'])) {
                throw new Error("Expected the field `arrangements` to be an array in the JSON data but got " + data['arrangements']);
            }
            // validate the optional field `arrangements` (array)
            for (const item of data['arrangements']) {
                DestinyDefinitionsDestinyGearArtArrangementReference.validateJSON(item);
            };
        }
        if (data['customDyes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['customDyes'])) {
                throw new Error("Expected the field `customDyes` to be an array in the JSON data but got " + data['customDyes']);
            }
            // validate the optional field `customDyes` (array)
            for (const item of data['customDyes']) {
                DestinyDyeReference.validateJSON(item);
            };
        }
        if (data['defaultDyes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['defaultDyes'])) {
                throw new Error("Expected the field `defaultDyes` to be an array in the JSON data but got " + data['defaultDyes']);
            }
            // validate the optional field `defaultDyes` (array)
            for (const item of data['defaultDyes']) {
                DestinyDyeReference.validateJSON(item);
            };
        }
        if (data['lockedDyes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lockedDyes'])) {
                throw new Error("Expected the field `lockedDyes` to be an array in the JSON data but got " + data['lockedDyes']);
            }
            // validate the optional field `lockedDyes` (array)
            for (const item of data['lockedDyes']) {
                DestinyDyeReference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['weaponPatternIdentifier'] && !(typeof data['weaponPatternIdentifier'] === 'string' || data['weaponPatternIdentifier'] instanceof String)) {
            throw new Error("Expected the field `weaponPatternIdentifier` to be a primitive type in the JSON string but got " + data['weaponPatternIdentifier']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/DestinyDefinitionsDestinyGearArtArrangementReference>} arrangements
 */
DestinyDefinitionsDestinyItemTranslationBlockDefinition.prototype['arrangements'] = undefined;

/**
 * @member {Array.<module:model/DestinyDyeReference>} customDyes
 */
DestinyDefinitionsDestinyItemTranslationBlockDefinition.prototype['customDyes'] = undefined;

/**
 * @member {Array.<module:model/DestinyDyeReference>} defaultDyes
 */
DestinyDefinitionsDestinyItemTranslationBlockDefinition.prototype['defaultDyes'] = undefined;

/**
 * @member {Boolean} hasGeometry
 */
DestinyDefinitionsDestinyItemTranslationBlockDefinition.prototype['hasGeometry'] = undefined;

/**
 * @member {Array.<module:model/DestinyDyeReference>} lockedDyes
 */
DestinyDefinitionsDestinyItemTranslationBlockDefinition.prototype['lockedDyes'] = undefined;

/**
 * @member {Number} weaponPatternHash
 */
DestinyDefinitionsDestinyItemTranslationBlockDefinition.prototype['weaponPatternHash'] = undefined;

/**
 * @member {String} weaponPatternIdentifier
 */
DestinyDefinitionsDestinyItemTranslationBlockDefinition.prototype['weaponPatternIdentifier'] = undefined;






export default DestinyDefinitionsDestinyItemTranslationBlockDefinition;

