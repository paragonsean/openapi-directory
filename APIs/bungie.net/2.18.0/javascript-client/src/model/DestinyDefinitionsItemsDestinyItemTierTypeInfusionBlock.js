/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock model module.
 * @module model/DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock
 * @version 2.18.0
 */
class DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock {
    /**
     * Constructs a new <code>DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock</code>.
     * @alias module:model/DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock
     */
    constructor() { 
        
        DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock} The populated <code>DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock();

            if (data.hasOwnProperty('baseQualityTransferRatio')) {
                obj['baseQualityTransferRatio'] = ApiClient.convertToType(data['baseQualityTransferRatio'], 'Number');
            }
            if (data.hasOwnProperty('minimumQualityIncrement')) {
                obj['minimumQualityIncrement'] = ApiClient.convertToType(data['minimumQualityIncrement'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The default portion of quality that will transfer from the infuser to the infusee item. (InfuserQuality - InfuseeQuality) * baseQualityTransferRatio = base quality transferred.
 * @member {Number} baseQualityTransferRatio
 */
DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.prototype['baseQualityTransferRatio'] = undefined;

/**
 * As long as InfuserQuality > InfuseeQuality, the amount of quality bestowed is guaranteed to be at least this value, even if the transferRatio would dictate that it should be less. The total amount of quality that ends up in the Infusee cannot exceed the Infuser's quality however (for instance, if you infuse a 300 item with a 301 item and the minimum quality increment is 10, the infused item will not end up with 310 quality)
 * @member {Number} minimumQualityIncrement
 */
DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock.prototype['minimumQualityIncrement'] = undefined;






export default DestinyDefinitionsItemsDestinyItemTierTypeInfusionBlock;

