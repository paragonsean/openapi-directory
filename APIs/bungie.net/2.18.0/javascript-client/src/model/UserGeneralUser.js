/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserUserToUserContext from './UserUserToUserContext';

/**
 * The UserGeneralUser model module.
 * @module model/UserGeneralUser
 * @version 2.18.0
 */
class UserGeneralUser {
    /**
     * Constructs a new <code>UserGeneralUser</code>.
     * @alias module:model/UserGeneralUser
     */
    constructor() { 
        
        UserGeneralUser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserGeneralUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserGeneralUser} obj Optional instance to populate.
     * @return {module:model/UserGeneralUser} The populated <code>UserGeneralUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserGeneralUser();

            if (data.hasOwnProperty('about')) {
                obj['about'] = ApiClient.convertToType(data['about'], 'String');
            }
            if (data.hasOwnProperty('blizzardDisplayName')) {
                obj['blizzardDisplayName'] = ApiClient.convertToType(data['blizzardDisplayName'], 'String');
            }
            if (data.hasOwnProperty('cachedBungieGlobalDisplayName')) {
                obj['cachedBungieGlobalDisplayName'] = ApiClient.convertToType(data['cachedBungieGlobalDisplayName'], 'String');
            }
            if (data.hasOwnProperty('cachedBungieGlobalDisplayNameCode')) {
                obj['cachedBungieGlobalDisplayNameCode'] = ApiClient.convertToType(data['cachedBungieGlobalDisplayNameCode'], 'Number');
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = UserUserToUserContext.constructFromObject(data['context']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('egsDisplayName')) {
                obj['egsDisplayName'] = ApiClient.convertToType(data['egsDisplayName'], 'String');
            }
            if (data.hasOwnProperty('fbDisplayName')) {
                obj['fbDisplayName'] = ApiClient.convertToType(data['fbDisplayName'], 'String');
            }
            if (data.hasOwnProperty('firstAccess')) {
                obj['firstAccess'] = ApiClient.convertToType(data['firstAccess'], 'Date');
            }
            if (data.hasOwnProperty('isDeleted')) {
                obj['isDeleted'] = ApiClient.convertToType(data['isDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('lastBanReportId')) {
                obj['lastBanReportId'] = ApiClient.convertToType(data['lastBanReportId'], 'Number');
            }
            if (data.hasOwnProperty('lastUpdate')) {
                obj['lastUpdate'] = ApiClient.convertToType(data['lastUpdate'], 'Date');
            }
            if (data.hasOwnProperty('legacyPortalUID')) {
                obj['legacyPortalUID'] = ApiClient.convertToType(data['legacyPortalUID'], 'Number');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('localeInheritDefault')) {
                obj['localeInheritDefault'] = ApiClient.convertToType(data['localeInheritDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('membershipId')) {
                obj['membershipId'] = ApiClient.convertToType(data['membershipId'], 'Number');
            }
            if (data.hasOwnProperty('normalizedName')) {
                obj['normalizedName'] = ApiClient.convertToType(data['normalizedName'], 'String');
            }
            if (data.hasOwnProperty('profileBanExpire')) {
                obj['profileBanExpire'] = ApiClient.convertToType(data['profileBanExpire'], 'Date');
            }
            if (data.hasOwnProperty('profilePicture')) {
                obj['profilePicture'] = ApiClient.convertToType(data['profilePicture'], 'Number');
            }
            if (data.hasOwnProperty('profilePicturePath')) {
                obj['profilePicturePath'] = ApiClient.convertToType(data['profilePicturePath'], 'String');
            }
            if (data.hasOwnProperty('profilePictureWidePath')) {
                obj['profilePictureWidePath'] = ApiClient.convertToType(data['profilePictureWidePath'], 'String');
            }
            if (data.hasOwnProperty('profileTheme')) {
                obj['profileTheme'] = ApiClient.convertToType(data['profileTheme'], 'Number');
            }
            if (data.hasOwnProperty('profileThemeName')) {
                obj['profileThemeName'] = ApiClient.convertToType(data['profileThemeName'], 'String');
            }
            if (data.hasOwnProperty('psnDisplayName')) {
                obj['psnDisplayName'] = ApiClient.convertToType(data['psnDisplayName'], 'String');
            }
            if (data.hasOwnProperty('showActivity')) {
                obj['showActivity'] = ApiClient.convertToType(data['showActivity'], 'Boolean');
            }
            if (data.hasOwnProperty('showGroupMessaging')) {
                obj['showGroupMessaging'] = ApiClient.convertToType(data['showGroupMessaging'], 'Boolean');
            }
            if (data.hasOwnProperty('stadiaDisplayName')) {
                obj['stadiaDisplayName'] = ApiClient.convertToType(data['stadiaDisplayName'], 'String');
            }
            if (data.hasOwnProperty('statusDate')) {
                obj['statusDate'] = ApiClient.convertToType(data['statusDate'], 'Date');
            }
            if (data.hasOwnProperty('statusText')) {
                obj['statusText'] = ApiClient.convertToType(data['statusText'], 'String');
            }
            if (data.hasOwnProperty('steamDisplayName')) {
                obj['steamDisplayName'] = ApiClient.convertToType(data['steamDisplayName'], 'String');
            }
            if (data.hasOwnProperty('successMessageFlags')) {
                obj['successMessageFlags'] = ApiClient.convertToType(data['successMessageFlags'], 'Number');
            }
            if (data.hasOwnProperty('twitchDisplayName')) {
                obj['twitchDisplayName'] = ApiClient.convertToType(data['twitchDisplayName'], 'String');
            }
            if (data.hasOwnProperty('uniqueName')) {
                obj['uniqueName'] = ApiClient.convertToType(data['uniqueName'], 'String');
            }
            if (data.hasOwnProperty('userTitle')) {
                obj['userTitle'] = ApiClient.convertToType(data['userTitle'], 'Number');
            }
            if (data.hasOwnProperty('userTitleDisplay')) {
                obj['userTitleDisplay'] = ApiClient.convertToType(data['userTitleDisplay'], 'String');
            }
            if (data.hasOwnProperty('xboxDisplayName')) {
                obj['xboxDisplayName'] = ApiClient.convertToType(data['xboxDisplayName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserGeneralUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserGeneralUser</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['about'] && !(typeof data['about'] === 'string' || data['about'] instanceof String)) {
            throw new Error("Expected the field `about` to be a primitive type in the JSON string but got " + data['about']);
        }
        // ensure the json data is a string
        if (data['blizzardDisplayName'] && !(typeof data['blizzardDisplayName'] === 'string' || data['blizzardDisplayName'] instanceof String)) {
            throw new Error("Expected the field `blizzardDisplayName` to be a primitive type in the JSON string but got " + data['blizzardDisplayName']);
        }
        // ensure the json data is a string
        if (data['cachedBungieGlobalDisplayName'] && !(typeof data['cachedBungieGlobalDisplayName'] === 'string' || data['cachedBungieGlobalDisplayName'] instanceof String)) {
            throw new Error("Expected the field `cachedBungieGlobalDisplayName` to be a primitive type in the JSON string but got " + data['cachedBungieGlobalDisplayName']);
        }
        // validate the optional field `context`
        if (data['context']) { // data not null
          UserUserToUserContext.validateJSON(data['context']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['egsDisplayName'] && !(typeof data['egsDisplayName'] === 'string' || data['egsDisplayName'] instanceof String)) {
            throw new Error("Expected the field `egsDisplayName` to be a primitive type in the JSON string but got " + data['egsDisplayName']);
        }
        // ensure the json data is a string
        if (data['fbDisplayName'] && !(typeof data['fbDisplayName'] === 'string' || data['fbDisplayName'] instanceof String)) {
            throw new Error("Expected the field `fbDisplayName` to be a primitive type in the JSON string but got " + data['fbDisplayName']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['normalizedName'] && !(typeof data['normalizedName'] === 'string' || data['normalizedName'] instanceof String)) {
            throw new Error("Expected the field `normalizedName` to be a primitive type in the JSON string but got " + data['normalizedName']);
        }
        // ensure the json data is a string
        if (data['profilePicturePath'] && !(typeof data['profilePicturePath'] === 'string' || data['profilePicturePath'] instanceof String)) {
            throw new Error("Expected the field `profilePicturePath` to be a primitive type in the JSON string but got " + data['profilePicturePath']);
        }
        // ensure the json data is a string
        if (data['profilePictureWidePath'] && !(typeof data['profilePictureWidePath'] === 'string' || data['profilePictureWidePath'] instanceof String)) {
            throw new Error("Expected the field `profilePictureWidePath` to be a primitive type in the JSON string but got " + data['profilePictureWidePath']);
        }
        // ensure the json data is a string
        if (data['profileThemeName'] && !(typeof data['profileThemeName'] === 'string' || data['profileThemeName'] instanceof String)) {
            throw new Error("Expected the field `profileThemeName` to be a primitive type in the JSON string but got " + data['profileThemeName']);
        }
        // ensure the json data is a string
        if (data['psnDisplayName'] && !(typeof data['psnDisplayName'] === 'string' || data['psnDisplayName'] instanceof String)) {
            throw new Error("Expected the field `psnDisplayName` to be a primitive type in the JSON string but got " + data['psnDisplayName']);
        }
        // ensure the json data is a string
        if (data['stadiaDisplayName'] && !(typeof data['stadiaDisplayName'] === 'string' || data['stadiaDisplayName'] instanceof String)) {
            throw new Error("Expected the field `stadiaDisplayName` to be a primitive type in the JSON string but got " + data['stadiaDisplayName']);
        }
        // ensure the json data is a string
        if (data['statusText'] && !(typeof data['statusText'] === 'string' || data['statusText'] instanceof String)) {
            throw new Error("Expected the field `statusText` to be a primitive type in the JSON string but got " + data['statusText']);
        }
        // ensure the json data is a string
        if (data['steamDisplayName'] && !(typeof data['steamDisplayName'] === 'string' || data['steamDisplayName'] instanceof String)) {
            throw new Error("Expected the field `steamDisplayName` to be a primitive type in the JSON string but got " + data['steamDisplayName']);
        }
        // ensure the json data is a string
        if (data['twitchDisplayName'] && !(typeof data['twitchDisplayName'] === 'string' || data['twitchDisplayName'] instanceof String)) {
            throw new Error("Expected the field `twitchDisplayName` to be a primitive type in the JSON string but got " + data['twitchDisplayName']);
        }
        // ensure the json data is a string
        if (data['uniqueName'] && !(typeof data['uniqueName'] === 'string' || data['uniqueName'] instanceof String)) {
            throw new Error("Expected the field `uniqueName` to be a primitive type in the JSON string but got " + data['uniqueName']);
        }
        // ensure the json data is a string
        if (data['userTitleDisplay'] && !(typeof data['userTitleDisplay'] === 'string' || data['userTitleDisplay'] instanceof String)) {
            throw new Error("Expected the field `userTitleDisplay` to be a primitive type in the JSON string but got " + data['userTitleDisplay']);
        }
        // ensure the json data is a string
        if (data['xboxDisplayName'] && !(typeof data['xboxDisplayName'] === 'string' || data['xboxDisplayName'] instanceof String)) {
            throw new Error("Expected the field `xboxDisplayName` to be a primitive type in the JSON string but got " + data['xboxDisplayName']);
        }

        return true;
    }


}



/**
 * @member {String} about
 */
UserGeneralUser.prototype['about'] = undefined;

/**
 * @member {String} blizzardDisplayName
 */
UserGeneralUser.prototype['blizzardDisplayName'] = undefined;

/**
 * @member {String} cachedBungieGlobalDisplayName
 */
UserGeneralUser.prototype['cachedBungieGlobalDisplayName'] = undefined;

/**
 * @member {Number} cachedBungieGlobalDisplayNameCode
 */
UserGeneralUser.prototype['cachedBungieGlobalDisplayNameCode'] = undefined;

/**
 * @member {module:model/UserUserToUserContext} context
 */
UserGeneralUser.prototype['context'] = undefined;

/**
 * @member {String} displayName
 */
UserGeneralUser.prototype['displayName'] = undefined;

/**
 * @member {String} egsDisplayName
 */
UserGeneralUser.prototype['egsDisplayName'] = undefined;

/**
 * @member {String} fbDisplayName
 */
UserGeneralUser.prototype['fbDisplayName'] = undefined;

/**
 * @member {Date} firstAccess
 */
UserGeneralUser.prototype['firstAccess'] = undefined;

/**
 * @member {Boolean} isDeleted
 */
UserGeneralUser.prototype['isDeleted'] = undefined;

/**
 * @member {Number} lastBanReportId
 */
UserGeneralUser.prototype['lastBanReportId'] = undefined;

/**
 * @member {Date} lastUpdate
 */
UserGeneralUser.prototype['lastUpdate'] = undefined;

/**
 * @member {Number} legacyPortalUID
 */
UserGeneralUser.prototype['legacyPortalUID'] = undefined;

/**
 * @member {String} locale
 */
UserGeneralUser.prototype['locale'] = undefined;

/**
 * @member {Boolean} localeInheritDefault
 */
UserGeneralUser.prototype['localeInheritDefault'] = undefined;

/**
 * @member {Number} membershipId
 */
UserGeneralUser.prototype['membershipId'] = undefined;

/**
 * @member {String} normalizedName
 */
UserGeneralUser.prototype['normalizedName'] = undefined;

/**
 * @member {Date} profileBanExpire
 */
UserGeneralUser.prototype['profileBanExpire'] = undefined;

/**
 * @member {Number} profilePicture
 */
UserGeneralUser.prototype['profilePicture'] = undefined;

/**
 * @member {String} profilePicturePath
 */
UserGeneralUser.prototype['profilePicturePath'] = undefined;

/**
 * @member {String} profilePictureWidePath
 */
UserGeneralUser.prototype['profilePictureWidePath'] = undefined;

/**
 * @member {Number} profileTheme
 */
UserGeneralUser.prototype['profileTheme'] = undefined;

/**
 * @member {String} profileThemeName
 */
UserGeneralUser.prototype['profileThemeName'] = undefined;

/**
 * @member {String} psnDisplayName
 */
UserGeneralUser.prototype['psnDisplayName'] = undefined;

/**
 * @member {Boolean} showActivity
 */
UserGeneralUser.prototype['showActivity'] = undefined;

/**
 * @member {Boolean} showGroupMessaging
 */
UserGeneralUser.prototype['showGroupMessaging'] = undefined;

/**
 * @member {String} stadiaDisplayName
 */
UserGeneralUser.prototype['stadiaDisplayName'] = undefined;

/**
 * @member {Date} statusDate
 */
UserGeneralUser.prototype['statusDate'] = undefined;

/**
 * @member {String} statusText
 */
UserGeneralUser.prototype['statusText'] = undefined;

/**
 * @member {String} steamDisplayName
 */
UserGeneralUser.prototype['steamDisplayName'] = undefined;

/**
 * @member {Number} successMessageFlags
 */
UserGeneralUser.prototype['successMessageFlags'] = undefined;

/**
 * @member {String} twitchDisplayName
 */
UserGeneralUser.prototype['twitchDisplayName'] = undefined;

/**
 * @member {String} uniqueName
 */
UserGeneralUser.prototype['uniqueName'] = undefined;

/**
 * @member {Number} userTitle
 */
UserGeneralUser.prototype['userTitle'] = undefined;

/**
 * @member {String} userTitleDisplay
 */
UserGeneralUser.prototype['userTitleDisplay'] = undefined;

/**
 * @member {String} xboxDisplayName
 */
UserGeneralUser.prototype['xboxDisplayName'] = undefined;






export default UserGeneralUser;

