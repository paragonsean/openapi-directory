/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InterpolationInterpolationPointFloat from './InterpolationInterpolationPointFloat';

/**
 * The DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition model module.
 * @module model/DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition</code>.
     * These are pre-constructed collections of data that can be used to determine the Level Requirement for an item given a Progression to be tested (such as the Character&#39;s level).  For instance, say a character receives a new Auto Rifle, and that Auto Rifle&#39;s DestinyInventoryItemDefinition.quality.progressionLevelRequirementHash property is pointing at one of these DestinyProgressionLevelRequirementDefinitions. Let&#39;s pretend also that the progressionHash it is pointing at is the Character Level progression. In that situation, the character&#39;s level will be used to interpolate a value in the requirementCurve property. The value picked up from that interpolation will be the required level for the item.
     * @alias module:model/DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition
     */
    constructor() { 
        
        DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition} The populated <code>DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition();

            if (data.hasOwnProperty('hash')) {
                obj['hash'] = ApiClient.convertToType(data['hash'], 'Number');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('progressionHash')) {
                obj['progressionHash'] = ApiClient.convertToType(data['progressionHash'], 'Number');
            }
            if (data.hasOwnProperty('redacted')) {
                obj['redacted'] = ApiClient.convertToType(data['redacted'], 'Boolean');
            }
            if (data.hasOwnProperty('requirementCurve')) {
                obj['requirementCurve'] = ApiClient.convertToType(data['requirementCurve'], [InterpolationInterpolationPointFloat]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition</code>.
     */
    static validateJSON(data) {
        if (data['requirementCurve']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['requirementCurve'])) {
                throw new Error("Expected the field `requirementCurve` to be an array in the JSON data but got " + data['requirementCurve']);
            }
            // validate the optional field `requirementCurve` (array)
            for (const item of data['requirementCurve']) {
                InterpolationInterpolationPointFloat.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
 * @member {Number} hash
 */
DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition.prototype['hash'] = undefined;

/**
 * The index of the entity as it was found in the investment tables.
 * @member {Number} index
 */
DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition.prototype['index'] = undefined;

/**
 * The progression whose level should be used to determine the level requirement.  Look up the DestinyProgressionDefinition with this hash for more information about the progression in question.
 * @member {Number} progressionHash
 */
DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition.prototype['progressionHash'] = undefined;

/**
 * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
 * @member {Boolean} redacted
 */
DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition.prototype['redacted'] = undefined;

/**
 * A curve of level requirements, weighted by the related progressions' level.  Interpolate against this curve with the character's progression level to determine what the level requirement of the generated item that is using this data will be.
 * @member {Array.<module:model/InterpolationInterpolationPointFloat>} requirementCurve
 */
DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition.prototype['requirementCurve'] = undefined;






export default DestinyDefinitionsProgressionDestinyProgressionLevelRequirementDefinition;

