/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserModelsGetCredentialTypesForAccountResponse model module.
 * @module model/UserModelsGetCredentialTypesForAccountResponse
 * @version 2.18.0
 */
class UserModelsGetCredentialTypesForAccountResponse {
    /**
     * Constructs a new <code>UserModelsGetCredentialTypesForAccountResponse</code>.
     * @alias module:model/UserModelsGetCredentialTypesForAccountResponse
     */
    constructor() { 
        
        UserModelsGetCredentialTypesForAccountResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserModelsGetCredentialTypesForAccountResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserModelsGetCredentialTypesForAccountResponse} obj Optional instance to populate.
     * @return {module:model/UserModelsGetCredentialTypesForAccountResponse} The populated <code>UserModelsGetCredentialTypesForAccountResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserModelsGetCredentialTypesForAccountResponse();

            if (data.hasOwnProperty('credentialAsString')) {
                obj['credentialAsString'] = ApiClient.convertToType(data['credentialAsString'], 'String');
            }
            if (data.hasOwnProperty('credentialDisplayName')) {
                obj['credentialDisplayName'] = ApiClient.convertToType(data['credentialDisplayName'], 'String');
            }
            if (data.hasOwnProperty('credentialType')) {
                obj['credentialType'] = ApiClient.convertToType(data['credentialType'], 'Number');
            }
            if (data.hasOwnProperty('isPublic')) {
                obj['isPublic'] = ApiClient.convertToType(data['isPublic'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserModelsGetCredentialTypesForAccountResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserModelsGetCredentialTypesForAccountResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['credentialAsString'] && !(typeof data['credentialAsString'] === 'string' || data['credentialAsString'] instanceof String)) {
            throw new Error("Expected the field `credentialAsString` to be a primitive type in the JSON string but got " + data['credentialAsString']);
        }
        // ensure the json data is a string
        if (data['credentialDisplayName'] && !(typeof data['credentialDisplayName'] === 'string' || data['credentialDisplayName'] instanceof String)) {
            throw new Error("Expected the field `credentialDisplayName` to be a primitive type in the JSON string but got " + data['credentialDisplayName']);
        }

        return true;
    }


}



/**
 * @member {String} credentialAsString
 */
UserModelsGetCredentialTypesForAccountResponse.prototype['credentialAsString'] = undefined;

/**
 * @member {String} credentialDisplayName
 */
UserModelsGetCredentialTypesForAccountResponse.prototype['credentialDisplayName'] = undefined;

/**
 * @member {Number} credentialType
 */
UserModelsGetCredentialTypesForAccountResponse.prototype['credentialType'] = undefined;

/**
 * @member {Boolean} isPublic
 */
UserModelsGetCredentialTypesForAccountResponse.prototype['isPublic'] = undefined;






export default UserModelsGetCredentialTypesForAccountResponse;

