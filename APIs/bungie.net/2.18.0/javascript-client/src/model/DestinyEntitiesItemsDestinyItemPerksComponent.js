/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyPerksDestinyPerkReference from './DestinyPerksDestinyPerkReference';

/**
 * The DestinyEntitiesItemsDestinyItemPerksComponent model module.
 * @module model/DestinyEntitiesItemsDestinyItemPerksComponent
 * @version 2.18.0
 */
class DestinyEntitiesItemsDestinyItemPerksComponent {
    /**
     * Constructs a new <code>DestinyEntitiesItemsDestinyItemPerksComponent</code>.
     * Instanced items can have perks: benefits that the item bestows.  These are related to DestinySandboxPerkDefinition, and sometimes - but not always - have human readable info. When they do, they are the icons and text that you see in an item&#39;s tooltip.  Talent Grids, Sockets, and the item itself can apply Perks, which are then summarized here for your convenience.
     * @alias module:model/DestinyEntitiesItemsDestinyItemPerksComponent
     */
    constructor() { 
        
        DestinyEntitiesItemsDestinyItemPerksComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyEntitiesItemsDestinyItemPerksComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyEntitiesItemsDestinyItemPerksComponent} obj Optional instance to populate.
     * @return {module:model/DestinyEntitiesItemsDestinyItemPerksComponent} The populated <code>DestinyEntitiesItemsDestinyItemPerksComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyEntitiesItemsDestinyItemPerksComponent();

            if (data.hasOwnProperty('perks')) {
                obj['perks'] = ApiClient.convertToType(data['perks'], [DestinyPerksDestinyPerkReference]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyEntitiesItemsDestinyItemPerksComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyEntitiesItemsDestinyItemPerksComponent</code>.
     */
    static validateJSON(data) {
        if (data['perks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['perks'])) {
                throw new Error("Expected the field `perks` to be an array in the JSON data but got " + data['perks']);
            }
            // validate the optional field `perks` (array)
            for (const item of data['perks']) {
                DestinyPerksDestinyPerkReference.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of perks to display in an item tooltip - and whether or not they have been activated.
 * @member {Array.<module:model/DestinyPerksDestinyPerkReference>} perks
 */
DestinyEntitiesItemsDestinyItemPerksComponent.prototype['perks'] = undefined;






export default DestinyEntitiesItemsDestinyItemPerksComponent;

