/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition from './DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition';

/**
 * The DestinyDefinitionsDestinyDisplayCategoryDefinition model module.
 * @module model/DestinyDefinitionsDestinyDisplayCategoryDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyDisplayCategoryDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyDisplayCategoryDefinition</code>.
     * Display Categories are different from \&quot;categories\&quot; in that these are specifically for visual grouping and display of categories in Vendor UI. The \&quot;categories\&quot; structure is for validation of the contained items, and can be categorized entirely separately from \&quot;Display Categories\&quot;, there need be and often will be no meaningful relationship between the two.
     * @alias module:model/DestinyDefinitionsDestinyDisplayCategoryDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyDisplayCategoryDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyDisplayCategoryDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyDisplayCategoryDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyDisplayCategoryDefinition} The populated <code>DestinyDefinitionsDestinyDisplayCategoryDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyDisplayCategoryDefinition();

            if (data.hasOwnProperty('displayCategoryHash')) {
                obj['displayCategoryHash'] = ApiClient.convertToType(data['displayCategoryHash'], 'Number');
            }
            if (data.hasOwnProperty('displayInBanner')) {
                obj['displayInBanner'] = ApiClient.convertToType(data['displayInBanner'], 'Boolean');
            }
            if (data.hasOwnProperty('displayProperties')) {
                obj['displayProperties'] = DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.constructFromObject(data['displayProperties']);
            }
            if (data.hasOwnProperty('displayStyleHash')) {
                obj['displayStyleHash'] = ApiClient.convertToType(data['displayStyleHash'], 'Number');
            }
            if (data.hasOwnProperty('displayStyleIdentifier')) {
                obj['displayStyleIdentifier'] = ApiClient.convertToType(data['displayStyleIdentifier'], 'String');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('progressionHash')) {
                obj['progressionHash'] = ApiClient.convertToType(data['progressionHash'], 'Number');
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyDisplayCategoryDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyDisplayCategoryDefinition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `displayProperties`
        if (data['displayProperties']) { // data not null
          DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJSON(data['displayProperties']);
        }
        // ensure the json data is a string
        if (data['displayStyleIdentifier'] && !(typeof data['displayStyleIdentifier'] === 'string' || data['displayStyleIdentifier'] instanceof String)) {
            throw new Error("Expected the field `displayStyleIdentifier` to be a primitive type in the JSON string but got " + data['displayStyleIdentifier']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }

        return true;
    }


}



/**
 * @member {Number} displayCategoryHash
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['displayCategoryHash'] = undefined;

/**
 * If true, this category should be displayed in the \"Banner\" section of the vendor's UI.
 * @member {Boolean} displayInBanner
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['displayInBanner'] = undefined;

/**
 * @member {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} displayProperties
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['displayProperties'] = undefined;

/**
 * An indicator of how the category will be displayed in the UI. It's up to you to do something cool or interesting in response to this, or just to treat it as a normal category.
 * @member {Number} displayStyleHash
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['displayStyleHash'] = undefined;

/**
 * An indicator of how the category will be displayed in the UI. It's up to you to do something cool or interesting in response to this, or just to treat it as a normal category.
 * @member {String} displayStyleIdentifier
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['displayStyleIdentifier'] = undefined;

/**
 * A string identifier for the display category.
 * @member {String} identifier
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['identifier'] = undefined;

/**
 * @member {Number} index
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['index'] = undefined;

/**
 * If it exists, this is the hash identifier of a DestinyProgressionDefinition that represents the progression to show on this display category.  Specific categories can now have thier own distinct progression, apparently. So that's cool.
 * @member {Number} progressionHash
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['progressionHash'] = undefined;

/**
 * If this category sorts items in a nonstandard way, this will be the way we sort.
 * @member {Number} sortOrder
 */
DestinyDefinitionsDestinyDisplayCategoryDefinition.prototype['sortOrder'] = undefined;






export default DestinyDefinitionsDestinyDisplayCategoryDefinition;

