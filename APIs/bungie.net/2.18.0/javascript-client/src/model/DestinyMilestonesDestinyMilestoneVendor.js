/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyMilestonesDestinyMilestoneVendor model module.
 * @module model/DestinyMilestonesDestinyMilestoneVendor
 * @version 2.18.0
 */
class DestinyMilestonesDestinyMilestoneVendor {
    /**
     * Constructs a new <code>DestinyMilestonesDestinyMilestoneVendor</code>.
     * If a Milestone has one or more Vendors that are relevant to it, this will contain information about that vendor that you can choose to show.
     * @alias module:model/DestinyMilestonesDestinyMilestoneVendor
     */
    constructor() { 
        
        DestinyMilestonesDestinyMilestoneVendor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyMilestonesDestinyMilestoneVendor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyMilestonesDestinyMilestoneVendor} obj Optional instance to populate.
     * @return {module:model/DestinyMilestonesDestinyMilestoneVendor} The populated <code>DestinyMilestonesDestinyMilestoneVendor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyMilestonesDestinyMilestoneVendor();

            if (data.hasOwnProperty('previewItemHash')) {
                obj['previewItemHash'] = ApiClient.convertToType(data['previewItemHash'], 'Number');
            }
            if (data.hasOwnProperty('vendorHash')) {
                obj['vendorHash'] = ApiClient.convertToType(data['vendorHash'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyMilestonesDestinyMilestoneVendor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyMilestonesDestinyMilestoneVendor</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * If this vendor is featuring a specific item for this event, this will be the hash identifier of that item. I'm taking bets now on how long we go before this needs to be a list or some other, more complex representation instead and I deprecate this too. I'm going to go with 5 months. Calling it now, 2017-09-14 at 9:46pm PST.
 * @member {Number} previewItemHash
 */
DestinyMilestonesDestinyMilestoneVendor.prototype['previewItemHash'] = undefined;

/**
 * The hash identifier of the Vendor related to this Milestone. You can show useful things from this, such as thier Faction icon or whatever you might care about.
 * @member {Number} vendorHash
 */
DestinyMilestonesDestinyMilestoneVendor.prototype['vendorHash'] = undefined;






export default DestinyMilestonesDestinyMilestoneVendor;

