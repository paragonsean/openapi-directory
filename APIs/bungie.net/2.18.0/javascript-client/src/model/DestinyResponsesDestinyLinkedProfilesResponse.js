/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyResponsesDestinyErrorProfile from './DestinyResponsesDestinyErrorProfile';
import DestinyResponsesDestinyProfileUserInfoCard from './DestinyResponsesDestinyProfileUserInfoCard';
import UserUserInfoCard from './UserUserInfoCard';

/**
 * The DestinyResponsesDestinyLinkedProfilesResponse model module.
 * @module model/DestinyResponsesDestinyLinkedProfilesResponse
 * @version 2.18.0
 */
class DestinyResponsesDestinyLinkedProfilesResponse {
    /**
     * Constructs a new <code>DestinyResponsesDestinyLinkedProfilesResponse</code>.
     * I know what you seek. You seek linked accounts. Found them, you have.  This contract returns a minimal amount of data about Destiny Accounts that are linked through your Bungie.Net account. We will not return accounts in this response whose
     * @alias module:model/DestinyResponsesDestinyLinkedProfilesResponse
     */
    constructor() { 
        
        DestinyResponsesDestinyLinkedProfilesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyResponsesDestinyLinkedProfilesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyResponsesDestinyLinkedProfilesResponse} obj Optional instance to populate.
     * @return {module:model/DestinyResponsesDestinyLinkedProfilesResponse} The populated <code>DestinyResponsesDestinyLinkedProfilesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyResponsesDestinyLinkedProfilesResponse();

            if (data.hasOwnProperty('bnetMembership')) {
                obj['bnetMembership'] = ApiClient.convertToType(data['bnetMembership'], UserUserInfoCard);
            }
            if (data.hasOwnProperty('profiles')) {
                obj['profiles'] = ApiClient.convertToType(data['profiles'], [DestinyResponsesDestinyProfileUserInfoCard]);
            }
            if (data.hasOwnProperty('profilesWithErrors')) {
                obj['profilesWithErrors'] = ApiClient.convertToType(data['profilesWithErrors'], [DestinyResponsesDestinyErrorProfile]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyResponsesDestinyLinkedProfilesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyResponsesDestinyLinkedProfilesResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bnetMembership`
        if (data['bnetMembership']) { // data not null
          UserUserInfoCard.validateJSON(data['bnetMembership']);
        }
        if (data['profiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['profiles'])) {
                throw new Error("Expected the field `profiles` to be an array in the JSON data but got " + data['profiles']);
            }
            // validate the optional field `profiles` (array)
            for (const item of data['profiles']) {
                DestinyResponsesDestinyProfileUserInfoCard.validateJSON(item);
            };
        }
        if (data['profilesWithErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['profilesWithErrors'])) {
                throw new Error("Expected the field `profilesWithErrors` to be an array in the JSON data but got " + data['profilesWithErrors']);
            }
            // validate the optional field `profilesWithErrors` (array)
            for (const item of data['profilesWithErrors']) {
                DestinyResponsesDestinyErrorProfile.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * If the requested membership had a linked Bungie.Net membership ID, this is the basic information about that BNet account.  I know, Tetron; I know this is mixing UserServices concerns with DestinyServices concerns. But it's so damn convenient! https://www.youtube.com/watch?v=X5R-bB-gKVI
 * @member {module:model/UserUserInfoCard} bnetMembership
 */
DestinyResponsesDestinyLinkedProfilesResponse.prototype['bnetMembership'] = undefined;

/**
 * Any Destiny account for whom we could successfully pull characters will be returned here, as the Platform-level summary of user data. (no character data, no Destiny account data other than the Membership ID and Type so you can make further queries)
 * @member {Array.<module:model/DestinyResponsesDestinyProfileUserInfoCard>} profiles
 */
DestinyResponsesDestinyLinkedProfilesResponse.prototype['profiles'] = undefined;

/**
 * This is brief summary info for profiles that we believe have valid Destiny info, but who failed to return data for some other reason and thus we know that subsequent calls for their info will also fail.
 * @member {Array.<module:model/DestinyResponsesDestinyErrorProfile>} profilesWithErrors
 */
DestinyResponsesDestinyLinkedProfilesResponse.prototype['profilesWithErrors'] = undefined;






export default DestinyResponsesDestinyLinkedProfilesResponse;

