/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserUserInfoCard from './UserUserInfoCard';

/**
 * The DestinyEntitiesProfilesDestinyProfileComponent model module.
 * @module model/DestinyEntitiesProfilesDestinyProfileComponent
 * @version 2.18.0
 */
class DestinyEntitiesProfilesDestinyProfileComponent {
    /**
     * Constructs a new <code>DestinyEntitiesProfilesDestinyProfileComponent</code>.
     * The most essential summary information about a Profile (in Destiny 1, we called these \&quot;Accounts\&quot;).
     * @alias module:model/DestinyEntitiesProfilesDestinyProfileComponent
     */
    constructor() { 
        
        DestinyEntitiesProfilesDestinyProfileComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyEntitiesProfilesDestinyProfileComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyEntitiesProfilesDestinyProfileComponent} obj Optional instance to populate.
     * @return {module:model/DestinyEntitiesProfilesDestinyProfileComponent} The populated <code>DestinyEntitiesProfilesDestinyProfileComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyEntitiesProfilesDestinyProfileComponent();

            if (data.hasOwnProperty('activeEventCardHash')) {
                obj['activeEventCardHash'] = ApiClient.convertToType(data['activeEventCardHash'], 'Number');
            }
            if (data.hasOwnProperty('characterIds')) {
                obj['characterIds'] = ApiClient.convertToType(data['characterIds'], ['Number']);
            }
            if (data.hasOwnProperty('currentGuardianRank')) {
                obj['currentGuardianRank'] = ApiClient.convertToType(data['currentGuardianRank'], 'Number');
            }
            if (data.hasOwnProperty('currentSeasonHash')) {
                obj['currentSeasonHash'] = ApiClient.convertToType(data['currentSeasonHash'], 'Number');
            }
            if (data.hasOwnProperty('currentSeasonRewardPowerCap')) {
                obj['currentSeasonRewardPowerCap'] = ApiClient.convertToType(data['currentSeasonRewardPowerCap'], 'Number');
            }
            if (data.hasOwnProperty('dateLastPlayed')) {
                obj['dateLastPlayed'] = ApiClient.convertToType(data['dateLastPlayed'], 'Date');
            }
            if (data.hasOwnProperty('eventCardHashesOwned')) {
                obj['eventCardHashesOwned'] = ApiClient.convertToType(data['eventCardHashesOwned'], ['Number']);
            }
            if (data.hasOwnProperty('lifetimeHighestGuardianRank')) {
                obj['lifetimeHighestGuardianRank'] = ApiClient.convertToType(data['lifetimeHighestGuardianRank'], 'Number');
            }
            if (data.hasOwnProperty('seasonHashes')) {
                obj['seasonHashes'] = ApiClient.convertToType(data['seasonHashes'], ['Number']);
            }
            if (data.hasOwnProperty('userInfo')) {
                obj['userInfo'] = ApiClient.convertToType(data['userInfo'], UserUserInfoCard);
            }
            if (data.hasOwnProperty('versionsOwned')) {
                obj['versionsOwned'] = ApiClient.convertToType(data['versionsOwned'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyEntitiesProfilesDestinyProfileComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyEntitiesProfilesDestinyProfileComponent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['characterIds'])) {
            throw new Error("Expected the field `characterIds` to be an array in the JSON data but got " + data['characterIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['eventCardHashesOwned'])) {
            throw new Error("Expected the field `eventCardHashesOwned` to be an array in the JSON data but got " + data['eventCardHashesOwned']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['seasonHashes'])) {
            throw new Error("Expected the field `seasonHashes` to be an array in the JSON data but got " + data['seasonHashes']);
        }
        // validate the optional field `userInfo`
        if (data['userInfo']) { // data not null
          UserUserInfoCard.validateJSON(data['userInfo']);
        }

        return true;
    }


}



/**
 * If populated, this is a reference to the event card that is currently active.
 * @member {Number} activeEventCardHash
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['activeEventCardHash'] = undefined;

/**
 * A list of the character IDs, for further querying on your part.
 * @member {Array.<Number>} characterIds
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['characterIds'] = undefined;

/**
 * The 'current' Guardian Rank value, which starts at rank 1.
 * @member {Number} currentGuardianRank
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['currentGuardianRank'] = undefined;

/**
 * If populated, this is a reference to the season that is currently active.
 * @member {Number} currentSeasonHash
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['currentSeasonHash'] = undefined;

/**
 * If populated, this is the reward power cap for the current season.
 * @member {Number} currentSeasonRewardPowerCap
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['currentSeasonRewardPowerCap'] = undefined;

/**
 * The last time the user played with any character on this Profile.
 * @member {Date} dateLastPlayed
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['dateLastPlayed'] = undefined;

/**
 * A list of hashes for event cards that a profile owns. Unlike most values in versionsOwned, these stay with the profile across all platforms.
 * @member {Array.<Number>} eventCardHashesOwned
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['eventCardHashesOwned'] = undefined;

/**
 * The 'lifetime highest' Guardian Rank value, which starts at rank 1.
 * @member {Number} lifetimeHighestGuardianRank
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['lifetimeHighestGuardianRank'] = undefined;

/**
 * A list of seasons that this profile owns. Unlike versionsOwned, these stay with the profile across Platforms, and thus will be valid.   It turns out that Stadia Pro subscriptions will give access to seasons but only while playing on Stadia and with an active subscription. So some users (users who have Stadia Pro but choose to play on some other platform) won't see these as available: it will be whatever seasons are available for the platform on which they last played.
 * @member {Array.<Number>} seasonHashes
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['seasonHashes'] = undefined;

/**
 * If you need to render the Profile (their platform name, icon, etc...) somewhere, this property contains that information.
 * @member {module:model/UserUserInfoCard} userInfo
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['userInfo'] = undefined;

/**
 * If you want to know what expansions they own, this will contain that data.   IMPORTANT: This field may not return the data you're interested in for Cross-Saved users. It returns the last ownership data we saw for this account - which is to say, what they've purchased on the platform on which they last played, which now could be a different platform.   If you don't care about per-platform ownership and only care about whatever platform it seems they are playing on most recently, then this should be \"good enough.\" Otherwise, this should be considered deprecated. We do not have a good alternative to provide at this time with platform specific ownership data for DLC.
 * @member {Number} versionsOwned
 */
DestinyEntitiesProfilesDestinyProfileComponent.prototype['versionsOwned'] = undefined;






export default DestinyEntitiesProfilesDestinyProfileComponent;

