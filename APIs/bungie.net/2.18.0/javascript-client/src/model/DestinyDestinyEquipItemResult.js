/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDestinyEquipItemResult model module.
 * @module model/DestinyDestinyEquipItemResult
 * @version 2.18.0
 */
class DestinyDestinyEquipItemResult {
    /**
     * Constructs a new <code>DestinyDestinyEquipItemResult</code>.
     * The results of an Equipping operation performed through the Destiny API.
     * @alias module:model/DestinyDestinyEquipItemResult
     */
    constructor() { 
        
        DestinyDestinyEquipItemResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDestinyEquipItemResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDestinyEquipItemResult} obj Optional instance to populate.
     * @return {module:model/DestinyDestinyEquipItemResult} The populated <code>DestinyDestinyEquipItemResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDestinyEquipItemResult();

            if (data.hasOwnProperty('equipStatus')) {
                obj['equipStatus'] = ApiClient.convertToType(data['equipStatus'], 'Number');
            }
            if (data.hasOwnProperty('itemInstanceId')) {
                obj['itemInstanceId'] = ApiClient.convertToType(data['itemInstanceId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDestinyEquipItemResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDestinyEquipItemResult</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A PlatformErrorCodes enum indicating whether it succeeded, and if it failed why.
 * @member {Number} equipStatus
 */
DestinyDestinyEquipItemResult.prototype['equipStatus'] = undefined;

/**
 * The instance ID of the item in question (all items that can be equipped must, but definition, be Instanced and thus have an Instance ID that you can use to refer to them)
 * @member {Number} itemInstanceId
 */
DestinyDestinyEquipItemResult.prototype['itemInstanceId'] = undefined;






export default DestinyDestinyEquipItemResult;

