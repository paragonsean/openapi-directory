/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommonModelsCoreSetting from './CommonModelsCoreSetting';
import CommonModelsCoreSystem from './CommonModelsCoreSystem';
import CommonModelsDestiny2CoreSettings from './CommonModelsDestiny2CoreSettings';
import UserEmailSettings from './UserEmailSettings';

/**
 * The CommonModelsCoreSettingsConfiguration model module.
 * @module model/CommonModelsCoreSettingsConfiguration
 * @version 2.18.0
 */
class CommonModelsCoreSettingsConfiguration {
    /**
     * Constructs a new <code>CommonModelsCoreSettingsConfiguration</code>.
     * @alias module:model/CommonModelsCoreSettingsConfiguration
     */
    constructor() { 
        
        CommonModelsCoreSettingsConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommonModelsCoreSettingsConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommonModelsCoreSettingsConfiguration} obj Optional instance to populate.
     * @return {module:model/CommonModelsCoreSettingsConfiguration} The populated <code>CommonModelsCoreSettingsConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonModelsCoreSettingsConfiguration();

            if (data.hasOwnProperty('clanBannerDecalColors')) {
                obj['clanBannerDecalColors'] = ApiClient.convertToType(data['clanBannerDecalColors'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('clanBannerDecals')) {
                obj['clanBannerDecals'] = ApiClient.convertToType(data['clanBannerDecals'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('clanBannerGonfalonColors')) {
                obj['clanBannerGonfalonColors'] = ApiClient.convertToType(data['clanBannerGonfalonColors'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('clanBannerGonfalonDetailColors')) {
                obj['clanBannerGonfalonDetailColors'] = ApiClient.convertToType(data['clanBannerGonfalonDetailColors'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('clanBannerGonfalonDetails')) {
                obj['clanBannerGonfalonDetails'] = ApiClient.convertToType(data['clanBannerGonfalonDetails'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('clanBannerGonfalons')) {
                obj['clanBannerGonfalons'] = ApiClient.convertToType(data['clanBannerGonfalons'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('clanBannerStandards')) {
                obj['clanBannerStandards'] = ApiClient.convertToType(data['clanBannerStandards'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('defaultGroupTheme')) {
                obj['defaultGroupTheme'] = CommonModelsCoreSetting.constructFromObject(data['defaultGroupTheme']);
            }
            if (data.hasOwnProperty('destiny2CoreSettings')) {
                obj['destiny2CoreSettings'] = CommonModelsDestiny2CoreSettings.constructFromObject(data['destiny2CoreSettings']);
            }
            if (data.hasOwnProperty('destinyMembershipTypes')) {
                obj['destinyMembershipTypes'] = ApiClient.convertToType(data['destinyMembershipTypes'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('emailSettings')) {
                obj['emailSettings'] = UserEmailSettings.constructFromObject(data['emailSettings']);
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('fireteamActivities')) {
                obj['fireteamActivities'] = ApiClient.convertToType(data['fireteamActivities'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('forumCategories')) {
                obj['forumCategories'] = ApiClient.convertToType(data['forumCategories'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('groupAvatars')) {
                obj['groupAvatars'] = ApiClient.convertToType(data['groupAvatars'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('ignoreReasons')) {
                obj['ignoreReasons'] = ApiClient.convertToType(data['ignoreReasons'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('recruitmentActivities')) {
                obj['recruitmentActivities'] = ApiClient.convertToType(data['recruitmentActivities'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('recruitmentMiscTags')) {
                obj['recruitmentMiscTags'] = ApiClient.convertToType(data['recruitmentMiscTags'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('recruitmentPlatformTags')) {
                obj['recruitmentPlatformTags'] = ApiClient.convertToType(data['recruitmentPlatformTags'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('systemContentLocales')) {
                obj['systemContentLocales'] = ApiClient.convertToType(data['systemContentLocales'], [CommonModelsCoreSetting]);
            }
            if (data.hasOwnProperty('systems')) {
                obj['systems'] = ApiClient.convertToType(data['systems'], {'String': CommonModelsCoreSystem});
            }
            if (data.hasOwnProperty('userContentLocales')) {
                obj['userContentLocales'] = ApiClient.convertToType(data['userContentLocales'], [CommonModelsCoreSetting]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommonModelsCoreSettingsConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommonModelsCoreSettingsConfiguration</code>.
     */
    static validateJSON(data) {
        if (data['clanBannerDecalColors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clanBannerDecalColors'])) {
                throw new Error("Expected the field `clanBannerDecalColors` to be an array in the JSON data but got " + data['clanBannerDecalColors']);
            }
            // validate the optional field `clanBannerDecalColors` (array)
            for (const item of data['clanBannerDecalColors']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['clanBannerDecals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clanBannerDecals'])) {
                throw new Error("Expected the field `clanBannerDecals` to be an array in the JSON data but got " + data['clanBannerDecals']);
            }
            // validate the optional field `clanBannerDecals` (array)
            for (const item of data['clanBannerDecals']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['clanBannerGonfalonColors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clanBannerGonfalonColors'])) {
                throw new Error("Expected the field `clanBannerGonfalonColors` to be an array in the JSON data but got " + data['clanBannerGonfalonColors']);
            }
            // validate the optional field `clanBannerGonfalonColors` (array)
            for (const item of data['clanBannerGonfalonColors']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['clanBannerGonfalonDetailColors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clanBannerGonfalonDetailColors'])) {
                throw new Error("Expected the field `clanBannerGonfalonDetailColors` to be an array in the JSON data but got " + data['clanBannerGonfalonDetailColors']);
            }
            // validate the optional field `clanBannerGonfalonDetailColors` (array)
            for (const item of data['clanBannerGonfalonDetailColors']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['clanBannerGonfalonDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clanBannerGonfalonDetails'])) {
                throw new Error("Expected the field `clanBannerGonfalonDetails` to be an array in the JSON data but got " + data['clanBannerGonfalonDetails']);
            }
            // validate the optional field `clanBannerGonfalonDetails` (array)
            for (const item of data['clanBannerGonfalonDetails']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['clanBannerGonfalons']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clanBannerGonfalons'])) {
                throw new Error("Expected the field `clanBannerGonfalons` to be an array in the JSON data but got " + data['clanBannerGonfalons']);
            }
            // validate the optional field `clanBannerGonfalons` (array)
            for (const item of data['clanBannerGonfalons']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['clanBannerStandards']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clanBannerStandards'])) {
                throw new Error("Expected the field `clanBannerStandards` to be an array in the JSON data but got " + data['clanBannerStandards']);
            }
            // validate the optional field `clanBannerStandards` (array)
            for (const item of data['clanBannerStandards']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        // validate the optional field `defaultGroupTheme`
        if (data['defaultGroupTheme']) { // data not null
          CommonModelsCoreSetting.validateJSON(data['defaultGroupTheme']);
        }
        // validate the optional field `destiny2CoreSettings`
        if (data['destiny2CoreSettings']) { // data not null
          CommonModelsDestiny2CoreSettings.validateJSON(data['destiny2CoreSettings']);
        }
        if (data['destinyMembershipTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinyMembershipTypes'])) {
                throw new Error("Expected the field `destinyMembershipTypes` to be an array in the JSON data but got " + data['destinyMembershipTypes']);
            }
            // validate the optional field `destinyMembershipTypes` (array)
            for (const item of data['destinyMembershipTypes']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        // validate the optional field `emailSettings`
        if (data['emailSettings']) { // data not null
          UserEmailSettings.validateJSON(data['emailSettings']);
        }
        // ensure the json data is a string
        if (data['environment'] && !(typeof data['environment'] === 'string' || data['environment'] instanceof String)) {
            throw new Error("Expected the field `environment` to be a primitive type in the JSON string but got " + data['environment']);
        }
        if (data['fireteamActivities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fireteamActivities'])) {
                throw new Error("Expected the field `fireteamActivities` to be an array in the JSON data but got " + data['fireteamActivities']);
            }
            // validate the optional field `fireteamActivities` (array)
            for (const item of data['fireteamActivities']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['forumCategories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['forumCategories'])) {
                throw new Error("Expected the field `forumCategories` to be an array in the JSON data but got " + data['forumCategories']);
            }
            // validate the optional field `forumCategories` (array)
            for (const item of data['forumCategories']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['groupAvatars']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groupAvatars'])) {
                throw new Error("Expected the field `groupAvatars` to be an array in the JSON data but got " + data['groupAvatars']);
            }
            // validate the optional field `groupAvatars` (array)
            for (const item of data['groupAvatars']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['ignoreReasons']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ignoreReasons'])) {
                throw new Error("Expected the field `ignoreReasons` to be an array in the JSON data but got " + data['ignoreReasons']);
            }
            // validate the optional field `ignoreReasons` (array)
            for (const item of data['ignoreReasons']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['recruitmentActivities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recruitmentActivities'])) {
                throw new Error("Expected the field `recruitmentActivities` to be an array in the JSON data but got " + data['recruitmentActivities']);
            }
            // validate the optional field `recruitmentActivities` (array)
            for (const item of data['recruitmentActivities']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['recruitmentMiscTags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recruitmentMiscTags'])) {
                throw new Error("Expected the field `recruitmentMiscTags` to be an array in the JSON data but got " + data['recruitmentMiscTags']);
            }
            // validate the optional field `recruitmentMiscTags` (array)
            for (const item of data['recruitmentMiscTags']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['recruitmentPlatformTags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recruitmentPlatformTags'])) {
                throw new Error("Expected the field `recruitmentPlatformTags` to be an array in the JSON data but got " + data['recruitmentPlatformTags']);
            }
            // validate the optional field `recruitmentPlatformTags` (array)
            for (const item of data['recruitmentPlatformTags']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['systemContentLocales']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['systemContentLocales'])) {
                throw new Error("Expected the field `systemContentLocales` to be an array in the JSON data but got " + data['systemContentLocales']);
            }
            // validate the optional field `systemContentLocales` (array)
            for (const item of data['systemContentLocales']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }
        if (data['userContentLocales']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['userContentLocales'])) {
                throw new Error("Expected the field `userContentLocales` to be an array in the JSON data but got " + data['userContentLocales']);
            }
            // validate the optional field `userContentLocales` (array)
            for (const item of data['userContentLocales']) {
                CommonModelsCoreSetting.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} clanBannerDecalColors
 */
CommonModelsCoreSettingsConfiguration.prototype['clanBannerDecalColors'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} clanBannerDecals
 */
CommonModelsCoreSettingsConfiguration.prototype['clanBannerDecals'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} clanBannerGonfalonColors
 */
CommonModelsCoreSettingsConfiguration.prototype['clanBannerGonfalonColors'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} clanBannerGonfalonDetailColors
 */
CommonModelsCoreSettingsConfiguration.prototype['clanBannerGonfalonDetailColors'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} clanBannerGonfalonDetails
 */
CommonModelsCoreSettingsConfiguration.prototype['clanBannerGonfalonDetails'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} clanBannerGonfalons
 */
CommonModelsCoreSettingsConfiguration.prototype['clanBannerGonfalons'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} clanBannerStandards
 */
CommonModelsCoreSettingsConfiguration.prototype['clanBannerStandards'] = undefined;

/**
 * @member {module:model/CommonModelsCoreSetting} defaultGroupTheme
 */
CommonModelsCoreSettingsConfiguration.prototype['defaultGroupTheme'] = undefined;

/**
 * @member {module:model/CommonModelsDestiny2CoreSettings} destiny2CoreSettings
 */
CommonModelsCoreSettingsConfiguration.prototype['destiny2CoreSettings'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} destinyMembershipTypes
 */
CommonModelsCoreSettingsConfiguration.prototype['destinyMembershipTypes'] = undefined;

/**
 * @member {module:model/UserEmailSettings} emailSettings
 */
CommonModelsCoreSettingsConfiguration.prototype['emailSettings'] = undefined;

/**
 * @member {String} environment
 */
CommonModelsCoreSettingsConfiguration.prototype['environment'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} fireteamActivities
 */
CommonModelsCoreSettingsConfiguration.prototype['fireteamActivities'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} forumCategories
 */
CommonModelsCoreSettingsConfiguration.prototype['forumCategories'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} groupAvatars
 */
CommonModelsCoreSettingsConfiguration.prototype['groupAvatars'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} ignoreReasons
 */
CommonModelsCoreSettingsConfiguration.prototype['ignoreReasons'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} recruitmentActivities
 */
CommonModelsCoreSettingsConfiguration.prototype['recruitmentActivities'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} recruitmentMiscTags
 */
CommonModelsCoreSettingsConfiguration.prototype['recruitmentMiscTags'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} recruitmentPlatformTags
 */
CommonModelsCoreSettingsConfiguration.prototype['recruitmentPlatformTags'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} systemContentLocales
 */
CommonModelsCoreSettingsConfiguration.prototype['systemContentLocales'] = undefined;

/**
 * @member {Object.<String, module:model/CommonModelsCoreSystem>} systems
 */
CommonModelsCoreSettingsConfiguration.prototype['systems'] = undefined;

/**
 * @member {Array.<module:model/CommonModelsCoreSetting>} userContentLocales
 */
CommonModelsCoreSettingsConfiguration.prototype['userContentLocales'] = undefined;






export default CommonModelsCoreSettingsConfiguration;

