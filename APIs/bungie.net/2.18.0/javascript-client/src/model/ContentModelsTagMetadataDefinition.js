/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentModelsTagMetadataItem from './ContentModelsTagMetadataItem';

/**
 * The ContentModelsTagMetadataDefinition model module.
 * @module model/ContentModelsTagMetadataDefinition
 * @version 2.18.0
 */
class ContentModelsTagMetadataDefinition {
    /**
     * Constructs a new <code>ContentModelsTagMetadataDefinition</code>.
     * @alias module:model/ContentModelsTagMetadataDefinition
     */
    constructor() { 
        
        ContentModelsTagMetadataDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContentModelsTagMetadataDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentModelsTagMetadataDefinition} obj Optional instance to populate.
     * @return {module:model/ContentModelsTagMetadataDefinition} The populated <code>ContentModelsTagMetadataDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentModelsTagMetadataDefinition();

            if (data.hasOwnProperty('datatype')) {
                obj['datatype'] = ApiClient.convertToType(data['datatype'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isRequired')) {
                obj['isRequired'] = ApiClient.convertToType(data['isRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [ContentModelsTagMetadataItem]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentModelsTagMetadataDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentModelsTagMetadataDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['datatype'] && !(typeof data['datatype'] === 'string' || data['datatype'] instanceof String)) {
            throw new Error("Expected the field `datatype` to be a primitive type in the JSON string but got " + data['datatype']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                ContentModelsTagMetadataItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {String} datatype
 */
ContentModelsTagMetadataDefinition.prototype['datatype'] = undefined;

/**
 * @member {String} description
 */
ContentModelsTagMetadataDefinition.prototype['description'] = undefined;

/**
 * @member {Boolean} isRequired
 */
ContentModelsTagMetadataDefinition.prototype['isRequired'] = undefined;

/**
 * @member {Array.<module:model/ContentModelsTagMetadataItem>} items
 */
ContentModelsTagMetadataDefinition.prototype['items'] = undefined;

/**
 * @member {String} name
 */
ContentModelsTagMetadataDefinition.prototype['name'] = undefined;

/**
 * @member {Number} order
 */
ContentModelsTagMetadataDefinition.prototype['order'] = undefined;






export default ContentModelsTagMetadataDefinition;

