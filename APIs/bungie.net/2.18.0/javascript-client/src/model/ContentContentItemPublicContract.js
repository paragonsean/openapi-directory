/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentCommentSummary from './ContentCommentSummary';
import ContentContentRepresentation from './ContentContentRepresentation';
import UserGeneralUser from './UserGeneralUser';

/**
 * The ContentContentItemPublicContract model module.
 * @module model/ContentContentItemPublicContract
 * @version 2.18.0
 */
class ContentContentItemPublicContract {
    /**
     * Constructs a new <code>ContentContentItemPublicContract</code>.
     * @alias module:model/ContentContentItemPublicContract
     */
    constructor() { 
        
        ContentContentItemPublicContract.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContentContentItemPublicContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentContentItemPublicContract} obj Optional instance to populate.
     * @return {module:model/ContentContentItemPublicContract} The populated <code>ContentContentItemPublicContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentContentItemPublicContract();

            if (data.hasOwnProperty('allowComments')) {
                obj['allowComments'] = ApiClient.convertToType(data['allowComments'], 'Boolean');
            }
            if (data.hasOwnProperty('author')) {
                obj['author'] = UserGeneralUser.constructFromObject(data['author']);
            }
            if (data.hasOwnProperty('autoEnglishPropertyFallback')) {
                obj['autoEnglishPropertyFallback'] = ApiClient.convertToType(data['autoEnglishPropertyFallback'], 'Boolean');
            }
            if (data.hasOwnProperty('cType')) {
                obj['cType'] = ApiClient.convertToType(data['cType'], 'String');
            }
            if (data.hasOwnProperty('cmsPath')) {
                obj['cmsPath'] = ApiClient.convertToType(data['cmsPath'], 'String');
            }
            if (data.hasOwnProperty('commentSummary')) {
                obj['commentSummary'] = ContentCommentSummary.constructFromObject(data['commentSummary']);
            }
            if (data.hasOwnProperty('contentId')) {
                obj['contentId'] = ApiClient.convertToType(data['contentId'], 'Number');
            }
            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
            }
            if (data.hasOwnProperty('hasAgeGate')) {
                obj['hasAgeGate'] = ApiClient.convertToType(data['hasAgeGate'], 'Boolean');
            }
            if (data.hasOwnProperty('minimumAge')) {
                obj['minimumAge'] = ApiClient.convertToType(data['minimumAge'], 'Number');
            }
            if (data.hasOwnProperty('modifyDate')) {
                obj['modifyDate'] = ApiClient.convertToType(data['modifyDate'], 'Date');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': Object});
            }
            if (data.hasOwnProperty('ratingImagePath')) {
                obj['ratingImagePath'] = ApiClient.convertToType(data['ratingImagePath'], 'String');
            }
            if (data.hasOwnProperty('representations')) {
                obj['representations'] = ApiClient.convertToType(data['representations'], [ContentContentRepresentation]);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentContentItemPublicContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentContentItemPublicContract</code>.
     */
    static validateJSON(data) {
        // validate the optional field `author`
        if (data['author']) { // data not null
          UserGeneralUser.validateJSON(data['author']);
        }
        // ensure the json data is a string
        if (data['cType'] && !(typeof data['cType'] === 'string' || data['cType'] instanceof String)) {
            throw new Error("Expected the field `cType` to be a primitive type in the JSON string but got " + data['cType']);
        }
        // ensure the json data is a string
        if (data['cmsPath'] && !(typeof data['cmsPath'] === 'string' || data['cmsPath'] instanceof String)) {
            throw new Error("Expected the field `cmsPath` to be a primitive type in the JSON string but got " + data['cmsPath']);
        }
        // validate the optional field `commentSummary`
        if (data['commentSummary']) { // data not null
          ContentCommentSummary.validateJSON(data['commentSummary']);
        }
        // ensure the json data is a string
        if (data['ratingImagePath'] && !(typeof data['ratingImagePath'] === 'string' || data['ratingImagePath'] instanceof String)) {
            throw new Error("Expected the field `ratingImagePath` to be a primitive type in the JSON string but got " + data['ratingImagePath']);
        }
        if (data['representations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['representations'])) {
                throw new Error("Expected the field `representations` to be an array in the JSON data but got " + data['representations']);
            }
            // validate the optional field `representations` (array)
            for (const item of data['representations']) {
                ContentContentRepresentation.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}



/**
 * @member {Boolean} allowComments
 */
ContentContentItemPublicContract.prototype['allowComments'] = undefined;

/**
 * @member {module:model/UserGeneralUser} author
 */
ContentContentItemPublicContract.prototype['author'] = undefined;

/**
 * @member {Boolean} autoEnglishPropertyFallback
 */
ContentContentItemPublicContract.prototype['autoEnglishPropertyFallback'] = undefined;

/**
 * @member {String} cType
 */
ContentContentItemPublicContract.prototype['cType'] = undefined;

/**
 * @member {String} cmsPath
 */
ContentContentItemPublicContract.prototype['cmsPath'] = undefined;

/**
 * @member {module:model/ContentCommentSummary} commentSummary
 */
ContentContentItemPublicContract.prototype['commentSummary'] = undefined;

/**
 * @member {Number} contentId
 */
ContentContentItemPublicContract.prototype['contentId'] = undefined;

/**
 * @member {Date} creationDate
 */
ContentContentItemPublicContract.prototype['creationDate'] = undefined;

/**
 * @member {Boolean} hasAgeGate
 */
ContentContentItemPublicContract.prototype['hasAgeGate'] = undefined;

/**
 * @member {Number} minimumAge
 */
ContentContentItemPublicContract.prototype['minimumAge'] = undefined;

/**
 * @member {Date} modifyDate
 */
ContentContentItemPublicContract.prototype['modifyDate'] = undefined;

/**
 * Firehose content is really a collection of metadata and \"properties\", which are the potentially-but-not-strictly localizable data that comprises the meat of whatever content is being shown.  As Cole Porter would have crooned, \"Anything Goes\" with Firehose properties. They are most often strings, but they can theoretically be anything. They are JSON encoded, and could be JSON structures, simple strings, numbers etc... The Content Type of the item (cType) will describe the properties, and thus how they ought to be deserialized.
 * @member {Object.<String, Object>} properties
 */
ContentContentItemPublicContract.prototype['properties'] = undefined;

/**
 * @member {String} ratingImagePath
 */
ContentContentItemPublicContract.prototype['ratingImagePath'] = undefined;

/**
 * @member {Array.<module:model/ContentContentRepresentation>} representations
 */
ContentContentItemPublicContract.prototype['representations'] = undefined;

/**
 * NOTE: Tags will always be lower case.
 * @member {Array.<String>} tags
 */
ContentContentItemPublicContract.prototype['tags'] = undefined;






export default ContentContentItemPublicContract;

