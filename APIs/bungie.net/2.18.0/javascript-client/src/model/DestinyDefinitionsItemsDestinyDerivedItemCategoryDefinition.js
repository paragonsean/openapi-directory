/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsItemsDestinyDerivedItemDefinition from './DestinyDefinitionsItemsDestinyDerivedItemDefinition';

/**
 * The DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition model module.
 * @module model/DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition</code>.
     * A shortcut for the fact that some items have a \&quot;Preview Vendor\&quot; - See DestinyInventoryItemDefinition.preview.previewVendorHash - that is intended to be used to show what items you can get as a result of acquiring or using this item.  A common example of this in Destiny 1 was Eververse \&quot;Boxes,\&quot; which could have many possible items. This \&quot;Preview Vendor\&quot; is not a vendor you can actually see in the game, but it defines categories and sale items for all of the possible items you could get from the Box so that the game can show them to you. We summarize that info here so that you don&#39;t have to do that Vendor lookup and aggregation manually.
     * @alias module:model/DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition
     */
    constructor() { 
        
        DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition} The populated <code>DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition();

            if (data.hasOwnProperty('categoryDescription')) {
                obj['categoryDescription'] = ApiClient.convertToType(data['categoryDescription'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [DestinyDefinitionsItemsDestinyDerivedItemDefinition]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['categoryDescription'] && !(typeof data['categoryDescription'] === 'string' || data['categoryDescription'] instanceof String)) {
            throw new Error("Expected the field `categoryDescription` to be a primitive type in the JSON string but got " + data['categoryDescription']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                DestinyDefinitionsItemsDestinyDerivedItemDefinition.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The localized string for the category title. This will be something describing the items you can get as a group, or your likelihood/the quantity you'll get.
 * @member {String} categoryDescription
 */
DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.prototype['categoryDescription'] = undefined;

/**
 * This is the list of all of the items for this category and the basic properties we'll know about them.
 * @member {Array.<module:model/DestinyDefinitionsItemsDestinyDerivedItemDefinition>} items
 */
DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.prototype['items'] = undefined;






export default DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition;

