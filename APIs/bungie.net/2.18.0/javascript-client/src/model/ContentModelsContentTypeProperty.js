/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentModelsContentTypeDefaultValue from './ContentModelsContentTypeDefaultValue';

/**
 * The ContentModelsContentTypeProperty model module.
 * @module model/ContentModelsContentTypeProperty
 * @version 2.18.0
 */
class ContentModelsContentTypeProperty {
    /**
     * Constructs a new <code>ContentModelsContentTypeProperty</code>.
     * @alias module:model/ContentModelsContentTypeProperty
     */
    constructor() { 
        
        ContentModelsContentTypeProperty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContentModelsContentTypeProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentModelsContentTypeProperty} obj Optional instance to populate.
     * @return {module:model/ContentModelsContentTypeProperty} The populated <code>ContentModelsContentTypeProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentModelsContentTypeProperty();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': 'String'});
            }
            if (data.hasOwnProperty('bindToProperty')) {
                obj['bindToProperty'] = ApiClient.convertToType(data['bindToProperty'], 'String');
            }
            if (data.hasOwnProperty('boundRegex')) {
                obj['boundRegex'] = ApiClient.convertToType(data['boundRegex'], 'String');
            }
            if (data.hasOwnProperty('childProperties')) {
                obj['childProperties'] = ApiClient.convertToType(data['childProperties'], [ContentModelsContentTypeProperty]);
            }
            if (data.hasOwnProperty('contentTypeAllowed')) {
                obj['contentTypeAllowed'] = ApiClient.convertToType(data['contentTypeAllowed'], 'String');
            }
            if (data.hasOwnProperty('datatype')) {
                obj['datatype'] = ApiClient.convertToType(data['datatype'], 'Number');
            }
            if (data.hasOwnProperty('defaultValues')) {
                obj['defaultValues'] = ApiClient.convertToType(data['defaultValues'], [ContentModelsContentTypeDefaultValue]);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('entitytype')) {
                obj['entitytype'] = ApiClient.convertToType(data['entitytype'], 'String');
            }
            if (data.hasOwnProperty('fallback')) {
                obj['fallback'] = ApiClient.convertToType(data['fallback'], 'Boolean');
            }
            if (data.hasOwnProperty('isCombo')) {
                obj['isCombo'] = ApiClient.convertToType(data['isCombo'], 'Boolean');
            }
            if (data.hasOwnProperty('isExternalAllowed')) {
                obj['isExternalAllowed'] = ApiClient.convertToType(data['isExternalAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('isImage')) {
                obj['isImage'] = ApiClient.convertToType(data['isImage'], 'Boolean');
            }
            if (data.hasOwnProperty('isTitle')) {
                obj['isTitle'] = ApiClient.convertToType(data['isTitle'], 'Boolean');
            }
            if (data.hasOwnProperty('isVideo')) {
                obj['isVideo'] = ApiClient.convertToType(data['isVideo'], 'Boolean');
            }
            if (data.hasOwnProperty('legalContentTypes')) {
                obj['legalContentTypes'] = ApiClient.convertToType(data['legalContentTypes'], ['String']);
            }
            if (data.hasOwnProperty('localizable')) {
                obj['localizable'] = ApiClient.convertToType(data['localizable'], 'Boolean');
            }
            if (data.hasOwnProperty('maxByteLength')) {
                obj['maxByteLength'] = ApiClient.convertToType(data['maxByteLength'], 'Number');
            }
            if (data.hasOwnProperty('maxFileSize')) {
                obj['maxFileSize'] = ApiClient.convertToType(data['maxFileSize'], 'Number');
            }
            if (data.hasOwnProperty('maxHeight')) {
                obj['maxHeight'] = ApiClient.convertToType(data['maxHeight'], 'Number');
            }
            if (data.hasOwnProperty('maxLength')) {
                obj['maxLength'] = ApiClient.convertToType(data['maxLength'], 'Number');
            }
            if (data.hasOwnProperty('maxWidth')) {
                obj['maxWidth'] = ApiClient.convertToType(data['maxWidth'], 'Number');
            }
            if (data.hasOwnProperty('minHeight')) {
                obj['minHeight'] = ApiClient.convertToType(data['minHeight'], 'Number');
            }
            if (data.hasOwnProperty('minWidth')) {
                obj['minWidth'] = ApiClient.convertToType(data['minWidth'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('propertyDescription')) {
                obj['propertyDescription'] = ApiClient.convertToType(data['propertyDescription'], 'String');
            }
            if (data.hasOwnProperty('propertySection')) {
                obj['propertySection'] = ApiClient.convertToType(data['propertySection'], 'String');
            }
            if (data.hasOwnProperty('readableName')) {
                obj['readableName'] = ApiClient.convertToType(data['readableName'], 'String');
            }
            if (data.hasOwnProperty('regexp')) {
                obj['regexp'] = ApiClient.convertToType(data['regexp'], 'String');
            }
            if (data.hasOwnProperty('representationSelection')) {
                obj['representationSelection'] = ApiClient.convertToType(data['representationSelection'], {'String': 'String'});
            }
            if (data.hasOwnProperty('representationValidationString')) {
                obj['representationValidationString'] = ApiClient.convertToType(data['representationValidationString'], 'String');
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
            }
            if (data.hasOwnProperty('rootPropertyName')) {
                obj['rootPropertyName'] = ApiClient.convertToType(data['rootPropertyName'], 'String');
            }
            if (data.hasOwnProperty('rssAttribute')) {
                obj['rssAttribute'] = ApiClient.convertToType(data['rssAttribute'], 'String');
            }
            if (data.hasOwnProperty('suppressProperty')) {
                obj['suppressProperty'] = ApiClient.convertToType(data['suppressProperty'], 'Boolean');
            }
            if (data.hasOwnProperty('validateAs')) {
                obj['validateAs'] = ApiClient.convertToType(data['validateAs'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
            }
            if (data.hasOwnProperty('visibleDependency')) {
                obj['visibleDependency'] = ApiClient.convertToType(data['visibleDependency'], 'String');
            }
            if (data.hasOwnProperty('visibleOn')) {
                obj['visibleOn'] = ApiClient.convertToType(data['visibleOn'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentModelsContentTypeProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentModelsContentTypeProperty</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bindToProperty'] && !(typeof data['bindToProperty'] === 'string' || data['bindToProperty'] instanceof String)) {
            throw new Error("Expected the field `bindToProperty` to be a primitive type in the JSON string but got " + data['bindToProperty']);
        }
        // ensure the json data is a string
        if (data['boundRegex'] && !(typeof data['boundRegex'] === 'string' || data['boundRegex'] instanceof String)) {
            throw new Error("Expected the field `boundRegex` to be a primitive type in the JSON string but got " + data['boundRegex']);
        }
        if (data['childProperties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['childProperties'])) {
                throw new Error("Expected the field `childProperties` to be an array in the JSON data but got " + data['childProperties']);
            }
            // validate the optional field `childProperties` (array)
            for (const item of data['childProperties']) {
                ContentModelsContentTypeProperty.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['contentTypeAllowed'] && !(typeof data['contentTypeAllowed'] === 'string' || data['contentTypeAllowed'] instanceof String)) {
            throw new Error("Expected the field `contentTypeAllowed` to be a primitive type in the JSON string but got " + data['contentTypeAllowed']);
        }
        if (data['defaultValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['defaultValues'])) {
                throw new Error("Expected the field `defaultValues` to be an array in the JSON data but got " + data['defaultValues']);
            }
            // validate the optional field `defaultValues` (array)
            for (const item of data['defaultValues']) {
                ContentModelsContentTypeDefaultValue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['entitytype'] && !(typeof data['entitytype'] === 'string' || data['entitytype'] instanceof String)) {
            throw new Error("Expected the field `entitytype` to be a primitive type in the JSON string but got " + data['entitytype']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['legalContentTypes'])) {
            throw new Error("Expected the field `legalContentTypes` to be an array in the JSON data but got " + data['legalContentTypes']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['propertyDescription'] && !(typeof data['propertyDescription'] === 'string' || data['propertyDescription'] instanceof String)) {
            throw new Error("Expected the field `propertyDescription` to be a primitive type in the JSON string but got " + data['propertyDescription']);
        }
        // ensure the json data is a string
        if (data['propertySection'] && !(typeof data['propertySection'] === 'string' || data['propertySection'] instanceof String)) {
            throw new Error("Expected the field `propertySection` to be a primitive type in the JSON string but got " + data['propertySection']);
        }
        // ensure the json data is a string
        if (data['readableName'] && !(typeof data['readableName'] === 'string' || data['readableName'] instanceof String)) {
            throw new Error("Expected the field `readableName` to be a primitive type in the JSON string but got " + data['readableName']);
        }
        // ensure the json data is a string
        if (data['regexp'] && !(typeof data['regexp'] === 'string' || data['regexp'] instanceof String)) {
            throw new Error("Expected the field `regexp` to be a primitive type in the JSON string but got " + data['regexp']);
        }
        // ensure the json data is a string
        if (data['representationValidationString'] && !(typeof data['representationValidationString'] === 'string' || data['representationValidationString'] instanceof String)) {
            throw new Error("Expected the field `representationValidationString` to be a primitive type in the JSON string but got " + data['representationValidationString']);
        }
        // ensure the json data is a string
        if (data['rootPropertyName'] && !(typeof data['rootPropertyName'] === 'string' || data['rootPropertyName'] instanceof String)) {
            throw new Error("Expected the field `rootPropertyName` to be a primitive type in the JSON string but got " + data['rootPropertyName']);
        }
        // ensure the json data is a string
        if (data['rssAttribute'] && !(typeof data['rssAttribute'] === 'string' || data['rssAttribute'] instanceof String)) {
            throw new Error("Expected the field `rssAttribute` to be a primitive type in the JSON string but got " + data['rssAttribute']);
        }
        // ensure the json data is a string
        if (data['validateAs'] && !(typeof data['validateAs'] === 'string' || data['validateAs'] instanceof String)) {
            throw new Error("Expected the field `validateAs` to be a primitive type in the JSON string but got " + data['validateAs']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['visibleDependency'] && !(typeof data['visibleDependency'] === 'string' || data['visibleDependency'] instanceof String)) {
            throw new Error("Expected the field `visibleDependency` to be a primitive type in the JSON string but got " + data['visibleDependency']);
        }
        // ensure the json data is a string
        if (data['visibleOn'] && !(typeof data['visibleOn'] === 'string' || data['visibleOn'] instanceof String)) {
            throw new Error("Expected the field `visibleOn` to be a primitive type in the JSON string but got " + data['visibleOn']);
        }

        return true;
    }


}



/**
 * @member {Object.<String, String>} attributes
 */
ContentModelsContentTypeProperty.prototype['attributes'] = undefined;

/**
 * @member {String} bindToProperty
 */
ContentModelsContentTypeProperty.prototype['bindToProperty'] = undefined;

/**
 * @member {String} boundRegex
 */
ContentModelsContentTypeProperty.prototype['boundRegex'] = undefined;

/**
 * @member {Array.<module:model/ContentModelsContentTypeProperty>} childProperties
 */
ContentModelsContentTypeProperty.prototype['childProperties'] = undefined;

/**
 * @member {String} contentTypeAllowed
 */
ContentModelsContentTypeProperty.prototype['contentTypeAllowed'] = undefined;

/**
 * @member {Number} datatype
 */
ContentModelsContentTypeProperty.prototype['datatype'] = undefined;

/**
 * @member {Array.<module:model/ContentModelsContentTypeDefaultValue>} defaultValues
 */
ContentModelsContentTypeProperty.prototype['defaultValues'] = undefined;

/**
 * @member {Boolean} enabled
 */
ContentModelsContentTypeProperty.prototype['enabled'] = undefined;

/**
 * @member {String} entitytype
 */
ContentModelsContentTypeProperty.prototype['entitytype'] = undefined;

/**
 * @member {Boolean} fallback
 */
ContentModelsContentTypeProperty.prototype['fallback'] = undefined;

/**
 * @member {Boolean} isCombo
 */
ContentModelsContentTypeProperty.prototype['isCombo'] = undefined;

/**
 * @member {Boolean} isExternalAllowed
 */
ContentModelsContentTypeProperty.prototype['isExternalAllowed'] = undefined;

/**
 * @member {Boolean} isImage
 */
ContentModelsContentTypeProperty.prototype['isImage'] = undefined;

/**
 * @member {Boolean} isTitle
 */
ContentModelsContentTypeProperty.prototype['isTitle'] = undefined;

/**
 * @member {Boolean} isVideo
 */
ContentModelsContentTypeProperty.prototype['isVideo'] = undefined;

/**
 * @member {Array.<String>} legalContentTypes
 */
ContentModelsContentTypeProperty.prototype['legalContentTypes'] = undefined;

/**
 * @member {Boolean} localizable
 */
ContentModelsContentTypeProperty.prototype['localizable'] = undefined;

/**
 * @member {Number} maxByteLength
 */
ContentModelsContentTypeProperty.prototype['maxByteLength'] = undefined;

/**
 * @member {Number} maxFileSize
 */
ContentModelsContentTypeProperty.prototype['maxFileSize'] = undefined;

/**
 * @member {Number} maxHeight
 */
ContentModelsContentTypeProperty.prototype['maxHeight'] = undefined;

/**
 * @member {Number} maxLength
 */
ContentModelsContentTypeProperty.prototype['maxLength'] = undefined;

/**
 * @member {Number} maxWidth
 */
ContentModelsContentTypeProperty.prototype['maxWidth'] = undefined;

/**
 * @member {Number} minHeight
 */
ContentModelsContentTypeProperty.prototype['minHeight'] = undefined;

/**
 * @member {Number} minWidth
 */
ContentModelsContentTypeProperty.prototype['minWidth'] = undefined;

/**
 * @member {String} name
 */
ContentModelsContentTypeProperty.prototype['name'] = undefined;

/**
 * @member {Number} order
 */
ContentModelsContentTypeProperty.prototype['order'] = undefined;

/**
 * @member {String} propertyDescription
 */
ContentModelsContentTypeProperty.prototype['propertyDescription'] = undefined;

/**
 * @member {String} propertySection
 */
ContentModelsContentTypeProperty.prototype['propertySection'] = undefined;

/**
 * @member {String} readableName
 */
ContentModelsContentTypeProperty.prototype['readableName'] = undefined;

/**
 * @member {String} regexp
 */
ContentModelsContentTypeProperty.prototype['regexp'] = undefined;

/**
 * @member {Object.<String, String>} representationSelection
 */
ContentModelsContentTypeProperty.prototype['representationSelection'] = undefined;

/**
 * @member {String} representationValidationString
 */
ContentModelsContentTypeProperty.prototype['representationValidationString'] = undefined;

/**
 * @member {Boolean} required
 */
ContentModelsContentTypeProperty.prototype['required'] = undefined;

/**
 * @member {String} rootPropertyName
 */
ContentModelsContentTypeProperty.prototype['rootPropertyName'] = undefined;

/**
 * @member {String} rssAttribute
 */
ContentModelsContentTypeProperty.prototype['rssAttribute'] = undefined;

/**
 * @member {Boolean} suppressProperty
 */
ContentModelsContentTypeProperty.prototype['suppressProperty'] = undefined;

/**
 * @member {String} validateAs
 */
ContentModelsContentTypeProperty.prototype['validateAs'] = undefined;

/**
 * @member {String} value
 */
ContentModelsContentTypeProperty.prototype['value'] = undefined;

/**
 * @member {Boolean} visible
 */
ContentModelsContentTypeProperty.prototype['visible'] = undefined;

/**
 * @member {String} visibleDependency
 */
ContentModelsContentTypeProperty.prototype['visibleDependency'] = undefined;

/**
 * @member {String} visibleOn
 */
ContentModelsContentTypeProperty.prototype['visibleOn'] = undefined;

/**
 * @member {Number} weight
 */
ContentModelsContentTypeProperty.prototype['weight'] = undefined;






export default ContentModelsContentTypeProperty;

