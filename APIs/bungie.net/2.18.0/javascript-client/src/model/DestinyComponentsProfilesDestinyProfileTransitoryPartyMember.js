/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyComponentsProfilesDestinyProfileTransitoryPartyMember model module.
 * @module model/DestinyComponentsProfilesDestinyProfileTransitoryPartyMember
 * @version 2.18.0
 */
class DestinyComponentsProfilesDestinyProfileTransitoryPartyMember {
    /**
     * Constructs a new <code>DestinyComponentsProfilesDestinyProfileTransitoryPartyMember</code>.
     * This is some bare minimum information about a party member in a Fireteam. Unfortunately, without great computational expense on our side we can only get at the data contained here. I&#39;d like to give you a character ID for example, but we don&#39;t have it. But we do have these three pieces of information. May they help you on your quest to show meaningful data about current Fireteams.  Notably, we don&#39;t and can&#39;t feasibly return info on characters. If you can, try to use just the data below for your UI and purposes. Only hit us with further queries if you absolutely must know the character ID of the currently playing character. Pretty please with sugar on top.
     * @alias module:model/DestinyComponentsProfilesDestinyProfileTransitoryPartyMember
     */
    constructor() { 
        
        DestinyComponentsProfilesDestinyProfileTransitoryPartyMember.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyComponentsProfilesDestinyProfileTransitoryPartyMember</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyComponentsProfilesDestinyProfileTransitoryPartyMember} obj Optional instance to populate.
     * @return {module:model/DestinyComponentsProfilesDestinyProfileTransitoryPartyMember} The populated <code>DestinyComponentsProfilesDestinyProfileTransitoryPartyMember</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyComponentsProfilesDestinyProfileTransitoryPartyMember();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('emblemHash')) {
                obj['emblemHash'] = ApiClient.convertToType(data['emblemHash'], 'Number');
            }
            if (data.hasOwnProperty('membershipId')) {
                obj['membershipId'] = ApiClient.convertToType(data['membershipId'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyComponentsProfilesDestinyProfileTransitoryPartyMember</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyComponentsProfilesDestinyProfileTransitoryPartyMember</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }

        return true;
    }


}



/**
 * The player's last known display name.
 * @member {String} displayName
 */
DestinyComponentsProfilesDestinyProfileTransitoryPartyMember.prototype['displayName'] = undefined;

/**
 * The identifier for the DestinyInventoryItemDefinition of the player's emblem.
 * @member {Number} emblemHash
 */
DestinyComponentsProfilesDestinyProfileTransitoryPartyMember.prototype['emblemHash'] = undefined;

/**
 * The Membership ID that matches the party member.
 * @member {Number} membershipId
 */
DestinyComponentsProfilesDestinyProfileTransitoryPartyMember.prototype['membershipId'] = undefined;

/**
 * A Flags Enumeration value indicating the states that the player is in relevant to being on a fireteam.
 * @member {Number} status
 */
DestinyComponentsProfilesDestinyProfileTransitoryPartyMember.prototype['status'] = undefined;






export default DestinyComponentsProfilesDestinyProfileTransitoryPartyMember;

