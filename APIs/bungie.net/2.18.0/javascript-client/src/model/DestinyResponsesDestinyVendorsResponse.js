/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyItemComponentSetOfint32 from './DestinyItemComponentSetOfint32';
import DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent from './DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent';
import DictionaryComponentResponseOfuint32AndDestinyVendorComponent from './DictionaryComponentResponseOfuint32AndDestinyVendorComponent';
import DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent from './DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent';
import SingleComponentResponseOfDestinyCurrenciesComponent from './SingleComponentResponseOfDestinyCurrenciesComponent';
import SingleComponentResponseOfDestinyStringVariablesComponent from './SingleComponentResponseOfDestinyStringVariablesComponent';
import SingleComponentResponseOfDestinyVendorGroupComponent from './SingleComponentResponseOfDestinyVendorGroupComponent';

/**
 * The DestinyResponsesDestinyVendorsResponse model module.
 * @module model/DestinyResponsesDestinyVendorsResponse
 * @version 2.18.0
 */
class DestinyResponsesDestinyVendorsResponse {
    /**
     * Constructs a new <code>DestinyResponsesDestinyVendorsResponse</code>.
     * A response containing all of the components for all requested vendors.
     * @alias module:model/DestinyResponsesDestinyVendorsResponse
     */
    constructor() { 
        
        DestinyResponsesDestinyVendorsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyResponsesDestinyVendorsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyResponsesDestinyVendorsResponse} obj Optional instance to populate.
     * @return {module:model/DestinyResponsesDestinyVendorsResponse} The populated <code>DestinyResponsesDestinyVendorsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyResponsesDestinyVendorsResponse();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent);
            }
            if (data.hasOwnProperty('currencyLookups')) {
                obj['currencyLookups'] = ApiClient.convertToType(data['currencyLookups'], SingleComponentResponseOfDestinyCurrenciesComponent);
            }
            if (data.hasOwnProperty('itemComponents')) {
                obj['itemComponents'] = ApiClient.convertToType(data['itemComponents'], {'String': DestinyItemComponentSetOfint32});
            }
            if (data.hasOwnProperty('sales')) {
                obj['sales'] = ApiClient.convertToType(data['sales'], DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent);
            }
            if (data.hasOwnProperty('stringVariables')) {
                obj['stringVariables'] = ApiClient.convertToType(data['stringVariables'], SingleComponentResponseOfDestinyStringVariablesComponent);
            }
            if (data.hasOwnProperty('vendorGroups')) {
                obj['vendorGroups'] = ApiClient.convertToType(data['vendorGroups'], SingleComponentResponseOfDestinyVendorGroupComponent);
            }
            if (data.hasOwnProperty('vendors')) {
                obj['vendors'] = ApiClient.convertToType(data['vendors'], DictionaryComponentResponseOfuint32AndDestinyVendorComponent);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyResponsesDestinyVendorsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyResponsesDestinyVendorsResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `categories`
        if (data['categories']) { // data not null
          DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent.validateJSON(data['categories']);
        }
        // validate the optional field `currencyLookups`
        if (data['currencyLookups']) { // data not null
          SingleComponentResponseOfDestinyCurrenciesComponent.validateJSON(data['currencyLookups']);
        }
        // validate the optional field `sales`
        if (data['sales']) { // data not null
          DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent.validateJSON(data['sales']);
        }
        // validate the optional field `stringVariables`
        if (data['stringVariables']) { // data not null
          SingleComponentResponseOfDestinyStringVariablesComponent.validateJSON(data['stringVariables']);
        }
        // validate the optional field `vendorGroups`
        if (data['vendorGroups']) { // data not null
          SingleComponentResponseOfDestinyVendorGroupComponent.validateJSON(data['vendorGroups']);
        }
        // validate the optional field `vendors`
        if (data['vendors']) { // data not null
          DictionaryComponentResponseOfuint32AndDestinyVendorComponent.validateJSON(data['vendors']);
        }

        return true;
    }


}



/**
 * Categories that the vendor has available, and references to the sales therein. These are keyed by the Vendor Hash, so you will get one Categories Component per vendor returned.  COMPONENT TYPE: VendorCategories
 * @member {module:model/DictionaryComponentResponseOfuint32AndDestinyVendorCategoriesComponent} categories
 */
DestinyResponsesDestinyVendorsResponse.prototype['categories'] = undefined;

/**
 * A \"lookup\" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups
 * @member {module:model/SingleComponentResponseOfDestinyCurrenciesComponent} currencyLookups
 */
DestinyResponsesDestinyVendorsResponse.prototype['currencyLookups'] = undefined;

/**
 * The set of item detail components, one set of item components per Vendor. These are keyed by the Vendor Hash, so you will get one Item Component Set per vendor returned.  The components contained inside are themselves keyed by the vendorSaleIndex, and will have whatever item-level components you requested (Sockets, Stats, Instance data etc...) per item being sold by the vendor.
 * @member {Object.<String, module:model/DestinyItemComponentSetOfint32>} itemComponents
 */
DestinyResponsesDestinyVendorsResponse.prototype['itemComponents'] = undefined;

/**
 * Sales, keyed by the vendorItemIndex of the item being sold. These are keyed by the Vendor Hash, so you will get one Sale Item Set Component per vendor returned.  Note that within the Sale Item Set component, the sales are themselves keyed by the vendorSaleIndex, so you can relate it to the corrent sale item definition within the Vendor's definition.  COMPONENT TYPE: VendorSales
 * @member {module:model/DictionaryComponentResponseOfuint32AndPersonalDestinyVendorSaleItemSetComponent} sales
 */
DestinyResponsesDestinyVendorsResponse.prototype['sales'] = undefined;

/**
 * A map of string variable values by hash for this character context.  COMPONENT TYPE: StringVariables
 * @member {module:model/SingleComponentResponseOfDestinyStringVariablesComponent} stringVariables
 */
DestinyResponsesDestinyVendorsResponse.prototype['stringVariables'] = undefined;

/**
 * For Vendors being returned, this will give you the information you need to group them and order them in the same way that the Bungie Companion app performs grouping. It will automatically be returned if you request the Vendors component.  COMPONENT TYPE: Vendors
 * @member {module:model/SingleComponentResponseOfDestinyVendorGroupComponent} vendorGroups
 */
DestinyResponsesDestinyVendorsResponse.prototype['vendorGroups'] = undefined;

/**
 * The base properties of the vendor. These are keyed by the Vendor Hash, so you will get one Vendor Component per vendor returned.  COMPONENT TYPE: Vendors
 * @member {module:model/DictionaryComponentResponseOfuint32AndDestinyVendorComponent} vendors
 */
DestinyResponsesDestinyVendorsResponse.prototype['vendors'] = undefined;






export default DestinyResponsesDestinyVendorsResponse;

