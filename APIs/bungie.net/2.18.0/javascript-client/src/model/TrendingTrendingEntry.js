/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TrendingTrendingEntry model module.
 * @module model/TrendingTrendingEntry
 * @version 2.18.0
 */
class TrendingTrendingEntry {
    /**
     * Constructs a new <code>TrendingTrendingEntry</code>.
     * The list entry view for trending items. Returns just enough to show the item on the trending page.
     * @alias module:model/TrendingTrendingEntry
     */
    constructor() { 
        
        TrendingTrendingEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrendingTrendingEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrendingTrendingEntry} obj Optional instance to populate.
     * @return {module:model/TrendingTrendingEntry} The populated <code>TrendingTrendingEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrendingTrendingEntry();

            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('entityType')) {
                obj['entityType'] = ApiClient.convertToType(data['entityType'], 'Number');
            }
            if (data.hasOwnProperty('featureImage')) {
                obj['featureImage'] = ApiClient.convertToType(data['featureImage'], 'String');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('isFeatured')) {
                obj['isFeatured'] = ApiClient.convertToType(data['isFeatured'], 'Boolean');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [TrendingTrendingEntry]);
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('mp4Video')) {
                obj['mp4Video'] = ApiClient.convertToType(data['mp4Video'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('tagline')) {
                obj['tagline'] = ApiClient.convertToType(data['tagline'], 'String');
            }
            if (data.hasOwnProperty('webmVideo')) {
                obj['webmVideo'] = ApiClient.convertToType(data['webmVideo'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrendingTrendingEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrendingTrendingEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['featureImage'] && !(typeof data['featureImage'] === 'string' || data['featureImage'] instanceof String)) {
            throw new Error("Expected the field `featureImage` to be a primitive type in the JSON string but got " + data['featureImage']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }
        // ensure the json data is a string
        if (data['image'] && !(typeof data['image'] === 'string' || data['image'] instanceof String)) {
            throw new Error("Expected the field `image` to be a primitive type in the JSON string but got " + data['image']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                TrendingTrendingEntry.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['mp4Video'] && !(typeof data['mp4Video'] === 'string' || data['mp4Video'] instanceof String)) {
            throw new Error("Expected the field `mp4Video` to be a primitive type in the JSON string but got " + data['mp4Video']);
        }
        // ensure the json data is a string
        if (data['tagline'] && !(typeof data['tagline'] === 'string' || data['tagline'] instanceof String)) {
            throw new Error("Expected the field `tagline` to be a primitive type in the JSON string but got " + data['tagline']);
        }
        // ensure the json data is a string
        if (data['webmVideo'] && !(typeof data['webmVideo'] === 'string' || data['webmVideo'] instanceof String)) {
            throw new Error("Expected the field `webmVideo` to be a primitive type in the JSON string but got " + data['webmVideo']);
        }

        return true;
    }


}



/**
 * If the entry has a date at which it was created, this is that date.
 * @member {Date} creationDate
 */
TrendingTrendingEntry.prototype['creationDate'] = undefined;

/**
 * The localized \"display name/article title/'primary localized identifier'\" of the entity.
 * @member {String} displayName
 */
TrendingTrendingEntry.prototype['displayName'] = undefined;

/**
 * @member {Date} endDate
 */
TrendingTrendingEntry.prototype['endDate'] = undefined;

/**
 * An enum - unfortunately - dictating all of the possible kinds of trending items that you might get in your result set, in case you want to do custom rendering or call to get the details of the item.
 * @member {Number} entityType
 */
TrendingTrendingEntry.prototype['entityType'] = undefined;

/**
 * If isFeatured, this image will be populated with whatever the featured image is. Note that this will likely be a very large image, so don't use it all the time.
 * @member {String} featureImage
 */
TrendingTrendingEntry.prototype['featureImage'] = undefined;

/**
 * We don't know whether the identifier will be a string, a uint, or a long... so we're going to cast it all to a string. But either way, we need any trending item created to have a single unique identifier for its type.
 * @member {String} identifier
 */
TrendingTrendingEntry.prototype['identifier'] = undefined;

/**
 * @member {String} image
 */
TrendingTrendingEntry.prototype['image'] = undefined;

/**
 * @member {Boolean} isFeatured
 */
TrendingTrendingEntry.prototype['isFeatured'] = undefined;

/**
 * If the item is of entityType TrendingEntryType.Container, it may have items - also Trending Entries - contained within it. This is the ordered list of those to display under the Container's header.
 * @member {Array.<module:model/TrendingTrendingEntry>} items
 */
TrendingTrendingEntry.prototype['items'] = undefined;

/**
 * @member {String} link
 */
TrendingTrendingEntry.prototype['link'] = undefined;

/**
 * If this is populated, the entry has a related MP4 video to show. I am 100% certain I am going to regret putting this directly on TrendingEntry, but it will work so yolo
 * @member {String} mp4Video
 */
TrendingTrendingEntry.prototype['mp4Video'] = undefined;

/**
 * @member {Date} startDate
 */
TrendingTrendingEntry.prototype['startDate'] = undefined;

/**
 * If the entity has a localized tagline/subtitle/motto/whatever, that is found here.
 * @member {String} tagline
 */
TrendingTrendingEntry.prototype['tagline'] = undefined;

/**
 * If this is populated, the entry has a related WebM video to show. I am 100% certain I am going to regret putting this directly on TrendingEntry, but it will work so yolo
 * @member {String} webmVideo
 */
TrendingTrendingEntry.prototype['webmVideo'] = undefined;

/**
 * The weighted score of this trending item.
 * @member {Number} weight
 */
TrendingTrendingEntry.prototype['weight'] = undefined;






export default TrendingTrendingEntry;

