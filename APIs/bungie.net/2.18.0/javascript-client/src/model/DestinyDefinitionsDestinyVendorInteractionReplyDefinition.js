/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyVendorInteractionReplyDefinition model module.
 * @module model/DestinyDefinitionsDestinyVendorInteractionReplyDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyVendorInteractionReplyDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyVendorInteractionReplyDefinition</code>.
     * When the interaction is replied to, Reward sites will fire and items potentially selected based on whether the given unlock expression is TRUE.  You can potentially choose one from multiple replies when replying to an interaction: this is how you get either/or rewards from vendors.
     * @alias module:model/DestinyDefinitionsDestinyVendorInteractionReplyDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyVendorInteractionReplyDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyVendorInteractionReplyDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyVendorInteractionReplyDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyVendorInteractionReplyDefinition} The populated <code>DestinyDefinitionsDestinyVendorInteractionReplyDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyVendorInteractionReplyDefinition();

            if (data.hasOwnProperty('itemRewardsSelection')) {
                obj['itemRewardsSelection'] = ApiClient.convertToType(data['itemRewardsSelection'], 'Number');
            }
            if (data.hasOwnProperty('reply')) {
                obj['reply'] = ApiClient.convertToType(data['reply'], 'String');
            }
            if (data.hasOwnProperty('replyType')) {
                obj['replyType'] = ApiClient.convertToType(data['replyType'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyVendorInteractionReplyDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyVendorInteractionReplyDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['reply'] && !(typeof data['reply'] === 'string' || data['reply'] instanceof String)) {
            throw new Error("Expected the field `reply` to be a primitive type in the JSON string but got " + data['reply']);
        }

        return true;
    }


}



/**
 * The rewards granted upon responding to the vendor.
 * @member {Number} itemRewardsSelection
 */
DestinyDefinitionsDestinyVendorInteractionReplyDefinition.prototype['itemRewardsSelection'] = undefined;

/**
 * The localized text for the reply.
 * @member {String} reply
 */
DestinyDefinitionsDestinyVendorInteractionReplyDefinition.prototype['reply'] = undefined;

/**
 * An enum indicating the type of reply being made.
 * @member {Number} replyType
 */
DestinyDefinitionsDestinyVendorInteractionReplyDefinition.prototype['replyType'] = undefined;






export default DestinyDefinitionsDestinyVendorInteractionReplyDefinition;

