/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsPresentationDestinyPresentationNodeChildEntry from './DestinyDefinitionsPresentationDestinyPresentationNodeChildEntry';
import DestinyDefinitionsPresentationDestinyPresentationNodeCollectibleChildEntry from './DestinyDefinitionsPresentationDestinyPresentationNodeCollectibleChildEntry';
import DestinyDefinitionsPresentationDestinyPresentationNodeCraftableChildEntry from './DestinyDefinitionsPresentationDestinyPresentationNodeCraftableChildEntry';
import DestinyDefinitionsPresentationDestinyPresentationNodeMetricChildEntry from './DestinyDefinitionsPresentationDestinyPresentationNodeMetricChildEntry';
import DestinyDefinitionsPresentationDestinyPresentationNodeRecordChildEntry from './DestinyDefinitionsPresentationDestinyPresentationNodeRecordChildEntry';

/**
 * The DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock model module.
 * @module model/DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock
 * @version 2.18.0
 */
class DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock {
    /**
     * Constructs a new <code>DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock</code>.
     * As/if presentation nodes begin to host more entities as children, these lists will be added to. One list property exists per type of entity that can be treated as a child of this presentation node, and each holds the identifier of the entity and any associated information needed to display the UI for that entity (if anything)
     * @alias module:model/DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock
     */
    constructor() { 
        
        DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock} The populated <code>DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock();

            if (data.hasOwnProperty('collectibles')) {
                obj['collectibles'] = ApiClient.convertToType(data['collectibles'], [DestinyDefinitionsPresentationDestinyPresentationNodeCollectibleChildEntry]);
            }
            if (data.hasOwnProperty('craftables')) {
                obj['craftables'] = ApiClient.convertToType(data['craftables'], [DestinyDefinitionsPresentationDestinyPresentationNodeCraftableChildEntry]);
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], [DestinyDefinitionsPresentationDestinyPresentationNodeMetricChildEntry]);
            }
            if (data.hasOwnProperty('presentationNodes')) {
                obj['presentationNodes'] = ApiClient.convertToType(data['presentationNodes'], [DestinyDefinitionsPresentationDestinyPresentationNodeChildEntry]);
            }
            if (data.hasOwnProperty('records')) {
                obj['records'] = ApiClient.convertToType(data['records'], [DestinyDefinitionsPresentationDestinyPresentationNodeRecordChildEntry]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock</code>.
     */
    static validateJSON(data) {
        if (data['collectibles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['collectibles'])) {
                throw new Error("Expected the field `collectibles` to be an array in the JSON data but got " + data['collectibles']);
            }
            // validate the optional field `collectibles` (array)
            for (const item of data['collectibles']) {
                DestinyDefinitionsPresentationDestinyPresentationNodeCollectibleChildEntry.validateJSON(item);
            };
        }
        if (data['craftables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['craftables'])) {
                throw new Error("Expected the field `craftables` to be an array in the JSON data but got " + data['craftables']);
            }
            // validate the optional field `craftables` (array)
            for (const item of data['craftables']) {
                DestinyDefinitionsPresentationDestinyPresentationNodeCraftableChildEntry.validateJSON(item);
            };
        }
        if (data['metrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metrics'])) {
                throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
            }
            // validate the optional field `metrics` (array)
            for (const item of data['metrics']) {
                DestinyDefinitionsPresentationDestinyPresentationNodeMetricChildEntry.validateJSON(item);
            };
        }
        if (data['presentationNodes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['presentationNodes'])) {
                throw new Error("Expected the field `presentationNodes` to be an array in the JSON data but got " + data['presentationNodes']);
            }
            // validate the optional field `presentationNodes` (array)
            for (const item of data['presentationNodes']) {
                DestinyDefinitionsPresentationDestinyPresentationNodeChildEntry.validateJSON(item);
            };
        }
        if (data['records']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['records'])) {
                throw new Error("Expected the field `records` to be an array in the JSON data but got " + data['records']);
            }
            // validate the optional field `records` (array)
            for (const item of data['records']) {
                DestinyDefinitionsPresentationDestinyPresentationNodeRecordChildEntry.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/DestinyDefinitionsPresentationDestinyPresentationNodeCollectibleChildEntry>} collectibles
 */
DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock.prototype['collectibles'] = undefined;

/**
 * @member {Array.<module:model/DestinyDefinitionsPresentationDestinyPresentationNodeCraftableChildEntry>} craftables
 */
DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock.prototype['craftables'] = undefined;

/**
 * @member {Array.<module:model/DestinyDefinitionsPresentationDestinyPresentationNodeMetricChildEntry>} metrics
 */
DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock.prototype['metrics'] = undefined;

/**
 * @member {Array.<module:model/DestinyDefinitionsPresentationDestinyPresentationNodeChildEntry>} presentationNodes
 */
DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock.prototype['presentationNodes'] = undefined;

/**
 * @member {Array.<module:model/DestinyDefinitionsPresentationDestinyPresentationNodeRecordChildEntry>} records
 */
DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock.prototype['records'] = undefined;






export default DestinyDefinitionsPresentationDestinyPresentationNodeChildrenBlock;

