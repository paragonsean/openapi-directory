/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyItemTalentGridBlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyItemTalentGridBlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemTalentGridBlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemTalentGridBlockDefinition</code>.
     * This defines information that can only come from a talent grid on an item. Items mostly have negligible talent grid data these days, but instanced items still retain grids as a source for some of this common information.  Builds/Subclasses are the only items left that still have talent grids with meaningful Nodes.
     * @alias module:model/DestinyDefinitionsDestinyItemTalentGridBlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemTalentGridBlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemTalentGridBlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemTalentGridBlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemTalentGridBlockDefinition} The populated <code>DestinyDefinitionsDestinyItemTalentGridBlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemTalentGridBlockDefinition();

            if (data.hasOwnProperty('buildName')) {
                obj['buildName'] = ApiClient.convertToType(data['buildName'], 'String');
            }
            if (data.hasOwnProperty('hudDamageType')) {
                obj['hudDamageType'] = ApiClient.convertToType(data['hudDamageType'], 'Number');
            }
            if (data.hasOwnProperty('hudIcon')) {
                obj['hudIcon'] = ApiClient.convertToType(data['hudIcon'], 'String');
            }
            if (data.hasOwnProperty('itemDetailString')) {
                obj['itemDetailString'] = ApiClient.convertToType(data['itemDetailString'], 'String');
            }
            if (data.hasOwnProperty('talentGridHash')) {
                obj['talentGridHash'] = ApiClient.convertToType(data['talentGridHash'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemTalentGridBlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemTalentGridBlockDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['buildName'] && !(typeof data['buildName'] === 'string' || data['buildName'] instanceof String)) {
            throw new Error("Expected the field `buildName` to be a primitive type in the JSON string but got " + data['buildName']);
        }
        // ensure the json data is a string
        if (data['hudIcon'] && !(typeof data['hudIcon'] === 'string' || data['hudIcon'] instanceof String)) {
            throw new Error("Expected the field `hudIcon` to be a primitive type in the JSON string but got " + data['hudIcon']);
        }
        // ensure the json data is a string
        if (data['itemDetailString'] && !(typeof data['itemDetailString'] === 'string' || data['itemDetailString'] instanceof String)) {
            throw new Error("Expected the field `itemDetailString` to be a primitive type in the JSON string but got " + data['itemDetailString']);
        }

        return true;
    }


}



/**
 * A shortcut string identifier for the \"build\" in question, if this talent grid has an associated build. Doesn't map to anything we can expose at the moment.
 * @member {String} buildName
 */
DestinyDefinitionsDestinyItemTalentGridBlockDefinition.prototype['buildName'] = undefined;

/**
 * If the talent grid implies a damage type, this is the enum value for that damage type.
 * @member {Number} hudDamageType
 */
DestinyDefinitionsDestinyItemTalentGridBlockDefinition.prototype['hudDamageType'] = undefined;

/**
 * If the talent grid has a special icon that's shown in the game UI (like builds, funny that), this is the identifier for that icon. Sadly, we don't actually get that icon right now. I'll be looking to replace this with a path to the actual icon itself.
 * @member {String} hudIcon
 */
DestinyDefinitionsDestinyItemTalentGridBlockDefinition.prototype['hudIcon'] = undefined;

/**
 * This is meant to be a subtitle for looking at the talent grid. In practice, somewhat frustratingly, this always merely says the localized word for \"Details\". Great. Maybe it'll have more if talent grids ever get used for more than builds and subclasses again.
 * @member {String} itemDetailString
 */
DestinyDefinitionsDestinyItemTalentGridBlockDefinition.prototype['itemDetailString'] = undefined;

/**
 * The hash identifier of the DestinyTalentGridDefinition attached to this item.
 * @member {Number} talentGridHash
 */
DestinyDefinitionsDestinyItemTalentGridBlockDefinition.prototype['talentGridHash'] = undefined;






export default DestinyDefinitionsDestinyItemTalentGridBlockDefinition;

