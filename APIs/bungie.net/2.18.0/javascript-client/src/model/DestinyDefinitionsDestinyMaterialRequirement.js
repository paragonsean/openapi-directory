/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDestinyMaterialRequirement model module.
 * @module model/DestinyDefinitionsDestinyMaterialRequirement
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyMaterialRequirement {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyMaterialRequirement</code>.
     * Many actions relating to items require you to expend materials: - Activating a talent node - Inserting a plug into a socket The items will refer to material requirements by a materialRequirementsHash in these cases, and this is the definition for those requirements in terms of the item required, how much of it is required and other interesting info. This is one of the rare/strange times where a single contract class is used both in definitions *and* in live data response contracts. I&#39;m not sure yet whether I regret that.
     * @alias module:model/DestinyDefinitionsDestinyMaterialRequirement
     */
    constructor() { 
        
        DestinyDefinitionsDestinyMaterialRequirement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyMaterialRequirement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyMaterialRequirement} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyMaterialRequirement} The populated <code>DestinyDefinitionsDestinyMaterialRequirement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyMaterialRequirement();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('countIsConstant')) {
                obj['countIsConstant'] = ApiClient.convertToType(data['countIsConstant'], 'Boolean');
            }
            if (data.hasOwnProperty('deleteOnAction')) {
                obj['deleteOnAction'] = ApiClient.convertToType(data['deleteOnAction'], 'Boolean');
            }
            if (data.hasOwnProperty('itemHash')) {
                obj['itemHash'] = ApiClient.convertToType(data['itemHash'], 'Number');
            }
            if (data.hasOwnProperty('omitFromRequirements')) {
                obj['omitFromRequirements'] = ApiClient.convertToType(data['omitFromRequirements'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyMaterialRequirement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyMaterialRequirement</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The amount of the material required.
 * @member {Number} count
 */
DestinyDefinitionsDestinyMaterialRequirement.prototype['count'] = undefined;

/**
 * If true, the material requirement count value is constant. Since The Witch Queen expansion, some material requirement counts can be dynamic and will need to be returned with an API call.
 * @member {Boolean} countIsConstant
 */
DestinyDefinitionsDestinyMaterialRequirement.prototype['countIsConstant'] = undefined;

/**
 * If True, the material will be removed from the character's inventory when the action is performed.
 * @member {Boolean} deleteOnAction
 */
DestinyDefinitionsDestinyMaterialRequirement.prototype['deleteOnAction'] = undefined;

/**
 * The hash identifier of the material required. Use it to look up the material's DestinyInventoryItemDefinition.
 * @member {Number} itemHash
 */
DestinyDefinitionsDestinyMaterialRequirement.prototype['itemHash'] = undefined;

/**
 * If True, this requirement is \"silent\": don't bother showing it in a material requirements display. I mean, I'm not your mom: I'm not going to tell you you *can't* show it. But we won't show it in our UI.
 * @member {Boolean} omitFromRequirements
 */
DestinyDefinitionsDestinyMaterialRequirement.prototype['omitFromRequirements'] = undefined;






export default DestinyDefinitionsDestinyMaterialRequirement;

