/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDestinyUnlockStatus model module.
 * @module model/DestinyDestinyUnlockStatus
 * @version 2.18.0
 */
class DestinyDestinyUnlockStatus {
    /**
     * Constructs a new <code>DestinyDestinyUnlockStatus</code>.
     * Indicates the status of an \&quot;Unlock Flag\&quot; on a Character or Profile.  These are individual bits of state that can be either set or not set, and sometimes provide interesting human-readable information in their related DestinyUnlockDefinition.
     * @alias module:model/DestinyDestinyUnlockStatus
     */
    constructor() { 
        
        DestinyDestinyUnlockStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDestinyUnlockStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDestinyUnlockStatus} obj Optional instance to populate.
     * @return {module:model/DestinyDestinyUnlockStatus} The populated <code>DestinyDestinyUnlockStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDestinyUnlockStatus();

            if (data.hasOwnProperty('isSet')) {
                obj['isSet'] = ApiClient.convertToType(data['isSet'], 'Boolean');
            }
            if (data.hasOwnProperty('unlockHash')) {
                obj['unlockHash'] = ApiClient.convertToType(data['unlockHash'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDestinyUnlockStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDestinyUnlockStatus</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Whether the unlock flag is set.
 * @member {Boolean} isSet
 */
DestinyDestinyUnlockStatus.prototype['isSet'] = undefined;

/**
 * The hash identifier for the Unlock Flag. Use to lookup DestinyUnlockDefinition for static data. Not all unlocks have human readable data - in fact, most don't. But when they do, it can be very useful to show. Even if they don't have human readable data, you might be able to infer the meaning of an unlock flag with a bit of experimentation...
 * @member {Number} unlockHash
 */
DestinyDestinyUnlockStatus.prototype['unlockHash'] = undefined;






export default DestinyDestinyUnlockStatus;

