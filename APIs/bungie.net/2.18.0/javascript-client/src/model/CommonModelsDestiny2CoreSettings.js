/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CommonModelsDestiny2CoreSettings model module.
 * @module model/CommonModelsDestiny2CoreSettings
 * @version 2.18.0
 */
class CommonModelsDestiny2CoreSettings {
    /**
     * Constructs a new <code>CommonModelsDestiny2CoreSettings</code>.
     * @alias module:model/CommonModelsDestiny2CoreSettings
     */
    constructor() { 
        
        CommonModelsDestiny2CoreSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommonModelsDestiny2CoreSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommonModelsDestiny2CoreSettings} obj Optional instance to populate.
     * @return {module:model/CommonModelsDestiny2CoreSettings} The populated <code>CommonModelsDestiny2CoreSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonModelsDestiny2CoreSettings();

            if (data.hasOwnProperty('activeSealsRootNodeHash')) {
                obj['activeSealsRootNodeHash'] = ApiClient.convertToType(data['activeSealsRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('activeTriumphsRootNodeHash')) {
                obj['activeTriumphsRootNodeHash'] = ApiClient.convertToType(data['activeTriumphsRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('ammoTypeHeavyIcon')) {
                obj['ammoTypeHeavyIcon'] = ApiClient.convertToType(data['ammoTypeHeavyIcon'], 'String');
            }
            if (data.hasOwnProperty('ammoTypePrimaryIcon')) {
                obj['ammoTypePrimaryIcon'] = ApiClient.convertToType(data['ammoTypePrimaryIcon'], 'String');
            }
            if (data.hasOwnProperty('ammoTypeSpecialIcon')) {
                obj['ammoTypeSpecialIcon'] = ApiClient.convertToType(data['ammoTypeSpecialIcon'], 'String');
            }
            if (data.hasOwnProperty('badgesRootNode')) {
                obj['badgesRootNode'] = ApiClient.convertToType(data['badgesRootNode'], 'Number');
            }
            if (data.hasOwnProperty('collectionRootNode')) {
                obj['collectionRootNode'] = ApiClient.convertToType(data['collectionRootNode'], 'Number');
            }
            if (data.hasOwnProperty('craftingRootNodeHash')) {
                obj['craftingRootNodeHash'] = ApiClient.convertToType(data['craftingRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('currentRankProgressionHashes')) {
                obj['currentRankProgressionHashes'] = ApiClient.convertToType(data['currentRankProgressionHashes'], ['Number']);
            }
            if (data.hasOwnProperty('currentSeasonHash')) {
                obj['currentSeasonHash'] = ApiClient.convertToType(data['currentSeasonHash'], 'Number');
            }
            if (data.hasOwnProperty('currentSeasonalArtifactHash')) {
                obj['currentSeasonalArtifactHash'] = ApiClient.convertToType(data['currentSeasonalArtifactHash'], 'Number');
            }
            if (data.hasOwnProperty('exoticCatalystsRootNodeHash')) {
                obj['exoticCatalystsRootNodeHash'] = ApiClient.convertToType(data['exoticCatalystsRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('futureSeasonHashes')) {
                obj['futureSeasonHashes'] = ApiClient.convertToType(data['futureSeasonHashes'], ['Number']);
            }
            if (data.hasOwnProperty('guardianRankConstantsHash')) {
                obj['guardianRankConstantsHash'] = ApiClient.convertToType(data['guardianRankConstantsHash'], 'Number');
            }
            if (data.hasOwnProperty('guardianRanksRootNodeHash')) {
                obj['guardianRanksRootNodeHash'] = ApiClient.convertToType(data['guardianRanksRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('insertPlugFreeBlockedSocketTypeHashes')) {
                obj['insertPlugFreeBlockedSocketTypeHashes'] = ApiClient.convertToType(data['insertPlugFreeBlockedSocketTypeHashes'], ['Number']);
            }
            if (data.hasOwnProperty('insertPlugFreeProtectedPlugItemHashes')) {
                obj['insertPlugFreeProtectedPlugItemHashes'] = ApiClient.convertToType(data['insertPlugFreeProtectedPlugItemHashes'], ['Number']);
            }
            if (data.hasOwnProperty('legacySealsRootNodeHash')) {
                obj['legacySealsRootNodeHash'] = ApiClient.convertToType(data['legacySealsRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('legacyTriumphsRootNodeHash')) {
                obj['legacyTriumphsRootNodeHash'] = ApiClient.convertToType(data['legacyTriumphsRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('loadoutConstantsHash')) {
                obj['loadoutConstantsHash'] = ApiClient.convertToType(data['loadoutConstantsHash'], 'Number');
            }
            if (data.hasOwnProperty('loreRootNodeHash')) {
                obj['loreRootNodeHash'] = ApiClient.convertToType(data['loreRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('medalsRootNode')) {
                obj['medalsRootNode'] = ApiClient.convertToType(data['medalsRootNode'], 'Number');
            }
            if (data.hasOwnProperty('medalsRootNodeHash')) {
                obj['medalsRootNodeHash'] = ApiClient.convertToType(data['medalsRootNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('metricsRootNode')) {
                obj['metricsRootNode'] = ApiClient.convertToType(data['metricsRootNode'], 'Number');
            }
            if (data.hasOwnProperty('pastSeasonHashes')) {
                obj['pastSeasonHashes'] = ApiClient.convertToType(data['pastSeasonHashes'], ['Number']);
            }
            if (data.hasOwnProperty('recordsRootNode')) {
                obj['recordsRootNode'] = ApiClient.convertToType(data['recordsRootNode'], 'Number');
            }
            if (data.hasOwnProperty('seasonalChallengesPresentationNodeHash')) {
                obj['seasonalChallengesPresentationNodeHash'] = ApiClient.convertToType(data['seasonalChallengesPresentationNodeHash'], 'Number');
            }
            if (data.hasOwnProperty('undiscoveredCollectibleImage')) {
                obj['undiscoveredCollectibleImage'] = ApiClient.convertToType(data['undiscoveredCollectibleImage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommonModelsDestiny2CoreSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommonModelsDestiny2CoreSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ammoTypeHeavyIcon'] && !(typeof data['ammoTypeHeavyIcon'] === 'string' || data['ammoTypeHeavyIcon'] instanceof String)) {
            throw new Error("Expected the field `ammoTypeHeavyIcon` to be a primitive type in the JSON string but got " + data['ammoTypeHeavyIcon']);
        }
        // ensure the json data is a string
        if (data['ammoTypePrimaryIcon'] && !(typeof data['ammoTypePrimaryIcon'] === 'string' || data['ammoTypePrimaryIcon'] instanceof String)) {
            throw new Error("Expected the field `ammoTypePrimaryIcon` to be a primitive type in the JSON string but got " + data['ammoTypePrimaryIcon']);
        }
        // ensure the json data is a string
        if (data['ammoTypeSpecialIcon'] && !(typeof data['ammoTypeSpecialIcon'] === 'string' || data['ammoTypeSpecialIcon'] instanceof String)) {
            throw new Error("Expected the field `ammoTypeSpecialIcon` to be a primitive type in the JSON string but got " + data['ammoTypeSpecialIcon']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['currentRankProgressionHashes'])) {
            throw new Error("Expected the field `currentRankProgressionHashes` to be an array in the JSON data but got " + data['currentRankProgressionHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['futureSeasonHashes'])) {
            throw new Error("Expected the field `futureSeasonHashes` to be an array in the JSON data but got " + data['futureSeasonHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['insertPlugFreeBlockedSocketTypeHashes'])) {
            throw new Error("Expected the field `insertPlugFreeBlockedSocketTypeHashes` to be an array in the JSON data but got " + data['insertPlugFreeBlockedSocketTypeHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['insertPlugFreeProtectedPlugItemHashes'])) {
            throw new Error("Expected the field `insertPlugFreeProtectedPlugItemHashes` to be an array in the JSON data but got " + data['insertPlugFreeProtectedPlugItemHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['pastSeasonHashes'])) {
            throw new Error("Expected the field `pastSeasonHashes` to be an array in the JSON data but got " + data['pastSeasonHashes']);
        }
        // ensure the json data is a string
        if (data['undiscoveredCollectibleImage'] && !(typeof data['undiscoveredCollectibleImage'] === 'string' || data['undiscoveredCollectibleImage'] instanceof String)) {
            throw new Error("Expected the field `undiscoveredCollectibleImage` to be a primitive type in the JSON string but got " + data['undiscoveredCollectibleImage']);
        }

        return true;
    }


}



/**
 * @member {Number} activeSealsRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['activeSealsRootNodeHash'] = undefined;

/**
 * @member {Number} activeTriumphsRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['activeTriumphsRootNodeHash'] = undefined;

/**
 * @member {String} ammoTypeHeavyIcon
 */
CommonModelsDestiny2CoreSettings.prototype['ammoTypeHeavyIcon'] = undefined;

/**
 * @member {String} ammoTypePrimaryIcon
 */
CommonModelsDestiny2CoreSettings.prototype['ammoTypePrimaryIcon'] = undefined;

/**
 * @member {String} ammoTypeSpecialIcon
 */
CommonModelsDestiny2CoreSettings.prototype['ammoTypeSpecialIcon'] = undefined;

/**
 * @member {Number} badgesRootNode
 */
CommonModelsDestiny2CoreSettings.prototype['badgesRootNode'] = undefined;

/**
 * @member {Number} collectionRootNode
 */
CommonModelsDestiny2CoreSettings.prototype['collectionRootNode'] = undefined;

/**
 * @member {Number} craftingRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['craftingRootNodeHash'] = undefined;

/**
 * @member {Array.<Number>} currentRankProgressionHashes
 */
CommonModelsDestiny2CoreSettings.prototype['currentRankProgressionHashes'] = undefined;

/**
 * @member {Number} currentSeasonHash
 */
CommonModelsDestiny2CoreSettings.prototype['currentSeasonHash'] = undefined;

/**
 * @member {Number} currentSeasonalArtifactHash
 */
CommonModelsDestiny2CoreSettings.prototype['currentSeasonalArtifactHash'] = undefined;

/**
 * @member {Number} exoticCatalystsRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['exoticCatalystsRootNodeHash'] = undefined;

/**
 * @member {Array.<Number>} futureSeasonHashes
 */
CommonModelsDestiny2CoreSettings.prototype['futureSeasonHashes'] = undefined;

/**
 * @member {Number} guardianRankConstantsHash
 */
CommonModelsDestiny2CoreSettings.prototype['guardianRankConstantsHash'] = undefined;

/**
 * @member {Number} guardianRanksRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['guardianRanksRootNodeHash'] = undefined;

/**
 * @member {Array.<Number>} insertPlugFreeBlockedSocketTypeHashes
 */
CommonModelsDestiny2CoreSettings.prototype['insertPlugFreeBlockedSocketTypeHashes'] = undefined;

/**
 * @member {Array.<Number>} insertPlugFreeProtectedPlugItemHashes
 */
CommonModelsDestiny2CoreSettings.prototype['insertPlugFreeProtectedPlugItemHashes'] = undefined;

/**
 * @member {Number} legacySealsRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['legacySealsRootNodeHash'] = undefined;

/**
 * @member {Number} legacyTriumphsRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['legacyTriumphsRootNodeHash'] = undefined;

/**
 * @member {Number} loadoutConstantsHash
 */
CommonModelsDestiny2CoreSettings.prototype['loadoutConstantsHash'] = undefined;

/**
 * @member {Number} loreRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['loreRootNodeHash'] = undefined;

/**
 * @member {Number} medalsRootNode
 */
CommonModelsDestiny2CoreSettings.prototype['medalsRootNode'] = undefined;

/**
 * @member {Number} medalsRootNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['medalsRootNodeHash'] = undefined;

/**
 * @member {Number} metricsRootNode
 */
CommonModelsDestiny2CoreSettings.prototype['metricsRootNode'] = undefined;

/**
 * @member {Array.<Number>} pastSeasonHashes
 */
CommonModelsDestiny2CoreSettings.prototype['pastSeasonHashes'] = undefined;

/**
 * @member {Number} recordsRootNode
 */
CommonModelsDestiny2CoreSettings.prototype['recordsRootNode'] = undefined;

/**
 * @member {Number} seasonalChallengesPresentationNodeHash
 */
CommonModelsDestiny2CoreSettings.prototype['seasonalChallengesPresentationNodeHash'] = undefined;

/**
 * @member {String} undiscoveredCollectibleImage
 */
CommonModelsDestiny2CoreSettings.prototype['undiscoveredCollectibleImage'] = undefined;






export default CommonModelsDestiny2CoreSettings;

