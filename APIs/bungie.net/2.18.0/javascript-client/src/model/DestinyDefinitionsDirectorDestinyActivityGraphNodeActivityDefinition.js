/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition model module.
 * @module model/DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition</code>.
     * The actual activity to be redirected to when you click on the node. Note that a node can have many Activities attached to it: but only one will be active at any given time. The list of Node Activities will be traversed, and the first one found to be active will be displayed. This way, a node can layer multiple variants of an activity on top of each other. For instance, one node can control the weekly Crucible Playlist. There are multiple possible playlists, but only one is active for the week.
     * @alias module:model/DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition} The populated <code>DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition();

            if (data.hasOwnProperty('activityHash')) {
                obj['activityHash'] = ApiClient.convertToType(data['activityHash'], 'Number');
            }
            if (data.hasOwnProperty('nodeActivityId')) {
                obj['nodeActivityId'] = ApiClient.convertToType(data['nodeActivityId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The activity that will be activated if the user clicks on this node. Controls all activity-related information displayed on the node if it is active (the text shown in the tooltip etc)
 * @member {Number} activityHash
 */
DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.prototype['activityHash'] = undefined;

/**
 * An identifier for this node activity. It is only guaranteed to be unique within the Activity Graph.
 * @member {Number} nodeActivityId
 */
DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition.prototype['nodeActivityId'] = undefined;






export default DestinyDefinitionsDirectorDestinyActivityGraphNodeActivityDefinition;

