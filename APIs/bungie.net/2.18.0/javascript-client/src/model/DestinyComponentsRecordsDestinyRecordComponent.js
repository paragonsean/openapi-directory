/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyQuestsDestinyObjectiveProgress from './DestinyQuestsDestinyObjectiveProgress';

/**
 * The DestinyComponentsRecordsDestinyRecordComponent model module.
 * @module model/DestinyComponentsRecordsDestinyRecordComponent
 * @version 2.18.0
 */
class DestinyComponentsRecordsDestinyRecordComponent {
    /**
     * Constructs a new <code>DestinyComponentsRecordsDestinyRecordComponent</code>.
     * @alias module:model/DestinyComponentsRecordsDestinyRecordComponent
     */
    constructor() { 
        
        DestinyComponentsRecordsDestinyRecordComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyComponentsRecordsDestinyRecordComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyComponentsRecordsDestinyRecordComponent} obj Optional instance to populate.
     * @return {module:model/DestinyComponentsRecordsDestinyRecordComponent} The populated <code>DestinyComponentsRecordsDestinyRecordComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyComponentsRecordsDestinyRecordComponent();

            if (data.hasOwnProperty('completedCount')) {
                obj['completedCount'] = ApiClient.convertToType(data['completedCount'], 'Number');
            }
            if (data.hasOwnProperty('intervalObjectives')) {
                obj['intervalObjectives'] = ApiClient.convertToType(data['intervalObjectives'], [DestinyQuestsDestinyObjectiveProgress]);
            }
            if (data.hasOwnProperty('intervalsRedeemedCount')) {
                obj['intervalsRedeemedCount'] = ApiClient.convertToType(data['intervalsRedeemedCount'], 'Number');
            }
            if (data.hasOwnProperty('objectives')) {
                obj['objectives'] = ApiClient.convertToType(data['objectives'], [DestinyQuestsDestinyObjectiveProgress]);
            }
            if (data.hasOwnProperty('rewardVisibilty')) {
                obj['rewardVisibilty'] = ApiClient.convertToType(data['rewardVisibilty'], ['Boolean']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyComponentsRecordsDestinyRecordComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyComponentsRecordsDestinyRecordComponent</code>.
     */
    static validateJSON(data) {
        if (data['intervalObjectives']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['intervalObjectives'])) {
                throw new Error("Expected the field `intervalObjectives` to be an array in the JSON data but got " + data['intervalObjectives']);
            }
            // validate the optional field `intervalObjectives` (array)
            for (const item of data['intervalObjectives']) {
                DestinyQuestsDestinyObjectiveProgress.validateJSON(item);
            };
        }
        if (data['objectives']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['objectives'])) {
                throw new Error("Expected the field `objectives` to be an array in the JSON data but got " + data['objectives']);
            }
            // validate the optional field `objectives` (array)
            for (const item of data['objectives']) {
                DestinyQuestsDestinyObjectiveProgress.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rewardVisibilty'])) {
            throw new Error("Expected the field `rewardVisibilty` to be an array in the JSON data but got " + data['rewardVisibilty']);
        }

        return true;
    }


}



/**
 * If available, this is the number of times this record has been completed. For example, the number of times a seal title has been gilded.
 * @member {Number} completedCount
 */
DestinyComponentsRecordsDestinyRecordComponent.prototype['completedCount'] = undefined;

/**
 * @member {Array.<module:model/DestinyQuestsDestinyObjectiveProgress>} intervalObjectives
 */
DestinyComponentsRecordsDestinyRecordComponent.prototype['intervalObjectives'] = undefined;

/**
 * @member {Number} intervalsRedeemedCount
 */
DestinyComponentsRecordsDestinyRecordComponent.prototype['intervalsRedeemedCount'] = undefined;

/**
 * @member {Array.<module:model/DestinyQuestsDestinyObjectiveProgress>} objectives
 */
DestinyComponentsRecordsDestinyRecordComponent.prototype['objectives'] = undefined;

/**
 * If available, a list that describes which reward rewards should be shown (true) or hidden (false). This property is for regular record rewards, and not for interval objective rewards.
 * @member {Array.<Boolean>} rewardVisibilty
 */
DestinyComponentsRecordsDestinyRecordComponent.prototype['rewardVisibilty'] = undefined;

/**
 * @member {Number} state
 */
DestinyComponentsRecordsDestinyRecordComponent.prototype['state'] = undefined;






export default DestinyComponentsRecordsDestinyRecordComponent;

