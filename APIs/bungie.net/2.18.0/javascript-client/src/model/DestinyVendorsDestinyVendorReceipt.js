/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDestinyItemQuantity from './DestinyDestinyItemQuantity';

/**
 * The DestinyVendorsDestinyVendorReceipt model module.
 * @module model/DestinyVendorsDestinyVendorReceipt
 * @version 2.18.0
 */
class DestinyVendorsDestinyVendorReceipt {
    /**
     * Constructs a new <code>DestinyVendorsDestinyVendorReceipt</code>.
     * If a character purchased an item that is refundable, a Vendor Receipt will be created on the user&#39;s Destiny Profile. These expire after a configurable period of time, but until then can be used to get refunds on items. BNet does not provide the ability to refund a purchase *yet*, but you know.
     * @alias module:model/DestinyVendorsDestinyVendorReceipt
     */
    constructor() { 
        
        DestinyVendorsDestinyVendorReceipt.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyVendorsDestinyVendorReceipt</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyVendorsDestinyVendorReceipt} obj Optional instance to populate.
     * @return {module:model/DestinyVendorsDestinyVendorReceipt} The populated <code>DestinyVendorsDestinyVendorReceipt</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyVendorsDestinyVendorReceipt();

            if (data.hasOwnProperty('currencyPaid')) {
                obj['currencyPaid'] = ApiClient.convertToType(data['currencyPaid'], [DestinyDestinyItemQuantity]);
            }
            if (data.hasOwnProperty('expiresOn')) {
                obj['expiresOn'] = ApiClient.convertToType(data['expiresOn'], 'Date');
            }
            if (data.hasOwnProperty('itemReceived')) {
                obj['itemReceived'] = ApiClient.convertToType(data['itemReceived'], DestinyDestinyItemQuantity);
            }
            if (data.hasOwnProperty('licenseUnlockHash')) {
                obj['licenseUnlockHash'] = ApiClient.convertToType(data['licenseUnlockHash'], 'Number');
            }
            if (data.hasOwnProperty('purchasedByCharacterId')) {
                obj['purchasedByCharacterId'] = ApiClient.convertToType(data['purchasedByCharacterId'], 'Number');
            }
            if (data.hasOwnProperty('refundPolicy')) {
                obj['refundPolicy'] = ApiClient.convertToType(data['refundPolicy'], 'Number');
            }
            if (data.hasOwnProperty('sequenceNumber')) {
                obj['sequenceNumber'] = ApiClient.convertToType(data['sequenceNumber'], 'Number');
            }
            if (data.hasOwnProperty('timeToExpiration')) {
                obj['timeToExpiration'] = ApiClient.convertToType(data['timeToExpiration'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyVendorsDestinyVendorReceipt</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyVendorsDestinyVendorReceipt</code>.
     */
    static validateJSON(data) {
        if (data['currencyPaid']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['currencyPaid'])) {
                throw new Error("Expected the field `currencyPaid` to be an array in the JSON data but got " + data['currencyPaid']);
            }
            // validate the optional field `currencyPaid` (array)
            for (const item of data['currencyPaid']) {
                DestinyDestinyItemQuantity.validateJSON(item);
            };
        }
        // validate the optional field `itemReceived`
        if (data['itemReceived']) { // data not null
          DestinyDestinyItemQuantity.validateJSON(data['itemReceived']);
        }

        return true;
    }


}



/**
 * The amount paid for the item, in terms of items that were consumed in the purchase and their quantity.
 * @member {Array.<module:model/DestinyDestinyItemQuantity>} currencyPaid
 */
DestinyVendorsDestinyVendorReceipt.prototype['currencyPaid'] = undefined;

/**
 * The date at which this receipt is rendered invalid.
 * @member {Date} expiresOn
 */
DestinyVendorsDestinyVendorReceipt.prototype['expiresOn'] = undefined;

/**
 * The item that was received, and its quantity.
 * @member {module:model/DestinyDestinyItemQuantity} itemReceived
 */
DestinyVendorsDestinyVendorReceipt.prototype['itemReceived'] = undefined;

/**
 * The unlock flag used to determine whether you still have the purchased item.
 * @member {Number} licenseUnlockHash
 */
DestinyVendorsDestinyVendorReceipt.prototype['licenseUnlockHash'] = undefined;

/**
 * The ID of the character who made the purchase.
 * @member {Number} purchasedByCharacterId
 */
DestinyVendorsDestinyVendorReceipt.prototype['purchasedByCharacterId'] = undefined;

/**
 * Whether you can get a refund, and what happens in order for the refund to be received. See the DestinyVendorItemRefundPolicy enum for details.
 * @member {Number} refundPolicy
 */
DestinyVendorsDestinyVendorReceipt.prototype['refundPolicy'] = undefined;

/**
 * The identifier of this receipt.
 * @member {Number} sequenceNumber
 */
DestinyVendorsDestinyVendorReceipt.prototype['sequenceNumber'] = undefined;

/**
 * The seconds since epoch at which this receipt is rendered invalid.
 * @member {Number} timeToExpiration
 */
DestinyVendorsDestinyVendorReceipt.prototype['timeToExpiration'] = undefined;






export default DestinyVendorsDestinyVendorReceipt;

