/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsDestinyInventoryItemStatDefinition from './DestinyDefinitionsDestinyInventoryItemStatDefinition';

/**
 * The DestinyDefinitionsSourcesDestinyItemSourceDefinition model module.
 * @module model/DestinyDefinitionsSourcesDestinyItemSourceDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsSourcesDestinyItemSourceDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsSourcesDestinyItemSourceDefinition</code>.
     * Properties of a DestinyInventoryItemDefinition that store all of the information we were able to discern about how the item spawns, and where you can find the item.  Items will have many of these sources, one per level at which it spawns, to try and give more granular data about where items spawn for specific level ranges.
     * @alias module:model/DestinyDefinitionsSourcesDestinyItemSourceDefinition
     */
    constructor() { 
        
        DestinyDefinitionsSourcesDestinyItemSourceDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsSourcesDestinyItemSourceDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsSourcesDestinyItemSourceDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsSourcesDestinyItemSourceDefinition} The populated <code>DestinyDefinitionsSourcesDestinyItemSourceDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsSourcesDestinyItemSourceDefinition();

            if (data.hasOwnProperty('computedStats')) {
                obj['computedStats'] = ApiClient.convertToType(data['computedStats'], {'String': DestinyDefinitionsDestinyInventoryItemStatDefinition});
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'Number');
            }
            if (data.hasOwnProperty('maxLevelRequired')) {
                obj['maxLevelRequired'] = ApiClient.convertToType(data['maxLevelRequired'], 'Number');
            }
            if (data.hasOwnProperty('maxQuality')) {
                obj['maxQuality'] = ApiClient.convertToType(data['maxQuality'], 'Number');
            }
            if (data.hasOwnProperty('minLevelRequired')) {
                obj['minLevelRequired'] = ApiClient.convertToType(data['minLevelRequired'], 'Number');
            }
            if (data.hasOwnProperty('minQuality')) {
                obj['minQuality'] = ApiClient.convertToType(data['minQuality'], 'Number');
            }
            if (data.hasOwnProperty('sourceHashes')) {
                obj['sourceHashes'] = ApiClient.convertToType(data['sourceHashes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsSourcesDestinyItemSourceDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsSourcesDestinyItemSourceDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['sourceHashes'])) {
            throw new Error("Expected the field `sourceHashes` to be an array in the JSON data but got " + data['sourceHashes']);
        }

        return true;
    }


}



/**
 * The stats computed for this level/quality range.
 * @member {Object.<String, module:model/DestinyDefinitionsDestinyInventoryItemStatDefinition>} computedStats
 */
DestinyDefinitionsSourcesDestinyItemSourceDefinition.prototype['computedStats'] = undefined;

/**
 * The level at which the item spawns. Essentially the Primary Key for this source data: there will be multiple of these source entries per item that has source data, grouped by the level at which the item spawns.
 * @member {Number} level
 */
DestinyDefinitionsSourcesDestinyItemSourceDefinition.prototype['level'] = undefined;

/**
 * The maximum Character Level required for equipping the item when the item spawns at the item level defined on this DestinyItemSourceDefinition, as far as we saw in our processing.
 * @member {Number} maxLevelRequired
 */
DestinyDefinitionsSourcesDestinyItemSourceDefinition.prototype['maxLevelRequired'] = undefined;

/**
 * The maximum quality at which the item spawns for this level.
 * @member {Number} maxQuality
 */
DestinyDefinitionsSourcesDestinyItemSourceDefinition.prototype['maxQuality'] = undefined;

/**
 * The minimum Character Level required for equipping the item when the item spawns at the item level defined on this DestinyItemSourceDefinition, as far as we saw in our processing.
 * @member {Number} minLevelRequired
 */
DestinyDefinitionsSourcesDestinyItemSourceDefinition.prototype['minLevelRequired'] = undefined;

/**
 * The minimum Quality at which the item spawns for this level. Examine DestinyInventoryItemDefinition for more information about what Quality means. Just don't ask Phaedrus about it, he'll never stop talking and you'll have to write a book about it.
 * @member {Number} minQuality
 */
DestinyDefinitionsSourcesDestinyItemSourceDefinition.prototype['minQuality'] = undefined;

/**
 * The DestinyRewardSourceDefinitions found that can spawn the item at this level.
 * @member {Array.<Number>} sourceHashes
 */
DestinyDefinitionsSourcesDestinyItemSourceDefinition.prototype['sourceHashes'] = undefined;






export default DestinyDefinitionsSourcesDestinyItemSourceDefinition;

