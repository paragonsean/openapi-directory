/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyComponentsKiosksDestinyKioskItem from './DestinyComponentsKiosksDestinyKioskItem';

/**
 * The DestinyComponentsKiosksDestinyKiosksComponent model module.
 * @module model/DestinyComponentsKiosksDestinyKiosksComponent
 * @version 2.18.0
 */
class DestinyComponentsKiosksDestinyKiosksComponent {
    /**
     * Constructs a new <code>DestinyComponentsKiosksDestinyKiosksComponent</code>.
     * A Kiosk is a Vendor (DestinyVendorDefinition) that sells items based on whether you have already acquired that item before.  This component returns information about what Kiosk items are available to you on a *Profile* level. It is theoretically possible for Kiosks to have items gated by specific Character as well. If you ever have those, you will find them on the individual character&#39;s DestinyCharacterKiosksComponent.  Note that, because this component returns vendorItemIndexes (that is to say, indexes into the Kiosk Vendor&#39;s itemList property), these results are necessarily content version dependent. Make sure that you have the latest version of the content manifest databases before using this data.
     * @alias module:model/DestinyComponentsKiosksDestinyKiosksComponent
     */
    constructor() { 
        
        DestinyComponentsKiosksDestinyKiosksComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyComponentsKiosksDestinyKiosksComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyComponentsKiosksDestinyKiosksComponent} obj Optional instance to populate.
     * @return {module:model/DestinyComponentsKiosksDestinyKiosksComponent} The populated <code>DestinyComponentsKiosksDestinyKiosksComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyComponentsKiosksDestinyKiosksComponent();

            if (data.hasOwnProperty('kioskItems')) {
                obj['kioskItems'] = ApiClient.convertToType(data['kioskItems'], {'String': [DestinyComponentsKiosksDestinyKioskItem]});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyComponentsKiosksDestinyKiosksComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyComponentsKiosksDestinyKiosksComponent</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A dictionary keyed by the Kiosk Vendor's hash identifier (use it to look up the DestinyVendorDefinition for the relevant kiosk vendor), and whose value is a list of all the items that the user can \"see\" in the Kiosk, and any other interesting metadata.
 * @member {Object.<String, Array.<module:model/DestinyComponentsKiosksDestinyKioskItem>>} kioskItems
 */
DestinyComponentsKiosksDestinyKiosksComponent.prototype['kioskItems'] = undefined;






export default DestinyComponentsKiosksDestinyKiosksComponent;

