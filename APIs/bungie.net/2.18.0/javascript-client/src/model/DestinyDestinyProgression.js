/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDestinyProgressionResetEntry from './DestinyDestinyProgressionResetEntry';

/**
 * The DestinyDestinyProgression model module.
 * @module model/DestinyDestinyProgression
 * @version 2.18.0
 */
class DestinyDestinyProgression {
    /**
     * Constructs a new <code>DestinyDestinyProgression</code>.
     * Information about a current character&#39;s status with a Progression. A progression is a value that can increase with activity and has levels. Think Character Level and Reputation Levels. Combine this \&quot;live\&quot; data with the related DestinyProgressionDefinition for a full picture of the Progression.
     * @alias module:model/DestinyDestinyProgression
     */
    constructor() { 
        
        DestinyDestinyProgression.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDestinyProgression</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDestinyProgression} obj Optional instance to populate.
     * @return {module:model/DestinyDestinyProgression} The populated <code>DestinyDestinyProgression</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDestinyProgression();

            if (data.hasOwnProperty('currentProgress')) {
                obj['currentProgress'] = ApiClient.convertToType(data['currentProgress'], 'Number');
            }
            if (data.hasOwnProperty('currentResetCount')) {
                obj['currentResetCount'] = ApiClient.convertToType(data['currentResetCount'], 'Number');
            }
            if (data.hasOwnProperty('dailyLimit')) {
                obj['dailyLimit'] = ApiClient.convertToType(data['dailyLimit'], 'Number');
            }
            if (data.hasOwnProperty('dailyProgress')) {
                obj['dailyProgress'] = ApiClient.convertToType(data['dailyProgress'], 'Number');
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'Number');
            }
            if (data.hasOwnProperty('levelCap')) {
                obj['levelCap'] = ApiClient.convertToType(data['levelCap'], 'Number');
            }
            if (data.hasOwnProperty('nextLevelAt')) {
                obj['nextLevelAt'] = ApiClient.convertToType(data['nextLevelAt'], 'Number');
            }
            if (data.hasOwnProperty('progressToNextLevel')) {
                obj['progressToNextLevel'] = ApiClient.convertToType(data['progressToNextLevel'], 'Number');
            }
            if (data.hasOwnProperty('progressionHash')) {
                obj['progressionHash'] = ApiClient.convertToType(data['progressionHash'], 'Number');
            }
            if (data.hasOwnProperty('rewardItemStates')) {
                obj['rewardItemStates'] = ApiClient.convertToType(data['rewardItemStates'], ['Number']);
            }
            if (data.hasOwnProperty('seasonResets')) {
                obj['seasonResets'] = ApiClient.convertToType(data['seasonResets'], [DestinyDestinyProgressionResetEntry]);
            }
            if (data.hasOwnProperty('stepIndex')) {
                obj['stepIndex'] = ApiClient.convertToType(data['stepIndex'], 'Number');
            }
            if (data.hasOwnProperty('weeklyLimit')) {
                obj['weeklyLimit'] = ApiClient.convertToType(data['weeklyLimit'], 'Number');
            }
            if (data.hasOwnProperty('weeklyProgress')) {
                obj['weeklyProgress'] = ApiClient.convertToType(data['weeklyProgress'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDestinyProgression</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDestinyProgression</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['rewardItemStates'])) {
            throw new Error("Expected the field `rewardItemStates` to be an array in the JSON data but got " + data['rewardItemStates']);
        }
        if (data['seasonResets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['seasonResets'])) {
                throw new Error("Expected the field `seasonResets` to be an array in the JSON data but got " + data['seasonResets']);
            }
            // validate the optional field `seasonResets` (array)
            for (const item of data['seasonResets']) {
                DestinyDestinyProgressionResetEntry.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This is the total amount of progress obtained overall for this progression (for instance, the total amount of Character Level experience earned)
 * @member {Number} currentProgress
 */
DestinyDestinyProgression.prototype['currentProgress'] = undefined;

/**
 * The number of resets of this progression you've executed this season, if applicable to this progression.
 * @member {Number} currentResetCount
 */
DestinyDestinyProgression.prototype['currentResetCount'] = undefined;

/**
 * If this progression has a daily limit, this is that limit.
 * @member {Number} dailyLimit
 */
DestinyDestinyProgression.prototype['dailyLimit'] = undefined;

/**
 * The amount of progress earned today for this progression.
 * @member {Number} dailyProgress
 */
DestinyDestinyProgression.prototype['dailyProgress'] = undefined;

/**
 * This is the level of the progression (for instance, the Character Level).
 * @member {Number} level
 */
DestinyDestinyProgression.prototype['level'] = undefined;

/**
 * This is the maximum possible level you can achieve for this progression (for example, the maximum character level obtainable)
 * @member {Number} levelCap
 */
DestinyDestinyProgression.prototype['levelCap'] = undefined;

/**
 * The total amount of progression (i.e. \"Experience\") needed in order to reach the next level.
 * @member {Number} nextLevelAt
 */
DestinyDestinyProgression.prototype['nextLevelAt'] = undefined;

/**
 * The amount of progression (i.e. \"Experience\") needed to reach the next level of this Progression. Jeez, progression is such an overloaded word.
 * @member {Number} progressToNextLevel
 */
DestinyDestinyProgression.prototype['progressToNextLevel'] = undefined;

/**
 * The hash identifier of the Progression in question. Use it to look up the DestinyProgressionDefinition in static data.
 * @member {Number} progressionHash
 */
DestinyDestinyProgression.prototype['progressionHash'] = undefined;

/**
 * Information about historical rewards for this progression, if there is any data for it.
 * @member {Array.<Number>} rewardItemStates
 */
DestinyDestinyProgression.prototype['rewardItemStates'] = undefined;

/**
 * Information about historical resets of this progression, if there is any data for it.
 * @member {Array.<module:model/DestinyDestinyProgressionResetEntry>} seasonResets
 */
DestinyDestinyProgression.prototype['seasonResets'] = undefined;

/**
 * Progressions define their levels in \"steps\". Since the last step may be repeatable, the user may be at a higher level than the actual Step achieved in the progression. Not necessarily useful, but potentially interesting for those cruising the API. Relate this to the \"steps\" property of the DestinyProgression to see which step the user is on, if you care about that. (Note that this is Content Version dependent since it refers to indexes.)
 * @member {Number} stepIndex
 */
DestinyDestinyProgression.prototype['stepIndex'] = undefined;

/**
 * If this progression has a weekly limit, this is that limit.
 * @member {Number} weeklyLimit
 */
DestinyDestinyProgression.prototype['weeklyLimit'] = undefined;

/**
 * The amount of progress earned toward this progression in the current week.
 * @member {Number} weeklyProgress
 */
DestinyDestinyProgression.prototype['weeklyProgress'] = undefined;






export default DestinyDestinyProgression;

