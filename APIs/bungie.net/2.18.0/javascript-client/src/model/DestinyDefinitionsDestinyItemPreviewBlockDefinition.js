/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition from './DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition';

/**
 * The DestinyDefinitionsDestinyItemPreviewBlockDefinition model module.
 * @module model/DestinyDefinitionsDestinyItemPreviewBlockDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsDestinyItemPreviewBlockDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsDestinyItemPreviewBlockDefinition</code>.
     * Items like Sacks or Boxes can have items that it shows in-game when you view details that represent the items you can obtain if you use or acquire the item.  This defines those categories, and gives some insights into that data&#39;s source.
     * @alias module:model/DestinyDefinitionsDestinyItemPreviewBlockDefinition
     */
    constructor() { 
        
        DestinyDefinitionsDestinyItemPreviewBlockDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsDestinyItemPreviewBlockDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsDestinyItemPreviewBlockDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsDestinyItemPreviewBlockDefinition} The populated <code>DestinyDefinitionsDestinyItemPreviewBlockDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsDestinyItemPreviewBlockDefinition();

            if (data.hasOwnProperty('artifactHash')) {
                obj['artifactHash'] = ApiClient.convertToType(data['artifactHash'], 'Number');
            }
            if (data.hasOwnProperty('derivedItemCategories')) {
                obj['derivedItemCategories'] = ApiClient.convertToType(data['derivedItemCategories'], [DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition]);
            }
            if (data.hasOwnProperty('previewActionString')) {
                obj['previewActionString'] = ApiClient.convertToType(data['previewActionString'], 'String');
            }
            if (data.hasOwnProperty('previewVendorHash')) {
                obj['previewVendorHash'] = ApiClient.convertToType(data['previewVendorHash'], 'Number');
            }
            if (data.hasOwnProperty('screenStyle')) {
                obj['screenStyle'] = ApiClient.convertToType(data['screenStyle'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsDestinyItemPreviewBlockDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsDestinyItemPreviewBlockDefinition</code>.
     */
    static validateJSON(data) {
        if (data['derivedItemCategories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['derivedItemCategories'])) {
                throw new Error("Expected the field `derivedItemCategories` to be an array in the JSON data but got " + data['derivedItemCategories']);
            }
            // validate the optional field `derivedItemCategories` (array)
            for (const item of data['derivedItemCategories']) {
                DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['previewActionString'] && !(typeof data['previewActionString'] === 'string' || data['previewActionString'] instanceof String)) {
            throw new Error("Expected the field `previewActionString` to be a primitive type in the JSON string but got " + data['previewActionString']);
        }
        // ensure the json data is a string
        if (data['screenStyle'] && !(typeof data['screenStyle'] === 'string' || data['screenStyle'] instanceof String)) {
            throw new Error("Expected the field `screenStyle` to be a primitive type in the JSON string but got " + data['screenStyle']);
        }

        return true;
    }


}



/**
 * If this item should show you Artifact information when you preview it, this is the hash identifier of the DestinyArtifactDefinition for the artifact whose data should be shown.
 * @member {Number} artifactHash
 */
DestinyDefinitionsDestinyItemPreviewBlockDefinition.prototype['artifactHash'] = undefined;

/**
 * This is a list of the items being previewed, categorized in the same way as they are in the preview UI.
 * @member {Array.<module:model/DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition>} derivedItemCategories
 */
DestinyDefinitionsDestinyItemPreviewBlockDefinition.prototype['derivedItemCategories'] = undefined;

/**
 * If the preview has an associated action (like \"Open\"), this will be the localized string for that action.
 * @member {String} previewActionString
 */
DestinyDefinitionsDestinyItemPreviewBlockDefinition.prototype['previewActionString'] = undefined;

/**
 * If the preview data is derived from a fake \"Preview\" Vendor, this will be the hash identifier for the DestinyVendorDefinition of that fake vendor.
 * @member {Number} previewVendorHash
 */
DestinyDefinitionsDestinyItemPreviewBlockDefinition.prototype['previewVendorHash'] = undefined;

/**
 * A string that the game UI uses as a hint for which detail screen to show for the item. You, too, can leverage this for your own custom screen detail views. Note, however, that these are arbitrarily defined by designers: there's no guarantees of a fixed, known number of these - so fall back to something reasonable if you don't recognize it.
 * @member {String} screenStyle
 */
DestinyDefinitionsDestinyItemPreviewBlockDefinition.prototype['screenStyle'] = undefined;






export default DestinyDefinitionsDestinyItemPreviewBlockDefinition;

