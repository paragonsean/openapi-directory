/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FireteamFireteamSummary model module.
 * @module model/FireteamFireteamSummary
 * @version 2.18.0
 */
class FireteamFireteamSummary {
    /**
     * Constructs a new <code>FireteamFireteamSummary</code>.
     * @alias module:model/FireteamFireteamSummary
     */
    constructor() { 
        
        FireteamFireteamSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FireteamFireteamSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FireteamFireteamSummary} obj Optional instance to populate.
     * @return {module:model/FireteamFireteamSummary} The populated <code>FireteamFireteamSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FireteamFireteamSummary();

            if (data.hasOwnProperty('activityType')) {
                obj['activityType'] = ApiClient.convertToType(data['activityType'], 'Number');
            }
            if (data.hasOwnProperty('alternateSlotCount')) {
                obj['alternateSlotCount'] = ApiClient.convertToType(data['alternateSlotCount'], 'Number');
            }
            if (data.hasOwnProperty('availableAlternateSlotCount')) {
                obj['availableAlternateSlotCount'] = ApiClient.convertToType(data['availableAlternateSlotCount'], 'Number');
            }
            if (data.hasOwnProperty('availablePlayerSlotCount')) {
                obj['availablePlayerSlotCount'] = ApiClient.convertToType(data['availablePlayerSlotCount'], 'Number');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('dateModified')) {
                obj['dateModified'] = ApiClient.convertToType(data['dateModified'], 'Date');
            }
            if (data.hasOwnProperty('datePlayerModified')) {
                obj['datePlayerModified'] = ApiClient.convertToType(data['datePlayerModified'], 'Date');
            }
            if (data.hasOwnProperty('fireteamId')) {
                obj['fireteamId'] = ApiClient.convertToType(data['fireteamId'], 'Number');
            }
            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'Number');
            }
            if (data.hasOwnProperty('isImmediate')) {
                obj['isImmediate'] = ApiClient.convertToType(data['isImmediate'], 'Boolean');
            }
            if (data.hasOwnProperty('isPublic')) {
                obj['isPublic'] = ApiClient.convertToType(data['isPublic'], 'Boolean');
            }
            if (data.hasOwnProperty('isValid')) {
                obj['isValid'] = ApiClient.convertToType(data['isValid'], 'Boolean');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('ownerCurrentGuardianRankSnapshot')) {
                obj['ownerCurrentGuardianRankSnapshot'] = ApiClient.convertToType(data['ownerCurrentGuardianRankSnapshot'], 'Number');
            }
            if (data.hasOwnProperty('ownerHighestLifetimeGuardianRankSnapshot')) {
                obj['ownerHighestLifetimeGuardianRankSnapshot'] = ApiClient.convertToType(data['ownerHighestLifetimeGuardianRankSnapshot'], 'Number');
            }
            if (data.hasOwnProperty('ownerMembershipId')) {
                obj['ownerMembershipId'] = ApiClient.convertToType(data['ownerMembershipId'], 'Number');
            }
            if (data.hasOwnProperty('ownerTotalCommendationScoreSnapshot')) {
                obj['ownerTotalCommendationScoreSnapshot'] = ApiClient.convertToType(data['ownerTotalCommendationScoreSnapshot'], 'Number');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'Number');
            }
            if (data.hasOwnProperty('playerSlotCount')) {
                obj['playerSlotCount'] = ApiClient.convertToType(data['playerSlotCount'], 'Number');
            }
            if (data.hasOwnProperty('scheduledTime')) {
                obj['scheduledTime'] = ApiClient.convertToType(data['scheduledTime'], 'Date');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('titleBeforeModeration')) {
                obj['titleBeforeModeration'] = ApiClient.convertToType(data['titleBeforeModeration'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FireteamFireteamSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FireteamFireteamSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['titleBeforeModeration'] && !(typeof data['titleBeforeModeration'] === 'string' || data['titleBeforeModeration'] instanceof String)) {
            throw new Error("Expected the field `titleBeforeModeration` to be a primitive type in the JSON string but got " + data['titleBeforeModeration']);
        }

        return true;
    }


}



/**
 * @member {Number} activityType
 */
FireteamFireteamSummary.prototype['activityType'] = undefined;

/**
 * @member {Number} alternateSlotCount
 */
FireteamFireteamSummary.prototype['alternateSlotCount'] = undefined;

/**
 * @member {Number} availableAlternateSlotCount
 */
FireteamFireteamSummary.prototype['availableAlternateSlotCount'] = undefined;

/**
 * @member {Number} availablePlayerSlotCount
 */
FireteamFireteamSummary.prototype['availablePlayerSlotCount'] = undefined;

/**
 * @member {Date} dateCreated
 */
FireteamFireteamSummary.prototype['dateCreated'] = undefined;

/**
 * @member {Date} dateModified
 */
FireteamFireteamSummary.prototype['dateModified'] = undefined;

/**
 * @member {Date} datePlayerModified
 */
FireteamFireteamSummary.prototype['datePlayerModified'] = undefined;

/**
 * @member {Number} fireteamId
 */
FireteamFireteamSummary.prototype['fireteamId'] = undefined;

/**
 * @member {Number} groupId
 */
FireteamFireteamSummary.prototype['groupId'] = undefined;

/**
 * @member {Boolean} isImmediate
 */
FireteamFireteamSummary.prototype['isImmediate'] = undefined;

/**
 * @member {Boolean} isPublic
 */
FireteamFireteamSummary.prototype['isPublic'] = undefined;

/**
 * @member {Boolean} isValid
 */
FireteamFireteamSummary.prototype['isValid'] = undefined;

/**
 * @member {String} locale
 */
FireteamFireteamSummary.prototype['locale'] = undefined;

/**
 * @member {Number} ownerCurrentGuardianRankSnapshot
 */
FireteamFireteamSummary.prototype['ownerCurrentGuardianRankSnapshot'] = undefined;

/**
 * @member {Number} ownerHighestLifetimeGuardianRankSnapshot
 */
FireteamFireteamSummary.prototype['ownerHighestLifetimeGuardianRankSnapshot'] = undefined;

/**
 * @member {Number} ownerMembershipId
 */
FireteamFireteamSummary.prototype['ownerMembershipId'] = undefined;

/**
 * @member {Number} ownerTotalCommendationScoreSnapshot
 */
FireteamFireteamSummary.prototype['ownerTotalCommendationScoreSnapshot'] = undefined;

/**
 * @member {Number} platform
 */
FireteamFireteamSummary.prototype['platform'] = undefined;

/**
 * @member {Number} playerSlotCount
 */
FireteamFireteamSummary.prototype['playerSlotCount'] = undefined;

/**
 * @member {Date} scheduledTime
 */
FireteamFireteamSummary.prototype['scheduledTime'] = undefined;

/**
 * @member {String} title
 */
FireteamFireteamSummary.prototype['title'] = undefined;

/**
 * @member {String} titleBeforeModeration
 */
FireteamFireteamSummary.prototype['titleBeforeModeration'] = undefined;






export default FireteamFireteamSummary;

