/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDestinyProgression from './DestinyDestinyProgression';
import DestinyMiscDestinyColor from './DestinyMiscDestinyColor';

/**
 * The DestinyEntitiesCharactersDestinyCharacterComponent model module.
 * @module model/DestinyEntitiesCharactersDestinyCharacterComponent
 * @version 2.18.0
 */
class DestinyEntitiesCharactersDestinyCharacterComponent {
    /**
     * Constructs a new <code>DestinyEntitiesCharactersDestinyCharacterComponent</code>.
     * This component contains base properties of the character. You&#39;ll probably want to always request this component, but hey you do you.
     * @alias module:model/DestinyEntitiesCharactersDestinyCharacterComponent
     */
    constructor() { 
        
        DestinyEntitiesCharactersDestinyCharacterComponent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyEntitiesCharactersDestinyCharacterComponent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyEntitiesCharactersDestinyCharacterComponent} obj Optional instance to populate.
     * @return {module:model/DestinyEntitiesCharactersDestinyCharacterComponent} The populated <code>DestinyEntitiesCharactersDestinyCharacterComponent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyEntitiesCharactersDestinyCharacterComponent();

            if (data.hasOwnProperty('baseCharacterLevel')) {
                obj['baseCharacterLevel'] = ApiClient.convertToType(data['baseCharacterLevel'], 'Number');
            }
            if (data.hasOwnProperty('characterId')) {
                obj['characterId'] = ApiClient.convertToType(data['characterId'], 'Number');
            }
            if (data.hasOwnProperty('classHash')) {
                obj['classHash'] = ApiClient.convertToType(data['classHash'], 'Number');
            }
            if (data.hasOwnProperty('classType')) {
                obj['classType'] = ApiClient.convertToType(data['classType'], 'Number');
            }
            if (data.hasOwnProperty('dateLastPlayed')) {
                obj['dateLastPlayed'] = ApiClient.convertToType(data['dateLastPlayed'], 'Date');
            }
            if (data.hasOwnProperty('emblemBackgroundPath')) {
                obj['emblemBackgroundPath'] = ApiClient.convertToType(data['emblemBackgroundPath'], 'String');
            }
            if (data.hasOwnProperty('emblemColor')) {
                obj['emblemColor'] = ApiClient.convertToType(data['emblemColor'], DestinyMiscDestinyColor);
            }
            if (data.hasOwnProperty('emblemHash')) {
                obj['emblemHash'] = ApiClient.convertToType(data['emblemHash'], 'Number');
            }
            if (data.hasOwnProperty('emblemPath')) {
                obj['emblemPath'] = ApiClient.convertToType(data['emblemPath'], 'String');
            }
            if (data.hasOwnProperty('genderHash')) {
                obj['genderHash'] = ApiClient.convertToType(data['genderHash'], 'Number');
            }
            if (data.hasOwnProperty('genderType')) {
                obj['genderType'] = ApiClient.convertToType(data['genderType'], 'Number');
            }
            if (data.hasOwnProperty('levelProgression')) {
                obj['levelProgression'] = ApiClient.convertToType(data['levelProgression'], DestinyDestinyProgression);
            }
            if (data.hasOwnProperty('light')) {
                obj['light'] = ApiClient.convertToType(data['light'], 'Number');
            }
            if (data.hasOwnProperty('membershipId')) {
                obj['membershipId'] = ApiClient.convertToType(data['membershipId'], 'Number');
            }
            if (data.hasOwnProperty('membershipType')) {
                obj['membershipType'] = ApiClient.convertToType(data['membershipType'], 'Number');
            }
            if (data.hasOwnProperty('minutesPlayedThisSession')) {
                obj['minutesPlayedThisSession'] = ApiClient.convertToType(data['minutesPlayedThisSession'], 'Number');
            }
            if (data.hasOwnProperty('minutesPlayedTotal')) {
                obj['minutesPlayedTotal'] = ApiClient.convertToType(data['minutesPlayedTotal'], 'Number');
            }
            if (data.hasOwnProperty('percentToNextLevel')) {
                obj['percentToNextLevel'] = ApiClient.convertToType(data['percentToNextLevel'], 'Number');
            }
            if (data.hasOwnProperty('raceHash')) {
                obj['raceHash'] = ApiClient.convertToType(data['raceHash'], 'Number');
            }
            if (data.hasOwnProperty('raceType')) {
                obj['raceType'] = ApiClient.convertToType(data['raceType'], 'Number');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = ApiClient.convertToType(data['stats'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('titleRecordHash')) {
                obj['titleRecordHash'] = ApiClient.convertToType(data['titleRecordHash'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyEntitiesCharactersDestinyCharacterComponent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyEntitiesCharactersDestinyCharacterComponent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['emblemBackgroundPath'] && !(typeof data['emblemBackgroundPath'] === 'string' || data['emblemBackgroundPath'] instanceof String)) {
            throw new Error("Expected the field `emblemBackgroundPath` to be a primitive type in the JSON string but got " + data['emblemBackgroundPath']);
        }
        // validate the optional field `emblemColor`
        if (data['emblemColor']) { // data not null
          DestinyMiscDestinyColor.validateJSON(data['emblemColor']);
        }
        // ensure the json data is a string
        if (data['emblemPath'] && !(typeof data['emblemPath'] === 'string' || data['emblemPath'] instanceof String)) {
            throw new Error("Expected the field `emblemPath` to be a primitive type in the JSON string but got " + data['emblemPath']);
        }
        // validate the optional field `levelProgression`
        if (data['levelProgression']) { // data not null
          DestinyDestinyProgression.validateJSON(data['levelProgression']);
        }

        return true;
    }


}



/**
 * The \"base\" level of your character, not accounting for any light level.
 * @member {Number} baseCharacterLevel
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['baseCharacterLevel'] = undefined;

/**
 * The unique identifier for the character.
 * @member {Number} characterId
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['characterId'] = undefined;

/**
 * Use this hash to look up the character's DestinyClassDefinition.
 * @member {Number} classHash
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['classHash'] = undefined;

/**
 * Mostly for historical purposes at this point, this is an enumeration for the character's class.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.
 * @member {Number} classType
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['classType'] = undefined;

/**
 * The last date that the user played Destiny.
 * @member {Date} dateLastPlayed
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['dateLastPlayed'] = undefined;

/**
 * A shortcut path to the user's currently equipped emblem background image. If you're just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.
 * @member {String} emblemBackgroundPath
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['emblemBackgroundPath'] = undefined;

/**
 * A shortcut for getting the background color of the user's currently equipped emblem without having to do a DestinyInventoryItemDefinition lookup.
 * @member {module:model/DestinyMiscDestinyColor} emblemColor
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['emblemColor'] = undefined;

/**
 * The hash of the currently equipped emblem for the user. Can be used to look up the DestinyInventoryItemDefinition.
 * @member {Number} emblemHash
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['emblemHash'] = undefined;

/**
 * A shortcut path to the user's currently equipped emblem image. If you're just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.
 * @member {String} emblemPath
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['emblemPath'] = undefined;

/**
 * Use this hash to look up the character's DestinyGenderDefinition.
 * @member {Number} genderHash
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['genderHash'] = undefined;

/**
 * Mostly for historical purposes at this point, this is an enumeration for the character's Gender.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove. And yeah, it's an enumeration and not a boolean. Fight me.
 * @member {Number} genderType
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['genderType'] = undefined;

/**
 * The progression that indicates your character's level. Not their light level, but their character level: you know, the thing you max out a couple hours in and then ignore for the sake of light level.
 * @member {module:model/DestinyDestinyProgression} levelProgression
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['levelProgression'] = undefined;

/**
 * The user's calculated \"Light Level\". Light level is an indicator of your power that mostly matters in the end game, once you've reached the maximum character level: it's a level that's dependent on the average Attack/Defense power of your items.
 * @member {Number} light
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['light'] = undefined;

/**
 * Every Destiny Profile has a membershipId. This is provided on the character as well for convenience.
 * @member {Number} membershipId
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['membershipId'] = undefined;

/**
 * membershipType tells you the platform on which the character plays. Examine the BungieMembershipType enumeration for possible values.
 * @member {Number} membershipType
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['membershipType'] = undefined;

/**
 * If the user is currently playing, this is how long they've been playing.
 * @member {Number} minutesPlayedThisSession
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['minutesPlayedThisSession'] = undefined;

/**
 * If this value is 525,600, then they played Destiny for a year. Or they're a very dedicated Rent fan. Note that this includes idle time, not just time spent actually in activities shooting things.
 * @member {Number} minutesPlayedTotal
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['minutesPlayedTotal'] = undefined;

/**
 * A number between 0 and 100, indicating the whole and fractional % remaining to get to the next character level.
 * @member {Number} percentToNextLevel
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['percentToNextLevel'] = undefined;

/**
 * Use this hash to look up the character's DestinyRaceDefinition.
 * @member {Number} raceHash
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['raceHash'] = undefined;

/**
 * Mostly for historical purposes at this point, this is an enumeration for the character's race.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.
 * @member {Number} raceType
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['raceType'] = undefined;

/**
 * Your character's stats, such as Agility, Resilience, etc... *not* historical stats.  You'll have to call a different endpoint for those.
 * @member {Object.<String, Number>} stats
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['stats'] = undefined;

/**
 * If this Character has a title assigned to it, this is the identifier of the DestinyRecordDefinition that has that title information.
 * @member {Number} titleRecordHash
 */
DestinyEntitiesCharactersDestinyCharacterComponent.prototype['titleRecordHash'] = undefined;






export default DestinyEntitiesCharactersDestinyCharacterComponent;

