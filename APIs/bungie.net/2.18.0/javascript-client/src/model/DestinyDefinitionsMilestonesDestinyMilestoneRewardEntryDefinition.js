/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition from './DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition';
import DestinyDestinyItemQuantity from './DestinyDestinyItemQuantity';

/**
 * The DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition model module.
 * @module model/DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition
 * @version 2.18.0
 */
class DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition {
    /**
     * Constructs a new <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition</code>.
     * The definition of a specific reward, which may be contained in a category of rewards and that has optional information about how it is obtained.
     * @alias module:model/DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition
     */
    constructor() { 
        
        DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition} obj Optional instance to populate.
     * @return {module:model/DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition} The populated <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition();

            if (data.hasOwnProperty('displayProperties')) {
                obj['displayProperties'] = ApiClient.convertToType(data['displayProperties'], DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition);
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [DestinyDestinyItemQuantity]);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('rewardEntryHash')) {
                obj['rewardEntryHash'] = ApiClient.convertToType(data['rewardEntryHash'], 'Number');
            }
            if (data.hasOwnProperty('rewardEntryIdentifier')) {
                obj['rewardEntryIdentifier'] = ApiClient.convertToType(data['rewardEntryIdentifier'], 'String');
            }
            if (data.hasOwnProperty('vendorHash')) {
                obj['vendorHash'] = ApiClient.convertToType(data['vendorHash'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `displayProperties`
        if (data['displayProperties']) { // data not null
          DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition.validateJSON(data['displayProperties']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                DestinyDestinyItemQuantity.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['rewardEntryIdentifier'] && !(typeof data['rewardEntryIdentifier'] === 'string' || data['rewardEntryIdentifier'] instanceof String)) {
            throw new Error("Expected the field `rewardEntryIdentifier` to be a primitive type in the JSON string but got " + data['rewardEntryIdentifier']);
        }

        return true;
    }


}



/**
 * For us to bother returning this info, we should be able to return some kind of information about why these rewards are grouped together. This is ideally that information. Look at how confident I am that this will always remain true.
 * @member {module:model/DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition} displayProperties
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.prototype['displayProperties'] = undefined;

/**
 * The items you will get as rewards, and how much of it you'll get.
 * @member {Array.<module:model/DestinyDestinyItemQuantity>} items
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.prototype['items'] = undefined;

/**
 * If you want to follow BNet's ordering of these rewards, use this number within a given category to order the rewards. Yeah, I know. I feel dirty too.
 * @member {Number} order
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.prototype['order'] = undefined;

/**
 * The identifier for this reward entry. Runtime data will refer to reward entries by this hash. Only guaranteed unique within the specific Milestone.
 * @member {Number} rewardEntryHash
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.prototype['rewardEntryHash'] = undefined;

/**
 * The string identifier, if you care about it. Only guaranteed unique within the specific Milestone.
 * @member {String} rewardEntryIdentifier
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.prototype['rewardEntryIdentifier'] = undefined;

/**
 * If this reward is redeemed at a Vendor, this is the hash of the Vendor to go to in order to redeem the reward. Use this hash to look up the DestinyVendorDefinition.
 * @member {Number} vendorHash
 */
DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition.prototype['vendorHash'] = undefined;






export default DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinition;

