/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TrendingGetTrendingCategories200Response from '../model/TrendingGetTrendingCategories200Response';
import TrendingGetTrendingCategory200Response from '../model/TrendingGetTrendingCategory200Response';
import TrendingGetTrendingEntryDetail200Response from '../model/TrendingGetTrendingEntryDetail200Response';

/**
* Trending service.
* @module api/TrendingApi
* @version 2.18.0
*/
export default class TrendingApi {

    /**
    * Constructs a new TrendingApi. 
    * @alias module:api/TrendingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the trendingGetTrendingCategories operation.
     * @callback module:api/TrendingApi~trendingGetTrendingCategoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrendingGetTrendingCategories200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns trending items for Bungie.net, collapsed into the first page of items per category. For pagination within a category, call GetTrendingCategory.
     * @param {module:api/TrendingApi~trendingGetTrendingCategoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrendingGetTrendingCategories200Response}
     */
    trendingGetTrendingCategories(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TrendingGetTrendingCategories200Response;
      return this.apiClient.callApi(
        '/Trending/Categories/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the trendingGetTrendingCategory operation.
     * @callback module:api/TrendingApi~trendingGetTrendingCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrendingGetTrendingCategory200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns paginated lists of trending items for a category.
     * @param {String} categoryId The ID of the category for whom you want additional results.
     * @param {Number} pageNumber The page # of results to return.
     * @param {module:api/TrendingApi~trendingGetTrendingCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrendingGetTrendingCategory200Response}
     */
    trendingGetTrendingCategory(categoryId, pageNumber, callback) {
      let postBody = null;
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling trendingGetTrendingCategory");
      }
      // verify the required parameter 'pageNumber' is set
      if (pageNumber === undefined || pageNumber === null) {
        throw new Error("Missing the required parameter 'pageNumber' when calling trendingGetTrendingCategory");
      }

      let pathParams = {
        'categoryId': categoryId,
        'pageNumber': pageNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TrendingGetTrendingCategory200Response;
      return this.apiClient.callApi(
        '/Trending/Categories/{categoryId}/{pageNumber}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the trendingGetTrendingEntryDetail operation.
     * @callback module:api/TrendingApi~trendingGetTrendingEntryDetailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrendingGetTrendingEntryDetail200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the detailed results for a specific trending entry. Note that trending entries are uniquely identified by a combination of *both* the TrendingEntryType *and* the identifier: the identifier alone is not guaranteed to be globally unique.
     * @param {String} identifier The identifier for the entity to be returned.
     * @param {Number} trendingEntryType The type of entity to be returned.
     * @param {module:api/TrendingApi~trendingGetTrendingEntryDetailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrendingGetTrendingEntryDetail200Response}
     */
    trendingGetTrendingEntryDetail(identifier, trendingEntryType, callback) {
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling trendingGetTrendingEntryDetail");
      }
      // verify the required parameter 'trendingEntryType' is set
      if (trendingEntryType === undefined || trendingEntryType === null) {
        throw new Error("Missing the required parameter 'trendingEntryType' when calling trendingGetTrendingEntryDetail");
      }

      let pathParams = {
        'identifier': identifier,
        'trendingEntryType': trendingEntryType
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TrendingGetTrendingEntryDetail200Response;
      return this.apiClient.callApi(
        '/Trending/Details/{trendingEntryType}/{identifier}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
