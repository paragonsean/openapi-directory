/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppGetApplicationApiUsage200Response from '../model/AppGetApplicationApiUsage200Response';
import AppGetBungieApplications200Response from '../model/AppGetBungieApplications200Response';

/**
* App service.
* @module api/AppApi
* @version 2.18.0
*/
export default class AppApi {

    /**
    * Constructs a new AppApi. 
    * @alias module:api/AppApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appGetApplicationApiUsage operation.
     * @callback module:api/AppApi~appGetApplicationApiUsageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppGetApplicationApiUsage200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get API usage by application for time frame specified. You can go as far back as 30 days ago, and can ask for up to a 48 hour window of time in a single request. You must be authenticated with at least the ReadUserData permission to access this endpoint.
     * @param {Number} applicationId ID of the application to get usage statistics.
     * @param {Object} opts Optional parameters
     * @param {Date} [end] End time for query. Goes to now if not specified.
     * @param {Date} [start] Start time for query. Goes to 24 hours ago if not specified.
     * @param {module:api/AppApi~appGetApplicationApiUsageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppGetApplicationApiUsage200Response}
     */
    appGetApplicationApiUsage(applicationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling appGetApplicationApiUsage");
      }

      let pathParams = {
        'applicationId': applicationId
      };
      let queryParams = {
        'end': opts['end'],
        'start': opts['start']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = AppGetApplicationApiUsage200Response;
      return this.apiClient.callApi(
        '/App/ApiUsage/{applicationId}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appGetBungieApplications operation.
     * @callback module:api/AppApi~appGetBungieApplicationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppGetBungieApplications200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of applications created by Bungie.
     * @param {module:api/AppApi~appGetBungieApplicationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppGetBungieApplications200Response}
     */
    appGetBungieApplications(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = AppGetBungieApplications200Response;
      return this.apiClient.callApi(
        '/App/FirstParty/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
