/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_DisruptedPoint.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_DisruptedPoint_H
#define OAITfl_Api_Presentation_Entities_DisruptedPoint_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITfl_Api_Presentation_Entities_DisruptedPoint : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_DisruptedPoint();
    OAITfl_Api_Presentation_Entities_DisruptedPoint(QString json);
    ~OAITfl_Api_Presentation_Entities_DisruptedPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalInformation() const;
    void setAdditionalInformation(const QString &additional_information);
    bool is_additional_information_Set() const;
    bool is_additional_information_Valid() const;

    QString getAppearance() const;
    void setAppearance(const QString &appearance);
    bool is_appearance_Set() const;
    bool is_appearance_Valid() const;

    QString getAtcoCode() const;
    void setAtcoCode(const QString &atco_code);
    bool is_atco_code_Set() const;
    bool is_atco_code_Valid() const;

    QString getCommonName() const;
    void setCommonName(const QString &common_name);
    bool is_common_name_Set() const;
    bool is_common_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getFromDate() const;
    void setFromDate(const QDateTime &from_date);
    bool is_from_date_Set() const;
    bool is_from_date_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QString getStationAtcoCode() const;
    void setStationAtcoCode(const QString &station_atco_code);
    bool is_station_atco_code_Set() const;
    bool is_station_atco_code_Valid() const;

    QDateTime getToDate() const;
    void setToDate(const QDateTime &to_date);
    bool is_to_date_Set() const;
    bool is_to_date_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_information;
    bool m_additional_information_isSet;
    bool m_additional_information_isValid;

    QString m_appearance;
    bool m_appearance_isSet;
    bool m_appearance_isValid;

    QString m_atco_code;
    bool m_atco_code_isSet;
    bool m_atco_code_isValid;

    QString m_common_name;
    bool m_common_name_isSet;
    bool m_common_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_from_date;
    bool m_from_date_isSet;
    bool m_from_date_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QString m_station_atco_code;
    bool m_station_atco_code_isSet;
    bool m_station_atco_code_isValid;

    QDateTime m_to_date;
    bool m_to_date_isSet;
    bool m_to_date_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_DisruptedPoint)

#endif // OAITfl_Api_Presentation_Entities_DisruptedPoint_H
