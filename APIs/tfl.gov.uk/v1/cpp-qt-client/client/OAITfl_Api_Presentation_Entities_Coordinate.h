/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_Coordinate.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_Coordinate_H
#define OAITfl_Api_Presentation_Entities_Coordinate_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITfl_Api_Presentation_Entities_Coordinate : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_Coordinate();
    OAITfl_Api_Presentation_Entities_Coordinate(QString json);
    ~OAITfl_Api_Presentation_Entities_Coordinate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getEasting() const;
    void setEasting(const double &easting);
    bool is_easting_Set() const;
    bool is_easting_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    double getNorthing() const;
    void setNorthing(const double &northing);
    bool is_northing_Set() const;
    bool is_northing_Valid() const;

    qint32 getXCoord() const;
    void setXCoord(const qint32 &x_coord);
    bool is_x_coord_Set() const;
    bool is_x_coord_Valid() const;

    qint32 getYCoord() const;
    void setYCoord(const qint32 &y_coord);
    bool is_y_coord_Set() const;
    bool is_y_coord_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_easting;
    bool m_easting_isSet;
    bool m_easting_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    double m_northing;
    bool m_northing_isSet;
    bool m_northing_isValid;

    qint32 m_x_coord;
    bool m_x_coord_isSet;
    bool m_x_coord_isValid;

    qint32 m_y_coord;
    bool m_y_coord_isSet;
    bool m_y_coord_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_Coordinate)

#endif // OAITfl_Api_Presentation_Entities_Coordinate_H
