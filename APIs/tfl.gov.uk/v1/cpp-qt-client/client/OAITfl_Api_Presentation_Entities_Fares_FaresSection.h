/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_Fares_FaresSection.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_Fares_FaresSection_H
#define OAITfl_Api_Presentation_Entities_Fares_FaresSection_H

#include <QJsonObject>

#include "OAITfl_Api_Presentation_Entities_Fares_FareDetails.h"
#include "OAITfl_Api_Presentation_Entities_Fares_Journey.h"
#include "OAITfl_Api_Presentation_Entities_Message.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITfl_Api_Presentation_Entities_Fares_Journey;
class OAITfl_Api_Presentation_Entities_Message;
class OAITfl_Api_Presentation_Entities_Fares_FareDetails;

class OAITfl_Api_Presentation_Entities_Fares_FaresSection : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_Fares_FaresSection();
    OAITfl_Api_Presentation_Entities_Fares_FaresSection(QString json);
    ~OAITfl_Api_Presentation_Entities_Fares_FaresSection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    OAITfl_Api_Presentation_Entities_Fares_Journey getJourney() const;
    void setJourney(const OAITfl_Api_Presentation_Entities_Fares_Journey &journey);
    bool is_journey_Set() const;
    bool is_journey_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_Message> getMessages() const;
    void setMessages(const QList<OAITfl_Api_Presentation_Entities_Message> &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_Fares_FareDetails> getRows() const;
    void setRows(const QList<OAITfl_Api_Presentation_Entities_Fares_FareDetails> &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    OAITfl_Api_Presentation_Entities_Fares_Journey m_journey;
    bool m_journey_isSet;
    bool m_journey_isValid;

    QList<OAITfl_Api_Presentation_Entities_Message> m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    QList<OAITfl_Api_Presentation_Entities_Fares_FareDetails> m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_Fares_FaresSection)

#endif // OAITfl_Api_Presentation_Entities_Fares_FaresSection_H
