/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea() {
    this->initializeModel();
}

OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::~OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea() {}

void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::initializeModel() {

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_polygon_isSet = false;
    m_polygon_isValid = false;

    m_road_disruption_id_isSet = false;
    m_road_disruption_id_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::fromJsonObject(QJsonObject json) {

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_polygon_isValid = ::OpenAPI::fromJsonValue(m_polygon, json[QString("polygon")]);
    m_polygon_isSet = !json[QString("polygon")].isNull() && m_polygon_isValid;

    m_road_disruption_id_isValid = ::OpenAPI::fromJsonValue(m_road_disruption_id, json[QString("roadDisruptionId")]);
    m_road_disruption_id_isSet = !json[QString("roadDisruptionId")].isNull() && m_road_disruption_id_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_polygon.isSet()) {
        obj.insert(QString("polygon"), ::OpenAPI::toJsonValue(m_polygon));
    }
    if (m_road_disruption_id_isSet) {
        obj.insert(QString("roadDisruptionId"), ::OpenAPI::toJsonValue(m_road_disruption_id));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QDateTime OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::getEndDate() const {
    return m_end_date;
}
void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::getEndTime() const {
    return m_end_time;
}
void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_end_time_Valid() const{
    return m_end_time_isValid;
}

qint32 OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::getId() const {
    return m_id;
}
void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_id_Set() const{
    return m_id_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_id_Valid() const{
    return m_id_isValid;
}

OAISystem_Data_Spatial_DbGeography OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::getPolygon() const {
    return m_polygon;
}
void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::setPolygon(const OAISystem_Data_Spatial_DbGeography &polygon) {
    m_polygon = polygon;
    m_polygon_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_polygon_Set() const{
    return m_polygon_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_polygon_Valid() const{
    return m_polygon_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::getRoadDisruptionId() const {
    return m_road_disruption_id;
}
void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::setRoadDisruptionId(const QString &road_disruption_id) {
    m_road_disruption_id = road_disruption_id;
    m_road_disruption_id_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_road_disruption_id_Set() const{
    return m_road_disruption_id_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_road_disruption_id_Valid() const{
    return m_road_disruption_id_isValid;
}

QDateTime OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::getStartDate() const {
    return m_start_date;
}
void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::getStartTime() const {
    return m_start_time;
}
void OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_polygon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_road_disruption_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITfl_Api_Presentation_Entities_RoadDisruptionImpactArea::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
