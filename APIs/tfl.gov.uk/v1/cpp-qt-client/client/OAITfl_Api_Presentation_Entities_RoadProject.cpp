/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITfl_Api_Presentation_Entities_RoadProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITfl_Api_Presentation_Entities_RoadProject::OAITfl_Api_Presentation_Entities_RoadProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITfl_Api_Presentation_Entities_RoadProject::OAITfl_Api_Presentation_Entities_RoadProject() {
    this->initializeModel();
}

OAITfl_Api_Presentation_Entities_RoadProject::~OAITfl_Api_Presentation_Entities_RoadProject() {}

void OAITfl_Api_Presentation_Entities_RoadProject::initializeModel() {

    m_boroughs_benefited_isSet = false;
    m_boroughs_benefited_isValid = false;

    m_construction_end_date_isSet = false;
    m_construction_end_date_isValid = false;

    m_construction_start_date_isSet = false;
    m_construction_start_date_isValid = false;

    m_consultation_end_date_isSet = false;
    m_consultation_end_date_isValid = false;

    m_consultation_page_url_isSet = false;
    m_consultation_page_url_isValid = false;

    m_consultation_start_date_isSet = false;
    m_consultation_start_date_isValid = false;

    m_contact_email_isSet = false;
    m_contact_email_isValid = false;

    m_contact_name_isSet = false;
    m_contact_name_isValid = false;

    m_cycle_superhighway_id_isSet = false;
    m_cycle_superhighway_id_isValid = false;

    m_external_page_url_isSet = false;
    m_external_page_url_isValid = false;

    m_phase_isSet = false;
    m_phase_isValid = false;

    m_project_description_isSet = false;
    m_project_description_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_project_page_url_isSet = false;
    m_project_page_url_isValid = false;

    m_project_summary_page_url_isSet = false;
    m_project_summary_page_url_isValid = false;

    m_scheme_name_isSet = false;
    m_scheme_name_isValid = false;
}

void OAITfl_Api_Presentation_Entities_RoadProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITfl_Api_Presentation_Entities_RoadProject::fromJsonObject(QJsonObject json) {

    m_boroughs_benefited_isValid = ::OpenAPI::fromJsonValue(m_boroughs_benefited, json[QString("boroughsBenefited")]);
    m_boroughs_benefited_isSet = !json[QString("boroughsBenefited")].isNull() && m_boroughs_benefited_isValid;

    m_construction_end_date_isValid = ::OpenAPI::fromJsonValue(m_construction_end_date, json[QString("constructionEndDate")]);
    m_construction_end_date_isSet = !json[QString("constructionEndDate")].isNull() && m_construction_end_date_isValid;

    m_construction_start_date_isValid = ::OpenAPI::fromJsonValue(m_construction_start_date, json[QString("constructionStartDate")]);
    m_construction_start_date_isSet = !json[QString("constructionStartDate")].isNull() && m_construction_start_date_isValid;

    m_consultation_end_date_isValid = ::OpenAPI::fromJsonValue(m_consultation_end_date, json[QString("consultationEndDate")]);
    m_consultation_end_date_isSet = !json[QString("consultationEndDate")].isNull() && m_consultation_end_date_isValid;

    m_consultation_page_url_isValid = ::OpenAPI::fromJsonValue(m_consultation_page_url, json[QString("consultationPageUrl")]);
    m_consultation_page_url_isSet = !json[QString("consultationPageUrl")].isNull() && m_consultation_page_url_isValid;

    m_consultation_start_date_isValid = ::OpenAPI::fromJsonValue(m_consultation_start_date, json[QString("consultationStartDate")]);
    m_consultation_start_date_isSet = !json[QString("consultationStartDate")].isNull() && m_consultation_start_date_isValid;

    m_contact_email_isValid = ::OpenAPI::fromJsonValue(m_contact_email, json[QString("contactEmail")]);
    m_contact_email_isSet = !json[QString("contactEmail")].isNull() && m_contact_email_isValid;

    m_contact_name_isValid = ::OpenAPI::fromJsonValue(m_contact_name, json[QString("contactName")]);
    m_contact_name_isSet = !json[QString("contactName")].isNull() && m_contact_name_isValid;

    m_cycle_superhighway_id_isValid = ::OpenAPI::fromJsonValue(m_cycle_superhighway_id, json[QString("cycleSuperhighwayId")]);
    m_cycle_superhighway_id_isSet = !json[QString("cycleSuperhighwayId")].isNull() && m_cycle_superhighway_id_isValid;

    m_external_page_url_isValid = ::OpenAPI::fromJsonValue(m_external_page_url, json[QString("externalPageUrl")]);
    m_external_page_url_isSet = !json[QString("externalPageUrl")].isNull() && m_external_page_url_isValid;

    m_phase_isValid = ::OpenAPI::fromJsonValue(m_phase, json[QString("phase")]);
    m_phase_isSet = !json[QString("phase")].isNull() && m_phase_isValid;

    m_project_description_isValid = ::OpenAPI::fromJsonValue(m_project_description, json[QString("projectDescription")]);
    m_project_description_isSet = !json[QString("projectDescription")].isNull() && m_project_description_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("projectName")]);
    m_project_name_isSet = !json[QString("projectName")].isNull() && m_project_name_isValid;

    m_project_page_url_isValid = ::OpenAPI::fromJsonValue(m_project_page_url, json[QString("projectPageUrl")]);
    m_project_page_url_isSet = !json[QString("projectPageUrl")].isNull() && m_project_page_url_isValid;

    m_project_summary_page_url_isValid = ::OpenAPI::fromJsonValue(m_project_summary_page_url, json[QString("projectSummaryPageUrl")]);
    m_project_summary_page_url_isSet = !json[QString("projectSummaryPageUrl")].isNull() && m_project_summary_page_url_isValid;

    m_scheme_name_isValid = ::OpenAPI::fromJsonValue(m_scheme_name, json[QString("schemeName")]);
    m_scheme_name_isSet = !json[QString("schemeName")].isNull() && m_scheme_name_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITfl_Api_Presentation_Entities_RoadProject::asJsonObject() const {
    QJsonObject obj;
    if (m_boroughs_benefited.size() > 0) {
        obj.insert(QString("boroughsBenefited"), ::OpenAPI::toJsonValue(m_boroughs_benefited));
    }
    if (m_construction_end_date_isSet) {
        obj.insert(QString("constructionEndDate"), ::OpenAPI::toJsonValue(m_construction_end_date));
    }
    if (m_construction_start_date_isSet) {
        obj.insert(QString("constructionStartDate"), ::OpenAPI::toJsonValue(m_construction_start_date));
    }
    if (m_consultation_end_date_isSet) {
        obj.insert(QString("consultationEndDate"), ::OpenAPI::toJsonValue(m_consultation_end_date));
    }
    if (m_consultation_page_url_isSet) {
        obj.insert(QString("consultationPageUrl"), ::OpenAPI::toJsonValue(m_consultation_page_url));
    }
    if (m_consultation_start_date_isSet) {
        obj.insert(QString("consultationStartDate"), ::OpenAPI::toJsonValue(m_consultation_start_date));
    }
    if (m_contact_email_isSet) {
        obj.insert(QString("contactEmail"), ::OpenAPI::toJsonValue(m_contact_email));
    }
    if (m_contact_name_isSet) {
        obj.insert(QString("contactName"), ::OpenAPI::toJsonValue(m_contact_name));
    }
    if (m_cycle_superhighway_id_isSet) {
        obj.insert(QString("cycleSuperhighwayId"), ::OpenAPI::toJsonValue(m_cycle_superhighway_id));
    }
    if (m_external_page_url_isSet) {
        obj.insert(QString("externalPageUrl"), ::OpenAPI::toJsonValue(m_external_page_url));
    }
    if (m_phase_isSet) {
        obj.insert(QString("phase"), ::OpenAPI::toJsonValue(m_phase));
    }
    if (m_project_description_isSet) {
        obj.insert(QString("projectDescription"), ::OpenAPI::toJsonValue(m_project_description));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_name_isSet) {
        obj.insert(QString("projectName"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_project_page_url_isSet) {
        obj.insert(QString("projectPageUrl"), ::OpenAPI::toJsonValue(m_project_page_url));
    }
    if (m_project_summary_page_url_isSet) {
        obj.insert(QString("projectSummaryPageUrl"), ::OpenAPI::toJsonValue(m_project_summary_page_url));
    }
    if (m_scheme_name_isSet) {
        obj.insert(QString("schemeName"), ::OpenAPI::toJsonValue(m_scheme_name));
    }
    return obj;
}

QList<QString> OAITfl_Api_Presentation_Entities_RoadProject::getBoroughsBenefited() const {
    return m_boroughs_benefited;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setBoroughsBenefited(const QList<QString> &boroughs_benefited) {
    m_boroughs_benefited = boroughs_benefited;
    m_boroughs_benefited_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_boroughs_benefited_Set() const{
    return m_boroughs_benefited_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_boroughs_benefited_Valid() const{
    return m_boroughs_benefited_isValid;
}

QDateTime OAITfl_Api_Presentation_Entities_RoadProject::getConstructionEndDate() const {
    return m_construction_end_date;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setConstructionEndDate(const QDateTime &construction_end_date) {
    m_construction_end_date = construction_end_date;
    m_construction_end_date_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_construction_end_date_Set() const{
    return m_construction_end_date_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_construction_end_date_Valid() const{
    return m_construction_end_date_isValid;
}

QDateTime OAITfl_Api_Presentation_Entities_RoadProject::getConstructionStartDate() const {
    return m_construction_start_date;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setConstructionStartDate(const QDateTime &construction_start_date) {
    m_construction_start_date = construction_start_date;
    m_construction_start_date_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_construction_start_date_Set() const{
    return m_construction_start_date_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_construction_start_date_Valid() const{
    return m_construction_start_date_isValid;
}

QDateTime OAITfl_Api_Presentation_Entities_RoadProject::getConsultationEndDate() const {
    return m_consultation_end_date;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setConsultationEndDate(const QDateTime &consultation_end_date) {
    m_consultation_end_date = consultation_end_date;
    m_consultation_end_date_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_consultation_end_date_Set() const{
    return m_consultation_end_date_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_consultation_end_date_Valid() const{
    return m_consultation_end_date_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getConsultationPageUrl() const {
    return m_consultation_page_url;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setConsultationPageUrl(const QString &consultation_page_url) {
    m_consultation_page_url = consultation_page_url;
    m_consultation_page_url_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_consultation_page_url_Set() const{
    return m_consultation_page_url_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_consultation_page_url_Valid() const{
    return m_consultation_page_url_isValid;
}

QDateTime OAITfl_Api_Presentation_Entities_RoadProject::getConsultationStartDate() const {
    return m_consultation_start_date;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setConsultationStartDate(const QDateTime &consultation_start_date) {
    m_consultation_start_date = consultation_start_date;
    m_consultation_start_date_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_consultation_start_date_Set() const{
    return m_consultation_start_date_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_consultation_start_date_Valid() const{
    return m_consultation_start_date_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getContactEmail() const {
    return m_contact_email;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setContactEmail(const QString &contact_email) {
    m_contact_email = contact_email;
    m_contact_email_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_contact_email_Set() const{
    return m_contact_email_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_contact_email_Valid() const{
    return m_contact_email_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getContactName() const {
    return m_contact_name;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setContactName(const QString &contact_name) {
    m_contact_name = contact_name;
    m_contact_name_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_contact_name_Set() const{
    return m_contact_name_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_contact_name_Valid() const{
    return m_contact_name_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getCycleSuperhighwayId() const {
    return m_cycle_superhighway_id;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setCycleSuperhighwayId(const QString &cycle_superhighway_id) {
    m_cycle_superhighway_id = cycle_superhighway_id;
    m_cycle_superhighway_id_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_cycle_superhighway_id_Set() const{
    return m_cycle_superhighway_id_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_cycle_superhighway_id_Valid() const{
    return m_cycle_superhighway_id_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getExternalPageUrl() const {
    return m_external_page_url;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setExternalPageUrl(const QString &external_page_url) {
    m_external_page_url = external_page_url;
    m_external_page_url_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_external_page_url_Set() const{
    return m_external_page_url_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_external_page_url_Valid() const{
    return m_external_page_url_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getPhase() const {
    return m_phase;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setPhase(const QString &phase) {
    m_phase = phase;
    m_phase_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_phase_Set() const{
    return m_phase_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_phase_Valid() const{
    return m_phase_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getProjectDescription() const {
    return m_project_description;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setProjectDescription(const QString &project_description) {
    m_project_description = project_description;
    m_project_description_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_description_Set() const{
    return m_project_description_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_description_Valid() const{
    return m_project_description_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getProjectId() const {
    return m_project_id;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getProjectName() const {
    return m_project_name;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getProjectPageUrl() const {
    return m_project_page_url;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setProjectPageUrl(const QString &project_page_url) {
    m_project_page_url = project_page_url;
    m_project_page_url_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_page_url_Set() const{
    return m_project_page_url_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_page_url_Valid() const{
    return m_project_page_url_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getProjectSummaryPageUrl() const {
    return m_project_summary_page_url;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setProjectSummaryPageUrl(const QString &project_summary_page_url) {
    m_project_summary_page_url = project_summary_page_url;
    m_project_summary_page_url_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_summary_page_url_Set() const{
    return m_project_summary_page_url_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_project_summary_page_url_Valid() const{
    return m_project_summary_page_url_isValid;
}

QString OAITfl_Api_Presentation_Entities_RoadProject::getSchemeName() const {
    return m_scheme_name;
}
void OAITfl_Api_Presentation_Entities_RoadProject::setSchemeName(const QString &scheme_name) {
    m_scheme_name = scheme_name;
    m_scheme_name_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_scheme_name_Set() const{
    return m_scheme_name_isSet;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::is_scheme_name_Valid() const{
    return m_scheme_name_isValid;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boroughs_benefited.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_construction_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_construction_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_consultation_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_consultation_page_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_consultation_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cycle_superhighway_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_page_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phase_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_page_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_summary_page_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheme_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITfl_Api_Presentation_Entities_RoadProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
