/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_MatchedStop.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_MatchedStop_H
#define OAITfl_Api_Presentation_Entities_MatchedStop_H

#include <QJsonObject>

#include "OAITfl_Api_Presentation_Entities_Identifier.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITfl_Api_Presentation_Entities_Identifier;

class OAITfl_Api_Presentation_Entities_MatchedStop : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_MatchedStop();
    OAITfl_Api_Presentation_Entities_MatchedStop(QString json);
    ~OAITfl_Api_Presentation_Entities_MatchedStop() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessibilitySummary() const;
    void setAccessibilitySummary(const QString &accessibility_summary);
    bool is_accessibility_summary_Set() const;
    bool is_accessibility_summary_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    bool isHasDisruption() const;
    void setHasDisruption(const bool &has_disruption);
    bool is_has_disruption_Set() const;
    bool is_has_disruption_Valid() const;

    QString getIcsId() const;
    void setIcsId(const QString &ics_id);
    bool is_ics_id_Set() const;
    bool is_ics_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_Identifier> getLines() const;
    void setLines(const QList<OAITfl_Api_Presentation_Entities_Identifier> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    double getLon() const;
    void setLon(const double &lon);
    bool is_lon_Set() const;
    bool is_lon_Valid() const;

    QList<QString> getModes() const;
    void setModes(const QList<QString> &modes);
    bool is_modes_Set() const;
    bool is_modes_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParentId() const;
    void setParentId(const QString &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    qint32 getRouteId() const;
    void setRouteId(const qint32 &route_id);
    bool is_route_id_Set() const;
    bool is_route_id_Valid() const;

    QString getStationId() const;
    void setStationId(const QString &station_id);
    bool is_station_id_Set() const;
    bool is_station_id_Valid() const;

    bool isStatus() const;
    void setStatus(const bool &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStopLetter() const;
    void setStopLetter(const QString &stop_letter);
    bool is_stop_letter_Set() const;
    bool is_stop_letter_Valid() const;

    QString getStopType() const;
    void setStopType(const QString &stop_type);
    bool is_stop_type_Set() const;
    bool is_stop_type_Valid() const;

    QString getTopMostParentId() const;
    void setTopMostParentId(const QString &top_most_parent_id);
    bool is_top_most_parent_id_Set() const;
    bool is_top_most_parent_id_Valid() const;

    QString getTowards() const;
    void setTowards(const QString &towards);
    bool is_towards_Set() const;
    bool is_towards_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accessibility_summary;
    bool m_accessibility_summary_isSet;
    bool m_accessibility_summary_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    bool m_has_disruption;
    bool m_has_disruption_isSet;
    bool m_has_disruption_isValid;

    QString m_ics_id;
    bool m_ics_id_isSet;
    bool m_ics_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    QList<OAITfl_Api_Presentation_Entities_Identifier> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    double m_lon;
    bool m_lon_isSet;
    bool m_lon_isValid;

    QList<QString> m_modes;
    bool m_modes_isSet;
    bool m_modes_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    qint32 m_route_id;
    bool m_route_id_isSet;
    bool m_route_id_isValid;

    QString m_station_id;
    bool m_station_id_isSet;
    bool m_station_id_isValid;

    bool m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_stop_letter;
    bool m_stop_letter_isSet;
    bool m_stop_letter_isValid;

    QString m_stop_type;
    bool m_stop_type_isSet;
    bool m_stop_type_isValid;

    QString m_top_most_parent_id;
    bool m_top_most_parent_id_isSet;
    bool m_top_most_parent_id_isValid;

    QString m_towards;
    bool m_towards_isSet;
    bool m_towards_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_MatchedStop)

#endif // OAITfl_Api_Presentation_Entities_MatchedStop_H
