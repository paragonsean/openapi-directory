/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_Fares_Fare.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_Fares_Fare_H
#define OAITfl_Api_Presentation_Entities_Fares_Fare_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITfl_Api_Presentation_Entities_Fares_Fare : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_Fares_Fare();
    OAITfl_Api_Presentation_Entities_Fares_Fare(QString json);
    ~OAITfl_Api_Presentation_Entities_Fares_Fare() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCap() const;
    void setCap(const double &cap);
    bool is_cap_Set() const;
    bool is_cap_Valid() const;

    QString getCost() const;
    void setCost(const QString &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QString getPassengerType() const;
    void setPassengerType(const QString &passenger_type);
    bool is_passenger_type_Set() const;
    bool is_passenger_type_Valid() const;

    QString getTicketTime() const;
    void setTicketTime(const QString &ticket_time);
    bool is_ticket_time_Set() const;
    bool is_ticket_time_Valid() const;

    QString getTicketType() const;
    void setTicketType(const QString &ticket_type);
    bool is_ticket_type_Set() const;
    bool is_ticket_type_Valid() const;

    QDateTime getValidFrom() const;
    void setValidFrom(const QDateTime &valid_from);
    bool is_valid_from_Set() const;
    bool is_valid_from_Valid() const;

    QDateTime getValidUntil() const;
    void setValidUntil(const QDateTime &valid_until);
    bool is_valid_until_Set() const;
    bool is_valid_until_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_cap;
    bool m_cap_isSet;
    bool m_cap_isValid;

    QString m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QString m_passenger_type;
    bool m_passenger_type_isSet;
    bool m_passenger_type_isValid;

    QString m_ticket_time;
    bool m_ticket_time_isSet;
    bool m_ticket_time_isValid;

    QString m_ticket_type;
    bool m_ticket_type_isSet;
    bool m_ticket_type_isValid;

    QDateTime m_valid_from;
    bool m_valid_from_isSet;
    bool m_valid_from_isValid;

    QDateTime m_valid_until;
    bool m_valid_until_isSet;
    bool m_valid_until_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_Fares_Fare)

#endif // OAITfl_Api_Presentation_Entities_Fares_Fare_H
