/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITfl_Api_Presentation_Entities_AdditionalProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITfl_Api_Presentation_Entities_AdditionalProperties::OAITfl_Api_Presentation_Entities_AdditionalProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITfl_Api_Presentation_Entities_AdditionalProperties::OAITfl_Api_Presentation_Entities_AdditionalProperties() {
    this->initializeModel();
}

OAITfl_Api_Presentation_Entities_AdditionalProperties::~OAITfl_Api_Presentation_Entities_AdditionalProperties() {}

void OAITfl_Api_Presentation_Entities_AdditionalProperties::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_modified_isSet = false;
    m_modified_isValid = false;

    m_source_system_key_isSet = false;
    m_source_system_key_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAITfl_Api_Presentation_Entities_AdditionalProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITfl_Api_Presentation_Entities_AdditionalProperties::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_modified_isValid = ::OpenAPI::fromJsonValue(m_modified, json[QString("modified")]);
    m_modified_isSet = !json[QString("modified")].isNull() && m_modified_isValid;

    m_source_system_key_isValid = ::OpenAPI::fromJsonValue(m_source_system_key, json[QString("sourceSystemKey")]);
    m_source_system_key_isSet = !json[QString("sourceSystemKey")].isNull() && m_source_system_key_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAITfl_Api_Presentation_Entities_AdditionalProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITfl_Api_Presentation_Entities_AdditionalProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_modified_isSet) {
        obj.insert(QString("modified"), ::OpenAPI::toJsonValue(m_modified));
    }
    if (m_source_system_key_isSet) {
        obj.insert(QString("sourceSystemKey"), ::OpenAPI::toJsonValue(m_source_system_key));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAITfl_Api_Presentation_Entities_AdditionalProperties::getCategory() const {
    return m_category;
}
void OAITfl_Api_Presentation_Entities_AdditionalProperties::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_category_Set() const{
    return m_category_isSet;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_category_Valid() const{
    return m_category_isValid;
}

QString OAITfl_Api_Presentation_Entities_AdditionalProperties::getKey() const {
    return m_key;
}
void OAITfl_Api_Presentation_Entities_AdditionalProperties::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_key_Set() const{
    return m_key_isSet;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_key_Valid() const{
    return m_key_isValid;
}

QDateTime OAITfl_Api_Presentation_Entities_AdditionalProperties::getModified() const {
    return m_modified;
}
void OAITfl_Api_Presentation_Entities_AdditionalProperties::setModified(const QDateTime &modified) {
    m_modified = modified;
    m_modified_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_modified_Set() const{
    return m_modified_isSet;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_modified_Valid() const{
    return m_modified_isValid;
}

QString OAITfl_Api_Presentation_Entities_AdditionalProperties::getSourceSystemKey() const {
    return m_source_system_key;
}
void OAITfl_Api_Presentation_Entities_AdditionalProperties::setSourceSystemKey(const QString &source_system_key) {
    m_source_system_key = source_system_key;
    m_source_system_key_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_source_system_key_Set() const{
    return m_source_system_key_isSet;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_source_system_key_Valid() const{
    return m_source_system_key_isValid;
}

QString OAITfl_Api_Presentation_Entities_AdditionalProperties::getValue() const {
    return m_value;
}
void OAITfl_Api_Presentation_Entities_AdditionalProperties::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_value_Set() const{
    return m_value_isSet;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::is_value_Valid() const{
    return m_value_isValid;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_system_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITfl_Api_Presentation_Entities_AdditionalProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
