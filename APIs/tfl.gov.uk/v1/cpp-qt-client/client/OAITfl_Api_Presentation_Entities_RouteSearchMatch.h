/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_RouteSearchMatch.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_RouteSearchMatch_H
#define OAITfl_Api_Presentation_Entities_RouteSearchMatch_H

#include <QJsonObject>

#include "OAITfl_Api_Presentation_Entities_LineRouteSection.h"
#include "OAITfl_Api_Presentation_Entities_MatchedRouteSections.h"
#include "OAITfl_Api_Presentation_Entities_MatchedStop.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITfl_Api_Presentation_Entities_LineRouteSection;
class OAITfl_Api_Presentation_Entities_MatchedRouteSections;
class OAITfl_Api_Presentation_Entities_MatchedStop;

class OAITfl_Api_Presentation_Entities_RouteSearchMatch : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_RouteSearchMatch();
    OAITfl_Api_Presentation_Entities_RouteSearchMatch(QString json);
    ~OAITfl_Api_Presentation_Entities_RouteSearchMatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    QString getLineId() const;
    void setLineId(const QString &line_id);
    bool is_line_id_Set() const;
    bool is_line_id_Valid() const;

    QString getLineName() const;
    void setLineName(const QString &line_name);
    bool is_line_name_Set() const;
    bool is_line_name_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_LineRouteSection> getLineRouteSection() const;
    void setLineRouteSection(const QList<OAITfl_Api_Presentation_Entities_LineRouteSection> &line_route_section);
    bool is_line_route_section_Set() const;
    bool is_line_route_section_Valid() const;

    double getLon() const;
    void setLon(const double &lon);
    bool is_lon_Set() const;
    bool is_lon_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_MatchedRouteSections> getMatchedRouteSections() const;
    void setMatchedRouteSections(const QList<OAITfl_Api_Presentation_Entities_MatchedRouteSections> &matched_route_sections);
    bool is_matched_route_sections_Set() const;
    bool is_matched_route_sections_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_MatchedStop> getMatchedStops() const;
    void setMatchedStops(const QList<OAITfl_Api_Presentation_Entities_MatchedStop> &matched_stops);
    bool is_matched_stops_Set() const;
    bool is_matched_stops_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    QString m_line_id;
    bool m_line_id_isSet;
    bool m_line_id_isValid;

    QString m_line_name;
    bool m_line_name_isSet;
    bool m_line_name_isValid;

    QList<OAITfl_Api_Presentation_Entities_LineRouteSection> m_line_route_section;
    bool m_line_route_section_isSet;
    bool m_line_route_section_isValid;

    double m_lon;
    bool m_lon_isSet;
    bool m_lon_isValid;

    QList<OAITfl_Api_Presentation_Entities_MatchedRouteSections> m_matched_route_sections;
    bool m_matched_route_sections_isSet;
    bool m_matched_route_sections_isValid;

    QList<OAITfl_Api_Presentation_Entities_MatchedStop> m_matched_stops;
    bool m_matched_stops_isSet;
    bool m_matched_stops_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_RouteSearchMatch)

#endif // OAITfl_Api_Presentation_Entities_RouteSearchMatch_H
