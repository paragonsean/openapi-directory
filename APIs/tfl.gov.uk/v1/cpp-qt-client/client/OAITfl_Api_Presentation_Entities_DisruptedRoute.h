/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_DisruptedRoute.h
 *
 * keep old RouteSection name so as not to break contract
 */

#ifndef OAITfl_Api_Presentation_Entities_DisruptedRoute_H
#define OAITfl_Api_Presentation_Entities_DisruptedRoute_H

#include <QJsonObject>

#include "OAITfl_Api_Presentation_Entities_RouteSectionNaptanEntrySequence.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITfl_Api_Presentation_Entities_RouteSectionNaptanEntrySequence;

class OAITfl_Api_Presentation_Entities_DisruptedRoute : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_DisruptedRoute();
    OAITfl_Api_Presentation_Entities_DisruptedRoute(QString json);
    ~OAITfl_Api_Presentation_Entities_DisruptedRoute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDestinationName() const;
    void setDestinationName(const QString &destination_name);
    bool is_destination_name_Set() const;
    bool is_destination_name_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsEntireRouteSection() const;
    void setIsEntireRouteSection(const bool &is_entire_route_section);
    bool is_is_entire_route_section_Set() const;
    bool is_is_entire_route_section_Valid() const;

    QString getLineId() const;
    void setLineId(const QString &line_id);
    bool is_line_id_Set() const;
    bool is_line_id_Valid() const;

    QString getLineString() const;
    void setLineString(const QString &line_string);
    bool is_line_string_Set() const;
    bool is_line_string_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOriginationName() const;
    void setOriginationName(const QString &origination_name);
    bool is_origination_name_Set() const;
    bool is_origination_name_Valid() const;

    QString getRouteCode() const;
    void setRouteCode(const QString &route_code);
    bool is_route_code_Set() const;
    bool is_route_code_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_RouteSectionNaptanEntrySequence> getRouteSectionNaptanEntrySequence() const;
    void setRouteSectionNaptanEntrySequence(const QList<OAITfl_Api_Presentation_Entities_RouteSectionNaptanEntrySequence> &route_section_naptan_entry_sequence);
    bool is_route_section_naptan_entry_sequence_Set() const;
    bool is_route_section_naptan_entry_sequence_Valid() const;

    QDateTime getValidFrom() const;
    void setValidFrom(const QDateTime &valid_from);
    bool is_valid_from_Set() const;
    bool is_valid_from_Valid() const;

    QDateTime getValidTo() const;
    void setValidTo(const QDateTime &valid_to);
    bool is_valid_to_Set() const;
    bool is_valid_to_Valid() const;

    OAITfl_Api_Presentation_Entities_RouteSectionNaptanEntrySequence getVia() const;
    void setVia(const OAITfl_Api_Presentation_Entities_RouteSectionNaptanEntrySequence &via);
    bool is_via_Set() const;
    bool is_via_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_destination_name;
    bool m_destination_name_isSet;
    bool m_destination_name_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_entire_route_section;
    bool m_is_entire_route_section_isSet;
    bool m_is_entire_route_section_isValid;

    QString m_line_id;
    bool m_line_id_isSet;
    bool m_line_id_isValid;

    QString m_line_string;
    bool m_line_string_isSet;
    bool m_line_string_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_origination_name;
    bool m_origination_name_isSet;
    bool m_origination_name_isValid;

    QString m_route_code;
    bool m_route_code_isSet;
    bool m_route_code_isValid;

    QList<OAITfl_Api_Presentation_Entities_RouteSectionNaptanEntrySequence> m_route_section_naptan_entry_sequence;
    bool m_route_section_naptan_entry_sequence_isSet;
    bool m_route_section_naptan_entry_sequence_isValid;

    QDateTime m_valid_from;
    bool m_valid_from_isSet;
    bool m_valid_from_isValid;

    QDateTime m_valid_to;
    bool m_valid_to_isSet;
    bool m_valid_to_isValid;

    OAITfl_Api_Presentation_Entities_RouteSectionNaptanEntrySequence m_via;
    bool m_via_isSet;
    bool m_via_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_DisruptedRoute)

#endif // OAITfl_Api_Presentation_Entities_DisruptedRoute_H
