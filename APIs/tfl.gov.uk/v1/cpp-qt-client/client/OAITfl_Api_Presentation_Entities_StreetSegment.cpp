/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITfl_Api_Presentation_Entities_StreetSegment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITfl_Api_Presentation_Entities_StreetSegment::OAITfl_Api_Presentation_Entities_StreetSegment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITfl_Api_Presentation_Entities_StreetSegment::OAITfl_Api_Presentation_Entities_StreetSegment() {
    this->initializeModel();
}

OAITfl_Api_Presentation_Entities_StreetSegment::~OAITfl_Api_Presentation_Entities_StreetSegment() {}

void OAITfl_Api_Presentation_Entities_StreetSegment::initializeModel() {

    m_line_string_isSet = false;
    m_line_string_isValid = false;

    m_source_system_id_isSet = false;
    m_source_system_id_isValid = false;

    m_source_system_key_isSet = false;
    m_source_system_key_isValid = false;

    m_toid_isSet = false;
    m_toid_isValid = false;
}

void OAITfl_Api_Presentation_Entities_StreetSegment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITfl_Api_Presentation_Entities_StreetSegment::fromJsonObject(QJsonObject json) {

    m_line_string_isValid = ::OpenAPI::fromJsonValue(m_line_string, json[QString("lineString")]);
    m_line_string_isSet = !json[QString("lineString")].isNull() && m_line_string_isValid;

    m_source_system_id_isValid = ::OpenAPI::fromJsonValue(m_source_system_id, json[QString("sourceSystemId")]);
    m_source_system_id_isSet = !json[QString("sourceSystemId")].isNull() && m_source_system_id_isValid;

    m_source_system_key_isValid = ::OpenAPI::fromJsonValue(m_source_system_key, json[QString("sourceSystemKey")]);
    m_source_system_key_isSet = !json[QString("sourceSystemKey")].isNull() && m_source_system_key_isValid;

    m_toid_isValid = ::OpenAPI::fromJsonValue(m_toid, json[QString("toid")]);
    m_toid_isSet = !json[QString("toid")].isNull() && m_toid_isValid;
}

QString OAITfl_Api_Presentation_Entities_StreetSegment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITfl_Api_Presentation_Entities_StreetSegment::asJsonObject() const {
    QJsonObject obj;
    if (m_line_string_isSet) {
        obj.insert(QString("lineString"), ::OpenAPI::toJsonValue(m_line_string));
    }
    if (m_source_system_id_isSet) {
        obj.insert(QString("sourceSystemId"), ::OpenAPI::toJsonValue(m_source_system_id));
    }
    if (m_source_system_key_isSet) {
        obj.insert(QString("sourceSystemKey"), ::OpenAPI::toJsonValue(m_source_system_key));
    }
    if (m_toid_isSet) {
        obj.insert(QString("toid"), ::OpenAPI::toJsonValue(m_toid));
    }
    return obj;
}

QString OAITfl_Api_Presentation_Entities_StreetSegment::getLineString() const {
    return m_line_string;
}
void OAITfl_Api_Presentation_Entities_StreetSegment::setLineString(const QString &line_string) {
    m_line_string = line_string;
    m_line_string_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::is_line_string_Set() const{
    return m_line_string_isSet;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::is_line_string_Valid() const{
    return m_line_string_isValid;
}

qint64 OAITfl_Api_Presentation_Entities_StreetSegment::getSourceSystemId() const {
    return m_source_system_id;
}
void OAITfl_Api_Presentation_Entities_StreetSegment::setSourceSystemId(const qint64 &source_system_id) {
    m_source_system_id = source_system_id;
    m_source_system_id_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::is_source_system_id_Set() const{
    return m_source_system_id_isSet;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::is_source_system_id_Valid() const{
    return m_source_system_id_isValid;
}

QString OAITfl_Api_Presentation_Entities_StreetSegment::getSourceSystemKey() const {
    return m_source_system_key;
}
void OAITfl_Api_Presentation_Entities_StreetSegment::setSourceSystemKey(const QString &source_system_key) {
    m_source_system_key = source_system_key;
    m_source_system_key_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::is_source_system_key_Set() const{
    return m_source_system_key_isSet;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::is_source_system_key_Valid() const{
    return m_source_system_key_isValid;
}

QString OAITfl_Api_Presentation_Entities_StreetSegment::getToid() const {
    return m_toid;
}
void OAITfl_Api_Presentation_Entities_StreetSegment::setToid(const QString &toid) {
    m_toid = toid;
    m_toid_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::is_toid_Set() const{
    return m_toid_isSet;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::is_toid_Valid() const{
    return m_toid_isValid;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_system_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_toid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITfl_Api_Presentation_Entities_StreetSegment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
