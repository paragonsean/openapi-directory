/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISystem_Data_Spatial_DbGeographyWellKnownValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISystem_Data_Spatial_DbGeographyWellKnownValue::OAISystem_Data_Spatial_DbGeographyWellKnownValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISystem_Data_Spatial_DbGeographyWellKnownValue::OAISystem_Data_Spatial_DbGeographyWellKnownValue() {
    this->initializeModel();
}

OAISystem_Data_Spatial_DbGeographyWellKnownValue::~OAISystem_Data_Spatial_DbGeographyWellKnownValue() {}

void OAISystem_Data_Spatial_DbGeographyWellKnownValue::initializeModel() {

    m_coordinate_system_id_isSet = false;
    m_coordinate_system_id_isValid = false;

    m_well_known_binary_isSet = false;
    m_well_known_binary_isValid = false;

    m_well_known_text_isSet = false;
    m_well_known_text_isValid = false;
}

void OAISystem_Data_Spatial_DbGeographyWellKnownValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISystem_Data_Spatial_DbGeographyWellKnownValue::fromJsonObject(QJsonObject json) {

    m_coordinate_system_id_isValid = ::OpenAPI::fromJsonValue(m_coordinate_system_id, json[QString("coordinateSystemId")]);
    m_coordinate_system_id_isSet = !json[QString("coordinateSystemId")].isNull() && m_coordinate_system_id_isValid;

    m_well_known_binary_isValid = ::OpenAPI::fromJsonValue(m_well_known_binary, json[QString("wellKnownBinary")]);
    m_well_known_binary_isSet = !json[QString("wellKnownBinary")].isNull() && m_well_known_binary_isValid;

    m_well_known_text_isValid = ::OpenAPI::fromJsonValue(m_well_known_text, json[QString("wellKnownText")]);
    m_well_known_text_isSet = !json[QString("wellKnownText")].isNull() && m_well_known_text_isValid;
}

QString OAISystem_Data_Spatial_DbGeographyWellKnownValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISystem_Data_Spatial_DbGeographyWellKnownValue::asJsonObject() const {
    QJsonObject obj;
    if (m_coordinate_system_id_isSet) {
        obj.insert(QString("coordinateSystemId"), ::OpenAPI::toJsonValue(m_coordinate_system_id));
    }
    if (m_well_known_binary_isSet) {
        obj.insert(QString("wellKnownBinary"), ::OpenAPI::toJsonValue(m_well_known_binary));
    }
    if (m_well_known_text_isSet) {
        obj.insert(QString("wellKnownText"), ::OpenAPI::toJsonValue(m_well_known_text));
    }
    return obj;
}

qint32 OAISystem_Data_Spatial_DbGeographyWellKnownValue::getCoordinateSystemId() const {
    return m_coordinate_system_id;
}
void OAISystem_Data_Spatial_DbGeographyWellKnownValue::setCoordinateSystemId(const qint32 &coordinate_system_id) {
    m_coordinate_system_id = coordinate_system_id;
    m_coordinate_system_id_isSet = true;
}

bool OAISystem_Data_Spatial_DbGeographyWellKnownValue::is_coordinate_system_id_Set() const{
    return m_coordinate_system_id_isSet;
}

bool OAISystem_Data_Spatial_DbGeographyWellKnownValue::is_coordinate_system_id_Valid() const{
    return m_coordinate_system_id_isValid;
}

QByteArray OAISystem_Data_Spatial_DbGeographyWellKnownValue::getWellKnownBinary() const {
    return m_well_known_binary;
}
void OAISystem_Data_Spatial_DbGeographyWellKnownValue::setWellKnownBinary(const QByteArray &well_known_binary) {
    m_well_known_binary = well_known_binary;
    m_well_known_binary_isSet = true;
}

bool OAISystem_Data_Spatial_DbGeographyWellKnownValue::is_well_known_binary_Set() const{
    return m_well_known_binary_isSet;
}

bool OAISystem_Data_Spatial_DbGeographyWellKnownValue::is_well_known_binary_Valid() const{
    return m_well_known_binary_isValid;
}

QString OAISystem_Data_Spatial_DbGeographyWellKnownValue::getWellKnownText() const {
    return m_well_known_text;
}
void OAISystem_Data_Spatial_DbGeographyWellKnownValue::setWellKnownText(const QString &well_known_text) {
    m_well_known_text = well_known_text;
    m_well_known_text_isSet = true;
}

bool OAISystem_Data_Spatial_DbGeographyWellKnownValue::is_well_known_text_Set() const{
    return m_well_known_text_isSet;
}

bool OAISystem_Data_Spatial_DbGeographyWellKnownValue::is_well_known_text_Valid() const{
    return m_well_known_text_isValid;
}

bool OAISystem_Data_Spatial_DbGeographyWellKnownValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_coordinate_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_well_known_binary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_well_known_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISystem_Data_Spatial_DbGeographyWellKnownValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
