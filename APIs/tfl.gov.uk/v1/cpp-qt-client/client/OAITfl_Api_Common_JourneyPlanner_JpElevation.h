/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Common_JourneyPlanner_JpElevation.h
 *
 * 
 */

#ifndef OAITfl_Api_Common_JourneyPlanner_JpElevation_H
#define OAITfl_Api_Common_JourneyPlanner_JpElevation_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITfl_Api_Common_JourneyPlanner_JpElevation : public OAIObject {
public:
    OAITfl_Api_Common_JourneyPlanner_JpElevation();
    OAITfl_Api_Common_JourneyPlanner_JpElevation(QString json);
    ~OAITfl_Api_Common_JourneyPlanner_JpElevation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDistance() const;
    void setDistance(const qint32 &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    double getEndLat() const;
    void setEndLat(const double &end_lat);
    bool is_end_lat_Set() const;
    bool is_end_lat_Valid() const;

    double getEndLon() const;
    void setEndLon(const double &end_lon);
    bool is_end_lon_Set() const;
    bool is_end_lon_Valid() const;

    double getGradient() const;
    void setGradient(const double &gradient);
    bool is_gradient_Set() const;
    bool is_gradient_Valid() const;

    qint32 getHeightFromPreviousPoint() const;
    void setHeightFromPreviousPoint(const qint32 &height_from_previous_point);
    bool is_height_from_previous_point_Set() const;
    bool is_height_from_previous_point_Valid() const;

    double getStartLat() const;
    void setStartLat(const double &start_lat);
    bool is_start_lat_Set() const;
    bool is_start_lat_Valid() const;

    double getStartLon() const;
    void setStartLon(const double &start_lon);
    bool is_start_lon_Set() const;
    bool is_start_lon_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    double m_end_lat;
    bool m_end_lat_isSet;
    bool m_end_lat_isValid;

    double m_end_lon;
    bool m_end_lon_isSet;
    bool m_end_lon_isValid;

    double m_gradient;
    bool m_gradient_isSet;
    bool m_gradient_isValid;

    qint32 m_height_from_previous_point;
    bool m_height_from_previous_point_isSet;
    bool m_height_from_previous_point_isValid;

    double m_start_lat;
    bool m_start_lat_isSet;
    bool m_start_lat_isValid;

    double m_start_lon;
    bool m_start_lon_isSet;
    bool m_start_lon_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Common_JourneyPlanner_JpElevation)

#endif // OAITfl_Api_Common_JourneyPlanner_JpElevation_H
