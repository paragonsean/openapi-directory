/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_Fares_FaresPeriod.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_Fares_FaresPeriod_H
#define OAITfl_Api_Presentation_Entities_Fares_FaresPeriod_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITfl_Api_Presentation_Entities_Fares_FaresPeriod : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_Fares_FaresPeriod();
    OAITfl_Api_Presentation_Entities_Fares_FaresPeriod(QString json);
    ~OAITfl_Api_Presentation_Entities_Fares_FaresPeriod() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsFuture() const;
    void setIsFuture(const bool &is_future);
    bool is_is_future_Set() const;
    bool is_is_future_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QDateTime getViewableDate() const;
    void setViewableDate(const QDateTime &viewable_date);
    bool is_viewable_date_Set() const;
    bool is_viewable_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_future;
    bool m_is_future_isSet;
    bool m_is_future_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QDateTime m_viewable_date;
    bool m_viewable_date_isSet;
    bool m_viewable_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_Fares_FaresPeriod)

#endif // OAITfl_Api_Presentation_Entities_Fares_FaresPeriod_H
