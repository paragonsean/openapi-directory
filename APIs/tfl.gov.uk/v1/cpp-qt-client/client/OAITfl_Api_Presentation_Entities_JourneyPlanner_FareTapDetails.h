/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails_H
#define OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails();
    OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails(QString json);
    ~OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBusRouteId() const;
    void setBusRouteId(const QString &bus_route_id);
    bool is_bus_route_id_Set() const;
    bool is_bus_route_id_Valid() const;

    QString getHostDeviceType() const;
    void setHostDeviceType(const QString &host_device_type);
    bool is_host_device_type_Set() const;
    bool is_host_device_type_Valid() const;

    QString getModeType() const;
    void setModeType(const QString &mode_type);
    bool is_mode_type_Set() const;
    bool is_mode_type_Valid() const;

    qint32 getNationalLocationCode() const;
    void setNationalLocationCode(const qint32 &national_location_code);
    bool is_national_location_code_Set() const;
    bool is_national_location_code_Valid() const;

    QDateTime getTapTimestamp() const;
    void setTapTimestamp(const QDateTime &tap_timestamp);
    bool is_tap_timestamp_Set() const;
    bool is_tap_timestamp_Valid() const;

    QString getValidationType() const;
    void setValidationType(const QString &validation_type);
    bool is_validation_type_Set() const;
    bool is_validation_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bus_route_id;
    bool m_bus_route_id_isSet;
    bool m_bus_route_id_isValid;

    QString m_host_device_type;
    bool m_host_device_type_isSet;
    bool m_host_device_type_isValid;

    QString m_mode_type;
    bool m_mode_type_isSet;
    bool m_mode_type_isValid;

    qint32 m_national_location_code;
    bool m_national_location_code_isSet;
    bool m_national_location_code_isValid;

    QDateTime m_tap_timestamp;
    bool m_tap_timestamp_isSet;
    bool m_tap_timestamp_isValid;

    QString m_validation_type;
    bool m_validation_type_isSet;
    bool m_validation_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails)

#endif // OAITfl_Api_Presentation_Entities_JourneyPlanner_FareTapDetails_H
