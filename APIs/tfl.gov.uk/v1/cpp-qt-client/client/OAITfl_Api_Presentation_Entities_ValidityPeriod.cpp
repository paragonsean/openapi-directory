/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITfl_Api_Presentation_Entities_ValidityPeriod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITfl_Api_Presentation_Entities_ValidityPeriod::OAITfl_Api_Presentation_Entities_ValidityPeriod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITfl_Api_Presentation_Entities_ValidityPeriod::OAITfl_Api_Presentation_Entities_ValidityPeriod() {
    this->initializeModel();
}

OAITfl_Api_Presentation_Entities_ValidityPeriod::~OAITfl_Api_Presentation_Entities_ValidityPeriod() {}

void OAITfl_Api_Presentation_Entities_ValidityPeriod::initializeModel() {

    m_from_date_isSet = false;
    m_from_date_isValid = false;

    m_is_now_isSet = false;
    m_is_now_isValid = false;

    m_to_date_isSet = false;
    m_to_date_isValid = false;
}

void OAITfl_Api_Presentation_Entities_ValidityPeriod::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITfl_Api_Presentation_Entities_ValidityPeriod::fromJsonObject(QJsonObject json) {

    m_from_date_isValid = ::OpenAPI::fromJsonValue(m_from_date, json[QString("fromDate")]);
    m_from_date_isSet = !json[QString("fromDate")].isNull() && m_from_date_isValid;

    m_is_now_isValid = ::OpenAPI::fromJsonValue(m_is_now, json[QString("isNow")]);
    m_is_now_isSet = !json[QString("isNow")].isNull() && m_is_now_isValid;

    m_to_date_isValid = ::OpenAPI::fromJsonValue(m_to_date, json[QString("toDate")]);
    m_to_date_isSet = !json[QString("toDate")].isNull() && m_to_date_isValid;
}

QString OAITfl_Api_Presentation_Entities_ValidityPeriod::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITfl_Api_Presentation_Entities_ValidityPeriod::asJsonObject() const {
    QJsonObject obj;
    if (m_from_date_isSet) {
        obj.insert(QString("fromDate"), ::OpenAPI::toJsonValue(m_from_date));
    }
    if (m_is_now_isSet) {
        obj.insert(QString("isNow"), ::OpenAPI::toJsonValue(m_is_now));
    }
    if (m_to_date_isSet) {
        obj.insert(QString("toDate"), ::OpenAPI::toJsonValue(m_to_date));
    }
    return obj;
}

QDateTime OAITfl_Api_Presentation_Entities_ValidityPeriod::getFromDate() const {
    return m_from_date;
}
void OAITfl_Api_Presentation_Entities_ValidityPeriod::setFromDate(const QDateTime &from_date) {
    m_from_date = from_date;
    m_from_date_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::is_from_date_Set() const{
    return m_from_date_isSet;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::is_from_date_Valid() const{
    return m_from_date_isValid;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::isIsNow() const {
    return m_is_now;
}
void OAITfl_Api_Presentation_Entities_ValidityPeriod::setIsNow(const bool &is_now) {
    m_is_now = is_now;
    m_is_now_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::is_is_now_Set() const{
    return m_is_now_isSet;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::is_is_now_Valid() const{
    return m_is_now_isValid;
}

QDateTime OAITfl_Api_Presentation_Entities_ValidityPeriod::getToDate() const {
    return m_to_date;
}
void OAITfl_Api_Presentation_Entities_ValidityPeriod::setToDate(const QDateTime &to_date) {
    m_to_date = to_date;
    m_to_date_isSet = true;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::is_to_date_Set() const{
    return m_to_date_isSet;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::is_to_date_Valid() const{
    return m_to_date_isValid;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_now_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITfl_Api_Presentation_Entities_ValidityPeriod::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
