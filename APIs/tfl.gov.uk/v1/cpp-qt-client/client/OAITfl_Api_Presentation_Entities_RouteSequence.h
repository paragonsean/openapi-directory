/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_RouteSequence.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_RouteSequence_H
#define OAITfl_Api_Presentation_Entities_RouteSequence_H

#include <QJsonObject>

#include "OAITfl_Api_Presentation_Entities_MatchedStop.h"
#include "OAITfl_Api_Presentation_Entities_OrderedRoute.h"
#include "OAITfl_Api_Presentation_Entities_StopPointSequence.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITfl_Api_Presentation_Entities_OrderedRoute;
class OAITfl_Api_Presentation_Entities_MatchedStop;
class OAITfl_Api_Presentation_Entities_StopPointSequence;

class OAITfl_Api_Presentation_Entities_RouteSequence : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_RouteSequence();
    OAITfl_Api_Presentation_Entities_RouteSequence(QString json);
    ~OAITfl_Api_Presentation_Entities_RouteSequence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    bool isIsOutboundOnly() const;
    void setIsOutboundOnly(const bool &is_outbound_only);
    bool is_is_outbound_only_Set() const;
    bool is_is_outbound_only_Valid() const;

    QString getLineId() const;
    void setLineId(const QString &line_id);
    bool is_line_id_Set() const;
    bool is_line_id_Valid() const;

    QString getLineName() const;
    void setLineName(const QString &line_name);
    bool is_line_name_Set() const;
    bool is_line_name_Valid() const;

    QList<QString> getLineStrings() const;
    void setLineStrings(const QList<QString> &line_strings);
    bool is_line_strings_Set() const;
    bool is_line_strings_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_OrderedRoute> getOrderedLineRoutes() const;
    void setOrderedLineRoutes(const QList<OAITfl_Api_Presentation_Entities_OrderedRoute> &ordered_line_routes);
    bool is_ordered_line_routes_Set() const;
    bool is_ordered_line_routes_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_MatchedStop> getStations() const;
    void setStations(const QList<OAITfl_Api_Presentation_Entities_MatchedStop> &stations);
    bool is_stations_Set() const;
    bool is_stations_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_StopPointSequence> getStopPointSequences() const;
    void setStopPointSequences(const QList<OAITfl_Api_Presentation_Entities_StopPointSequence> &stop_point_sequences);
    bool is_stop_point_sequences_Set() const;
    bool is_stop_point_sequences_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    bool m_is_outbound_only;
    bool m_is_outbound_only_isSet;
    bool m_is_outbound_only_isValid;

    QString m_line_id;
    bool m_line_id_isSet;
    bool m_line_id_isValid;

    QString m_line_name;
    bool m_line_name_isSet;
    bool m_line_name_isValid;

    QList<QString> m_line_strings;
    bool m_line_strings_isSet;
    bool m_line_strings_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QList<OAITfl_Api_Presentation_Entities_OrderedRoute> m_ordered_line_routes;
    bool m_ordered_line_routes_isSet;
    bool m_ordered_line_routes_isValid;

    QList<OAITfl_Api_Presentation_Entities_MatchedStop> m_stations;
    bool m_stations_isSet;
    bool m_stations_isValid;

    QList<OAITfl_Api_Presentation_Entities_StopPointSequence> m_stop_point_sequences;
    bool m_stop_point_sequences_isSet;
    bool m_stop_point_sequences_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_RouteSequence)

#endif // OAITfl_Api_Presentation_Entities_RouteSequence_H
