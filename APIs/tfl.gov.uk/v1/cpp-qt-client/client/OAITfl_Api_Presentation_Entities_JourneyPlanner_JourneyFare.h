/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare_H
#define OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare_H

#include <QJsonObject>

#include "OAITfl_Api_Presentation_Entities_JourneyPlanner_Fare.h"
#include "OAITfl_Api_Presentation_Entities_JourneyPlanner_FareCaveat.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITfl_Api_Presentation_Entities_JourneyPlanner_FareCaveat;
class OAITfl_Api_Presentation_Entities_JourneyPlanner_Fare;

class OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare();
    OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare(QString json);
    ~OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITfl_Api_Presentation_Entities_JourneyPlanner_FareCaveat> getCaveats() const;
    void setCaveats(const QList<OAITfl_Api_Presentation_Entities_JourneyPlanner_FareCaveat> &caveats);
    bool is_caveats_Set() const;
    bool is_caveats_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_JourneyPlanner_Fare> getFares() const;
    void setFares(const QList<OAITfl_Api_Presentation_Entities_JourneyPlanner_Fare> &fares);
    bool is_fares_Set() const;
    bool is_fares_Valid() const;

    qint32 getTotalCost() const;
    void setTotalCost(const qint32 &total_cost);
    bool is_total_cost_Set() const;
    bool is_total_cost_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITfl_Api_Presentation_Entities_JourneyPlanner_FareCaveat> m_caveats;
    bool m_caveats_isSet;
    bool m_caveats_isValid;

    QList<OAITfl_Api_Presentation_Entities_JourneyPlanner_Fare> m_fares;
    bool m_fares_isSet;
    bool m_fares_isValid;

    qint32 m_total_cost;
    bool m_total_cost_isSet;
    bool m_total_cost_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare)

#endif // OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyFare_H
