/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_PredictionTiming.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_PredictionTiming_H
#define OAITfl_Api_Presentation_Entities_PredictionTiming_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITfl_Api_Presentation_Entities_PredictionTiming : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_PredictionTiming();
    OAITfl_Api_Presentation_Entities_PredictionTiming(QString json);
    ~OAITfl_Api_Presentation_Entities_PredictionTiming() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountdownServerAdjustment() const;
    void setCountdownServerAdjustment(const QString &countdown_server_adjustment);
    bool is_countdown_server_adjustment_Set() const;
    bool is_countdown_server_adjustment_Valid() const;

    QDateTime getInsert() const;
    void setInsert(const QDateTime &insert);
    bool is_insert_Set() const;
    bool is_insert_Valid() const;

    QDateTime getRead() const;
    void setRead(const QDateTime &read);
    bool is_read_Set() const;
    bool is_read_Valid() const;

    QDateTime getReceived() const;
    void setReceived(const QDateTime &received);
    bool is_received_Set() const;
    bool is_received_Valid() const;

    QDateTime getSent() const;
    void setSent(const QDateTime &sent);
    bool is_sent_Set() const;
    bool is_sent_Valid() const;

    QDateTime getSource() const;
    void setSource(const QDateTime &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_countdown_server_adjustment;
    bool m_countdown_server_adjustment_isSet;
    bool m_countdown_server_adjustment_isValid;

    QDateTime m_insert;
    bool m_insert_isSet;
    bool m_insert_isValid;

    QDateTime m_read;
    bool m_read_isSet;
    bool m_read_isValid;

    QDateTime m_received;
    bool m_received_isSet;
    bool m_received_isValid;

    QDateTime m_sent;
    bool m_sent_isSet;
    bool m_sent_isValid;

    QDateTime m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_PredictionTiming)

#endif // OAITfl_Api_Presentation_Entities_PredictionTiming_H
