/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_Prediction.h
 *
 * DTO to capture the prediction details
 */

#ifndef OAITfl_Api_Presentation_Entities_Prediction_H
#define OAITfl_Api_Presentation_Entities_Prediction_H

#include <QJsonObject>

#include "OAITfl_Api_Presentation_Entities_PredictionTiming.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITfl_Api_Presentation_Entities_PredictionTiming;

class OAITfl_Api_Presentation_Entities_Prediction : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_Prediction();
    OAITfl_Api_Presentation_Entities_Prediction(QString json);
    ~OAITfl_Api_Presentation_Entities_Prediction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBearing() const;
    void setBearing(const QString &bearing);
    bool is_bearing_Set() const;
    bool is_bearing_Valid() const;

    QString getCurrentLocation() const;
    void setCurrentLocation(const QString &current_location);
    bool is_current_location_Set() const;
    bool is_current_location_Valid() const;

    QString getDestinationName() const;
    void setDestinationName(const QString &destination_name);
    bool is_destination_name_Set() const;
    bool is_destination_name_Valid() const;

    QString getDestinationNaptanId() const;
    void setDestinationNaptanId(const QString &destination_naptan_id);
    bool is_destination_naptan_id_Set() const;
    bool is_destination_naptan_id_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QDateTime getExpectedArrival() const;
    void setExpectedArrival(const QDateTime &expected_arrival);
    bool is_expected_arrival_Set() const;
    bool is_expected_arrival_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLineId() const;
    void setLineId(const QString &line_id);
    bool is_line_id_Set() const;
    bool is_line_id_Valid() const;

    QString getLineName() const;
    void setLineName(const QString &line_name);
    bool is_line_name_Set() const;
    bool is_line_name_Valid() const;

    QString getModeName() const;
    void setModeName(const QString &mode_name);
    bool is_mode_name_Set() const;
    bool is_mode_name_Valid() const;

    QString getNaptanId() const;
    void setNaptanId(const QString &naptan_id);
    bool is_naptan_id_Set() const;
    bool is_naptan_id_Valid() const;

    qint32 getOperationType() const;
    void setOperationType(const qint32 &operation_type);
    bool is_operation_type_Set() const;
    bool is_operation_type_Valid() const;

    QString getPlatformName() const;
    void setPlatformName(const QString &platform_name);
    bool is_platform_name_Set() const;
    bool is_platform_name_Valid() const;

    QString getStationName() const;
    void setStationName(const QString &station_name);
    bool is_station_name_Set() const;
    bool is_station_name_Valid() const;

    QDateTime getTimeToLive() const;
    void setTimeToLive(const QDateTime &time_to_live);
    bool is_time_to_live_Set() const;
    bool is_time_to_live_Valid() const;

    qint32 getTimeToStation() const;
    void setTimeToStation(const qint32 &time_to_station);
    bool is_time_to_station_Set() const;
    bool is_time_to_station_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAITfl_Api_Presentation_Entities_PredictionTiming getTiming() const;
    void setTiming(const OAITfl_Api_Presentation_Entities_PredictionTiming &timing);
    bool is_timing_Set() const;
    bool is_timing_Valid() const;

    QString getTowards() const;
    void setTowards(const QString &towards);
    bool is_towards_Set() const;
    bool is_towards_Valid() const;

    QString getVehicleId() const;
    void setVehicleId(const QString &vehicle_id);
    bool is_vehicle_id_Set() const;
    bool is_vehicle_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bearing;
    bool m_bearing_isSet;
    bool m_bearing_isValid;

    QString m_current_location;
    bool m_current_location_isSet;
    bool m_current_location_isValid;

    QString m_destination_name;
    bool m_destination_name_isSet;
    bool m_destination_name_isValid;

    QString m_destination_naptan_id;
    bool m_destination_naptan_id_isSet;
    bool m_destination_naptan_id_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QDateTime m_expected_arrival;
    bool m_expected_arrival_isSet;
    bool m_expected_arrival_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_line_id;
    bool m_line_id_isSet;
    bool m_line_id_isValid;

    QString m_line_name;
    bool m_line_name_isSet;
    bool m_line_name_isValid;

    QString m_mode_name;
    bool m_mode_name_isSet;
    bool m_mode_name_isValid;

    QString m_naptan_id;
    bool m_naptan_id_isSet;
    bool m_naptan_id_isValid;

    qint32 m_operation_type;
    bool m_operation_type_isSet;
    bool m_operation_type_isValid;

    QString m_platform_name;
    bool m_platform_name_isSet;
    bool m_platform_name_isValid;

    QString m_station_name;
    bool m_station_name_isSet;
    bool m_station_name_isValid;

    QDateTime m_time_to_live;
    bool m_time_to_live_isSet;
    bool m_time_to_live_isValid;

    qint32 m_time_to_station;
    bool m_time_to_station_isSet;
    bool m_time_to_station_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAITfl_Api_Presentation_Entities_PredictionTiming m_timing;
    bool m_timing_isSet;
    bool m_timing_isValid;

    QString m_towards;
    bool m_towards_isSet;
    bool m_towards_isValid;

    QString m_vehicle_id;
    bool m_vehicle_id_isSet;
    bool m_vehicle_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_Prediction)

#endif // OAITfl_Api_Presentation_Entities_Prediction_H
