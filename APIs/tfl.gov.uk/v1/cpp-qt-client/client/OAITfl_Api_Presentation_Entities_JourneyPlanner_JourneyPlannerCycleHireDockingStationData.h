/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData_H
#define OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData();
    OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData(QString json);
    ~OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDestinationId() const;
    void setDestinationId(const QString &destination_id);
    bool is_destination_id_Set() const;
    bool is_destination_id_Valid() const;

    qint32 getDestinationNumberOfBikes() const;
    void setDestinationNumberOfBikes(const qint32 &destination_number_of_bikes);
    bool is_destination_number_of_bikes_Set() const;
    bool is_destination_number_of_bikes_Valid() const;

    qint32 getDestinationNumberOfEmptySlots() const;
    void setDestinationNumberOfEmptySlots(const qint32 &destination_number_of_empty_slots);
    bool is_destination_number_of_empty_slots_Set() const;
    bool is_destination_number_of_empty_slots_Valid() const;

    QString getOriginId() const;
    void setOriginId(const QString &origin_id);
    bool is_origin_id_Set() const;
    bool is_origin_id_Valid() const;

    qint32 getOriginNumberOfBikes() const;
    void setOriginNumberOfBikes(const qint32 &origin_number_of_bikes);
    bool is_origin_number_of_bikes_Set() const;
    bool is_origin_number_of_bikes_Valid() const;

    qint32 getOriginNumberOfEmptySlots() const;
    void setOriginNumberOfEmptySlots(const qint32 &origin_number_of_empty_slots);
    bool is_origin_number_of_empty_slots_Set() const;
    bool is_origin_number_of_empty_slots_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_destination_id;
    bool m_destination_id_isSet;
    bool m_destination_id_isValid;

    qint32 m_destination_number_of_bikes;
    bool m_destination_number_of_bikes_isSet;
    bool m_destination_number_of_bikes_isValid;

    qint32 m_destination_number_of_empty_slots;
    bool m_destination_number_of_empty_slots_isSet;
    bool m_destination_number_of_empty_slots_isValid;

    QString m_origin_id;
    bool m_origin_id_isSet;
    bool m_origin_id_isValid;

    qint32 m_origin_number_of_bikes;
    bool m_origin_number_of_bikes_isSet;
    bool m_origin_number_of_bikes_isValid;

    qint32 m_origin_number_of_empty_slots;
    bool m_origin_number_of_empty_slots_isSet;
    bool m_origin_number_of_empty_slots_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData)

#endif // OAITfl_Api_Presentation_Entities_JourneyPlanner_JourneyPlannerCycleHireDockingStationData_H
