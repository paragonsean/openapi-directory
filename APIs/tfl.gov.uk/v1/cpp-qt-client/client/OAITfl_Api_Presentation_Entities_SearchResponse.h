/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITfl_Api_Presentation_Entities_SearchResponse.h
 *
 * 
 */

#ifndef OAITfl_Api_Presentation_Entities_SearchResponse_H
#define OAITfl_Api_Presentation_Entities_SearchResponse_H

#include <QJsonObject>

#include "OAITfl_Api_Presentation_Entities_SearchMatch.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITfl_Api_Presentation_Entities_SearchMatch;

class OAITfl_Api_Presentation_Entities_SearchResponse : public OAIObject {
public:
    OAITfl_Api_Presentation_Entities_SearchResponse();
    OAITfl_Api_Presentation_Entities_SearchResponse(QString json);
    ~OAITfl_Api_Presentation_Entities_SearchResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFrom() const;
    void setFrom(const qint32 &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QList<OAITfl_Api_Presentation_Entities_SearchMatch> getMatches() const;
    void setMatches(const QList<OAITfl_Api_Presentation_Entities_SearchMatch> &matches);
    bool is_matches_Set() const;
    bool is_matches_Valid() const;

    double getMaxScore() const;
    void setMaxScore(const double &max_score);
    bool is_max_score_Set() const;
    bool is_max_score_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QList<OAITfl_Api_Presentation_Entities_SearchMatch> m_matches;
    bool m_matches_isSet;
    bool m_matches_isValid;

    double m_max_score;
    bool m_max_score_isSet;
    bool m_max_score_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITfl_Api_Presentation_Entities_SearchResponse)

#endif // OAITfl_Api_Presentation_Entities_SearchResponse_H
