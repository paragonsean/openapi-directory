# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_fares_ticket_time import TflApiPresentationEntitiesFaresTicketTime
from openapi_server.models.tfl_api_presentation_entities_fares_ticket_type import TflApiPresentationEntitiesFaresTicketType
from openapi_server.models.tfl_api_presentation_entities_message import TflApiPresentationEntitiesMessage
from openapi_server import util


class TflApiPresentationEntitiesFaresTicket(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost: str=None, description: str=None, display_order: int=None, messages: List[TflApiPresentationEntitiesMessage]=None, mode: str=None, passenger_type: str=None, ticket_time: TflApiPresentationEntitiesFaresTicketTime=None, ticket_type: TflApiPresentationEntitiesFaresTicketType=None):
        """TflApiPresentationEntitiesFaresTicket - a model defined in OpenAPI

        :param cost: The cost of this TflApiPresentationEntitiesFaresTicket.
        :param description: The description of this TflApiPresentationEntitiesFaresTicket.
        :param display_order: The display_order of this TflApiPresentationEntitiesFaresTicket.
        :param messages: The messages of this TflApiPresentationEntitiesFaresTicket.
        :param mode: The mode of this TflApiPresentationEntitiesFaresTicket.
        :param passenger_type: The passenger_type of this TflApiPresentationEntitiesFaresTicket.
        :param ticket_time: The ticket_time of this TflApiPresentationEntitiesFaresTicket.
        :param ticket_type: The ticket_type of this TflApiPresentationEntitiesFaresTicket.
        """
        self.openapi_types = {
            'cost': str,
            'description': str,
            'display_order': int,
            'messages': List[TflApiPresentationEntitiesMessage],
            'mode': str,
            'passenger_type': str,
            'ticket_time': TflApiPresentationEntitiesFaresTicketTime,
            'ticket_type': TflApiPresentationEntitiesFaresTicketType
        }

        self.attribute_map = {
            'cost': 'cost',
            'description': 'description',
            'display_order': 'displayOrder',
            'messages': 'messages',
            'mode': 'mode',
            'passenger_type': 'passengerType',
            'ticket_time': 'ticketTime',
            'ticket_type': 'ticketType'
        }

        self._cost = cost
        self._description = description
        self._display_order = display_order
        self._messages = messages
        self._mode = mode
        self._passenger_type = passenger_type
        self._ticket_time = ticket_time
        self._ticket_type = ticket_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesFaresTicket':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Fares.Ticket of this TflApiPresentationEntitiesFaresTicket.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost(self):
        """Gets the cost of this TflApiPresentationEntitiesFaresTicket.


        :return: The cost of this TflApiPresentationEntitiesFaresTicket.
        :rtype: str
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this TflApiPresentationEntitiesFaresTicket.


        :param cost: The cost of this TflApiPresentationEntitiesFaresTicket.
        :type cost: str
        """

        self._cost = cost

    @property
    def description(self):
        """Gets the description of this TflApiPresentationEntitiesFaresTicket.


        :return: The description of this TflApiPresentationEntitiesFaresTicket.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TflApiPresentationEntitiesFaresTicket.


        :param description: The description of this TflApiPresentationEntitiesFaresTicket.
        :type description: str
        """

        self._description = description

    @property
    def display_order(self):
        """Gets the display_order of this TflApiPresentationEntitiesFaresTicket.


        :return: The display_order of this TflApiPresentationEntitiesFaresTicket.
        :rtype: int
        """
        return self._display_order

    @display_order.setter
    def display_order(self, display_order):
        """Sets the display_order of this TflApiPresentationEntitiesFaresTicket.


        :param display_order: The display_order of this TflApiPresentationEntitiesFaresTicket.
        :type display_order: int
        """

        self._display_order = display_order

    @property
    def messages(self):
        """Gets the messages of this TflApiPresentationEntitiesFaresTicket.


        :return: The messages of this TflApiPresentationEntitiesFaresTicket.
        :rtype: List[TflApiPresentationEntitiesMessage]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this TflApiPresentationEntitiesFaresTicket.


        :param messages: The messages of this TflApiPresentationEntitiesFaresTicket.
        :type messages: List[TflApiPresentationEntitiesMessage]
        """

        self._messages = messages

    @property
    def mode(self):
        """Gets the mode of this TflApiPresentationEntitiesFaresTicket.


        :return: The mode of this TflApiPresentationEntitiesFaresTicket.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this TflApiPresentationEntitiesFaresTicket.


        :param mode: The mode of this TflApiPresentationEntitiesFaresTicket.
        :type mode: str
        """

        self._mode = mode

    @property
    def passenger_type(self):
        """Gets the passenger_type of this TflApiPresentationEntitiesFaresTicket.


        :return: The passenger_type of this TflApiPresentationEntitiesFaresTicket.
        :rtype: str
        """
        return self._passenger_type

    @passenger_type.setter
    def passenger_type(self, passenger_type):
        """Sets the passenger_type of this TflApiPresentationEntitiesFaresTicket.


        :param passenger_type: The passenger_type of this TflApiPresentationEntitiesFaresTicket.
        :type passenger_type: str
        """

        self._passenger_type = passenger_type

    @property
    def ticket_time(self):
        """Gets the ticket_time of this TflApiPresentationEntitiesFaresTicket.


        :return: The ticket_time of this TflApiPresentationEntitiesFaresTicket.
        :rtype: TflApiPresentationEntitiesFaresTicketTime
        """
        return self._ticket_time

    @ticket_time.setter
    def ticket_time(self, ticket_time):
        """Sets the ticket_time of this TflApiPresentationEntitiesFaresTicket.


        :param ticket_time: The ticket_time of this TflApiPresentationEntitiesFaresTicket.
        :type ticket_time: TflApiPresentationEntitiesFaresTicketTime
        """

        self._ticket_time = ticket_time

    @property
    def ticket_type(self):
        """Gets the ticket_type of this TflApiPresentationEntitiesFaresTicket.


        :return: The ticket_type of this TflApiPresentationEntitiesFaresTicket.
        :rtype: TflApiPresentationEntitiesFaresTicketType
        """
        return self._ticket_type

    @ticket_type.setter
    def ticket_type(self, ticket_type):
        """Sets the ticket_type of this TflApiPresentationEntitiesFaresTicket.


        :param ticket_type: The ticket_type of this TflApiPresentationEntitiesFaresTicket.
        :type ticket_type: TflApiPresentationEntitiesFaresTicketType
        """

        self._ticket_type = ticket_type
