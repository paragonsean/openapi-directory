# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesCoordinate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, easting: float=None, latitude: float=None, longitude: float=None, northing: float=None, x_coord: int=None, y_coord: int=None):
        """TflApiPresentationEntitiesCoordinate - a model defined in OpenAPI

        :param easting: The easting of this TflApiPresentationEntitiesCoordinate.
        :param latitude: The latitude of this TflApiPresentationEntitiesCoordinate.
        :param longitude: The longitude of this TflApiPresentationEntitiesCoordinate.
        :param northing: The northing of this TflApiPresentationEntitiesCoordinate.
        :param x_coord: The x_coord of this TflApiPresentationEntitiesCoordinate.
        :param y_coord: The y_coord of this TflApiPresentationEntitiesCoordinate.
        """
        self.openapi_types = {
            'easting': float,
            'latitude': float,
            'longitude': float,
            'northing': float,
            'x_coord': int,
            'y_coord': int
        }

        self.attribute_map = {
            'easting': 'easting',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'northing': 'northing',
            'x_coord': 'xCoord',
            'y_coord': 'yCoord'
        }

        self._easting = easting
        self._latitude = latitude
        self._longitude = longitude
        self._northing = northing
        self._x_coord = x_coord
        self._y_coord = y_coord

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesCoordinate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Coordinate of this TflApiPresentationEntitiesCoordinate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def easting(self):
        """Gets the easting of this TflApiPresentationEntitiesCoordinate.


        :return: The easting of this TflApiPresentationEntitiesCoordinate.
        :rtype: float
        """
        return self._easting

    @easting.setter
    def easting(self, easting):
        """Sets the easting of this TflApiPresentationEntitiesCoordinate.


        :param easting: The easting of this TflApiPresentationEntitiesCoordinate.
        :type easting: float
        """

        self._easting = easting

    @property
    def latitude(self):
        """Gets the latitude of this TflApiPresentationEntitiesCoordinate.


        :return: The latitude of this TflApiPresentationEntitiesCoordinate.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this TflApiPresentationEntitiesCoordinate.


        :param latitude: The latitude of this TflApiPresentationEntitiesCoordinate.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this TflApiPresentationEntitiesCoordinate.


        :return: The longitude of this TflApiPresentationEntitiesCoordinate.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this TflApiPresentationEntitiesCoordinate.


        :param longitude: The longitude of this TflApiPresentationEntitiesCoordinate.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def northing(self):
        """Gets the northing of this TflApiPresentationEntitiesCoordinate.


        :return: The northing of this TflApiPresentationEntitiesCoordinate.
        :rtype: float
        """
        return self._northing

    @northing.setter
    def northing(self, northing):
        """Sets the northing of this TflApiPresentationEntitiesCoordinate.


        :param northing: The northing of this TflApiPresentationEntitiesCoordinate.
        :type northing: float
        """

        self._northing = northing

    @property
    def x_coord(self):
        """Gets the x_coord of this TflApiPresentationEntitiesCoordinate.


        :return: The x_coord of this TflApiPresentationEntitiesCoordinate.
        :rtype: int
        """
        return self._x_coord

    @x_coord.setter
    def x_coord(self, x_coord):
        """Sets the x_coord of this TflApiPresentationEntitiesCoordinate.


        :param x_coord: The x_coord of this TflApiPresentationEntitiesCoordinate.
        :type x_coord: int
        """

        self._x_coord = x_coord

    @property
    def y_coord(self):
        """Gets the y_coord of this TflApiPresentationEntitiesCoordinate.


        :return: The y_coord of this TflApiPresentationEntitiesCoordinate.
        :rtype: int
        """
        return self._y_coord

    @y_coord.setter
    def y_coord(self, y_coord):
        """Sets the y_coord of this TflApiPresentationEntitiesCoordinate.


        :param y_coord: The y_coord of this TflApiPresentationEntitiesCoordinate.
        :type y_coord: int
        """

        self._y_coord = y_coord
