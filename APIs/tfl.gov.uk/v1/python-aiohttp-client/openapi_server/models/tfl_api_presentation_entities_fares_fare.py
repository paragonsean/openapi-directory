# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesFaresFare(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cap: float=None, cost: str=None, description: str=None, id: int=None, mode: str=None, passenger_type: str=None, ticket_time: str=None, ticket_type: str=None, valid_from: datetime=None, valid_until: datetime=None, zone: str=None):
        """TflApiPresentationEntitiesFaresFare - a model defined in OpenAPI

        :param cap: The cap of this TflApiPresentationEntitiesFaresFare.
        :param cost: The cost of this TflApiPresentationEntitiesFaresFare.
        :param description: The description of this TflApiPresentationEntitiesFaresFare.
        :param id: The id of this TflApiPresentationEntitiesFaresFare.
        :param mode: The mode of this TflApiPresentationEntitiesFaresFare.
        :param passenger_type: The passenger_type of this TflApiPresentationEntitiesFaresFare.
        :param ticket_time: The ticket_time of this TflApiPresentationEntitiesFaresFare.
        :param ticket_type: The ticket_type of this TflApiPresentationEntitiesFaresFare.
        :param valid_from: The valid_from of this TflApiPresentationEntitiesFaresFare.
        :param valid_until: The valid_until of this TflApiPresentationEntitiesFaresFare.
        :param zone: The zone of this TflApiPresentationEntitiesFaresFare.
        """
        self.openapi_types = {
            'cap': float,
            'cost': str,
            'description': str,
            'id': int,
            'mode': str,
            'passenger_type': str,
            'ticket_time': str,
            'ticket_type': str,
            'valid_from': datetime,
            'valid_until': datetime,
            'zone': str
        }

        self.attribute_map = {
            'cap': 'cap',
            'cost': 'cost',
            'description': 'description',
            'id': 'id',
            'mode': 'mode',
            'passenger_type': 'passengerType',
            'ticket_time': 'ticketTime',
            'ticket_type': 'ticketType',
            'valid_from': 'validFrom',
            'valid_until': 'validUntil',
            'zone': 'zone'
        }

        self._cap = cap
        self._cost = cost
        self._description = description
        self._id = id
        self._mode = mode
        self._passenger_type = passenger_type
        self._ticket_time = ticket_time
        self._ticket_type = ticket_type
        self._valid_from = valid_from
        self._valid_until = valid_until
        self._zone = zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesFaresFare':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Fares.Fare of this TflApiPresentationEntitiesFaresFare.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cap(self):
        """Gets the cap of this TflApiPresentationEntitiesFaresFare.


        :return: The cap of this TflApiPresentationEntitiesFaresFare.
        :rtype: float
        """
        return self._cap

    @cap.setter
    def cap(self, cap):
        """Sets the cap of this TflApiPresentationEntitiesFaresFare.


        :param cap: The cap of this TflApiPresentationEntitiesFaresFare.
        :type cap: float
        """

        self._cap = cap

    @property
    def cost(self):
        """Gets the cost of this TflApiPresentationEntitiesFaresFare.


        :return: The cost of this TflApiPresentationEntitiesFaresFare.
        :rtype: str
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this TflApiPresentationEntitiesFaresFare.


        :param cost: The cost of this TflApiPresentationEntitiesFaresFare.
        :type cost: str
        """

        self._cost = cost

    @property
    def description(self):
        """Gets the description of this TflApiPresentationEntitiesFaresFare.


        :return: The description of this TflApiPresentationEntitiesFaresFare.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TflApiPresentationEntitiesFaresFare.


        :param description: The description of this TflApiPresentationEntitiesFaresFare.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this TflApiPresentationEntitiesFaresFare.


        :return: The id of this TflApiPresentationEntitiesFaresFare.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TflApiPresentationEntitiesFaresFare.


        :param id: The id of this TflApiPresentationEntitiesFaresFare.
        :type id: int
        """

        self._id = id

    @property
    def mode(self):
        """Gets the mode of this TflApiPresentationEntitiesFaresFare.


        :return: The mode of this TflApiPresentationEntitiesFaresFare.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this TflApiPresentationEntitiesFaresFare.


        :param mode: The mode of this TflApiPresentationEntitiesFaresFare.
        :type mode: str
        """

        self._mode = mode

    @property
    def passenger_type(self):
        """Gets the passenger_type of this TflApiPresentationEntitiesFaresFare.


        :return: The passenger_type of this TflApiPresentationEntitiesFaresFare.
        :rtype: str
        """
        return self._passenger_type

    @passenger_type.setter
    def passenger_type(self, passenger_type):
        """Sets the passenger_type of this TflApiPresentationEntitiesFaresFare.


        :param passenger_type: The passenger_type of this TflApiPresentationEntitiesFaresFare.
        :type passenger_type: str
        """

        self._passenger_type = passenger_type

    @property
    def ticket_time(self):
        """Gets the ticket_time of this TflApiPresentationEntitiesFaresFare.


        :return: The ticket_time of this TflApiPresentationEntitiesFaresFare.
        :rtype: str
        """
        return self._ticket_time

    @ticket_time.setter
    def ticket_time(self, ticket_time):
        """Sets the ticket_time of this TflApiPresentationEntitiesFaresFare.


        :param ticket_time: The ticket_time of this TflApiPresentationEntitiesFaresFare.
        :type ticket_time: str
        """

        self._ticket_time = ticket_time

    @property
    def ticket_type(self):
        """Gets the ticket_type of this TflApiPresentationEntitiesFaresFare.


        :return: The ticket_type of this TflApiPresentationEntitiesFaresFare.
        :rtype: str
        """
        return self._ticket_type

    @ticket_type.setter
    def ticket_type(self, ticket_type):
        """Sets the ticket_type of this TflApiPresentationEntitiesFaresFare.


        :param ticket_type: The ticket_type of this TflApiPresentationEntitiesFaresFare.
        :type ticket_type: str
        """

        self._ticket_type = ticket_type

    @property
    def valid_from(self):
        """Gets the valid_from of this TflApiPresentationEntitiesFaresFare.


        :return: The valid_from of this TflApiPresentationEntitiesFaresFare.
        :rtype: datetime
        """
        return self._valid_from

    @valid_from.setter
    def valid_from(self, valid_from):
        """Sets the valid_from of this TflApiPresentationEntitiesFaresFare.


        :param valid_from: The valid_from of this TflApiPresentationEntitiesFaresFare.
        :type valid_from: datetime
        """

        self._valid_from = valid_from

    @property
    def valid_until(self):
        """Gets the valid_until of this TflApiPresentationEntitiesFaresFare.


        :return: The valid_until of this TflApiPresentationEntitiesFaresFare.
        :rtype: datetime
        """
        return self._valid_until

    @valid_until.setter
    def valid_until(self, valid_until):
        """Sets the valid_until of this TflApiPresentationEntitiesFaresFare.


        :param valid_until: The valid_until of this TflApiPresentationEntitiesFaresFare.
        :type valid_until: datetime
        """

        self._valid_until = valid_until

    @property
    def zone(self):
        """Gets the zone of this TflApiPresentationEntitiesFaresFare.


        :return: The zone of this TflApiPresentationEntitiesFaresFare.
        :rtype: str
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this TflApiPresentationEntitiesFaresFare.


        :param zone: The zone of this TflApiPresentationEntitiesFaresFare.
        :type zone: str
        """

        self._zone = zone
