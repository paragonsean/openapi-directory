# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesMatchedRoute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: str=None, destination_name: str=None, direction: str=None, name: str=None, origination_name: str=None, originator: str=None, route_code: str=None, service_type: str=None, valid_from: datetime=None, valid_to: datetime=None):
        """TflApiPresentationEntitiesMatchedRoute - a model defined in OpenAPI

        :param destination: The destination of this TflApiPresentationEntitiesMatchedRoute.
        :param destination_name: The destination_name of this TflApiPresentationEntitiesMatchedRoute.
        :param direction: The direction of this TflApiPresentationEntitiesMatchedRoute.
        :param name: The name of this TflApiPresentationEntitiesMatchedRoute.
        :param origination_name: The origination_name of this TflApiPresentationEntitiesMatchedRoute.
        :param originator: The originator of this TflApiPresentationEntitiesMatchedRoute.
        :param route_code: The route_code of this TflApiPresentationEntitiesMatchedRoute.
        :param service_type: The service_type of this TflApiPresentationEntitiesMatchedRoute.
        :param valid_from: The valid_from of this TflApiPresentationEntitiesMatchedRoute.
        :param valid_to: The valid_to of this TflApiPresentationEntitiesMatchedRoute.
        """
        self.openapi_types = {
            'destination': str,
            'destination_name': str,
            'direction': str,
            'name': str,
            'origination_name': str,
            'originator': str,
            'route_code': str,
            'service_type': str,
            'valid_from': datetime,
            'valid_to': datetime
        }

        self.attribute_map = {
            'destination': 'destination',
            'destination_name': 'destinationName',
            'direction': 'direction',
            'name': 'name',
            'origination_name': 'originationName',
            'originator': 'originator',
            'route_code': 'routeCode',
            'service_type': 'serviceType',
            'valid_from': 'validFrom',
            'valid_to': 'validTo'
        }

        self._destination = destination
        self._destination_name = destination_name
        self._direction = direction
        self._name = name
        self._origination_name = origination_name
        self._originator = originator
        self._route_code = route_code
        self._service_type = service_type
        self._valid_from = valid_from
        self._valid_to = valid_to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesMatchedRoute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.MatchedRoute of this TflApiPresentationEntitiesMatchedRoute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this TflApiPresentationEntitiesMatchedRoute.

        The Id (NaPTAN code) or the Destination StopPoint

        :return: The destination of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this TflApiPresentationEntitiesMatchedRoute.

        The Id (NaPTAN code) or the Destination StopPoint

        :param destination: The destination of this TflApiPresentationEntitiesMatchedRoute.
        :type destination: str
        """

        self._destination = destination

    @property
    def destination_name(self):
        """Gets the destination_name of this TflApiPresentationEntitiesMatchedRoute.

        The name of the Destination StopPoint

        :return: The destination_name of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: str
        """
        return self._destination_name

    @destination_name.setter
    def destination_name(self, destination_name):
        """Sets the destination_name of this TflApiPresentationEntitiesMatchedRoute.

        The name of the Destination StopPoint

        :param destination_name: The destination_name of this TflApiPresentationEntitiesMatchedRoute.
        :type destination_name: str
        """

        self._destination_name = destination_name

    @property
    def direction(self):
        """Gets the direction of this TflApiPresentationEntitiesMatchedRoute.

        Inbound or Outbound

        :return: The direction of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this TflApiPresentationEntitiesMatchedRoute.

        Inbound or Outbound

        :param direction: The direction of this TflApiPresentationEntitiesMatchedRoute.
        :type direction: str
        """

        self._direction = direction

    @property
    def name(self):
        """Gets the name of this TflApiPresentationEntitiesMatchedRoute.

        Name such as \"72\"

        :return: The name of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TflApiPresentationEntitiesMatchedRoute.

        Name such as \"72\"

        :param name: The name of this TflApiPresentationEntitiesMatchedRoute.
        :type name: str
        """

        self._name = name

    @property
    def origination_name(self):
        """Gets the origination_name of this TflApiPresentationEntitiesMatchedRoute.

        The name of the Origin StopPoint

        :return: The origination_name of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: str
        """
        return self._origination_name

    @origination_name.setter
    def origination_name(self, origination_name):
        """Sets the origination_name of this TflApiPresentationEntitiesMatchedRoute.

        The name of the Origin StopPoint

        :param origination_name: The origination_name of this TflApiPresentationEntitiesMatchedRoute.
        :type origination_name: str
        """

        self._origination_name = origination_name

    @property
    def originator(self):
        """Gets the originator of this TflApiPresentationEntitiesMatchedRoute.

        The Id (NaPTAN code) of the Origin StopPoint

        :return: The originator of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: str
        """
        return self._originator

    @originator.setter
    def originator(self, originator):
        """Sets the originator of this TflApiPresentationEntitiesMatchedRoute.

        The Id (NaPTAN code) of the Origin StopPoint

        :param originator: The originator of this TflApiPresentationEntitiesMatchedRoute.
        :type originator: str
        """

        self._originator = originator

    @property
    def route_code(self):
        """Gets the route_code of this TflApiPresentationEntitiesMatchedRoute.

        The route code

        :return: The route_code of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: str
        """
        return self._route_code

    @route_code.setter
    def route_code(self, route_code):
        """Sets the route_code of this TflApiPresentationEntitiesMatchedRoute.

        The route code

        :param route_code: The route_code of this TflApiPresentationEntitiesMatchedRoute.
        :type route_code: str
        """

        self._route_code = route_code

    @property
    def service_type(self):
        """Gets the service_type of this TflApiPresentationEntitiesMatchedRoute.

        Regular or Night

        :return: The service_type of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: str
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type):
        """Sets the service_type of this TflApiPresentationEntitiesMatchedRoute.

        Regular or Night

        :param service_type: The service_type of this TflApiPresentationEntitiesMatchedRoute.
        :type service_type: str
        """

        self._service_type = service_type

    @property
    def valid_from(self):
        """Gets the valid_from of this TflApiPresentationEntitiesMatchedRoute.

        The DateTime that the Service containing this Route is valid from.

        :return: The valid_from of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: datetime
        """
        return self._valid_from

    @valid_from.setter
    def valid_from(self, valid_from):
        """Sets the valid_from of this TflApiPresentationEntitiesMatchedRoute.

        The DateTime that the Service containing this Route is valid from.

        :param valid_from: The valid_from of this TflApiPresentationEntitiesMatchedRoute.
        :type valid_from: datetime
        """

        self._valid_from = valid_from

    @property
    def valid_to(self):
        """Gets the valid_to of this TflApiPresentationEntitiesMatchedRoute.

        The DateTime that the Service containing this Route is valid until.

        :return: The valid_to of this TflApiPresentationEntitiesMatchedRoute.
        :rtype: datetime
        """
        return self._valid_to

    @valid_to.setter
    def valid_to(self, valid_to):
        """Sets the valid_to of this TflApiPresentationEntitiesMatchedRoute.

        The DateTime that the Service containing this Route is valid until.

        :param valid_to: The valid_to of this TflApiPresentationEntitiesMatchedRoute.
        :type valid_to: datetime
        """

        self._valid_to = valid_to
