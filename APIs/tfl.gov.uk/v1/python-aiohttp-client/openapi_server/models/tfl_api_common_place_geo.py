# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiCommonPlaceGeo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lat: float=None, lon: float=None, ne_lat: float=None, ne_lon: float=None, sw_lat: float=None, sw_lon: float=None):
        """TflApiCommonPlaceGeo - a model defined in OpenAPI

        :param lat: The lat of this TflApiCommonPlaceGeo.
        :param lon: The lon of this TflApiCommonPlaceGeo.
        :param ne_lat: The ne_lat of this TflApiCommonPlaceGeo.
        :param ne_lon: The ne_lon of this TflApiCommonPlaceGeo.
        :param sw_lat: The sw_lat of this TflApiCommonPlaceGeo.
        :param sw_lon: The sw_lon of this TflApiCommonPlaceGeo.
        """
        self.openapi_types = {
            'lat': float,
            'lon': float,
            'ne_lat': float,
            'ne_lon': float,
            'sw_lat': float,
            'sw_lon': float
        }

        self.attribute_map = {
            'lat': 'lat',
            'lon': 'lon',
            'ne_lat': 'neLat',
            'ne_lon': 'neLon',
            'sw_lat': 'swLat',
            'sw_lon': 'swLon'
        }

        self._lat = lat
        self._lon = lon
        self._ne_lat = ne_lat
        self._ne_lon = ne_lon
        self._sw_lat = sw_lat
        self._sw_lon = sw_lon

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiCommonPlaceGeo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Common.PlaceGeo of this TflApiCommonPlaceGeo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lat(self):
        """Gets the lat of this TflApiCommonPlaceGeo.


        :return: The lat of this TflApiCommonPlaceGeo.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this TflApiCommonPlaceGeo.


        :param lat: The lat of this TflApiCommonPlaceGeo.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self):
        """Gets the lon of this TflApiCommonPlaceGeo.


        :return: The lon of this TflApiCommonPlaceGeo.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """Sets the lon of this TflApiCommonPlaceGeo.


        :param lon: The lon of this TflApiCommonPlaceGeo.
        :type lon: float
        """

        self._lon = lon

    @property
    def ne_lat(self):
        """Gets the ne_lat of this TflApiCommonPlaceGeo.


        :return: The ne_lat of this TflApiCommonPlaceGeo.
        :rtype: float
        """
        return self._ne_lat

    @ne_lat.setter
    def ne_lat(self, ne_lat):
        """Sets the ne_lat of this TflApiCommonPlaceGeo.


        :param ne_lat: The ne_lat of this TflApiCommonPlaceGeo.
        :type ne_lat: float
        """

        self._ne_lat = ne_lat

    @property
    def ne_lon(self):
        """Gets the ne_lon of this TflApiCommonPlaceGeo.


        :return: The ne_lon of this TflApiCommonPlaceGeo.
        :rtype: float
        """
        return self._ne_lon

    @ne_lon.setter
    def ne_lon(self, ne_lon):
        """Sets the ne_lon of this TflApiCommonPlaceGeo.


        :param ne_lon: The ne_lon of this TflApiCommonPlaceGeo.
        :type ne_lon: float
        """

        self._ne_lon = ne_lon

    @property
    def sw_lat(self):
        """Gets the sw_lat of this TflApiCommonPlaceGeo.


        :return: The sw_lat of this TflApiCommonPlaceGeo.
        :rtype: float
        """
        return self._sw_lat

    @sw_lat.setter
    def sw_lat(self, sw_lat):
        """Sets the sw_lat of this TflApiCommonPlaceGeo.


        :param sw_lat: The sw_lat of this TflApiCommonPlaceGeo.
        :type sw_lat: float
        """

        self._sw_lat = sw_lat

    @property
    def sw_lon(self):
        """Gets the sw_lon of this TflApiCommonPlaceGeo.


        :return: The sw_lon of this TflApiCommonPlaceGeo.
        :rtype: float
        """
        return self._sw_lon

    @sw_lon.setter
    def sw_lon(self, sw_lon):
        """Sets the sw_lon of this TflApiCommonPlaceGeo.


        :param sw_lon: The sw_lon of this TflApiCommonPlaceGeo.
        :type sw_lon: float
        """

        self._sw_lon = sw_lon
