# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesPassengerFlow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_slice: str=None, value: int=None):
        """TflApiPresentationEntitiesPassengerFlow - a model defined in OpenAPI

        :param time_slice: The time_slice of this TflApiPresentationEntitiesPassengerFlow.
        :param value: The value of this TflApiPresentationEntitiesPassengerFlow.
        """
        self.openapi_types = {
            'time_slice': str,
            'value': int
        }

        self.attribute_map = {
            'time_slice': 'timeSlice',
            'value': 'value'
        }

        self._time_slice = time_slice
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesPassengerFlow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.PassengerFlow of this TflApiPresentationEntitiesPassengerFlow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_slice(self):
        """Gets the time_slice of this TflApiPresentationEntitiesPassengerFlow.

        Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc.

        :return: The time_slice of this TflApiPresentationEntitiesPassengerFlow.
        :rtype: str
        """
        return self._time_slice

    @time_slice.setter
    def time_slice(self, time_slice):
        """Sets the time_slice of this TflApiPresentationEntitiesPassengerFlow.

        Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc.

        :param time_slice: The time_slice of this TflApiPresentationEntitiesPassengerFlow.
        :type time_slice: str
        """

        self._time_slice = time_slice

    @property
    def value(self):
        """Gets the value of this TflApiPresentationEntitiesPassengerFlow.

        Count of passenger flow towards a platform

        :return: The value of this TflApiPresentationEntitiesPassengerFlow.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this TflApiPresentationEntitiesPassengerFlow.

        Count of passenger flow towards a platform

        :param value: The value of this TflApiPresentationEntitiesPassengerFlow.
        :type value: int
        """

        self._value = value
