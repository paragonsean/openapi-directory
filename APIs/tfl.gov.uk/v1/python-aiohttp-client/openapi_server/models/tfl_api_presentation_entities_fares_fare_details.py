# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_fares_ticket import TflApiPresentationEntitiesFaresTicket
from openapi_server.models.tfl_api_presentation_entities_message import TflApiPresentationEntitiesMessage
from openapi_server import util


class TflApiPresentationEntitiesFaresFareDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounds_id: int=None, contactless_payg_only_fare: bool=None, display_name: str=None, display_order: int=None, end_date: datetime=None, _from: str=None, from_station: str=None, is_tour: bool=None, messages: List[TflApiPresentationEntitiesMessage]=None, mode: str=None, operator: str=None, passenger_type: str=None, route_code: str=None, route_description: str=None, special_fare: bool=None, start_date: datetime=None, through_fare: bool=None, tickets_available: List[TflApiPresentationEntitiesFaresTicket]=None, to: str=None, to_station: str=None, validator_information: str=None, via: str=None):
        """TflApiPresentationEntitiesFaresFareDetails - a model defined in OpenAPI

        :param bounds_id: The bounds_id of this TflApiPresentationEntitiesFaresFareDetails.
        :param contactless_payg_only_fare: The contactless_payg_only_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :param display_name: The display_name of this TflApiPresentationEntitiesFaresFareDetails.
        :param display_order: The display_order of this TflApiPresentationEntitiesFaresFareDetails.
        :param end_date: The end_date of this TflApiPresentationEntitiesFaresFareDetails.
        :param _from: The _from of this TflApiPresentationEntitiesFaresFareDetails.
        :param from_station: The from_station of this TflApiPresentationEntitiesFaresFareDetails.
        :param is_tour: The is_tour of this TflApiPresentationEntitiesFaresFareDetails.
        :param messages: The messages of this TflApiPresentationEntitiesFaresFareDetails.
        :param mode: The mode of this TflApiPresentationEntitiesFaresFareDetails.
        :param operator: The operator of this TflApiPresentationEntitiesFaresFareDetails.
        :param passenger_type: The passenger_type of this TflApiPresentationEntitiesFaresFareDetails.
        :param route_code: The route_code of this TflApiPresentationEntitiesFaresFareDetails.
        :param route_description: The route_description of this TflApiPresentationEntitiesFaresFareDetails.
        :param special_fare: The special_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :param start_date: The start_date of this TflApiPresentationEntitiesFaresFareDetails.
        :param through_fare: The through_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :param tickets_available: The tickets_available of this TflApiPresentationEntitiesFaresFareDetails.
        :param to: The to of this TflApiPresentationEntitiesFaresFareDetails.
        :param to_station: The to_station of this TflApiPresentationEntitiesFaresFareDetails.
        :param validator_information: The validator_information of this TflApiPresentationEntitiesFaresFareDetails.
        :param via: The via of this TflApiPresentationEntitiesFaresFareDetails.
        """
        self.openapi_types = {
            'bounds_id': int,
            'contactless_payg_only_fare': bool,
            'display_name': str,
            'display_order': int,
            'end_date': datetime,
            '_from': str,
            'from_station': str,
            'is_tour': bool,
            'messages': List[TflApiPresentationEntitiesMessage],
            'mode': str,
            'operator': str,
            'passenger_type': str,
            'route_code': str,
            'route_description': str,
            'special_fare': bool,
            'start_date': datetime,
            'through_fare': bool,
            'tickets_available': List[TflApiPresentationEntitiesFaresTicket],
            'to': str,
            'to_station': str,
            'validator_information': str,
            'via': str
        }

        self.attribute_map = {
            'bounds_id': 'boundsId',
            'contactless_payg_only_fare': 'contactlessPAYGOnlyFare',
            'display_name': 'displayName',
            'display_order': 'displayOrder',
            'end_date': 'endDate',
            '_from': 'from',
            'from_station': 'fromStation',
            'is_tour': 'isTour',
            'messages': 'messages',
            'mode': 'mode',
            'operator': 'operator',
            'passenger_type': 'passengerType',
            'route_code': 'routeCode',
            'route_description': 'routeDescription',
            'special_fare': 'specialFare',
            'start_date': 'startDate',
            'through_fare': 'throughFare',
            'tickets_available': 'ticketsAvailable',
            'to': 'to',
            'to_station': 'toStation',
            'validator_information': 'validatorInformation',
            'via': 'via'
        }

        self._bounds_id = bounds_id
        self._contactless_payg_only_fare = contactless_payg_only_fare
        self._display_name = display_name
        self._display_order = display_order
        self._end_date = end_date
        self.__from = _from
        self._from_station = from_station
        self._is_tour = is_tour
        self._messages = messages
        self._mode = mode
        self._operator = operator
        self._passenger_type = passenger_type
        self._route_code = route_code
        self._route_description = route_description
        self._special_fare = special_fare
        self._start_date = start_date
        self._through_fare = through_fare
        self._tickets_available = tickets_available
        self._to = to
        self._to_station = to_station
        self._validator_information = validator_information
        self._via = via

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesFaresFareDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Fares.FareDetails of this TflApiPresentationEntitiesFaresFareDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounds_id(self):
        """Gets the bounds_id of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The bounds_id of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: int
        """
        return self._bounds_id

    @bounds_id.setter
    def bounds_id(self, bounds_id):
        """Sets the bounds_id of this TflApiPresentationEntitiesFaresFareDetails.


        :param bounds_id: The bounds_id of this TflApiPresentationEntitiesFaresFareDetails.
        :type bounds_id: int
        """

        self._bounds_id = bounds_id

    @property
    def contactless_payg_only_fare(self):
        """Gets the contactless_payg_only_fare of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The contactless_payg_only_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: bool
        """
        return self._contactless_payg_only_fare

    @contactless_payg_only_fare.setter
    def contactless_payg_only_fare(self, contactless_payg_only_fare):
        """Sets the contactless_payg_only_fare of this TflApiPresentationEntitiesFaresFareDetails.


        :param contactless_payg_only_fare: The contactless_payg_only_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :type contactless_payg_only_fare: bool
        """

        self._contactless_payg_only_fare = contactless_payg_only_fare

    @property
    def display_name(self):
        """Gets the display_name of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The display_name of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this TflApiPresentationEntitiesFaresFareDetails.


        :param display_name: The display_name of this TflApiPresentationEntitiesFaresFareDetails.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def display_order(self):
        """Gets the display_order of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The display_order of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: int
        """
        return self._display_order

    @display_order.setter
    def display_order(self, display_order):
        """Sets the display_order of this TflApiPresentationEntitiesFaresFareDetails.


        :param display_order: The display_order of this TflApiPresentationEntitiesFaresFareDetails.
        :type display_order: int
        """

        self._display_order = display_order

    @property
    def end_date(self):
        """Gets the end_date of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The end_date of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this TflApiPresentationEntitiesFaresFareDetails.


        :param end_date: The end_date of this TflApiPresentationEntitiesFaresFareDetails.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def _from(self):
        """Gets the _from of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The _from of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this TflApiPresentationEntitiesFaresFareDetails.


        :param _from: The _from of this TflApiPresentationEntitiesFaresFareDetails.
        :type _from: str
        """

        self.__from = _from

    @property
    def from_station(self):
        """Gets the from_station of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The from_station of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._from_station

    @from_station.setter
    def from_station(self, from_station):
        """Sets the from_station of this TflApiPresentationEntitiesFaresFareDetails.


        :param from_station: The from_station of this TflApiPresentationEntitiesFaresFareDetails.
        :type from_station: str
        """

        self._from_station = from_station

    @property
    def is_tour(self):
        """Gets the is_tour of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The is_tour of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: bool
        """
        return self._is_tour

    @is_tour.setter
    def is_tour(self, is_tour):
        """Sets the is_tour of this TflApiPresentationEntitiesFaresFareDetails.


        :param is_tour: The is_tour of this TflApiPresentationEntitiesFaresFareDetails.
        :type is_tour: bool
        """

        self._is_tour = is_tour

    @property
    def messages(self):
        """Gets the messages of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The messages of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: List[TflApiPresentationEntitiesMessage]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this TflApiPresentationEntitiesFaresFareDetails.


        :param messages: The messages of this TflApiPresentationEntitiesFaresFareDetails.
        :type messages: List[TflApiPresentationEntitiesMessage]
        """

        self._messages = messages

    @property
    def mode(self):
        """Gets the mode of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The mode of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this TflApiPresentationEntitiesFaresFareDetails.


        :param mode: The mode of this TflApiPresentationEntitiesFaresFareDetails.
        :type mode: str
        """

        self._mode = mode

    @property
    def operator(self):
        """Gets the operator of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The operator of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this TflApiPresentationEntitiesFaresFareDetails.


        :param operator: The operator of this TflApiPresentationEntitiesFaresFareDetails.
        :type operator: str
        """

        self._operator = operator

    @property
    def passenger_type(self):
        """Gets the passenger_type of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The passenger_type of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._passenger_type

    @passenger_type.setter
    def passenger_type(self, passenger_type):
        """Sets the passenger_type of this TflApiPresentationEntitiesFaresFareDetails.


        :param passenger_type: The passenger_type of this TflApiPresentationEntitiesFaresFareDetails.
        :type passenger_type: str
        """

        self._passenger_type = passenger_type

    @property
    def route_code(self):
        """Gets the route_code of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The route_code of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._route_code

    @route_code.setter
    def route_code(self, route_code):
        """Sets the route_code of this TflApiPresentationEntitiesFaresFareDetails.


        :param route_code: The route_code of this TflApiPresentationEntitiesFaresFareDetails.
        :type route_code: str
        """

        self._route_code = route_code

    @property
    def route_description(self):
        """Gets the route_description of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The route_description of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._route_description

    @route_description.setter
    def route_description(self, route_description):
        """Sets the route_description of this TflApiPresentationEntitiesFaresFareDetails.


        :param route_description: The route_description of this TflApiPresentationEntitiesFaresFareDetails.
        :type route_description: str
        """

        self._route_description = route_description

    @property
    def special_fare(self):
        """Gets the special_fare of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The special_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: bool
        """
        return self._special_fare

    @special_fare.setter
    def special_fare(self, special_fare):
        """Sets the special_fare of this TflApiPresentationEntitiesFaresFareDetails.


        :param special_fare: The special_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :type special_fare: bool
        """

        self._special_fare = special_fare

    @property
    def start_date(self):
        """Gets the start_date of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The start_date of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this TflApiPresentationEntitiesFaresFareDetails.


        :param start_date: The start_date of this TflApiPresentationEntitiesFaresFareDetails.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def through_fare(self):
        """Gets the through_fare of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The through_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: bool
        """
        return self._through_fare

    @through_fare.setter
    def through_fare(self, through_fare):
        """Sets the through_fare of this TflApiPresentationEntitiesFaresFareDetails.


        :param through_fare: The through_fare of this TflApiPresentationEntitiesFaresFareDetails.
        :type through_fare: bool
        """

        self._through_fare = through_fare

    @property
    def tickets_available(self):
        """Gets the tickets_available of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The tickets_available of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: List[TflApiPresentationEntitiesFaresTicket]
        """
        return self._tickets_available

    @tickets_available.setter
    def tickets_available(self, tickets_available):
        """Sets the tickets_available of this TflApiPresentationEntitiesFaresFareDetails.


        :param tickets_available: The tickets_available of this TflApiPresentationEntitiesFaresFareDetails.
        :type tickets_available: List[TflApiPresentationEntitiesFaresTicket]
        """

        self._tickets_available = tickets_available

    @property
    def to(self):
        """Gets the to of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The to of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this TflApiPresentationEntitiesFaresFareDetails.


        :param to: The to of this TflApiPresentationEntitiesFaresFareDetails.
        :type to: str
        """

        self._to = to

    @property
    def to_station(self):
        """Gets the to_station of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The to_station of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._to_station

    @to_station.setter
    def to_station(self, to_station):
        """Sets the to_station of this TflApiPresentationEntitiesFaresFareDetails.


        :param to_station: The to_station of this TflApiPresentationEntitiesFaresFareDetails.
        :type to_station: str
        """

        self._to_station = to_station

    @property
    def validator_information(self):
        """Gets the validator_information of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The validator_information of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._validator_information

    @validator_information.setter
    def validator_information(self, validator_information):
        """Sets the validator_information of this TflApiPresentationEntitiesFaresFareDetails.


        :param validator_information: The validator_information of this TflApiPresentationEntitiesFaresFareDetails.
        :type validator_information: str
        """

        self._validator_information = validator_information

    @property
    def via(self):
        """Gets the via of this TflApiPresentationEntitiesFaresFareDetails.


        :return: The via of this TflApiPresentationEntitiesFaresFareDetails.
        :rtype: str
        """
        return self._via

    @via.setter
    def via(self, via):
        """Sets the via of this TflApiPresentationEntitiesFaresFareDetails.


        :param via: The via of this TflApiPresentationEntitiesFaresFareDetails.
        :type via: str
        """

        self._via = via
