# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesAccidentStatsCasualty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, age: int=None, age_band: str=None, _class: str=None, mode: str=None, severity: str=None):
        """TflApiPresentationEntitiesAccidentStatsCasualty - a model defined in OpenAPI

        :param age: The age of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :param age_band: The age_band of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :param _class: The _class of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :param mode: The mode of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :param severity: The severity of this TflApiPresentationEntitiesAccidentStatsCasualty.
        """
        self.openapi_types = {
            'age': int,
            'age_band': str,
            '_class': str,
            'mode': str,
            'severity': str
        }

        self.attribute_map = {
            'age': 'age',
            'age_band': 'ageBand',
            '_class': 'class',
            'mode': 'mode',
            'severity': 'severity'
        }

        self._age = age
        self._age_band = age_band
        self.__class = _class
        self._mode = mode
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesAccidentStatsCasualty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.AccidentStats.Casualty of this TflApiPresentationEntitiesAccidentStatsCasualty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age(self):
        """Gets the age of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :return: The age of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age):
        """Sets the age of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :param age: The age of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :type age: int
        """

        self._age = age

    @property
    def age_band(self):
        """Gets the age_band of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :return: The age_band of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :rtype: str
        """
        return self._age_band

    @age_band.setter
    def age_band(self, age_band):
        """Sets the age_band of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :param age_band: The age_band of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :type age_band: str
        """

        self._age_band = age_band

    @property
    def _class(self):
        """Gets the _class of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :return: The _class of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :param _class: The _class of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :type _class: str
        """

        self.__class = _class

    @property
    def mode(self):
        """Gets the mode of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :return: The mode of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :param mode: The mode of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :type mode: str
        """

        self._mode = mode

    @property
    def severity(self):
        """Gets the severity of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :return: The severity of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this TflApiPresentationEntitiesAccidentStatsCasualty.


        :param severity: The severity of this TflApiPresentationEntitiesAccidentStatsCasualty.
        :type severity: str
        """

        self._severity = severity
