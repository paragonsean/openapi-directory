# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesActiveServiceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mode: str=None, service_type: str=None):
        """TflApiPresentationEntitiesActiveServiceType - a model defined in OpenAPI

        :param mode: The mode of this TflApiPresentationEntitiesActiveServiceType.
        :param service_type: The service_type of this TflApiPresentationEntitiesActiveServiceType.
        """
        self.openapi_types = {
            'mode': str,
            'service_type': str
        }

        self.attribute_map = {
            'mode': 'mode',
            'service_type': 'serviceType'
        }

        self._mode = mode
        self._service_type = service_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesActiveServiceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.ActiveServiceType of this TflApiPresentationEntitiesActiveServiceType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mode(self):
        """Gets the mode of this TflApiPresentationEntitiesActiveServiceType.


        :return: The mode of this TflApiPresentationEntitiesActiveServiceType.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this TflApiPresentationEntitiesActiveServiceType.


        :param mode: The mode of this TflApiPresentationEntitiesActiveServiceType.
        :type mode: str
        """

        self._mode = mode

    @property
    def service_type(self):
        """Gets the service_type of this TflApiPresentationEntitiesActiveServiceType.


        :return: The service_type of this TflApiPresentationEntitiesActiveServiceType.
        :rtype: str
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type):
        """Sets the service_type of this TflApiPresentationEntitiesActiveServiceType.


        :param service_type: The service_type of this TflApiPresentationEntitiesActiveServiceType.
        :type service_type: str
        """

        self._service_type = service_type
