# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_path_attribute import TflApiPresentationEntitiesPathAttribute
from openapi_server import util


class TflApiPresentationEntitiesInstructionStep(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cumulative_distance: int=None, cumulative_travel_time: int=None, description: str=None, description_heading: str=None, distance: int=None, latitude: float=None, longitude: float=None, path_attribute: TflApiPresentationEntitiesPathAttribute=None, sky_direction: int=None, sky_direction_description: str=None, street_name: str=None, track_type: str=None, turn_direction: str=None):
        """TflApiPresentationEntitiesInstructionStep - a model defined in OpenAPI

        :param cumulative_distance: The cumulative_distance of this TflApiPresentationEntitiesInstructionStep.
        :param cumulative_travel_time: The cumulative_travel_time of this TflApiPresentationEntitiesInstructionStep.
        :param description: The description of this TflApiPresentationEntitiesInstructionStep.
        :param description_heading: The description_heading of this TflApiPresentationEntitiesInstructionStep.
        :param distance: The distance of this TflApiPresentationEntitiesInstructionStep.
        :param latitude: The latitude of this TflApiPresentationEntitiesInstructionStep.
        :param longitude: The longitude of this TflApiPresentationEntitiesInstructionStep.
        :param path_attribute: The path_attribute of this TflApiPresentationEntitiesInstructionStep.
        :param sky_direction: The sky_direction of this TflApiPresentationEntitiesInstructionStep.
        :param sky_direction_description: The sky_direction_description of this TflApiPresentationEntitiesInstructionStep.
        :param street_name: The street_name of this TflApiPresentationEntitiesInstructionStep.
        :param track_type: The track_type of this TflApiPresentationEntitiesInstructionStep.
        :param turn_direction: The turn_direction of this TflApiPresentationEntitiesInstructionStep.
        """
        self.openapi_types = {
            'cumulative_distance': int,
            'cumulative_travel_time': int,
            'description': str,
            'description_heading': str,
            'distance': int,
            'latitude': float,
            'longitude': float,
            'path_attribute': TflApiPresentationEntitiesPathAttribute,
            'sky_direction': int,
            'sky_direction_description': str,
            'street_name': str,
            'track_type': str,
            'turn_direction': str
        }

        self.attribute_map = {
            'cumulative_distance': 'cumulativeDistance',
            'cumulative_travel_time': 'cumulativeTravelTime',
            'description': 'description',
            'description_heading': 'descriptionHeading',
            'distance': 'distance',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'path_attribute': 'pathAttribute',
            'sky_direction': 'skyDirection',
            'sky_direction_description': 'skyDirectionDescription',
            'street_name': 'streetName',
            'track_type': 'trackType',
            'turn_direction': 'turnDirection'
        }

        self._cumulative_distance = cumulative_distance
        self._cumulative_travel_time = cumulative_travel_time
        self._description = description
        self._description_heading = description_heading
        self._distance = distance
        self._latitude = latitude
        self._longitude = longitude
        self._path_attribute = path_attribute
        self._sky_direction = sky_direction
        self._sky_direction_description = sky_direction_description
        self._street_name = street_name
        self._track_type = track_type
        self._turn_direction = turn_direction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesInstructionStep':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.InstructionStep of this TflApiPresentationEntitiesInstructionStep.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cumulative_distance(self):
        """Gets the cumulative_distance of this TflApiPresentationEntitiesInstructionStep.


        :return: The cumulative_distance of this TflApiPresentationEntitiesInstructionStep.
        :rtype: int
        """
        return self._cumulative_distance

    @cumulative_distance.setter
    def cumulative_distance(self, cumulative_distance):
        """Sets the cumulative_distance of this TflApiPresentationEntitiesInstructionStep.


        :param cumulative_distance: The cumulative_distance of this TflApiPresentationEntitiesInstructionStep.
        :type cumulative_distance: int
        """

        self._cumulative_distance = cumulative_distance

    @property
    def cumulative_travel_time(self):
        """Gets the cumulative_travel_time of this TflApiPresentationEntitiesInstructionStep.


        :return: The cumulative_travel_time of this TflApiPresentationEntitiesInstructionStep.
        :rtype: int
        """
        return self._cumulative_travel_time

    @cumulative_travel_time.setter
    def cumulative_travel_time(self, cumulative_travel_time):
        """Sets the cumulative_travel_time of this TflApiPresentationEntitiesInstructionStep.


        :param cumulative_travel_time: The cumulative_travel_time of this TflApiPresentationEntitiesInstructionStep.
        :type cumulative_travel_time: int
        """

        self._cumulative_travel_time = cumulative_travel_time

    @property
    def description(self):
        """Gets the description of this TflApiPresentationEntitiesInstructionStep.


        :return: The description of this TflApiPresentationEntitiesInstructionStep.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TflApiPresentationEntitiesInstructionStep.


        :param description: The description of this TflApiPresentationEntitiesInstructionStep.
        :type description: str
        """

        self._description = description

    @property
    def description_heading(self):
        """Gets the description_heading of this TflApiPresentationEntitiesInstructionStep.


        :return: The description_heading of this TflApiPresentationEntitiesInstructionStep.
        :rtype: str
        """
        return self._description_heading

    @description_heading.setter
    def description_heading(self, description_heading):
        """Sets the description_heading of this TflApiPresentationEntitiesInstructionStep.


        :param description_heading: The description_heading of this TflApiPresentationEntitiesInstructionStep.
        :type description_heading: str
        """

        self._description_heading = description_heading

    @property
    def distance(self):
        """Gets the distance of this TflApiPresentationEntitiesInstructionStep.


        :return: The distance of this TflApiPresentationEntitiesInstructionStep.
        :rtype: int
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this TflApiPresentationEntitiesInstructionStep.


        :param distance: The distance of this TflApiPresentationEntitiesInstructionStep.
        :type distance: int
        """

        self._distance = distance

    @property
    def latitude(self):
        """Gets the latitude of this TflApiPresentationEntitiesInstructionStep.


        :return: The latitude of this TflApiPresentationEntitiesInstructionStep.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this TflApiPresentationEntitiesInstructionStep.


        :param latitude: The latitude of this TflApiPresentationEntitiesInstructionStep.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this TflApiPresentationEntitiesInstructionStep.


        :return: The longitude of this TflApiPresentationEntitiesInstructionStep.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this TflApiPresentationEntitiesInstructionStep.


        :param longitude: The longitude of this TflApiPresentationEntitiesInstructionStep.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def path_attribute(self):
        """Gets the path_attribute of this TflApiPresentationEntitiesInstructionStep.


        :return: The path_attribute of this TflApiPresentationEntitiesInstructionStep.
        :rtype: TflApiPresentationEntitiesPathAttribute
        """
        return self._path_attribute

    @path_attribute.setter
    def path_attribute(self, path_attribute):
        """Sets the path_attribute of this TflApiPresentationEntitiesInstructionStep.


        :param path_attribute: The path_attribute of this TflApiPresentationEntitiesInstructionStep.
        :type path_attribute: TflApiPresentationEntitiesPathAttribute
        """

        self._path_attribute = path_attribute

    @property
    def sky_direction(self):
        """Gets the sky_direction of this TflApiPresentationEntitiesInstructionStep.


        :return: The sky_direction of this TflApiPresentationEntitiesInstructionStep.
        :rtype: int
        """
        return self._sky_direction

    @sky_direction.setter
    def sky_direction(self, sky_direction):
        """Sets the sky_direction of this TflApiPresentationEntitiesInstructionStep.


        :param sky_direction: The sky_direction of this TflApiPresentationEntitiesInstructionStep.
        :type sky_direction: int
        """

        self._sky_direction = sky_direction

    @property
    def sky_direction_description(self):
        """Gets the sky_direction_description of this TflApiPresentationEntitiesInstructionStep.


        :return: The sky_direction_description of this TflApiPresentationEntitiesInstructionStep.
        :rtype: str
        """
        return self._sky_direction_description

    @sky_direction_description.setter
    def sky_direction_description(self, sky_direction_description):
        """Sets the sky_direction_description of this TflApiPresentationEntitiesInstructionStep.


        :param sky_direction_description: The sky_direction_description of this TflApiPresentationEntitiesInstructionStep.
        :type sky_direction_description: str
        """
        allowed_values = ["North", "NorthEast", "East", "SouthEast", "South", "SouthWest", "West", "NorthWest"]  # noqa: E501
        if sky_direction_description not in allowed_values:
            raise ValueError(
                "Invalid value for `sky_direction_description` ({0}), must be one of {1}"
                .format(sky_direction_description, allowed_values)
            )

        self._sky_direction_description = sky_direction_description

    @property
    def street_name(self):
        """Gets the street_name of this TflApiPresentationEntitiesInstructionStep.


        :return: The street_name of this TflApiPresentationEntitiesInstructionStep.
        :rtype: str
        """
        return self._street_name

    @street_name.setter
    def street_name(self, street_name):
        """Sets the street_name of this TflApiPresentationEntitiesInstructionStep.


        :param street_name: The street_name of this TflApiPresentationEntitiesInstructionStep.
        :type street_name: str
        """

        self._street_name = street_name

    @property
    def track_type(self):
        """Gets the track_type of this TflApiPresentationEntitiesInstructionStep.


        :return: The track_type of this TflApiPresentationEntitiesInstructionStep.
        :rtype: str
        """
        return self._track_type

    @track_type.setter
    def track_type(self, track_type):
        """Sets the track_type of this TflApiPresentationEntitiesInstructionStep.


        :param track_type: The track_type of this TflApiPresentationEntitiesInstructionStep.
        :type track_type: str
        """
        allowed_values = ["CycleSuperHighway", "CanalTowpath", "QuietRoad", "ProvisionForCyclists", "BusyRoads", "None", "PushBike", "Quietway"]  # noqa: E501
        if track_type not in allowed_values:
            raise ValueError(
                "Invalid value for `track_type` ({0}), must be one of {1}"
                .format(track_type, allowed_values)
            )

        self._track_type = track_type

    @property
    def turn_direction(self):
        """Gets the turn_direction of this TflApiPresentationEntitiesInstructionStep.


        :return: The turn_direction of this TflApiPresentationEntitiesInstructionStep.
        :rtype: str
        """
        return self._turn_direction

    @turn_direction.setter
    def turn_direction(self, turn_direction):
        """Sets the turn_direction of this TflApiPresentationEntitiesInstructionStep.


        :param turn_direction: The turn_direction of this TflApiPresentationEntitiesInstructionStep.
        :type turn_direction: str
        """

        self._turn_direction = turn_direction
