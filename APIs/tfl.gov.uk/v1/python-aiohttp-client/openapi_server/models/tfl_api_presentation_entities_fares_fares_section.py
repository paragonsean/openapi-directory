# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_fares_fare_details import TflApiPresentationEntitiesFaresFareDetails
from openapi_server.models.tfl_api_presentation_entities_fares_journey import TflApiPresentationEntitiesFaresJourney
from openapi_server.models.tfl_api_presentation_entities_message import TflApiPresentationEntitiesMessage
from openapi_server import util


class TflApiPresentationEntitiesFaresFaresSection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, header: str=None, index: int=None, journey: TflApiPresentationEntitiesFaresJourney=None, messages: List[TflApiPresentationEntitiesMessage]=None, rows: List[TflApiPresentationEntitiesFaresFareDetails]=None):
        """TflApiPresentationEntitiesFaresFaresSection - a model defined in OpenAPI

        :param header: The header of this TflApiPresentationEntitiesFaresFaresSection.
        :param index: The index of this TflApiPresentationEntitiesFaresFaresSection.
        :param journey: The journey of this TflApiPresentationEntitiesFaresFaresSection.
        :param messages: The messages of this TflApiPresentationEntitiesFaresFaresSection.
        :param rows: The rows of this TflApiPresentationEntitiesFaresFaresSection.
        """
        self.openapi_types = {
            'header': str,
            'index': int,
            'journey': TflApiPresentationEntitiesFaresJourney,
            'messages': List[TflApiPresentationEntitiesMessage],
            'rows': List[TflApiPresentationEntitiesFaresFareDetails]
        }

        self.attribute_map = {
            'header': 'header',
            'index': 'index',
            'journey': 'journey',
            'messages': 'messages',
            'rows': 'rows'
        }

        self._header = header
        self._index = index
        self._journey = journey
        self._messages = messages
        self._rows = rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesFaresFaresSection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Fares.FaresSection of this TflApiPresentationEntitiesFaresFaresSection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def header(self):
        """Gets the header of this TflApiPresentationEntitiesFaresFaresSection.


        :return: The header of this TflApiPresentationEntitiesFaresFaresSection.
        :rtype: str
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this TflApiPresentationEntitiesFaresFaresSection.


        :param header: The header of this TflApiPresentationEntitiesFaresFaresSection.
        :type header: str
        """

        self._header = header

    @property
    def index(self):
        """Gets the index of this TflApiPresentationEntitiesFaresFaresSection.


        :return: The index of this TflApiPresentationEntitiesFaresFaresSection.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this TflApiPresentationEntitiesFaresFaresSection.


        :param index: The index of this TflApiPresentationEntitiesFaresFaresSection.
        :type index: int
        """

        self._index = index

    @property
    def journey(self):
        """Gets the journey of this TflApiPresentationEntitiesFaresFaresSection.


        :return: The journey of this TflApiPresentationEntitiesFaresFaresSection.
        :rtype: TflApiPresentationEntitiesFaresJourney
        """
        return self._journey

    @journey.setter
    def journey(self, journey):
        """Sets the journey of this TflApiPresentationEntitiesFaresFaresSection.


        :param journey: The journey of this TflApiPresentationEntitiesFaresFaresSection.
        :type journey: TflApiPresentationEntitiesFaresJourney
        """

        self._journey = journey

    @property
    def messages(self):
        """Gets the messages of this TflApiPresentationEntitiesFaresFaresSection.


        :return: The messages of this TflApiPresentationEntitiesFaresFaresSection.
        :rtype: List[TflApiPresentationEntitiesMessage]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this TflApiPresentationEntitiesFaresFaresSection.


        :param messages: The messages of this TflApiPresentationEntitiesFaresFaresSection.
        :type messages: List[TflApiPresentationEntitiesMessage]
        """

        self._messages = messages

    @property
    def rows(self):
        """Gets the rows of this TflApiPresentationEntitiesFaresFaresSection.


        :return: The rows of this TflApiPresentationEntitiesFaresFaresSection.
        :rtype: List[TflApiPresentationEntitiesFaresFareDetails]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this TflApiPresentationEntitiesFaresFaresSection.


        :param rows: The rows of this TflApiPresentationEntitiesFaresFaresSection.
        :type rows: List[TflApiPresentationEntitiesFaresFareDetails]
        """

        self._rows = rows
