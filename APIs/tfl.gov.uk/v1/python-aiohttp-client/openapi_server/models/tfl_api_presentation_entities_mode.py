# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesMode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_fare_paying: bool=None, is_scheduled_service: bool=None, is_tfl_service: bool=None, mode_name: str=None, mot_type: str=None, network: str=None):
        """TflApiPresentationEntitiesMode - a model defined in OpenAPI

        :param is_fare_paying: The is_fare_paying of this TflApiPresentationEntitiesMode.
        :param is_scheduled_service: The is_scheduled_service of this TflApiPresentationEntitiesMode.
        :param is_tfl_service: The is_tfl_service of this TflApiPresentationEntitiesMode.
        :param mode_name: The mode_name of this TflApiPresentationEntitiesMode.
        :param mot_type: The mot_type of this TflApiPresentationEntitiesMode.
        :param network: The network of this TflApiPresentationEntitiesMode.
        """
        self.openapi_types = {
            'is_fare_paying': bool,
            'is_scheduled_service': bool,
            'is_tfl_service': bool,
            'mode_name': str,
            'mot_type': str,
            'network': str
        }

        self.attribute_map = {
            'is_fare_paying': 'isFarePaying',
            'is_scheduled_service': 'isScheduledService',
            'is_tfl_service': 'isTflService',
            'mode_name': 'modeName',
            'mot_type': 'motType',
            'network': 'network'
        }

        self._is_fare_paying = is_fare_paying
        self._is_scheduled_service = is_scheduled_service
        self._is_tfl_service = is_tfl_service
        self._mode_name = mode_name
        self._mot_type = mot_type
        self._network = network

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesMode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Mode of this TflApiPresentationEntitiesMode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_fare_paying(self):
        """Gets the is_fare_paying of this TflApiPresentationEntitiesMode.


        :return: The is_fare_paying of this TflApiPresentationEntitiesMode.
        :rtype: bool
        """
        return self._is_fare_paying

    @is_fare_paying.setter
    def is_fare_paying(self, is_fare_paying):
        """Sets the is_fare_paying of this TflApiPresentationEntitiesMode.


        :param is_fare_paying: The is_fare_paying of this TflApiPresentationEntitiesMode.
        :type is_fare_paying: bool
        """

        self._is_fare_paying = is_fare_paying

    @property
    def is_scheduled_service(self):
        """Gets the is_scheduled_service of this TflApiPresentationEntitiesMode.


        :return: The is_scheduled_service of this TflApiPresentationEntitiesMode.
        :rtype: bool
        """
        return self._is_scheduled_service

    @is_scheduled_service.setter
    def is_scheduled_service(self, is_scheduled_service):
        """Sets the is_scheduled_service of this TflApiPresentationEntitiesMode.


        :param is_scheduled_service: The is_scheduled_service of this TflApiPresentationEntitiesMode.
        :type is_scheduled_service: bool
        """

        self._is_scheduled_service = is_scheduled_service

    @property
    def is_tfl_service(self):
        """Gets the is_tfl_service of this TflApiPresentationEntitiesMode.


        :return: The is_tfl_service of this TflApiPresentationEntitiesMode.
        :rtype: bool
        """
        return self._is_tfl_service

    @is_tfl_service.setter
    def is_tfl_service(self, is_tfl_service):
        """Sets the is_tfl_service of this TflApiPresentationEntitiesMode.


        :param is_tfl_service: The is_tfl_service of this TflApiPresentationEntitiesMode.
        :type is_tfl_service: bool
        """

        self._is_tfl_service = is_tfl_service

    @property
    def mode_name(self):
        """Gets the mode_name of this TflApiPresentationEntitiesMode.


        :return: The mode_name of this TflApiPresentationEntitiesMode.
        :rtype: str
        """
        return self._mode_name

    @mode_name.setter
    def mode_name(self, mode_name):
        """Sets the mode_name of this TflApiPresentationEntitiesMode.


        :param mode_name: The mode_name of this TflApiPresentationEntitiesMode.
        :type mode_name: str
        """

        self._mode_name = mode_name

    @property
    def mot_type(self):
        """Gets the mot_type of this TflApiPresentationEntitiesMode.


        :return: The mot_type of this TflApiPresentationEntitiesMode.
        :rtype: str
        """
        return self._mot_type

    @mot_type.setter
    def mot_type(self, mot_type):
        """Sets the mot_type of this TflApiPresentationEntitiesMode.


        :param mot_type: The mot_type of this TflApiPresentationEntitiesMode.
        :type mot_type: str
        """

        self._mot_type = mot_type

    @property
    def network(self):
        """Gets the network of this TflApiPresentationEntitiesMode.


        :return: The network of this TflApiPresentationEntitiesMode.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this TflApiPresentationEntitiesMode.


        :param network: The network of this TflApiPresentationEntitiesMode.
        :type network: str
        """

        self._network = network
