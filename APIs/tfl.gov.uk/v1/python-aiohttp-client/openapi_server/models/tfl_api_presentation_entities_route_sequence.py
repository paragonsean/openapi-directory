# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_matched_stop import TflApiPresentationEntitiesMatchedStop
from openapi_server.models.tfl_api_presentation_entities_ordered_route import TflApiPresentationEntitiesOrderedRoute
from openapi_server.models.tfl_api_presentation_entities_stop_point_sequence import TflApiPresentationEntitiesStopPointSequence
from openapi_server import util


class TflApiPresentationEntitiesRouteSequence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, direction: str=None, is_outbound_only: bool=None, line_id: str=None, line_name: str=None, line_strings: List[str]=None, mode: str=None, ordered_line_routes: List[TflApiPresentationEntitiesOrderedRoute]=None, stations: List[TflApiPresentationEntitiesMatchedStop]=None, stop_point_sequences: List[TflApiPresentationEntitiesStopPointSequence]=None):
        """TflApiPresentationEntitiesRouteSequence - a model defined in OpenAPI

        :param direction: The direction of this TflApiPresentationEntitiesRouteSequence.
        :param is_outbound_only: The is_outbound_only of this TflApiPresentationEntitiesRouteSequence.
        :param line_id: The line_id of this TflApiPresentationEntitiesRouteSequence.
        :param line_name: The line_name of this TflApiPresentationEntitiesRouteSequence.
        :param line_strings: The line_strings of this TflApiPresentationEntitiesRouteSequence.
        :param mode: The mode of this TflApiPresentationEntitiesRouteSequence.
        :param ordered_line_routes: The ordered_line_routes of this TflApiPresentationEntitiesRouteSequence.
        :param stations: The stations of this TflApiPresentationEntitiesRouteSequence.
        :param stop_point_sequences: The stop_point_sequences of this TflApiPresentationEntitiesRouteSequence.
        """
        self.openapi_types = {
            'direction': str,
            'is_outbound_only': bool,
            'line_id': str,
            'line_name': str,
            'line_strings': List[str],
            'mode': str,
            'ordered_line_routes': List[TflApiPresentationEntitiesOrderedRoute],
            'stations': List[TflApiPresentationEntitiesMatchedStop],
            'stop_point_sequences': List[TflApiPresentationEntitiesStopPointSequence]
        }

        self.attribute_map = {
            'direction': 'direction',
            'is_outbound_only': 'isOutboundOnly',
            'line_id': 'lineId',
            'line_name': 'lineName',
            'line_strings': 'lineStrings',
            'mode': 'mode',
            'ordered_line_routes': 'orderedLineRoutes',
            'stations': 'stations',
            'stop_point_sequences': 'stopPointSequences'
        }

        self._direction = direction
        self._is_outbound_only = is_outbound_only
        self._line_id = line_id
        self._line_name = line_name
        self._line_strings = line_strings
        self._mode = mode
        self._ordered_line_routes = ordered_line_routes
        self._stations = stations
        self._stop_point_sequences = stop_point_sequences

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesRouteSequence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.RouteSequence of this TflApiPresentationEntitiesRouteSequence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def direction(self):
        """Gets the direction of this TflApiPresentationEntitiesRouteSequence.


        :return: The direction of this TflApiPresentationEntitiesRouteSequence.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this TflApiPresentationEntitiesRouteSequence.


        :param direction: The direction of this TflApiPresentationEntitiesRouteSequence.
        :type direction: str
        """

        self._direction = direction

    @property
    def is_outbound_only(self):
        """Gets the is_outbound_only of this TflApiPresentationEntitiesRouteSequence.


        :return: The is_outbound_only of this TflApiPresentationEntitiesRouteSequence.
        :rtype: bool
        """
        return self._is_outbound_only

    @is_outbound_only.setter
    def is_outbound_only(self, is_outbound_only):
        """Sets the is_outbound_only of this TflApiPresentationEntitiesRouteSequence.


        :param is_outbound_only: The is_outbound_only of this TflApiPresentationEntitiesRouteSequence.
        :type is_outbound_only: bool
        """

        self._is_outbound_only = is_outbound_only

    @property
    def line_id(self):
        """Gets the line_id of this TflApiPresentationEntitiesRouteSequence.


        :return: The line_id of this TflApiPresentationEntitiesRouteSequence.
        :rtype: str
        """
        return self._line_id

    @line_id.setter
    def line_id(self, line_id):
        """Sets the line_id of this TflApiPresentationEntitiesRouteSequence.


        :param line_id: The line_id of this TflApiPresentationEntitiesRouteSequence.
        :type line_id: str
        """

        self._line_id = line_id

    @property
    def line_name(self):
        """Gets the line_name of this TflApiPresentationEntitiesRouteSequence.


        :return: The line_name of this TflApiPresentationEntitiesRouteSequence.
        :rtype: str
        """
        return self._line_name

    @line_name.setter
    def line_name(self, line_name):
        """Sets the line_name of this TflApiPresentationEntitiesRouteSequence.


        :param line_name: The line_name of this TflApiPresentationEntitiesRouteSequence.
        :type line_name: str
        """

        self._line_name = line_name

    @property
    def line_strings(self):
        """Gets the line_strings of this TflApiPresentationEntitiesRouteSequence.


        :return: The line_strings of this TflApiPresentationEntitiesRouteSequence.
        :rtype: List[str]
        """
        return self._line_strings

    @line_strings.setter
    def line_strings(self, line_strings):
        """Sets the line_strings of this TflApiPresentationEntitiesRouteSequence.


        :param line_strings: The line_strings of this TflApiPresentationEntitiesRouteSequence.
        :type line_strings: List[str]
        """

        self._line_strings = line_strings

    @property
    def mode(self):
        """Gets the mode of this TflApiPresentationEntitiesRouteSequence.


        :return: The mode of this TflApiPresentationEntitiesRouteSequence.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this TflApiPresentationEntitiesRouteSequence.


        :param mode: The mode of this TflApiPresentationEntitiesRouteSequence.
        :type mode: str
        """

        self._mode = mode

    @property
    def ordered_line_routes(self):
        """Gets the ordered_line_routes of this TflApiPresentationEntitiesRouteSequence.


        :return: The ordered_line_routes of this TflApiPresentationEntitiesRouteSequence.
        :rtype: List[TflApiPresentationEntitiesOrderedRoute]
        """
        return self._ordered_line_routes

    @ordered_line_routes.setter
    def ordered_line_routes(self, ordered_line_routes):
        """Sets the ordered_line_routes of this TflApiPresentationEntitiesRouteSequence.


        :param ordered_line_routes: The ordered_line_routes of this TflApiPresentationEntitiesRouteSequence.
        :type ordered_line_routes: List[TflApiPresentationEntitiesOrderedRoute]
        """

        self._ordered_line_routes = ordered_line_routes

    @property
    def stations(self):
        """Gets the stations of this TflApiPresentationEntitiesRouteSequence.


        :return: The stations of this TflApiPresentationEntitiesRouteSequence.
        :rtype: List[TflApiPresentationEntitiesMatchedStop]
        """
        return self._stations

    @stations.setter
    def stations(self, stations):
        """Sets the stations of this TflApiPresentationEntitiesRouteSequence.


        :param stations: The stations of this TflApiPresentationEntitiesRouteSequence.
        :type stations: List[TflApiPresentationEntitiesMatchedStop]
        """

        self._stations = stations

    @property
    def stop_point_sequences(self):
        """Gets the stop_point_sequences of this TflApiPresentationEntitiesRouteSequence.


        :return: The stop_point_sequences of this TflApiPresentationEntitiesRouteSequence.
        :rtype: List[TflApiPresentationEntitiesStopPointSequence]
        """
        return self._stop_point_sequences

    @stop_point_sequences.setter
    def stop_point_sequences(self, stop_point_sequences):
        """Sets the stop_point_sequences of this TflApiPresentationEntitiesRouteSequence.


        :param stop_point_sequences: The stop_point_sequences of this TflApiPresentationEntitiesRouteSequence.
        :type stop_point_sequences: List[TflApiPresentationEntitiesStopPointSequence]
        """

        self._stop_point_sequences = stop_point_sequences
