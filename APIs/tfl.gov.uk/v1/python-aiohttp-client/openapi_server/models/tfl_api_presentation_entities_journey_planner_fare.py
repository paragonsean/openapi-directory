# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_journey_planner_fare_tap import TflApiPresentationEntitiesJourneyPlannerFareTap
from openapi_server import util


class TflApiPresentationEntitiesJourneyPlannerFare(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, charge_level: str=None, charge_profile_name: str=None, cost: int=None, high_zone: int=None, is_hopper_fare: bool=None, low_zone: int=None, off_peak: int=None, peak: int=None, taps: List[TflApiPresentationEntitiesJourneyPlannerFareTap]=None):
        """TflApiPresentationEntitiesJourneyPlannerFare - a model defined in OpenAPI

        :param charge_level: The charge_level of this TflApiPresentationEntitiesJourneyPlannerFare.
        :param charge_profile_name: The charge_profile_name of this TflApiPresentationEntitiesJourneyPlannerFare.
        :param cost: The cost of this TflApiPresentationEntitiesJourneyPlannerFare.
        :param high_zone: The high_zone of this TflApiPresentationEntitiesJourneyPlannerFare.
        :param is_hopper_fare: The is_hopper_fare of this TflApiPresentationEntitiesJourneyPlannerFare.
        :param low_zone: The low_zone of this TflApiPresentationEntitiesJourneyPlannerFare.
        :param off_peak: The off_peak of this TflApiPresentationEntitiesJourneyPlannerFare.
        :param peak: The peak of this TflApiPresentationEntitiesJourneyPlannerFare.
        :param taps: The taps of this TflApiPresentationEntitiesJourneyPlannerFare.
        """
        self.openapi_types = {
            'charge_level': str,
            'charge_profile_name': str,
            'cost': int,
            'high_zone': int,
            'is_hopper_fare': bool,
            'low_zone': int,
            'off_peak': int,
            'peak': int,
            'taps': List[TflApiPresentationEntitiesJourneyPlannerFareTap]
        }

        self.attribute_map = {
            'charge_level': 'chargeLevel',
            'charge_profile_name': 'chargeProfileName',
            'cost': 'cost',
            'high_zone': 'highZone',
            'is_hopper_fare': 'isHopperFare',
            'low_zone': 'lowZone',
            'off_peak': 'offPeak',
            'peak': 'peak',
            'taps': 'taps'
        }

        self._charge_level = charge_level
        self._charge_profile_name = charge_profile_name
        self._cost = cost
        self._high_zone = high_zone
        self._is_hopper_fare = is_hopper_fare
        self._low_zone = low_zone
        self._off_peak = off_peak
        self._peak = peak
        self._taps = taps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesJourneyPlannerFare':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.JourneyPlanner.Fare of this TflApiPresentationEntitiesJourneyPlannerFare.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def charge_level(self):
        """Gets the charge_level of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The charge_level of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: str
        """
        return self._charge_level

    @charge_level.setter
    def charge_level(self, charge_level):
        """Sets the charge_level of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param charge_level: The charge_level of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type charge_level: str
        """

        self._charge_level = charge_level

    @property
    def charge_profile_name(self):
        """Gets the charge_profile_name of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The charge_profile_name of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: str
        """
        return self._charge_profile_name

    @charge_profile_name.setter
    def charge_profile_name(self, charge_profile_name):
        """Sets the charge_profile_name of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param charge_profile_name: The charge_profile_name of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type charge_profile_name: str
        """

        self._charge_profile_name = charge_profile_name

    @property
    def cost(self):
        """Gets the cost of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The cost of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: int
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param cost: The cost of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type cost: int
        """

        self._cost = cost

    @property
    def high_zone(self):
        """Gets the high_zone of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The high_zone of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: int
        """
        return self._high_zone

    @high_zone.setter
    def high_zone(self, high_zone):
        """Sets the high_zone of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param high_zone: The high_zone of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type high_zone: int
        """

        self._high_zone = high_zone

    @property
    def is_hopper_fare(self):
        """Gets the is_hopper_fare of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The is_hopper_fare of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: bool
        """
        return self._is_hopper_fare

    @is_hopper_fare.setter
    def is_hopper_fare(self, is_hopper_fare):
        """Sets the is_hopper_fare of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param is_hopper_fare: The is_hopper_fare of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type is_hopper_fare: bool
        """

        self._is_hopper_fare = is_hopper_fare

    @property
    def low_zone(self):
        """Gets the low_zone of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The low_zone of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: int
        """
        return self._low_zone

    @low_zone.setter
    def low_zone(self, low_zone):
        """Sets the low_zone of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param low_zone: The low_zone of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type low_zone: int
        """

        self._low_zone = low_zone

    @property
    def off_peak(self):
        """Gets the off_peak of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The off_peak of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: int
        """
        return self._off_peak

    @off_peak.setter
    def off_peak(self, off_peak):
        """Sets the off_peak of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param off_peak: The off_peak of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type off_peak: int
        """

        self._off_peak = off_peak

    @property
    def peak(self):
        """Gets the peak of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The peak of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: int
        """
        return self._peak

    @peak.setter
    def peak(self, peak):
        """Sets the peak of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param peak: The peak of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type peak: int
        """

        self._peak = peak

    @property
    def taps(self):
        """Gets the taps of this TflApiPresentationEntitiesJourneyPlannerFare.


        :return: The taps of this TflApiPresentationEntitiesJourneyPlannerFare.
        :rtype: List[TflApiPresentationEntitiesJourneyPlannerFareTap]
        """
        return self._taps

    @taps.setter
    def taps(self, taps):
        """Sets the taps of this TflApiPresentationEntitiesJourneyPlannerFare.


        :param taps: The taps of this TflApiPresentationEntitiesJourneyPlannerFare.
        :type taps: List[TflApiPresentationEntitiesJourneyPlannerFareTap]
        """

        self._taps = taps
