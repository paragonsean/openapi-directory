# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesTrainLoading(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, direction: str=None, line: str=None, line_direction: str=None, naptan_to: str=None, platform_direction: str=None, time_slice: str=None, value: int=None):
        """TflApiPresentationEntitiesTrainLoading - a model defined in OpenAPI

        :param direction: The direction of this TflApiPresentationEntitiesTrainLoading.
        :param line: The line of this TflApiPresentationEntitiesTrainLoading.
        :param line_direction: The line_direction of this TflApiPresentationEntitiesTrainLoading.
        :param naptan_to: The naptan_to of this TflApiPresentationEntitiesTrainLoading.
        :param platform_direction: The platform_direction of this TflApiPresentationEntitiesTrainLoading.
        :param time_slice: The time_slice of this TflApiPresentationEntitiesTrainLoading.
        :param value: The value of this TflApiPresentationEntitiesTrainLoading.
        """
        self.openapi_types = {
            'direction': str,
            'line': str,
            'line_direction': str,
            'naptan_to': str,
            'platform_direction': str,
            'time_slice': str,
            'value': int
        }

        self.attribute_map = {
            'direction': 'direction',
            'line': 'line',
            'line_direction': 'lineDirection',
            'naptan_to': 'naptanTo',
            'platform_direction': 'platformDirection',
            'time_slice': 'timeSlice',
            'value': 'value'
        }

        self._direction = direction
        self._line = line
        self._line_direction = line_direction
        self._naptan_to = naptan_to
        self._platform_direction = platform_direction
        self._time_slice = time_slice
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesTrainLoading':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.TrainLoading of this TflApiPresentationEntitiesTrainLoading.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def direction(self):
        """Gets the direction of this TflApiPresentationEntitiesTrainLoading.

        Direction in regards to Journey Planner i.e. inbound or outbound

        :return: The direction of this TflApiPresentationEntitiesTrainLoading.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this TflApiPresentationEntitiesTrainLoading.

        Direction in regards to Journey Planner i.e. inbound or outbound

        :param direction: The direction of this TflApiPresentationEntitiesTrainLoading.
        :type direction: str
        """

        self._direction = direction

    @property
    def line(self):
        """Gets the line of this TflApiPresentationEntitiesTrainLoading.

        The Line Name e.g. \"Victoria\"

        :return: The line of this TflApiPresentationEntitiesTrainLoading.
        :rtype: str
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this TflApiPresentationEntitiesTrainLoading.

        The Line Name e.g. \"Victoria\"

        :param line: The line of this TflApiPresentationEntitiesTrainLoading.
        :type line: str
        """

        self._line = line

    @property
    def line_direction(self):
        """Gets the line_direction of this TflApiPresentationEntitiesTrainLoading.

        Direction of the Line e.g. NB, SB, WB etc.

        :return: The line_direction of this TflApiPresentationEntitiesTrainLoading.
        :rtype: str
        """
        return self._line_direction

    @line_direction.setter
    def line_direction(self, line_direction):
        """Sets the line_direction of this TflApiPresentationEntitiesTrainLoading.

        Direction of the Line e.g. NB, SB, WB etc.

        :param line_direction: The line_direction of this TflApiPresentationEntitiesTrainLoading.
        :type line_direction: str
        """

        self._line_direction = line_direction

    @property
    def naptan_to(self):
        """Gets the naptan_to of this TflApiPresentationEntitiesTrainLoading.

        Naptan of the adjacent station

        :return: The naptan_to of this TflApiPresentationEntitiesTrainLoading.
        :rtype: str
        """
        return self._naptan_to

    @naptan_to.setter
    def naptan_to(self, naptan_to):
        """Sets the naptan_to of this TflApiPresentationEntitiesTrainLoading.

        Naptan of the adjacent station

        :param naptan_to: The naptan_to of this TflApiPresentationEntitiesTrainLoading.
        :type naptan_to: str
        """

        self._naptan_to = naptan_to

    @property
    def platform_direction(self):
        """Gets the platform_direction of this TflApiPresentationEntitiesTrainLoading.

        Direction displayed on the platform e.g. NB, SB, WB etc.

        :return: The platform_direction of this TflApiPresentationEntitiesTrainLoading.
        :rtype: str
        """
        return self._platform_direction

    @platform_direction.setter
    def platform_direction(self, platform_direction):
        """Sets the platform_direction of this TflApiPresentationEntitiesTrainLoading.

        Direction displayed on the platform e.g. NB, SB, WB etc.

        :param platform_direction: The platform_direction of this TflApiPresentationEntitiesTrainLoading.
        :type platform_direction: str
        """

        self._platform_direction = platform_direction

    @property
    def time_slice(self):
        """Gets the time_slice of this TflApiPresentationEntitiesTrainLoading.

        Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc.

        :return: The time_slice of this TflApiPresentationEntitiesTrainLoading.
        :rtype: str
        """
        return self._time_slice

    @time_slice.setter
    def time_slice(self, time_slice):
        """Sets the time_slice of this TflApiPresentationEntitiesTrainLoading.

        Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc.

        :param time_slice: The time_slice of this TflApiPresentationEntitiesTrainLoading.
        :type time_slice: str
        """

        self._time_slice = time_slice

    @property
    def value(self):
        """Gets the value of this TflApiPresentationEntitiesTrainLoading.

        Scale between 1-6,                1 = Very quiet, 2 = Quiet, 3 = Fairly busy, 4 = Busy, 5 = Very busy, 6 = Exceptionally busy

        :return: The value of this TflApiPresentationEntitiesTrainLoading.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this TflApiPresentationEntitiesTrainLoading.

        Scale between 1-6,                1 = Very quiet, 2 = Quiet, 3 = Fairly busy, 4 = Busy, 5 = Very busy, 6 = Exceptionally busy

        :param value: The value of this TflApiPresentationEntitiesTrainLoading.
        :type value: int
        """

        self._value = value
