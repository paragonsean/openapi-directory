# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_prediction_timing import TflApiPresentationEntitiesPredictionTiming
from openapi_server import util


class TflApiPresentationEntitiesPrediction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bearing: str=None, current_location: str=None, destination_name: str=None, destination_naptan_id: str=None, direction: str=None, expected_arrival: datetime=None, id: str=None, line_id: str=None, line_name: str=None, mode_name: str=None, naptan_id: str=None, operation_type: int=None, platform_name: str=None, station_name: str=None, time_to_live: datetime=None, time_to_station: int=None, timestamp: datetime=None, timing: TflApiPresentationEntitiesPredictionTiming=None, towards: str=None, vehicle_id: str=None):
        """TflApiPresentationEntitiesPrediction - a model defined in OpenAPI

        :param bearing: The bearing of this TflApiPresentationEntitiesPrediction.
        :param current_location: The current_location of this TflApiPresentationEntitiesPrediction.
        :param destination_name: The destination_name of this TflApiPresentationEntitiesPrediction.
        :param destination_naptan_id: The destination_naptan_id of this TflApiPresentationEntitiesPrediction.
        :param direction: The direction of this TflApiPresentationEntitiesPrediction.
        :param expected_arrival: The expected_arrival of this TflApiPresentationEntitiesPrediction.
        :param id: The id of this TflApiPresentationEntitiesPrediction.
        :param line_id: The line_id of this TflApiPresentationEntitiesPrediction.
        :param line_name: The line_name of this TflApiPresentationEntitiesPrediction.
        :param mode_name: The mode_name of this TflApiPresentationEntitiesPrediction.
        :param naptan_id: The naptan_id of this TflApiPresentationEntitiesPrediction.
        :param operation_type: The operation_type of this TflApiPresentationEntitiesPrediction.
        :param platform_name: The platform_name of this TflApiPresentationEntitiesPrediction.
        :param station_name: The station_name of this TflApiPresentationEntitiesPrediction.
        :param time_to_live: The time_to_live of this TflApiPresentationEntitiesPrediction.
        :param time_to_station: The time_to_station of this TflApiPresentationEntitiesPrediction.
        :param timestamp: The timestamp of this TflApiPresentationEntitiesPrediction.
        :param timing: The timing of this TflApiPresentationEntitiesPrediction.
        :param towards: The towards of this TflApiPresentationEntitiesPrediction.
        :param vehicle_id: The vehicle_id of this TflApiPresentationEntitiesPrediction.
        """
        self.openapi_types = {
            'bearing': str,
            'current_location': str,
            'destination_name': str,
            'destination_naptan_id': str,
            'direction': str,
            'expected_arrival': datetime,
            'id': str,
            'line_id': str,
            'line_name': str,
            'mode_name': str,
            'naptan_id': str,
            'operation_type': int,
            'platform_name': str,
            'station_name': str,
            'time_to_live': datetime,
            'time_to_station': int,
            'timestamp': datetime,
            'timing': TflApiPresentationEntitiesPredictionTiming,
            'towards': str,
            'vehicle_id': str
        }

        self.attribute_map = {
            'bearing': 'bearing',
            'current_location': 'currentLocation',
            'destination_name': 'destinationName',
            'destination_naptan_id': 'destinationNaptanId',
            'direction': 'direction',
            'expected_arrival': 'expectedArrival',
            'id': 'id',
            'line_id': 'lineId',
            'line_name': 'lineName',
            'mode_name': 'modeName',
            'naptan_id': 'naptanId',
            'operation_type': 'operationType',
            'platform_name': 'platformName',
            'station_name': 'stationName',
            'time_to_live': 'timeToLive',
            'time_to_station': 'timeToStation',
            'timestamp': 'timestamp',
            'timing': 'timing',
            'towards': 'towards',
            'vehicle_id': 'vehicleId'
        }

        self._bearing = bearing
        self._current_location = current_location
        self._destination_name = destination_name
        self._destination_naptan_id = destination_naptan_id
        self._direction = direction
        self._expected_arrival = expected_arrival
        self._id = id
        self._line_id = line_id
        self._line_name = line_name
        self._mode_name = mode_name
        self._naptan_id = naptan_id
        self._operation_type = operation_type
        self._platform_name = platform_name
        self._station_name = station_name
        self._time_to_live = time_to_live
        self._time_to_station = time_to_station
        self._timestamp = timestamp
        self._timing = timing
        self._towards = towards
        self._vehicle_id = vehicle_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesPrediction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Prediction of this TflApiPresentationEntitiesPrediction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bearing(self):
        """Gets the bearing of this TflApiPresentationEntitiesPrediction.

        Bearing (between 0 to 359)

        :return: The bearing of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._bearing

    @bearing.setter
    def bearing(self, bearing):
        """Sets the bearing of this TflApiPresentationEntitiesPrediction.

        Bearing (between 0 to 359)

        :param bearing: The bearing of this TflApiPresentationEntitiesPrediction.
        :type bearing: str
        """

        self._bearing = bearing

    @property
    def current_location(self):
        """Gets the current_location of this TflApiPresentationEntitiesPrediction.

        The current location of the vehicle.

        :return: The current_location of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._current_location

    @current_location.setter
    def current_location(self, current_location):
        """Sets the current_location of this TflApiPresentationEntitiesPrediction.

        The current location of the vehicle.

        :param current_location: The current_location of this TflApiPresentationEntitiesPrediction.
        :type current_location: str
        """

        self._current_location = current_location

    @property
    def destination_name(self):
        """Gets the destination_name of this TflApiPresentationEntitiesPrediction.

        Name of the destination

        :return: The destination_name of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._destination_name

    @destination_name.setter
    def destination_name(self, destination_name):
        """Sets the destination_name of this TflApiPresentationEntitiesPrediction.

        Name of the destination

        :param destination_name: The destination_name of this TflApiPresentationEntitiesPrediction.
        :type destination_name: str
        """

        self._destination_name = destination_name

    @property
    def destination_naptan_id(self):
        """Gets the destination_naptan_id of this TflApiPresentationEntitiesPrediction.

        Naptan Identifier for the prediction's destination

        :return: The destination_naptan_id of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._destination_naptan_id

    @destination_naptan_id.setter
    def destination_naptan_id(self, destination_naptan_id):
        """Sets the destination_naptan_id of this TflApiPresentationEntitiesPrediction.

        Naptan Identifier for the prediction's destination

        :param destination_naptan_id: The destination_naptan_id of this TflApiPresentationEntitiesPrediction.
        :type destination_naptan_id: str
        """

        self._destination_naptan_id = destination_naptan_id

    @property
    def direction(self):
        """Gets the direction of this TflApiPresentationEntitiesPrediction.

        Direction (unified to inbound/outbound)

        :return: The direction of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this TflApiPresentationEntitiesPrediction.

        Direction (unified to inbound/outbound)

        :param direction: The direction of this TflApiPresentationEntitiesPrediction.
        :type direction: str
        """

        self._direction = direction

    @property
    def expected_arrival(self):
        """Gets the expected_arrival of this TflApiPresentationEntitiesPrediction.

        The expected arrival time of the vehicle at the stop/station

        :return: The expected_arrival of this TflApiPresentationEntitiesPrediction.
        :rtype: datetime
        """
        return self._expected_arrival

    @expected_arrival.setter
    def expected_arrival(self, expected_arrival):
        """Sets the expected_arrival of this TflApiPresentationEntitiesPrediction.

        The expected arrival time of the vehicle at the stop/station

        :param expected_arrival: The expected_arrival of this TflApiPresentationEntitiesPrediction.
        :type expected_arrival: datetime
        """

        self._expected_arrival = expected_arrival

    @property
    def id(self):
        """Gets the id of this TflApiPresentationEntitiesPrediction.

        The identitier for the prediction

        :return: The id of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TflApiPresentationEntitiesPrediction.

        The identitier for the prediction

        :param id: The id of this TflApiPresentationEntitiesPrediction.
        :type id: str
        """

        self._id = id

    @property
    def line_id(self):
        """Gets the line_id of this TflApiPresentationEntitiesPrediction.

        Unique identifier for the Line

        :return: The line_id of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._line_id

    @line_id.setter
    def line_id(self, line_id):
        """Sets the line_id of this TflApiPresentationEntitiesPrediction.

        Unique identifier for the Line

        :param line_id: The line_id of this TflApiPresentationEntitiesPrediction.
        :type line_id: str
        """

        self._line_id = line_id

    @property
    def line_name(self):
        """Gets the line_name of this TflApiPresentationEntitiesPrediction.

        Line Name

        :return: The line_name of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._line_name

    @line_name.setter
    def line_name(self, line_name):
        """Sets the line_name of this TflApiPresentationEntitiesPrediction.

        Line Name

        :param line_name: The line_name of this TflApiPresentationEntitiesPrediction.
        :type line_name: str
        """

        self._line_name = line_name

    @property
    def mode_name(self):
        """Gets the mode_name of this TflApiPresentationEntitiesPrediction.

        The mode name of the station/line the prediction relates to

        :return: The mode_name of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._mode_name

    @mode_name.setter
    def mode_name(self, mode_name):
        """Sets the mode_name of this TflApiPresentationEntitiesPrediction.

        The mode name of the station/line the prediction relates to

        :param mode_name: The mode_name of this TflApiPresentationEntitiesPrediction.
        :type mode_name: str
        """

        self._mode_name = mode_name

    @property
    def naptan_id(self):
        """Gets the naptan_id of this TflApiPresentationEntitiesPrediction.

        Identifier for the prediction

        :return: The naptan_id of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._naptan_id

    @naptan_id.setter
    def naptan_id(self, naptan_id):
        """Sets the naptan_id of this TflApiPresentationEntitiesPrediction.

        Identifier for the prediction

        :param naptan_id: The naptan_id of this TflApiPresentationEntitiesPrediction.
        :type naptan_id: str
        """

        self._naptan_id = naptan_id

    @property
    def operation_type(self):
        """Gets the operation_type of this TflApiPresentationEntitiesPrediction.

        The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)

        :return: The operation_type of this TflApiPresentationEntitiesPrediction.
        :rtype: int
        """
        return self._operation_type

    @operation_type.setter
    def operation_type(self, operation_type):
        """Sets the operation_type of this TflApiPresentationEntitiesPrediction.

        The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)

        :param operation_type: The operation_type of this TflApiPresentationEntitiesPrediction.
        :type operation_type: int
        """

        self._operation_type = operation_type

    @property
    def platform_name(self):
        """Gets the platform_name of this TflApiPresentationEntitiesPrediction.

        Platform name (for bus, this is the stop letter)

        :return: The platform_name of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._platform_name

    @platform_name.setter
    def platform_name(self, platform_name):
        """Sets the platform_name of this TflApiPresentationEntitiesPrediction.

        Platform name (for bus, this is the stop letter)

        :param platform_name: The platform_name of this TflApiPresentationEntitiesPrediction.
        :type platform_name: str
        """

        self._platform_name = platform_name

    @property
    def station_name(self):
        """Gets the station_name of this TflApiPresentationEntitiesPrediction.

        Station name

        :return: The station_name of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._station_name

    @station_name.setter
    def station_name(self, station_name):
        """Sets the station_name of this TflApiPresentationEntitiesPrediction.

        Station name

        :param station_name: The station_name of this TflApiPresentationEntitiesPrediction.
        :type station_name: str
        """

        self._station_name = station_name

    @property
    def time_to_live(self):
        """Gets the time_to_live of this TflApiPresentationEntitiesPrediction.

        The expiry time for the prediction

        :return: The time_to_live of this TflApiPresentationEntitiesPrediction.
        :rtype: datetime
        """
        return self._time_to_live

    @time_to_live.setter
    def time_to_live(self, time_to_live):
        """Sets the time_to_live of this TflApiPresentationEntitiesPrediction.

        The expiry time for the prediction

        :param time_to_live: The time_to_live of this TflApiPresentationEntitiesPrediction.
        :type time_to_live: datetime
        """

        self._time_to_live = time_to_live

    @property
    def time_to_station(self):
        """Gets the time_to_station of this TflApiPresentationEntitiesPrediction.

        Prediction of the Time to station in seconds

        :return: The time_to_station of this TflApiPresentationEntitiesPrediction.
        :rtype: int
        """
        return self._time_to_station

    @time_to_station.setter
    def time_to_station(self, time_to_station):
        """Sets the time_to_station of this TflApiPresentationEntitiesPrediction.

        Prediction of the Time to station in seconds

        :param time_to_station: The time_to_station of this TflApiPresentationEntitiesPrediction.
        :type time_to_station: int
        """

        self._time_to_station = time_to_station

    @property
    def timestamp(self):
        """Gets the timestamp of this TflApiPresentationEntitiesPrediction.

        Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)

        :return: The timestamp of this TflApiPresentationEntitiesPrediction.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this TflApiPresentationEntitiesPrediction.

        Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)

        :param timestamp: The timestamp of this TflApiPresentationEntitiesPrediction.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def timing(self):
        """Gets the timing of this TflApiPresentationEntitiesPrediction.


        :return: The timing of this TflApiPresentationEntitiesPrediction.
        :rtype: TflApiPresentationEntitiesPredictionTiming
        """
        return self._timing

    @timing.setter
    def timing(self, timing):
        """Sets the timing of this TflApiPresentationEntitiesPrediction.


        :param timing: The timing of this TflApiPresentationEntitiesPrediction.
        :type timing: TflApiPresentationEntitiesPredictionTiming
        """

        self._timing = timing

    @property
    def towards(self):
        """Gets the towards of this TflApiPresentationEntitiesPrediction.

        Routing information or other descriptive text about the path of the vehicle towards the destination

        :return: The towards of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._towards

    @towards.setter
    def towards(self, towards):
        """Sets the towards of this TflApiPresentationEntitiesPrediction.

        Routing information or other descriptive text about the path of the vehicle towards the destination

        :param towards: The towards of this TflApiPresentationEntitiesPrediction.
        :type towards: str
        """

        self._towards = towards

    @property
    def vehicle_id(self):
        """Gets the vehicle_id of this TflApiPresentationEntitiesPrediction.

        The actual vehicle in transit (for train modes, the leading car of the rolling set)

        :return: The vehicle_id of this TflApiPresentationEntitiesPrediction.
        :rtype: str
        """
        return self._vehicle_id

    @vehicle_id.setter
    def vehicle_id(self, vehicle_id):
        """Sets the vehicle_id of this TflApiPresentationEntitiesPrediction.

        The actual vehicle in transit (for train modes, the leading car of the rolling set)

        :param vehicle_id: The vehicle_id of this TflApiPresentationEntitiesPrediction.
        :type vehicle_id: str
        """

        self._vehicle_id = vehicle_id
