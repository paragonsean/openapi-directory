# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesRoadCorridor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounds: str=None, display_name: str=None, envelope: str=None, group: str=None, id: str=None, status_aggregation_end_date: datetime=None, status_aggregation_start_date: datetime=None, status_severity: str=None, status_severity_description: str=None, url: str=None):
        """TflApiPresentationEntitiesRoadCorridor - a model defined in OpenAPI

        :param bounds: The bounds of this TflApiPresentationEntitiesRoadCorridor.
        :param display_name: The display_name of this TflApiPresentationEntitiesRoadCorridor.
        :param envelope: The envelope of this TflApiPresentationEntitiesRoadCorridor.
        :param group: The group of this TflApiPresentationEntitiesRoadCorridor.
        :param id: The id of this TflApiPresentationEntitiesRoadCorridor.
        :param status_aggregation_end_date: The status_aggregation_end_date of this TflApiPresentationEntitiesRoadCorridor.
        :param status_aggregation_start_date: The status_aggregation_start_date of this TflApiPresentationEntitiesRoadCorridor.
        :param status_severity: The status_severity of this TflApiPresentationEntitiesRoadCorridor.
        :param status_severity_description: The status_severity_description of this TflApiPresentationEntitiesRoadCorridor.
        :param url: The url of this TflApiPresentationEntitiesRoadCorridor.
        """
        self.openapi_types = {
            'bounds': str,
            'display_name': str,
            'envelope': str,
            'group': str,
            'id': str,
            'status_aggregation_end_date': datetime,
            'status_aggregation_start_date': datetime,
            'status_severity': str,
            'status_severity_description': str,
            'url': str
        }

        self.attribute_map = {
            'bounds': 'bounds',
            'display_name': 'displayName',
            'envelope': 'envelope',
            'group': 'group',
            'id': 'id',
            'status_aggregation_end_date': 'statusAggregationEndDate',
            'status_aggregation_start_date': 'statusAggregationStartDate',
            'status_severity': 'statusSeverity',
            'status_severity_description': 'statusSeverityDescription',
            'url': 'url'
        }

        self._bounds = bounds
        self._display_name = display_name
        self._envelope = envelope
        self._group = group
        self._id = id
        self._status_aggregation_end_date = status_aggregation_end_date
        self._status_aggregation_start_date = status_aggregation_start_date
        self._status_severity = status_severity
        self._status_severity_description = status_severity_description
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesRoadCorridor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.RoadCorridor of this TflApiPresentationEntitiesRoadCorridor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounds(self):
        """Gets the bounds of this TflApiPresentationEntitiesRoadCorridor.

        The Bounds of the Corridor, given by the south-east followed by the north-west co-ordinate              pair in geoJSON format e.g. \"[[-1.241531,51.242151],[1.641223,53.765721]]\"

        :return: The bounds of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: str
        """
        return self._bounds

    @bounds.setter
    def bounds(self, bounds):
        """Sets the bounds of this TflApiPresentationEntitiesRoadCorridor.

        The Bounds of the Corridor, given by the south-east followed by the north-west co-ordinate              pair in geoJSON format e.g. \"[[-1.241531,51.242151],[1.641223,53.765721]]\"

        :param bounds: The bounds of this TflApiPresentationEntitiesRoadCorridor.
        :type bounds: str
        """

        self._bounds = bounds

    @property
    def display_name(self):
        """Gets the display_name of this TflApiPresentationEntitiesRoadCorridor.

        The display name of the Corridor e.g. \"North Circular (A406)\". This              may be identical to the Id.

        :return: The display_name of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this TflApiPresentationEntitiesRoadCorridor.

        The display name of the Corridor e.g. \"North Circular (A406)\". This              may be identical to the Id.

        :param display_name: The display_name of this TflApiPresentationEntitiesRoadCorridor.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def envelope(self):
        """Gets the envelope of this TflApiPresentationEntitiesRoadCorridor.

        The Envelope of the Corridor, given by the corner co-ordinates of a rectangular (four-point) polygon              in geoJSON format e.g. \"[[-1.241531,51.242151],[-1.241531,53.765721],[1.641223,53.765721],[1.641223,51.242151]]\"

        :return: The envelope of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: str
        """
        return self._envelope

    @envelope.setter
    def envelope(self, envelope):
        """Sets the envelope of this TflApiPresentationEntitiesRoadCorridor.

        The Envelope of the Corridor, given by the corner co-ordinates of a rectangular (four-point) polygon              in geoJSON format e.g. \"[[-1.241531,51.242151],[-1.241531,53.765721],[1.641223,53.765721],[1.641223,51.242151]]\"

        :param envelope: The envelope of this TflApiPresentationEntitiesRoadCorridor.
        :type envelope: str
        """

        self._envelope = envelope

    @property
    def group(self):
        """Gets the group of this TflApiPresentationEntitiesRoadCorridor.

        The group name of the Corridor e.g. \"Central London\". Most corridors are not grouped, in which case this field can be null.

        :return: The group of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this TflApiPresentationEntitiesRoadCorridor.

        The group name of the Corridor e.g. \"Central London\". Most corridors are not grouped, in which case this field can be null.

        :param group: The group of this TflApiPresentationEntitiesRoadCorridor.
        :type group: str
        """

        self._group = group

    @property
    def id(self):
        """Gets the id of this TflApiPresentationEntitiesRoadCorridor.

        The Id of the Corridor e.g. \"A406\"

        :return: The id of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TflApiPresentationEntitiesRoadCorridor.

        The Id of the Corridor e.g. \"A406\"

        :param id: The id of this TflApiPresentationEntitiesRoadCorridor.
        :type id: str
        """

        self._id = id

    @property
    def status_aggregation_end_date(self):
        """Gets the status_aggregation_end_date of this TflApiPresentationEntitiesRoadCorridor.

        The end of the period over which status has been aggregated, or null if this is the current corridor status.

        :return: The status_aggregation_end_date of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: datetime
        """
        return self._status_aggregation_end_date

    @status_aggregation_end_date.setter
    def status_aggregation_end_date(self, status_aggregation_end_date):
        """Sets the status_aggregation_end_date of this TflApiPresentationEntitiesRoadCorridor.

        The end of the period over which status has been aggregated, or null if this is the current corridor status.

        :param status_aggregation_end_date: The status_aggregation_end_date of this TflApiPresentationEntitiesRoadCorridor.
        :type status_aggregation_end_date: datetime
        """

        self._status_aggregation_end_date = status_aggregation_end_date

    @property
    def status_aggregation_start_date(self):
        """Gets the status_aggregation_start_date of this TflApiPresentationEntitiesRoadCorridor.

        The start of the period over which status has been aggregated, or null if this is the current corridor status.

        :return: The status_aggregation_start_date of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: datetime
        """
        return self._status_aggregation_start_date

    @status_aggregation_start_date.setter
    def status_aggregation_start_date(self, status_aggregation_start_date):
        """Sets the status_aggregation_start_date of this TflApiPresentationEntitiesRoadCorridor.

        The start of the period over which status has been aggregated, or null if this is the current corridor status.

        :param status_aggregation_start_date: The status_aggregation_start_date of this TflApiPresentationEntitiesRoadCorridor.
        :type status_aggregation_start_date: datetime
        """

        self._status_aggregation_start_date = status_aggregation_start_date

    @property
    def status_severity(self):
        """Gets the status_severity of this TflApiPresentationEntitiesRoadCorridor.

        Standard multi-mode status severity code

        :return: The status_severity of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: str
        """
        return self._status_severity

    @status_severity.setter
    def status_severity(self, status_severity):
        """Sets the status_severity of this TflApiPresentationEntitiesRoadCorridor.

        Standard multi-mode status severity code

        :param status_severity: The status_severity of this TflApiPresentationEntitiesRoadCorridor.
        :type status_severity: str
        """

        self._status_severity = status_severity

    @property
    def status_severity_description(self):
        """Gets the status_severity_description of this TflApiPresentationEntitiesRoadCorridor.

        Description of the status severity as applied to RoadCorridors

        :return: The status_severity_description of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: str
        """
        return self._status_severity_description

    @status_severity_description.setter
    def status_severity_description(self, status_severity_description):
        """Sets the status_severity_description of this TflApiPresentationEntitiesRoadCorridor.

        Description of the status severity as applied to RoadCorridors

        :param status_severity_description: The status_severity_description of this TflApiPresentationEntitiesRoadCorridor.
        :type status_severity_description: str
        """

        self._status_severity_description = status_severity_description

    @property
    def url(self):
        """Gets the url of this TflApiPresentationEntitiesRoadCorridor.

        URL to retrieve this Corridor.

        :return: The url of this TflApiPresentationEntitiesRoadCorridor.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TflApiPresentationEntitiesRoadCorridor.

        URL to retrieve this Corridor.

        :param url: The url of this TflApiPresentationEntitiesRoadCorridor.
        :type url: str
        """

        self._url = url
