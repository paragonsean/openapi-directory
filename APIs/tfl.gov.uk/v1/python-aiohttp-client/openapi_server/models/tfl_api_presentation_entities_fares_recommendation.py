# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_message import TflApiPresentationEntitiesMessage
from openapi_server import util


class TflApiPresentationEntitiesFaresRecommendation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost: str=None, discount_card: str=None, fare_type: str=None, getting_your_ticket: List[TflApiPresentationEntitiesMessage]=None, id: int=None, key_features: List[TflApiPresentationEntitiesMessage]=None, notes: List[TflApiPresentationEntitiesMessage]=None, price_comparison: str=None, price_description: str=None, product: str=None, product_type: str=None, rank: int=None, recommended_top_up: str=None, rule: int=None, single_fare: float=None, ticket_time: str=None, ticket_type: str=None, zones: str=None):
        """TflApiPresentationEntitiesFaresRecommendation - a model defined in OpenAPI

        :param cost: The cost of this TflApiPresentationEntitiesFaresRecommendation.
        :param discount_card: The discount_card of this TflApiPresentationEntitiesFaresRecommendation.
        :param fare_type: The fare_type of this TflApiPresentationEntitiesFaresRecommendation.
        :param getting_your_ticket: The getting_your_ticket of this TflApiPresentationEntitiesFaresRecommendation.
        :param id: The id of this TflApiPresentationEntitiesFaresRecommendation.
        :param key_features: The key_features of this TflApiPresentationEntitiesFaresRecommendation.
        :param notes: The notes of this TflApiPresentationEntitiesFaresRecommendation.
        :param price_comparison: The price_comparison of this TflApiPresentationEntitiesFaresRecommendation.
        :param price_description: The price_description of this TflApiPresentationEntitiesFaresRecommendation.
        :param product: The product of this TflApiPresentationEntitiesFaresRecommendation.
        :param product_type: The product_type of this TflApiPresentationEntitiesFaresRecommendation.
        :param rank: The rank of this TflApiPresentationEntitiesFaresRecommendation.
        :param recommended_top_up: The recommended_top_up of this TflApiPresentationEntitiesFaresRecommendation.
        :param rule: The rule of this TflApiPresentationEntitiesFaresRecommendation.
        :param single_fare: The single_fare of this TflApiPresentationEntitiesFaresRecommendation.
        :param ticket_time: The ticket_time of this TflApiPresentationEntitiesFaresRecommendation.
        :param ticket_type: The ticket_type of this TflApiPresentationEntitiesFaresRecommendation.
        :param zones: The zones of this TflApiPresentationEntitiesFaresRecommendation.
        """
        self.openapi_types = {
            'cost': str,
            'discount_card': str,
            'fare_type': str,
            'getting_your_ticket': List[TflApiPresentationEntitiesMessage],
            'id': int,
            'key_features': List[TflApiPresentationEntitiesMessage],
            'notes': List[TflApiPresentationEntitiesMessage],
            'price_comparison': str,
            'price_description': str,
            'product': str,
            'product_type': str,
            'rank': int,
            'recommended_top_up': str,
            'rule': int,
            'single_fare': float,
            'ticket_time': str,
            'ticket_type': str,
            'zones': str
        }

        self.attribute_map = {
            'cost': 'cost',
            'discount_card': 'discountCard',
            'fare_type': 'fareType',
            'getting_your_ticket': 'gettingYourTicket',
            'id': 'id',
            'key_features': 'keyFeatures',
            'notes': 'notes',
            'price_comparison': 'priceComparison',
            'price_description': 'priceDescription',
            'product': 'product',
            'product_type': 'productType',
            'rank': 'rank',
            'recommended_top_up': 'recommendedTopUp',
            'rule': 'rule',
            'single_fare': 'singleFare',
            'ticket_time': 'ticketTime',
            'ticket_type': 'ticketType',
            'zones': 'zones'
        }

        self._cost = cost
        self._discount_card = discount_card
        self._fare_type = fare_type
        self._getting_your_ticket = getting_your_ticket
        self._id = id
        self._key_features = key_features
        self._notes = notes
        self._price_comparison = price_comparison
        self._price_description = price_description
        self._product = product
        self._product_type = product_type
        self._rank = rank
        self._recommended_top_up = recommended_top_up
        self._rule = rule
        self._single_fare = single_fare
        self._ticket_time = ticket_time
        self._ticket_type = ticket_type
        self._zones = zones

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesFaresRecommendation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Fares.Recommendation of this TflApiPresentationEntitiesFaresRecommendation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost(self):
        """Gets the cost of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The cost of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this TflApiPresentationEntitiesFaresRecommendation.


        :param cost: The cost of this TflApiPresentationEntitiesFaresRecommendation.
        :type cost: str
        """

        self._cost = cost

    @property
    def discount_card(self):
        """Gets the discount_card of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The discount_card of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._discount_card

    @discount_card.setter
    def discount_card(self, discount_card):
        """Sets the discount_card of this TflApiPresentationEntitiesFaresRecommendation.


        :param discount_card: The discount_card of this TflApiPresentationEntitiesFaresRecommendation.
        :type discount_card: str
        """

        self._discount_card = discount_card

    @property
    def fare_type(self):
        """Gets the fare_type of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The fare_type of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._fare_type

    @fare_type.setter
    def fare_type(self, fare_type):
        """Sets the fare_type of this TflApiPresentationEntitiesFaresRecommendation.


        :param fare_type: The fare_type of this TflApiPresentationEntitiesFaresRecommendation.
        :type fare_type: str
        """

        self._fare_type = fare_type

    @property
    def getting_your_ticket(self):
        """Gets the getting_your_ticket of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The getting_your_ticket of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: List[TflApiPresentationEntitiesMessage]
        """
        return self._getting_your_ticket

    @getting_your_ticket.setter
    def getting_your_ticket(self, getting_your_ticket):
        """Sets the getting_your_ticket of this TflApiPresentationEntitiesFaresRecommendation.


        :param getting_your_ticket: The getting_your_ticket of this TflApiPresentationEntitiesFaresRecommendation.
        :type getting_your_ticket: List[TflApiPresentationEntitiesMessage]
        """

        self._getting_your_ticket = getting_your_ticket

    @property
    def id(self):
        """Gets the id of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The id of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TflApiPresentationEntitiesFaresRecommendation.


        :param id: The id of this TflApiPresentationEntitiesFaresRecommendation.
        :type id: int
        """

        self._id = id

    @property
    def key_features(self):
        """Gets the key_features of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The key_features of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: List[TflApiPresentationEntitiesMessage]
        """
        return self._key_features

    @key_features.setter
    def key_features(self, key_features):
        """Sets the key_features of this TflApiPresentationEntitiesFaresRecommendation.


        :param key_features: The key_features of this TflApiPresentationEntitiesFaresRecommendation.
        :type key_features: List[TflApiPresentationEntitiesMessage]
        """

        self._key_features = key_features

    @property
    def notes(self):
        """Gets the notes of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The notes of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: List[TflApiPresentationEntitiesMessage]
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this TflApiPresentationEntitiesFaresRecommendation.


        :param notes: The notes of this TflApiPresentationEntitiesFaresRecommendation.
        :type notes: List[TflApiPresentationEntitiesMessage]
        """

        self._notes = notes

    @property
    def price_comparison(self):
        """Gets the price_comparison of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The price_comparison of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._price_comparison

    @price_comparison.setter
    def price_comparison(self, price_comparison):
        """Sets the price_comparison of this TflApiPresentationEntitiesFaresRecommendation.


        :param price_comparison: The price_comparison of this TflApiPresentationEntitiesFaresRecommendation.
        :type price_comparison: str
        """

        self._price_comparison = price_comparison

    @property
    def price_description(self):
        """Gets the price_description of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The price_description of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._price_description

    @price_description.setter
    def price_description(self, price_description):
        """Sets the price_description of this TflApiPresentationEntitiesFaresRecommendation.


        :param price_description: The price_description of this TflApiPresentationEntitiesFaresRecommendation.
        :type price_description: str
        """

        self._price_description = price_description

    @property
    def product(self):
        """Gets the product of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The product of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this TflApiPresentationEntitiesFaresRecommendation.


        :param product: The product of this TflApiPresentationEntitiesFaresRecommendation.
        :type product: str
        """

        self._product = product

    @property
    def product_type(self):
        """Gets the product_type of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The product_type of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this TflApiPresentationEntitiesFaresRecommendation.


        :param product_type: The product_type of this TflApiPresentationEntitiesFaresRecommendation.
        :type product_type: str
        """

        self._product_type = product_type

    @property
    def rank(self):
        """Gets the rank of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The rank of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank):
        """Sets the rank of this TflApiPresentationEntitiesFaresRecommendation.


        :param rank: The rank of this TflApiPresentationEntitiesFaresRecommendation.
        :type rank: int
        """

        self._rank = rank

    @property
    def recommended_top_up(self):
        """Gets the recommended_top_up of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The recommended_top_up of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._recommended_top_up

    @recommended_top_up.setter
    def recommended_top_up(self, recommended_top_up):
        """Sets the recommended_top_up of this TflApiPresentationEntitiesFaresRecommendation.


        :param recommended_top_up: The recommended_top_up of this TflApiPresentationEntitiesFaresRecommendation.
        :type recommended_top_up: str
        """

        self._recommended_top_up = recommended_top_up

    @property
    def rule(self):
        """Gets the rule of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The rule of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: int
        """
        return self._rule

    @rule.setter
    def rule(self, rule):
        """Sets the rule of this TflApiPresentationEntitiesFaresRecommendation.


        :param rule: The rule of this TflApiPresentationEntitiesFaresRecommendation.
        :type rule: int
        """

        self._rule = rule

    @property
    def single_fare(self):
        """Gets the single_fare of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The single_fare of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: float
        """
        return self._single_fare

    @single_fare.setter
    def single_fare(self, single_fare):
        """Sets the single_fare of this TflApiPresentationEntitiesFaresRecommendation.


        :param single_fare: The single_fare of this TflApiPresentationEntitiesFaresRecommendation.
        :type single_fare: float
        """

        self._single_fare = single_fare

    @property
    def ticket_time(self):
        """Gets the ticket_time of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The ticket_time of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._ticket_time

    @ticket_time.setter
    def ticket_time(self, ticket_time):
        """Sets the ticket_time of this TflApiPresentationEntitiesFaresRecommendation.


        :param ticket_time: The ticket_time of this TflApiPresentationEntitiesFaresRecommendation.
        :type ticket_time: str
        """

        self._ticket_time = ticket_time

    @property
    def ticket_type(self):
        """Gets the ticket_type of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The ticket_type of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._ticket_type

    @ticket_type.setter
    def ticket_type(self, ticket_type):
        """Sets the ticket_type of this TflApiPresentationEntitiesFaresRecommendation.


        :param ticket_type: The ticket_type of this TflApiPresentationEntitiesFaresRecommendation.
        :type ticket_type: str
        """

        self._ticket_type = ticket_type

    @property
    def zones(self):
        """Gets the zones of this TflApiPresentationEntitiesFaresRecommendation.


        :return: The zones of this TflApiPresentationEntitiesFaresRecommendation.
        :rtype: str
        """
        return self._zones

    @zones.setter
    def zones(self, zones):
        """Sets the zones of this TflApiPresentationEntitiesFaresRecommendation.


        :param zones: The zones of this TflApiPresentationEntitiesFaresRecommendation.
        :type zones: str
        """

        self._zones = zones
