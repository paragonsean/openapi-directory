# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_search_match import TflApiPresentationEntitiesSearchMatch
from openapi_server import util


class TflApiPresentationEntitiesSearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _from: int=None, matches: List[TflApiPresentationEntitiesSearchMatch]=None, max_score: float=None, page: int=None, page_size: int=None, provider: str=None, query: str=None, total: int=None):
        """TflApiPresentationEntitiesSearchResponse - a model defined in OpenAPI

        :param _from: The _from of this TflApiPresentationEntitiesSearchResponse.
        :param matches: The matches of this TflApiPresentationEntitiesSearchResponse.
        :param max_score: The max_score of this TflApiPresentationEntitiesSearchResponse.
        :param page: The page of this TflApiPresentationEntitiesSearchResponse.
        :param page_size: The page_size of this TflApiPresentationEntitiesSearchResponse.
        :param provider: The provider of this TflApiPresentationEntitiesSearchResponse.
        :param query: The query of this TflApiPresentationEntitiesSearchResponse.
        :param total: The total of this TflApiPresentationEntitiesSearchResponse.
        """
        self.openapi_types = {
            '_from': int,
            'matches': List[TflApiPresentationEntitiesSearchMatch],
            'max_score': float,
            'page': int,
            'page_size': int,
            'provider': str,
            'query': str,
            'total': int
        }

        self.attribute_map = {
            '_from': 'from',
            'matches': 'matches',
            'max_score': 'maxScore',
            'page': 'page',
            'page_size': 'pageSize',
            'provider': 'provider',
            'query': 'query',
            'total': 'total'
        }

        self.__from = _from
        self._matches = matches
        self._max_score = max_score
        self._page = page
        self._page_size = page_size
        self._provider = provider
        self._query = query
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesSearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.SearchResponse of this TflApiPresentationEntitiesSearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _from(self):
        """Gets the _from of this TflApiPresentationEntitiesSearchResponse.


        :return: The _from of this TflApiPresentationEntitiesSearchResponse.
        :rtype: int
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this TflApiPresentationEntitiesSearchResponse.


        :param _from: The _from of this TflApiPresentationEntitiesSearchResponse.
        :type _from: int
        """

        self.__from = _from

    @property
    def matches(self):
        """Gets the matches of this TflApiPresentationEntitiesSearchResponse.


        :return: The matches of this TflApiPresentationEntitiesSearchResponse.
        :rtype: List[TflApiPresentationEntitiesSearchMatch]
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this TflApiPresentationEntitiesSearchResponse.


        :param matches: The matches of this TflApiPresentationEntitiesSearchResponse.
        :type matches: List[TflApiPresentationEntitiesSearchMatch]
        """

        self._matches = matches

    @property
    def max_score(self):
        """Gets the max_score of this TflApiPresentationEntitiesSearchResponse.


        :return: The max_score of this TflApiPresentationEntitiesSearchResponse.
        :rtype: float
        """
        return self._max_score

    @max_score.setter
    def max_score(self, max_score):
        """Sets the max_score of this TflApiPresentationEntitiesSearchResponse.


        :param max_score: The max_score of this TflApiPresentationEntitiesSearchResponse.
        :type max_score: float
        """

        self._max_score = max_score

    @property
    def page(self):
        """Gets the page of this TflApiPresentationEntitiesSearchResponse.


        :return: The page of this TflApiPresentationEntitiesSearchResponse.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this TflApiPresentationEntitiesSearchResponse.


        :param page: The page of this TflApiPresentationEntitiesSearchResponse.
        :type page: int
        """

        self._page = page

    @property
    def page_size(self):
        """Gets the page_size of this TflApiPresentationEntitiesSearchResponse.


        :return: The page_size of this TflApiPresentationEntitiesSearchResponse.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this TflApiPresentationEntitiesSearchResponse.


        :param page_size: The page_size of this TflApiPresentationEntitiesSearchResponse.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def provider(self):
        """Gets the provider of this TflApiPresentationEntitiesSearchResponse.


        :return: The provider of this TflApiPresentationEntitiesSearchResponse.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this TflApiPresentationEntitiesSearchResponse.


        :param provider: The provider of this TflApiPresentationEntitiesSearchResponse.
        :type provider: str
        """

        self._provider = provider

    @property
    def query(self):
        """Gets the query of this TflApiPresentationEntitiesSearchResponse.


        :return: The query of this TflApiPresentationEntitiesSearchResponse.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this TflApiPresentationEntitiesSearchResponse.


        :param query: The query of this TflApiPresentationEntitiesSearchResponse.
        :type query: str
        """

        self._query = query

    @property
    def total(self):
        """Gets the total of this TflApiPresentationEntitiesSearchResponse.


        :return: The total of this TflApiPresentationEntitiesSearchResponse.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this TflApiPresentationEntitiesSearchResponse.


        :param total: The total of this TflApiPresentationEntitiesSearchResponse.
        :type total: int
        """

        self._total = total
