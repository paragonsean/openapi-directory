# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accidents: int=None, borough: str=None, year: int=None):
        """TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary - a model defined in OpenAPI

        :param accidents: The accidents of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        :param borough: The borough of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        :param year: The year of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        """
        self.openapi_types = {
            'accidents': int,
            'borough': str,
            'year': int
        }

        self.attribute_map = {
            'accidents': 'accidents',
            'borough': 'borough',
            'year': 'year'
        }

        self._accidents = accidents
        self._borough = borough
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.AccidentStats.AccidentStatsOrderedSummary of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accidents(self):
        """Gets the accidents of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.


        :return: The accidents of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        :rtype: int
        """
        return self._accidents

    @accidents.setter
    def accidents(self, accidents):
        """Sets the accidents of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.


        :param accidents: The accidents of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        :type accidents: int
        """

        self._accidents = accidents

    @property
    def borough(self):
        """Gets the borough of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.


        :return: The borough of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        :rtype: str
        """
        return self._borough

    @borough.setter
    def borough(self, borough):
        """Sets the borough of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.


        :param borough: The borough of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        :type borough: str
        """

        self._borough = borough

    @property
    def year(self):
        """Gets the year of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.


        :return: The year of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.


        :param year: The year of this TflApiPresentationEntitiesAccidentStatsAccidentStatsOrderedSummary.
        :type year: int
        """

        self._year = year
