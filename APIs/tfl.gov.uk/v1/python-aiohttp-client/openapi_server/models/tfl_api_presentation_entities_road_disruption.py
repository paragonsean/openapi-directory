# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.system_data_spatial_db_geography import SystemDataSpatialDbGeography
from openapi_server.models.tfl_api_presentation_entities_road_disruption_impact_area import TflApiPresentationEntitiesRoadDisruptionImpactArea
from openapi_server.models.tfl_api_presentation_entities_road_disruption_line import TflApiPresentationEntitiesRoadDisruptionLine
from openapi_server.models.tfl_api_presentation_entities_road_disruption_schedule import TflApiPresentationEntitiesRoadDisruptionSchedule
from openapi_server.models.tfl_api_presentation_entities_road_project import TflApiPresentationEntitiesRoadProject
from openapi_server.models.tfl_api_presentation_entities_street import TflApiPresentationEntitiesStreet
from openapi_server import util


class TflApiPresentationEntitiesRoadDisruption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, comments: str=None, corridor_ids: List[str]=None, current_update: str=None, current_update_date_time: datetime=None, end_date_time: datetime=None, geography: SystemDataSpatialDbGeography=None, geometry: SystemDataSpatialDbGeography=None, has_closures: bool=None, id: str=None, is_provisional: bool=None, last_modified_time: datetime=None, level_of_interest: str=None, link_text: str=None, link_url: str=None, location: str=None, ordinal: int=None, point: str=None, publish_end_date: datetime=None, publish_start_date: datetime=None, recurring_schedules: List[TflApiPresentationEntitiesRoadDisruptionSchedule]=None, road_disruption_impact_areas: List[TflApiPresentationEntitiesRoadDisruptionImpactArea]=None, road_disruption_lines: List[TflApiPresentationEntitiesRoadDisruptionLine]=None, road_project: TflApiPresentationEntitiesRoadProject=None, severity: str=None, start_date_time: datetime=None, status: str=None, streets: List[TflApiPresentationEntitiesStreet]=None, sub_category: str=None, time_frame: str=None, url: str=None):
        """TflApiPresentationEntitiesRoadDisruption - a model defined in OpenAPI

        :param category: The category of this TflApiPresentationEntitiesRoadDisruption.
        :param comments: The comments of this TflApiPresentationEntitiesRoadDisruption.
        :param corridor_ids: The corridor_ids of this TflApiPresentationEntitiesRoadDisruption.
        :param current_update: The current_update of this TflApiPresentationEntitiesRoadDisruption.
        :param current_update_date_time: The current_update_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :param end_date_time: The end_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :param geography: The geography of this TflApiPresentationEntitiesRoadDisruption.
        :param geometry: The geometry of this TflApiPresentationEntitiesRoadDisruption.
        :param has_closures: The has_closures of this TflApiPresentationEntitiesRoadDisruption.
        :param id: The id of this TflApiPresentationEntitiesRoadDisruption.
        :param is_provisional: The is_provisional of this TflApiPresentationEntitiesRoadDisruption.
        :param last_modified_time: The last_modified_time of this TflApiPresentationEntitiesRoadDisruption.
        :param level_of_interest: The level_of_interest of this TflApiPresentationEntitiesRoadDisruption.
        :param link_text: The link_text of this TflApiPresentationEntitiesRoadDisruption.
        :param link_url: The link_url of this TflApiPresentationEntitiesRoadDisruption.
        :param location: The location of this TflApiPresentationEntitiesRoadDisruption.
        :param ordinal: The ordinal of this TflApiPresentationEntitiesRoadDisruption.
        :param point: The point of this TflApiPresentationEntitiesRoadDisruption.
        :param publish_end_date: The publish_end_date of this TflApiPresentationEntitiesRoadDisruption.
        :param publish_start_date: The publish_start_date of this TflApiPresentationEntitiesRoadDisruption.
        :param recurring_schedules: The recurring_schedules of this TflApiPresentationEntitiesRoadDisruption.
        :param road_disruption_impact_areas: The road_disruption_impact_areas of this TflApiPresentationEntitiesRoadDisruption.
        :param road_disruption_lines: The road_disruption_lines of this TflApiPresentationEntitiesRoadDisruption.
        :param road_project: The road_project of this TflApiPresentationEntitiesRoadDisruption.
        :param severity: The severity of this TflApiPresentationEntitiesRoadDisruption.
        :param start_date_time: The start_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :param status: The status of this TflApiPresentationEntitiesRoadDisruption.
        :param streets: The streets of this TflApiPresentationEntitiesRoadDisruption.
        :param sub_category: The sub_category of this TflApiPresentationEntitiesRoadDisruption.
        :param time_frame: The time_frame of this TflApiPresentationEntitiesRoadDisruption.
        :param url: The url of this TflApiPresentationEntitiesRoadDisruption.
        """
        self.openapi_types = {
            'category': str,
            'comments': str,
            'corridor_ids': List[str],
            'current_update': str,
            'current_update_date_time': datetime,
            'end_date_time': datetime,
            'geography': SystemDataSpatialDbGeography,
            'geometry': SystemDataSpatialDbGeography,
            'has_closures': bool,
            'id': str,
            'is_provisional': bool,
            'last_modified_time': datetime,
            'level_of_interest': str,
            'link_text': str,
            'link_url': str,
            'location': str,
            'ordinal': int,
            'point': str,
            'publish_end_date': datetime,
            'publish_start_date': datetime,
            'recurring_schedules': List[TflApiPresentationEntitiesRoadDisruptionSchedule],
            'road_disruption_impact_areas': List[TflApiPresentationEntitiesRoadDisruptionImpactArea],
            'road_disruption_lines': List[TflApiPresentationEntitiesRoadDisruptionLine],
            'road_project': TflApiPresentationEntitiesRoadProject,
            'severity': str,
            'start_date_time': datetime,
            'status': str,
            'streets': List[TflApiPresentationEntitiesStreet],
            'sub_category': str,
            'time_frame': str,
            'url': str
        }

        self.attribute_map = {
            'category': 'category',
            'comments': 'comments',
            'corridor_ids': 'corridorIds',
            'current_update': 'currentUpdate',
            'current_update_date_time': 'currentUpdateDateTime',
            'end_date_time': 'endDateTime',
            'geography': 'geography',
            'geometry': 'geometry',
            'has_closures': 'hasClosures',
            'id': 'id',
            'is_provisional': 'isProvisional',
            'last_modified_time': 'lastModifiedTime',
            'level_of_interest': 'levelOfInterest',
            'link_text': 'linkText',
            'link_url': 'linkUrl',
            'location': 'location',
            'ordinal': 'ordinal',
            'point': 'point',
            'publish_end_date': 'publishEndDate',
            'publish_start_date': 'publishStartDate',
            'recurring_schedules': 'recurringSchedules',
            'road_disruption_impact_areas': 'roadDisruptionImpactAreas',
            'road_disruption_lines': 'roadDisruptionLines',
            'road_project': 'roadProject',
            'severity': 'severity',
            'start_date_time': 'startDateTime',
            'status': 'status',
            'streets': 'streets',
            'sub_category': 'subCategory',
            'time_frame': 'timeFrame',
            'url': 'url'
        }

        self._category = category
        self._comments = comments
        self._corridor_ids = corridor_ids
        self._current_update = current_update
        self._current_update_date_time = current_update_date_time
        self._end_date_time = end_date_time
        self._geography = geography
        self._geometry = geometry
        self._has_closures = has_closures
        self._id = id
        self._is_provisional = is_provisional
        self._last_modified_time = last_modified_time
        self._level_of_interest = level_of_interest
        self._link_text = link_text
        self._link_url = link_url
        self._location = location
        self._ordinal = ordinal
        self._point = point
        self._publish_end_date = publish_end_date
        self._publish_start_date = publish_start_date
        self._recurring_schedules = recurring_schedules
        self._road_disruption_impact_areas = road_disruption_impact_areas
        self._road_disruption_lines = road_disruption_lines
        self._road_project = road_project
        self._severity = severity
        self._start_date_time = start_date_time
        self._status = status
        self._streets = streets
        self._sub_category = sub_category
        self._time_frame = time_frame
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesRoadDisruption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.RoadDisruption of this TflApiPresentationEntitiesRoadDisruption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this TflApiPresentationEntitiesRoadDisruption.

        Describes the nature of disruption e.g. Traffic Incidents, Works

        :return: The category of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this TflApiPresentationEntitiesRoadDisruption.

        Describes the nature of disruption e.g. Traffic Incidents, Works

        :param category: The category of this TflApiPresentationEntitiesRoadDisruption.
        :type category: str
        """

        self._category = category

    @property
    def comments(self):
        """Gets the comments of this TflApiPresentationEntitiesRoadDisruption.

        Full text of comments describing the disruption, including details of any road closures and diversions, where appropriate.

        :return: The comments of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this TflApiPresentationEntitiesRoadDisruption.

        Full text of comments describing the disruption, including details of any road closures and diversions, where appropriate.

        :param comments: The comments of this TflApiPresentationEntitiesRoadDisruption.
        :type comments: str
        """

        self._comments = comments

    @property
    def corridor_ids(self):
        """Gets the corridor_ids of this TflApiPresentationEntitiesRoadDisruption.

        The Ids of affected corridors, if any.

        :return: The corridor_ids of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: List[str]
        """
        return self._corridor_ids

    @corridor_ids.setter
    def corridor_ids(self, corridor_ids):
        """Sets the corridor_ids of this TflApiPresentationEntitiesRoadDisruption.

        The Ids of affected corridors, if any.

        :param corridor_ids: The corridor_ids of this TflApiPresentationEntitiesRoadDisruption.
        :type corridor_ids: List[str]
        """

        self._corridor_ids = corridor_ids

    @property
    def current_update(self):
        """Gets the current_update of this TflApiPresentationEntitiesRoadDisruption.

        Text of the most recent update from the LSTCC on the state of the               disruption, including the current traffic impact and any advice to               road users.

        :return: The current_update of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._current_update

    @current_update.setter
    def current_update(self, current_update):
        """Sets the current_update of this TflApiPresentationEntitiesRoadDisruption.

        Text of the most recent update from the LSTCC on the state of the               disruption, including the current traffic impact and any advice to               road users.

        :param current_update: The current_update of this TflApiPresentationEntitiesRoadDisruption.
        :type current_update: str
        """

        self._current_update = current_update

    @property
    def current_update_date_time(self):
        """Gets the current_update_date_time of this TflApiPresentationEntitiesRoadDisruption.

        The time when the last CurrentUpdate description was recorded,               or null if no CurrentUpdate has been applied.

        :return: The current_update_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: datetime
        """
        return self._current_update_date_time

    @current_update_date_time.setter
    def current_update_date_time(self, current_update_date_time):
        """Sets the current_update_date_time of this TflApiPresentationEntitiesRoadDisruption.

        The time when the last CurrentUpdate description was recorded,               or null if no CurrentUpdate has been applied.

        :param current_update_date_time: The current_update_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :type current_update_date_time: datetime
        """

        self._current_update_date_time = current_update_date_time

    @property
    def end_date_time(self):
        """Gets the end_date_time of this TflApiPresentationEntitiesRoadDisruption.

        The date and time on which the disruption ended. For planned disruptions, this date will have a valid value. For unplanned               disruptions in progress, this field will be omitted.

        :return: The end_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: datetime
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this TflApiPresentationEntitiesRoadDisruption.

        The date and time on which the disruption ended. For planned disruptions, this date will have a valid value. For unplanned               disruptions in progress, this field will be omitted.

        :param end_date_time: The end_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :type end_date_time: datetime
        """

        self._end_date_time = end_date_time

    @property
    def geography(self):
        """Gets the geography of this TflApiPresentationEntitiesRoadDisruption.


        :return: The geography of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: SystemDataSpatialDbGeography
        """
        return self._geography

    @geography.setter
    def geography(self, geography):
        """Sets the geography of this TflApiPresentationEntitiesRoadDisruption.


        :param geography: The geography of this TflApiPresentationEntitiesRoadDisruption.
        :type geography: SystemDataSpatialDbGeography
        """

        self._geography = geography

    @property
    def geometry(self):
        """Gets the geometry of this TflApiPresentationEntitiesRoadDisruption.


        :return: The geometry of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: SystemDataSpatialDbGeography
        """
        return self._geometry

    @geometry.setter
    def geometry(self, geometry):
        """Sets the geometry of this TflApiPresentationEntitiesRoadDisruption.


        :param geometry: The geometry of this TflApiPresentationEntitiesRoadDisruption.
        :type geometry: SystemDataSpatialDbGeography
        """

        self._geometry = geometry

    @property
    def has_closures(self):
        """Gets the has_closures of this TflApiPresentationEntitiesRoadDisruption.

        True if any of the affected Streets have a \"Full Closure\" status, false otherwise. A RoadDisruption that has HasClosures is considered a               Severe or Serious disruption for severity filtering purposes.

        :return: The has_closures of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: bool
        """
        return self._has_closures

    @has_closures.setter
    def has_closures(self, has_closures):
        """Sets the has_closures of this TflApiPresentationEntitiesRoadDisruption.

        True if any of the affected Streets have a \"Full Closure\" status, false otherwise. A RoadDisruption that has HasClosures is considered a               Severe or Serious disruption for severity filtering purposes.

        :param has_closures: The has_closures of this TflApiPresentationEntitiesRoadDisruption.
        :type has_closures: bool
        """

        self._has_closures = has_closures

    @property
    def id(self):
        """Gets the id of this TflApiPresentationEntitiesRoadDisruption.

        Unique identifier for the road disruption

        :return: The id of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TflApiPresentationEntitiesRoadDisruption.

        Unique identifier for the road disruption

        :param id: The id of this TflApiPresentationEntitiesRoadDisruption.
        :type id: str
        """

        self._id = id

    @property
    def is_provisional(self):
        """Gets the is_provisional of this TflApiPresentationEntitiesRoadDisruption.

        True if the disruption is planned on a future date that is open to change

        :return: The is_provisional of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: bool
        """
        return self._is_provisional

    @is_provisional.setter
    def is_provisional(self, is_provisional):
        """Sets the is_provisional of this TflApiPresentationEntitiesRoadDisruption.

        True if the disruption is planned on a future date that is open to change

        :param is_provisional: The is_provisional of this TflApiPresentationEntitiesRoadDisruption.
        :type is_provisional: bool
        """

        self._is_provisional = is_provisional

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this TflApiPresentationEntitiesRoadDisruption.

        The date and time on which the disruption was last modified in the system. This information can reliably be used by a developer to quickly              compare two instances of the same disruption to determine if it has been changed.

        :return: The last_modified_time of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this TflApiPresentationEntitiesRoadDisruption.

        The date and time on which the disruption was last modified in the system. This information can reliably be used by a developer to quickly              compare two instances of the same disruption to determine if it has been changed.

        :param last_modified_time: The last_modified_time of this TflApiPresentationEntitiesRoadDisruption.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def level_of_interest(self):
        """Gets the level_of_interest of this TflApiPresentationEntitiesRoadDisruption.

        This describes the level of potential impact on traffic operations of the disruption.               High = e.g. a one-off disruption on a major or high profile route which will require a high level of operational attention               Medium = This is the default value               Low = e.g. a frequently occurring disruption which is well known

        :return: The level_of_interest of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._level_of_interest

    @level_of_interest.setter
    def level_of_interest(self, level_of_interest):
        """Sets the level_of_interest of this TflApiPresentationEntitiesRoadDisruption.

        This describes the level of potential impact on traffic operations of the disruption.               High = e.g. a one-off disruption on a major or high profile route which will require a high level of operational attention               Medium = This is the default value               Low = e.g. a frequently occurring disruption which is well known

        :param level_of_interest: The level_of_interest of this TflApiPresentationEntitiesRoadDisruption.
        :type level_of_interest: str
        """

        self._level_of_interest = level_of_interest

    @property
    def link_text(self):
        """Gets the link_text of this TflApiPresentationEntitiesRoadDisruption.

        The text of any associated link

        :return: The link_text of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._link_text

    @link_text.setter
    def link_text(self, link_text):
        """Sets the link_text of this TflApiPresentationEntitiesRoadDisruption.

        The text of any associated link

        :param link_text: The link_text of this TflApiPresentationEntitiesRoadDisruption.
        :type link_text: str
        """

        self._link_text = link_text

    @property
    def link_url(self):
        """Gets the link_url of this TflApiPresentationEntitiesRoadDisruption.

        The url of any associated link

        :return: The link_url of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._link_url

    @link_url.setter
    def link_url(self, link_url):
        """Sets the link_url of this TflApiPresentationEntitiesRoadDisruption.

        The url of any associated link

        :param link_url: The link_url of this TflApiPresentationEntitiesRoadDisruption.
        :type link_url: str
        """

        self._link_url = link_url

    @property
    def location(self):
        """Gets the location of this TflApiPresentationEntitiesRoadDisruption.

        Main road name / number (borough) or preset area name where the disruption is located. This might be useful for a map popup where space is limited.

        :return: The location of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this TflApiPresentationEntitiesRoadDisruption.

        Main road name / number (borough) or preset area name where the disruption is located. This might be useful for a map popup where space is limited.

        :param location: The location of this TflApiPresentationEntitiesRoadDisruption.
        :type location: str
        """

        self._location = location

    @property
    def ordinal(self):
        """Gets the ordinal of this TflApiPresentationEntitiesRoadDisruption.

        An ordinal of the disruption based on severity, level of interest and corridor.

        :return: The ordinal of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: int
        """
        return self._ordinal

    @ordinal.setter
    def ordinal(self, ordinal):
        """Sets the ordinal of this TflApiPresentationEntitiesRoadDisruption.

        An ordinal of the disruption based on severity, level of interest and corridor.

        :param ordinal: The ordinal of this TflApiPresentationEntitiesRoadDisruption.
        :type ordinal: int
        """

        self._ordinal = ordinal

    @property
    def point(self):
        """Gets the point of this TflApiPresentationEntitiesRoadDisruption.

        Latitude and longitude (WGS84) of the centroid of the disruption, stored in a geoJSON-formatted string.

        :return: The point of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._point

    @point.setter
    def point(self, point):
        """Sets the point of this TflApiPresentationEntitiesRoadDisruption.

        Latitude and longitude (WGS84) of the centroid of the disruption, stored in a geoJSON-formatted string.

        :param point: The point of this TflApiPresentationEntitiesRoadDisruption.
        :type point: str
        """

        self._point = point

    @property
    def publish_end_date(self):
        """Gets the publish_end_date of this TflApiPresentationEntitiesRoadDisruption.


        :return: The publish_end_date of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: datetime
        """
        return self._publish_end_date

    @publish_end_date.setter
    def publish_end_date(self, publish_end_date):
        """Sets the publish_end_date of this TflApiPresentationEntitiesRoadDisruption.


        :param publish_end_date: The publish_end_date of this TflApiPresentationEntitiesRoadDisruption.
        :type publish_end_date: datetime
        """

        self._publish_end_date = publish_end_date

    @property
    def publish_start_date(self):
        """Gets the publish_start_date of this TflApiPresentationEntitiesRoadDisruption.

        TDM Additional properties

        :return: The publish_start_date of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: datetime
        """
        return self._publish_start_date

    @publish_start_date.setter
    def publish_start_date(self, publish_start_date):
        """Sets the publish_start_date of this TflApiPresentationEntitiesRoadDisruption.

        TDM Additional properties

        :param publish_start_date: The publish_start_date of this TflApiPresentationEntitiesRoadDisruption.
        :type publish_start_date: datetime
        """

        self._publish_start_date = publish_start_date

    @property
    def recurring_schedules(self):
        """Gets the recurring_schedules of this TflApiPresentationEntitiesRoadDisruption.


        :return: The recurring_schedules of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: List[TflApiPresentationEntitiesRoadDisruptionSchedule]
        """
        return self._recurring_schedules

    @recurring_schedules.setter
    def recurring_schedules(self, recurring_schedules):
        """Sets the recurring_schedules of this TflApiPresentationEntitiesRoadDisruption.


        :param recurring_schedules: The recurring_schedules of this TflApiPresentationEntitiesRoadDisruption.
        :type recurring_schedules: List[TflApiPresentationEntitiesRoadDisruptionSchedule]
        """

        self._recurring_schedules = recurring_schedules

    @property
    def road_disruption_impact_areas(self):
        """Gets the road_disruption_impact_areas of this TflApiPresentationEntitiesRoadDisruption.


        :return: The road_disruption_impact_areas of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: List[TflApiPresentationEntitiesRoadDisruptionImpactArea]
        """
        return self._road_disruption_impact_areas

    @road_disruption_impact_areas.setter
    def road_disruption_impact_areas(self, road_disruption_impact_areas):
        """Sets the road_disruption_impact_areas of this TflApiPresentationEntitiesRoadDisruption.


        :param road_disruption_impact_areas: The road_disruption_impact_areas of this TflApiPresentationEntitiesRoadDisruption.
        :type road_disruption_impact_areas: List[TflApiPresentationEntitiesRoadDisruptionImpactArea]
        """

        self._road_disruption_impact_areas = road_disruption_impact_areas

    @property
    def road_disruption_lines(self):
        """Gets the road_disruption_lines of this TflApiPresentationEntitiesRoadDisruption.


        :return: The road_disruption_lines of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: List[TflApiPresentationEntitiesRoadDisruptionLine]
        """
        return self._road_disruption_lines

    @road_disruption_lines.setter
    def road_disruption_lines(self, road_disruption_lines):
        """Sets the road_disruption_lines of this TflApiPresentationEntitiesRoadDisruption.


        :param road_disruption_lines: The road_disruption_lines of this TflApiPresentationEntitiesRoadDisruption.
        :type road_disruption_lines: List[TflApiPresentationEntitiesRoadDisruptionLine]
        """

        self._road_disruption_lines = road_disruption_lines

    @property
    def road_project(self):
        """Gets the road_project of this TflApiPresentationEntitiesRoadDisruption.


        :return: The road_project of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: TflApiPresentationEntitiesRoadProject
        """
        return self._road_project

    @road_project.setter
    def road_project(self, road_project):
        """Sets the road_project of this TflApiPresentationEntitiesRoadDisruption.


        :param road_project: The road_project of this TflApiPresentationEntitiesRoadDisruption.
        :type road_project: TflApiPresentationEntitiesRoadProject
        """

        self._road_project = road_project

    @property
    def severity(self):
        """Gets the severity of this TflApiPresentationEntitiesRoadDisruption.

        A description of the severity of the disruption.

        :return: The severity of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this TflApiPresentationEntitiesRoadDisruption.

        A description of the severity of the disruption.

        :param severity: The severity of this TflApiPresentationEntitiesRoadDisruption.
        :type severity: str
        """

        self._severity = severity

    @property
    def start_date_time(self):
        """Gets the start_date_time of this TflApiPresentationEntitiesRoadDisruption.

        The date and time which the disruption started. For a planned disruption (i.e. planned road works) this date will be in the future.              For unplanned disruptions, this will default to the date on which the disruption was first recorded, but may be adjusted by the operator.

        :return: The start_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: datetime
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this TflApiPresentationEntitiesRoadDisruption.

        The date and time which the disruption started. For a planned disruption (i.e. planned road works) this date will be in the future.              For unplanned disruptions, this will default to the date on which the disruption was first recorded, but may be adjusted by the operator.

        :param start_date_time: The start_date_time of this TflApiPresentationEntitiesRoadDisruption.
        :type start_date_time: datetime
        """

        self._start_date_time = start_date_time

    @property
    def status(self):
        """Gets the status of this TflApiPresentationEntitiesRoadDisruption.

        This describes the status of the disruption.                Active = currently in progress               Active Long Term = currently in progress and long term              Scheduled = scheduled to start within the next 180 days              Recurring Works = planned maintenance works that follow a regular routine or pattern and whose next occurrence is to start within the next 180 days.              Recently Cleared = recently cleared in the last 24 hours              Note that the status of Scheduled or Recurring Works disruptions will change to Active when they start, and will change status again when they end.

        :return: The status of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TflApiPresentationEntitiesRoadDisruption.

        This describes the status of the disruption.                Active = currently in progress               Active Long Term = currently in progress and long term              Scheduled = scheduled to start within the next 180 days              Recurring Works = planned maintenance works that follow a regular routine or pattern and whose next occurrence is to start within the next 180 days.              Recently Cleared = recently cleared in the last 24 hours              Note that the status of Scheduled or Recurring Works disruptions will change to Active when they start, and will change status again when they end.

        :param status: The status of this TflApiPresentationEntitiesRoadDisruption.
        :type status: str
        """

        self._status = status

    @property
    def streets(self):
        """Gets the streets of this TflApiPresentationEntitiesRoadDisruption.

        A collection of zero or more streets affected by the disruption.

        :return: The streets of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: List[TflApiPresentationEntitiesStreet]
        """
        return self._streets

    @streets.setter
    def streets(self, streets):
        """Sets the streets of this TflApiPresentationEntitiesRoadDisruption.

        A collection of zero or more streets affected by the disruption.

        :param streets: The streets of this TflApiPresentationEntitiesRoadDisruption.
        :type streets: List[TflApiPresentationEntitiesStreet]
        """

        self._streets = streets

    @property
    def sub_category(self):
        """Gets the sub_category of this TflApiPresentationEntitiesRoadDisruption.

        Describes the sub-category of disruption e.g. Collapsed Manhole, Abnormal Load

        :return: The sub_category of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._sub_category

    @sub_category.setter
    def sub_category(self, sub_category):
        """Sets the sub_category of this TflApiPresentationEntitiesRoadDisruption.

        Describes the sub-category of disruption e.g. Collapsed Manhole, Abnormal Load

        :param sub_category: The sub_category of this TflApiPresentationEntitiesRoadDisruption.
        :type sub_category: str
        """

        self._sub_category = sub_category

    @property
    def time_frame(self):
        """Gets the time_frame of this TflApiPresentationEntitiesRoadDisruption.


        :return: The time_frame of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._time_frame

    @time_frame.setter
    def time_frame(self, time_frame):
        """Sets the time_frame of this TflApiPresentationEntitiesRoadDisruption.


        :param time_frame: The time_frame of this TflApiPresentationEntitiesRoadDisruption.
        :type time_frame: str
        """

        self._time_frame = time_frame

    @property
    def url(self):
        """Gets the url of this TflApiPresentationEntitiesRoadDisruption.

        URL to retrieve this road disruption

        :return: The url of this TflApiPresentationEntitiesRoadDisruption.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TflApiPresentationEntitiesRoadDisruption.

        URL to retrieve this road disruption

        :param url: The url of this TflApiPresentationEntitiesRoadDisruption.
        :type url: str
        """

        self._url = url
