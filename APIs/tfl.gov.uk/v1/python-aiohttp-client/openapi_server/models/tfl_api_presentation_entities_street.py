# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tfl_api_presentation_entities_street_segment import TflApiPresentationEntitiesStreetSegment
from openapi_server import util


class TflApiPresentationEntitiesStreet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, closure: str=None, directions: str=None, name: str=None, segments: List[TflApiPresentationEntitiesStreetSegment]=None, source_system_id: int=None, source_system_key: str=None):
        """TflApiPresentationEntitiesStreet - a model defined in OpenAPI

        :param closure: The closure of this TflApiPresentationEntitiesStreet.
        :param directions: The directions of this TflApiPresentationEntitiesStreet.
        :param name: The name of this TflApiPresentationEntitiesStreet.
        :param segments: The segments of this TflApiPresentationEntitiesStreet.
        :param source_system_id: The source_system_id of this TflApiPresentationEntitiesStreet.
        :param source_system_key: The source_system_key of this TflApiPresentationEntitiesStreet.
        """
        self.openapi_types = {
            'closure': str,
            'directions': str,
            'name': str,
            'segments': List[TflApiPresentationEntitiesStreetSegment],
            'source_system_id': int,
            'source_system_key': str
        }

        self.attribute_map = {
            'closure': 'closure',
            'directions': 'directions',
            'name': 'name',
            'segments': 'segments',
            'source_system_id': 'sourceSystemId',
            'source_system_key': 'sourceSystemKey'
        }

        self._closure = closure
        self._directions = directions
        self._name = name
        self._segments = segments
        self._source_system_id = source_system_id
        self._source_system_key = source_system_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TflApiPresentationEntitiesStreet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tfl.Api.Presentation.Entities.Street of this TflApiPresentationEntitiesStreet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def closure(self):
        """Gets the closure of this TflApiPresentationEntitiesStreet.

        Type of road closure. Some example values:              Open = road is open, not blocked, not closed, not restricted. It maybe that the disruption has been moved out of the carriageway.              Partial Closure = road is partially blocked, closed or restricted.               Full Closure = road is fully blocked or closed.

        :return: The closure of this TflApiPresentationEntitiesStreet.
        :rtype: str
        """
        return self._closure

    @closure.setter
    def closure(self, closure):
        """Sets the closure of this TflApiPresentationEntitiesStreet.

        Type of road closure. Some example values:              Open = road is open, not blocked, not closed, not restricted. It maybe that the disruption has been moved out of the carriageway.              Partial Closure = road is partially blocked, closed or restricted.               Full Closure = road is fully blocked or closed.

        :param closure: The closure of this TflApiPresentationEntitiesStreet.
        :type closure: str
        """

        self._closure = closure

    @property
    def directions(self):
        """Gets the directions of this TflApiPresentationEntitiesStreet.

        The direction of the disruption on the street. Some example values:              All Directions              All Approaches              Clockwise              Anti-Clockwise              Northbound              Eastbound              Southbound              Westbound              Both Directions

        :return: The directions of this TflApiPresentationEntitiesStreet.
        :rtype: str
        """
        return self._directions

    @directions.setter
    def directions(self, directions):
        """Sets the directions of this TflApiPresentationEntitiesStreet.

        The direction of the disruption on the street. Some example values:              All Directions              All Approaches              Clockwise              Anti-Clockwise              Northbound              Eastbound              Southbound              Westbound              Both Directions

        :param directions: The directions of this TflApiPresentationEntitiesStreet.
        :type directions: str
        """

        self._directions = directions

    @property
    def name(self):
        """Gets the name of this TflApiPresentationEntitiesStreet.

        Street name

        :return: The name of this TflApiPresentationEntitiesStreet.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TflApiPresentationEntitiesStreet.

        Street name

        :param name: The name of this TflApiPresentationEntitiesStreet.
        :type name: str
        """

        self._name = name

    @property
    def segments(self):
        """Gets the segments of this TflApiPresentationEntitiesStreet.

        Geographic description of the sections of this street that are affected.

        :return: The segments of this TflApiPresentationEntitiesStreet.
        :rtype: List[TflApiPresentationEntitiesStreetSegment]
        """
        return self._segments

    @segments.setter
    def segments(self, segments):
        """Sets the segments of this TflApiPresentationEntitiesStreet.

        Geographic description of the sections of this street that are affected.

        :param segments: The segments of this TflApiPresentationEntitiesStreet.
        :type segments: List[TflApiPresentationEntitiesStreetSegment]
        """

        self._segments = segments

    @property
    def source_system_id(self):
        """Gets the source_system_id of this TflApiPresentationEntitiesStreet.

        The ID from the source system of the disruption that this street belongs to.

        :return: The source_system_id of this TflApiPresentationEntitiesStreet.
        :rtype: int
        """
        return self._source_system_id

    @source_system_id.setter
    def source_system_id(self, source_system_id):
        """Sets the source_system_id of this TflApiPresentationEntitiesStreet.

        The ID from the source system of the disruption that this street belongs to.

        :param source_system_id: The source_system_id of this TflApiPresentationEntitiesStreet.
        :type source_system_id: int
        """

        self._source_system_id = source_system_id

    @property
    def source_system_key(self):
        """Gets the source_system_key of this TflApiPresentationEntitiesStreet.

        The key of the source system of the disruption that this street belongs to.

        :return: The source_system_key of this TflApiPresentationEntitiesStreet.
        :rtype: str
        """
        return self._source_system_key

    @source_system_key.setter
    def source_system_key(self, source_system_key):
        """Sets the source_system_key of this TflApiPresentationEntitiesStreet.

        The key of the source system of the disruption that this street belongs to.

        :param source_system_key: The source_system_key of this TflApiPresentationEntitiesStreet.
        :type source_system_key: str
        """

        self._source_system_key = source_system_key
