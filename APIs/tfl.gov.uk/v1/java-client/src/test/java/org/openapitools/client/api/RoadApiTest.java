/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.TflApiPresentationEntitiesRoadCorridor;
import org.openapitools.client.model.TflApiPresentationEntitiesRoadDisruption;
import org.openapitools.client.model.TflApiPresentationEntitiesStatusSeverity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoadApi
 */
@Disabled
public class RoadApiTest {

    private final RoadApi api = new RoadApi();

    /**
     * Gets a list of disrupted streets. If no date filters are provided, current disruptions are returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roadDisruptedStreetsTest() throws ApiException {
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        Object response = api.roadDisruptedStreets(startDate, endDate);
        // TODO: test validations
    }

    /**
     * Get active disruptions, filtered by road ids
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roadDisruptionTest() throws ApiException {
        List<String> ids = null;
        Boolean stripContent = null;
        List<String> severities = null;
        List<String> categories = null;
        Boolean closures = null;
        List<TflApiPresentationEntitiesRoadDisruption> response = api.roadDisruption(ids, stripContent, severities, categories, closures);
        // TODO: test validations
    }

    /**
     * Gets a list of active disruptions filtered by disruption Ids.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roadDisruptionByIdTest() throws ApiException {
        List<String> disruptionIds = null;
        Boolean stripContent = null;
        TflApiPresentationEntitiesRoadDisruption response = api.roadDisruptionById(disruptionIds, stripContent);
        // TODO: test validations
    }

    /**
     * Gets all roads managed by TfL
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roadGetTest() throws ApiException {
        List<TflApiPresentationEntitiesRoadCorridor> response = api.roadGet();
        // TODO: test validations
    }

    /**
     * Gets the road with the specified id (e.g. A1)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roadIdsGetTest() throws ApiException {
        List<String> ids = null;
        List<TflApiPresentationEntitiesRoadCorridor> response = api.roadIdsGet(ids);
        // TODO: test validations
    }

    /**
     * Gets a list of valid RoadDisruption categories
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roadMetaCategoriesTest() throws ApiException {
        List<String> response = api.roadMetaCategories();
        // TODO: test validations
    }

    /**
     * Gets a list of valid RoadDisruption severity codes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roadMetaSeveritiesTest() throws ApiException {
        List<TflApiPresentationEntitiesStatusSeverity> response = api.roadMetaSeverities();
        // TODO: test validations
    }

    /**
     * Gets the specified roads with the status aggregated over the date range specified, or now until the end of today if no dates are passed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roadStatusTest() throws ApiException {
        List<String> ids = null;
        OffsetDateTime dateRangeNullableStartDate = null;
        OffsetDateTime dateRangeNullableEndDate = null;
        List<TflApiPresentationEntitiesRoadCorridor> response = api.roadStatus(ids, dateRangeNullableStartDate, dateRangeNullableEndDate);
        // TODO: test validations
    }

}
