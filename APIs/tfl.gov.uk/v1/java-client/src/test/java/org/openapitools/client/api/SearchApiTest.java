/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TflApiPresentationEntitiesSearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Disabled
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    /**
     * Searches the bus schedules folder on S3 for a given bus number.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchBusSchedulesTest() throws ApiException {
        String query = null;
        TflApiPresentationEntitiesSearchResponse response = api.searchBusSchedules(query);
        // TODO: test validations
    }

    /**
     * Search the site for occurrences of the query string. The maximum number of results returned is equal to the maximum page size              of 100. To return subsequent pages, use the paginated overload.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchGetTest() throws ApiException {
        String query = null;
        TflApiPresentationEntitiesSearchResponse response = api.searchGet(query);
        // TODO: test validations
    }

    /**
     * Gets the available search categories.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchMetaCategoriesTest() throws ApiException {
        List<String> response = api.searchMetaCategories();
        // TODO: test validations
    }

    /**
     * Gets the available searchProvider names.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchMetaSearchProvidersTest() throws ApiException {
        List<String> response = api.searchMetaSearchProviders();
        // TODO: test validations
    }

    /**
     * Gets the available sorting options.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchMetaSortsTest() throws ApiException {
        List<String> response = api.searchMetaSorts();
        // TODO: test validations
    }

}
