/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesRouteSectionNaptanEntrySequence;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TflApiPresentationEntitiesDisruptedRoute
 */
public class TflApiPresentationEntitiesDisruptedRouteTest {
    private final TflApiPresentationEntitiesDisruptedRoute model = new TflApiPresentationEntitiesDisruptedRoute();

    /**
     * Model tests for TflApiPresentationEntitiesDisruptedRoute
     */
    @Test
    public void testTflApiPresentationEntitiesDisruptedRoute() {
        // TODO: test TflApiPresentationEntitiesDisruptedRoute
    }

    /**
     * Test the property 'destinationName'
     */
    @Test
    public void destinationNameTest() {
        // TODO: test destinationName
    }

    /**
     * Test the property 'direction'
     */
    @Test
    public void directionTest() {
        // TODO: test direction
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isEntireRouteSection'
     */
    @Test
    public void isEntireRouteSectionTest() {
        // TODO: test isEntireRouteSection
    }

    /**
     * Test the property 'lineId'
     */
    @Test
    public void lineIdTest() {
        // TODO: test lineId
    }

    /**
     * Test the property 'lineString'
     */
    @Test
    public void lineStringTest() {
        // TODO: test lineString
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'originationName'
     */
    @Test
    public void originationNameTest() {
        // TODO: test originationName
    }

    /**
     * Test the property 'routeCode'
     */
    @Test
    public void routeCodeTest() {
        // TODO: test routeCode
    }

    /**
     * Test the property 'routeSectionNaptanEntrySequence'
     */
    @Test
    public void routeSectionNaptanEntrySequenceTest() {
        // TODO: test routeSectionNaptanEntrySequence
    }

    /**
     * Test the property 'validFrom'
     */
    @Test
    public void validFromTest() {
        // TODO: test validFrom
    }

    /**
     * Test the property 'validTo'
     */
    @Test
    public void validToTest() {
        // TODO: test validTo
    }

    /**
     * Test the property 'via'
     */
    @Test
    public void viaTest() {
        // TODO: test via
    }

}
