/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TflApiPresentationEntitiesBikePointOccupancy;
import org.openapitools.client.model.TflApiPresentationEntitiesCarParkOccupancy;
import org.openapitools.client.model.TflApiPresentationEntitiesChargeConnectorOccupancy;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OccupancyApi
 */
@Disabled
public class OccupancyApiTest {

    private final OccupancyApi api = new OccupancyApi();

    /**
     * Gets the occupancy for all car parks that have occupancy data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void occupancyCarParkGetTest() throws ApiException {
        List<TflApiPresentationEntitiesCarParkOccupancy> response = api.occupancyCarParkGet();
        // TODO: test validations
    }

    /**
     * Gets the occupancy for a car park with a given id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void occupancyGetTest() throws ApiException {
        String id = null;
        TflApiPresentationEntitiesCarParkOccupancy response = api.occupancyGet(id);
        // TODO: test validations
    }

    /**
     * Gets the occupancy for all charge connectors
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void occupancyGetAllChargeConnectorStatusTest() throws ApiException {
        List<TflApiPresentationEntitiesChargeConnectorOccupancy> response = api.occupancyGetAllChargeConnectorStatus();
        // TODO: test validations
    }

    /**
     * Get the occupancy for bike points.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void occupancyGetBikePointsOccupanciesTest() throws ApiException {
        List<String> ids = null;
        List<TflApiPresentationEntitiesBikePointOccupancy> response = api.occupancyGetBikePointsOccupancies(ids);
        // TODO: test validations
    }

    /**
     * Gets the occupancy for a charge connectors with a given id (sourceSystemPlaceId)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void occupancyGetChargeConnectorStatusTest() throws ApiException {
        List<String> ids = null;
        List<TflApiPresentationEntitiesChargeConnectorOccupancy> response = api.occupancyGetChargeConnectorStatus(ids);
        // TODO: test validations
    }

}
