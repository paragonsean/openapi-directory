/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerItineraryResult;
import org.openapitools.client.model.TflApiPresentationEntitiesMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JourneyApi
 */
@Disabled
public class JourneyApiTest {

    private final JourneyApi api = new JourneyApi();

    /**
     * Perform a Journey Planner search from the parameters specified in simple types
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void journeyJourneyResultsTest() throws ApiException {
        String from = null;
        String to = null;
        String via = null;
        Boolean nationalSearch = null;
        String date = null;
        String time = null;
        String timeIs = null;
        String journeyPreference = null;
        List<String> mode = null;
        List<String> accessibilityPreference = null;
        String fromName = null;
        String toName = null;
        String viaName = null;
        String maxTransferMinutes = null;
        String maxWalkingMinutes = null;
        String walkingSpeed = null;
        String cyclePreference = null;
        String adjustment = null;
        List<String> bikeProficiency = null;
        Boolean alternativeCycle = null;
        Boolean alternativeWalking = null;
        Boolean applyHtmlMarkup = null;
        Boolean useMultiModalCall = null;
        Boolean walkingOptimization = null;
        Boolean taxiOnlyTrip = null;
        Boolean routeBetweenEntrances = null;
        Boolean useRealTimeLiveArrivals = null;
        Boolean calcOneDirection = null;
        TflApiPresentationEntitiesJourneyPlannerItineraryResult response = api.journeyJourneyResults(from, to, via, nationalSearch, date, time, timeIs, journeyPreference, mode, accessibilityPreference, fromName, toName, viaName, maxTransferMinutes, maxWalkingMinutes, walkingSpeed, cyclePreference, adjustment, bikeProficiency, alternativeCycle, alternativeWalking, applyHtmlMarkup, useMultiModalCall, walkingOptimization, taxiOnlyTrip, routeBetweenEntrances, useRealTimeLiveArrivals, calcOneDirection);
        // TODO: test validations
    }

    /**
     * Gets a list of all of the available journey planner modes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void journeyMetaTest() throws ApiException {
        List<TflApiPresentationEntitiesMode> response = api.journeyMeta();
        // TODO: test validations
    }

}
