/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesDisruption;
import org.openapitools.client.model.TflApiPresentationEntitiesIdentifier;
import org.openapitools.client.model.TflApiPresentationEntitiesInstruction;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerObstacle;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerPath;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerPlannedWork;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerRouteOption;
import org.openapitools.client.model.TflApiPresentationEntitiesPoint;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TflApiPresentationEntitiesJourneyPlannerLeg
 */
public class TflApiPresentationEntitiesJourneyPlannerLegTest {
    private final TflApiPresentationEntitiesJourneyPlannerLeg model = new TflApiPresentationEntitiesJourneyPlannerLeg();

    /**
     * Model tests for TflApiPresentationEntitiesJourneyPlannerLeg
     */
    @Test
    public void testTflApiPresentationEntitiesJourneyPlannerLeg() {
        // TODO: test TflApiPresentationEntitiesJourneyPlannerLeg
    }

    /**
     * Test the property 'arrivalPoint'
     */
    @Test
    public void arrivalPointTest() {
        // TODO: test arrivalPoint
    }

    /**
     * Test the property 'arrivalTime'
     */
    @Test
    public void arrivalTimeTest() {
        // TODO: test arrivalTime
    }

    /**
     * Test the property 'departurePoint'
     */
    @Test
    public void departurePointTest() {
        // TODO: test departurePoint
    }

    /**
     * Test the property 'departureTime'
     */
    @Test
    public void departureTimeTest() {
        // TODO: test departureTime
    }

    /**
     * Test the property 'disruptions'
     */
    @Test
    public void disruptionsTest() {
        // TODO: test disruptions
    }

    /**
     * Test the property 'distance'
     */
    @Test
    public void distanceTest() {
        // TODO: test distance
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'hasFixedLocations'
     */
    @Test
    public void hasFixedLocationsTest() {
        // TODO: test hasFixedLocations
    }

    /**
     * Test the property 'instruction'
     */
    @Test
    public void instructionTest() {
        // TODO: test instruction
    }

    /**
     * Test the property 'interChangeDuration'
     */
    @Test
    public void interChangeDurationTest() {
        // TODO: test interChangeDuration
    }

    /**
     * Test the property 'interChangePosition'
     */
    @Test
    public void interChangePositionTest() {
        // TODO: test interChangePosition
    }

    /**
     * Test the property 'isDisrupted'
     */
    @Test
    public void isDisruptedTest() {
        // TODO: test isDisrupted
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'obstacles'
     */
    @Test
    public void obstaclesTest() {
        // TODO: test obstacles
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'plannedWorks'
     */
    @Test
    public void plannedWorksTest() {
        // TODO: test plannedWorks
    }

    /**
     * Test the property 'routeOptions'
     */
    @Test
    public void routeOptionsTest() {
        // TODO: test routeOptions
    }

    /**
     * Test the property 'scheduledArrivalTime'
     */
    @Test
    public void scheduledArrivalTimeTest() {
        // TODO: test scheduledArrivalTime
    }

    /**
     * Test the property 'scheduledDepartureTime'
     */
    @Test
    public void scheduledDepartureTimeTest() {
        // TODO: test scheduledDepartureTime
    }

    /**
     * Test the property 'speed'
     */
    @Test
    public void speedTest() {
        // TODO: test speed
    }

}
