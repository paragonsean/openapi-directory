/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerFareTap;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesJourneyPlannerFare
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesJourneyPlannerFare {
  public static final String SERIALIZED_NAME_CHARGE_LEVEL = "chargeLevel";
  @SerializedName(SERIALIZED_NAME_CHARGE_LEVEL)
  private String chargeLevel;

  public static final String SERIALIZED_NAME_CHARGE_PROFILE_NAME = "chargeProfileName";
  @SerializedName(SERIALIZED_NAME_CHARGE_PROFILE_NAME)
  private String chargeProfileName;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private Integer cost;

  public static final String SERIALIZED_NAME_HIGH_ZONE = "highZone";
  @SerializedName(SERIALIZED_NAME_HIGH_ZONE)
  private Integer highZone;

  public static final String SERIALIZED_NAME_IS_HOPPER_FARE = "isHopperFare";
  @SerializedName(SERIALIZED_NAME_IS_HOPPER_FARE)
  private Boolean isHopperFare;

  public static final String SERIALIZED_NAME_LOW_ZONE = "lowZone";
  @SerializedName(SERIALIZED_NAME_LOW_ZONE)
  private Integer lowZone;

  public static final String SERIALIZED_NAME_OFF_PEAK = "offPeak";
  @SerializedName(SERIALIZED_NAME_OFF_PEAK)
  private Integer offPeak;

  public static final String SERIALIZED_NAME_PEAK = "peak";
  @SerializedName(SERIALIZED_NAME_PEAK)
  private Integer peak;

  public static final String SERIALIZED_NAME_TAPS = "taps";
  @SerializedName(SERIALIZED_NAME_TAPS)
  private List<TflApiPresentationEntitiesJourneyPlannerFareTap> taps = new ArrayList<>();

  public TflApiPresentationEntitiesJourneyPlannerFare() {
  }

  public TflApiPresentationEntitiesJourneyPlannerFare chargeLevel(String chargeLevel) {
    this.chargeLevel = chargeLevel;
    return this;
  }

  /**
   * Get chargeLevel
   * @return chargeLevel
   */
  @javax.annotation.Nullable
  public String getChargeLevel() {
    return chargeLevel;
  }

  public void setChargeLevel(String chargeLevel) {
    this.chargeLevel = chargeLevel;
  }


  public TflApiPresentationEntitiesJourneyPlannerFare chargeProfileName(String chargeProfileName) {
    this.chargeProfileName = chargeProfileName;
    return this;
  }

  /**
   * Get chargeProfileName
   * @return chargeProfileName
   */
  @javax.annotation.Nullable
  public String getChargeProfileName() {
    return chargeProfileName;
  }

  public void setChargeProfileName(String chargeProfileName) {
    this.chargeProfileName = chargeProfileName;
  }


  public TflApiPresentationEntitiesJourneyPlannerFare cost(Integer cost) {
    this.cost = cost;
    return this;
  }

  /**
   * Get cost
   * @return cost
   */
  @javax.annotation.Nullable
  public Integer getCost() {
    return cost;
  }

  public void setCost(Integer cost) {
    this.cost = cost;
  }


  public TflApiPresentationEntitiesJourneyPlannerFare highZone(Integer highZone) {
    this.highZone = highZone;
    return this;
  }

  /**
   * Get highZone
   * @return highZone
   */
  @javax.annotation.Nullable
  public Integer getHighZone() {
    return highZone;
  }

  public void setHighZone(Integer highZone) {
    this.highZone = highZone;
  }


  public TflApiPresentationEntitiesJourneyPlannerFare isHopperFare(Boolean isHopperFare) {
    this.isHopperFare = isHopperFare;
    return this;
  }

  /**
   * Get isHopperFare
   * @return isHopperFare
   */
  @javax.annotation.Nullable
  public Boolean getIsHopperFare() {
    return isHopperFare;
  }

  public void setIsHopperFare(Boolean isHopperFare) {
    this.isHopperFare = isHopperFare;
  }


  public TflApiPresentationEntitiesJourneyPlannerFare lowZone(Integer lowZone) {
    this.lowZone = lowZone;
    return this;
  }

  /**
   * Get lowZone
   * @return lowZone
   */
  @javax.annotation.Nullable
  public Integer getLowZone() {
    return lowZone;
  }

  public void setLowZone(Integer lowZone) {
    this.lowZone = lowZone;
  }


  public TflApiPresentationEntitiesJourneyPlannerFare offPeak(Integer offPeak) {
    this.offPeak = offPeak;
    return this;
  }

  /**
   * Get offPeak
   * @return offPeak
   */
  @javax.annotation.Nullable
  public Integer getOffPeak() {
    return offPeak;
  }

  public void setOffPeak(Integer offPeak) {
    this.offPeak = offPeak;
  }


  public TflApiPresentationEntitiesJourneyPlannerFare peak(Integer peak) {
    this.peak = peak;
    return this;
  }

  /**
   * Get peak
   * @return peak
   */
  @javax.annotation.Nullable
  public Integer getPeak() {
    return peak;
  }

  public void setPeak(Integer peak) {
    this.peak = peak;
  }


  public TflApiPresentationEntitiesJourneyPlannerFare taps(List<TflApiPresentationEntitiesJourneyPlannerFareTap> taps) {
    this.taps = taps;
    return this;
  }

  public TflApiPresentationEntitiesJourneyPlannerFare addTapsItem(TflApiPresentationEntitiesJourneyPlannerFareTap tapsItem) {
    if (this.taps == null) {
      this.taps = new ArrayList<>();
    }
    this.taps.add(tapsItem);
    return this;
  }

  /**
   * Get taps
   * @return taps
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesJourneyPlannerFareTap> getTaps() {
    return taps;
  }

  public void setTaps(List<TflApiPresentationEntitiesJourneyPlannerFareTap> taps) {
    this.taps = taps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesJourneyPlannerFare tflApiPresentationEntitiesJourneyPlannerFare = (TflApiPresentationEntitiesJourneyPlannerFare) o;
    return Objects.equals(this.chargeLevel, tflApiPresentationEntitiesJourneyPlannerFare.chargeLevel) &&
        Objects.equals(this.chargeProfileName, tflApiPresentationEntitiesJourneyPlannerFare.chargeProfileName) &&
        Objects.equals(this.cost, tflApiPresentationEntitiesJourneyPlannerFare.cost) &&
        Objects.equals(this.highZone, tflApiPresentationEntitiesJourneyPlannerFare.highZone) &&
        Objects.equals(this.isHopperFare, tflApiPresentationEntitiesJourneyPlannerFare.isHopperFare) &&
        Objects.equals(this.lowZone, tflApiPresentationEntitiesJourneyPlannerFare.lowZone) &&
        Objects.equals(this.offPeak, tflApiPresentationEntitiesJourneyPlannerFare.offPeak) &&
        Objects.equals(this.peak, tflApiPresentationEntitiesJourneyPlannerFare.peak) &&
        Objects.equals(this.taps, tflApiPresentationEntitiesJourneyPlannerFare.taps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chargeLevel, chargeProfileName, cost, highZone, isHopperFare, lowZone, offPeak, peak, taps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesJourneyPlannerFare {\n");
    sb.append("    chargeLevel: ").append(toIndentedString(chargeLevel)).append("\n");
    sb.append("    chargeProfileName: ").append(toIndentedString(chargeProfileName)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    highZone: ").append(toIndentedString(highZone)).append("\n");
    sb.append("    isHopperFare: ").append(toIndentedString(isHopperFare)).append("\n");
    sb.append("    lowZone: ").append(toIndentedString(lowZone)).append("\n");
    sb.append("    offPeak: ").append(toIndentedString(offPeak)).append("\n");
    sb.append("    peak: ").append(toIndentedString(peak)).append("\n");
    sb.append("    taps: ").append(toIndentedString(taps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chargeLevel");
    openapiFields.add("chargeProfileName");
    openapiFields.add("cost");
    openapiFields.add("highZone");
    openapiFields.add("isHopperFare");
    openapiFields.add("lowZone");
    openapiFields.add("offPeak");
    openapiFields.add("peak");
    openapiFields.add("taps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesJourneyPlannerFare
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesJourneyPlannerFare.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesJourneyPlannerFare is not found in the empty JSON string", TflApiPresentationEntitiesJourneyPlannerFare.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesJourneyPlannerFare.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesJourneyPlannerFare` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("chargeLevel") != null && !jsonObj.get("chargeLevel").isJsonNull()) && !jsonObj.get("chargeLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chargeLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chargeLevel").toString()));
      }
      if ((jsonObj.get("chargeProfileName") != null && !jsonObj.get("chargeProfileName").isJsonNull()) && !jsonObj.get("chargeProfileName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chargeProfileName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chargeProfileName").toString()));
      }
      if (jsonObj.get("taps") != null && !jsonObj.get("taps").isJsonNull()) {
        JsonArray jsonArraytaps = jsonObj.getAsJsonArray("taps");
        if (jsonArraytaps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taps` to be an array in the JSON string but got `%s`", jsonObj.get("taps").toString()));
          }

          // validate the optional field `taps` (array)
          for (int i = 0; i < jsonArraytaps.size(); i++) {
            TflApiPresentationEntitiesJourneyPlannerFareTap.validateJsonElement(jsonArraytaps.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesJourneyPlannerFare.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesJourneyPlannerFare' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesJourneyPlannerFare> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesJourneyPlannerFare.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesJourneyPlannerFare>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesJourneyPlannerFare value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesJourneyPlannerFare read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesJourneyPlannerFare given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesJourneyPlannerFare
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesJourneyPlannerFare
   */
  public static TflApiPresentationEntitiesJourneyPlannerFare fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesJourneyPlannerFare.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesJourneyPlannerFare to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

