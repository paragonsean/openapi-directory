/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesSearchMatch;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesSearchResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesSearchResponse {
  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private Integer from;

  public static final String SERIALIZED_NAME_MATCHES = "matches";
  @SerializedName(SERIALIZED_NAME_MATCHES)
  private List<TflApiPresentationEntitiesSearchMatch> matches = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_SCORE = "maxScore";
  @SerializedName(SERIALIZED_NAME_MAX_SCORE)
  private Double maxScore;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PROVIDER = "provider";
  @SerializedName(SERIALIZED_NAME_PROVIDER)
  private String provider;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public TflApiPresentationEntitiesSearchResponse() {
  }

  public TflApiPresentationEntitiesSearchResponse from(Integer from) {
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   */
  @javax.annotation.Nullable
  public Integer getFrom() {
    return from;
  }

  public void setFrom(Integer from) {
    this.from = from;
  }


  public TflApiPresentationEntitiesSearchResponse matches(List<TflApiPresentationEntitiesSearchMatch> matches) {
    this.matches = matches;
    return this;
  }

  public TflApiPresentationEntitiesSearchResponse addMatchesItem(TflApiPresentationEntitiesSearchMatch matchesItem) {
    if (this.matches == null) {
      this.matches = new ArrayList<>();
    }
    this.matches.add(matchesItem);
    return this;
  }

  /**
   * Get matches
   * @return matches
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesSearchMatch> getMatches() {
    return matches;
  }

  public void setMatches(List<TflApiPresentationEntitiesSearchMatch> matches) {
    this.matches = matches;
  }


  public TflApiPresentationEntitiesSearchResponse maxScore(Double maxScore) {
    this.maxScore = maxScore;
    return this;
  }

  /**
   * Get maxScore
   * @return maxScore
   */
  @javax.annotation.Nullable
  public Double getMaxScore() {
    return maxScore;
  }

  public void setMaxScore(Double maxScore) {
    this.maxScore = maxScore;
  }


  public TflApiPresentationEntitiesSearchResponse page(Integer page) {
    this.page = page;
    return this;
  }

  /**
   * Get page
   * @return page
   */
  @javax.annotation.Nullable
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }


  public TflApiPresentationEntitiesSearchResponse pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Get pageSize
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public TflApiPresentationEntitiesSearchResponse provider(String provider) {
    this.provider = provider;
    return this;
  }

  /**
   * Get provider
   * @return provider
   */
  @javax.annotation.Nullable
  public String getProvider() {
    return provider;
  }

  public void setProvider(String provider) {
    this.provider = provider;
  }


  public TflApiPresentationEntitiesSearchResponse query(String query) {
    this.query = query;
    return this;
  }

  /**
   * Get query
   * @return query
   */
  @javax.annotation.Nullable
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }


  public TflApiPresentationEntitiesSearchResponse total(Integer total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesSearchResponse tflApiPresentationEntitiesSearchResponse = (TflApiPresentationEntitiesSearchResponse) o;
    return Objects.equals(this.from, tflApiPresentationEntitiesSearchResponse.from) &&
        Objects.equals(this.matches, tflApiPresentationEntitiesSearchResponse.matches) &&
        Objects.equals(this.maxScore, tflApiPresentationEntitiesSearchResponse.maxScore) &&
        Objects.equals(this.page, tflApiPresentationEntitiesSearchResponse.page) &&
        Objects.equals(this.pageSize, tflApiPresentationEntitiesSearchResponse.pageSize) &&
        Objects.equals(this.provider, tflApiPresentationEntitiesSearchResponse.provider) &&
        Objects.equals(this.query, tflApiPresentationEntitiesSearchResponse.query) &&
        Objects.equals(this.total, tflApiPresentationEntitiesSearchResponse.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, matches, maxScore, page, pageSize, provider, query, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesSearchResponse {\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    matches: ").append(toIndentedString(matches)).append("\n");
    sb.append("    maxScore: ").append(toIndentedString(maxScore)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("from");
    openapiFields.add("matches");
    openapiFields.add("maxScore");
    openapiFields.add("page");
    openapiFields.add("pageSize");
    openapiFields.add("provider");
    openapiFields.add("query");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesSearchResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesSearchResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesSearchResponse is not found in the empty JSON string", TflApiPresentationEntitiesSearchResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesSearchResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesSearchResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("matches") != null && !jsonObj.get("matches").isJsonNull()) {
        JsonArray jsonArraymatches = jsonObj.getAsJsonArray("matches");
        if (jsonArraymatches != null) {
          // ensure the json data is an array
          if (!jsonObj.get("matches").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `matches` to be an array in the JSON string but got `%s`", jsonObj.get("matches").toString()));
          }

          // validate the optional field `matches` (array)
          for (int i = 0; i < jsonArraymatches.size(); i++) {
            TflApiPresentationEntitiesSearchMatch.validateJsonElement(jsonArraymatches.get(i));
          };
        }
      }
      if ((jsonObj.get("provider") != null && !jsonObj.get("provider").isJsonNull()) && !jsonObj.get("provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provider").toString()));
      }
      if ((jsonObj.get("query") != null && !jsonObj.get("query").isJsonNull()) && !jsonObj.get("query").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `query` to be a primitive type in the JSON string but got `%s`", jsonObj.get("query").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesSearchResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesSearchResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesSearchResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesSearchResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesSearchResponse>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesSearchResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesSearchResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesSearchResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesSearchResponse
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesSearchResponse
   */
  public static TflApiPresentationEntitiesSearchResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesSearchResponse.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesSearchResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

