/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesMessage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesFaresFareBounds
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesFaresFareBounds {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DISPLAY_ORDER = "displayOrder";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ORDER)
  private Integer displayOrder;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IS_POPULAR_FARE = "isPopularFare";
  @SerializedName(SERIALIZED_NAME_IS_POPULAR_FARE)
  private Boolean isPopularFare;

  public static final String SERIALIZED_NAME_IS_POPULAR_TRAVEL_CARD = "isPopularTravelCard";
  @SerializedName(SERIALIZED_NAME_IS_POPULAR_TRAVEL_CARD)
  private Boolean isPopularTravelCard;

  public static final String SERIALIZED_NAME_IS_TOUR = "isTour";
  @SerializedName(SERIALIZED_NAME_IS_TOUR)
  private Boolean isTour;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<TflApiPresentationEntitiesMessage> messages = new ArrayList<>();

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private String operator;

  public static final String SERIALIZED_NAME_ROUTE_CODE = "routeCode";
  @SerializedName(SERIALIZED_NAME_ROUTE_CODE)
  private String routeCode;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private String to;

  public static final String SERIALIZED_NAME_VIA = "via";
  @SerializedName(SERIALIZED_NAME_VIA)
  private String via;

  public TflApiPresentationEntitiesFaresFareBounds() {
  }

  public TflApiPresentationEntitiesFaresFareBounds description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TflApiPresentationEntitiesFaresFareBounds displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public TflApiPresentationEntitiesFaresFareBounds displayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
    return this;
  }

  /**
   * Get displayOrder
   * @return displayOrder
   */
  @javax.annotation.Nullable
  public Integer getDisplayOrder() {
    return displayOrder;
  }

  public void setDisplayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
  }


  public TflApiPresentationEntitiesFaresFareBounds from(String from) {
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   */
  @javax.annotation.Nullable
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }


  public TflApiPresentationEntitiesFaresFareBounds id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public TflApiPresentationEntitiesFaresFareBounds isPopularFare(Boolean isPopularFare) {
    this.isPopularFare = isPopularFare;
    return this;
  }

  /**
   * Get isPopularFare
   * @return isPopularFare
   */
  @javax.annotation.Nullable
  public Boolean getIsPopularFare() {
    return isPopularFare;
  }

  public void setIsPopularFare(Boolean isPopularFare) {
    this.isPopularFare = isPopularFare;
  }


  public TflApiPresentationEntitiesFaresFareBounds isPopularTravelCard(Boolean isPopularTravelCard) {
    this.isPopularTravelCard = isPopularTravelCard;
    return this;
  }

  /**
   * Get isPopularTravelCard
   * @return isPopularTravelCard
   */
  @javax.annotation.Nullable
  public Boolean getIsPopularTravelCard() {
    return isPopularTravelCard;
  }

  public void setIsPopularTravelCard(Boolean isPopularTravelCard) {
    this.isPopularTravelCard = isPopularTravelCard;
  }


  public TflApiPresentationEntitiesFaresFareBounds isTour(Boolean isTour) {
    this.isTour = isTour;
    return this;
  }

  /**
   * Get isTour
   * @return isTour
   */
  @javax.annotation.Nullable
  public Boolean getIsTour() {
    return isTour;
  }

  public void setIsTour(Boolean isTour) {
    this.isTour = isTour;
  }


  public TflApiPresentationEntitiesFaresFareBounds messages(List<TflApiPresentationEntitiesMessage> messages) {
    this.messages = messages;
    return this;
  }

  public TflApiPresentationEntitiesFaresFareBounds addMessagesItem(TflApiPresentationEntitiesMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * Get messages
   * @return messages
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMessage> getMessages() {
    return messages;
  }

  public void setMessages(List<TflApiPresentationEntitiesMessage> messages) {
    this.messages = messages;
  }


  public TflApiPresentationEntitiesFaresFareBounds operator(String operator) {
    this.operator = operator;
    return this;
  }

  /**
   * Get operator
   * @return operator
   */
  @javax.annotation.Nullable
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }


  public TflApiPresentationEntitiesFaresFareBounds routeCode(String routeCode) {
    this.routeCode = routeCode;
    return this;
  }

  /**
   * Get routeCode
   * @return routeCode
   */
  @javax.annotation.Nullable
  public String getRouteCode() {
    return routeCode;
  }

  public void setRouteCode(String routeCode) {
    this.routeCode = routeCode;
  }


  public TflApiPresentationEntitiesFaresFareBounds to(String to) {
    this.to = to;
    return this;
  }

  /**
   * Get to
   * @return to
   */
  @javax.annotation.Nullable
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }


  public TflApiPresentationEntitiesFaresFareBounds via(String via) {
    this.via = via;
    return this;
  }

  /**
   * Get via
   * @return via
   */
  @javax.annotation.Nullable
  public String getVia() {
    return via;
  }

  public void setVia(String via) {
    this.via = via;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesFaresFareBounds tflApiPresentationEntitiesFaresFareBounds = (TflApiPresentationEntitiesFaresFareBounds) o;
    return Objects.equals(this.description, tflApiPresentationEntitiesFaresFareBounds.description) &&
        Objects.equals(this.displayName, tflApiPresentationEntitiesFaresFareBounds.displayName) &&
        Objects.equals(this.displayOrder, tflApiPresentationEntitiesFaresFareBounds.displayOrder) &&
        Objects.equals(this.from, tflApiPresentationEntitiesFaresFareBounds.from) &&
        Objects.equals(this.id, tflApiPresentationEntitiesFaresFareBounds.id) &&
        Objects.equals(this.isPopularFare, tflApiPresentationEntitiesFaresFareBounds.isPopularFare) &&
        Objects.equals(this.isPopularTravelCard, tflApiPresentationEntitiesFaresFareBounds.isPopularTravelCard) &&
        Objects.equals(this.isTour, tflApiPresentationEntitiesFaresFareBounds.isTour) &&
        Objects.equals(this.messages, tflApiPresentationEntitiesFaresFareBounds.messages) &&
        Objects.equals(this.operator, tflApiPresentationEntitiesFaresFareBounds.operator) &&
        Objects.equals(this.routeCode, tflApiPresentationEntitiesFaresFareBounds.routeCode) &&
        Objects.equals(this.to, tflApiPresentationEntitiesFaresFareBounds.to) &&
        Objects.equals(this.via, tflApiPresentationEntitiesFaresFareBounds.via);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, displayName, displayOrder, from, id, isPopularFare, isPopularTravelCard, isTour, messages, operator, routeCode, to, via);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesFaresFareBounds {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isPopularFare: ").append(toIndentedString(isPopularFare)).append("\n");
    sb.append("    isPopularTravelCard: ").append(toIndentedString(isPopularTravelCard)).append("\n");
    sb.append("    isTour: ").append(toIndentedString(isTour)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    routeCode: ").append(toIndentedString(routeCode)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    via: ").append(toIndentedString(via)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("displayOrder");
    openapiFields.add("from");
    openapiFields.add("id");
    openapiFields.add("isPopularFare");
    openapiFields.add("isPopularTravelCard");
    openapiFields.add("isTour");
    openapiFields.add("messages");
    openapiFields.add("operator");
    openapiFields.add("routeCode");
    openapiFields.add("to");
    openapiFields.add("via");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesFaresFareBounds
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesFaresFareBounds.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesFaresFareBounds is not found in the empty JSON string", TflApiPresentationEntitiesFaresFareBounds.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesFaresFareBounds.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesFaresFareBounds` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("from") != null && !jsonObj.get("from").isJsonNull()) && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            TflApiPresentationEntitiesMessage.validateJsonElement(jsonArraymessages.get(i));
          };
        }
      }
      if ((jsonObj.get("operator") != null && !jsonObj.get("operator").isJsonNull()) && !jsonObj.get("operator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operator").toString()));
      }
      if ((jsonObj.get("routeCode") != null && !jsonObj.get("routeCode").isJsonNull()) && !jsonObj.get("routeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routeCode").toString()));
      }
      if ((jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) && !jsonObj.get("to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to").toString()));
      }
      if ((jsonObj.get("via") != null && !jsonObj.get("via").isJsonNull()) && !jsonObj.get("via").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `via` to be a primitive type in the JSON string but got `%s`", jsonObj.get("via").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesFaresFareBounds.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesFaresFareBounds' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesFaresFareBounds> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesFaresFareBounds.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesFaresFareBounds>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesFaresFareBounds value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesFaresFareBounds read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesFaresFareBounds given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesFaresFareBounds
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesFaresFareBounds
   */
  public static TflApiPresentationEntitiesFaresFareBounds fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesFaresFareBounds.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesFaresFareBounds to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

