/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SystemDataSpatialDbGeographyWellKnownValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SystemDataSpatialDbGeographyWellKnownValue {
  public static final String SERIALIZED_NAME_COORDINATE_SYSTEM_ID = "coordinateSystemId";
  @SerializedName(SERIALIZED_NAME_COORDINATE_SYSTEM_ID)
  private Integer coordinateSystemId;

  public static final String SERIALIZED_NAME_WELL_KNOWN_BINARY = "wellKnownBinary";
  @SerializedName(SERIALIZED_NAME_WELL_KNOWN_BINARY)
  private byte[] wellKnownBinary;

  public static final String SERIALIZED_NAME_WELL_KNOWN_TEXT = "wellKnownText";
  @SerializedName(SERIALIZED_NAME_WELL_KNOWN_TEXT)
  private String wellKnownText;

  public SystemDataSpatialDbGeographyWellKnownValue() {
  }

  public SystemDataSpatialDbGeographyWellKnownValue coordinateSystemId(Integer coordinateSystemId) {
    this.coordinateSystemId = coordinateSystemId;
    return this;
  }

  /**
   * Get coordinateSystemId
   * @return coordinateSystemId
   */
  @javax.annotation.Nullable
  public Integer getCoordinateSystemId() {
    return coordinateSystemId;
  }

  public void setCoordinateSystemId(Integer coordinateSystemId) {
    this.coordinateSystemId = coordinateSystemId;
  }


  public SystemDataSpatialDbGeographyWellKnownValue wellKnownBinary(byte[] wellKnownBinary) {
    this.wellKnownBinary = wellKnownBinary;
    return this;
  }

  /**
   * Get wellKnownBinary
   * @return wellKnownBinary
   */
  @javax.annotation.Nullable
  public byte[] getWellKnownBinary() {
    return wellKnownBinary;
  }

  public void setWellKnownBinary(byte[] wellKnownBinary) {
    this.wellKnownBinary = wellKnownBinary;
  }


  public SystemDataSpatialDbGeographyWellKnownValue wellKnownText(String wellKnownText) {
    this.wellKnownText = wellKnownText;
    return this;
  }

  /**
   * Get wellKnownText
   * @return wellKnownText
   */
  @javax.annotation.Nullable
  public String getWellKnownText() {
    return wellKnownText;
  }

  public void setWellKnownText(String wellKnownText) {
    this.wellKnownText = wellKnownText;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemDataSpatialDbGeographyWellKnownValue systemDataSpatialDbGeographyWellKnownValue = (SystemDataSpatialDbGeographyWellKnownValue) o;
    return Objects.equals(this.coordinateSystemId, systemDataSpatialDbGeographyWellKnownValue.coordinateSystemId) &&
        Arrays.equals(this.wellKnownBinary, systemDataSpatialDbGeographyWellKnownValue.wellKnownBinary) &&
        Objects.equals(this.wellKnownText, systemDataSpatialDbGeographyWellKnownValue.wellKnownText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordinateSystemId, Arrays.hashCode(wellKnownBinary), wellKnownText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemDataSpatialDbGeographyWellKnownValue {\n");
    sb.append("    coordinateSystemId: ").append(toIndentedString(coordinateSystemId)).append("\n");
    sb.append("    wellKnownBinary: ").append(toIndentedString(wellKnownBinary)).append("\n");
    sb.append("    wellKnownText: ").append(toIndentedString(wellKnownText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("coordinateSystemId");
    openapiFields.add("wellKnownBinary");
    openapiFields.add("wellKnownText");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SystemDataSpatialDbGeographyWellKnownValue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SystemDataSpatialDbGeographyWellKnownValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SystemDataSpatialDbGeographyWellKnownValue is not found in the empty JSON string", SystemDataSpatialDbGeographyWellKnownValue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SystemDataSpatialDbGeographyWellKnownValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SystemDataSpatialDbGeographyWellKnownValue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("wellKnownText") != null && !jsonObj.get("wellKnownText").isJsonNull()) && !jsonObj.get("wellKnownText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wellKnownText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wellKnownText").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SystemDataSpatialDbGeographyWellKnownValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SystemDataSpatialDbGeographyWellKnownValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SystemDataSpatialDbGeographyWellKnownValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SystemDataSpatialDbGeographyWellKnownValue.class));

       return (TypeAdapter<T>) new TypeAdapter<SystemDataSpatialDbGeographyWellKnownValue>() {
           @Override
           public void write(JsonWriter out, SystemDataSpatialDbGeographyWellKnownValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SystemDataSpatialDbGeographyWellKnownValue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SystemDataSpatialDbGeographyWellKnownValue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SystemDataSpatialDbGeographyWellKnownValue
   * @throws IOException if the JSON string is invalid with respect to SystemDataSpatialDbGeographyWellKnownValue
   */
  public static SystemDataSpatialDbGeographyWellKnownValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SystemDataSpatialDbGeographyWellKnownValue.class);
  }

  /**
   * Convert an instance of SystemDataSpatialDbGeographyWellKnownValue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

