/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesCrowding;
import org.openapitools.client.model.TflApiPresentationEntitiesDisruption;
import org.openapitools.client.model.TflApiPresentationEntitiesLineServiceTypeInfo;
import org.openapitools.client.model.TflApiPresentationEntitiesLineStatus;
import org.openapitools.client.model.TflApiPresentationEntitiesMatchedRoute;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesLine
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesLine {
  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_CROWDING = "crowding";
  @SerializedName(SERIALIZED_NAME_CROWDING)
  private TflApiPresentationEntitiesCrowding crowding;

  public static final String SERIALIZED_NAME_DISRUPTIONS = "disruptions";
  @SerializedName(SERIALIZED_NAME_DISRUPTIONS)
  private List<TflApiPresentationEntitiesDisruption> disruptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LINE_STATUSES = "lineStatuses";
  @SerializedName(SERIALIZED_NAME_LINE_STATUSES)
  private List<TflApiPresentationEntitiesLineStatus> lineStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_MODE_NAME = "modeName";
  @SerializedName(SERIALIZED_NAME_MODE_NAME)
  private String modeName;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ROUTE_SECTIONS = "routeSections";
  @SerializedName(SERIALIZED_NAME_ROUTE_SECTIONS)
  private List<TflApiPresentationEntitiesMatchedRoute> routeSections = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_TYPES = "serviceTypes";
  @SerializedName(SERIALIZED_NAME_SERVICE_TYPES)
  private List<TflApiPresentationEntitiesLineServiceTypeInfo> serviceTypes = new ArrayList<>();

  public TflApiPresentationEntitiesLine() {
  }

  public TflApiPresentationEntitiesLine created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   * @return created
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public TflApiPresentationEntitiesLine crowding(TflApiPresentationEntitiesCrowding crowding) {
    this.crowding = crowding;
    return this;
  }

  /**
   * Get crowding
   * @return crowding
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesCrowding getCrowding() {
    return crowding;
  }

  public void setCrowding(TflApiPresentationEntitiesCrowding crowding) {
    this.crowding = crowding;
  }


  public TflApiPresentationEntitiesLine disruptions(List<TflApiPresentationEntitiesDisruption> disruptions) {
    this.disruptions = disruptions;
    return this;
  }

  public TflApiPresentationEntitiesLine addDisruptionsItem(TflApiPresentationEntitiesDisruption disruptionsItem) {
    if (this.disruptions == null) {
      this.disruptions = new ArrayList<>();
    }
    this.disruptions.add(disruptionsItem);
    return this;
  }

  /**
   * Get disruptions
   * @return disruptions
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesDisruption> getDisruptions() {
    return disruptions;
  }

  public void setDisruptions(List<TflApiPresentationEntitiesDisruption> disruptions) {
    this.disruptions = disruptions;
  }


  public TflApiPresentationEntitiesLine id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TflApiPresentationEntitiesLine lineStatuses(List<TflApiPresentationEntitiesLineStatus> lineStatuses) {
    this.lineStatuses = lineStatuses;
    return this;
  }

  public TflApiPresentationEntitiesLine addLineStatusesItem(TflApiPresentationEntitiesLineStatus lineStatusesItem) {
    if (this.lineStatuses == null) {
      this.lineStatuses = new ArrayList<>();
    }
    this.lineStatuses.add(lineStatusesItem);
    return this;
  }

  /**
   * Get lineStatuses
   * @return lineStatuses
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesLineStatus> getLineStatuses() {
    return lineStatuses;
  }

  public void setLineStatuses(List<TflApiPresentationEntitiesLineStatus> lineStatuses) {
    this.lineStatuses = lineStatuses;
  }


  public TflApiPresentationEntitiesLine modeName(String modeName) {
    this.modeName = modeName;
    return this;
  }

  /**
   * Get modeName
   * @return modeName
   */
  @javax.annotation.Nullable
  public String getModeName() {
    return modeName;
  }

  public void setModeName(String modeName) {
    this.modeName = modeName;
  }


  public TflApiPresentationEntitiesLine modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

  /**
   * Get modified
   * @return modified
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }


  public TflApiPresentationEntitiesLine name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TflApiPresentationEntitiesLine routeSections(List<TflApiPresentationEntitiesMatchedRoute> routeSections) {
    this.routeSections = routeSections;
    return this;
  }

  public TflApiPresentationEntitiesLine addRouteSectionsItem(TflApiPresentationEntitiesMatchedRoute routeSectionsItem) {
    if (this.routeSections == null) {
      this.routeSections = new ArrayList<>();
    }
    this.routeSections.add(routeSectionsItem);
    return this;
  }

  /**
   * Get routeSections
   * @return routeSections
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMatchedRoute> getRouteSections() {
    return routeSections;
  }

  public void setRouteSections(List<TflApiPresentationEntitiesMatchedRoute> routeSections) {
    this.routeSections = routeSections;
  }


  public TflApiPresentationEntitiesLine serviceTypes(List<TflApiPresentationEntitiesLineServiceTypeInfo> serviceTypes) {
    this.serviceTypes = serviceTypes;
    return this;
  }

  public TflApiPresentationEntitiesLine addServiceTypesItem(TflApiPresentationEntitiesLineServiceTypeInfo serviceTypesItem) {
    if (this.serviceTypes == null) {
      this.serviceTypes = new ArrayList<>();
    }
    this.serviceTypes.add(serviceTypesItem);
    return this;
  }

  /**
   * Get serviceTypes
   * @return serviceTypes
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesLineServiceTypeInfo> getServiceTypes() {
    return serviceTypes;
  }

  public void setServiceTypes(List<TflApiPresentationEntitiesLineServiceTypeInfo> serviceTypes) {
    this.serviceTypes = serviceTypes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesLine tflApiPresentationEntitiesLine = (TflApiPresentationEntitiesLine) o;
    return Objects.equals(this.created, tflApiPresentationEntitiesLine.created) &&
        Objects.equals(this.crowding, tflApiPresentationEntitiesLine.crowding) &&
        Objects.equals(this.disruptions, tflApiPresentationEntitiesLine.disruptions) &&
        Objects.equals(this.id, tflApiPresentationEntitiesLine.id) &&
        Objects.equals(this.lineStatuses, tflApiPresentationEntitiesLine.lineStatuses) &&
        Objects.equals(this.modeName, tflApiPresentationEntitiesLine.modeName) &&
        Objects.equals(this.modified, tflApiPresentationEntitiesLine.modified) &&
        Objects.equals(this.name, tflApiPresentationEntitiesLine.name) &&
        Objects.equals(this.routeSections, tflApiPresentationEntitiesLine.routeSections) &&
        Objects.equals(this.serviceTypes, tflApiPresentationEntitiesLine.serviceTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, crowding, disruptions, id, lineStatuses, modeName, modified, name, routeSections, serviceTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesLine {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    crowding: ").append(toIndentedString(crowding)).append("\n");
    sb.append("    disruptions: ").append(toIndentedString(disruptions)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lineStatuses: ").append(toIndentedString(lineStatuses)).append("\n");
    sb.append("    modeName: ").append(toIndentedString(modeName)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    routeSections: ").append(toIndentedString(routeSections)).append("\n");
    sb.append("    serviceTypes: ").append(toIndentedString(serviceTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created");
    openapiFields.add("crowding");
    openapiFields.add("disruptions");
    openapiFields.add("id");
    openapiFields.add("lineStatuses");
    openapiFields.add("modeName");
    openapiFields.add("modified");
    openapiFields.add("name");
    openapiFields.add("routeSections");
    openapiFields.add("serviceTypes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesLine
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesLine.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesLine is not found in the empty JSON string", TflApiPresentationEntitiesLine.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesLine.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesLine` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `crowding`
      if (jsonObj.get("crowding") != null && !jsonObj.get("crowding").isJsonNull()) {
        TflApiPresentationEntitiesCrowding.validateJsonElement(jsonObj.get("crowding"));
      }
      if (jsonObj.get("disruptions") != null && !jsonObj.get("disruptions").isJsonNull()) {
        JsonArray jsonArraydisruptions = jsonObj.getAsJsonArray("disruptions");
        if (jsonArraydisruptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("disruptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `disruptions` to be an array in the JSON string but got `%s`", jsonObj.get("disruptions").toString()));
          }

          // validate the optional field `disruptions` (array)
          for (int i = 0; i < jsonArraydisruptions.size(); i++) {
            TflApiPresentationEntitiesDisruption.validateJsonElement(jsonArraydisruptions.get(i));
          };
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("lineStatuses") != null && !jsonObj.get("lineStatuses").isJsonNull()) {
        JsonArray jsonArraylineStatuses = jsonObj.getAsJsonArray("lineStatuses");
        if (jsonArraylineStatuses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineStatuses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineStatuses` to be an array in the JSON string but got `%s`", jsonObj.get("lineStatuses").toString()));
          }

          // validate the optional field `lineStatuses` (array)
          for (int i = 0; i < jsonArraylineStatuses.size(); i++) {
            TflApiPresentationEntitiesLineStatus.validateJsonElement(jsonArraylineStatuses.get(i));
          };
        }
      }
      if ((jsonObj.get("modeName") != null && !jsonObj.get("modeName").isJsonNull()) && !jsonObj.get("modeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modeName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("routeSections") != null && !jsonObj.get("routeSections").isJsonNull()) {
        JsonArray jsonArrayrouteSections = jsonObj.getAsJsonArray("routeSections");
        if (jsonArrayrouteSections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("routeSections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `routeSections` to be an array in the JSON string but got `%s`", jsonObj.get("routeSections").toString()));
          }

          // validate the optional field `routeSections` (array)
          for (int i = 0; i < jsonArrayrouteSections.size(); i++) {
            TflApiPresentationEntitiesMatchedRoute.validateJsonElement(jsonArrayrouteSections.get(i));
          };
        }
      }
      if (jsonObj.get("serviceTypes") != null && !jsonObj.get("serviceTypes").isJsonNull()) {
        JsonArray jsonArrayserviceTypes = jsonObj.getAsJsonArray("serviceTypes");
        if (jsonArrayserviceTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serviceTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serviceTypes` to be an array in the JSON string but got `%s`", jsonObj.get("serviceTypes").toString()));
          }

          // validate the optional field `serviceTypes` (array)
          for (int i = 0; i < jsonArrayserviceTypes.size(); i++) {
            TflApiPresentationEntitiesLineServiceTypeInfo.validateJsonElement(jsonArrayserviceTypes.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesLine.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesLine' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesLine> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesLine.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesLine>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesLine value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesLine read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesLine given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesLine
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesLine
   */
  public static TflApiPresentationEntitiesLine fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesLine.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesLine to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

