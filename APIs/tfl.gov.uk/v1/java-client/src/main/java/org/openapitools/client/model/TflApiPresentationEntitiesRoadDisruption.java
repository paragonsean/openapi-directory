/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SystemDataSpatialDbGeography;
import org.openapitools.client.model.TflApiPresentationEntitiesRoadDisruptionImpactArea;
import org.openapitools.client.model.TflApiPresentationEntitiesRoadDisruptionLine;
import org.openapitools.client.model.TflApiPresentationEntitiesRoadDisruptionSchedule;
import org.openapitools.client.model.TflApiPresentationEntitiesRoadProject;
import org.openapitools.client.model.TflApiPresentationEntitiesStreet;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesRoadDisruption
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesRoadDisruption {
  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CORRIDOR_IDS = "corridorIds";
  @SerializedName(SERIALIZED_NAME_CORRIDOR_IDS)
  private List<String> corridorIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_CURRENT_UPDATE = "currentUpdate";
  @SerializedName(SERIALIZED_NAME_CURRENT_UPDATE)
  private String currentUpdate;

  public static final String SERIALIZED_NAME_CURRENT_UPDATE_DATE_TIME = "currentUpdateDateTime";
  @SerializedName(SERIALIZED_NAME_CURRENT_UPDATE_DATE_TIME)
  private OffsetDateTime currentUpdateDateTime;

  public static final String SERIALIZED_NAME_END_DATE_TIME = "endDateTime";
  @SerializedName(SERIALIZED_NAME_END_DATE_TIME)
  private OffsetDateTime endDateTime;

  public static final String SERIALIZED_NAME_GEOGRAPHY = "geography";
  @SerializedName(SERIALIZED_NAME_GEOGRAPHY)
  private SystemDataSpatialDbGeography geography;

  public static final String SERIALIZED_NAME_GEOMETRY = "geometry";
  @SerializedName(SERIALIZED_NAME_GEOMETRY)
  private SystemDataSpatialDbGeography geometry;

  public static final String SERIALIZED_NAME_HAS_CLOSURES = "hasClosures";
  @SerializedName(SERIALIZED_NAME_HAS_CLOSURES)
  private Boolean hasClosures;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_PROVISIONAL = "isProvisional";
  @SerializedName(SERIALIZED_NAME_IS_PROVISIONAL)
  private Boolean isProvisional;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_LEVEL_OF_INTEREST = "levelOfInterest";
  @SerializedName(SERIALIZED_NAME_LEVEL_OF_INTEREST)
  private String levelOfInterest;

  public static final String SERIALIZED_NAME_LINK_TEXT = "linkText";
  @SerializedName(SERIALIZED_NAME_LINK_TEXT)
  private String linkText;

  public static final String SERIALIZED_NAME_LINK_URL = "linkUrl";
  @SerializedName(SERIALIZED_NAME_LINK_URL)
  private String linkUrl;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_ORDINAL = "ordinal";
  @SerializedName(SERIALIZED_NAME_ORDINAL)
  private Integer ordinal;

  public static final String SERIALIZED_NAME_POINT = "point";
  @SerializedName(SERIALIZED_NAME_POINT)
  private String point;

  public static final String SERIALIZED_NAME_PUBLISH_END_DATE = "publishEndDate";
  @SerializedName(SERIALIZED_NAME_PUBLISH_END_DATE)
  private OffsetDateTime publishEndDate;

  public static final String SERIALIZED_NAME_PUBLISH_START_DATE = "publishStartDate";
  @SerializedName(SERIALIZED_NAME_PUBLISH_START_DATE)
  private OffsetDateTime publishStartDate;

  public static final String SERIALIZED_NAME_RECURRING_SCHEDULES = "recurringSchedules";
  @SerializedName(SERIALIZED_NAME_RECURRING_SCHEDULES)
  private List<TflApiPresentationEntitiesRoadDisruptionSchedule> recurringSchedules = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROAD_DISRUPTION_IMPACT_AREAS = "roadDisruptionImpactAreas";
  @SerializedName(SERIALIZED_NAME_ROAD_DISRUPTION_IMPACT_AREAS)
  private List<TflApiPresentationEntitiesRoadDisruptionImpactArea> roadDisruptionImpactAreas = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROAD_DISRUPTION_LINES = "roadDisruptionLines";
  @SerializedName(SERIALIZED_NAME_ROAD_DISRUPTION_LINES)
  private List<TflApiPresentationEntitiesRoadDisruptionLine> roadDisruptionLines = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROAD_PROJECT = "roadProject";
  @SerializedName(SERIALIZED_NAME_ROAD_PROJECT)
  private TflApiPresentationEntitiesRoadProject roadProject;

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private String severity;

  public static final String SERIALIZED_NAME_START_DATE_TIME = "startDateTime";
  @SerializedName(SERIALIZED_NAME_START_DATE_TIME)
  private OffsetDateTime startDateTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STREETS = "streets";
  @SerializedName(SERIALIZED_NAME_STREETS)
  private List<TflApiPresentationEntitiesStreet> streets = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUB_CATEGORY = "subCategory";
  @SerializedName(SERIALIZED_NAME_SUB_CATEGORY)
  private String subCategory;

  public static final String SERIALIZED_NAME_TIME_FRAME = "timeFrame";
  @SerializedName(SERIALIZED_NAME_TIME_FRAME)
  private String timeFrame;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public TflApiPresentationEntitiesRoadDisruption() {
  }

  public TflApiPresentationEntitiesRoadDisruption category(String category) {
    this.category = category;
    return this;
  }

  /**
   * Describes the nature of disruption e.g. Traffic Incidents, Works
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public TflApiPresentationEntitiesRoadDisruption comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * Full text of comments describing the disruption, including details of any road closures and diversions, where appropriate.
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public TflApiPresentationEntitiesRoadDisruption corridorIds(List<String> corridorIds) {
    this.corridorIds = corridorIds;
    return this;
  }

  public TflApiPresentationEntitiesRoadDisruption addCorridorIdsItem(String corridorIdsItem) {
    if (this.corridorIds == null) {
      this.corridorIds = new ArrayList<>();
    }
    this.corridorIds.add(corridorIdsItem);
    return this;
  }

  /**
   * The Ids of affected corridors, if any.
   * @return corridorIds
   */
  @javax.annotation.Nullable
  public List<String> getCorridorIds() {
    return corridorIds;
  }

  public void setCorridorIds(List<String> corridorIds) {
    this.corridorIds = corridorIds;
  }


  public TflApiPresentationEntitiesRoadDisruption currentUpdate(String currentUpdate) {
    this.currentUpdate = currentUpdate;
    return this;
  }

  /**
   * Text of the most recent update from the LSTCC on the state of the               disruption, including the current traffic impact and any advice to               road users.
   * @return currentUpdate
   */
  @javax.annotation.Nullable
  public String getCurrentUpdate() {
    return currentUpdate;
  }

  public void setCurrentUpdate(String currentUpdate) {
    this.currentUpdate = currentUpdate;
  }


  public TflApiPresentationEntitiesRoadDisruption currentUpdateDateTime(OffsetDateTime currentUpdateDateTime) {
    this.currentUpdateDateTime = currentUpdateDateTime;
    return this;
  }

  /**
   * The time when the last CurrentUpdate description was recorded,               or null if no CurrentUpdate has been applied.
   * @return currentUpdateDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCurrentUpdateDateTime() {
    return currentUpdateDateTime;
  }

  public void setCurrentUpdateDateTime(OffsetDateTime currentUpdateDateTime) {
    this.currentUpdateDateTime = currentUpdateDateTime;
  }


  public TflApiPresentationEntitiesRoadDisruption endDateTime(OffsetDateTime endDateTime) {
    this.endDateTime = endDateTime;
    return this;
  }

  /**
   * The date and time on which the disruption ended. For planned disruptions, this date will have a valid value. For unplanned               disruptions in progress, this field will be omitted.
   * @return endDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDateTime() {
    return endDateTime;
  }

  public void setEndDateTime(OffsetDateTime endDateTime) {
    this.endDateTime = endDateTime;
  }


  public TflApiPresentationEntitiesRoadDisruption geography(SystemDataSpatialDbGeography geography) {
    this.geography = geography;
    return this;
  }

  /**
   * Get geography
   * @return geography
   */
  @javax.annotation.Nullable
  public SystemDataSpatialDbGeography getGeography() {
    return geography;
  }

  public void setGeography(SystemDataSpatialDbGeography geography) {
    this.geography = geography;
  }


  public TflApiPresentationEntitiesRoadDisruption geometry(SystemDataSpatialDbGeography geometry) {
    this.geometry = geometry;
    return this;
  }

  /**
   * Get geometry
   * @return geometry
   */
  @javax.annotation.Nullable
  public SystemDataSpatialDbGeography getGeometry() {
    return geometry;
  }

  public void setGeometry(SystemDataSpatialDbGeography geometry) {
    this.geometry = geometry;
  }


  public TflApiPresentationEntitiesRoadDisruption hasClosures(Boolean hasClosures) {
    this.hasClosures = hasClosures;
    return this;
  }

  /**
   * True if any of the affected Streets have a \&quot;Full Closure\&quot; status, false otherwise. A RoadDisruption that has HasClosures is considered a               Severe or Serious disruption for severity filtering purposes.
   * @return hasClosures
   */
  @javax.annotation.Nullable
  public Boolean getHasClosures() {
    return hasClosures;
  }

  public void setHasClosures(Boolean hasClosures) {
    this.hasClosures = hasClosures;
  }


  public TflApiPresentationEntitiesRoadDisruption id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier for the road disruption
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TflApiPresentationEntitiesRoadDisruption isProvisional(Boolean isProvisional) {
    this.isProvisional = isProvisional;
    return this;
  }

  /**
   * True if the disruption is planned on a future date that is open to change
   * @return isProvisional
   */
  @javax.annotation.Nullable
  public Boolean getIsProvisional() {
    return isProvisional;
  }

  public void setIsProvisional(Boolean isProvisional) {
    this.isProvisional = isProvisional;
  }


  public TflApiPresentationEntitiesRoadDisruption lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * The date and time on which the disruption was last modified in the system. This information can reliably be used by a developer to quickly              compare two instances of the same disruption to determine if it has been changed.
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public TflApiPresentationEntitiesRoadDisruption levelOfInterest(String levelOfInterest) {
    this.levelOfInterest = levelOfInterest;
    return this;
  }

  /**
   * This describes the level of potential impact on traffic operations of the disruption.               High &#x3D; e.g. a one-off disruption on a major or high profile route which will require a high level of operational attention               Medium &#x3D; This is the default value               Low &#x3D; e.g. a frequently occurring disruption which is well known
   * @return levelOfInterest
   */
  @javax.annotation.Nullable
  public String getLevelOfInterest() {
    return levelOfInterest;
  }

  public void setLevelOfInterest(String levelOfInterest) {
    this.levelOfInterest = levelOfInterest;
  }


  public TflApiPresentationEntitiesRoadDisruption linkText(String linkText) {
    this.linkText = linkText;
    return this;
  }

  /**
   * The text of any associated link
   * @return linkText
   */
  @javax.annotation.Nullable
  public String getLinkText() {
    return linkText;
  }

  public void setLinkText(String linkText) {
    this.linkText = linkText;
  }


  public TflApiPresentationEntitiesRoadDisruption linkUrl(String linkUrl) {
    this.linkUrl = linkUrl;
    return this;
  }

  /**
   * The url of any associated link
   * @return linkUrl
   */
  @javax.annotation.Nullable
  public String getLinkUrl() {
    return linkUrl;
  }

  public void setLinkUrl(String linkUrl) {
    this.linkUrl = linkUrl;
  }


  public TflApiPresentationEntitiesRoadDisruption location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Main road name / number (borough) or preset area name where the disruption is located. This might be useful for a map popup where space is limited.
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public TflApiPresentationEntitiesRoadDisruption ordinal(Integer ordinal) {
    this.ordinal = ordinal;
    return this;
  }

  /**
   * An ordinal of the disruption based on severity, level of interest and corridor.
   * @return ordinal
   */
  @javax.annotation.Nullable
  public Integer getOrdinal() {
    return ordinal;
  }

  public void setOrdinal(Integer ordinal) {
    this.ordinal = ordinal;
  }


  public TflApiPresentationEntitiesRoadDisruption point(String point) {
    this.point = point;
    return this;
  }

  /**
   * Latitude and longitude (WGS84) of the centroid of the disruption, stored in a geoJSON-formatted string.
   * @return point
   */
  @javax.annotation.Nullable
  public String getPoint() {
    return point;
  }

  public void setPoint(String point) {
    this.point = point;
  }


  public TflApiPresentationEntitiesRoadDisruption publishEndDate(OffsetDateTime publishEndDate) {
    this.publishEndDate = publishEndDate;
    return this;
  }

  /**
   * Get publishEndDate
   * @return publishEndDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPublishEndDate() {
    return publishEndDate;
  }

  public void setPublishEndDate(OffsetDateTime publishEndDate) {
    this.publishEndDate = publishEndDate;
  }


  public TflApiPresentationEntitiesRoadDisruption publishStartDate(OffsetDateTime publishStartDate) {
    this.publishStartDate = publishStartDate;
    return this;
  }

  /**
   * TDM Additional properties
   * @return publishStartDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPublishStartDate() {
    return publishStartDate;
  }

  public void setPublishStartDate(OffsetDateTime publishStartDate) {
    this.publishStartDate = publishStartDate;
  }


  public TflApiPresentationEntitiesRoadDisruption recurringSchedules(List<TflApiPresentationEntitiesRoadDisruptionSchedule> recurringSchedules) {
    this.recurringSchedules = recurringSchedules;
    return this;
  }

  public TflApiPresentationEntitiesRoadDisruption addRecurringSchedulesItem(TflApiPresentationEntitiesRoadDisruptionSchedule recurringSchedulesItem) {
    if (this.recurringSchedules == null) {
      this.recurringSchedules = new ArrayList<>();
    }
    this.recurringSchedules.add(recurringSchedulesItem);
    return this;
  }

  /**
   * Get recurringSchedules
   * @return recurringSchedules
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesRoadDisruptionSchedule> getRecurringSchedules() {
    return recurringSchedules;
  }

  public void setRecurringSchedules(List<TflApiPresentationEntitiesRoadDisruptionSchedule> recurringSchedules) {
    this.recurringSchedules = recurringSchedules;
  }


  public TflApiPresentationEntitiesRoadDisruption roadDisruptionImpactAreas(List<TflApiPresentationEntitiesRoadDisruptionImpactArea> roadDisruptionImpactAreas) {
    this.roadDisruptionImpactAreas = roadDisruptionImpactAreas;
    return this;
  }

  public TflApiPresentationEntitiesRoadDisruption addRoadDisruptionImpactAreasItem(TflApiPresentationEntitiesRoadDisruptionImpactArea roadDisruptionImpactAreasItem) {
    if (this.roadDisruptionImpactAreas == null) {
      this.roadDisruptionImpactAreas = new ArrayList<>();
    }
    this.roadDisruptionImpactAreas.add(roadDisruptionImpactAreasItem);
    return this;
  }

  /**
   * Get roadDisruptionImpactAreas
   * @return roadDisruptionImpactAreas
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesRoadDisruptionImpactArea> getRoadDisruptionImpactAreas() {
    return roadDisruptionImpactAreas;
  }

  public void setRoadDisruptionImpactAreas(List<TflApiPresentationEntitiesRoadDisruptionImpactArea> roadDisruptionImpactAreas) {
    this.roadDisruptionImpactAreas = roadDisruptionImpactAreas;
  }


  public TflApiPresentationEntitiesRoadDisruption roadDisruptionLines(List<TflApiPresentationEntitiesRoadDisruptionLine> roadDisruptionLines) {
    this.roadDisruptionLines = roadDisruptionLines;
    return this;
  }

  public TflApiPresentationEntitiesRoadDisruption addRoadDisruptionLinesItem(TflApiPresentationEntitiesRoadDisruptionLine roadDisruptionLinesItem) {
    if (this.roadDisruptionLines == null) {
      this.roadDisruptionLines = new ArrayList<>();
    }
    this.roadDisruptionLines.add(roadDisruptionLinesItem);
    return this;
  }

  /**
   * Get roadDisruptionLines
   * @return roadDisruptionLines
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesRoadDisruptionLine> getRoadDisruptionLines() {
    return roadDisruptionLines;
  }

  public void setRoadDisruptionLines(List<TflApiPresentationEntitiesRoadDisruptionLine> roadDisruptionLines) {
    this.roadDisruptionLines = roadDisruptionLines;
  }


  public TflApiPresentationEntitiesRoadDisruption roadProject(TflApiPresentationEntitiesRoadProject roadProject) {
    this.roadProject = roadProject;
    return this;
  }

  /**
   * Get roadProject
   * @return roadProject
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesRoadProject getRoadProject() {
    return roadProject;
  }

  public void setRoadProject(TflApiPresentationEntitiesRoadProject roadProject) {
    this.roadProject = roadProject;
  }


  public TflApiPresentationEntitiesRoadDisruption severity(String severity) {
    this.severity = severity;
    return this;
  }

  /**
   * A description of the severity of the disruption.
   * @return severity
   */
  @javax.annotation.Nullable
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }


  public TflApiPresentationEntitiesRoadDisruption startDateTime(OffsetDateTime startDateTime) {
    this.startDateTime = startDateTime;
    return this;
  }

  /**
   * The date and time which the disruption started. For a planned disruption (i.e. planned road works) this date will be in the future.              For unplanned disruptions, this will default to the date on which the disruption was first recorded, but may be adjusted by the operator.
   * @return startDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDateTime() {
    return startDateTime;
  }

  public void setStartDateTime(OffsetDateTime startDateTime) {
    this.startDateTime = startDateTime;
  }


  public TflApiPresentationEntitiesRoadDisruption status(String status) {
    this.status = status;
    return this;
  }

  /**
   * This describes the status of the disruption.                Active &#x3D; currently in progress               Active Long Term &#x3D; currently in progress and long term              Scheduled &#x3D; scheduled to start within the next 180 days              Recurring Works &#x3D; planned maintenance works that follow a regular routine or pattern and whose next occurrence is to start within the next 180 days.              Recently Cleared &#x3D; recently cleared in the last 24 hours              Note that the status of Scheduled or Recurring Works disruptions will change to Active when they start, and will change status again when they end.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TflApiPresentationEntitiesRoadDisruption streets(List<TflApiPresentationEntitiesStreet> streets) {
    this.streets = streets;
    return this;
  }

  public TflApiPresentationEntitiesRoadDisruption addStreetsItem(TflApiPresentationEntitiesStreet streetsItem) {
    if (this.streets == null) {
      this.streets = new ArrayList<>();
    }
    this.streets.add(streetsItem);
    return this;
  }

  /**
   * A collection of zero or more streets affected by the disruption.
   * @return streets
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesStreet> getStreets() {
    return streets;
  }

  public void setStreets(List<TflApiPresentationEntitiesStreet> streets) {
    this.streets = streets;
  }


  public TflApiPresentationEntitiesRoadDisruption subCategory(String subCategory) {
    this.subCategory = subCategory;
    return this;
  }

  /**
   * Describes the sub-category of disruption e.g. Collapsed Manhole, Abnormal Load
   * @return subCategory
   */
  @javax.annotation.Nullable
  public String getSubCategory() {
    return subCategory;
  }

  public void setSubCategory(String subCategory) {
    this.subCategory = subCategory;
  }


  public TflApiPresentationEntitiesRoadDisruption timeFrame(String timeFrame) {
    this.timeFrame = timeFrame;
    return this;
  }

  /**
   * Get timeFrame
   * @return timeFrame
   */
  @javax.annotation.Nullable
  public String getTimeFrame() {
    return timeFrame;
  }

  public void setTimeFrame(String timeFrame) {
    this.timeFrame = timeFrame;
  }


  public TflApiPresentationEntitiesRoadDisruption url(String url) {
    this.url = url;
    return this;
  }

  /**
   * URL to retrieve this road disruption
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesRoadDisruption tflApiPresentationEntitiesRoadDisruption = (TflApiPresentationEntitiesRoadDisruption) o;
    return Objects.equals(this.category, tflApiPresentationEntitiesRoadDisruption.category) &&
        Objects.equals(this.comments, tflApiPresentationEntitiesRoadDisruption.comments) &&
        Objects.equals(this.corridorIds, tflApiPresentationEntitiesRoadDisruption.corridorIds) &&
        Objects.equals(this.currentUpdate, tflApiPresentationEntitiesRoadDisruption.currentUpdate) &&
        Objects.equals(this.currentUpdateDateTime, tflApiPresentationEntitiesRoadDisruption.currentUpdateDateTime) &&
        Objects.equals(this.endDateTime, tflApiPresentationEntitiesRoadDisruption.endDateTime) &&
        Objects.equals(this.geography, tflApiPresentationEntitiesRoadDisruption.geography) &&
        Objects.equals(this.geometry, tflApiPresentationEntitiesRoadDisruption.geometry) &&
        Objects.equals(this.hasClosures, tflApiPresentationEntitiesRoadDisruption.hasClosures) &&
        Objects.equals(this.id, tflApiPresentationEntitiesRoadDisruption.id) &&
        Objects.equals(this.isProvisional, tflApiPresentationEntitiesRoadDisruption.isProvisional) &&
        Objects.equals(this.lastModifiedTime, tflApiPresentationEntitiesRoadDisruption.lastModifiedTime) &&
        Objects.equals(this.levelOfInterest, tflApiPresentationEntitiesRoadDisruption.levelOfInterest) &&
        Objects.equals(this.linkText, tflApiPresentationEntitiesRoadDisruption.linkText) &&
        Objects.equals(this.linkUrl, tflApiPresentationEntitiesRoadDisruption.linkUrl) &&
        Objects.equals(this.location, tflApiPresentationEntitiesRoadDisruption.location) &&
        Objects.equals(this.ordinal, tflApiPresentationEntitiesRoadDisruption.ordinal) &&
        Objects.equals(this.point, tflApiPresentationEntitiesRoadDisruption.point) &&
        Objects.equals(this.publishEndDate, tflApiPresentationEntitiesRoadDisruption.publishEndDate) &&
        Objects.equals(this.publishStartDate, tflApiPresentationEntitiesRoadDisruption.publishStartDate) &&
        Objects.equals(this.recurringSchedules, tflApiPresentationEntitiesRoadDisruption.recurringSchedules) &&
        Objects.equals(this.roadDisruptionImpactAreas, tflApiPresentationEntitiesRoadDisruption.roadDisruptionImpactAreas) &&
        Objects.equals(this.roadDisruptionLines, tflApiPresentationEntitiesRoadDisruption.roadDisruptionLines) &&
        Objects.equals(this.roadProject, tflApiPresentationEntitiesRoadDisruption.roadProject) &&
        Objects.equals(this.severity, tflApiPresentationEntitiesRoadDisruption.severity) &&
        Objects.equals(this.startDateTime, tflApiPresentationEntitiesRoadDisruption.startDateTime) &&
        Objects.equals(this.status, tflApiPresentationEntitiesRoadDisruption.status) &&
        Objects.equals(this.streets, tflApiPresentationEntitiesRoadDisruption.streets) &&
        Objects.equals(this.subCategory, tflApiPresentationEntitiesRoadDisruption.subCategory) &&
        Objects.equals(this.timeFrame, tflApiPresentationEntitiesRoadDisruption.timeFrame) &&
        Objects.equals(this.url, tflApiPresentationEntitiesRoadDisruption.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, comments, corridorIds, currentUpdate, currentUpdateDateTime, endDateTime, geography, geometry, hasClosures, id, isProvisional, lastModifiedTime, levelOfInterest, linkText, linkUrl, location, ordinal, point, publishEndDate, publishStartDate, recurringSchedules, roadDisruptionImpactAreas, roadDisruptionLines, roadProject, severity, startDateTime, status, streets, subCategory, timeFrame, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesRoadDisruption {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    corridorIds: ").append(toIndentedString(corridorIds)).append("\n");
    sb.append("    currentUpdate: ").append(toIndentedString(currentUpdate)).append("\n");
    sb.append("    currentUpdateDateTime: ").append(toIndentedString(currentUpdateDateTime)).append("\n");
    sb.append("    endDateTime: ").append(toIndentedString(endDateTime)).append("\n");
    sb.append("    geography: ").append(toIndentedString(geography)).append("\n");
    sb.append("    geometry: ").append(toIndentedString(geometry)).append("\n");
    sb.append("    hasClosures: ").append(toIndentedString(hasClosures)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isProvisional: ").append(toIndentedString(isProvisional)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    levelOfInterest: ").append(toIndentedString(levelOfInterest)).append("\n");
    sb.append("    linkText: ").append(toIndentedString(linkText)).append("\n");
    sb.append("    linkUrl: ").append(toIndentedString(linkUrl)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("    point: ").append(toIndentedString(point)).append("\n");
    sb.append("    publishEndDate: ").append(toIndentedString(publishEndDate)).append("\n");
    sb.append("    publishStartDate: ").append(toIndentedString(publishStartDate)).append("\n");
    sb.append("    recurringSchedules: ").append(toIndentedString(recurringSchedules)).append("\n");
    sb.append("    roadDisruptionImpactAreas: ").append(toIndentedString(roadDisruptionImpactAreas)).append("\n");
    sb.append("    roadDisruptionLines: ").append(toIndentedString(roadDisruptionLines)).append("\n");
    sb.append("    roadProject: ").append(toIndentedString(roadProject)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    startDateTime: ").append(toIndentedString(startDateTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    streets: ").append(toIndentedString(streets)).append("\n");
    sb.append("    subCategory: ").append(toIndentedString(subCategory)).append("\n");
    sb.append("    timeFrame: ").append(toIndentedString(timeFrame)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("category");
    openapiFields.add("comments");
    openapiFields.add("corridorIds");
    openapiFields.add("currentUpdate");
    openapiFields.add("currentUpdateDateTime");
    openapiFields.add("endDateTime");
    openapiFields.add("geography");
    openapiFields.add("geometry");
    openapiFields.add("hasClosures");
    openapiFields.add("id");
    openapiFields.add("isProvisional");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("levelOfInterest");
    openapiFields.add("linkText");
    openapiFields.add("linkUrl");
    openapiFields.add("location");
    openapiFields.add("ordinal");
    openapiFields.add("point");
    openapiFields.add("publishEndDate");
    openapiFields.add("publishStartDate");
    openapiFields.add("recurringSchedules");
    openapiFields.add("roadDisruptionImpactAreas");
    openapiFields.add("roadDisruptionLines");
    openapiFields.add("roadProject");
    openapiFields.add("severity");
    openapiFields.add("startDateTime");
    openapiFields.add("status");
    openapiFields.add("streets");
    openapiFields.add("subCategory");
    openapiFields.add("timeFrame");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesRoadDisruption
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesRoadDisruption.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesRoadDisruption is not found in the empty JSON string", TflApiPresentationEntitiesRoadDisruption.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesRoadDisruption.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesRoadDisruption` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("corridorIds") != null && !jsonObj.get("corridorIds").isJsonNull() && !jsonObj.get("corridorIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `corridorIds` to be an array in the JSON string but got `%s`", jsonObj.get("corridorIds").toString()));
      }
      if ((jsonObj.get("currentUpdate") != null && !jsonObj.get("currentUpdate").isJsonNull()) && !jsonObj.get("currentUpdate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentUpdate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentUpdate").toString()));
      }
      // validate the optional field `geography`
      if (jsonObj.get("geography") != null && !jsonObj.get("geography").isJsonNull()) {
        SystemDataSpatialDbGeography.validateJsonElement(jsonObj.get("geography"));
      }
      // validate the optional field `geometry`
      if (jsonObj.get("geometry") != null && !jsonObj.get("geometry").isJsonNull()) {
        SystemDataSpatialDbGeography.validateJsonElement(jsonObj.get("geometry"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("levelOfInterest") != null && !jsonObj.get("levelOfInterest").isJsonNull()) && !jsonObj.get("levelOfInterest").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `levelOfInterest` to be a primitive type in the JSON string but got `%s`", jsonObj.get("levelOfInterest").toString()));
      }
      if ((jsonObj.get("linkText") != null && !jsonObj.get("linkText").isJsonNull()) && !jsonObj.get("linkText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkText").toString()));
      }
      if ((jsonObj.get("linkUrl") != null && !jsonObj.get("linkUrl").isJsonNull()) && !jsonObj.get("linkUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkUrl").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("point") != null && !jsonObj.get("point").isJsonNull()) && !jsonObj.get("point").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `point` to be a primitive type in the JSON string but got `%s`", jsonObj.get("point").toString()));
      }
      if (jsonObj.get("recurringSchedules") != null && !jsonObj.get("recurringSchedules").isJsonNull()) {
        JsonArray jsonArrayrecurringSchedules = jsonObj.getAsJsonArray("recurringSchedules");
        if (jsonArrayrecurringSchedules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("recurringSchedules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `recurringSchedules` to be an array in the JSON string but got `%s`", jsonObj.get("recurringSchedules").toString()));
          }

          // validate the optional field `recurringSchedules` (array)
          for (int i = 0; i < jsonArrayrecurringSchedules.size(); i++) {
            TflApiPresentationEntitiesRoadDisruptionSchedule.validateJsonElement(jsonArrayrecurringSchedules.get(i));
          };
        }
      }
      if (jsonObj.get("roadDisruptionImpactAreas") != null && !jsonObj.get("roadDisruptionImpactAreas").isJsonNull()) {
        JsonArray jsonArrayroadDisruptionImpactAreas = jsonObj.getAsJsonArray("roadDisruptionImpactAreas");
        if (jsonArrayroadDisruptionImpactAreas != null) {
          // ensure the json data is an array
          if (!jsonObj.get("roadDisruptionImpactAreas").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `roadDisruptionImpactAreas` to be an array in the JSON string but got `%s`", jsonObj.get("roadDisruptionImpactAreas").toString()));
          }

          // validate the optional field `roadDisruptionImpactAreas` (array)
          for (int i = 0; i < jsonArrayroadDisruptionImpactAreas.size(); i++) {
            TflApiPresentationEntitiesRoadDisruptionImpactArea.validateJsonElement(jsonArrayroadDisruptionImpactAreas.get(i));
          };
        }
      }
      if (jsonObj.get("roadDisruptionLines") != null && !jsonObj.get("roadDisruptionLines").isJsonNull()) {
        JsonArray jsonArrayroadDisruptionLines = jsonObj.getAsJsonArray("roadDisruptionLines");
        if (jsonArrayroadDisruptionLines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("roadDisruptionLines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `roadDisruptionLines` to be an array in the JSON string but got `%s`", jsonObj.get("roadDisruptionLines").toString()));
          }

          // validate the optional field `roadDisruptionLines` (array)
          for (int i = 0; i < jsonArrayroadDisruptionLines.size(); i++) {
            TflApiPresentationEntitiesRoadDisruptionLine.validateJsonElement(jsonArrayroadDisruptionLines.get(i));
          };
        }
      }
      // validate the optional field `roadProject`
      if (jsonObj.get("roadProject") != null && !jsonObj.get("roadProject").isJsonNull()) {
        TflApiPresentationEntitiesRoadProject.validateJsonElement(jsonObj.get("roadProject"));
      }
      if ((jsonObj.get("severity") != null && !jsonObj.get("severity").isJsonNull()) && !jsonObj.get("severity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `severity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("severity").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("streets") != null && !jsonObj.get("streets").isJsonNull()) {
        JsonArray jsonArraystreets = jsonObj.getAsJsonArray("streets");
        if (jsonArraystreets != null) {
          // ensure the json data is an array
          if (!jsonObj.get("streets").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `streets` to be an array in the JSON string but got `%s`", jsonObj.get("streets").toString()));
          }

          // validate the optional field `streets` (array)
          for (int i = 0; i < jsonArraystreets.size(); i++) {
            TflApiPresentationEntitiesStreet.validateJsonElement(jsonArraystreets.get(i));
          };
        }
      }
      if ((jsonObj.get("subCategory") != null && !jsonObj.get("subCategory").isJsonNull()) && !jsonObj.get("subCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subCategory").toString()));
      }
      if ((jsonObj.get("timeFrame") != null && !jsonObj.get("timeFrame").isJsonNull()) && !jsonObj.get("timeFrame").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeFrame` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeFrame").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesRoadDisruption.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesRoadDisruption' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesRoadDisruption> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesRoadDisruption.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesRoadDisruption>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesRoadDisruption value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesRoadDisruption read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesRoadDisruption given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesRoadDisruption
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesRoadDisruption
   */
  public static TflApiPresentationEntitiesRoadDisruption fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesRoadDisruption.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesRoadDisruption to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

