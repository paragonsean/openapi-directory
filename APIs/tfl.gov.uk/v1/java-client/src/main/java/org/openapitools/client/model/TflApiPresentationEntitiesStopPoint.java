/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesAdditionalProperties;
import org.openapitools.client.model.TflApiPresentationEntitiesIdentifier;
import org.openapitools.client.model.TflApiPresentationEntitiesLineGroup;
import org.openapitools.client.model.TflApiPresentationEntitiesLineModeGroup;
import org.openapitools.client.model.TflApiPresentationEntitiesPlace;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesStopPoint
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesStopPoint {
  public static final String SERIALIZED_NAME_ACCESSIBILITY_SUMMARY = "accessibilitySummary";
  @SerializedName(SERIALIZED_NAME_ACCESSIBILITY_SUMMARY)
  private String accessibilitySummary;

  public static final String SERIALIZED_NAME_ADDITIONAL_PROPERTIES = "additionalProperties";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_PROPERTIES)
  private List<TflApiPresentationEntitiesAdditionalProperties> additionalProperties = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private List<TflApiPresentationEntitiesPlace> children = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHILDREN_URLS = "childrenUrls";
  @SerializedName(SERIALIZED_NAME_CHILDREN_URLS)
  private List<String> childrenUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMON_NAME = "commonName";
  @SerializedName(SERIALIZED_NAME_COMMON_NAME)
  private String commonName;

  public static final String SERIALIZED_NAME_DISTANCE = "distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private Double distance;

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_HUB_NAPTAN_CODE = "hubNaptanCode";
  @SerializedName(SERIALIZED_NAME_HUB_NAPTAN_CODE)
  private String hubNaptanCode;

  public static final String SERIALIZED_NAME_ICS_CODE = "icsCode";
  @SerializedName(SERIALIZED_NAME_ICS_CODE)
  private String icsCode;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INDICATOR = "indicator";
  @SerializedName(SERIALIZED_NAME_INDICATOR)
  private String indicator;

  public static final String SERIALIZED_NAME_INDIVIDUAL_STOP_ID = "individualStopId";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_STOP_ID)
  private String individualStopId;

  public static final String SERIALIZED_NAME_LAT = "lat";
  @SerializedName(SERIALIZED_NAME_LAT)
  private Double lat;

  public static final String SERIALIZED_NAME_LINE_GROUP = "lineGroup";
  @SerializedName(SERIALIZED_NAME_LINE_GROUP)
  private List<TflApiPresentationEntitiesLineGroup> lineGroup = new ArrayList<>();

  public static final String SERIALIZED_NAME_LINE_MODE_GROUPS = "lineModeGroups";
  @SerializedName(SERIALIZED_NAME_LINE_MODE_GROUPS)
  private List<TflApiPresentationEntitiesLineModeGroup> lineModeGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_LINES = "lines";
  @SerializedName(SERIALIZED_NAME_LINES)
  private List<TflApiPresentationEntitiesIdentifier> lines = new ArrayList<>();

  public static final String SERIALIZED_NAME_LON = "lon";
  @SerializedName(SERIALIZED_NAME_LON)
  private Double lon;

  public static final String SERIALIZED_NAME_MODES = "modes";
  @SerializedName(SERIALIZED_NAME_MODES)
  private List<String> modes = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAPTAN_ID = "naptanId";
  @SerializedName(SERIALIZED_NAME_NAPTAN_ID)
  private String naptanId;

  public static final String SERIALIZED_NAME_NAPTAN_MODE = "naptanMode";
  @SerializedName(SERIALIZED_NAME_NAPTAN_MODE)
  private String naptanMode;

  public static final String SERIALIZED_NAME_PLACE_TYPE = "placeType";
  @SerializedName(SERIALIZED_NAME_PLACE_TYPE)
  private String placeType;

  public static final String SERIALIZED_NAME_PLATFORM_NAME = "platformName";
  @SerializedName(SERIALIZED_NAME_PLATFORM_NAME)
  private String platformName;

  public static final String SERIALIZED_NAME_SMS_CODE = "smsCode";
  @SerializedName(SERIALIZED_NAME_SMS_CODE)
  private String smsCode;

  public static final String SERIALIZED_NAME_STATION_NAPTAN = "stationNaptan";
  @SerializedName(SERIALIZED_NAME_STATION_NAPTAN)
  private String stationNaptan;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Boolean status;

  public static final String SERIALIZED_NAME_STOP_LETTER = "stopLetter";
  @SerializedName(SERIALIZED_NAME_STOP_LETTER)
  private String stopLetter;

  public static final String SERIALIZED_NAME_STOP_TYPE = "stopType";
  @SerializedName(SERIALIZED_NAME_STOP_TYPE)
  private String stopType;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public TflApiPresentationEntitiesStopPoint() {
  }

  public TflApiPresentationEntitiesStopPoint accessibilitySummary(String accessibilitySummary) {
    this.accessibilitySummary = accessibilitySummary;
    return this;
  }

  /**
   * Get accessibilitySummary
   * @return accessibilitySummary
   */
  @javax.annotation.Nullable
  public String getAccessibilitySummary() {
    return accessibilitySummary;
  }

  public void setAccessibilitySummary(String accessibilitySummary) {
    this.accessibilitySummary = accessibilitySummary;
  }


  public TflApiPresentationEntitiesStopPoint additionalProperties(List<TflApiPresentationEntitiesAdditionalProperties> additionalProperties) {
    this.additionalProperties = additionalProperties;
    return this;
  }

  public TflApiPresentationEntitiesStopPoint addAdditionalPropertiesItem(TflApiPresentationEntitiesAdditionalProperties additionalPropertiesItem) {
    if (this.additionalProperties == null) {
      this.additionalProperties = new ArrayList<>();
    }
    this.additionalProperties.add(additionalPropertiesItem);
    return this;
  }

  /**
   * A bag of additional key/value pairs with extra information about this place.
   * @return additionalProperties
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesAdditionalProperties> getAdditionalProperties() {
    return additionalProperties;
  }

  public void setAdditionalProperties(List<TflApiPresentationEntitiesAdditionalProperties> additionalProperties) {
    this.additionalProperties = additionalProperties;
  }


  public TflApiPresentationEntitiesStopPoint children(List<TflApiPresentationEntitiesPlace> children) {
    this.children = children;
    return this;
  }

  public TflApiPresentationEntitiesStopPoint addChildrenItem(TflApiPresentationEntitiesPlace childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

  /**
   * Get children
   * @return children
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesPlace> getChildren() {
    return children;
  }

  public void setChildren(List<TflApiPresentationEntitiesPlace> children) {
    this.children = children;
  }


  public TflApiPresentationEntitiesStopPoint childrenUrls(List<String> childrenUrls) {
    this.childrenUrls = childrenUrls;
    return this;
  }

  public TflApiPresentationEntitiesStopPoint addChildrenUrlsItem(String childrenUrlsItem) {
    if (this.childrenUrls == null) {
      this.childrenUrls = new ArrayList<>();
    }
    this.childrenUrls.add(childrenUrlsItem);
    return this;
  }

  /**
   * Get childrenUrls
   * @return childrenUrls
   */
  @javax.annotation.Nullable
  public List<String> getChildrenUrls() {
    return childrenUrls;
  }

  public void setChildrenUrls(List<String> childrenUrls) {
    this.childrenUrls = childrenUrls;
  }


  public TflApiPresentationEntitiesStopPoint commonName(String commonName) {
    this.commonName = commonName;
    return this;
  }

  /**
   * A human readable name.
   * @return commonName
   */
  @javax.annotation.Nullable
  public String getCommonName() {
    return commonName;
  }

  public void setCommonName(String commonName) {
    this.commonName = commonName;
  }


  public TflApiPresentationEntitiesStopPoint distance(Double distance) {
    this.distance = distance;
    return this;
  }

  /**
   * The distance of the place from its search point, if this is the result              of a geographical search, otherwise zero.
   * @return distance
   */
  @javax.annotation.Nullable
  public Double getDistance() {
    return distance;
  }

  public void setDistance(Double distance) {
    this.distance = distance;
  }


  public TflApiPresentationEntitiesStopPoint fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public TflApiPresentationEntitiesStopPoint hubNaptanCode(String hubNaptanCode) {
    this.hubNaptanCode = hubNaptanCode;
    return this;
  }

  /**
   * Get hubNaptanCode
   * @return hubNaptanCode
   */
  @javax.annotation.Nullable
  public String getHubNaptanCode() {
    return hubNaptanCode;
  }

  public void setHubNaptanCode(String hubNaptanCode) {
    this.hubNaptanCode = hubNaptanCode;
  }


  public TflApiPresentationEntitiesStopPoint icsCode(String icsCode) {
    this.icsCode = icsCode;
    return this;
  }

  /**
   * Get icsCode
   * @return icsCode
   */
  @javax.annotation.Nullable
  public String getIcsCode() {
    return icsCode;
  }

  public void setIcsCode(String icsCode) {
    this.icsCode = icsCode;
  }


  public TflApiPresentationEntitiesStopPoint id(String id) {
    this.id = id;
    return this;
  }

  /**
   * A unique identifier.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TflApiPresentationEntitiesStopPoint indicator(String indicator) {
    this.indicator = indicator;
    return this;
  }

  /**
   * The indicator of the stop point e.g. \&quot;Stop K\&quot;
   * @return indicator
   */
  @javax.annotation.Nullable
  public String getIndicator() {
    return indicator;
  }

  public void setIndicator(String indicator) {
    this.indicator = indicator;
  }


  public TflApiPresentationEntitiesStopPoint individualStopId(String individualStopId) {
    this.individualStopId = individualStopId;
    return this;
  }

  /**
   * Get individualStopId
   * @return individualStopId
   */
  @javax.annotation.Nullable
  public String getIndividualStopId() {
    return individualStopId;
  }

  public void setIndividualStopId(String individualStopId) {
    this.individualStopId = individualStopId;
  }


  public TflApiPresentationEntitiesStopPoint lat(Double lat) {
    this.lat = lat;
    return this;
  }

  /**
   * WGS84 latitude of the location.
   * @return lat
   */
  @javax.annotation.Nullable
  public Double getLat() {
    return lat;
  }

  public void setLat(Double lat) {
    this.lat = lat;
  }


  public TflApiPresentationEntitiesStopPoint lineGroup(List<TflApiPresentationEntitiesLineGroup> lineGroup) {
    this.lineGroup = lineGroup;
    return this;
  }

  public TflApiPresentationEntitiesStopPoint addLineGroupItem(TflApiPresentationEntitiesLineGroup lineGroupItem) {
    if (this.lineGroup == null) {
      this.lineGroup = new ArrayList<>();
    }
    this.lineGroup.add(lineGroupItem);
    return this;
  }

  /**
   * Get lineGroup
   * @return lineGroup
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesLineGroup> getLineGroup() {
    return lineGroup;
  }

  public void setLineGroup(List<TflApiPresentationEntitiesLineGroup> lineGroup) {
    this.lineGroup = lineGroup;
  }


  public TflApiPresentationEntitiesStopPoint lineModeGroups(List<TflApiPresentationEntitiesLineModeGroup> lineModeGroups) {
    this.lineModeGroups = lineModeGroups;
    return this;
  }

  public TflApiPresentationEntitiesStopPoint addLineModeGroupsItem(TflApiPresentationEntitiesLineModeGroup lineModeGroupsItem) {
    if (this.lineModeGroups == null) {
      this.lineModeGroups = new ArrayList<>();
    }
    this.lineModeGroups.add(lineModeGroupsItem);
    return this;
  }

  /**
   * Get lineModeGroups
   * @return lineModeGroups
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesLineModeGroup> getLineModeGroups() {
    return lineModeGroups;
  }

  public void setLineModeGroups(List<TflApiPresentationEntitiesLineModeGroup> lineModeGroups) {
    this.lineModeGroups = lineModeGroups;
  }


  public TflApiPresentationEntitiesStopPoint lines(List<TflApiPresentationEntitiesIdentifier> lines) {
    this.lines = lines;
    return this;
  }

  public TflApiPresentationEntitiesStopPoint addLinesItem(TflApiPresentationEntitiesIdentifier linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

  /**
   * Get lines
   * @return lines
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesIdentifier> getLines() {
    return lines;
  }

  public void setLines(List<TflApiPresentationEntitiesIdentifier> lines) {
    this.lines = lines;
  }


  public TflApiPresentationEntitiesStopPoint lon(Double lon) {
    this.lon = lon;
    return this;
  }

  /**
   * WGS84 longitude of the location.
   * @return lon
   */
  @javax.annotation.Nullable
  public Double getLon() {
    return lon;
  }

  public void setLon(Double lon) {
    this.lon = lon;
  }


  public TflApiPresentationEntitiesStopPoint modes(List<String> modes) {
    this.modes = modes;
    return this;
  }

  public TflApiPresentationEntitiesStopPoint addModesItem(String modesItem) {
    if (this.modes == null) {
      this.modes = new ArrayList<>();
    }
    this.modes.add(modesItem);
    return this;
  }

  /**
   * Get modes
   * @return modes
   */
  @javax.annotation.Nullable
  public List<String> getModes() {
    return modes;
  }

  public void setModes(List<String> modes) {
    this.modes = modes;
  }


  public TflApiPresentationEntitiesStopPoint naptanId(String naptanId) {
    this.naptanId = naptanId;
    return this;
  }

  /**
   * Get naptanId
   * @return naptanId
   */
  @javax.annotation.Nullable
  public String getNaptanId() {
    return naptanId;
  }

  public void setNaptanId(String naptanId) {
    this.naptanId = naptanId;
  }


  public TflApiPresentationEntitiesStopPoint naptanMode(String naptanMode) {
    this.naptanMode = naptanMode;
    return this;
  }

  /**
   * Get naptanMode
   * @return naptanMode
   */
  @javax.annotation.Nullable
  public String getNaptanMode() {
    return naptanMode;
  }

  public void setNaptanMode(String naptanMode) {
    this.naptanMode = naptanMode;
  }


  public TflApiPresentationEntitiesStopPoint placeType(String placeType) {
    this.placeType = placeType;
    return this;
  }

  /**
   * The type of Place. See /Place/Meta/placeTypes for possible values.
   * @return placeType
   */
  @javax.annotation.Nullable
  public String getPlaceType() {
    return placeType;
  }

  public void setPlaceType(String placeType) {
    this.placeType = placeType;
  }


  public TflApiPresentationEntitiesStopPoint platformName(String platformName) {
    this.platformName = platformName;
    return this;
  }

  /**
   * Get platformName
   * @return platformName
   */
  @javax.annotation.Nullable
  public String getPlatformName() {
    return platformName;
  }

  public void setPlatformName(String platformName) {
    this.platformName = platformName;
  }


  public TflApiPresentationEntitiesStopPoint smsCode(String smsCode) {
    this.smsCode = smsCode;
    return this;
  }

  /**
   * Get smsCode
   * @return smsCode
   */
  @javax.annotation.Nullable
  public String getSmsCode() {
    return smsCode;
  }

  public void setSmsCode(String smsCode) {
    this.smsCode = smsCode;
  }


  public TflApiPresentationEntitiesStopPoint stationNaptan(String stationNaptan) {
    this.stationNaptan = stationNaptan;
    return this;
  }

  /**
   * Get stationNaptan
   * @return stationNaptan
   */
  @javax.annotation.Nullable
  public String getStationNaptan() {
    return stationNaptan;
  }

  public void setStationNaptan(String stationNaptan) {
    this.stationNaptan = stationNaptan;
  }


  public TflApiPresentationEntitiesStopPoint status(Boolean status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public Boolean getStatus() {
    return status;
  }

  public void setStatus(Boolean status) {
    this.status = status;
  }


  public TflApiPresentationEntitiesStopPoint stopLetter(String stopLetter) {
    this.stopLetter = stopLetter;
    return this;
  }

  /**
   * The stop letter, if it could be cleansed from the Indicator e.g. \&quot;K\&quot;
   * @return stopLetter
   */
  @javax.annotation.Nullable
  public String getStopLetter() {
    return stopLetter;
  }

  public void setStopLetter(String stopLetter) {
    this.stopLetter = stopLetter;
  }


  public TflApiPresentationEntitiesStopPoint stopType(String stopType) {
    this.stopType = stopType;
    return this;
  }

  /**
   * Get stopType
   * @return stopType
   */
  @javax.annotation.Nullable
  public String getStopType() {
    return stopType;
  }

  public void setStopType(String stopType) {
    this.stopType = stopType;
  }


  public TflApiPresentationEntitiesStopPoint url(String url) {
    this.url = url;
    return this;
  }

  /**
   * The unique location of this resource.
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesStopPoint tflApiPresentationEntitiesStopPoint = (TflApiPresentationEntitiesStopPoint) o;
    return Objects.equals(this.accessibilitySummary, tflApiPresentationEntitiesStopPoint.accessibilitySummary) &&
        Objects.equals(this.additionalProperties, tflApiPresentationEntitiesStopPoint.additionalProperties) &&
        Objects.equals(this.children, tflApiPresentationEntitiesStopPoint.children) &&
        Objects.equals(this.childrenUrls, tflApiPresentationEntitiesStopPoint.childrenUrls) &&
        Objects.equals(this.commonName, tflApiPresentationEntitiesStopPoint.commonName) &&
        Objects.equals(this.distance, tflApiPresentationEntitiesStopPoint.distance) &&
        Objects.equals(this.fullName, tflApiPresentationEntitiesStopPoint.fullName) &&
        Objects.equals(this.hubNaptanCode, tflApiPresentationEntitiesStopPoint.hubNaptanCode) &&
        Objects.equals(this.icsCode, tflApiPresentationEntitiesStopPoint.icsCode) &&
        Objects.equals(this.id, tflApiPresentationEntitiesStopPoint.id) &&
        Objects.equals(this.indicator, tflApiPresentationEntitiesStopPoint.indicator) &&
        Objects.equals(this.individualStopId, tflApiPresentationEntitiesStopPoint.individualStopId) &&
        Objects.equals(this.lat, tflApiPresentationEntitiesStopPoint.lat) &&
        Objects.equals(this.lineGroup, tflApiPresentationEntitiesStopPoint.lineGroup) &&
        Objects.equals(this.lineModeGroups, tflApiPresentationEntitiesStopPoint.lineModeGroups) &&
        Objects.equals(this.lines, tflApiPresentationEntitiesStopPoint.lines) &&
        Objects.equals(this.lon, tflApiPresentationEntitiesStopPoint.lon) &&
        Objects.equals(this.modes, tflApiPresentationEntitiesStopPoint.modes) &&
        Objects.equals(this.naptanId, tflApiPresentationEntitiesStopPoint.naptanId) &&
        Objects.equals(this.naptanMode, tflApiPresentationEntitiesStopPoint.naptanMode) &&
        Objects.equals(this.placeType, tflApiPresentationEntitiesStopPoint.placeType) &&
        Objects.equals(this.platformName, tflApiPresentationEntitiesStopPoint.platformName) &&
        Objects.equals(this.smsCode, tflApiPresentationEntitiesStopPoint.smsCode) &&
        Objects.equals(this.stationNaptan, tflApiPresentationEntitiesStopPoint.stationNaptan) &&
        Objects.equals(this.status, tflApiPresentationEntitiesStopPoint.status) &&
        Objects.equals(this.stopLetter, tflApiPresentationEntitiesStopPoint.stopLetter) &&
        Objects.equals(this.stopType, tflApiPresentationEntitiesStopPoint.stopType) &&
        Objects.equals(this.url, tflApiPresentationEntitiesStopPoint.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessibilitySummary, additionalProperties, children, childrenUrls, commonName, distance, fullName, hubNaptanCode, icsCode, id, indicator, individualStopId, lat, lineGroup, lineModeGroups, lines, lon, modes, naptanId, naptanMode, placeType, platformName, smsCode, stationNaptan, status, stopLetter, stopType, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesStopPoint {\n");
    sb.append("    accessibilitySummary: ").append(toIndentedString(accessibilitySummary)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    childrenUrls: ").append(toIndentedString(childrenUrls)).append("\n");
    sb.append("    commonName: ").append(toIndentedString(commonName)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    hubNaptanCode: ").append(toIndentedString(hubNaptanCode)).append("\n");
    sb.append("    icsCode: ").append(toIndentedString(icsCode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    indicator: ").append(toIndentedString(indicator)).append("\n");
    sb.append("    individualStopId: ").append(toIndentedString(individualStopId)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    lineGroup: ").append(toIndentedString(lineGroup)).append("\n");
    sb.append("    lineModeGroups: ").append(toIndentedString(lineModeGroups)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("    modes: ").append(toIndentedString(modes)).append("\n");
    sb.append("    naptanId: ").append(toIndentedString(naptanId)).append("\n");
    sb.append("    naptanMode: ").append(toIndentedString(naptanMode)).append("\n");
    sb.append("    placeType: ").append(toIndentedString(placeType)).append("\n");
    sb.append("    platformName: ").append(toIndentedString(platformName)).append("\n");
    sb.append("    smsCode: ").append(toIndentedString(smsCode)).append("\n");
    sb.append("    stationNaptan: ").append(toIndentedString(stationNaptan)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stopLetter: ").append(toIndentedString(stopLetter)).append("\n");
    sb.append("    stopType: ").append(toIndentedString(stopType)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessibilitySummary");
    openapiFields.add("additionalProperties");
    openapiFields.add("children");
    openapiFields.add("childrenUrls");
    openapiFields.add("commonName");
    openapiFields.add("distance");
    openapiFields.add("fullName");
    openapiFields.add("hubNaptanCode");
    openapiFields.add("icsCode");
    openapiFields.add("id");
    openapiFields.add("indicator");
    openapiFields.add("individualStopId");
    openapiFields.add("lat");
    openapiFields.add("lineGroup");
    openapiFields.add("lineModeGroups");
    openapiFields.add("lines");
    openapiFields.add("lon");
    openapiFields.add("modes");
    openapiFields.add("naptanId");
    openapiFields.add("naptanMode");
    openapiFields.add("placeType");
    openapiFields.add("platformName");
    openapiFields.add("smsCode");
    openapiFields.add("stationNaptan");
    openapiFields.add("status");
    openapiFields.add("stopLetter");
    openapiFields.add("stopType");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesStopPoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesStopPoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesStopPoint is not found in the empty JSON string", TflApiPresentationEntitiesStopPoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesStopPoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesStopPoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accessibilitySummary") != null && !jsonObj.get("accessibilitySummary").isJsonNull()) && !jsonObj.get("accessibilitySummary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessibilitySummary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessibilitySummary").toString()));
      }
      if (jsonObj.get("additionalProperties") != null && !jsonObj.get("additionalProperties").isJsonNull()) {
        JsonArray jsonArrayadditionalProperties = jsonObj.getAsJsonArray("additionalProperties");
        if (jsonArrayadditionalProperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("additionalProperties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `additionalProperties` to be an array in the JSON string but got `%s`", jsonObj.get("additionalProperties").toString()));
          }

          // validate the optional field `additionalProperties` (array)
          for (int i = 0; i < jsonArrayadditionalProperties.size(); i++) {
            TflApiPresentationEntitiesAdditionalProperties.validateJsonElement(jsonArrayadditionalProperties.get(i));
          };
        }
      }
      if (jsonObj.get("children") != null && !jsonObj.get("children").isJsonNull()) {
        JsonArray jsonArraychildren = jsonObj.getAsJsonArray("children");
        if (jsonArraychildren != null) {
          // ensure the json data is an array
          if (!jsonObj.get("children").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `children` to be an array in the JSON string but got `%s`", jsonObj.get("children").toString()));
          }

          // validate the optional field `children` (array)
          for (int i = 0; i < jsonArraychildren.size(); i++) {
            TflApiPresentationEntitiesPlace.validateJsonElement(jsonArraychildren.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("childrenUrls") != null && !jsonObj.get("childrenUrls").isJsonNull() && !jsonObj.get("childrenUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `childrenUrls` to be an array in the JSON string but got `%s`", jsonObj.get("childrenUrls").toString()));
      }
      if ((jsonObj.get("commonName") != null && !jsonObj.get("commonName").isJsonNull()) && !jsonObj.get("commonName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commonName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commonName").toString()));
      }
      if ((jsonObj.get("fullName") != null && !jsonObj.get("fullName").isJsonNull()) && !jsonObj.get("fullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullName").toString()));
      }
      if ((jsonObj.get("hubNaptanCode") != null && !jsonObj.get("hubNaptanCode").isJsonNull()) && !jsonObj.get("hubNaptanCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hubNaptanCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hubNaptanCode").toString()));
      }
      if ((jsonObj.get("icsCode") != null && !jsonObj.get("icsCode").isJsonNull()) && !jsonObj.get("icsCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icsCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icsCode").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("indicator") != null && !jsonObj.get("indicator").isJsonNull()) && !jsonObj.get("indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("indicator").toString()));
      }
      if ((jsonObj.get("individualStopId") != null && !jsonObj.get("individualStopId").isJsonNull()) && !jsonObj.get("individualStopId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualStopId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualStopId").toString()));
      }
      if (jsonObj.get("lineGroup") != null && !jsonObj.get("lineGroup").isJsonNull()) {
        JsonArray jsonArraylineGroup = jsonObj.getAsJsonArray("lineGroup");
        if (jsonArraylineGroup != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineGroup").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineGroup` to be an array in the JSON string but got `%s`", jsonObj.get("lineGroup").toString()));
          }

          // validate the optional field `lineGroup` (array)
          for (int i = 0; i < jsonArraylineGroup.size(); i++) {
            TflApiPresentationEntitiesLineGroup.validateJsonElement(jsonArraylineGroup.get(i));
          };
        }
      }
      if (jsonObj.get("lineModeGroups") != null && !jsonObj.get("lineModeGroups").isJsonNull()) {
        JsonArray jsonArraylineModeGroups = jsonObj.getAsJsonArray("lineModeGroups");
        if (jsonArraylineModeGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineModeGroups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineModeGroups` to be an array in the JSON string but got `%s`", jsonObj.get("lineModeGroups").toString()));
          }

          // validate the optional field `lineModeGroups` (array)
          for (int i = 0; i < jsonArraylineModeGroups.size(); i++) {
            TflApiPresentationEntitiesLineModeGroup.validateJsonElement(jsonArraylineModeGroups.get(i));
          };
        }
      }
      if (jsonObj.get("lines") != null && !jsonObj.get("lines").isJsonNull()) {
        JsonArray jsonArraylines = jsonObj.getAsJsonArray("lines");
        if (jsonArraylines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lines` to be an array in the JSON string but got `%s`", jsonObj.get("lines").toString()));
          }

          // validate the optional field `lines` (array)
          for (int i = 0; i < jsonArraylines.size(); i++) {
            TflApiPresentationEntitiesIdentifier.validateJsonElement(jsonArraylines.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("modes") != null && !jsonObj.get("modes").isJsonNull() && !jsonObj.get("modes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `modes` to be an array in the JSON string but got `%s`", jsonObj.get("modes").toString()));
      }
      if ((jsonObj.get("naptanId") != null && !jsonObj.get("naptanId").isJsonNull()) && !jsonObj.get("naptanId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `naptanId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("naptanId").toString()));
      }
      if ((jsonObj.get("naptanMode") != null && !jsonObj.get("naptanMode").isJsonNull()) && !jsonObj.get("naptanMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `naptanMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("naptanMode").toString()));
      }
      if ((jsonObj.get("placeType") != null && !jsonObj.get("placeType").isJsonNull()) && !jsonObj.get("placeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placeType").toString()));
      }
      if ((jsonObj.get("platformName") != null && !jsonObj.get("platformName").isJsonNull()) && !jsonObj.get("platformName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platformName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platformName").toString()));
      }
      if ((jsonObj.get("smsCode") != null && !jsonObj.get("smsCode").isJsonNull()) && !jsonObj.get("smsCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smsCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smsCode").toString()));
      }
      if ((jsonObj.get("stationNaptan") != null && !jsonObj.get("stationNaptan").isJsonNull()) && !jsonObj.get("stationNaptan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stationNaptan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stationNaptan").toString()));
      }
      if ((jsonObj.get("stopLetter") != null && !jsonObj.get("stopLetter").isJsonNull()) && !jsonObj.get("stopLetter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stopLetter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stopLetter").toString()));
      }
      if ((jsonObj.get("stopType") != null && !jsonObj.get("stopType").isJsonNull()) && !jsonObj.get("stopType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stopType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stopType").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesStopPoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesStopPoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesStopPoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesStopPoint.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesStopPoint>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesStopPoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesStopPoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesStopPoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesStopPoint
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesStopPoint
   */
  public static TflApiPresentationEntitiesStopPoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesStopPoint.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesStopPoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

