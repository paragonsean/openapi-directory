/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesRoadProject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesRoadProject {
  public static final String SERIALIZED_NAME_BOROUGHS_BENEFITED = "boroughsBenefited";
  @SerializedName(SERIALIZED_NAME_BOROUGHS_BENEFITED)
  private List<String> boroughsBenefited = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONSTRUCTION_END_DATE = "constructionEndDate";
  @SerializedName(SERIALIZED_NAME_CONSTRUCTION_END_DATE)
  private OffsetDateTime constructionEndDate;

  public static final String SERIALIZED_NAME_CONSTRUCTION_START_DATE = "constructionStartDate";
  @SerializedName(SERIALIZED_NAME_CONSTRUCTION_START_DATE)
  private OffsetDateTime constructionStartDate;

  public static final String SERIALIZED_NAME_CONSULTATION_END_DATE = "consultationEndDate";
  @SerializedName(SERIALIZED_NAME_CONSULTATION_END_DATE)
  private OffsetDateTime consultationEndDate;

  public static final String SERIALIZED_NAME_CONSULTATION_PAGE_URL = "consultationPageUrl";
  @SerializedName(SERIALIZED_NAME_CONSULTATION_PAGE_URL)
  private String consultationPageUrl;

  public static final String SERIALIZED_NAME_CONSULTATION_START_DATE = "consultationStartDate";
  @SerializedName(SERIALIZED_NAME_CONSULTATION_START_DATE)
  private OffsetDateTime consultationStartDate;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL = "contactEmail";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL)
  private String contactEmail;

  public static final String SERIALIZED_NAME_CONTACT_NAME = "contactName";
  @SerializedName(SERIALIZED_NAME_CONTACT_NAME)
  private String contactName;

  public static final String SERIALIZED_NAME_CYCLE_SUPERHIGHWAY_ID = "cycleSuperhighwayId";
  @SerializedName(SERIALIZED_NAME_CYCLE_SUPERHIGHWAY_ID)
  private String cycleSuperhighwayId;

  public static final String SERIALIZED_NAME_EXTERNAL_PAGE_URL = "externalPageUrl";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_PAGE_URL)
  private String externalPageUrl;

  /**
   * Gets or Sets phase
   */
  @JsonAdapter(PhaseEnum.Adapter.class)
  public enum PhaseEnum {
    UNSCOPED("Unscoped"),
    
    CONCEPT("Concept"),
    
    CONSULTATION_ENDED("ConsultationEnded"),
    
    CONSULTATION("Consultation"),
    
    CONSTRUCTION("Construction"),
    
    COMPLETE("Complete");

    private String value;

    PhaseEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PhaseEnum fromValue(String value) {
      for (PhaseEnum b : PhaseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PhaseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhaseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PhaseEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PhaseEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PhaseEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private PhaseEnum phase;

  public static final String SERIALIZED_NAME_PROJECT_DESCRIPTION = "projectDescription";
  @SerializedName(SERIALIZED_NAME_PROJECT_DESCRIPTION)
  private String projectDescription;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_PROJECT_NAME = "projectName";
  @SerializedName(SERIALIZED_NAME_PROJECT_NAME)
  private String projectName;

  public static final String SERIALIZED_NAME_PROJECT_PAGE_URL = "projectPageUrl";
  @SerializedName(SERIALIZED_NAME_PROJECT_PAGE_URL)
  private String projectPageUrl;

  public static final String SERIALIZED_NAME_PROJECT_SUMMARY_PAGE_URL = "projectSummaryPageUrl";
  @SerializedName(SERIALIZED_NAME_PROJECT_SUMMARY_PAGE_URL)
  private String projectSummaryPageUrl;

  public static final String SERIALIZED_NAME_SCHEME_NAME = "schemeName";
  @SerializedName(SERIALIZED_NAME_SCHEME_NAME)
  private String schemeName;

  public TflApiPresentationEntitiesRoadProject() {
  }

  public TflApiPresentationEntitiesRoadProject boroughsBenefited(List<String> boroughsBenefited) {
    this.boroughsBenefited = boroughsBenefited;
    return this;
  }

  public TflApiPresentationEntitiesRoadProject addBoroughsBenefitedItem(String boroughsBenefitedItem) {
    if (this.boroughsBenefited == null) {
      this.boroughsBenefited = new ArrayList<>();
    }
    this.boroughsBenefited.add(boroughsBenefitedItem);
    return this;
  }

  /**
   * Get boroughsBenefited
   * @return boroughsBenefited
   */
  @javax.annotation.Nullable
  public List<String> getBoroughsBenefited() {
    return boroughsBenefited;
  }

  public void setBoroughsBenefited(List<String> boroughsBenefited) {
    this.boroughsBenefited = boroughsBenefited;
  }


  public TflApiPresentationEntitiesRoadProject constructionEndDate(OffsetDateTime constructionEndDate) {
    this.constructionEndDate = constructionEndDate;
    return this;
  }

  /**
   * Get constructionEndDate
   * @return constructionEndDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConstructionEndDate() {
    return constructionEndDate;
  }

  public void setConstructionEndDate(OffsetDateTime constructionEndDate) {
    this.constructionEndDate = constructionEndDate;
  }


  public TflApiPresentationEntitiesRoadProject constructionStartDate(OffsetDateTime constructionStartDate) {
    this.constructionStartDate = constructionStartDate;
    return this;
  }

  /**
   * Get constructionStartDate
   * @return constructionStartDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConstructionStartDate() {
    return constructionStartDate;
  }

  public void setConstructionStartDate(OffsetDateTime constructionStartDate) {
    this.constructionStartDate = constructionStartDate;
  }


  public TflApiPresentationEntitiesRoadProject consultationEndDate(OffsetDateTime consultationEndDate) {
    this.consultationEndDate = consultationEndDate;
    return this;
  }

  /**
   * Get consultationEndDate
   * @return consultationEndDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConsultationEndDate() {
    return consultationEndDate;
  }

  public void setConsultationEndDate(OffsetDateTime consultationEndDate) {
    this.consultationEndDate = consultationEndDate;
  }


  public TflApiPresentationEntitiesRoadProject consultationPageUrl(String consultationPageUrl) {
    this.consultationPageUrl = consultationPageUrl;
    return this;
  }

  /**
   * Get consultationPageUrl
   * @return consultationPageUrl
   */
  @javax.annotation.Nullable
  public String getConsultationPageUrl() {
    return consultationPageUrl;
  }

  public void setConsultationPageUrl(String consultationPageUrl) {
    this.consultationPageUrl = consultationPageUrl;
  }


  public TflApiPresentationEntitiesRoadProject consultationStartDate(OffsetDateTime consultationStartDate) {
    this.consultationStartDate = consultationStartDate;
    return this;
  }

  /**
   * Get consultationStartDate
   * @return consultationStartDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConsultationStartDate() {
    return consultationStartDate;
  }

  public void setConsultationStartDate(OffsetDateTime consultationStartDate) {
    this.consultationStartDate = consultationStartDate;
  }


  public TflApiPresentationEntitiesRoadProject contactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
    return this;
  }

  /**
   * Get contactEmail
   * @return contactEmail
   */
  @javax.annotation.Nullable
  public String getContactEmail() {
    return contactEmail;
  }

  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }


  public TflApiPresentationEntitiesRoadProject contactName(String contactName) {
    this.contactName = contactName;
    return this;
  }

  /**
   * Get contactName
   * @return contactName
   */
  @javax.annotation.Nullable
  public String getContactName() {
    return contactName;
  }

  public void setContactName(String contactName) {
    this.contactName = contactName;
  }


  public TflApiPresentationEntitiesRoadProject cycleSuperhighwayId(String cycleSuperhighwayId) {
    this.cycleSuperhighwayId = cycleSuperhighwayId;
    return this;
  }

  /**
   * Get cycleSuperhighwayId
   * @return cycleSuperhighwayId
   */
  @javax.annotation.Nullable
  public String getCycleSuperhighwayId() {
    return cycleSuperhighwayId;
  }

  public void setCycleSuperhighwayId(String cycleSuperhighwayId) {
    this.cycleSuperhighwayId = cycleSuperhighwayId;
  }


  public TflApiPresentationEntitiesRoadProject externalPageUrl(String externalPageUrl) {
    this.externalPageUrl = externalPageUrl;
    return this;
  }

  /**
   * Get externalPageUrl
   * @return externalPageUrl
   */
  @javax.annotation.Nullable
  public String getExternalPageUrl() {
    return externalPageUrl;
  }

  public void setExternalPageUrl(String externalPageUrl) {
    this.externalPageUrl = externalPageUrl;
  }


  public TflApiPresentationEntitiesRoadProject phase(PhaseEnum phase) {
    this.phase = phase;
    return this;
  }

  /**
   * Get phase
   * @return phase
   */
  @javax.annotation.Nullable
  public PhaseEnum getPhase() {
    return phase;
  }

  public void setPhase(PhaseEnum phase) {
    this.phase = phase;
  }


  public TflApiPresentationEntitiesRoadProject projectDescription(String projectDescription) {
    this.projectDescription = projectDescription;
    return this;
  }

  /**
   * Get projectDescription
   * @return projectDescription
   */
  @javax.annotation.Nullable
  public String getProjectDescription() {
    return projectDescription;
  }

  public void setProjectDescription(String projectDescription) {
    this.projectDescription = projectDescription;
  }


  public TflApiPresentationEntitiesRoadProject projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Get projectId
   * @return projectId
   */
  @javax.annotation.Nullable
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public TflApiPresentationEntitiesRoadProject projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  /**
   * Get projectName
   * @return projectName
   */
  @javax.annotation.Nullable
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  public TflApiPresentationEntitiesRoadProject projectPageUrl(String projectPageUrl) {
    this.projectPageUrl = projectPageUrl;
    return this;
  }

  /**
   * Get projectPageUrl
   * @return projectPageUrl
   */
  @javax.annotation.Nullable
  public String getProjectPageUrl() {
    return projectPageUrl;
  }

  public void setProjectPageUrl(String projectPageUrl) {
    this.projectPageUrl = projectPageUrl;
  }


  public TflApiPresentationEntitiesRoadProject projectSummaryPageUrl(String projectSummaryPageUrl) {
    this.projectSummaryPageUrl = projectSummaryPageUrl;
    return this;
  }

  /**
   * Get projectSummaryPageUrl
   * @return projectSummaryPageUrl
   */
  @javax.annotation.Nullable
  public String getProjectSummaryPageUrl() {
    return projectSummaryPageUrl;
  }

  public void setProjectSummaryPageUrl(String projectSummaryPageUrl) {
    this.projectSummaryPageUrl = projectSummaryPageUrl;
  }


  public TflApiPresentationEntitiesRoadProject schemeName(String schemeName) {
    this.schemeName = schemeName;
    return this;
  }

  /**
   * Get schemeName
   * @return schemeName
   */
  @javax.annotation.Nullable
  public String getSchemeName() {
    return schemeName;
  }

  public void setSchemeName(String schemeName) {
    this.schemeName = schemeName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesRoadProject tflApiPresentationEntitiesRoadProject = (TflApiPresentationEntitiesRoadProject) o;
    return Objects.equals(this.boroughsBenefited, tflApiPresentationEntitiesRoadProject.boroughsBenefited) &&
        Objects.equals(this.constructionEndDate, tflApiPresentationEntitiesRoadProject.constructionEndDate) &&
        Objects.equals(this.constructionStartDate, tflApiPresentationEntitiesRoadProject.constructionStartDate) &&
        Objects.equals(this.consultationEndDate, tflApiPresentationEntitiesRoadProject.consultationEndDate) &&
        Objects.equals(this.consultationPageUrl, tflApiPresentationEntitiesRoadProject.consultationPageUrl) &&
        Objects.equals(this.consultationStartDate, tflApiPresentationEntitiesRoadProject.consultationStartDate) &&
        Objects.equals(this.contactEmail, tflApiPresentationEntitiesRoadProject.contactEmail) &&
        Objects.equals(this.contactName, tflApiPresentationEntitiesRoadProject.contactName) &&
        Objects.equals(this.cycleSuperhighwayId, tflApiPresentationEntitiesRoadProject.cycleSuperhighwayId) &&
        Objects.equals(this.externalPageUrl, tflApiPresentationEntitiesRoadProject.externalPageUrl) &&
        Objects.equals(this.phase, tflApiPresentationEntitiesRoadProject.phase) &&
        Objects.equals(this.projectDescription, tflApiPresentationEntitiesRoadProject.projectDescription) &&
        Objects.equals(this.projectId, tflApiPresentationEntitiesRoadProject.projectId) &&
        Objects.equals(this.projectName, tflApiPresentationEntitiesRoadProject.projectName) &&
        Objects.equals(this.projectPageUrl, tflApiPresentationEntitiesRoadProject.projectPageUrl) &&
        Objects.equals(this.projectSummaryPageUrl, tflApiPresentationEntitiesRoadProject.projectSummaryPageUrl) &&
        Objects.equals(this.schemeName, tflApiPresentationEntitiesRoadProject.schemeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boroughsBenefited, constructionEndDate, constructionStartDate, consultationEndDate, consultationPageUrl, consultationStartDate, contactEmail, contactName, cycleSuperhighwayId, externalPageUrl, phase, projectDescription, projectId, projectName, projectPageUrl, projectSummaryPageUrl, schemeName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesRoadProject {\n");
    sb.append("    boroughsBenefited: ").append(toIndentedString(boroughsBenefited)).append("\n");
    sb.append("    constructionEndDate: ").append(toIndentedString(constructionEndDate)).append("\n");
    sb.append("    constructionStartDate: ").append(toIndentedString(constructionStartDate)).append("\n");
    sb.append("    consultationEndDate: ").append(toIndentedString(consultationEndDate)).append("\n");
    sb.append("    consultationPageUrl: ").append(toIndentedString(consultationPageUrl)).append("\n");
    sb.append("    consultationStartDate: ").append(toIndentedString(consultationStartDate)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    contactName: ").append(toIndentedString(contactName)).append("\n");
    sb.append("    cycleSuperhighwayId: ").append(toIndentedString(cycleSuperhighwayId)).append("\n");
    sb.append("    externalPageUrl: ").append(toIndentedString(externalPageUrl)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    projectDescription: ").append(toIndentedString(projectDescription)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    projectPageUrl: ").append(toIndentedString(projectPageUrl)).append("\n");
    sb.append("    projectSummaryPageUrl: ").append(toIndentedString(projectSummaryPageUrl)).append("\n");
    sb.append("    schemeName: ").append(toIndentedString(schemeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("boroughsBenefited");
    openapiFields.add("constructionEndDate");
    openapiFields.add("constructionStartDate");
    openapiFields.add("consultationEndDate");
    openapiFields.add("consultationPageUrl");
    openapiFields.add("consultationStartDate");
    openapiFields.add("contactEmail");
    openapiFields.add("contactName");
    openapiFields.add("cycleSuperhighwayId");
    openapiFields.add("externalPageUrl");
    openapiFields.add("phase");
    openapiFields.add("projectDescription");
    openapiFields.add("projectId");
    openapiFields.add("projectName");
    openapiFields.add("projectPageUrl");
    openapiFields.add("projectSummaryPageUrl");
    openapiFields.add("schemeName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesRoadProject
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesRoadProject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesRoadProject is not found in the empty JSON string", TflApiPresentationEntitiesRoadProject.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesRoadProject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesRoadProject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("boroughsBenefited") != null && !jsonObj.get("boroughsBenefited").isJsonNull() && !jsonObj.get("boroughsBenefited").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `boroughsBenefited` to be an array in the JSON string but got `%s`", jsonObj.get("boroughsBenefited").toString()));
      }
      if ((jsonObj.get("consultationPageUrl") != null && !jsonObj.get("consultationPageUrl").isJsonNull()) && !jsonObj.get("consultationPageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `consultationPageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("consultationPageUrl").toString()));
      }
      if ((jsonObj.get("contactEmail") != null && !jsonObj.get("contactEmail").isJsonNull()) && !jsonObj.get("contactEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactEmail").toString()));
      }
      if ((jsonObj.get("contactName") != null && !jsonObj.get("contactName").isJsonNull()) && !jsonObj.get("contactName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactName").toString()));
      }
      if ((jsonObj.get("cycleSuperhighwayId") != null && !jsonObj.get("cycleSuperhighwayId").isJsonNull()) && !jsonObj.get("cycleSuperhighwayId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cycleSuperhighwayId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cycleSuperhighwayId").toString()));
      }
      if ((jsonObj.get("externalPageUrl") != null && !jsonObj.get("externalPageUrl").isJsonNull()) && !jsonObj.get("externalPageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalPageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalPageUrl").toString()));
      }
      if ((jsonObj.get("phase") != null && !jsonObj.get("phase").isJsonNull()) && !jsonObj.get("phase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phase").toString()));
      }
      // validate the optional field `phase`
      if (jsonObj.get("phase") != null && !jsonObj.get("phase").isJsonNull()) {
        PhaseEnum.validateJsonElement(jsonObj.get("phase"));
      }
      if ((jsonObj.get("projectDescription") != null && !jsonObj.get("projectDescription").isJsonNull()) && !jsonObj.get("projectDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectDescription").toString()));
      }
      if ((jsonObj.get("projectId") != null && !jsonObj.get("projectId").isJsonNull()) && !jsonObj.get("projectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectId").toString()));
      }
      if ((jsonObj.get("projectName") != null && !jsonObj.get("projectName").isJsonNull()) && !jsonObj.get("projectName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectName").toString()));
      }
      if ((jsonObj.get("projectPageUrl") != null && !jsonObj.get("projectPageUrl").isJsonNull()) && !jsonObj.get("projectPageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectPageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectPageUrl").toString()));
      }
      if ((jsonObj.get("projectSummaryPageUrl") != null && !jsonObj.get("projectSummaryPageUrl").isJsonNull()) && !jsonObj.get("projectSummaryPageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectSummaryPageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectSummaryPageUrl").toString()));
      }
      if ((jsonObj.get("schemeName") != null && !jsonObj.get("schemeName").isJsonNull()) && !jsonObj.get("schemeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schemeName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesRoadProject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesRoadProject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesRoadProject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesRoadProject.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesRoadProject>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesRoadProject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesRoadProject read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesRoadProject given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesRoadProject
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesRoadProject
   */
  public static TflApiPresentationEntitiesRoadProject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesRoadProject.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesRoadProject to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

