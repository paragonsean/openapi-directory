/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesMessage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesFaresRecommendation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesFaresRecommendation {
  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private String cost;

  public static final String SERIALIZED_NAME_DISCOUNT_CARD = "discountCard";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_CARD)
  private String discountCard;

  public static final String SERIALIZED_NAME_FARE_TYPE = "fareType";
  @SerializedName(SERIALIZED_NAME_FARE_TYPE)
  private String fareType;

  public static final String SERIALIZED_NAME_GETTING_YOUR_TICKET = "gettingYourTicket";
  @SerializedName(SERIALIZED_NAME_GETTING_YOUR_TICKET)
  private List<TflApiPresentationEntitiesMessage> gettingYourTicket = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_KEY_FEATURES = "keyFeatures";
  @SerializedName(SERIALIZED_NAME_KEY_FEATURES)
  private List<TflApiPresentationEntitiesMessage> keyFeatures = new ArrayList<>();

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private List<TflApiPresentationEntitiesMessage> notes = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRICE_COMPARISON = "priceComparison";
  @SerializedName(SERIALIZED_NAME_PRICE_COMPARISON)
  private String priceComparison;

  public static final String SERIALIZED_NAME_PRICE_DESCRIPTION = "priceDescription";
  @SerializedName(SERIALIZED_NAME_PRICE_DESCRIPTION)
  private String priceDescription;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private String product;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "productType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private String productType;

  public static final String SERIALIZED_NAME_RANK = "rank";
  @SerializedName(SERIALIZED_NAME_RANK)
  private Integer rank;

  public static final String SERIALIZED_NAME_RECOMMENDED_TOP_UP = "recommendedTopUp";
  @SerializedName(SERIALIZED_NAME_RECOMMENDED_TOP_UP)
  private String recommendedTopUp;

  public static final String SERIALIZED_NAME_RULE = "rule";
  @SerializedName(SERIALIZED_NAME_RULE)
  private Integer rule;

  public static final String SERIALIZED_NAME_SINGLE_FARE = "singleFare";
  @SerializedName(SERIALIZED_NAME_SINGLE_FARE)
  private Double singleFare;

  public static final String SERIALIZED_NAME_TICKET_TIME = "ticketTime";
  @SerializedName(SERIALIZED_NAME_TICKET_TIME)
  private String ticketTime;

  public static final String SERIALIZED_NAME_TICKET_TYPE = "ticketType";
  @SerializedName(SERIALIZED_NAME_TICKET_TYPE)
  private String ticketType;

  public static final String SERIALIZED_NAME_ZONES = "zones";
  @SerializedName(SERIALIZED_NAME_ZONES)
  private String zones;

  public TflApiPresentationEntitiesFaresRecommendation() {
  }

  public TflApiPresentationEntitiesFaresRecommendation cost(String cost) {
    this.cost = cost;
    return this;
  }

  /**
   * Get cost
   * @return cost
   */
  @javax.annotation.Nullable
  public String getCost() {
    return cost;
  }

  public void setCost(String cost) {
    this.cost = cost;
  }


  public TflApiPresentationEntitiesFaresRecommendation discountCard(String discountCard) {
    this.discountCard = discountCard;
    return this;
  }

  /**
   * Get discountCard
   * @return discountCard
   */
  @javax.annotation.Nullable
  public String getDiscountCard() {
    return discountCard;
  }

  public void setDiscountCard(String discountCard) {
    this.discountCard = discountCard;
  }


  public TflApiPresentationEntitiesFaresRecommendation fareType(String fareType) {
    this.fareType = fareType;
    return this;
  }

  /**
   * Get fareType
   * @return fareType
   */
  @javax.annotation.Nullable
  public String getFareType() {
    return fareType;
  }

  public void setFareType(String fareType) {
    this.fareType = fareType;
  }


  public TflApiPresentationEntitiesFaresRecommendation gettingYourTicket(List<TflApiPresentationEntitiesMessage> gettingYourTicket) {
    this.gettingYourTicket = gettingYourTicket;
    return this;
  }

  public TflApiPresentationEntitiesFaresRecommendation addGettingYourTicketItem(TflApiPresentationEntitiesMessage gettingYourTicketItem) {
    if (this.gettingYourTicket == null) {
      this.gettingYourTicket = new ArrayList<>();
    }
    this.gettingYourTicket.add(gettingYourTicketItem);
    return this;
  }

  /**
   * Get gettingYourTicket
   * @return gettingYourTicket
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMessage> getGettingYourTicket() {
    return gettingYourTicket;
  }

  public void setGettingYourTicket(List<TflApiPresentationEntitiesMessage> gettingYourTicket) {
    this.gettingYourTicket = gettingYourTicket;
  }


  public TflApiPresentationEntitiesFaresRecommendation id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public TflApiPresentationEntitiesFaresRecommendation keyFeatures(List<TflApiPresentationEntitiesMessage> keyFeatures) {
    this.keyFeatures = keyFeatures;
    return this;
  }

  public TflApiPresentationEntitiesFaresRecommendation addKeyFeaturesItem(TflApiPresentationEntitiesMessage keyFeaturesItem) {
    if (this.keyFeatures == null) {
      this.keyFeatures = new ArrayList<>();
    }
    this.keyFeatures.add(keyFeaturesItem);
    return this;
  }

  /**
   * Get keyFeatures
   * @return keyFeatures
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMessage> getKeyFeatures() {
    return keyFeatures;
  }

  public void setKeyFeatures(List<TflApiPresentationEntitiesMessage> keyFeatures) {
    this.keyFeatures = keyFeatures;
  }


  public TflApiPresentationEntitiesFaresRecommendation notes(List<TflApiPresentationEntitiesMessage> notes) {
    this.notes = notes;
    return this;
  }

  public TflApiPresentationEntitiesFaresRecommendation addNotesItem(TflApiPresentationEntitiesMessage notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<>();
    }
    this.notes.add(notesItem);
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMessage> getNotes() {
    return notes;
  }

  public void setNotes(List<TflApiPresentationEntitiesMessage> notes) {
    this.notes = notes;
  }


  public TflApiPresentationEntitiesFaresRecommendation priceComparison(String priceComparison) {
    this.priceComparison = priceComparison;
    return this;
  }

  /**
   * Get priceComparison
   * @return priceComparison
   */
  @javax.annotation.Nullable
  public String getPriceComparison() {
    return priceComparison;
  }

  public void setPriceComparison(String priceComparison) {
    this.priceComparison = priceComparison;
  }


  public TflApiPresentationEntitiesFaresRecommendation priceDescription(String priceDescription) {
    this.priceDescription = priceDescription;
    return this;
  }

  /**
   * Get priceDescription
   * @return priceDescription
   */
  @javax.annotation.Nullable
  public String getPriceDescription() {
    return priceDescription;
  }

  public void setPriceDescription(String priceDescription) {
    this.priceDescription = priceDescription;
  }


  public TflApiPresentationEntitiesFaresRecommendation product(String product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }


  public TflApiPresentationEntitiesFaresRecommendation productType(String productType) {
    this.productType = productType;
    return this;
  }

  /**
   * Get productType
   * @return productType
   */
  @javax.annotation.Nullable
  public String getProductType() {
    return productType;
  }

  public void setProductType(String productType) {
    this.productType = productType;
  }


  public TflApiPresentationEntitiesFaresRecommendation rank(Integer rank) {
    this.rank = rank;
    return this;
  }

  /**
   * Get rank
   * @return rank
   */
  @javax.annotation.Nullable
  public Integer getRank() {
    return rank;
  }

  public void setRank(Integer rank) {
    this.rank = rank;
  }


  public TflApiPresentationEntitiesFaresRecommendation recommendedTopUp(String recommendedTopUp) {
    this.recommendedTopUp = recommendedTopUp;
    return this;
  }

  /**
   * Get recommendedTopUp
   * @return recommendedTopUp
   */
  @javax.annotation.Nullable
  public String getRecommendedTopUp() {
    return recommendedTopUp;
  }

  public void setRecommendedTopUp(String recommendedTopUp) {
    this.recommendedTopUp = recommendedTopUp;
  }


  public TflApiPresentationEntitiesFaresRecommendation rule(Integer rule) {
    this.rule = rule;
    return this;
  }

  /**
   * Get rule
   * @return rule
   */
  @javax.annotation.Nullable
  public Integer getRule() {
    return rule;
  }

  public void setRule(Integer rule) {
    this.rule = rule;
  }


  public TflApiPresentationEntitiesFaresRecommendation singleFare(Double singleFare) {
    this.singleFare = singleFare;
    return this;
  }

  /**
   * Get singleFare
   * @return singleFare
   */
  @javax.annotation.Nullable
  public Double getSingleFare() {
    return singleFare;
  }

  public void setSingleFare(Double singleFare) {
    this.singleFare = singleFare;
  }


  public TflApiPresentationEntitiesFaresRecommendation ticketTime(String ticketTime) {
    this.ticketTime = ticketTime;
    return this;
  }

  /**
   * Get ticketTime
   * @return ticketTime
   */
  @javax.annotation.Nullable
  public String getTicketTime() {
    return ticketTime;
  }

  public void setTicketTime(String ticketTime) {
    this.ticketTime = ticketTime;
  }


  public TflApiPresentationEntitiesFaresRecommendation ticketType(String ticketType) {
    this.ticketType = ticketType;
    return this;
  }

  /**
   * Get ticketType
   * @return ticketType
   */
  @javax.annotation.Nullable
  public String getTicketType() {
    return ticketType;
  }

  public void setTicketType(String ticketType) {
    this.ticketType = ticketType;
  }


  public TflApiPresentationEntitiesFaresRecommendation zones(String zones) {
    this.zones = zones;
    return this;
  }

  /**
   * Get zones
   * @return zones
   */
  @javax.annotation.Nullable
  public String getZones() {
    return zones;
  }

  public void setZones(String zones) {
    this.zones = zones;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesFaresRecommendation tflApiPresentationEntitiesFaresRecommendation = (TflApiPresentationEntitiesFaresRecommendation) o;
    return Objects.equals(this.cost, tflApiPresentationEntitiesFaresRecommendation.cost) &&
        Objects.equals(this.discountCard, tflApiPresentationEntitiesFaresRecommendation.discountCard) &&
        Objects.equals(this.fareType, tflApiPresentationEntitiesFaresRecommendation.fareType) &&
        Objects.equals(this.gettingYourTicket, tflApiPresentationEntitiesFaresRecommendation.gettingYourTicket) &&
        Objects.equals(this.id, tflApiPresentationEntitiesFaresRecommendation.id) &&
        Objects.equals(this.keyFeatures, tflApiPresentationEntitiesFaresRecommendation.keyFeatures) &&
        Objects.equals(this.notes, tflApiPresentationEntitiesFaresRecommendation.notes) &&
        Objects.equals(this.priceComparison, tflApiPresentationEntitiesFaresRecommendation.priceComparison) &&
        Objects.equals(this.priceDescription, tflApiPresentationEntitiesFaresRecommendation.priceDescription) &&
        Objects.equals(this.product, tflApiPresentationEntitiesFaresRecommendation.product) &&
        Objects.equals(this.productType, tflApiPresentationEntitiesFaresRecommendation.productType) &&
        Objects.equals(this.rank, tflApiPresentationEntitiesFaresRecommendation.rank) &&
        Objects.equals(this.recommendedTopUp, tflApiPresentationEntitiesFaresRecommendation.recommendedTopUp) &&
        Objects.equals(this.rule, tflApiPresentationEntitiesFaresRecommendation.rule) &&
        Objects.equals(this.singleFare, tflApiPresentationEntitiesFaresRecommendation.singleFare) &&
        Objects.equals(this.ticketTime, tflApiPresentationEntitiesFaresRecommendation.ticketTime) &&
        Objects.equals(this.ticketType, tflApiPresentationEntitiesFaresRecommendation.ticketType) &&
        Objects.equals(this.zones, tflApiPresentationEntitiesFaresRecommendation.zones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cost, discountCard, fareType, gettingYourTicket, id, keyFeatures, notes, priceComparison, priceDescription, product, productType, rank, recommendedTopUp, rule, singleFare, ticketTime, ticketType, zones);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesFaresRecommendation {\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    discountCard: ").append(toIndentedString(discountCard)).append("\n");
    sb.append("    fareType: ").append(toIndentedString(fareType)).append("\n");
    sb.append("    gettingYourTicket: ").append(toIndentedString(gettingYourTicket)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    keyFeatures: ").append(toIndentedString(keyFeatures)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    priceComparison: ").append(toIndentedString(priceComparison)).append("\n");
    sb.append("    priceDescription: ").append(toIndentedString(priceDescription)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    recommendedTopUp: ").append(toIndentedString(recommendedTopUp)).append("\n");
    sb.append("    rule: ").append(toIndentedString(rule)).append("\n");
    sb.append("    singleFare: ").append(toIndentedString(singleFare)).append("\n");
    sb.append("    ticketTime: ").append(toIndentedString(ticketTime)).append("\n");
    sb.append("    ticketType: ").append(toIndentedString(ticketType)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cost");
    openapiFields.add("discountCard");
    openapiFields.add("fareType");
    openapiFields.add("gettingYourTicket");
    openapiFields.add("id");
    openapiFields.add("keyFeatures");
    openapiFields.add("notes");
    openapiFields.add("priceComparison");
    openapiFields.add("priceDescription");
    openapiFields.add("product");
    openapiFields.add("productType");
    openapiFields.add("rank");
    openapiFields.add("recommendedTopUp");
    openapiFields.add("rule");
    openapiFields.add("singleFare");
    openapiFields.add("ticketTime");
    openapiFields.add("ticketType");
    openapiFields.add("zones");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesFaresRecommendation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesFaresRecommendation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesFaresRecommendation is not found in the empty JSON string", TflApiPresentationEntitiesFaresRecommendation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesFaresRecommendation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesFaresRecommendation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cost") != null && !jsonObj.get("cost").isJsonNull()) && !jsonObj.get("cost").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cost` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cost").toString()));
      }
      if ((jsonObj.get("discountCard") != null && !jsonObj.get("discountCard").isJsonNull()) && !jsonObj.get("discountCard").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discountCard` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discountCard").toString()));
      }
      if ((jsonObj.get("fareType") != null && !jsonObj.get("fareType").isJsonNull()) && !jsonObj.get("fareType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fareType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fareType").toString()));
      }
      if (jsonObj.get("gettingYourTicket") != null && !jsonObj.get("gettingYourTicket").isJsonNull()) {
        JsonArray jsonArraygettingYourTicket = jsonObj.getAsJsonArray("gettingYourTicket");
        if (jsonArraygettingYourTicket != null) {
          // ensure the json data is an array
          if (!jsonObj.get("gettingYourTicket").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `gettingYourTicket` to be an array in the JSON string but got `%s`", jsonObj.get("gettingYourTicket").toString()));
          }

          // validate the optional field `gettingYourTicket` (array)
          for (int i = 0; i < jsonArraygettingYourTicket.size(); i++) {
            TflApiPresentationEntitiesMessage.validateJsonElement(jsonArraygettingYourTicket.get(i));
          };
        }
      }
      if (jsonObj.get("keyFeatures") != null && !jsonObj.get("keyFeatures").isJsonNull()) {
        JsonArray jsonArraykeyFeatures = jsonObj.getAsJsonArray("keyFeatures");
        if (jsonArraykeyFeatures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("keyFeatures").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `keyFeatures` to be an array in the JSON string but got `%s`", jsonObj.get("keyFeatures").toString()));
          }

          // validate the optional field `keyFeatures` (array)
          for (int i = 0; i < jsonArraykeyFeatures.size(); i++) {
            TflApiPresentationEntitiesMessage.validateJsonElement(jsonArraykeyFeatures.get(i));
          };
        }
      }
      if (jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) {
        JsonArray jsonArraynotes = jsonObj.getAsJsonArray("notes");
        if (jsonArraynotes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("notes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `notes` to be an array in the JSON string but got `%s`", jsonObj.get("notes").toString()));
          }

          // validate the optional field `notes` (array)
          for (int i = 0; i < jsonArraynotes.size(); i++) {
            TflApiPresentationEntitiesMessage.validateJsonElement(jsonArraynotes.get(i));
          };
        }
      }
      if ((jsonObj.get("priceComparison") != null && !jsonObj.get("priceComparison").isJsonNull()) && !jsonObj.get("priceComparison").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceComparison` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceComparison").toString()));
      }
      if ((jsonObj.get("priceDescription") != null && !jsonObj.get("priceDescription").isJsonNull()) && !jsonObj.get("priceDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceDescription").toString()));
      }
      if ((jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) && !jsonObj.get("product").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product").toString()));
      }
      if ((jsonObj.get("productType") != null && !jsonObj.get("productType").isJsonNull()) && !jsonObj.get("productType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productType").toString()));
      }
      if ((jsonObj.get("recommendedTopUp") != null && !jsonObj.get("recommendedTopUp").isJsonNull()) && !jsonObj.get("recommendedTopUp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recommendedTopUp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recommendedTopUp").toString()));
      }
      if ((jsonObj.get("ticketTime") != null && !jsonObj.get("ticketTime").isJsonNull()) && !jsonObj.get("ticketTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ticketTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ticketTime").toString()));
      }
      if ((jsonObj.get("ticketType") != null && !jsonObj.get("ticketType").isJsonNull()) && !jsonObj.get("ticketType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ticketType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ticketType").toString()));
      }
      if ((jsonObj.get("zones") != null && !jsonObj.get("zones").isJsonNull()) && !jsonObj.get("zones").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zones` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zones").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesFaresRecommendation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesFaresRecommendation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesFaresRecommendation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesFaresRecommendation.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesFaresRecommendation>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesFaresRecommendation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesFaresRecommendation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesFaresRecommendation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesFaresRecommendation
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesFaresRecommendation
   */
  public static TflApiPresentationEntitiesFaresRecommendation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesFaresRecommendation.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesFaresRecommendation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

