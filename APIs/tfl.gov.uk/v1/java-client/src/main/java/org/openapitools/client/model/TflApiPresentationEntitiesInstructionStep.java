/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TflApiPresentationEntitiesPathAttribute;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesInstructionStep
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesInstructionStep {
  public static final String SERIALIZED_NAME_CUMULATIVE_DISTANCE = "cumulativeDistance";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_DISTANCE)
  private Integer cumulativeDistance;

  public static final String SERIALIZED_NAME_CUMULATIVE_TRAVEL_TIME = "cumulativeTravelTime";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_TRAVEL_TIME)
  private Integer cumulativeTravelTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DESCRIPTION_HEADING = "descriptionHeading";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_HEADING)
  private String descriptionHeading;

  public static final String SERIALIZED_NAME_DISTANCE = "distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private Integer distance;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private Double latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private Double longitude;

  public static final String SERIALIZED_NAME_PATH_ATTRIBUTE = "pathAttribute";
  @SerializedName(SERIALIZED_NAME_PATH_ATTRIBUTE)
  private TflApiPresentationEntitiesPathAttribute pathAttribute;

  public static final String SERIALIZED_NAME_SKY_DIRECTION = "skyDirection";
  @SerializedName(SERIALIZED_NAME_SKY_DIRECTION)
  private Integer skyDirection;

  /**
   * Gets or Sets skyDirectionDescription
   */
  @JsonAdapter(SkyDirectionDescriptionEnum.Adapter.class)
  public enum SkyDirectionDescriptionEnum {
    NORTH("North"),
    
    NORTH_EAST("NorthEast"),
    
    EAST("East"),
    
    SOUTH_EAST("SouthEast"),
    
    SOUTH("South"),
    
    SOUTH_WEST("SouthWest"),
    
    WEST("West"),
    
    NORTH_WEST("NorthWest");

    private String value;

    SkyDirectionDescriptionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SkyDirectionDescriptionEnum fromValue(String value) {
      for (SkyDirectionDescriptionEnum b : SkyDirectionDescriptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SkyDirectionDescriptionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SkyDirectionDescriptionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SkyDirectionDescriptionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SkyDirectionDescriptionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SkyDirectionDescriptionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SKY_DIRECTION_DESCRIPTION = "skyDirectionDescription";
  @SerializedName(SERIALIZED_NAME_SKY_DIRECTION_DESCRIPTION)
  private SkyDirectionDescriptionEnum skyDirectionDescription;

  public static final String SERIALIZED_NAME_STREET_NAME = "streetName";
  @SerializedName(SERIALIZED_NAME_STREET_NAME)
  private String streetName;

  /**
   * Gets or Sets trackType
   */
  @JsonAdapter(TrackTypeEnum.Adapter.class)
  public enum TrackTypeEnum {
    CYCLE_SUPER_HIGHWAY("CycleSuperHighway"),
    
    CANAL_TOWPATH("CanalTowpath"),
    
    QUIET_ROAD("QuietRoad"),
    
    PROVISION_FOR_CYCLISTS("ProvisionForCyclists"),
    
    BUSY_ROADS("BusyRoads"),
    
    NONE("None"),
    
    PUSH_BIKE("PushBike"),
    
    QUIETWAY("Quietway");

    private String value;

    TrackTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TrackTypeEnum fromValue(String value) {
      for (TrackTypeEnum b : TrackTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TrackTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TrackTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TrackTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TrackTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TrackTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TRACK_TYPE = "trackType";
  @SerializedName(SERIALIZED_NAME_TRACK_TYPE)
  private TrackTypeEnum trackType;

  public static final String SERIALIZED_NAME_TURN_DIRECTION = "turnDirection";
  @SerializedName(SERIALIZED_NAME_TURN_DIRECTION)
  private String turnDirection;

  public TflApiPresentationEntitiesInstructionStep() {
  }

  public TflApiPresentationEntitiesInstructionStep cumulativeDistance(Integer cumulativeDistance) {
    this.cumulativeDistance = cumulativeDistance;
    return this;
  }

  /**
   * Get cumulativeDistance
   * @return cumulativeDistance
   */
  @javax.annotation.Nullable
  public Integer getCumulativeDistance() {
    return cumulativeDistance;
  }

  public void setCumulativeDistance(Integer cumulativeDistance) {
    this.cumulativeDistance = cumulativeDistance;
  }


  public TflApiPresentationEntitiesInstructionStep cumulativeTravelTime(Integer cumulativeTravelTime) {
    this.cumulativeTravelTime = cumulativeTravelTime;
    return this;
  }

  /**
   * Get cumulativeTravelTime
   * @return cumulativeTravelTime
   */
  @javax.annotation.Nullable
  public Integer getCumulativeTravelTime() {
    return cumulativeTravelTime;
  }

  public void setCumulativeTravelTime(Integer cumulativeTravelTime) {
    this.cumulativeTravelTime = cumulativeTravelTime;
  }


  public TflApiPresentationEntitiesInstructionStep description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TflApiPresentationEntitiesInstructionStep descriptionHeading(String descriptionHeading) {
    this.descriptionHeading = descriptionHeading;
    return this;
  }

  /**
   * Get descriptionHeading
   * @return descriptionHeading
   */
  @javax.annotation.Nullable
  public String getDescriptionHeading() {
    return descriptionHeading;
  }

  public void setDescriptionHeading(String descriptionHeading) {
    this.descriptionHeading = descriptionHeading;
  }


  public TflApiPresentationEntitiesInstructionStep distance(Integer distance) {
    this.distance = distance;
    return this;
  }

  /**
   * Get distance
   * @return distance
   */
  @javax.annotation.Nullable
  public Integer getDistance() {
    return distance;
  }

  public void setDistance(Integer distance) {
    this.distance = distance;
  }


  public TflApiPresentationEntitiesInstructionStep latitude(Double latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }


  public TflApiPresentationEntitiesInstructionStep longitude(Double longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nullable
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }


  public TflApiPresentationEntitiesInstructionStep pathAttribute(TflApiPresentationEntitiesPathAttribute pathAttribute) {
    this.pathAttribute = pathAttribute;
    return this;
  }

  /**
   * Get pathAttribute
   * @return pathAttribute
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesPathAttribute getPathAttribute() {
    return pathAttribute;
  }

  public void setPathAttribute(TflApiPresentationEntitiesPathAttribute pathAttribute) {
    this.pathAttribute = pathAttribute;
  }


  public TflApiPresentationEntitiesInstructionStep skyDirection(Integer skyDirection) {
    this.skyDirection = skyDirection;
    return this;
  }

  /**
   * Get skyDirection
   * @return skyDirection
   */
  @javax.annotation.Nullable
  public Integer getSkyDirection() {
    return skyDirection;
  }

  public void setSkyDirection(Integer skyDirection) {
    this.skyDirection = skyDirection;
  }


  public TflApiPresentationEntitiesInstructionStep skyDirectionDescription(SkyDirectionDescriptionEnum skyDirectionDescription) {
    this.skyDirectionDescription = skyDirectionDescription;
    return this;
  }

  /**
   * Get skyDirectionDescription
   * @return skyDirectionDescription
   */
  @javax.annotation.Nullable
  public SkyDirectionDescriptionEnum getSkyDirectionDescription() {
    return skyDirectionDescription;
  }

  public void setSkyDirectionDescription(SkyDirectionDescriptionEnum skyDirectionDescription) {
    this.skyDirectionDescription = skyDirectionDescription;
  }


  public TflApiPresentationEntitiesInstructionStep streetName(String streetName) {
    this.streetName = streetName;
    return this;
  }

  /**
   * Get streetName
   * @return streetName
   */
  @javax.annotation.Nullable
  public String getStreetName() {
    return streetName;
  }

  public void setStreetName(String streetName) {
    this.streetName = streetName;
  }


  public TflApiPresentationEntitiesInstructionStep trackType(TrackTypeEnum trackType) {
    this.trackType = trackType;
    return this;
  }

  /**
   * Get trackType
   * @return trackType
   */
  @javax.annotation.Nullable
  public TrackTypeEnum getTrackType() {
    return trackType;
  }

  public void setTrackType(TrackTypeEnum trackType) {
    this.trackType = trackType;
  }


  public TflApiPresentationEntitiesInstructionStep turnDirection(String turnDirection) {
    this.turnDirection = turnDirection;
    return this;
  }

  /**
   * Get turnDirection
   * @return turnDirection
   */
  @javax.annotation.Nullable
  public String getTurnDirection() {
    return turnDirection;
  }

  public void setTurnDirection(String turnDirection) {
    this.turnDirection = turnDirection;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesInstructionStep tflApiPresentationEntitiesInstructionStep = (TflApiPresentationEntitiesInstructionStep) o;
    return Objects.equals(this.cumulativeDistance, tflApiPresentationEntitiesInstructionStep.cumulativeDistance) &&
        Objects.equals(this.cumulativeTravelTime, tflApiPresentationEntitiesInstructionStep.cumulativeTravelTime) &&
        Objects.equals(this.description, tflApiPresentationEntitiesInstructionStep.description) &&
        Objects.equals(this.descriptionHeading, tflApiPresentationEntitiesInstructionStep.descriptionHeading) &&
        Objects.equals(this.distance, tflApiPresentationEntitiesInstructionStep.distance) &&
        Objects.equals(this.latitude, tflApiPresentationEntitiesInstructionStep.latitude) &&
        Objects.equals(this.longitude, tflApiPresentationEntitiesInstructionStep.longitude) &&
        Objects.equals(this.pathAttribute, tflApiPresentationEntitiesInstructionStep.pathAttribute) &&
        Objects.equals(this.skyDirection, tflApiPresentationEntitiesInstructionStep.skyDirection) &&
        Objects.equals(this.skyDirectionDescription, tflApiPresentationEntitiesInstructionStep.skyDirectionDescription) &&
        Objects.equals(this.streetName, tflApiPresentationEntitiesInstructionStep.streetName) &&
        Objects.equals(this.trackType, tflApiPresentationEntitiesInstructionStep.trackType) &&
        Objects.equals(this.turnDirection, tflApiPresentationEntitiesInstructionStep.turnDirection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cumulativeDistance, cumulativeTravelTime, description, descriptionHeading, distance, latitude, longitude, pathAttribute, skyDirection, skyDirectionDescription, streetName, trackType, turnDirection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesInstructionStep {\n");
    sb.append("    cumulativeDistance: ").append(toIndentedString(cumulativeDistance)).append("\n");
    sb.append("    cumulativeTravelTime: ").append(toIndentedString(cumulativeTravelTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionHeading: ").append(toIndentedString(descriptionHeading)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    pathAttribute: ").append(toIndentedString(pathAttribute)).append("\n");
    sb.append("    skyDirection: ").append(toIndentedString(skyDirection)).append("\n");
    sb.append("    skyDirectionDescription: ").append(toIndentedString(skyDirectionDescription)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    trackType: ").append(toIndentedString(trackType)).append("\n");
    sb.append("    turnDirection: ").append(toIndentedString(turnDirection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cumulativeDistance");
    openapiFields.add("cumulativeTravelTime");
    openapiFields.add("description");
    openapiFields.add("descriptionHeading");
    openapiFields.add("distance");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("pathAttribute");
    openapiFields.add("skyDirection");
    openapiFields.add("skyDirectionDescription");
    openapiFields.add("streetName");
    openapiFields.add("trackType");
    openapiFields.add("turnDirection");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesInstructionStep
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesInstructionStep.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesInstructionStep is not found in the empty JSON string", TflApiPresentationEntitiesInstructionStep.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesInstructionStep.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesInstructionStep` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("descriptionHeading") != null && !jsonObj.get("descriptionHeading").isJsonNull()) && !jsonObj.get("descriptionHeading").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descriptionHeading` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descriptionHeading").toString()));
      }
      // validate the optional field `pathAttribute`
      if (jsonObj.get("pathAttribute") != null && !jsonObj.get("pathAttribute").isJsonNull()) {
        TflApiPresentationEntitiesPathAttribute.validateJsonElement(jsonObj.get("pathAttribute"));
      }
      if ((jsonObj.get("skyDirectionDescription") != null && !jsonObj.get("skyDirectionDescription").isJsonNull()) && !jsonObj.get("skyDirectionDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `skyDirectionDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("skyDirectionDescription").toString()));
      }
      // validate the optional field `skyDirectionDescription`
      if (jsonObj.get("skyDirectionDescription") != null && !jsonObj.get("skyDirectionDescription").isJsonNull()) {
        SkyDirectionDescriptionEnum.validateJsonElement(jsonObj.get("skyDirectionDescription"));
      }
      if ((jsonObj.get("streetName") != null && !jsonObj.get("streetName").isJsonNull()) && !jsonObj.get("streetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetName").toString()));
      }
      if ((jsonObj.get("trackType") != null && !jsonObj.get("trackType").isJsonNull()) && !jsonObj.get("trackType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackType").toString()));
      }
      // validate the optional field `trackType`
      if (jsonObj.get("trackType") != null && !jsonObj.get("trackType").isJsonNull()) {
        TrackTypeEnum.validateJsonElement(jsonObj.get("trackType"));
      }
      if ((jsonObj.get("turnDirection") != null && !jsonObj.get("turnDirection").isJsonNull()) && !jsonObj.get("turnDirection").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `turnDirection` to be a primitive type in the JSON string but got `%s`", jsonObj.get("turnDirection").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesInstructionStep.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesInstructionStep' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesInstructionStep> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesInstructionStep.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesInstructionStep>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesInstructionStep value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesInstructionStep read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesInstructionStep given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesInstructionStep
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesInstructionStep
   */
  public static TflApiPresentationEntitiesInstructionStep fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesInstructionStep.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesInstructionStep to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

