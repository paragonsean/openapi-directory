/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesKnownJourney
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesKnownJourney {
  public static final String SERIALIZED_NAME_HOUR = "hour";
  @SerializedName(SERIALIZED_NAME_HOUR)
  private String hour;

  public static final String SERIALIZED_NAME_INTERVAL_ID = "intervalId";
  @SerializedName(SERIALIZED_NAME_INTERVAL_ID)
  private Integer intervalId;

  public static final String SERIALIZED_NAME_MINUTE = "minute";
  @SerializedName(SERIALIZED_NAME_MINUTE)
  private String minute;

  public TflApiPresentationEntitiesKnownJourney() {
  }

  public TflApiPresentationEntitiesKnownJourney hour(String hour) {
    this.hour = hour;
    return this;
  }

  /**
   * Get hour
   * @return hour
   */
  @javax.annotation.Nullable
  public String getHour() {
    return hour;
  }

  public void setHour(String hour) {
    this.hour = hour;
  }


  public TflApiPresentationEntitiesKnownJourney intervalId(Integer intervalId) {
    this.intervalId = intervalId;
    return this;
  }

  /**
   * Get intervalId
   * @return intervalId
   */
  @javax.annotation.Nullable
  public Integer getIntervalId() {
    return intervalId;
  }

  public void setIntervalId(Integer intervalId) {
    this.intervalId = intervalId;
  }


  public TflApiPresentationEntitiesKnownJourney minute(String minute) {
    this.minute = minute;
    return this;
  }

  /**
   * Get minute
   * @return minute
   */
  @javax.annotation.Nullable
  public String getMinute() {
    return minute;
  }

  public void setMinute(String minute) {
    this.minute = minute;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesKnownJourney tflApiPresentationEntitiesKnownJourney = (TflApiPresentationEntitiesKnownJourney) o;
    return Objects.equals(this.hour, tflApiPresentationEntitiesKnownJourney.hour) &&
        Objects.equals(this.intervalId, tflApiPresentationEntitiesKnownJourney.intervalId) &&
        Objects.equals(this.minute, tflApiPresentationEntitiesKnownJourney.minute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hour, intervalId, minute);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesKnownJourney {\n");
    sb.append("    hour: ").append(toIndentedString(hour)).append("\n");
    sb.append("    intervalId: ").append(toIndentedString(intervalId)).append("\n");
    sb.append("    minute: ").append(toIndentedString(minute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("hour");
    openapiFields.add("intervalId");
    openapiFields.add("minute");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesKnownJourney
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesKnownJourney.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesKnownJourney is not found in the empty JSON string", TflApiPresentationEntitiesKnownJourney.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesKnownJourney.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesKnownJourney` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("hour") != null && !jsonObj.get("hour").isJsonNull()) && !jsonObj.get("hour").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hour` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hour").toString()));
      }
      if ((jsonObj.get("minute") != null && !jsonObj.get("minute").isJsonNull()) && !jsonObj.get("minute").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minute` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minute").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesKnownJourney.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesKnownJourney' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesKnownJourney> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesKnownJourney.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesKnownJourney>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesKnownJourney value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesKnownJourney read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesKnownJourney given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesKnownJourney
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesKnownJourney
   */
  public static TflApiPresentationEntitiesKnownJourney fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesKnownJourney.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesKnownJourney to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

