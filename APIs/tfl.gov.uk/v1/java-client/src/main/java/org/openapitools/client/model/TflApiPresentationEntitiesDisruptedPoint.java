/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesDisruptedPoint
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesDisruptedPoint {
  public static final String SERIALIZED_NAME_ADDITIONAL_INFORMATION = "additionalInformation";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFORMATION)
  private String additionalInformation;

  public static final String SERIALIZED_NAME_APPEARANCE = "appearance";
  @SerializedName(SERIALIZED_NAME_APPEARANCE)
  private String appearance;

  public static final String SERIALIZED_NAME_ATCO_CODE = "atcoCode";
  @SerializedName(SERIALIZED_NAME_ATCO_CODE)
  private String atcoCode;

  public static final String SERIALIZED_NAME_COMMON_NAME = "commonName";
  @SerializedName(SERIALIZED_NAME_COMMON_NAME)
  private String commonName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FROM_DATE = "fromDate";
  @SerializedName(SERIALIZED_NAME_FROM_DATE)
  private OffsetDateTime fromDate;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private String mode;

  public static final String SERIALIZED_NAME_STATION_ATCO_CODE = "stationAtcoCode";
  @SerializedName(SERIALIZED_NAME_STATION_ATCO_CODE)
  private String stationAtcoCode;

  public static final String SERIALIZED_NAME_TO_DATE = "toDate";
  @SerializedName(SERIALIZED_NAME_TO_DATE)
  private OffsetDateTime toDate;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public TflApiPresentationEntitiesDisruptedPoint() {
  }

  public TflApiPresentationEntitiesDisruptedPoint additionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

  /**
   * Get additionalInformation
   * @return additionalInformation
   */
  @javax.annotation.Nullable
  public String getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public TflApiPresentationEntitiesDisruptedPoint appearance(String appearance) {
    this.appearance = appearance;
    return this;
  }

  /**
   * Get appearance
   * @return appearance
   */
  @javax.annotation.Nullable
  public String getAppearance() {
    return appearance;
  }

  public void setAppearance(String appearance) {
    this.appearance = appearance;
  }


  public TflApiPresentationEntitiesDisruptedPoint atcoCode(String atcoCode) {
    this.atcoCode = atcoCode;
    return this;
  }

  /**
   * Get atcoCode
   * @return atcoCode
   */
  @javax.annotation.Nullable
  public String getAtcoCode() {
    return atcoCode;
  }

  public void setAtcoCode(String atcoCode) {
    this.atcoCode = atcoCode;
  }


  public TflApiPresentationEntitiesDisruptedPoint commonName(String commonName) {
    this.commonName = commonName;
    return this;
  }

  /**
   * Get commonName
   * @return commonName
   */
  @javax.annotation.Nullable
  public String getCommonName() {
    return commonName;
  }

  public void setCommonName(String commonName) {
    this.commonName = commonName;
  }


  public TflApiPresentationEntitiesDisruptedPoint description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TflApiPresentationEntitiesDisruptedPoint fromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
    return this;
  }

  /**
   * Get fromDate
   * @return fromDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFromDate() {
    return fromDate;
  }

  public void setFromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
  }


  public TflApiPresentationEntitiesDisruptedPoint mode(String mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }


  public TflApiPresentationEntitiesDisruptedPoint stationAtcoCode(String stationAtcoCode) {
    this.stationAtcoCode = stationAtcoCode;
    return this;
  }

  /**
   * Get stationAtcoCode
   * @return stationAtcoCode
   */
  @javax.annotation.Nullable
  public String getStationAtcoCode() {
    return stationAtcoCode;
  }

  public void setStationAtcoCode(String stationAtcoCode) {
    this.stationAtcoCode = stationAtcoCode;
  }


  public TflApiPresentationEntitiesDisruptedPoint toDate(OffsetDateTime toDate) {
    this.toDate = toDate;
    return this;
  }

  /**
   * Get toDate
   * @return toDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getToDate() {
    return toDate;
  }

  public void setToDate(OffsetDateTime toDate) {
    this.toDate = toDate;
  }


  public TflApiPresentationEntitiesDisruptedPoint type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesDisruptedPoint tflApiPresentationEntitiesDisruptedPoint = (TflApiPresentationEntitiesDisruptedPoint) o;
    return Objects.equals(this.additionalInformation, tflApiPresentationEntitiesDisruptedPoint.additionalInformation) &&
        Objects.equals(this.appearance, tflApiPresentationEntitiesDisruptedPoint.appearance) &&
        Objects.equals(this.atcoCode, tflApiPresentationEntitiesDisruptedPoint.atcoCode) &&
        Objects.equals(this.commonName, tflApiPresentationEntitiesDisruptedPoint.commonName) &&
        Objects.equals(this.description, tflApiPresentationEntitiesDisruptedPoint.description) &&
        Objects.equals(this.fromDate, tflApiPresentationEntitiesDisruptedPoint.fromDate) &&
        Objects.equals(this.mode, tflApiPresentationEntitiesDisruptedPoint.mode) &&
        Objects.equals(this.stationAtcoCode, tflApiPresentationEntitiesDisruptedPoint.stationAtcoCode) &&
        Objects.equals(this.toDate, tflApiPresentationEntitiesDisruptedPoint.toDate) &&
        Objects.equals(this.type, tflApiPresentationEntitiesDisruptedPoint.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalInformation, appearance, atcoCode, commonName, description, fromDate, mode, stationAtcoCode, toDate, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesDisruptedPoint {\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    appearance: ").append(toIndentedString(appearance)).append("\n");
    sb.append("    atcoCode: ").append(toIndentedString(atcoCode)).append("\n");
    sb.append("    commonName: ").append(toIndentedString(commonName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    stationAtcoCode: ").append(toIndentedString(stationAtcoCode)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalInformation");
    openapiFields.add("appearance");
    openapiFields.add("atcoCode");
    openapiFields.add("commonName");
    openapiFields.add("description");
    openapiFields.add("fromDate");
    openapiFields.add("mode");
    openapiFields.add("stationAtcoCode");
    openapiFields.add("toDate");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesDisruptedPoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesDisruptedPoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesDisruptedPoint is not found in the empty JSON string", TflApiPresentationEntitiesDisruptedPoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesDisruptedPoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesDisruptedPoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("additionalInformation") != null && !jsonObj.get("additionalInformation").isJsonNull()) && !jsonObj.get("additionalInformation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalInformation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalInformation").toString()));
      }
      if ((jsonObj.get("appearance") != null && !jsonObj.get("appearance").isJsonNull()) && !jsonObj.get("appearance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appearance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appearance").toString()));
      }
      if ((jsonObj.get("atcoCode") != null && !jsonObj.get("atcoCode").isJsonNull()) && !jsonObj.get("atcoCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `atcoCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("atcoCode").toString()));
      }
      if ((jsonObj.get("commonName") != null && !jsonObj.get("commonName").isJsonNull()) && !jsonObj.get("commonName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commonName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commonName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) && !jsonObj.get("mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mode").toString()));
      }
      if ((jsonObj.get("stationAtcoCode") != null && !jsonObj.get("stationAtcoCode").isJsonNull()) && !jsonObj.get("stationAtcoCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stationAtcoCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stationAtcoCode").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesDisruptedPoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesDisruptedPoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesDisruptedPoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesDisruptedPoint.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesDisruptedPoint>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesDisruptedPoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesDisruptedPoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesDisruptedPoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesDisruptedPoint
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesDisruptedPoint
   */
  public static TflApiPresentationEntitiesDisruptedPoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesDisruptedPoint.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesDisruptedPoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

