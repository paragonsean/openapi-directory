/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesLineRouteSection
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesLineRouteSection {
  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private String destination;

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private String direction;

  public static final String SERIALIZED_NAME_FROM_STATION = "fromStation";
  @SerializedName(SERIALIZED_NAME_FROM_STATION)
  private String fromStation;

  public static final String SERIALIZED_NAME_ROUTE_ID = "routeId";
  @SerializedName(SERIALIZED_NAME_ROUTE_ID)
  private Integer routeId;

  public static final String SERIALIZED_NAME_SERVICE_TYPE = "serviceType";
  @SerializedName(SERIALIZED_NAME_SERVICE_TYPE)
  private String serviceType;

  public static final String SERIALIZED_NAME_TO_STATION = "toStation";
  @SerializedName(SERIALIZED_NAME_TO_STATION)
  private String toStation;

  public static final String SERIALIZED_NAME_VEHICLE_DESTINATION_TEXT = "vehicleDestinationText";
  @SerializedName(SERIALIZED_NAME_VEHICLE_DESTINATION_TEXT)
  private String vehicleDestinationText;

  public TflApiPresentationEntitiesLineRouteSection() {
  }

  public TflApiPresentationEntitiesLineRouteSection destination(String destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nullable
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }


  public TflApiPresentationEntitiesLineRouteSection direction(String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @javax.annotation.Nullable
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }


  public TflApiPresentationEntitiesLineRouteSection fromStation(String fromStation) {
    this.fromStation = fromStation;
    return this;
  }

  /**
   * Get fromStation
   * @return fromStation
   */
  @javax.annotation.Nullable
  public String getFromStation() {
    return fromStation;
  }

  public void setFromStation(String fromStation) {
    this.fromStation = fromStation;
  }


  public TflApiPresentationEntitiesLineRouteSection routeId(Integer routeId) {
    this.routeId = routeId;
    return this;
  }

  /**
   * Get routeId
   * @return routeId
   */
  @javax.annotation.Nullable
  public Integer getRouteId() {
    return routeId;
  }

  public void setRouteId(Integer routeId) {
    this.routeId = routeId;
  }


  public TflApiPresentationEntitiesLineRouteSection serviceType(String serviceType) {
    this.serviceType = serviceType;
    return this;
  }

  /**
   * Get serviceType
   * @return serviceType
   */
  @javax.annotation.Nullable
  public String getServiceType() {
    return serviceType;
  }

  public void setServiceType(String serviceType) {
    this.serviceType = serviceType;
  }


  public TflApiPresentationEntitiesLineRouteSection toStation(String toStation) {
    this.toStation = toStation;
    return this;
  }

  /**
   * Get toStation
   * @return toStation
   */
  @javax.annotation.Nullable
  public String getToStation() {
    return toStation;
  }

  public void setToStation(String toStation) {
    this.toStation = toStation;
  }


  public TflApiPresentationEntitiesLineRouteSection vehicleDestinationText(String vehicleDestinationText) {
    this.vehicleDestinationText = vehicleDestinationText;
    return this;
  }

  /**
   * Get vehicleDestinationText
   * @return vehicleDestinationText
   */
  @javax.annotation.Nullable
  public String getVehicleDestinationText() {
    return vehicleDestinationText;
  }

  public void setVehicleDestinationText(String vehicleDestinationText) {
    this.vehicleDestinationText = vehicleDestinationText;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesLineRouteSection tflApiPresentationEntitiesLineRouteSection = (TflApiPresentationEntitiesLineRouteSection) o;
    return Objects.equals(this.destination, tflApiPresentationEntitiesLineRouteSection.destination) &&
        Objects.equals(this.direction, tflApiPresentationEntitiesLineRouteSection.direction) &&
        Objects.equals(this.fromStation, tflApiPresentationEntitiesLineRouteSection.fromStation) &&
        Objects.equals(this.routeId, tflApiPresentationEntitiesLineRouteSection.routeId) &&
        Objects.equals(this.serviceType, tflApiPresentationEntitiesLineRouteSection.serviceType) &&
        Objects.equals(this.toStation, tflApiPresentationEntitiesLineRouteSection.toStation) &&
        Objects.equals(this.vehicleDestinationText, tflApiPresentationEntitiesLineRouteSection.vehicleDestinationText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destination, direction, fromStation, routeId, serviceType, toStation, vehicleDestinationText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesLineRouteSection {\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    fromStation: ").append(toIndentedString(fromStation)).append("\n");
    sb.append("    routeId: ").append(toIndentedString(routeId)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    toStation: ").append(toIndentedString(toStation)).append("\n");
    sb.append("    vehicleDestinationText: ").append(toIndentedString(vehicleDestinationText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("destination");
    openapiFields.add("direction");
    openapiFields.add("fromStation");
    openapiFields.add("routeId");
    openapiFields.add("serviceType");
    openapiFields.add("toStation");
    openapiFields.add("vehicleDestinationText");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesLineRouteSection
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesLineRouteSection.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesLineRouteSection is not found in the empty JSON string", TflApiPresentationEntitiesLineRouteSection.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesLineRouteSection.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesLineRouteSection` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) && !jsonObj.get("destination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination").toString()));
      }
      if ((jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      if ((jsonObj.get("fromStation") != null && !jsonObj.get("fromStation").isJsonNull()) && !jsonObj.get("fromStation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fromStation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fromStation").toString()));
      }
      if ((jsonObj.get("serviceType") != null && !jsonObj.get("serviceType").isJsonNull()) && !jsonObj.get("serviceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceType").toString()));
      }
      if ((jsonObj.get("toStation") != null && !jsonObj.get("toStation").isJsonNull()) && !jsonObj.get("toStation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toStation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toStation").toString()));
      }
      if ((jsonObj.get("vehicleDestinationText") != null && !jsonObj.get("vehicleDestinationText").isJsonNull()) && !jsonObj.get("vehicleDestinationText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vehicleDestinationText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vehicleDestinationText").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesLineRouteSection.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesLineRouteSection' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesLineRouteSection> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesLineRouteSection.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesLineRouteSection>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesLineRouteSection value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesLineRouteSection read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesLineRouteSection given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesLineRouteSection
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesLineRouteSection
   */
  public static TflApiPresentationEntitiesLineRouteSection fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesLineRouteSection.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesLineRouteSection to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

