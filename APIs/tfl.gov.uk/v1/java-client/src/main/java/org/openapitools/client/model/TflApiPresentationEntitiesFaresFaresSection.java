/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesFaresFareDetails;
import org.openapitools.client.model.TflApiPresentationEntitiesFaresJourney;
import org.openapitools.client.model.TflApiPresentationEntitiesMessage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesFaresFaresSection
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesFaresFaresSection {
  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private String header;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_JOURNEY = "journey";
  @SerializedName(SERIALIZED_NAME_JOURNEY)
  private TflApiPresentationEntitiesFaresJourney journey;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<TflApiPresentationEntitiesMessage> messages = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROWS = "rows";
  @SerializedName(SERIALIZED_NAME_ROWS)
  private List<TflApiPresentationEntitiesFaresFareDetails> rows = new ArrayList<>();

  public TflApiPresentationEntitiesFaresFaresSection() {
  }

  public TflApiPresentationEntitiesFaresFaresSection header(String header) {
    this.header = header;
    return this;
  }

  /**
   * Get header
   * @return header
   */
  @javax.annotation.Nullable
  public String getHeader() {
    return header;
  }

  public void setHeader(String header) {
    this.header = header;
  }


  public TflApiPresentationEntitiesFaresFaresSection index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * Get index
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public TflApiPresentationEntitiesFaresFaresSection journey(TflApiPresentationEntitiesFaresJourney journey) {
    this.journey = journey;
    return this;
  }

  /**
   * Get journey
   * @return journey
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesFaresJourney getJourney() {
    return journey;
  }

  public void setJourney(TflApiPresentationEntitiesFaresJourney journey) {
    this.journey = journey;
  }


  public TflApiPresentationEntitiesFaresFaresSection messages(List<TflApiPresentationEntitiesMessage> messages) {
    this.messages = messages;
    return this;
  }

  public TflApiPresentationEntitiesFaresFaresSection addMessagesItem(TflApiPresentationEntitiesMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * Get messages
   * @return messages
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMessage> getMessages() {
    return messages;
  }

  public void setMessages(List<TflApiPresentationEntitiesMessage> messages) {
    this.messages = messages;
  }


  public TflApiPresentationEntitiesFaresFaresSection rows(List<TflApiPresentationEntitiesFaresFareDetails> rows) {
    this.rows = rows;
    return this;
  }

  public TflApiPresentationEntitiesFaresFaresSection addRowsItem(TflApiPresentationEntitiesFaresFareDetails rowsItem) {
    if (this.rows == null) {
      this.rows = new ArrayList<>();
    }
    this.rows.add(rowsItem);
    return this;
  }

  /**
   * Get rows
   * @return rows
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesFaresFareDetails> getRows() {
    return rows;
  }

  public void setRows(List<TflApiPresentationEntitiesFaresFareDetails> rows) {
    this.rows = rows;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesFaresFaresSection tflApiPresentationEntitiesFaresFaresSection = (TflApiPresentationEntitiesFaresFaresSection) o;
    return Objects.equals(this.header, tflApiPresentationEntitiesFaresFaresSection.header) &&
        Objects.equals(this.index, tflApiPresentationEntitiesFaresFaresSection.index) &&
        Objects.equals(this.journey, tflApiPresentationEntitiesFaresFaresSection.journey) &&
        Objects.equals(this.messages, tflApiPresentationEntitiesFaresFaresSection.messages) &&
        Objects.equals(this.rows, tflApiPresentationEntitiesFaresFaresSection.rows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, index, journey, messages, rows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesFaresFaresSection {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    journey: ").append(toIndentedString(journey)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("header");
    openapiFields.add("index");
    openapiFields.add("journey");
    openapiFields.add("messages");
    openapiFields.add("rows");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesFaresFaresSection
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesFaresFaresSection.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesFaresFaresSection is not found in the empty JSON string", TflApiPresentationEntitiesFaresFaresSection.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesFaresFaresSection.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesFaresFaresSection` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("header") != null && !jsonObj.get("header").isJsonNull()) && !jsonObj.get("header").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `header` to be a primitive type in the JSON string but got `%s`", jsonObj.get("header").toString()));
      }
      // validate the optional field `journey`
      if (jsonObj.get("journey") != null && !jsonObj.get("journey").isJsonNull()) {
        TflApiPresentationEntitiesFaresJourney.validateJsonElement(jsonObj.get("journey"));
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            TflApiPresentationEntitiesMessage.validateJsonElement(jsonArraymessages.get(i));
          };
        }
      }
      if (jsonObj.get("rows") != null && !jsonObj.get("rows").isJsonNull()) {
        JsonArray jsonArrayrows = jsonObj.getAsJsonArray("rows");
        if (jsonArrayrows != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rows").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rows` to be an array in the JSON string but got `%s`", jsonObj.get("rows").toString()));
          }

          // validate the optional field `rows` (array)
          for (int i = 0; i < jsonArrayrows.size(); i++) {
            TflApiPresentationEntitiesFaresFareDetails.validateJsonElement(jsonArrayrows.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesFaresFaresSection.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesFaresFaresSection' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesFaresFaresSection> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesFaresFaresSection.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesFaresFaresSection>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesFaresFaresSection value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesFaresFaresSection read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesFaresFaresSection given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesFaresFaresSection
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesFaresFaresSection
   */
  public static TflApiPresentationEntitiesFaresFaresSection fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesFaresFaresSection.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesFaresFaresSection to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

