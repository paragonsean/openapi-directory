/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerJourneyFare;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerLeg;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Object that represents an end to end journey (see schematic).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesJourneyPlannerJourney {
  public static final String SERIALIZED_NAME_ARRIVAL_DATE_TIME = "arrivalDateTime";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_DATE_TIME)
  private OffsetDateTime arrivalDateTime;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_FARE = "fare";
  @SerializedName(SERIALIZED_NAME_FARE)
  private TflApiPresentationEntitiesJourneyPlannerJourneyFare fare;

  public static final String SERIALIZED_NAME_LEGS = "legs";
  @SerializedName(SERIALIZED_NAME_LEGS)
  private List<TflApiPresentationEntitiesJourneyPlannerLeg> legs = new ArrayList<>();

  public static final String SERIALIZED_NAME_START_DATE_TIME = "startDateTime";
  @SerializedName(SERIALIZED_NAME_START_DATE_TIME)
  private OffsetDateTime startDateTime;

  public TflApiPresentationEntitiesJourneyPlannerJourney() {
  }

  public TflApiPresentationEntitiesJourneyPlannerJourney arrivalDateTime(OffsetDateTime arrivalDateTime) {
    this.arrivalDateTime = arrivalDateTime;
    return this;
  }

  /**
   * Get arrivalDateTime
   * @return arrivalDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getArrivalDateTime() {
    return arrivalDateTime;
  }

  public void setArrivalDateTime(OffsetDateTime arrivalDateTime) {
    this.arrivalDateTime = arrivalDateTime;
  }


  public TflApiPresentationEntitiesJourneyPlannerJourney duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public TflApiPresentationEntitiesJourneyPlannerJourney fare(TflApiPresentationEntitiesJourneyPlannerJourneyFare fare) {
    this.fare = fare;
    return this;
  }

  /**
   * Get fare
   * @return fare
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesJourneyPlannerJourneyFare getFare() {
    return fare;
  }

  public void setFare(TflApiPresentationEntitiesJourneyPlannerJourneyFare fare) {
    this.fare = fare;
  }


  public TflApiPresentationEntitiesJourneyPlannerJourney legs(List<TflApiPresentationEntitiesJourneyPlannerLeg> legs) {
    this.legs = legs;
    return this;
  }

  public TflApiPresentationEntitiesJourneyPlannerJourney addLegsItem(TflApiPresentationEntitiesJourneyPlannerLeg legsItem) {
    if (this.legs == null) {
      this.legs = new ArrayList<>();
    }
    this.legs.add(legsItem);
    return this;
  }

  /**
   * Get legs
   * @return legs
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesJourneyPlannerLeg> getLegs() {
    return legs;
  }

  public void setLegs(List<TflApiPresentationEntitiesJourneyPlannerLeg> legs) {
    this.legs = legs;
  }


  public TflApiPresentationEntitiesJourneyPlannerJourney startDateTime(OffsetDateTime startDateTime) {
    this.startDateTime = startDateTime;
    return this;
  }

  /**
   * Get startDateTime
   * @return startDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDateTime() {
    return startDateTime;
  }

  public void setStartDateTime(OffsetDateTime startDateTime) {
    this.startDateTime = startDateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesJourneyPlannerJourney tflApiPresentationEntitiesJourneyPlannerJourney = (TflApiPresentationEntitiesJourneyPlannerJourney) o;
    return Objects.equals(this.arrivalDateTime, tflApiPresentationEntitiesJourneyPlannerJourney.arrivalDateTime) &&
        Objects.equals(this.duration, tflApiPresentationEntitiesJourneyPlannerJourney.duration) &&
        Objects.equals(this.fare, tflApiPresentationEntitiesJourneyPlannerJourney.fare) &&
        Objects.equals(this.legs, tflApiPresentationEntitiesJourneyPlannerJourney.legs) &&
        Objects.equals(this.startDateTime, tflApiPresentationEntitiesJourneyPlannerJourney.startDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arrivalDateTime, duration, fare, legs, startDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesJourneyPlannerJourney {\n");
    sb.append("    arrivalDateTime: ").append(toIndentedString(arrivalDateTime)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    fare: ").append(toIndentedString(fare)).append("\n");
    sb.append("    legs: ").append(toIndentedString(legs)).append("\n");
    sb.append("    startDateTime: ").append(toIndentedString(startDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arrivalDateTime");
    openapiFields.add("duration");
    openapiFields.add("fare");
    openapiFields.add("legs");
    openapiFields.add("startDateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesJourneyPlannerJourney
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesJourneyPlannerJourney.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesJourneyPlannerJourney is not found in the empty JSON string", TflApiPresentationEntitiesJourneyPlannerJourney.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesJourneyPlannerJourney.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesJourneyPlannerJourney` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `fare`
      if (jsonObj.get("fare") != null && !jsonObj.get("fare").isJsonNull()) {
        TflApiPresentationEntitiesJourneyPlannerJourneyFare.validateJsonElement(jsonObj.get("fare"));
      }
      if (jsonObj.get("legs") != null && !jsonObj.get("legs").isJsonNull()) {
        JsonArray jsonArraylegs = jsonObj.getAsJsonArray("legs");
        if (jsonArraylegs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("legs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `legs` to be an array in the JSON string but got `%s`", jsonObj.get("legs").toString()));
          }

          // validate the optional field `legs` (array)
          for (int i = 0; i < jsonArraylegs.size(); i++) {
            TflApiPresentationEntitiesJourneyPlannerLeg.validateJsonElement(jsonArraylegs.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesJourneyPlannerJourney.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesJourneyPlannerJourney' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesJourneyPlannerJourney> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesJourneyPlannerJourney.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesJourneyPlannerJourney>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesJourneyPlannerJourney value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesJourneyPlannerJourney read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesJourneyPlannerJourney given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesJourneyPlannerJourney
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesJourneyPlannerJourney
   */
  public static TflApiPresentationEntitiesJourneyPlannerJourney fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesJourneyPlannerJourney.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesJourneyPlannerJourney to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

