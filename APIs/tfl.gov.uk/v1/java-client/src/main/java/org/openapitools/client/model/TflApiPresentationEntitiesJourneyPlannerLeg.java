/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesDisruption;
import org.openapitools.client.model.TflApiPresentationEntitiesIdentifier;
import org.openapitools.client.model.TflApiPresentationEntitiesInstruction;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerObstacle;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerPath;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerPlannedWork;
import org.openapitools.client.model.TflApiPresentationEntitiesJourneyPlannerRouteOption;
import org.openapitools.client.model.TflApiPresentationEntitiesPoint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesJourneyPlannerLeg
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesJourneyPlannerLeg {
  public static final String SERIALIZED_NAME_ARRIVAL_POINT = "arrivalPoint";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_POINT)
  private TflApiPresentationEntitiesPoint arrivalPoint;

  public static final String SERIALIZED_NAME_ARRIVAL_TIME = "arrivalTime";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_TIME)
  private OffsetDateTime arrivalTime;

  public static final String SERIALIZED_NAME_DEPARTURE_POINT = "departurePoint";
  @SerializedName(SERIALIZED_NAME_DEPARTURE_POINT)
  private TflApiPresentationEntitiesPoint departurePoint;

  public static final String SERIALIZED_NAME_DEPARTURE_TIME = "departureTime";
  @SerializedName(SERIALIZED_NAME_DEPARTURE_TIME)
  private OffsetDateTime departureTime;

  public static final String SERIALIZED_NAME_DISRUPTIONS = "disruptions";
  @SerializedName(SERIALIZED_NAME_DISRUPTIONS)
  private List<TflApiPresentationEntitiesDisruption> disruptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISTANCE = "distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private Double distance;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_HAS_FIXED_LOCATIONS = "hasFixedLocations";
  @SerializedName(SERIALIZED_NAME_HAS_FIXED_LOCATIONS)
  private Boolean hasFixedLocations;

  public static final String SERIALIZED_NAME_INSTRUCTION = "instruction";
  @SerializedName(SERIALIZED_NAME_INSTRUCTION)
  private TflApiPresentationEntitiesInstruction instruction;

  public static final String SERIALIZED_NAME_INTER_CHANGE_DURATION = "interChangeDuration";
  @SerializedName(SERIALIZED_NAME_INTER_CHANGE_DURATION)
  private String interChangeDuration;

  public static final String SERIALIZED_NAME_INTER_CHANGE_POSITION = "interChangePosition";
  @SerializedName(SERIALIZED_NAME_INTER_CHANGE_POSITION)
  private String interChangePosition;

  public static final String SERIALIZED_NAME_IS_DISRUPTED = "isDisrupted";
  @SerializedName(SERIALIZED_NAME_IS_DISRUPTED)
  private Boolean isDisrupted;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private TflApiPresentationEntitiesIdentifier mode;

  public static final String SERIALIZED_NAME_OBSTACLES = "obstacles";
  @SerializedName(SERIALIZED_NAME_OBSTACLES)
  private List<TflApiPresentationEntitiesJourneyPlannerObstacle> obstacles = new ArrayList<>();

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private TflApiPresentationEntitiesJourneyPlannerPath path;

  public static final String SERIALIZED_NAME_PLANNED_WORKS = "plannedWorks";
  @SerializedName(SERIALIZED_NAME_PLANNED_WORKS)
  private List<TflApiPresentationEntitiesJourneyPlannerPlannedWork> plannedWorks = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROUTE_OPTIONS = "routeOptions";
  @SerializedName(SERIALIZED_NAME_ROUTE_OPTIONS)
  private List<TflApiPresentationEntitiesJourneyPlannerRouteOption> routeOptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCHEDULED_ARRIVAL_TIME = "scheduledArrivalTime";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ARRIVAL_TIME)
  private OffsetDateTime scheduledArrivalTime;

  public static final String SERIALIZED_NAME_SCHEDULED_DEPARTURE_TIME = "scheduledDepartureTime";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_DEPARTURE_TIME)
  private OffsetDateTime scheduledDepartureTime;

  public static final String SERIALIZED_NAME_SPEED = "speed";
  @SerializedName(SERIALIZED_NAME_SPEED)
  private String speed;

  public TflApiPresentationEntitiesJourneyPlannerLeg() {
  }

  public TflApiPresentationEntitiesJourneyPlannerLeg(
     Boolean hasFixedLocations, 
     Boolean isDisrupted
  ) {
    this();
    this.hasFixedLocations = hasFixedLocations;
    this.isDisrupted = isDisrupted;
  }

  public TflApiPresentationEntitiesJourneyPlannerLeg arrivalPoint(TflApiPresentationEntitiesPoint arrivalPoint) {
    this.arrivalPoint = arrivalPoint;
    return this;
  }

  /**
   * Get arrivalPoint
   * @return arrivalPoint
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesPoint getArrivalPoint() {
    return arrivalPoint;
  }

  public void setArrivalPoint(TflApiPresentationEntitiesPoint arrivalPoint) {
    this.arrivalPoint = arrivalPoint;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg arrivalTime(OffsetDateTime arrivalTime) {
    this.arrivalTime = arrivalTime;
    return this;
  }

  /**
   * Get arrivalTime
   * @return arrivalTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getArrivalTime() {
    return arrivalTime;
  }

  public void setArrivalTime(OffsetDateTime arrivalTime) {
    this.arrivalTime = arrivalTime;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg departurePoint(TflApiPresentationEntitiesPoint departurePoint) {
    this.departurePoint = departurePoint;
    return this;
  }

  /**
   * Get departurePoint
   * @return departurePoint
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesPoint getDeparturePoint() {
    return departurePoint;
  }

  public void setDeparturePoint(TflApiPresentationEntitiesPoint departurePoint) {
    this.departurePoint = departurePoint;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg departureTime(OffsetDateTime departureTime) {
    this.departureTime = departureTime;
    return this;
  }

  /**
   * Get departureTime
   * @return departureTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDepartureTime() {
    return departureTime;
  }

  public void setDepartureTime(OffsetDateTime departureTime) {
    this.departureTime = departureTime;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg disruptions(List<TflApiPresentationEntitiesDisruption> disruptions) {
    this.disruptions = disruptions;
    return this;
  }

  public TflApiPresentationEntitiesJourneyPlannerLeg addDisruptionsItem(TflApiPresentationEntitiesDisruption disruptionsItem) {
    if (this.disruptions == null) {
      this.disruptions = new ArrayList<>();
    }
    this.disruptions.add(disruptionsItem);
    return this;
  }

  /**
   * Get disruptions
   * @return disruptions
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesDisruption> getDisruptions() {
    return disruptions;
  }

  public void setDisruptions(List<TflApiPresentationEntitiesDisruption> disruptions) {
    this.disruptions = disruptions;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg distance(Double distance) {
    this.distance = distance;
    return this;
  }

  /**
   * Get distance
   * @return distance
   */
  @javax.annotation.Nullable
  public Double getDistance() {
    return distance;
  }

  public void setDistance(Double distance) {
    this.distance = distance;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  /**
   * Get hasFixedLocations
   * @return hasFixedLocations
   */
  @javax.annotation.Nullable
  public Boolean getHasFixedLocations() {
    return hasFixedLocations;
  }



  public TflApiPresentationEntitiesJourneyPlannerLeg instruction(TflApiPresentationEntitiesInstruction instruction) {
    this.instruction = instruction;
    return this;
  }

  /**
   * Get instruction
   * @return instruction
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesInstruction getInstruction() {
    return instruction;
  }

  public void setInstruction(TflApiPresentationEntitiesInstruction instruction) {
    this.instruction = instruction;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg interChangeDuration(String interChangeDuration) {
    this.interChangeDuration = interChangeDuration;
    return this;
  }

  /**
   * Get interChangeDuration
   * @return interChangeDuration
   */
  @javax.annotation.Nullable
  public String getInterChangeDuration() {
    return interChangeDuration;
  }

  public void setInterChangeDuration(String interChangeDuration) {
    this.interChangeDuration = interChangeDuration;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg interChangePosition(String interChangePosition) {
    this.interChangePosition = interChangePosition;
    return this;
  }

  /**
   * Get interChangePosition
   * @return interChangePosition
   */
  @javax.annotation.Nullable
  public String getInterChangePosition() {
    return interChangePosition;
  }

  public void setInterChangePosition(String interChangePosition) {
    this.interChangePosition = interChangePosition;
  }


  /**
   * Get isDisrupted
   * @return isDisrupted
   */
  @javax.annotation.Nullable
  public Boolean getIsDisrupted() {
    return isDisrupted;
  }



  public TflApiPresentationEntitiesJourneyPlannerLeg mode(TflApiPresentationEntitiesIdentifier mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesIdentifier getMode() {
    return mode;
  }

  public void setMode(TflApiPresentationEntitiesIdentifier mode) {
    this.mode = mode;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg obstacles(List<TflApiPresentationEntitiesJourneyPlannerObstacle> obstacles) {
    this.obstacles = obstacles;
    return this;
  }

  public TflApiPresentationEntitiesJourneyPlannerLeg addObstaclesItem(TflApiPresentationEntitiesJourneyPlannerObstacle obstaclesItem) {
    if (this.obstacles == null) {
      this.obstacles = new ArrayList<>();
    }
    this.obstacles.add(obstaclesItem);
    return this;
  }

  /**
   * Get obstacles
   * @return obstacles
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesJourneyPlannerObstacle> getObstacles() {
    return obstacles;
  }

  public void setObstacles(List<TflApiPresentationEntitiesJourneyPlannerObstacle> obstacles) {
    this.obstacles = obstacles;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg path(TflApiPresentationEntitiesJourneyPlannerPath path) {
    this.path = path;
    return this;
  }

  /**
   * Get path
   * @return path
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesJourneyPlannerPath getPath() {
    return path;
  }

  public void setPath(TflApiPresentationEntitiesJourneyPlannerPath path) {
    this.path = path;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg plannedWorks(List<TflApiPresentationEntitiesJourneyPlannerPlannedWork> plannedWorks) {
    this.plannedWorks = plannedWorks;
    return this;
  }

  public TflApiPresentationEntitiesJourneyPlannerLeg addPlannedWorksItem(TflApiPresentationEntitiesJourneyPlannerPlannedWork plannedWorksItem) {
    if (this.plannedWorks == null) {
      this.plannedWorks = new ArrayList<>();
    }
    this.plannedWorks.add(plannedWorksItem);
    return this;
  }

  /**
   * Get plannedWorks
   * @return plannedWorks
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesJourneyPlannerPlannedWork> getPlannedWorks() {
    return plannedWorks;
  }

  public void setPlannedWorks(List<TflApiPresentationEntitiesJourneyPlannerPlannedWork> plannedWorks) {
    this.plannedWorks = plannedWorks;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg routeOptions(List<TflApiPresentationEntitiesJourneyPlannerRouteOption> routeOptions) {
    this.routeOptions = routeOptions;
    return this;
  }

  public TflApiPresentationEntitiesJourneyPlannerLeg addRouteOptionsItem(TflApiPresentationEntitiesJourneyPlannerRouteOption routeOptionsItem) {
    if (this.routeOptions == null) {
      this.routeOptions = new ArrayList<>();
    }
    this.routeOptions.add(routeOptionsItem);
    return this;
  }

  /**
   * Get routeOptions
   * @return routeOptions
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesJourneyPlannerRouteOption> getRouteOptions() {
    return routeOptions;
  }

  public void setRouteOptions(List<TflApiPresentationEntitiesJourneyPlannerRouteOption> routeOptions) {
    this.routeOptions = routeOptions;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg scheduledArrivalTime(OffsetDateTime scheduledArrivalTime) {
    this.scheduledArrivalTime = scheduledArrivalTime;
    return this;
  }

  /**
   * Get scheduledArrivalTime
   * @return scheduledArrivalTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScheduledArrivalTime() {
    return scheduledArrivalTime;
  }

  public void setScheduledArrivalTime(OffsetDateTime scheduledArrivalTime) {
    this.scheduledArrivalTime = scheduledArrivalTime;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg scheduledDepartureTime(OffsetDateTime scheduledDepartureTime) {
    this.scheduledDepartureTime = scheduledDepartureTime;
    return this;
  }

  /**
   * Get scheduledDepartureTime
   * @return scheduledDepartureTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScheduledDepartureTime() {
    return scheduledDepartureTime;
  }

  public void setScheduledDepartureTime(OffsetDateTime scheduledDepartureTime) {
    this.scheduledDepartureTime = scheduledDepartureTime;
  }


  public TflApiPresentationEntitiesJourneyPlannerLeg speed(String speed) {
    this.speed = speed;
    return this;
  }

  /**
   * Get speed
   * @return speed
   */
  @javax.annotation.Nullable
  public String getSpeed() {
    return speed;
  }

  public void setSpeed(String speed) {
    this.speed = speed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesJourneyPlannerLeg tflApiPresentationEntitiesJourneyPlannerLeg = (TflApiPresentationEntitiesJourneyPlannerLeg) o;
    return Objects.equals(this.arrivalPoint, tflApiPresentationEntitiesJourneyPlannerLeg.arrivalPoint) &&
        Objects.equals(this.arrivalTime, tflApiPresentationEntitiesJourneyPlannerLeg.arrivalTime) &&
        Objects.equals(this.departurePoint, tflApiPresentationEntitiesJourneyPlannerLeg.departurePoint) &&
        Objects.equals(this.departureTime, tflApiPresentationEntitiesJourneyPlannerLeg.departureTime) &&
        Objects.equals(this.disruptions, tflApiPresentationEntitiesJourneyPlannerLeg.disruptions) &&
        Objects.equals(this.distance, tflApiPresentationEntitiesJourneyPlannerLeg.distance) &&
        Objects.equals(this.duration, tflApiPresentationEntitiesJourneyPlannerLeg.duration) &&
        Objects.equals(this.hasFixedLocations, tflApiPresentationEntitiesJourneyPlannerLeg.hasFixedLocations) &&
        Objects.equals(this.instruction, tflApiPresentationEntitiesJourneyPlannerLeg.instruction) &&
        Objects.equals(this.interChangeDuration, tflApiPresentationEntitiesJourneyPlannerLeg.interChangeDuration) &&
        Objects.equals(this.interChangePosition, tflApiPresentationEntitiesJourneyPlannerLeg.interChangePosition) &&
        Objects.equals(this.isDisrupted, tflApiPresentationEntitiesJourneyPlannerLeg.isDisrupted) &&
        Objects.equals(this.mode, tflApiPresentationEntitiesJourneyPlannerLeg.mode) &&
        Objects.equals(this.obstacles, tflApiPresentationEntitiesJourneyPlannerLeg.obstacles) &&
        Objects.equals(this.path, tflApiPresentationEntitiesJourneyPlannerLeg.path) &&
        Objects.equals(this.plannedWorks, tflApiPresentationEntitiesJourneyPlannerLeg.plannedWorks) &&
        Objects.equals(this.routeOptions, tflApiPresentationEntitiesJourneyPlannerLeg.routeOptions) &&
        Objects.equals(this.scheduledArrivalTime, tflApiPresentationEntitiesJourneyPlannerLeg.scheduledArrivalTime) &&
        Objects.equals(this.scheduledDepartureTime, tflApiPresentationEntitiesJourneyPlannerLeg.scheduledDepartureTime) &&
        Objects.equals(this.speed, tflApiPresentationEntitiesJourneyPlannerLeg.speed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arrivalPoint, arrivalTime, departurePoint, departureTime, disruptions, distance, duration, hasFixedLocations, instruction, interChangeDuration, interChangePosition, isDisrupted, mode, obstacles, path, plannedWorks, routeOptions, scheduledArrivalTime, scheduledDepartureTime, speed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesJourneyPlannerLeg {\n");
    sb.append("    arrivalPoint: ").append(toIndentedString(arrivalPoint)).append("\n");
    sb.append("    arrivalTime: ").append(toIndentedString(arrivalTime)).append("\n");
    sb.append("    departurePoint: ").append(toIndentedString(departurePoint)).append("\n");
    sb.append("    departureTime: ").append(toIndentedString(departureTime)).append("\n");
    sb.append("    disruptions: ").append(toIndentedString(disruptions)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    hasFixedLocations: ").append(toIndentedString(hasFixedLocations)).append("\n");
    sb.append("    instruction: ").append(toIndentedString(instruction)).append("\n");
    sb.append("    interChangeDuration: ").append(toIndentedString(interChangeDuration)).append("\n");
    sb.append("    interChangePosition: ").append(toIndentedString(interChangePosition)).append("\n");
    sb.append("    isDisrupted: ").append(toIndentedString(isDisrupted)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    obstacles: ").append(toIndentedString(obstacles)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    plannedWorks: ").append(toIndentedString(plannedWorks)).append("\n");
    sb.append("    routeOptions: ").append(toIndentedString(routeOptions)).append("\n");
    sb.append("    scheduledArrivalTime: ").append(toIndentedString(scheduledArrivalTime)).append("\n");
    sb.append("    scheduledDepartureTime: ").append(toIndentedString(scheduledDepartureTime)).append("\n");
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arrivalPoint");
    openapiFields.add("arrivalTime");
    openapiFields.add("departurePoint");
    openapiFields.add("departureTime");
    openapiFields.add("disruptions");
    openapiFields.add("distance");
    openapiFields.add("duration");
    openapiFields.add("hasFixedLocations");
    openapiFields.add("instruction");
    openapiFields.add("interChangeDuration");
    openapiFields.add("interChangePosition");
    openapiFields.add("isDisrupted");
    openapiFields.add("mode");
    openapiFields.add("obstacles");
    openapiFields.add("path");
    openapiFields.add("plannedWorks");
    openapiFields.add("routeOptions");
    openapiFields.add("scheduledArrivalTime");
    openapiFields.add("scheduledDepartureTime");
    openapiFields.add("speed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesJourneyPlannerLeg
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesJourneyPlannerLeg.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesJourneyPlannerLeg is not found in the empty JSON string", TflApiPresentationEntitiesJourneyPlannerLeg.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesJourneyPlannerLeg.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesJourneyPlannerLeg` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arrivalPoint`
      if (jsonObj.get("arrivalPoint") != null && !jsonObj.get("arrivalPoint").isJsonNull()) {
        TflApiPresentationEntitiesPoint.validateJsonElement(jsonObj.get("arrivalPoint"));
      }
      // validate the optional field `departurePoint`
      if (jsonObj.get("departurePoint") != null && !jsonObj.get("departurePoint").isJsonNull()) {
        TflApiPresentationEntitiesPoint.validateJsonElement(jsonObj.get("departurePoint"));
      }
      if (jsonObj.get("disruptions") != null && !jsonObj.get("disruptions").isJsonNull()) {
        JsonArray jsonArraydisruptions = jsonObj.getAsJsonArray("disruptions");
        if (jsonArraydisruptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("disruptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `disruptions` to be an array in the JSON string but got `%s`", jsonObj.get("disruptions").toString()));
          }

          // validate the optional field `disruptions` (array)
          for (int i = 0; i < jsonArraydisruptions.size(); i++) {
            TflApiPresentationEntitiesDisruption.validateJsonElement(jsonArraydisruptions.get(i));
          };
        }
      }
      // validate the optional field `instruction`
      if (jsonObj.get("instruction") != null && !jsonObj.get("instruction").isJsonNull()) {
        TflApiPresentationEntitiesInstruction.validateJsonElement(jsonObj.get("instruction"));
      }
      if ((jsonObj.get("interChangeDuration") != null && !jsonObj.get("interChangeDuration").isJsonNull()) && !jsonObj.get("interChangeDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interChangeDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interChangeDuration").toString()));
      }
      if ((jsonObj.get("interChangePosition") != null && !jsonObj.get("interChangePosition").isJsonNull()) && !jsonObj.get("interChangePosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interChangePosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interChangePosition").toString()));
      }
      // validate the optional field `mode`
      if (jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) {
        TflApiPresentationEntitiesIdentifier.validateJsonElement(jsonObj.get("mode"));
      }
      if (jsonObj.get("obstacles") != null && !jsonObj.get("obstacles").isJsonNull()) {
        JsonArray jsonArrayobstacles = jsonObj.getAsJsonArray("obstacles");
        if (jsonArrayobstacles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("obstacles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `obstacles` to be an array in the JSON string but got `%s`", jsonObj.get("obstacles").toString()));
          }

          // validate the optional field `obstacles` (array)
          for (int i = 0; i < jsonArrayobstacles.size(); i++) {
            TflApiPresentationEntitiesJourneyPlannerObstacle.validateJsonElement(jsonArrayobstacles.get(i));
          };
        }
      }
      // validate the optional field `path`
      if (jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) {
        TflApiPresentationEntitiesJourneyPlannerPath.validateJsonElement(jsonObj.get("path"));
      }
      if (jsonObj.get("plannedWorks") != null && !jsonObj.get("plannedWorks").isJsonNull()) {
        JsonArray jsonArrayplannedWorks = jsonObj.getAsJsonArray("plannedWorks");
        if (jsonArrayplannedWorks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("plannedWorks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `plannedWorks` to be an array in the JSON string but got `%s`", jsonObj.get("plannedWorks").toString()));
          }

          // validate the optional field `plannedWorks` (array)
          for (int i = 0; i < jsonArrayplannedWorks.size(); i++) {
            TflApiPresentationEntitiesJourneyPlannerPlannedWork.validateJsonElement(jsonArrayplannedWorks.get(i));
          };
        }
      }
      if (jsonObj.get("routeOptions") != null && !jsonObj.get("routeOptions").isJsonNull()) {
        JsonArray jsonArrayrouteOptions = jsonObj.getAsJsonArray("routeOptions");
        if (jsonArrayrouteOptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("routeOptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `routeOptions` to be an array in the JSON string but got `%s`", jsonObj.get("routeOptions").toString()));
          }

          // validate the optional field `routeOptions` (array)
          for (int i = 0; i < jsonArrayrouteOptions.size(); i++) {
            TflApiPresentationEntitiesJourneyPlannerRouteOption.validateJsonElement(jsonArrayrouteOptions.get(i));
          };
        }
      }
      if ((jsonObj.get("speed") != null && !jsonObj.get("speed").isJsonNull()) && !jsonObj.get("speed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `speed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("speed").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesJourneyPlannerLeg.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesJourneyPlannerLeg' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesJourneyPlannerLeg> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesJourneyPlannerLeg.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesJourneyPlannerLeg>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesJourneyPlannerLeg value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesJourneyPlannerLeg read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesJourneyPlannerLeg given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesJourneyPlannerLeg
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesJourneyPlannerLeg
   */
  public static TflApiPresentationEntitiesJourneyPlannerLeg fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesJourneyPlannerLeg.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesJourneyPlannerLeg to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

