/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesAccidentStatsCasualty;
import org.openapitools.client.model.TflApiPresentationEntitiesAccidentStatsVehicle;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesAccidentStatsAccidentDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesAccidentStatsAccidentDetail {
  public static final String SERIALIZED_NAME_BOROUGH = "borough";
  @SerializedName(SERIALIZED_NAME_BOROUGH)
  private String borough;

  public static final String SERIALIZED_NAME_CASUALTIES = "casualties";
  @SerializedName(SERIALIZED_NAME_CASUALTIES)
  private List<TflApiPresentationEntitiesAccidentStatsCasualty> casualties = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LAT = "lat";
  @SerializedName(SERIALIZED_NAME_LAT)
  private Double lat;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_LON = "lon";
  @SerializedName(SERIALIZED_NAME_LON)
  private Double lon;

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private String severity;

  public static final String SERIALIZED_NAME_VEHICLES = "vehicles";
  @SerializedName(SERIALIZED_NAME_VEHICLES)
  private List<TflApiPresentationEntitiesAccidentStatsVehicle> vehicles = new ArrayList<>();

  public TflApiPresentationEntitiesAccidentStatsAccidentDetail() {
  }

  public TflApiPresentationEntitiesAccidentStatsAccidentDetail borough(String borough) {
    this.borough = borough;
    return this;
  }

  /**
   * Get borough
   * @return borough
   */
  @javax.annotation.Nullable
  public String getBorough() {
    return borough;
  }

  public void setBorough(String borough) {
    this.borough = borough;
  }


  public TflApiPresentationEntitiesAccidentStatsAccidentDetail casualties(List<TflApiPresentationEntitiesAccidentStatsCasualty> casualties) {
    this.casualties = casualties;
    return this;
  }

  public TflApiPresentationEntitiesAccidentStatsAccidentDetail addCasualtiesItem(TflApiPresentationEntitiesAccidentStatsCasualty casualtiesItem) {
    if (this.casualties == null) {
      this.casualties = new ArrayList<>();
    }
    this.casualties.add(casualtiesItem);
    return this;
  }

  /**
   * Get casualties
   * @return casualties
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesAccidentStatsCasualty> getCasualties() {
    return casualties;
  }

  public void setCasualties(List<TflApiPresentationEntitiesAccidentStatsCasualty> casualties) {
    this.casualties = casualties;
  }


  public TflApiPresentationEntitiesAccidentStatsAccidentDetail date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public TflApiPresentationEntitiesAccidentStatsAccidentDetail id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public TflApiPresentationEntitiesAccidentStatsAccidentDetail lat(Double lat) {
    this.lat = lat;
    return this;
  }

  /**
   * Get lat
   * @return lat
   */
  @javax.annotation.Nullable
  public Double getLat() {
    return lat;
  }

  public void setLat(Double lat) {
    this.lat = lat;
  }


  public TflApiPresentationEntitiesAccidentStatsAccidentDetail location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public TflApiPresentationEntitiesAccidentStatsAccidentDetail lon(Double lon) {
    this.lon = lon;
    return this;
  }

  /**
   * Get lon
   * @return lon
   */
  @javax.annotation.Nullable
  public Double getLon() {
    return lon;
  }

  public void setLon(Double lon) {
    this.lon = lon;
  }


  public TflApiPresentationEntitiesAccidentStatsAccidentDetail severity(String severity) {
    this.severity = severity;
    return this;
  }

  /**
   * Get severity
   * @return severity
   */
  @javax.annotation.Nullable
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }


  public TflApiPresentationEntitiesAccidentStatsAccidentDetail vehicles(List<TflApiPresentationEntitiesAccidentStatsVehicle> vehicles) {
    this.vehicles = vehicles;
    return this;
  }

  public TflApiPresentationEntitiesAccidentStatsAccidentDetail addVehiclesItem(TflApiPresentationEntitiesAccidentStatsVehicle vehiclesItem) {
    if (this.vehicles == null) {
      this.vehicles = new ArrayList<>();
    }
    this.vehicles.add(vehiclesItem);
    return this;
  }

  /**
   * Get vehicles
   * @return vehicles
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesAccidentStatsVehicle> getVehicles() {
    return vehicles;
  }

  public void setVehicles(List<TflApiPresentationEntitiesAccidentStatsVehicle> vehicles) {
    this.vehicles = vehicles;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesAccidentStatsAccidentDetail tflApiPresentationEntitiesAccidentStatsAccidentDetail = (TflApiPresentationEntitiesAccidentStatsAccidentDetail) o;
    return Objects.equals(this.borough, tflApiPresentationEntitiesAccidentStatsAccidentDetail.borough) &&
        Objects.equals(this.casualties, tflApiPresentationEntitiesAccidentStatsAccidentDetail.casualties) &&
        Objects.equals(this.date, tflApiPresentationEntitiesAccidentStatsAccidentDetail.date) &&
        Objects.equals(this.id, tflApiPresentationEntitiesAccidentStatsAccidentDetail.id) &&
        Objects.equals(this.lat, tflApiPresentationEntitiesAccidentStatsAccidentDetail.lat) &&
        Objects.equals(this.location, tflApiPresentationEntitiesAccidentStatsAccidentDetail.location) &&
        Objects.equals(this.lon, tflApiPresentationEntitiesAccidentStatsAccidentDetail.lon) &&
        Objects.equals(this.severity, tflApiPresentationEntitiesAccidentStatsAccidentDetail.severity) &&
        Objects.equals(this.vehicles, tflApiPresentationEntitiesAccidentStatsAccidentDetail.vehicles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(borough, casualties, date, id, lat, location, lon, severity, vehicles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesAccidentStatsAccidentDetail {\n");
    sb.append("    borough: ").append(toIndentedString(borough)).append("\n");
    sb.append("    casualties: ").append(toIndentedString(casualties)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    vehicles: ").append(toIndentedString(vehicles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("borough");
    openapiFields.add("casualties");
    openapiFields.add("date");
    openapiFields.add("id");
    openapiFields.add("lat");
    openapiFields.add("location");
    openapiFields.add("lon");
    openapiFields.add("severity");
    openapiFields.add("vehicles");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesAccidentStatsAccidentDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesAccidentStatsAccidentDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesAccidentStatsAccidentDetail is not found in the empty JSON string", TflApiPresentationEntitiesAccidentStatsAccidentDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesAccidentStatsAccidentDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesAccidentStatsAccidentDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("borough") != null && !jsonObj.get("borough").isJsonNull()) && !jsonObj.get("borough").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `borough` to be a primitive type in the JSON string but got `%s`", jsonObj.get("borough").toString()));
      }
      if (jsonObj.get("casualties") != null && !jsonObj.get("casualties").isJsonNull()) {
        JsonArray jsonArraycasualties = jsonObj.getAsJsonArray("casualties");
        if (jsonArraycasualties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("casualties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `casualties` to be an array in the JSON string but got `%s`", jsonObj.get("casualties").toString()));
          }

          // validate the optional field `casualties` (array)
          for (int i = 0; i < jsonArraycasualties.size(); i++) {
            TflApiPresentationEntitiesAccidentStatsCasualty.validateJsonElement(jsonArraycasualties.get(i));
          };
        }
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("severity") != null && !jsonObj.get("severity").isJsonNull()) && !jsonObj.get("severity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `severity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("severity").toString()));
      }
      if (jsonObj.get("vehicles") != null && !jsonObj.get("vehicles").isJsonNull()) {
        JsonArray jsonArrayvehicles = jsonObj.getAsJsonArray("vehicles");
        if (jsonArrayvehicles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("vehicles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `vehicles` to be an array in the JSON string but got `%s`", jsonObj.get("vehicles").toString()));
          }

          // validate the optional field `vehicles` (array)
          for (int i = 0; i < jsonArrayvehicles.size(); i++) {
            TflApiPresentationEntitiesAccidentStatsVehicle.validateJsonElement(jsonArrayvehicles.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesAccidentStatsAccidentDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesAccidentStatsAccidentDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesAccidentStatsAccidentDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesAccidentStatsAccidentDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesAccidentStatsAccidentDetail>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesAccidentStatsAccidentDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesAccidentStatsAccidentDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesAccidentStatsAccidentDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesAccidentStatsAccidentDetail
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesAccidentStatsAccidentDetail
   */
  public static TflApiPresentationEntitiesAccidentStatsAccidentDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesAccidentStatsAccidentDetail.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesAccidentStatsAccidentDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

