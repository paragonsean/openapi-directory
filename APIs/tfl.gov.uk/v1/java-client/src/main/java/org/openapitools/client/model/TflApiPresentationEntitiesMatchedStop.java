/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesIdentifier;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesMatchedStop
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesMatchedStop {
  public static final String SERIALIZED_NAME_ACCESSIBILITY_SUMMARY = "accessibilitySummary";
  @SerializedName(SERIALIZED_NAME_ACCESSIBILITY_SUMMARY)
  private String accessibilitySummary;

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private String direction;

  public static final String SERIALIZED_NAME_HAS_DISRUPTION = "hasDisruption";
  @SerializedName(SERIALIZED_NAME_HAS_DISRUPTION)
  private Boolean hasDisruption;

  public static final String SERIALIZED_NAME_ICS_ID = "icsId";
  @SerializedName(SERIALIZED_NAME_ICS_ID)
  private String icsId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAT = "lat";
  @SerializedName(SERIALIZED_NAME_LAT)
  private Double lat;

  public static final String SERIALIZED_NAME_LINES = "lines";
  @SerializedName(SERIALIZED_NAME_LINES)
  private List<TflApiPresentationEntitiesIdentifier> lines = new ArrayList<>();

  public static final String SERIALIZED_NAME_LON = "lon";
  @SerializedName(SERIALIZED_NAME_LON)
  private Double lon;

  public static final String SERIALIZED_NAME_MODES = "modes";
  @SerializedName(SERIALIZED_NAME_MODES)
  private List<String> modes = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_ROUTE_ID = "routeId";
  @SerializedName(SERIALIZED_NAME_ROUTE_ID)
  private Integer routeId;

  public static final String SERIALIZED_NAME_STATION_ID = "stationId";
  @SerializedName(SERIALIZED_NAME_STATION_ID)
  private String stationId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Boolean status;

  public static final String SERIALIZED_NAME_STOP_LETTER = "stopLetter";
  @SerializedName(SERIALIZED_NAME_STOP_LETTER)
  private String stopLetter;

  public static final String SERIALIZED_NAME_STOP_TYPE = "stopType";
  @SerializedName(SERIALIZED_NAME_STOP_TYPE)
  private String stopType;

  public static final String SERIALIZED_NAME_TOP_MOST_PARENT_ID = "topMostParentId";
  @SerializedName(SERIALIZED_NAME_TOP_MOST_PARENT_ID)
  private String topMostParentId;

  public static final String SERIALIZED_NAME_TOWARDS = "towards";
  @SerializedName(SERIALIZED_NAME_TOWARDS)
  private String towards;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_ZONE = "zone";
  @SerializedName(SERIALIZED_NAME_ZONE)
  private String zone;

  public TflApiPresentationEntitiesMatchedStop() {
  }

  public TflApiPresentationEntitiesMatchedStop accessibilitySummary(String accessibilitySummary) {
    this.accessibilitySummary = accessibilitySummary;
    return this;
  }

  /**
   * Get accessibilitySummary
   * @return accessibilitySummary
   */
  @javax.annotation.Nullable
  public String getAccessibilitySummary() {
    return accessibilitySummary;
  }

  public void setAccessibilitySummary(String accessibilitySummary) {
    this.accessibilitySummary = accessibilitySummary;
  }


  public TflApiPresentationEntitiesMatchedStop direction(String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @javax.annotation.Nullable
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }


  public TflApiPresentationEntitiesMatchedStop hasDisruption(Boolean hasDisruption) {
    this.hasDisruption = hasDisruption;
    return this;
  }

  /**
   * Get hasDisruption
   * @return hasDisruption
   */
  @javax.annotation.Nullable
  public Boolean getHasDisruption() {
    return hasDisruption;
  }

  public void setHasDisruption(Boolean hasDisruption) {
    this.hasDisruption = hasDisruption;
  }


  public TflApiPresentationEntitiesMatchedStop icsId(String icsId) {
    this.icsId = icsId;
    return this;
  }

  /**
   * Get icsId
   * @return icsId
   */
  @javax.annotation.Nullable
  public String getIcsId() {
    return icsId;
  }

  public void setIcsId(String icsId) {
    this.icsId = icsId;
  }


  public TflApiPresentationEntitiesMatchedStop id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TflApiPresentationEntitiesMatchedStop lat(Double lat) {
    this.lat = lat;
    return this;
  }

  /**
   * Get lat
   * @return lat
   */
  @javax.annotation.Nullable
  public Double getLat() {
    return lat;
  }

  public void setLat(Double lat) {
    this.lat = lat;
  }


  public TflApiPresentationEntitiesMatchedStop lines(List<TflApiPresentationEntitiesIdentifier> lines) {
    this.lines = lines;
    return this;
  }

  public TflApiPresentationEntitiesMatchedStop addLinesItem(TflApiPresentationEntitiesIdentifier linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

  /**
   * Get lines
   * @return lines
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesIdentifier> getLines() {
    return lines;
  }

  public void setLines(List<TflApiPresentationEntitiesIdentifier> lines) {
    this.lines = lines;
  }


  public TflApiPresentationEntitiesMatchedStop lon(Double lon) {
    this.lon = lon;
    return this;
  }

  /**
   * Get lon
   * @return lon
   */
  @javax.annotation.Nullable
  public Double getLon() {
    return lon;
  }

  public void setLon(Double lon) {
    this.lon = lon;
  }


  public TflApiPresentationEntitiesMatchedStop modes(List<String> modes) {
    this.modes = modes;
    return this;
  }

  public TflApiPresentationEntitiesMatchedStop addModesItem(String modesItem) {
    if (this.modes == null) {
      this.modes = new ArrayList<>();
    }
    this.modes.add(modesItem);
    return this;
  }

  /**
   * Get modes
   * @return modes
   */
  @javax.annotation.Nullable
  public List<String> getModes() {
    return modes;
  }

  public void setModes(List<String> modes) {
    this.modes = modes;
  }


  public TflApiPresentationEntitiesMatchedStop name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TflApiPresentationEntitiesMatchedStop parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Get parentId
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public TflApiPresentationEntitiesMatchedStop routeId(Integer routeId) {
    this.routeId = routeId;
    return this;
  }

  /**
   * Get routeId
   * @return routeId
   */
  @javax.annotation.Nullable
  public Integer getRouteId() {
    return routeId;
  }

  public void setRouteId(Integer routeId) {
    this.routeId = routeId;
  }


  public TflApiPresentationEntitiesMatchedStop stationId(String stationId) {
    this.stationId = stationId;
    return this;
  }

  /**
   * Get stationId
   * @return stationId
   */
  @javax.annotation.Nullable
  public String getStationId() {
    return stationId;
  }

  public void setStationId(String stationId) {
    this.stationId = stationId;
  }


  public TflApiPresentationEntitiesMatchedStop status(Boolean status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public Boolean getStatus() {
    return status;
  }

  public void setStatus(Boolean status) {
    this.status = status;
  }


  public TflApiPresentationEntitiesMatchedStop stopLetter(String stopLetter) {
    this.stopLetter = stopLetter;
    return this;
  }

  /**
   * Get stopLetter
   * @return stopLetter
   */
  @javax.annotation.Nullable
  public String getStopLetter() {
    return stopLetter;
  }

  public void setStopLetter(String stopLetter) {
    this.stopLetter = stopLetter;
  }


  public TflApiPresentationEntitiesMatchedStop stopType(String stopType) {
    this.stopType = stopType;
    return this;
  }

  /**
   * Get stopType
   * @return stopType
   */
  @javax.annotation.Nullable
  public String getStopType() {
    return stopType;
  }

  public void setStopType(String stopType) {
    this.stopType = stopType;
  }


  public TflApiPresentationEntitiesMatchedStop topMostParentId(String topMostParentId) {
    this.topMostParentId = topMostParentId;
    return this;
  }

  /**
   * Get topMostParentId
   * @return topMostParentId
   */
  @javax.annotation.Nullable
  public String getTopMostParentId() {
    return topMostParentId;
  }

  public void setTopMostParentId(String topMostParentId) {
    this.topMostParentId = topMostParentId;
  }


  public TflApiPresentationEntitiesMatchedStop towards(String towards) {
    this.towards = towards;
    return this;
  }

  /**
   * Get towards
   * @return towards
   */
  @javax.annotation.Nullable
  public String getTowards() {
    return towards;
  }

  public void setTowards(String towards) {
    this.towards = towards;
  }


  public TflApiPresentationEntitiesMatchedStop url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public TflApiPresentationEntitiesMatchedStop zone(String zone) {
    this.zone = zone;
    return this;
  }

  /**
   * Get zone
   * @return zone
   */
  @javax.annotation.Nullable
  public String getZone() {
    return zone;
  }

  public void setZone(String zone) {
    this.zone = zone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesMatchedStop tflApiPresentationEntitiesMatchedStop = (TflApiPresentationEntitiesMatchedStop) o;
    return Objects.equals(this.accessibilitySummary, tflApiPresentationEntitiesMatchedStop.accessibilitySummary) &&
        Objects.equals(this.direction, tflApiPresentationEntitiesMatchedStop.direction) &&
        Objects.equals(this.hasDisruption, tflApiPresentationEntitiesMatchedStop.hasDisruption) &&
        Objects.equals(this.icsId, tflApiPresentationEntitiesMatchedStop.icsId) &&
        Objects.equals(this.id, tflApiPresentationEntitiesMatchedStop.id) &&
        Objects.equals(this.lat, tflApiPresentationEntitiesMatchedStop.lat) &&
        Objects.equals(this.lines, tflApiPresentationEntitiesMatchedStop.lines) &&
        Objects.equals(this.lon, tflApiPresentationEntitiesMatchedStop.lon) &&
        Objects.equals(this.modes, tflApiPresentationEntitiesMatchedStop.modes) &&
        Objects.equals(this.name, tflApiPresentationEntitiesMatchedStop.name) &&
        Objects.equals(this.parentId, tflApiPresentationEntitiesMatchedStop.parentId) &&
        Objects.equals(this.routeId, tflApiPresentationEntitiesMatchedStop.routeId) &&
        Objects.equals(this.stationId, tflApiPresentationEntitiesMatchedStop.stationId) &&
        Objects.equals(this.status, tflApiPresentationEntitiesMatchedStop.status) &&
        Objects.equals(this.stopLetter, tflApiPresentationEntitiesMatchedStop.stopLetter) &&
        Objects.equals(this.stopType, tflApiPresentationEntitiesMatchedStop.stopType) &&
        Objects.equals(this.topMostParentId, tflApiPresentationEntitiesMatchedStop.topMostParentId) &&
        Objects.equals(this.towards, tflApiPresentationEntitiesMatchedStop.towards) &&
        Objects.equals(this.url, tflApiPresentationEntitiesMatchedStop.url) &&
        Objects.equals(this.zone, tflApiPresentationEntitiesMatchedStop.zone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessibilitySummary, direction, hasDisruption, icsId, id, lat, lines, lon, modes, name, parentId, routeId, stationId, status, stopLetter, stopType, topMostParentId, towards, url, zone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesMatchedStop {\n");
    sb.append("    accessibilitySummary: ").append(toIndentedString(accessibilitySummary)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    hasDisruption: ").append(toIndentedString(hasDisruption)).append("\n");
    sb.append("    icsId: ").append(toIndentedString(icsId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("    modes: ").append(toIndentedString(modes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    routeId: ").append(toIndentedString(routeId)).append("\n");
    sb.append("    stationId: ").append(toIndentedString(stationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stopLetter: ").append(toIndentedString(stopLetter)).append("\n");
    sb.append("    stopType: ").append(toIndentedString(stopType)).append("\n");
    sb.append("    topMostParentId: ").append(toIndentedString(topMostParentId)).append("\n");
    sb.append("    towards: ").append(toIndentedString(towards)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessibilitySummary");
    openapiFields.add("direction");
    openapiFields.add("hasDisruption");
    openapiFields.add("icsId");
    openapiFields.add("id");
    openapiFields.add("lat");
    openapiFields.add("lines");
    openapiFields.add("lon");
    openapiFields.add("modes");
    openapiFields.add("name");
    openapiFields.add("parentId");
    openapiFields.add("routeId");
    openapiFields.add("stationId");
    openapiFields.add("status");
    openapiFields.add("stopLetter");
    openapiFields.add("stopType");
    openapiFields.add("topMostParentId");
    openapiFields.add("towards");
    openapiFields.add("url");
    openapiFields.add("zone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesMatchedStop
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesMatchedStop.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesMatchedStop is not found in the empty JSON string", TflApiPresentationEntitiesMatchedStop.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesMatchedStop.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesMatchedStop` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accessibilitySummary") != null && !jsonObj.get("accessibilitySummary").isJsonNull()) && !jsonObj.get("accessibilitySummary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessibilitySummary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessibilitySummary").toString()));
      }
      if ((jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      if ((jsonObj.get("icsId") != null && !jsonObj.get("icsId").isJsonNull()) && !jsonObj.get("icsId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icsId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icsId").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("lines") != null && !jsonObj.get("lines").isJsonNull()) {
        JsonArray jsonArraylines = jsonObj.getAsJsonArray("lines");
        if (jsonArraylines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lines` to be an array in the JSON string but got `%s`", jsonObj.get("lines").toString()));
          }

          // validate the optional field `lines` (array)
          for (int i = 0; i < jsonArraylines.size(); i++) {
            TflApiPresentationEntitiesIdentifier.validateJsonElement(jsonArraylines.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("modes") != null && !jsonObj.get("modes").isJsonNull() && !jsonObj.get("modes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `modes` to be an array in the JSON string but got `%s`", jsonObj.get("modes").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("parentId") != null && !jsonObj.get("parentId").isJsonNull()) && !jsonObj.get("parentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentId").toString()));
      }
      if ((jsonObj.get("stationId") != null && !jsonObj.get("stationId").isJsonNull()) && !jsonObj.get("stationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stationId").toString()));
      }
      if ((jsonObj.get("stopLetter") != null && !jsonObj.get("stopLetter").isJsonNull()) && !jsonObj.get("stopLetter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stopLetter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stopLetter").toString()));
      }
      if ((jsonObj.get("stopType") != null && !jsonObj.get("stopType").isJsonNull()) && !jsonObj.get("stopType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stopType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stopType").toString()));
      }
      if ((jsonObj.get("topMostParentId") != null && !jsonObj.get("topMostParentId").isJsonNull()) && !jsonObj.get("topMostParentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topMostParentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topMostParentId").toString()));
      }
      if ((jsonObj.get("towards") != null && !jsonObj.get("towards").isJsonNull()) && !jsonObj.get("towards").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `towards` to be a primitive type in the JSON string but got `%s`", jsonObj.get("towards").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("zone") != null && !jsonObj.get("zone").isJsonNull()) && !jsonObj.get("zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesMatchedStop.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesMatchedStop' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesMatchedStop> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesMatchedStop.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesMatchedStop>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesMatchedStop value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesMatchedStop read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesMatchedStop given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesMatchedStop
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesMatchedStop
   */
  public static TflApiPresentationEntitiesMatchedStop fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesMatchedStop.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesMatchedStop to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

