/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesLineRouteSection;
import org.openapitools.client.model.TflApiPresentationEntitiesMatchedRouteSections;
import org.openapitools.client.model.TflApiPresentationEntitiesMatchedStop;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesRouteSearchMatch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesRouteSearchMatch {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAT = "lat";
  @SerializedName(SERIALIZED_NAME_LAT)
  private Double lat;

  public static final String SERIALIZED_NAME_LINE_ID = "lineId";
  @SerializedName(SERIALIZED_NAME_LINE_ID)
  private String lineId;

  public static final String SERIALIZED_NAME_LINE_NAME = "lineName";
  @SerializedName(SERIALIZED_NAME_LINE_NAME)
  private String lineName;

  public static final String SERIALIZED_NAME_LINE_ROUTE_SECTION = "lineRouteSection";
  @SerializedName(SERIALIZED_NAME_LINE_ROUTE_SECTION)
  private List<TflApiPresentationEntitiesLineRouteSection> lineRouteSection = new ArrayList<>();

  public static final String SERIALIZED_NAME_LON = "lon";
  @SerializedName(SERIALIZED_NAME_LON)
  private Double lon;

  public static final String SERIALIZED_NAME_MATCHED_ROUTE_SECTIONS = "matchedRouteSections";
  @SerializedName(SERIALIZED_NAME_MATCHED_ROUTE_SECTIONS)
  private List<TflApiPresentationEntitiesMatchedRouteSections> matchedRouteSections = new ArrayList<>();

  public static final String SERIALIZED_NAME_MATCHED_STOPS = "matchedStops";
  @SerializedName(SERIALIZED_NAME_MATCHED_STOPS)
  private List<TflApiPresentationEntitiesMatchedStop> matchedStops = new ArrayList<>();

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private String mode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public TflApiPresentationEntitiesRouteSearchMatch() {
  }

  public TflApiPresentationEntitiesRouteSearchMatch id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TflApiPresentationEntitiesRouteSearchMatch lat(Double lat) {
    this.lat = lat;
    return this;
  }

  /**
   * Get lat
   * @return lat
   */
  @javax.annotation.Nullable
  public Double getLat() {
    return lat;
  }

  public void setLat(Double lat) {
    this.lat = lat;
  }


  public TflApiPresentationEntitiesRouteSearchMatch lineId(String lineId) {
    this.lineId = lineId;
    return this;
  }

  /**
   * Get lineId
   * @return lineId
   */
  @javax.annotation.Nullable
  public String getLineId() {
    return lineId;
  }

  public void setLineId(String lineId) {
    this.lineId = lineId;
  }


  public TflApiPresentationEntitiesRouteSearchMatch lineName(String lineName) {
    this.lineName = lineName;
    return this;
  }

  /**
   * Get lineName
   * @return lineName
   */
  @javax.annotation.Nullable
  public String getLineName() {
    return lineName;
  }

  public void setLineName(String lineName) {
    this.lineName = lineName;
  }


  public TflApiPresentationEntitiesRouteSearchMatch lineRouteSection(List<TflApiPresentationEntitiesLineRouteSection> lineRouteSection) {
    this.lineRouteSection = lineRouteSection;
    return this;
  }

  public TflApiPresentationEntitiesRouteSearchMatch addLineRouteSectionItem(TflApiPresentationEntitiesLineRouteSection lineRouteSectionItem) {
    if (this.lineRouteSection == null) {
      this.lineRouteSection = new ArrayList<>();
    }
    this.lineRouteSection.add(lineRouteSectionItem);
    return this;
  }

  /**
   * Get lineRouteSection
   * @return lineRouteSection
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesLineRouteSection> getLineRouteSection() {
    return lineRouteSection;
  }

  public void setLineRouteSection(List<TflApiPresentationEntitiesLineRouteSection> lineRouteSection) {
    this.lineRouteSection = lineRouteSection;
  }


  public TflApiPresentationEntitiesRouteSearchMatch lon(Double lon) {
    this.lon = lon;
    return this;
  }

  /**
   * Get lon
   * @return lon
   */
  @javax.annotation.Nullable
  public Double getLon() {
    return lon;
  }

  public void setLon(Double lon) {
    this.lon = lon;
  }


  public TflApiPresentationEntitiesRouteSearchMatch matchedRouteSections(List<TflApiPresentationEntitiesMatchedRouteSections> matchedRouteSections) {
    this.matchedRouteSections = matchedRouteSections;
    return this;
  }

  public TflApiPresentationEntitiesRouteSearchMatch addMatchedRouteSectionsItem(TflApiPresentationEntitiesMatchedRouteSections matchedRouteSectionsItem) {
    if (this.matchedRouteSections == null) {
      this.matchedRouteSections = new ArrayList<>();
    }
    this.matchedRouteSections.add(matchedRouteSectionsItem);
    return this;
  }

  /**
   * Get matchedRouteSections
   * @return matchedRouteSections
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMatchedRouteSections> getMatchedRouteSections() {
    return matchedRouteSections;
  }

  public void setMatchedRouteSections(List<TflApiPresentationEntitiesMatchedRouteSections> matchedRouteSections) {
    this.matchedRouteSections = matchedRouteSections;
  }


  public TflApiPresentationEntitiesRouteSearchMatch matchedStops(List<TflApiPresentationEntitiesMatchedStop> matchedStops) {
    this.matchedStops = matchedStops;
    return this;
  }

  public TflApiPresentationEntitiesRouteSearchMatch addMatchedStopsItem(TflApiPresentationEntitiesMatchedStop matchedStopsItem) {
    if (this.matchedStops == null) {
      this.matchedStops = new ArrayList<>();
    }
    this.matchedStops.add(matchedStopsItem);
    return this;
  }

  /**
   * Get matchedStops
   * @return matchedStops
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMatchedStop> getMatchedStops() {
    return matchedStops;
  }

  public void setMatchedStops(List<TflApiPresentationEntitiesMatchedStop> matchedStops) {
    this.matchedStops = matchedStops;
  }


  public TflApiPresentationEntitiesRouteSearchMatch mode(String mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }


  public TflApiPresentationEntitiesRouteSearchMatch name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TflApiPresentationEntitiesRouteSearchMatch url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesRouteSearchMatch tflApiPresentationEntitiesRouteSearchMatch = (TflApiPresentationEntitiesRouteSearchMatch) o;
    return Objects.equals(this.id, tflApiPresentationEntitiesRouteSearchMatch.id) &&
        Objects.equals(this.lat, tflApiPresentationEntitiesRouteSearchMatch.lat) &&
        Objects.equals(this.lineId, tflApiPresentationEntitiesRouteSearchMatch.lineId) &&
        Objects.equals(this.lineName, tflApiPresentationEntitiesRouteSearchMatch.lineName) &&
        Objects.equals(this.lineRouteSection, tflApiPresentationEntitiesRouteSearchMatch.lineRouteSection) &&
        Objects.equals(this.lon, tflApiPresentationEntitiesRouteSearchMatch.lon) &&
        Objects.equals(this.matchedRouteSections, tflApiPresentationEntitiesRouteSearchMatch.matchedRouteSections) &&
        Objects.equals(this.matchedStops, tflApiPresentationEntitiesRouteSearchMatch.matchedStops) &&
        Objects.equals(this.mode, tflApiPresentationEntitiesRouteSearchMatch.mode) &&
        Objects.equals(this.name, tflApiPresentationEntitiesRouteSearchMatch.name) &&
        Objects.equals(this.url, tflApiPresentationEntitiesRouteSearchMatch.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, lat, lineId, lineName, lineRouteSection, lon, matchedRouteSections, matchedStops, mode, name, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesRouteSearchMatch {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    lineName: ").append(toIndentedString(lineName)).append("\n");
    sb.append("    lineRouteSection: ").append(toIndentedString(lineRouteSection)).append("\n");
    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("    matchedRouteSections: ").append(toIndentedString(matchedRouteSections)).append("\n");
    sb.append("    matchedStops: ").append(toIndentedString(matchedStops)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("lat");
    openapiFields.add("lineId");
    openapiFields.add("lineName");
    openapiFields.add("lineRouteSection");
    openapiFields.add("lon");
    openapiFields.add("matchedRouteSections");
    openapiFields.add("matchedStops");
    openapiFields.add("mode");
    openapiFields.add("name");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesRouteSearchMatch
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesRouteSearchMatch.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesRouteSearchMatch is not found in the empty JSON string", TflApiPresentationEntitiesRouteSearchMatch.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesRouteSearchMatch.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesRouteSearchMatch` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("lineId") != null && !jsonObj.get("lineId").isJsonNull()) && !jsonObj.get("lineId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineId").toString()));
      }
      if ((jsonObj.get("lineName") != null && !jsonObj.get("lineName").isJsonNull()) && !jsonObj.get("lineName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineName").toString()));
      }
      if (jsonObj.get("lineRouteSection") != null && !jsonObj.get("lineRouteSection").isJsonNull()) {
        JsonArray jsonArraylineRouteSection = jsonObj.getAsJsonArray("lineRouteSection");
        if (jsonArraylineRouteSection != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineRouteSection").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineRouteSection` to be an array in the JSON string but got `%s`", jsonObj.get("lineRouteSection").toString()));
          }

          // validate the optional field `lineRouteSection` (array)
          for (int i = 0; i < jsonArraylineRouteSection.size(); i++) {
            TflApiPresentationEntitiesLineRouteSection.validateJsonElement(jsonArraylineRouteSection.get(i));
          };
        }
      }
      if (jsonObj.get("matchedRouteSections") != null && !jsonObj.get("matchedRouteSections").isJsonNull()) {
        JsonArray jsonArraymatchedRouteSections = jsonObj.getAsJsonArray("matchedRouteSections");
        if (jsonArraymatchedRouteSections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("matchedRouteSections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `matchedRouteSections` to be an array in the JSON string but got `%s`", jsonObj.get("matchedRouteSections").toString()));
          }

          // validate the optional field `matchedRouteSections` (array)
          for (int i = 0; i < jsonArraymatchedRouteSections.size(); i++) {
            TflApiPresentationEntitiesMatchedRouteSections.validateJsonElement(jsonArraymatchedRouteSections.get(i));
          };
        }
      }
      if (jsonObj.get("matchedStops") != null && !jsonObj.get("matchedStops").isJsonNull()) {
        JsonArray jsonArraymatchedStops = jsonObj.getAsJsonArray("matchedStops");
        if (jsonArraymatchedStops != null) {
          // ensure the json data is an array
          if (!jsonObj.get("matchedStops").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `matchedStops` to be an array in the JSON string but got `%s`", jsonObj.get("matchedStops").toString()));
          }

          // validate the optional field `matchedStops` (array)
          for (int i = 0; i < jsonArraymatchedStops.size(); i++) {
            TflApiPresentationEntitiesMatchedStop.validateJsonElement(jsonArraymatchedStops.get(i));
          };
        }
      }
      if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) && !jsonObj.get("mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mode").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesRouteSearchMatch.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesRouteSearchMatch' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesRouteSearchMatch> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesRouteSearchMatch.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesRouteSearchMatch>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesRouteSearchMatch value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesRouteSearchMatch read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesRouteSearchMatch given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesRouteSearchMatch
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesRouteSearchMatch
   */
  public static TflApiPresentationEntitiesRouteSearchMatch fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesRouteSearchMatch.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesRouteSearchMatch to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

