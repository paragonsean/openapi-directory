/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesMatchedStop;
import org.openapitools.client.model.TflApiPresentationEntitiesOrderedRoute;
import org.openapitools.client.model.TflApiPresentationEntitiesStopPointSequence;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesRouteSequence
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesRouteSequence {
  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private String direction;

  public static final String SERIALIZED_NAME_IS_OUTBOUND_ONLY = "isOutboundOnly";
  @SerializedName(SERIALIZED_NAME_IS_OUTBOUND_ONLY)
  private Boolean isOutboundOnly;

  public static final String SERIALIZED_NAME_LINE_ID = "lineId";
  @SerializedName(SERIALIZED_NAME_LINE_ID)
  private String lineId;

  public static final String SERIALIZED_NAME_LINE_NAME = "lineName";
  @SerializedName(SERIALIZED_NAME_LINE_NAME)
  private String lineName;

  public static final String SERIALIZED_NAME_LINE_STRINGS = "lineStrings";
  @SerializedName(SERIALIZED_NAME_LINE_STRINGS)
  private List<String> lineStrings = new ArrayList<>();

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private String mode;

  public static final String SERIALIZED_NAME_ORDERED_LINE_ROUTES = "orderedLineRoutes";
  @SerializedName(SERIALIZED_NAME_ORDERED_LINE_ROUTES)
  private List<TflApiPresentationEntitiesOrderedRoute> orderedLineRoutes = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATIONS = "stations";
  @SerializedName(SERIALIZED_NAME_STATIONS)
  private List<TflApiPresentationEntitiesMatchedStop> stations = new ArrayList<>();

  public static final String SERIALIZED_NAME_STOP_POINT_SEQUENCES = "stopPointSequences";
  @SerializedName(SERIALIZED_NAME_STOP_POINT_SEQUENCES)
  private List<TflApiPresentationEntitiesStopPointSequence> stopPointSequences = new ArrayList<>();

  public TflApiPresentationEntitiesRouteSequence() {
  }

  public TflApiPresentationEntitiesRouteSequence direction(String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @javax.annotation.Nullable
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }


  public TflApiPresentationEntitiesRouteSequence isOutboundOnly(Boolean isOutboundOnly) {
    this.isOutboundOnly = isOutboundOnly;
    return this;
  }

  /**
   * Get isOutboundOnly
   * @return isOutboundOnly
   */
  @javax.annotation.Nullable
  public Boolean getIsOutboundOnly() {
    return isOutboundOnly;
  }

  public void setIsOutboundOnly(Boolean isOutboundOnly) {
    this.isOutboundOnly = isOutboundOnly;
  }


  public TflApiPresentationEntitiesRouteSequence lineId(String lineId) {
    this.lineId = lineId;
    return this;
  }

  /**
   * Get lineId
   * @return lineId
   */
  @javax.annotation.Nullable
  public String getLineId() {
    return lineId;
  }

  public void setLineId(String lineId) {
    this.lineId = lineId;
  }


  public TflApiPresentationEntitiesRouteSequence lineName(String lineName) {
    this.lineName = lineName;
    return this;
  }

  /**
   * Get lineName
   * @return lineName
   */
  @javax.annotation.Nullable
  public String getLineName() {
    return lineName;
  }

  public void setLineName(String lineName) {
    this.lineName = lineName;
  }


  public TflApiPresentationEntitiesRouteSequence lineStrings(List<String> lineStrings) {
    this.lineStrings = lineStrings;
    return this;
  }

  public TflApiPresentationEntitiesRouteSequence addLineStringsItem(String lineStringsItem) {
    if (this.lineStrings == null) {
      this.lineStrings = new ArrayList<>();
    }
    this.lineStrings.add(lineStringsItem);
    return this;
  }

  /**
   * Get lineStrings
   * @return lineStrings
   */
  @javax.annotation.Nullable
  public List<String> getLineStrings() {
    return lineStrings;
  }

  public void setLineStrings(List<String> lineStrings) {
    this.lineStrings = lineStrings;
  }


  public TflApiPresentationEntitiesRouteSequence mode(String mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }


  public TflApiPresentationEntitiesRouteSequence orderedLineRoutes(List<TflApiPresentationEntitiesOrderedRoute> orderedLineRoutes) {
    this.orderedLineRoutes = orderedLineRoutes;
    return this;
  }

  public TflApiPresentationEntitiesRouteSequence addOrderedLineRoutesItem(TflApiPresentationEntitiesOrderedRoute orderedLineRoutesItem) {
    if (this.orderedLineRoutes == null) {
      this.orderedLineRoutes = new ArrayList<>();
    }
    this.orderedLineRoutes.add(orderedLineRoutesItem);
    return this;
  }

  /**
   * Get orderedLineRoutes
   * @return orderedLineRoutes
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesOrderedRoute> getOrderedLineRoutes() {
    return orderedLineRoutes;
  }

  public void setOrderedLineRoutes(List<TflApiPresentationEntitiesOrderedRoute> orderedLineRoutes) {
    this.orderedLineRoutes = orderedLineRoutes;
  }


  public TflApiPresentationEntitiesRouteSequence stations(List<TflApiPresentationEntitiesMatchedStop> stations) {
    this.stations = stations;
    return this;
  }

  public TflApiPresentationEntitiesRouteSequence addStationsItem(TflApiPresentationEntitiesMatchedStop stationsItem) {
    if (this.stations == null) {
      this.stations = new ArrayList<>();
    }
    this.stations.add(stationsItem);
    return this;
  }

  /**
   * Get stations
   * @return stations
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesMatchedStop> getStations() {
    return stations;
  }

  public void setStations(List<TflApiPresentationEntitiesMatchedStop> stations) {
    this.stations = stations;
  }


  public TflApiPresentationEntitiesRouteSequence stopPointSequences(List<TflApiPresentationEntitiesStopPointSequence> stopPointSequences) {
    this.stopPointSequences = stopPointSequences;
    return this;
  }

  public TflApiPresentationEntitiesRouteSequence addStopPointSequencesItem(TflApiPresentationEntitiesStopPointSequence stopPointSequencesItem) {
    if (this.stopPointSequences == null) {
      this.stopPointSequences = new ArrayList<>();
    }
    this.stopPointSequences.add(stopPointSequencesItem);
    return this;
  }

  /**
   * Get stopPointSequences
   * @return stopPointSequences
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesStopPointSequence> getStopPointSequences() {
    return stopPointSequences;
  }

  public void setStopPointSequences(List<TflApiPresentationEntitiesStopPointSequence> stopPointSequences) {
    this.stopPointSequences = stopPointSequences;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesRouteSequence tflApiPresentationEntitiesRouteSequence = (TflApiPresentationEntitiesRouteSequence) o;
    return Objects.equals(this.direction, tflApiPresentationEntitiesRouteSequence.direction) &&
        Objects.equals(this.isOutboundOnly, tflApiPresentationEntitiesRouteSequence.isOutboundOnly) &&
        Objects.equals(this.lineId, tflApiPresentationEntitiesRouteSequence.lineId) &&
        Objects.equals(this.lineName, tflApiPresentationEntitiesRouteSequence.lineName) &&
        Objects.equals(this.lineStrings, tflApiPresentationEntitiesRouteSequence.lineStrings) &&
        Objects.equals(this.mode, tflApiPresentationEntitiesRouteSequence.mode) &&
        Objects.equals(this.orderedLineRoutes, tflApiPresentationEntitiesRouteSequence.orderedLineRoutes) &&
        Objects.equals(this.stations, tflApiPresentationEntitiesRouteSequence.stations) &&
        Objects.equals(this.stopPointSequences, tflApiPresentationEntitiesRouteSequence.stopPointSequences);
  }

  @Override
  public int hashCode() {
    return Objects.hash(direction, isOutboundOnly, lineId, lineName, lineStrings, mode, orderedLineRoutes, stations, stopPointSequences);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesRouteSequence {\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    isOutboundOnly: ").append(toIndentedString(isOutboundOnly)).append("\n");
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    lineName: ").append(toIndentedString(lineName)).append("\n");
    sb.append("    lineStrings: ").append(toIndentedString(lineStrings)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    orderedLineRoutes: ").append(toIndentedString(orderedLineRoutes)).append("\n");
    sb.append("    stations: ").append(toIndentedString(stations)).append("\n");
    sb.append("    stopPointSequences: ").append(toIndentedString(stopPointSequences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("direction");
    openapiFields.add("isOutboundOnly");
    openapiFields.add("lineId");
    openapiFields.add("lineName");
    openapiFields.add("lineStrings");
    openapiFields.add("mode");
    openapiFields.add("orderedLineRoutes");
    openapiFields.add("stations");
    openapiFields.add("stopPointSequences");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesRouteSequence
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesRouteSequence.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesRouteSequence is not found in the empty JSON string", TflApiPresentationEntitiesRouteSequence.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesRouteSequence.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesRouteSequence` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      if ((jsonObj.get("lineId") != null && !jsonObj.get("lineId").isJsonNull()) && !jsonObj.get("lineId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineId").toString()));
      }
      if ((jsonObj.get("lineName") != null && !jsonObj.get("lineName").isJsonNull()) && !jsonObj.get("lineName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("lineStrings") != null && !jsonObj.get("lineStrings").isJsonNull() && !jsonObj.get("lineStrings").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineStrings` to be an array in the JSON string but got `%s`", jsonObj.get("lineStrings").toString()));
      }
      if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) && !jsonObj.get("mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mode").toString()));
      }
      if (jsonObj.get("orderedLineRoutes") != null && !jsonObj.get("orderedLineRoutes").isJsonNull()) {
        JsonArray jsonArrayorderedLineRoutes = jsonObj.getAsJsonArray("orderedLineRoutes");
        if (jsonArrayorderedLineRoutes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("orderedLineRoutes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `orderedLineRoutes` to be an array in the JSON string but got `%s`", jsonObj.get("orderedLineRoutes").toString()));
          }

          // validate the optional field `orderedLineRoutes` (array)
          for (int i = 0; i < jsonArrayorderedLineRoutes.size(); i++) {
            TflApiPresentationEntitiesOrderedRoute.validateJsonElement(jsonArrayorderedLineRoutes.get(i));
          };
        }
      }
      if (jsonObj.get("stations") != null && !jsonObj.get("stations").isJsonNull()) {
        JsonArray jsonArraystations = jsonObj.getAsJsonArray("stations");
        if (jsonArraystations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("stations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `stations` to be an array in the JSON string but got `%s`", jsonObj.get("stations").toString()));
          }

          // validate the optional field `stations` (array)
          for (int i = 0; i < jsonArraystations.size(); i++) {
            TflApiPresentationEntitiesMatchedStop.validateJsonElement(jsonArraystations.get(i));
          };
        }
      }
      if (jsonObj.get("stopPointSequences") != null && !jsonObj.get("stopPointSequences").isJsonNull()) {
        JsonArray jsonArraystopPointSequences = jsonObj.getAsJsonArray("stopPointSequences");
        if (jsonArraystopPointSequences != null) {
          // ensure the json data is an array
          if (!jsonObj.get("stopPointSequences").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `stopPointSequences` to be an array in the JSON string but got `%s`", jsonObj.get("stopPointSequences").toString()));
          }

          // validate the optional field `stopPointSequences` (array)
          for (int i = 0; i < jsonArraystopPointSequences.size(); i++) {
            TflApiPresentationEntitiesStopPointSequence.validateJsonElement(jsonArraystopPointSequences.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesRouteSequence.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesRouteSequence' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesRouteSequence> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesRouteSequence.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesRouteSequence>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesRouteSequence value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesRouteSequence read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesRouteSequence given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesRouteSequence
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesRouteSequence
   */
  public static TflApiPresentationEntitiesRouteSequence fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesRouteSequence.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesRouteSequence to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

