/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiCommonJourneyPlannerJpElevation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiCommonJourneyPlannerJpElevation {
  public static final String SERIALIZED_NAME_DISTANCE = "distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private Integer distance;

  public static final String SERIALIZED_NAME_END_LAT = "endLat";
  @SerializedName(SERIALIZED_NAME_END_LAT)
  private Double endLat;

  public static final String SERIALIZED_NAME_END_LON = "endLon";
  @SerializedName(SERIALIZED_NAME_END_LON)
  private Double endLon;

  public static final String SERIALIZED_NAME_GRADIENT = "gradient";
  @SerializedName(SERIALIZED_NAME_GRADIENT)
  private Double gradient;

  public static final String SERIALIZED_NAME_HEIGHT_FROM_PREVIOUS_POINT = "heightFromPreviousPoint";
  @SerializedName(SERIALIZED_NAME_HEIGHT_FROM_PREVIOUS_POINT)
  private Integer heightFromPreviousPoint;

  public static final String SERIALIZED_NAME_START_LAT = "startLat";
  @SerializedName(SERIALIZED_NAME_START_LAT)
  private Double startLat;

  public static final String SERIALIZED_NAME_START_LON = "startLon";
  @SerializedName(SERIALIZED_NAME_START_LON)
  private Double startLon;

  public TflApiCommonJourneyPlannerJpElevation() {
  }

  public TflApiCommonJourneyPlannerJpElevation distance(Integer distance) {
    this.distance = distance;
    return this;
  }

  /**
   * Get distance
   * @return distance
   */
  @javax.annotation.Nullable
  public Integer getDistance() {
    return distance;
  }

  public void setDistance(Integer distance) {
    this.distance = distance;
  }


  public TflApiCommonJourneyPlannerJpElevation endLat(Double endLat) {
    this.endLat = endLat;
    return this;
  }

  /**
   * Get endLat
   * @return endLat
   */
  @javax.annotation.Nullable
  public Double getEndLat() {
    return endLat;
  }

  public void setEndLat(Double endLat) {
    this.endLat = endLat;
  }


  public TflApiCommonJourneyPlannerJpElevation endLon(Double endLon) {
    this.endLon = endLon;
    return this;
  }

  /**
   * Get endLon
   * @return endLon
   */
  @javax.annotation.Nullable
  public Double getEndLon() {
    return endLon;
  }

  public void setEndLon(Double endLon) {
    this.endLon = endLon;
  }


  public TflApiCommonJourneyPlannerJpElevation gradient(Double gradient) {
    this.gradient = gradient;
    return this;
  }

  /**
   * Get gradient
   * @return gradient
   */
  @javax.annotation.Nullable
  public Double getGradient() {
    return gradient;
  }

  public void setGradient(Double gradient) {
    this.gradient = gradient;
  }


  public TflApiCommonJourneyPlannerJpElevation heightFromPreviousPoint(Integer heightFromPreviousPoint) {
    this.heightFromPreviousPoint = heightFromPreviousPoint;
    return this;
  }

  /**
   * Get heightFromPreviousPoint
   * @return heightFromPreviousPoint
   */
  @javax.annotation.Nullable
  public Integer getHeightFromPreviousPoint() {
    return heightFromPreviousPoint;
  }

  public void setHeightFromPreviousPoint(Integer heightFromPreviousPoint) {
    this.heightFromPreviousPoint = heightFromPreviousPoint;
  }


  public TflApiCommonJourneyPlannerJpElevation startLat(Double startLat) {
    this.startLat = startLat;
    return this;
  }

  /**
   * Get startLat
   * @return startLat
   */
  @javax.annotation.Nullable
  public Double getStartLat() {
    return startLat;
  }

  public void setStartLat(Double startLat) {
    this.startLat = startLat;
  }


  public TflApiCommonJourneyPlannerJpElevation startLon(Double startLon) {
    this.startLon = startLon;
    return this;
  }

  /**
   * Get startLon
   * @return startLon
   */
  @javax.annotation.Nullable
  public Double getStartLon() {
    return startLon;
  }

  public void setStartLon(Double startLon) {
    this.startLon = startLon;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiCommonJourneyPlannerJpElevation tflApiCommonJourneyPlannerJpElevation = (TflApiCommonJourneyPlannerJpElevation) o;
    return Objects.equals(this.distance, tflApiCommonJourneyPlannerJpElevation.distance) &&
        Objects.equals(this.endLat, tflApiCommonJourneyPlannerJpElevation.endLat) &&
        Objects.equals(this.endLon, tflApiCommonJourneyPlannerJpElevation.endLon) &&
        Objects.equals(this.gradient, tflApiCommonJourneyPlannerJpElevation.gradient) &&
        Objects.equals(this.heightFromPreviousPoint, tflApiCommonJourneyPlannerJpElevation.heightFromPreviousPoint) &&
        Objects.equals(this.startLat, tflApiCommonJourneyPlannerJpElevation.startLat) &&
        Objects.equals(this.startLon, tflApiCommonJourneyPlannerJpElevation.startLon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distance, endLat, endLon, gradient, heightFromPreviousPoint, startLat, startLon);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiCommonJourneyPlannerJpElevation {\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    endLat: ").append(toIndentedString(endLat)).append("\n");
    sb.append("    endLon: ").append(toIndentedString(endLon)).append("\n");
    sb.append("    gradient: ").append(toIndentedString(gradient)).append("\n");
    sb.append("    heightFromPreviousPoint: ").append(toIndentedString(heightFromPreviousPoint)).append("\n");
    sb.append("    startLat: ").append(toIndentedString(startLat)).append("\n");
    sb.append("    startLon: ").append(toIndentedString(startLon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("distance");
    openapiFields.add("endLat");
    openapiFields.add("endLon");
    openapiFields.add("gradient");
    openapiFields.add("heightFromPreviousPoint");
    openapiFields.add("startLat");
    openapiFields.add("startLon");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiCommonJourneyPlannerJpElevation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiCommonJourneyPlannerJpElevation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiCommonJourneyPlannerJpElevation is not found in the empty JSON string", TflApiCommonJourneyPlannerJpElevation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiCommonJourneyPlannerJpElevation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiCommonJourneyPlannerJpElevation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiCommonJourneyPlannerJpElevation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiCommonJourneyPlannerJpElevation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiCommonJourneyPlannerJpElevation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiCommonJourneyPlannerJpElevation.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiCommonJourneyPlannerJpElevation>() {
           @Override
           public void write(JsonWriter out, TflApiCommonJourneyPlannerJpElevation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiCommonJourneyPlannerJpElevation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiCommonJourneyPlannerJpElevation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiCommonJourneyPlannerJpElevation
   * @throws IOException if the JSON string is invalid with respect to TflApiCommonJourneyPlannerJpElevation
   */
  public static TflApiCommonJourneyPlannerJpElevation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiCommonJourneyPlannerJpElevation.class);
  }

  /**
   * Convert an instance of TflApiCommonJourneyPlannerJpElevation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

