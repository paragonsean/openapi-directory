/*
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TflApiPresentationEntitiesKnownJourney;
import org.openapitools.client.model.TflApiPresentationEntitiesPeriod;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TflApiPresentationEntitiesSchedule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:40.735472-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TflApiPresentationEntitiesSchedule {
  public static final String SERIALIZED_NAME_FIRST_JOURNEY = "firstJourney";
  @SerializedName(SERIALIZED_NAME_FIRST_JOURNEY)
  private TflApiPresentationEntitiesKnownJourney firstJourney;

  public static final String SERIALIZED_NAME_KNOWN_JOURNEYS = "knownJourneys";
  @SerializedName(SERIALIZED_NAME_KNOWN_JOURNEYS)
  private List<TflApiPresentationEntitiesKnownJourney> knownJourneys = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_JOURNEY = "lastJourney";
  @SerializedName(SERIALIZED_NAME_LAST_JOURNEY)
  private TflApiPresentationEntitiesKnownJourney lastJourney;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERIODS = "periods";
  @SerializedName(SERIALIZED_NAME_PERIODS)
  private List<TflApiPresentationEntitiesPeriod> periods = new ArrayList<>();

  public TflApiPresentationEntitiesSchedule() {
  }

  public TflApiPresentationEntitiesSchedule firstJourney(TflApiPresentationEntitiesKnownJourney firstJourney) {
    this.firstJourney = firstJourney;
    return this;
  }

  /**
   * Get firstJourney
   * @return firstJourney
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesKnownJourney getFirstJourney() {
    return firstJourney;
  }

  public void setFirstJourney(TflApiPresentationEntitiesKnownJourney firstJourney) {
    this.firstJourney = firstJourney;
  }


  public TflApiPresentationEntitiesSchedule knownJourneys(List<TflApiPresentationEntitiesKnownJourney> knownJourneys) {
    this.knownJourneys = knownJourneys;
    return this;
  }

  public TflApiPresentationEntitiesSchedule addKnownJourneysItem(TflApiPresentationEntitiesKnownJourney knownJourneysItem) {
    if (this.knownJourneys == null) {
      this.knownJourneys = new ArrayList<>();
    }
    this.knownJourneys.add(knownJourneysItem);
    return this;
  }

  /**
   * Get knownJourneys
   * @return knownJourneys
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesKnownJourney> getKnownJourneys() {
    return knownJourneys;
  }

  public void setKnownJourneys(List<TflApiPresentationEntitiesKnownJourney> knownJourneys) {
    this.knownJourneys = knownJourneys;
  }


  public TflApiPresentationEntitiesSchedule lastJourney(TflApiPresentationEntitiesKnownJourney lastJourney) {
    this.lastJourney = lastJourney;
    return this;
  }

  /**
   * Get lastJourney
   * @return lastJourney
   */
  @javax.annotation.Nullable
  public TflApiPresentationEntitiesKnownJourney getLastJourney() {
    return lastJourney;
  }

  public void setLastJourney(TflApiPresentationEntitiesKnownJourney lastJourney) {
    this.lastJourney = lastJourney;
  }


  public TflApiPresentationEntitiesSchedule name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TflApiPresentationEntitiesSchedule periods(List<TflApiPresentationEntitiesPeriod> periods) {
    this.periods = periods;
    return this;
  }

  public TflApiPresentationEntitiesSchedule addPeriodsItem(TflApiPresentationEntitiesPeriod periodsItem) {
    if (this.periods == null) {
      this.periods = new ArrayList<>();
    }
    this.periods.add(periodsItem);
    return this;
  }

  /**
   * Get periods
   * @return periods
   */
  @javax.annotation.Nullable
  public List<TflApiPresentationEntitiesPeriod> getPeriods() {
    return periods;
  }

  public void setPeriods(List<TflApiPresentationEntitiesPeriod> periods) {
    this.periods = periods;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TflApiPresentationEntitiesSchedule tflApiPresentationEntitiesSchedule = (TflApiPresentationEntitiesSchedule) o;
    return Objects.equals(this.firstJourney, tflApiPresentationEntitiesSchedule.firstJourney) &&
        Objects.equals(this.knownJourneys, tflApiPresentationEntitiesSchedule.knownJourneys) &&
        Objects.equals(this.lastJourney, tflApiPresentationEntitiesSchedule.lastJourney) &&
        Objects.equals(this.name, tflApiPresentationEntitiesSchedule.name) &&
        Objects.equals(this.periods, tflApiPresentationEntitiesSchedule.periods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstJourney, knownJourneys, lastJourney, name, periods);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TflApiPresentationEntitiesSchedule {\n");
    sb.append("    firstJourney: ").append(toIndentedString(firstJourney)).append("\n");
    sb.append("    knownJourneys: ").append(toIndentedString(knownJourneys)).append("\n");
    sb.append("    lastJourney: ").append(toIndentedString(lastJourney)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    periods: ").append(toIndentedString(periods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("firstJourney");
    openapiFields.add("knownJourneys");
    openapiFields.add("lastJourney");
    openapiFields.add("name");
    openapiFields.add("periods");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TflApiPresentationEntitiesSchedule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TflApiPresentationEntitiesSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TflApiPresentationEntitiesSchedule is not found in the empty JSON string", TflApiPresentationEntitiesSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TflApiPresentationEntitiesSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TflApiPresentationEntitiesSchedule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `firstJourney`
      if (jsonObj.get("firstJourney") != null && !jsonObj.get("firstJourney").isJsonNull()) {
        TflApiPresentationEntitiesKnownJourney.validateJsonElement(jsonObj.get("firstJourney"));
      }
      if (jsonObj.get("knownJourneys") != null && !jsonObj.get("knownJourneys").isJsonNull()) {
        JsonArray jsonArrayknownJourneys = jsonObj.getAsJsonArray("knownJourneys");
        if (jsonArrayknownJourneys != null) {
          // ensure the json data is an array
          if (!jsonObj.get("knownJourneys").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `knownJourneys` to be an array in the JSON string but got `%s`", jsonObj.get("knownJourneys").toString()));
          }

          // validate the optional field `knownJourneys` (array)
          for (int i = 0; i < jsonArrayknownJourneys.size(); i++) {
            TflApiPresentationEntitiesKnownJourney.validateJsonElement(jsonArrayknownJourneys.get(i));
          };
        }
      }
      // validate the optional field `lastJourney`
      if (jsonObj.get("lastJourney") != null && !jsonObj.get("lastJourney").isJsonNull()) {
        TflApiPresentationEntitiesKnownJourney.validateJsonElement(jsonObj.get("lastJourney"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("periods") != null && !jsonObj.get("periods").isJsonNull()) {
        JsonArray jsonArrayperiods = jsonObj.getAsJsonArray("periods");
        if (jsonArrayperiods != null) {
          // ensure the json data is an array
          if (!jsonObj.get("periods").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `periods` to be an array in the JSON string but got `%s`", jsonObj.get("periods").toString()));
          }

          // validate the optional field `periods` (array)
          for (int i = 0; i < jsonArrayperiods.size(); i++) {
            TflApiPresentationEntitiesPeriod.validateJsonElement(jsonArrayperiods.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TflApiPresentationEntitiesSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TflApiPresentationEntitiesSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TflApiPresentationEntitiesSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TflApiPresentationEntitiesSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<TflApiPresentationEntitiesSchedule>() {
           @Override
           public void write(JsonWriter out, TflApiPresentationEntitiesSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TflApiPresentationEntitiesSchedule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TflApiPresentationEntitiesSchedule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TflApiPresentationEntitiesSchedule
   * @throws IOException if the JSON string is invalid with respect to TflApiPresentationEntitiesSchedule
   */
  public static TflApiPresentationEntitiesSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TflApiPresentationEntitiesSchedule.class);
  }

  /**
   * Convert an instance of TflApiPresentationEntitiesSchedule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

