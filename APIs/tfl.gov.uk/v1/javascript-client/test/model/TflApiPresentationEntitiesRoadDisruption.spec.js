/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TransportForLondonUnifiedApi);
  }
}(this, function(expect, TransportForLondonUnifiedApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TflApiPresentationEntitiesRoadDisruption', function() {
    it('should create an instance of TflApiPresentationEntitiesRoadDisruption', function() {
      // uncomment below and update the code to test TflApiPresentationEntitiesRoadDisruption
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be.a(TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption);
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property corridorIds (base name: "corridorIds")', function() {
      // uncomment below and update the code to test the property corridorIds
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property currentUpdate (base name: "currentUpdate")', function() {
      // uncomment below and update the code to test the property currentUpdate
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property currentUpdateDateTime (base name: "currentUpdateDateTime")', function() {
      // uncomment below and update the code to test the property currentUpdateDateTime
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property endDateTime (base name: "endDateTime")', function() {
      // uncomment below and update the code to test the property endDateTime
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property geography (base name: "geography")', function() {
      // uncomment below and update the code to test the property geography
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property geometry (base name: "geometry")', function() {
      // uncomment below and update the code to test the property geometry
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property hasClosures (base name: "hasClosures")', function() {
      // uncomment below and update the code to test the property hasClosures
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property isProvisional (base name: "isProvisional")', function() {
      // uncomment below and update the code to test the property isProvisional
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedTime (base name: "lastModifiedTime")', function() {
      // uncomment below and update the code to test the property lastModifiedTime
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property levelOfInterest (base name: "levelOfInterest")', function() {
      // uncomment below and update the code to test the property levelOfInterest
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property linkText (base name: "linkText")', function() {
      // uncomment below and update the code to test the property linkText
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property linkUrl (base name: "linkUrl")', function() {
      // uncomment below and update the code to test the property linkUrl
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property ordinal (base name: "ordinal")', function() {
      // uncomment below and update the code to test the property ordinal
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property point (base name: "point")', function() {
      // uncomment below and update the code to test the property point
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property publishEndDate (base name: "publishEndDate")', function() {
      // uncomment below and update the code to test the property publishEndDate
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property publishStartDate (base name: "publishStartDate")', function() {
      // uncomment below and update the code to test the property publishStartDate
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property recurringSchedules (base name: "recurringSchedules")', function() {
      // uncomment below and update the code to test the property recurringSchedules
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property roadDisruptionImpactAreas (base name: "roadDisruptionImpactAreas")', function() {
      // uncomment below and update the code to test the property roadDisruptionImpactAreas
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property roadDisruptionLines (base name: "roadDisruptionLines")', function() {
      // uncomment below and update the code to test the property roadDisruptionLines
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property roadProject (base name: "roadProject")', function() {
      // uncomment below and update the code to test the property roadProject
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property startDateTime (base name: "startDateTime")', function() {
      // uncomment below and update the code to test the property startDateTime
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property streets (base name: "streets")', function() {
      // uncomment below and update the code to test the property streets
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property subCategory (base name: "subCategory")', function() {
      // uncomment below and update the code to test the property subCategory
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property timeFrame (base name: "timeFrame")', function() {
      // uncomment below and update the code to test the property timeFrame
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TransportForLondonUnifiedApi.TflApiPresentationEntitiesRoadDisruption();
      //expect(instance).to.be();
    });

  });

}));
