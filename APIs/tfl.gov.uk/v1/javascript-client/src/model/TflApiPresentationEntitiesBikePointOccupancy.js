/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TflApiPresentationEntitiesBikePointOccupancy model module.
 * @module model/TflApiPresentationEntitiesBikePointOccupancy
 * @version v1
 */
class TflApiPresentationEntitiesBikePointOccupancy {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesBikePointOccupancy</code>.
     * Bike point occupancy
     * @alias module:model/TflApiPresentationEntitiesBikePointOccupancy
     */
    constructor() { 
        
        TflApiPresentationEntitiesBikePointOccupancy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesBikePointOccupancy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesBikePointOccupancy} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesBikePointOccupancy} The populated <code>TflApiPresentationEntitiesBikePointOccupancy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesBikePointOccupancy();

            if (data.hasOwnProperty('bikesCount')) {
                obj['bikesCount'] = ApiClient.convertToType(data['bikesCount'], 'Number');
            }
            if (data.hasOwnProperty('eBikesCount')) {
                obj['eBikesCount'] = ApiClient.convertToType(data['eBikesCount'], 'Number');
            }
            if (data.hasOwnProperty('emptyDocks')) {
                obj['emptyDocks'] = ApiClient.convertToType(data['emptyDocks'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('standardBikesCount')) {
                obj['standardBikesCount'] = ApiClient.convertToType(data['standardBikesCount'], 'Number');
            }
            if (data.hasOwnProperty('totalDocks')) {
                obj['totalDocks'] = ApiClient.convertToType(data['totalDocks'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesBikePointOccupancy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesBikePointOccupancy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Total bike counts
 * @member {Number} bikesCount
 */
TflApiPresentationEntitiesBikePointOccupancy.prototype['bikesCount'] = undefined;

/**
 * Total ebikes count
 * @member {Number} eBikesCount
 */
TflApiPresentationEntitiesBikePointOccupancy.prototype['eBikesCount'] = undefined;

/**
 * Empty docks
 * @member {Number} emptyDocks
 */
TflApiPresentationEntitiesBikePointOccupancy.prototype['emptyDocks'] = undefined;

/**
 * Id of the bike point such as BikePoints_1
 * @member {String} id
 */
TflApiPresentationEntitiesBikePointOccupancy.prototype['id'] = undefined;

/**
 * Name / Common name of the bike point
 * @member {String} name
 */
TflApiPresentationEntitiesBikePointOccupancy.prototype['name'] = undefined;

/**
 * Total standard bikes count
 * @member {Number} standardBikesCount
 */
TflApiPresentationEntitiesBikePointOccupancy.prototype['standardBikesCount'] = undefined;

/**
 * Total docks available
 * @member {Number} totalDocks
 */
TflApiPresentationEntitiesBikePointOccupancy.prototype['totalDocks'] = undefined;






export default TflApiPresentationEntitiesBikePointOccupancy;

