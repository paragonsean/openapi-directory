/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesStreetSegment from './TflApiPresentationEntitiesStreetSegment';

/**
 * The TflApiPresentationEntitiesStreet model module.
 * @module model/TflApiPresentationEntitiesStreet
 * @version v1
 */
class TflApiPresentationEntitiesStreet {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesStreet</code>.
     * @alias module:model/TflApiPresentationEntitiesStreet
     */
    constructor() { 
        
        TflApiPresentationEntitiesStreet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesStreet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesStreet} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesStreet} The populated <code>TflApiPresentationEntitiesStreet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesStreet();

            if (data.hasOwnProperty('closure')) {
                obj['closure'] = ApiClient.convertToType(data['closure'], 'String');
            }
            if (data.hasOwnProperty('directions')) {
                obj['directions'] = ApiClient.convertToType(data['directions'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('segments')) {
                obj['segments'] = ApiClient.convertToType(data['segments'], [TflApiPresentationEntitiesStreetSegment]);
            }
            if (data.hasOwnProperty('sourceSystemId')) {
                obj['sourceSystemId'] = ApiClient.convertToType(data['sourceSystemId'], 'Number');
            }
            if (data.hasOwnProperty('sourceSystemKey')) {
                obj['sourceSystemKey'] = ApiClient.convertToType(data['sourceSystemKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesStreet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesStreet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['closure'] && !(typeof data['closure'] === 'string' || data['closure'] instanceof String)) {
            throw new Error("Expected the field `closure` to be a primitive type in the JSON string but got " + data['closure']);
        }
        // ensure the json data is a string
        if (data['directions'] && !(typeof data['directions'] === 'string' || data['directions'] instanceof String)) {
            throw new Error("Expected the field `directions` to be a primitive type in the JSON string but got " + data['directions']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['segments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['segments'])) {
                throw new Error("Expected the field `segments` to be an array in the JSON data but got " + data['segments']);
            }
            // validate the optional field `segments` (array)
            for (const item of data['segments']) {
                TflApiPresentationEntitiesStreetSegment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sourceSystemKey'] && !(typeof data['sourceSystemKey'] === 'string' || data['sourceSystemKey'] instanceof String)) {
            throw new Error("Expected the field `sourceSystemKey` to be a primitive type in the JSON string but got " + data['sourceSystemKey']);
        }

        return true;
    }


}



/**
 * Type of road closure. Some example values:              Open = road is open, not blocked, not closed, not restricted. It maybe that the disruption has been moved out of the carriageway.              Partial Closure = road is partially blocked, closed or restricted.               Full Closure = road is fully blocked or closed.
 * @member {String} closure
 */
TflApiPresentationEntitiesStreet.prototype['closure'] = undefined;

/**
 * The direction of the disruption on the street. Some example values:              All Directions              All Approaches              Clockwise              Anti-Clockwise              Northbound              Eastbound              Southbound              Westbound              Both Directions
 * @member {String} directions
 */
TflApiPresentationEntitiesStreet.prototype['directions'] = undefined;

/**
 * Street name
 * @member {String} name
 */
TflApiPresentationEntitiesStreet.prototype['name'] = undefined;

/**
 * Geographic description of the sections of this street that are affected.
 * @member {Array.<module:model/TflApiPresentationEntitiesStreetSegment>} segments
 */
TflApiPresentationEntitiesStreet.prototype['segments'] = undefined;

/**
 * The ID from the source system of the disruption that this street belongs to.
 * @member {Number} sourceSystemId
 */
TflApiPresentationEntitiesStreet.prototype['sourceSystemId'] = undefined;

/**
 * The key of the source system of the disruption that this street belongs to.
 * @member {String} sourceSystemKey
 */
TflApiPresentationEntitiesStreet.prototype['sourceSystemKey'] = undefined;






export default TflApiPresentationEntitiesStreet;

