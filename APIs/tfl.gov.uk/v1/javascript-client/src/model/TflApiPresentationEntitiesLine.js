/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesCrowding from './TflApiPresentationEntitiesCrowding';
import TflApiPresentationEntitiesDisruption from './TflApiPresentationEntitiesDisruption';
import TflApiPresentationEntitiesLineServiceTypeInfo from './TflApiPresentationEntitiesLineServiceTypeInfo';
import TflApiPresentationEntitiesLineStatus from './TflApiPresentationEntitiesLineStatus';
import TflApiPresentationEntitiesMatchedRoute from './TflApiPresentationEntitiesMatchedRoute';

/**
 * The TflApiPresentationEntitiesLine model module.
 * @module model/TflApiPresentationEntitiesLine
 * @version v1
 */
class TflApiPresentationEntitiesLine {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesLine</code>.
     * @alias module:model/TflApiPresentationEntitiesLine
     */
    constructor() { 
        
        TflApiPresentationEntitiesLine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesLine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesLine} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesLine} The populated <code>TflApiPresentationEntitiesLine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesLine();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('crowding')) {
                obj['crowding'] = TflApiPresentationEntitiesCrowding.constructFromObject(data['crowding']);
            }
            if (data.hasOwnProperty('disruptions')) {
                obj['disruptions'] = ApiClient.convertToType(data['disruptions'], [TflApiPresentationEntitiesDisruption]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lineStatuses')) {
                obj['lineStatuses'] = ApiClient.convertToType(data['lineStatuses'], [TflApiPresentationEntitiesLineStatus]);
            }
            if (data.hasOwnProperty('modeName')) {
                obj['modeName'] = ApiClient.convertToType(data['modeName'], 'String');
            }
            if (data.hasOwnProperty('modified')) {
                obj['modified'] = ApiClient.convertToType(data['modified'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('routeSections')) {
                obj['routeSections'] = ApiClient.convertToType(data['routeSections'], [TflApiPresentationEntitiesMatchedRoute]);
            }
            if (data.hasOwnProperty('serviceTypes')) {
                obj['serviceTypes'] = ApiClient.convertToType(data['serviceTypes'], [TflApiPresentationEntitiesLineServiceTypeInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesLine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesLine</code>.
     */
    static validateJSON(data) {
        // validate the optional field `crowding`
        if (data['crowding']) { // data not null
          TflApiPresentationEntitiesCrowding.validateJSON(data['crowding']);
        }
        if (data['disruptions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['disruptions'])) {
                throw new Error("Expected the field `disruptions` to be an array in the JSON data but got " + data['disruptions']);
            }
            // validate the optional field `disruptions` (array)
            for (const item of data['disruptions']) {
                TflApiPresentationEntitiesDisruption.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['lineStatuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lineStatuses'])) {
                throw new Error("Expected the field `lineStatuses` to be an array in the JSON data but got " + data['lineStatuses']);
            }
            // validate the optional field `lineStatuses` (array)
            for (const item of data['lineStatuses']) {
                TflApiPresentationEntitiesLineStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['modeName'] && !(typeof data['modeName'] === 'string' || data['modeName'] instanceof String)) {
            throw new Error("Expected the field `modeName` to be a primitive type in the JSON string but got " + data['modeName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['routeSections']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['routeSections'])) {
                throw new Error("Expected the field `routeSections` to be an array in the JSON data but got " + data['routeSections']);
            }
            // validate the optional field `routeSections` (array)
            for (const item of data['routeSections']) {
                TflApiPresentationEntitiesMatchedRoute.validateJSON(item);
            };
        }
        if (data['serviceTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serviceTypes'])) {
                throw new Error("Expected the field `serviceTypes` to be an array in the JSON data but got " + data['serviceTypes']);
            }
            // validate the optional field `serviceTypes` (array)
            for (const item of data['serviceTypes']) {
                TflApiPresentationEntitiesLineServiceTypeInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Date} created
 */
TflApiPresentationEntitiesLine.prototype['created'] = undefined;

/**
 * @member {module:model/TflApiPresentationEntitiesCrowding} crowding
 */
TflApiPresentationEntitiesLine.prototype['crowding'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesDisruption>} disruptions
 */
TflApiPresentationEntitiesLine.prototype['disruptions'] = undefined;

/**
 * @member {String} id
 */
TflApiPresentationEntitiesLine.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesLineStatus>} lineStatuses
 */
TflApiPresentationEntitiesLine.prototype['lineStatuses'] = undefined;

/**
 * @member {String} modeName
 */
TflApiPresentationEntitiesLine.prototype['modeName'] = undefined;

/**
 * @member {Date} modified
 */
TflApiPresentationEntitiesLine.prototype['modified'] = undefined;

/**
 * @member {String} name
 */
TflApiPresentationEntitiesLine.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesMatchedRoute>} routeSections
 */
TflApiPresentationEntitiesLine.prototype['routeSections'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesLineServiceTypeInfo>} serviceTypes
 */
TflApiPresentationEntitiesLine.prototype['serviceTypes'] = undefined;






export default TflApiPresentationEntitiesLine;

