/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesStopPoint from './TflApiPresentationEntitiesStopPoint';

/**
 * The TflApiPresentationEntitiesStopPointsResponse model module.
 * @module model/TflApiPresentationEntitiesStopPointsResponse
 * @version v1
 */
class TflApiPresentationEntitiesStopPointsResponse {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesStopPointsResponse</code>.
     * A paged response containing StopPoints
     * @alias module:model/TflApiPresentationEntitiesStopPointsResponse
     */
    constructor() { 
        
        TflApiPresentationEntitiesStopPointsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesStopPointsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesStopPointsResponse} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesStopPointsResponse} The populated <code>TflApiPresentationEntitiesStopPointsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesStopPointsResponse();

            if (data.hasOwnProperty('centrePoint')) {
                obj['centrePoint'] = ApiClient.convertToType(data['centrePoint'], ['Number']);
            }
            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'Number');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('stopPoints')) {
                obj['stopPoints'] = ApiClient.convertToType(data['stopPoints'], [TflApiPresentationEntitiesStopPoint]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesStopPointsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesStopPointsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['centrePoint'])) {
            throw new Error("Expected the field `centrePoint` to be an array in the JSON data but got " + data['centrePoint']);
        }
        if (data['stopPoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['stopPoints'])) {
                throw new Error("Expected the field `stopPoints` to be an array in the JSON data but got " + data['stopPoints']);
            }
            // validate the optional field `stopPoints` (array)
            for (const item of data['stopPoints']) {
                TflApiPresentationEntitiesStopPoint.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The centre latitude/longitude of this list of StopPoints
 * @member {Array.<Number>} centrePoint
 */
TflApiPresentationEntitiesStopPointsResponse.prototype['centrePoint'] = undefined;

/**
 * The index of this page
 * @member {Number} page
 */
TflApiPresentationEntitiesStopPointsResponse.prototype['page'] = undefined;

/**
 * The maximum size of the page in this response i.e. the maximum number of StopPoints
 * @member {Number} pageSize
 */
TflApiPresentationEntitiesStopPointsResponse.prototype['pageSize'] = undefined;

/**
 * Collection of stop points
 * @member {Array.<module:model/TflApiPresentationEntitiesStopPoint>} stopPoints
 */
TflApiPresentationEntitiesStopPointsResponse.prototype['stopPoints'] = undefined;

/**
 * The total number of StopPoints available across all pages
 * @member {Number} total
 */
TflApiPresentationEntitiesStopPointsResponse.prototype['total'] = undefined;






export default TflApiPresentationEntitiesStopPointsResponse;

