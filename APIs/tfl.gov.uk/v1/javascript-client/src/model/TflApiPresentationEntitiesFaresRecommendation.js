/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesMessage from './TflApiPresentationEntitiesMessage';

/**
 * The TflApiPresentationEntitiesFaresRecommendation model module.
 * @module model/TflApiPresentationEntitiesFaresRecommendation
 * @version v1
 */
class TflApiPresentationEntitiesFaresRecommendation {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesFaresRecommendation</code>.
     * @alias module:model/TflApiPresentationEntitiesFaresRecommendation
     */
    constructor() { 
        
        TflApiPresentationEntitiesFaresRecommendation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesFaresRecommendation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesFaresRecommendation} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesFaresRecommendation} The populated <code>TflApiPresentationEntitiesFaresRecommendation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesFaresRecommendation();

            if (data.hasOwnProperty('cost')) {
                obj['cost'] = ApiClient.convertToType(data['cost'], 'String');
            }
            if (data.hasOwnProperty('discountCard')) {
                obj['discountCard'] = ApiClient.convertToType(data['discountCard'], 'String');
            }
            if (data.hasOwnProperty('fareType')) {
                obj['fareType'] = ApiClient.convertToType(data['fareType'], 'String');
            }
            if (data.hasOwnProperty('gettingYourTicket')) {
                obj['gettingYourTicket'] = ApiClient.convertToType(data['gettingYourTicket'], [TflApiPresentationEntitiesMessage]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('keyFeatures')) {
                obj['keyFeatures'] = ApiClient.convertToType(data['keyFeatures'], [TflApiPresentationEntitiesMessage]);
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], [TflApiPresentationEntitiesMessage]);
            }
            if (data.hasOwnProperty('priceComparison')) {
                obj['priceComparison'] = ApiClient.convertToType(data['priceComparison'], 'String');
            }
            if (data.hasOwnProperty('priceDescription')) {
                obj['priceDescription'] = ApiClient.convertToType(data['priceDescription'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ApiClient.convertToType(data['product'], 'String');
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
            }
            if (data.hasOwnProperty('recommendedTopUp')) {
                obj['recommendedTopUp'] = ApiClient.convertToType(data['recommendedTopUp'], 'String');
            }
            if (data.hasOwnProperty('rule')) {
                obj['rule'] = ApiClient.convertToType(data['rule'], 'Number');
            }
            if (data.hasOwnProperty('singleFare')) {
                obj['singleFare'] = ApiClient.convertToType(data['singleFare'], 'Number');
            }
            if (data.hasOwnProperty('ticketTime')) {
                obj['ticketTime'] = ApiClient.convertToType(data['ticketTime'], 'String');
            }
            if (data.hasOwnProperty('ticketType')) {
                obj['ticketType'] = ApiClient.convertToType(data['ticketType'], 'String');
            }
            if (data.hasOwnProperty('zones')) {
                obj['zones'] = ApiClient.convertToType(data['zones'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesFaresRecommendation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesFaresRecommendation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cost'] && !(typeof data['cost'] === 'string' || data['cost'] instanceof String)) {
            throw new Error("Expected the field `cost` to be a primitive type in the JSON string but got " + data['cost']);
        }
        // ensure the json data is a string
        if (data['discountCard'] && !(typeof data['discountCard'] === 'string' || data['discountCard'] instanceof String)) {
            throw new Error("Expected the field `discountCard` to be a primitive type in the JSON string but got " + data['discountCard']);
        }
        // ensure the json data is a string
        if (data['fareType'] && !(typeof data['fareType'] === 'string' || data['fareType'] instanceof String)) {
            throw new Error("Expected the field `fareType` to be a primitive type in the JSON string but got " + data['fareType']);
        }
        if (data['gettingYourTicket']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['gettingYourTicket'])) {
                throw new Error("Expected the field `gettingYourTicket` to be an array in the JSON data but got " + data['gettingYourTicket']);
            }
            // validate the optional field `gettingYourTicket` (array)
            for (const item of data['gettingYourTicket']) {
                TflApiPresentationEntitiesMessage.validateJSON(item);
            };
        }
        if (data['keyFeatures']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['keyFeatures'])) {
                throw new Error("Expected the field `keyFeatures` to be an array in the JSON data but got " + data['keyFeatures']);
            }
            // validate the optional field `keyFeatures` (array)
            for (const item of data['keyFeatures']) {
                TflApiPresentationEntitiesMessage.validateJSON(item);
            };
        }
        if (data['notes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['notes'])) {
                throw new Error("Expected the field `notes` to be an array in the JSON data but got " + data['notes']);
            }
            // validate the optional field `notes` (array)
            for (const item of data['notes']) {
                TflApiPresentationEntitiesMessage.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['priceComparison'] && !(typeof data['priceComparison'] === 'string' || data['priceComparison'] instanceof String)) {
            throw new Error("Expected the field `priceComparison` to be a primitive type in the JSON string but got " + data['priceComparison']);
        }
        // ensure the json data is a string
        if (data['priceDescription'] && !(typeof data['priceDescription'] === 'string' || data['priceDescription'] instanceof String)) {
            throw new Error("Expected the field `priceDescription` to be a primitive type in the JSON string but got " + data['priceDescription']);
        }
        // ensure the json data is a string
        if (data['product'] && !(typeof data['product'] === 'string' || data['product'] instanceof String)) {
            throw new Error("Expected the field `product` to be a primitive type in the JSON string but got " + data['product']);
        }
        // ensure the json data is a string
        if (data['productType'] && !(typeof data['productType'] === 'string' || data['productType'] instanceof String)) {
            throw new Error("Expected the field `productType` to be a primitive type in the JSON string but got " + data['productType']);
        }
        // ensure the json data is a string
        if (data['recommendedTopUp'] && !(typeof data['recommendedTopUp'] === 'string' || data['recommendedTopUp'] instanceof String)) {
            throw new Error("Expected the field `recommendedTopUp` to be a primitive type in the JSON string but got " + data['recommendedTopUp']);
        }
        // ensure the json data is a string
        if (data['ticketTime'] && !(typeof data['ticketTime'] === 'string' || data['ticketTime'] instanceof String)) {
            throw new Error("Expected the field `ticketTime` to be a primitive type in the JSON string but got " + data['ticketTime']);
        }
        // ensure the json data is a string
        if (data['ticketType'] && !(typeof data['ticketType'] === 'string' || data['ticketType'] instanceof String)) {
            throw new Error("Expected the field `ticketType` to be a primitive type in the JSON string but got " + data['ticketType']);
        }
        // ensure the json data is a string
        if (data['zones'] && !(typeof data['zones'] === 'string' || data['zones'] instanceof String)) {
            throw new Error("Expected the field `zones` to be a primitive type in the JSON string but got " + data['zones']);
        }

        return true;
    }


}



/**
 * @member {String} cost
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['cost'] = undefined;

/**
 * @member {String} discountCard
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['discountCard'] = undefined;

/**
 * @member {String} fareType
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['fareType'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesMessage>} gettingYourTicket
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['gettingYourTicket'] = undefined;

/**
 * @member {Number} id
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesMessage>} keyFeatures
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['keyFeatures'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesMessage>} notes
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['notes'] = undefined;

/**
 * @member {String} priceComparison
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['priceComparison'] = undefined;

/**
 * @member {String} priceDescription
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['priceDescription'] = undefined;

/**
 * @member {String} product
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['product'] = undefined;

/**
 * @member {String} productType
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['productType'] = undefined;

/**
 * @member {Number} rank
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['rank'] = undefined;

/**
 * @member {String} recommendedTopUp
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['recommendedTopUp'] = undefined;

/**
 * @member {Number} rule
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['rule'] = undefined;

/**
 * @member {Number} singleFare
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['singleFare'] = undefined;

/**
 * @member {String} ticketTime
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['ticketTime'] = undefined;

/**
 * @member {String} ticketType
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['ticketType'] = undefined;

/**
 * @member {String} zones
 */
TflApiPresentationEntitiesFaresRecommendation.prototype['zones'] = undefined;






export default TflApiPresentationEntitiesFaresRecommendation;

