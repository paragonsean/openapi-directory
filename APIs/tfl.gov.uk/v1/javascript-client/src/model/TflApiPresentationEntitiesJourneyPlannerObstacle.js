/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TflApiPresentationEntitiesJourneyPlannerObstacle model module.
 * @module model/TflApiPresentationEntitiesJourneyPlannerObstacle
 * @version v1
 */
class TflApiPresentationEntitiesJourneyPlannerObstacle {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesJourneyPlannerObstacle</code>.
     * @alias module:model/TflApiPresentationEntitiesJourneyPlannerObstacle
     */
    constructor() { 
        
        TflApiPresentationEntitiesJourneyPlannerObstacle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesJourneyPlannerObstacle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesJourneyPlannerObstacle} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesJourneyPlannerObstacle} The populated <code>TflApiPresentationEntitiesJourneyPlannerObstacle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesJourneyPlannerObstacle();

            if (data.hasOwnProperty('incline')) {
                obj['incline'] = ApiClient.convertToType(data['incline'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('stopId')) {
                obj['stopId'] = ApiClient.convertToType(data['stopId'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesJourneyPlannerObstacle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesJourneyPlannerObstacle</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['incline'] && !(typeof data['incline'] === 'string' || data['incline'] instanceof String)) {
            throw new Error("Expected the field `incline` to be a primitive type in the JSON string but got " + data['incline']);
        }
        // ensure the json data is a string
        if (data['position'] && !(typeof data['position'] === 'string' || data['position'] instanceof String)) {
            throw new Error("Expected the field `position` to be a primitive type in the JSON string but got " + data['position']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} incline
 */
TflApiPresentationEntitiesJourneyPlannerObstacle.prototype['incline'] = undefined;

/**
 * @member {String} position
 */
TflApiPresentationEntitiesJourneyPlannerObstacle.prototype['position'] = undefined;

/**
 * @member {Number} stopId
 */
TflApiPresentationEntitiesJourneyPlannerObstacle.prototype['stopId'] = undefined;

/**
 * @member {String} type
 */
TflApiPresentationEntitiesJourneyPlannerObstacle.prototype['type'] = undefined;






export default TflApiPresentationEntitiesJourneyPlannerObstacle;

