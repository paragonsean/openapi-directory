/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TflApiPresentationEntitiesStopPointRouteSection model module.
 * @module model/TflApiPresentationEntitiesStopPointRouteSection
 * @version v1
 */
class TflApiPresentationEntitiesStopPointRouteSection {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesStopPointRouteSection</code>.
     * @alias module:model/TflApiPresentationEntitiesStopPointRouteSection
     */
    constructor() { 
        
        TflApiPresentationEntitiesStopPointRouteSection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesStopPointRouteSection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesStopPointRouteSection} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesStopPointRouteSection} The populated <code>TflApiPresentationEntitiesStopPointRouteSection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesStopPointRouteSection();

            if (data.hasOwnProperty('destinationName')) {
                obj['destinationName'] = ApiClient.convertToType(data['destinationName'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('lineId')) {
                obj['lineId'] = ApiClient.convertToType(data['lineId'], 'String');
            }
            if (data.hasOwnProperty('lineString')) {
                obj['lineString'] = ApiClient.convertToType(data['lineString'], 'String');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('naptanId')) {
                obj['naptanId'] = ApiClient.convertToType(data['naptanId'], 'String');
            }
            if (data.hasOwnProperty('routeSectionName')) {
                obj['routeSectionName'] = ApiClient.convertToType(data['routeSectionName'], 'String');
            }
            if (data.hasOwnProperty('serviceType')) {
                obj['serviceType'] = ApiClient.convertToType(data['serviceType'], 'String');
            }
            if (data.hasOwnProperty('validFrom')) {
                obj['validFrom'] = ApiClient.convertToType(data['validFrom'], 'Date');
            }
            if (data.hasOwnProperty('validTo')) {
                obj['validTo'] = ApiClient.convertToType(data['validTo'], 'Date');
            }
            if (data.hasOwnProperty('vehicleDestinationText')) {
                obj['vehicleDestinationText'] = ApiClient.convertToType(data['vehicleDestinationText'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesStopPointRouteSection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesStopPointRouteSection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['destinationName'] && !(typeof data['destinationName'] === 'string' || data['destinationName'] instanceof String)) {
            throw new Error("Expected the field `destinationName` to be a primitive type in the JSON string but got " + data['destinationName']);
        }
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['lineId'] && !(typeof data['lineId'] === 'string' || data['lineId'] instanceof String)) {
            throw new Error("Expected the field `lineId` to be a primitive type in the JSON string but got " + data['lineId']);
        }
        // ensure the json data is a string
        if (data['lineString'] && !(typeof data['lineString'] === 'string' || data['lineString'] instanceof String)) {
            throw new Error("Expected the field `lineString` to be a primitive type in the JSON string but got " + data['lineString']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['naptanId'] && !(typeof data['naptanId'] === 'string' || data['naptanId'] instanceof String)) {
            throw new Error("Expected the field `naptanId` to be a primitive type in the JSON string but got " + data['naptanId']);
        }
        // ensure the json data is a string
        if (data['routeSectionName'] && !(typeof data['routeSectionName'] === 'string' || data['routeSectionName'] instanceof String)) {
            throw new Error("Expected the field `routeSectionName` to be a primitive type in the JSON string but got " + data['routeSectionName']);
        }
        // ensure the json data is a string
        if (data['serviceType'] && !(typeof data['serviceType'] === 'string' || data['serviceType'] instanceof String)) {
            throw new Error("Expected the field `serviceType` to be a primitive type in the JSON string but got " + data['serviceType']);
        }
        // ensure the json data is a string
        if (data['vehicleDestinationText'] && !(typeof data['vehicleDestinationText'] === 'string' || data['vehicleDestinationText'] instanceof String)) {
            throw new Error("Expected the field `vehicleDestinationText` to be a primitive type in the JSON string but got " + data['vehicleDestinationText']);
        }

        return true;
    }


}



/**
 * @member {String} destinationName
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['destinationName'] = undefined;

/**
 * @member {String} direction
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['direction'] = undefined;

/**
 * @member {Boolean} isActive
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['isActive'] = undefined;

/**
 * @member {String} lineId
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['lineId'] = undefined;

/**
 * @member {String} lineString
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['lineString'] = undefined;

/**
 * @member {String} mode
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['mode'] = undefined;

/**
 * @member {String} naptanId
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['naptanId'] = undefined;

/**
 * @member {String} routeSectionName
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['routeSectionName'] = undefined;

/**
 * @member {String} serviceType
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['serviceType'] = undefined;

/**
 * @member {Date} validFrom
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['validFrom'] = undefined;

/**
 * @member {Date} validTo
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['validTo'] = undefined;

/**
 * @member {String} vehicleDestinationText
 */
TflApiPresentationEntitiesStopPointRouteSection.prototype['vehicleDestinationText'] = undefined;






export default TflApiPresentationEntitiesStopPointRouteSection;

