/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TflApiPresentationEntitiesMatchedRoute model module.
 * @module model/TflApiPresentationEntitiesMatchedRoute
 * @version v1
 */
class TflApiPresentationEntitiesMatchedRoute {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesMatchedRoute</code>.
     * Description of a Route used in Route search results.
     * @alias module:model/TflApiPresentationEntitiesMatchedRoute
     */
    constructor() { 
        
        TflApiPresentationEntitiesMatchedRoute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesMatchedRoute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesMatchedRoute} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesMatchedRoute} The populated <code>TflApiPresentationEntitiesMatchedRoute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesMatchedRoute();

            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('destinationName')) {
                obj['destinationName'] = ApiClient.convertToType(data['destinationName'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('originationName')) {
                obj['originationName'] = ApiClient.convertToType(data['originationName'], 'String');
            }
            if (data.hasOwnProperty('originator')) {
                obj['originator'] = ApiClient.convertToType(data['originator'], 'String');
            }
            if (data.hasOwnProperty('routeCode')) {
                obj['routeCode'] = ApiClient.convertToType(data['routeCode'], 'String');
            }
            if (data.hasOwnProperty('serviceType')) {
                obj['serviceType'] = ApiClient.convertToType(data['serviceType'], 'String');
            }
            if (data.hasOwnProperty('validFrom')) {
                obj['validFrom'] = ApiClient.convertToType(data['validFrom'], 'Date');
            }
            if (data.hasOwnProperty('validTo')) {
                obj['validTo'] = ApiClient.convertToType(data['validTo'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesMatchedRoute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesMatchedRoute</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['destinationName'] && !(typeof data['destinationName'] === 'string' || data['destinationName'] instanceof String)) {
            throw new Error("Expected the field `destinationName` to be a primitive type in the JSON string but got " + data['destinationName']);
        }
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['originationName'] && !(typeof data['originationName'] === 'string' || data['originationName'] instanceof String)) {
            throw new Error("Expected the field `originationName` to be a primitive type in the JSON string but got " + data['originationName']);
        }
        // ensure the json data is a string
        if (data['originator'] && !(typeof data['originator'] === 'string' || data['originator'] instanceof String)) {
            throw new Error("Expected the field `originator` to be a primitive type in the JSON string but got " + data['originator']);
        }
        // ensure the json data is a string
        if (data['routeCode'] && !(typeof data['routeCode'] === 'string' || data['routeCode'] instanceof String)) {
            throw new Error("Expected the field `routeCode` to be a primitive type in the JSON string but got " + data['routeCode']);
        }
        // ensure the json data is a string
        if (data['serviceType'] && !(typeof data['serviceType'] === 'string' || data['serviceType'] instanceof String)) {
            throw new Error("Expected the field `serviceType` to be a primitive type in the JSON string but got " + data['serviceType']);
        }

        return true;
    }


}



/**
 * The Id (NaPTAN code) or the Destination StopPoint
 * @member {String} destination
 */
TflApiPresentationEntitiesMatchedRoute.prototype['destination'] = undefined;

/**
 * The name of the Destination StopPoint
 * @member {String} destinationName
 */
TflApiPresentationEntitiesMatchedRoute.prototype['destinationName'] = undefined;

/**
 * Inbound or Outbound
 * @member {String} direction
 */
TflApiPresentationEntitiesMatchedRoute.prototype['direction'] = undefined;

/**
 * Name such as \"72\"
 * @member {String} name
 */
TflApiPresentationEntitiesMatchedRoute.prototype['name'] = undefined;

/**
 * The name of the Origin StopPoint
 * @member {String} originationName
 */
TflApiPresentationEntitiesMatchedRoute.prototype['originationName'] = undefined;

/**
 * The Id (NaPTAN code) of the Origin StopPoint
 * @member {String} originator
 */
TflApiPresentationEntitiesMatchedRoute.prototype['originator'] = undefined;

/**
 * The route code
 * @member {String} routeCode
 */
TflApiPresentationEntitiesMatchedRoute.prototype['routeCode'] = undefined;

/**
 * Regular or Night
 * @member {String} serviceType
 */
TflApiPresentationEntitiesMatchedRoute.prototype['serviceType'] = undefined;

/**
 * The DateTime that the Service containing this Route is valid from.
 * @member {Date} validFrom
 */
TflApiPresentationEntitiesMatchedRoute.prototype['validFrom'] = undefined;

/**
 * The DateTime that the Service containing this Route is valid until.
 * @member {Date} validTo
 */
TflApiPresentationEntitiesMatchedRoute.prototype['validTo'] = undefined;






export default TflApiPresentationEntitiesMatchedRoute;

