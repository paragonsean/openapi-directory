/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesPathAttribute from './TflApiPresentationEntitiesPathAttribute';

/**
 * The TflApiPresentationEntitiesInstructionStep model module.
 * @module model/TflApiPresentationEntitiesInstructionStep
 * @version v1
 */
class TflApiPresentationEntitiesInstructionStep {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesInstructionStep</code>.
     * @alias module:model/TflApiPresentationEntitiesInstructionStep
     */
    constructor() { 
        
        TflApiPresentationEntitiesInstructionStep.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesInstructionStep</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesInstructionStep} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesInstructionStep} The populated <code>TflApiPresentationEntitiesInstructionStep</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesInstructionStep();

            if (data.hasOwnProperty('cumulativeDistance')) {
                obj['cumulativeDistance'] = ApiClient.convertToType(data['cumulativeDistance'], 'Number');
            }
            if (data.hasOwnProperty('cumulativeTravelTime')) {
                obj['cumulativeTravelTime'] = ApiClient.convertToType(data['cumulativeTravelTime'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('descriptionHeading')) {
                obj['descriptionHeading'] = ApiClient.convertToType(data['descriptionHeading'], 'String');
            }
            if (data.hasOwnProperty('distance')) {
                obj['distance'] = ApiClient.convertToType(data['distance'], 'Number');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('pathAttribute')) {
                obj['pathAttribute'] = TflApiPresentationEntitiesPathAttribute.constructFromObject(data['pathAttribute']);
            }
            if (data.hasOwnProperty('skyDirection')) {
                obj['skyDirection'] = ApiClient.convertToType(data['skyDirection'], 'Number');
            }
            if (data.hasOwnProperty('skyDirectionDescription')) {
                obj['skyDirectionDescription'] = ApiClient.convertToType(data['skyDirectionDescription'], 'String');
            }
            if (data.hasOwnProperty('streetName')) {
                obj['streetName'] = ApiClient.convertToType(data['streetName'], 'String');
            }
            if (data.hasOwnProperty('trackType')) {
                obj['trackType'] = ApiClient.convertToType(data['trackType'], 'String');
            }
            if (data.hasOwnProperty('turnDirection')) {
                obj['turnDirection'] = ApiClient.convertToType(data['turnDirection'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesInstructionStep</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesInstructionStep</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['descriptionHeading'] && !(typeof data['descriptionHeading'] === 'string' || data['descriptionHeading'] instanceof String)) {
            throw new Error("Expected the field `descriptionHeading` to be a primitive type in the JSON string but got " + data['descriptionHeading']);
        }
        // validate the optional field `pathAttribute`
        if (data['pathAttribute']) { // data not null
          TflApiPresentationEntitiesPathAttribute.validateJSON(data['pathAttribute']);
        }
        // ensure the json data is a string
        if (data['skyDirectionDescription'] && !(typeof data['skyDirectionDescription'] === 'string' || data['skyDirectionDescription'] instanceof String)) {
            throw new Error("Expected the field `skyDirectionDescription` to be a primitive type in the JSON string but got " + data['skyDirectionDescription']);
        }
        // ensure the json data is a string
        if (data['streetName'] && !(typeof data['streetName'] === 'string' || data['streetName'] instanceof String)) {
            throw new Error("Expected the field `streetName` to be a primitive type in the JSON string but got " + data['streetName']);
        }
        // ensure the json data is a string
        if (data['trackType'] && !(typeof data['trackType'] === 'string' || data['trackType'] instanceof String)) {
            throw new Error("Expected the field `trackType` to be a primitive type in the JSON string but got " + data['trackType']);
        }
        // ensure the json data is a string
        if (data['turnDirection'] && !(typeof data['turnDirection'] === 'string' || data['turnDirection'] instanceof String)) {
            throw new Error("Expected the field `turnDirection` to be a primitive type in the JSON string but got " + data['turnDirection']);
        }

        return true;
    }


}



/**
 * @member {Number} cumulativeDistance
 */
TflApiPresentationEntitiesInstructionStep.prototype['cumulativeDistance'] = undefined;

/**
 * @member {Number} cumulativeTravelTime
 */
TflApiPresentationEntitiesInstructionStep.prototype['cumulativeTravelTime'] = undefined;

/**
 * @member {String} description
 */
TflApiPresentationEntitiesInstructionStep.prototype['description'] = undefined;

/**
 * @member {String} descriptionHeading
 */
TflApiPresentationEntitiesInstructionStep.prototype['descriptionHeading'] = undefined;

/**
 * @member {Number} distance
 */
TflApiPresentationEntitiesInstructionStep.prototype['distance'] = undefined;

/**
 * @member {Number} latitude
 */
TflApiPresentationEntitiesInstructionStep.prototype['latitude'] = undefined;

/**
 * @member {Number} longitude
 */
TflApiPresentationEntitiesInstructionStep.prototype['longitude'] = undefined;

/**
 * @member {module:model/TflApiPresentationEntitiesPathAttribute} pathAttribute
 */
TflApiPresentationEntitiesInstructionStep.prototype['pathAttribute'] = undefined;

/**
 * @member {Number} skyDirection
 */
TflApiPresentationEntitiesInstructionStep.prototype['skyDirection'] = undefined;

/**
 * @member {module:model/TflApiPresentationEntitiesInstructionStep.SkyDirectionDescriptionEnum} skyDirectionDescription
 */
TflApiPresentationEntitiesInstructionStep.prototype['skyDirectionDescription'] = undefined;

/**
 * @member {String} streetName
 */
TflApiPresentationEntitiesInstructionStep.prototype['streetName'] = undefined;

/**
 * @member {module:model/TflApiPresentationEntitiesInstructionStep.TrackTypeEnum} trackType
 */
TflApiPresentationEntitiesInstructionStep.prototype['trackType'] = undefined;

/**
 * @member {String} turnDirection
 */
TflApiPresentationEntitiesInstructionStep.prototype['turnDirection'] = undefined;





/**
 * Allowed values for the <code>skyDirectionDescription</code> property.
 * @enum {String}
 * @readonly
 */
TflApiPresentationEntitiesInstructionStep['SkyDirectionDescriptionEnum'] = {

    /**
     * value: "North"
     * @const
     */
    "North": "North",

    /**
     * value: "NorthEast"
     * @const
     */
    "NorthEast": "NorthEast",

    /**
     * value: "East"
     * @const
     */
    "East": "East",

    /**
     * value: "SouthEast"
     * @const
     */
    "SouthEast": "SouthEast",

    /**
     * value: "South"
     * @const
     */
    "South": "South",

    /**
     * value: "SouthWest"
     * @const
     */
    "SouthWest": "SouthWest",

    /**
     * value: "West"
     * @const
     */
    "West": "West",

    /**
     * value: "NorthWest"
     * @const
     */
    "NorthWest": "NorthWest"
};


/**
 * Allowed values for the <code>trackType</code> property.
 * @enum {String}
 * @readonly
 */
TflApiPresentationEntitiesInstructionStep['TrackTypeEnum'] = {

    /**
     * value: "CycleSuperHighway"
     * @const
     */
    "CycleSuperHighway": "CycleSuperHighway",

    /**
     * value: "CanalTowpath"
     * @const
     */
    "CanalTowpath": "CanalTowpath",

    /**
     * value: "QuietRoad"
     * @const
     */
    "QuietRoad": "QuietRoad",

    /**
     * value: "ProvisionForCyclists"
     * @const
     */
    "ProvisionForCyclists": "ProvisionForCyclists",

    /**
     * value: "BusyRoads"
     * @const
     */
    "BusyRoads": "BusyRoads",

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "PushBike"
     * @const
     */
    "PushBike": "PushBike",

    /**
     * value: "Quietway"
     * @const
     */
    "Quietway": "Quietway"
};



export default TflApiPresentationEntitiesInstructionStep;

