/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesJourneyPlannerFare from './TflApiPresentationEntitiesJourneyPlannerFare';
import TflApiPresentationEntitiesJourneyPlannerFareCaveat from './TflApiPresentationEntitiesJourneyPlannerFareCaveat';

/**
 * The TflApiPresentationEntitiesJourneyPlannerJourneyFare model module.
 * @module model/TflApiPresentationEntitiesJourneyPlannerJourneyFare
 * @version v1
 */
class TflApiPresentationEntitiesJourneyPlannerJourneyFare {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesJourneyPlannerJourneyFare</code>.
     * @alias module:model/TflApiPresentationEntitiesJourneyPlannerJourneyFare
     */
    constructor() { 
        
        TflApiPresentationEntitiesJourneyPlannerJourneyFare.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesJourneyPlannerJourneyFare</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesJourneyPlannerJourneyFare} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesJourneyPlannerJourneyFare} The populated <code>TflApiPresentationEntitiesJourneyPlannerJourneyFare</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesJourneyPlannerJourneyFare();

            if (data.hasOwnProperty('caveats')) {
                obj['caveats'] = ApiClient.convertToType(data['caveats'], [TflApiPresentationEntitiesJourneyPlannerFareCaveat]);
            }
            if (data.hasOwnProperty('fares')) {
                obj['fares'] = ApiClient.convertToType(data['fares'], [TflApiPresentationEntitiesJourneyPlannerFare]);
            }
            if (data.hasOwnProperty('totalCost')) {
                obj['totalCost'] = ApiClient.convertToType(data['totalCost'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesJourneyPlannerJourneyFare</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesJourneyPlannerJourneyFare</code>.
     */
    static validateJSON(data) {
        if (data['caveats']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['caveats'])) {
                throw new Error("Expected the field `caveats` to be an array in the JSON data but got " + data['caveats']);
            }
            // validate the optional field `caveats` (array)
            for (const item of data['caveats']) {
                TflApiPresentationEntitiesJourneyPlannerFareCaveat.validateJSON(item);
            };
        }
        if (data['fares']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fares'])) {
                throw new Error("Expected the field `fares` to be an array in the JSON data but got " + data['fares']);
            }
            // validate the optional field `fares` (array)
            for (const item of data['fares']) {
                TflApiPresentationEntitiesJourneyPlannerFare.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/TflApiPresentationEntitiesJourneyPlannerFareCaveat>} caveats
 */
TflApiPresentationEntitiesJourneyPlannerJourneyFare.prototype['caveats'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesJourneyPlannerFare>} fares
 */
TflApiPresentationEntitiesJourneyPlannerJourneyFare.prototype['fares'] = undefined;

/**
 * @member {Number} totalCost
 */
TflApiPresentationEntitiesJourneyPlannerJourneyFare.prototype['totalCost'] = undefined;






export default TflApiPresentationEntitiesJourneyPlannerJourneyFare;

