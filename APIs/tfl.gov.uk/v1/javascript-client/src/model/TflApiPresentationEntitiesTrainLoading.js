/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TflApiPresentationEntitiesTrainLoading model module.
 * @module model/TflApiPresentationEntitiesTrainLoading
 * @version v1
 */
class TflApiPresentationEntitiesTrainLoading {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesTrainLoading</code>.
     * @alias module:model/TflApiPresentationEntitiesTrainLoading
     */
    constructor() { 
        
        TflApiPresentationEntitiesTrainLoading.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesTrainLoading</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesTrainLoading} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesTrainLoading} The populated <code>TflApiPresentationEntitiesTrainLoading</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesTrainLoading();

            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('line')) {
                obj['line'] = ApiClient.convertToType(data['line'], 'String');
            }
            if (data.hasOwnProperty('lineDirection')) {
                obj['lineDirection'] = ApiClient.convertToType(data['lineDirection'], 'String');
            }
            if (data.hasOwnProperty('naptanTo')) {
                obj['naptanTo'] = ApiClient.convertToType(data['naptanTo'], 'String');
            }
            if (data.hasOwnProperty('platformDirection')) {
                obj['platformDirection'] = ApiClient.convertToType(data['platformDirection'], 'String');
            }
            if (data.hasOwnProperty('timeSlice')) {
                obj['timeSlice'] = ApiClient.convertToType(data['timeSlice'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesTrainLoading</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesTrainLoading</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['line'] && !(typeof data['line'] === 'string' || data['line'] instanceof String)) {
            throw new Error("Expected the field `line` to be a primitive type in the JSON string but got " + data['line']);
        }
        // ensure the json data is a string
        if (data['lineDirection'] && !(typeof data['lineDirection'] === 'string' || data['lineDirection'] instanceof String)) {
            throw new Error("Expected the field `lineDirection` to be a primitive type in the JSON string but got " + data['lineDirection']);
        }
        // ensure the json data is a string
        if (data['naptanTo'] && !(typeof data['naptanTo'] === 'string' || data['naptanTo'] instanceof String)) {
            throw new Error("Expected the field `naptanTo` to be a primitive type in the JSON string but got " + data['naptanTo']);
        }
        // ensure the json data is a string
        if (data['platformDirection'] && !(typeof data['platformDirection'] === 'string' || data['platformDirection'] instanceof String)) {
            throw new Error("Expected the field `platformDirection` to be a primitive type in the JSON string but got " + data['platformDirection']);
        }
        // ensure the json data is a string
        if (data['timeSlice'] && !(typeof data['timeSlice'] === 'string' || data['timeSlice'] instanceof String)) {
            throw new Error("Expected the field `timeSlice` to be a primitive type in the JSON string but got " + data['timeSlice']);
        }

        return true;
    }


}



/**
 * Direction in regards to Journey Planner i.e. inbound or outbound
 * @member {String} direction
 */
TflApiPresentationEntitiesTrainLoading.prototype['direction'] = undefined;

/**
 * The Line Name e.g. \"Victoria\"
 * @member {String} line
 */
TflApiPresentationEntitiesTrainLoading.prototype['line'] = undefined;

/**
 * Direction of the Line e.g. NB, SB, WB etc.
 * @member {String} lineDirection
 */
TflApiPresentationEntitiesTrainLoading.prototype['lineDirection'] = undefined;

/**
 * Naptan of the adjacent station
 * @member {String} naptanTo
 */
TflApiPresentationEntitiesTrainLoading.prototype['naptanTo'] = undefined;

/**
 * Direction displayed on the platform e.g. NB, SB, WB etc.
 * @member {String} platformDirection
 */
TflApiPresentationEntitiesTrainLoading.prototype['platformDirection'] = undefined;

/**
 * Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc.
 * @member {String} timeSlice
 */
TflApiPresentationEntitiesTrainLoading.prototype['timeSlice'] = undefined;

/**
 * Scale between 1-6,                1 = Very quiet, 2 = Quiet, 3 = Fairly busy, 4 = Busy, 5 = Very busy, 6 = Exceptionally busy
 * @member {Number} value
 */
TflApiPresentationEntitiesTrainLoading.prototype['value'] = undefined;






export default TflApiPresentationEntitiesTrainLoading;

