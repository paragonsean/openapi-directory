/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesJourneyPlannerJourneyFare from './TflApiPresentationEntitiesJourneyPlannerJourneyFare';
import TflApiPresentationEntitiesJourneyPlannerLeg from './TflApiPresentationEntitiesJourneyPlannerLeg';

/**
 * The TflApiPresentationEntitiesJourneyPlannerJourney model module.
 * @module model/TflApiPresentationEntitiesJourneyPlannerJourney
 * @version v1
 */
class TflApiPresentationEntitiesJourneyPlannerJourney {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesJourneyPlannerJourney</code>.
     * Object that represents an end to end journey (see schematic).
     * @alias module:model/TflApiPresentationEntitiesJourneyPlannerJourney
     */
    constructor() { 
        
        TflApiPresentationEntitiesJourneyPlannerJourney.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesJourneyPlannerJourney</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesJourneyPlannerJourney} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesJourneyPlannerJourney} The populated <code>TflApiPresentationEntitiesJourneyPlannerJourney</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesJourneyPlannerJourney();

            if (data.hasOwnProperty('arrivalDateTime')) {
                obj['arrivalDateTime'] = ApiClient.convertToType(data['arrivalDateTime'], 'Date');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('fare')) {
                obj['fare'] = TflApiPresentationEntitiesJourneyPlannerJourneyFare.constructFromObject(data['fare']);
            }
            if (data.hasOwnProperty('legs')) {
                obj['legs'] = ApiClient.convertToType(data['legs'], [TflApiPresentationEntitiesJourneyPlannerLeg]);
            }
            if (data.hasOwnProperty('startDateTime')) {
                obj['startDateTime'] = ApiClient.convertToType(data['startDateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesJourneyPlannerJourney</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesJourneyPlannerJourney</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fare`
        if (data['fare']) { // data not null
          TflApiPresentationEntitiesJourneyPlannerJourneyFare.validateJSON(data['fare']);
        }
        if (data['legs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['legs'])) {
                throw new Error("Expected the field `legs` to be an array in the JSON data but got " + data['legs']);
            }
            // validate the optional field `legs` (array)
            for (const item of data['legs']) {
                TflApiPresentationEntitiesJourneyPlannerLeg.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Date} arrivalDateTime
 */
TflApiPresentationEntitiesJourneyPlannerJourney.prototype['arrivalDateTime'] = undefined;

/**
 * @member {Number} duration
 */
TflApiPresentationEntitiesJourneyPlannerJourney.prototype['duration'] = undefined;

/**
 * @member {module:model/TflApiPresentationEntitiesJourneyPlannerJourneyFare} fare
 */
TflApiPresentationEntitiesJourneyPlannerJourney.prototype['fare'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesJourneyPlannerLeg>} legs
 */
TflApiPresentationEntitiesJourneyPlannerJourney.prototype['legs'] = undefined;

/**
 * @member {Date} startDateTime
 */
TflApiPresentationEntitiesJourneyPlannerJourney.prototype['startDateTime'] = undefined;






export default TflApiPresentationEntitiesJourneyPlannerJourney;

