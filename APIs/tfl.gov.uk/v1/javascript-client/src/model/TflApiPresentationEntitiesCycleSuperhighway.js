/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SystemDataSpatialDbGeography from './SystemDataSpatialDbGeography';

/**
 * The TflApiPresentationEntitiesCycleSuperhighway model module.
 * @module model/TflApiPresentationEntitiesCycleSuperhighway
 * @version v1
 */
class TflApiPresentationEntitiesCycleSuperhighway {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesCycleSuperhighway</code>.
     * 
     * @alias module:model/TflApiPresentationEntitiesCycleSuperhighway
     */
    constructor() { 
        
        TflApiPresentationEntitiesCycleSuperhighway.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesCycleSuperhighway</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesCycleSuperhighway} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesCycleSuperhighway} The populated <code>TflApiPresentationEntitiesCycleSuperhighway</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesCycleSuperhighway();

            if (data.hasOwnProperty('geography')) {
                obj['geography'] = SystemDataSpatialDbGeography.constructFromObject(data['geography']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('labelShort')) {
                obj['labelShort'] = ApiClient.convertToType(data['labelShort'], 'String');
            }
            if (data.hasOwnProperty('modified')) {
                obj['modified'] = ApiClient.convertToType(data['modified'], 'Date');
            }
            if (data.hasOwnProperty('routeType')) {
                obj['routeType'] = ApiClient.convertToType(data['routeType'], 'String');
            }
            if (data.hasOwnProperty('segmented')) {
                obj['segmented'] = ApiClient.convertToType(data['segmented'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesCycleSuperhighway</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesCycleSuperhighway</code>.
     */
    static validateJSON(data) {
        // validate the optional field `geography`
        if (data['geography']) { // data not null
          SystemDataSpatialDbGeography.validateJSON(data['geography']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['labelShort'] && !(typeof data['labelShort'] === 'string' || data['labelShort'] instanceof String)) {
            throw new Error("Expected the field `labelShort` to be a primitive type in the JSON string but got " + data['labelShort']);
        }
        // ensure the json data is a string
        if (data['routeType'] && !(typeof data['routeType'] === 'string' || data['routeType'] instanceof String)) {
            throw new Error("Expected the field `routeType` to be a primitive type in the JSON string but got " + data['routeType']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/SystemDataSpatialDbGeography} geography
 */
TflApiPresentationEntitiesCycleSuperhighway.prototype['geography'] = undefined;

/**
 * The Id
 * @member {String} id
 */
TflApiPresentationEntitiesCycleSuperhighway.prototype['id'] = undefined;

/**
 * The long label to show on maps when zoomed in
 * @member {String} label
 */
TflApiPresentationEntitiesCycleSuperhighway.prototype['label'] = undefined;

/**
 * The short label to show on maps
 * @member {String} labelShort
 */
TflApiPresentationEntitiesCycleSuperhighway.prototype['labelShort'] = undefined;

/**
 * When the data was last updated
 * @member {Date} modified
 */
TflApiPresentationEntitiesCycleSuperhighway.prototype['modified'] = undefined;

/**
 * Type of cycle route e.g CycleSuperhighways, Quietways, MiniHollands etc
 * @member {module:model/TflApiPresentationEntitiesCycleSuperhighway.RouteTypeEnum} routeType
 */
TflApiPresentationEntitiesCycleSuperhighway.prototype['routeType'] = undefined;

/**
 * True if the route is split into segments
 * @member {Boolean} segmented
 */
TflApiPresentationEntitiesCycleSuperhighway.prototype['segmented'] = undefined;

/**
 * Cycle route status i.e Proposed, Existing etc
 * @member {module:model/TflApiPresentationEntitiesCycleSuperhighway.StatusEnum} status
 */
TflApiPresentationEntitiesCycleSuperhighway.prototype['status'] = undefined;





/**
 * Allowed values for the <code>routeType</code> property.
 * @enum {String}
 * @readonly
 */
TflApiPresentationEntitiesCycleSuperhighway['RouteTypeEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "All"
     * @const
     */
    "All": "All",

    /**
     * value: "Cycle Superhighways"
     * @const
     */
    "Cycle Superhighways": "Cycle Superhighways",

    /**
     * value: "Quietways"
     * @const
     */
    "Quietways": "Quietways",

    /**
     * value: "Cycleways"
     * @const
     */
    "Cycleways": "Cycleways",

    /**
     * value: "Mini-Hollands"
     * @const
     */
    "Mini-Hollands": "Mini-Hollands",

    /**
     * value: "Central London Grid"
     * @const
     */
    "Central London Grid": "Central London Grid",

    /**
     * value: "Streetspace Route"
     * @const
     */
    "Streetspace Route": "Streetspace Route"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
TflApiPresentationEntitiesCycleSuperhighway['StatusEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "All"
     * @const
     */
    "All": "All",

    /**
     * value: "Open"
     * @const
     */
    "Open": "Open",

    /**
     * value: "In Progress"
     * @const
     */
    "In Progress": "In Progress",

    /**
     * value: "Planned"
     * @const
     */
    "Planned": "Planned",

    /**
     * value: "Planned - Subject to feasibility and consultation."
     * @const
     */
    "Planned - Subject to feasibility and consultation.": "Planned - Subject to feasibility and consultation.",

    /**
     * value: "Not Open"
     * @const
     */
    "Not Open": "Not Open"
};



export default TflApiPresentationEntitiesCycleSuperhighway;

