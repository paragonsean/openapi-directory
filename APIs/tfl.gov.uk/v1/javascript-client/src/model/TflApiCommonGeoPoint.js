/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TflApiCommonGeoPoint model module.
 * @module model/TflApiCommonGeoPoint
 * @version v1
 */
class TflApiCommonGeoPoint {
    /**
     * Constructs a new <code>TflApiCommonGeoPoint</code>.
     * @alias module:model/TflApiCommonGeoPoint
     * @param lat {Number} 
     * @param lon {Number} 
     */
    constructor(lat, lon) { 
        
        TflApiCommonGeoPoint.initialize(this, lat, lon);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lat, lon) { 
        obj['lat'] = lat;
        obj['lon'] = lon;
    }

    /**
     * Constructs a <code>TflApiCommonGeoPoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiCommonGeoPoint} obj Optional instance to populate.
     * @return {module:model/TflApiCommonGeoPoint} The populated <code>TflApiCommonGeoPoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiCommonGeoPoint();

            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('lon')) {
                obj['lon'] = ApiClient.convertToType(data['lon'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiCommonGeoPoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiCommonGeoPoint</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TflApiCommonGeoPoint.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

TflApiCommonGeoPoint.RequiredProperties = ["lat", "lon"];

/**
 * @member {Number} lat
 */
TflApiCommonGeoPoint.prototype['lat'] = undefined;

/**
 * @member {Number} lon
 */
TflApiCommonGeoPoint.prototype['lon'] = undefined;






export default TflApiCommonGeoPoint;

