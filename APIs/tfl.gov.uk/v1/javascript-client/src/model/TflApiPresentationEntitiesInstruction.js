/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesInstructionStep from './TflApiPresentationEntitiesInstructionStep';

/**
 * The TflApiPresentationEntitiesInstruction model module.
 * @module model/TflApiPresentationEntitiesInstruction
 * @version v1
 */
class TflApiPresentationEntitiesInstruction {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesInstruction</code>.
     * @alias module:model/TflApiPresentationEntitiesInstruction
     */
    constructor() { 
        
        TflApiPresentationEntitiesInstruction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesInstruction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesInstruction} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesInstruction} The populated <code>TflApiPresentationEntitiesInstruction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesInstruction();

            if (data.hasOwnProperty('detailed')) {
                obj['detailed'] = ApiClient.convertToType(data['detailed'], 'String');
            }
            if (data.hasOwnProperty('steps')) {
                obj['steps'] = ApiClient.convertToType(data['steps'], [TflApiPresentationEntitiesInstructionStep]);
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesInstruction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesInstruction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['detailed'] && !(typeof data['detailed'] === 'string' || data['detailed'] instanceof String)) {
            throw new Error("Expected the field `detailed` to be a primitive type in the JSON string but got " + data['detailed']);
        }
        if (data['steps']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['steps'])) {
                throw new Error("Expected the field `steps` to be an array in the JSON data but got " + data['steps']);
            }
            // validate the optional field `steps` (array)
            for (const item of data['steps']) {
                TflApiPresentationEntitiesInstructionStep.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['summary'] && !(typeof data['summary'] === 'string' || data['summary'] instanceof String)) {
            throw new Error("Expected the field `summary` to be a primitive type in the JSON string but got " + data['summary']);
        }

        return true;
    }


}



/**
 * @member {String} detailed
 */
TflApiPresentationEntitiesInstruction.prototype['detailed'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesInstructionStep>} steps
 */
TflApiPresentationEntitiesInstruction.prototype['steps'] = undefined;

/**
 * @member {String} summary
 */
TflApiPresentationEntitiesInstruction.prototype['summary'] = undefined;






export default TflApiPresentationEntitiesInstruction;

