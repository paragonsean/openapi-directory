/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesCrowding from './TflApiPresentationEntitiesCrowding';

/**
 * The TflApiPresentationEntitiesIdentifier model module.
 * @module model/TflApiPresentationEntitiesIdentifier
 * @version v1
 */
class TflApiPresentationEntitiesIdentifier {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesIdentifier</code>.
     * @alias module:model/TflApiPresentationEntitiesIdentifier
     */
    constructor() { 
        
        TflApiPresentationEntitiesIdentifier.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesIdentifier} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesIdentifier} The populated <code>TflApiPresentationEntitiesIdentifier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesIdentifier();

            if (data.hasOwnProperty('crowding')) {
                obj['crowding'] = TflApiPresentationEntitiesCrowding.constructFromObject(data['crowding']);
            }
            if (data.hasOwnProperty('fullName')) {
                obj['fullName'] = ApiClient.convertToType(data['fullName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('motType')) {
                obj['motType'] = ApiClient.convertToType(data['motType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('routeType')) {
                obj['routeType'] = ApiClient.convertToType(data['routeType'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesIdentifier</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesIdentifier</code>.
     */
    static validateJSON(data) {
        // validate the optional field `crowding`
        if (data['crowding']) { // data not null
          TflApiPresentationEntitiesCrowding.validateJSON(data['crowding']);
        }
        // ensure the json data is a string
        if (data['fullName'] && !(typeof data['fullName'] === 'string' || data['fullName'] instanceof String)) {
            throw new Error("Expected the field `fullName` to be a primitive type in the JSON string but got " + data['fullName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['motType'] && !(typeof data['motType'] === 'string' || data['motType'] instanceof String)) {
            throw new Error("Expected the field `motType` to be a primitive type in the JSON string but got " + data['motType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['routeType'] && !(typeof data['routeType'] === 'string' || data['routeType'] instanceof String)) {
            throw new Error("Expected the field `routeType` to be a primitive type in the JSON string but got " + data['routeType']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * @member {module:model/TflApiPresentationEntitiesCrowding} crowding
 */
TflApiPresentationEntitiesIdentifier.prototype['crowding'] = undefined;

/**
 * @member {String} fullName
 */
TflApiPresentationEntitiesIdentifier.prototype['fullName'] = undefined;

/**
 * @member {String} id
 */
TflApiPresentationEntitiesIdentifier.prototype['id'] = undefined;

/**
 * @member {String} motType
 */
TflApiPresentationEntitiesIdentifier.prototype['motType'] = undefined;

/**
 * @member {String} name
 */
TflApiPresentationEntitiesIdentifier.prototype['name'] = undefined;

/**
 * @member {String} network
 */
TflApiPresentationEntitiesIdentifier.prototype['network'] = undefined;

/**
 * @member {module:model/TflApiPresentationEntitiesIdentifier.RouteTypeEnum} routeType
 */
TflApiPresentationEntitiesIdentifier.prototype['routeType'] = undefined;

/**
 * @member {module:model/TflApiPresentationEntitiesIdentifier.StatusEnum} status
 */
TflApiPresentationEntitiesIdentifier.prototype['status'] = undefined;

/**
 * @member {String} type
 */
TflApiPresentationEntitiesIdentifier.prototype['type'] = undefined;

/**
 * @member {String} uri
 */
TflApiPresentationEntitiesIdentifier.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>routeType</code> property.
 * @enum {String}
 * @readonly
 */
TflApiPresentationEntitiesIdentifier['RouteTypeEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "All"
     * @const
     */
    "All": "All",

    /**
     * value: "Cycle Superhighways"
     * @const
     */
    "Cycle Superhighways": "Cycle Superhighways",

    /**
     * value: "Quietways"
     * @const
     */
    "Quietways": "Quietways",

    /**
     * value: "Cycleways"
     * @const
     */
    "Cycleways": "Cycleways",

    /**
     * value: "Mini-Hollands"
     * @const
     */
    "Mini-Hollands": "Mini-Hollands",

    /**
     * value: "Central London Grid"
     * @const
     */
    "Central London Grid": "Central London Grid",

    /**
     * value: "Streetspace Route"
     * @const
     */
    "Streetspace Route": "Streetspace Route"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
TflApiPresentationEntitiesIdentifier['StatusEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "All"
     * @const
     */
    "All": "All",

    /**
     * value: "Open"
     * @const
     */
    "Open": "Open",

    /**
     * value: "In Progress"
     * @const
     */
    "In Progress": "In Progress",

    /**
     * value: "Planned"
     * @const
     */
    "Planned": "Planned",

    /**
     * value: "Planned - Subject to feasibility and consultation."
     * @const
     */
    "Planned - Subject to feasibility and consultation.": "Planned - Subject to feasibility and consultation.",

    /**
     * value: "Not Open"
     * @const
     */
    "Not Open": "Not Open"
};



export default TflApiPresentationEntitiesIdentifier;

