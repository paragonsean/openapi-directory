/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TflApiPresentationEntitiesFaresFareStation model module.
 * @module model/TflApiPresentationEntitiesFaresFareStation
 * @version v1
 */
class TflApiPresentationEntitiesFaresFareStation {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesFaresFareStation</code>.
     * @alias module:model/TflApiPresentationEntitiesFaresFareStation
     */
    constructor() { 
        
        TflApiPresentationEntitiesFaresFareStation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesFaresFareStation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesFaresFareStation} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesFaresFareStation} The populated <code>TflApiPresentationEntitiesFaresFareStation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesFaresFareStation();

            if (data.hasOwnProperty('atcoCode')) {
                obj['atcoCode'] = ApiClient.convertToType(data['atcoCode'], 'String');
            }
            if (data.hasOwnProperty('commonName')) {
                obj['commonName'] = ApiClient.convertToType(data['commonName'], 'String');
            }
            if (data.hasOwnProperty('fareCategory')) {
                obj['fareCategory'] = ApiClient.convertToType(data['fareCategory'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesFaresFareStation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesFaresFareStation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['atcoCode'] && !(typeof data['atcoCode'] === 'string' || data['atcoCode'] instanceof String)) {
            throw new Error("Expected the field `atcoCode` to be a primitive type in the JSON string but got " + data['atcoCode']);
        }
        // ensure the json data is a string
        if (data['commonName'] && !(typeof data['commonName'] === 'string' || data['commonName'] instanceof String)) {
            throw new Error("Expected the field `commonName` to be a primitive type in the JSON string but got " + data['commonName']);
        }
        // ensure the json data is a string
        if (data['fareCategory'] && !(typeof data['fareCategory'] === 'string' || data['fareCategory'] instanceof String)) {
            throw new Error("Expected the field `fareCategory` to be a primitive type in the JSON string but got " + data['fareCategory']);
        }

        return true;
    }


}



/**
 * @member {String} atcoCode
 */
TflApiPresentationEntitiesFaresFareStation.prototype['atcoCode'] = undefined;

/**
 * @member {String} commonName
 */
TflApiPresentationEntitiesFaresFareStation.prototype['commonName'] = undefined;

/**
 * @member {module:model/TflApiPresentationEntitiesFaresFareStation.FareCategoryEnum} fareCategory
 */
TflApiPresentationEntitiesFaresFareStation.prototype['fareCategory'] = undefined;





/**
 * Allowed values for the <code>fareCategory</code> property.
 * @enum {String}
 * @readonly
 */
TflApiPresentationEntitiesFaresFareStation['FareCategoryEnum'] = {

    /**
     * value: "Cash"
     * @const
     */
    "Cash": "Cash",

    /**
     * value: "Oyster"
     * @const
     */
    "Oyster": "Oyster",

    /**
     * value: "Contactless"
     * @const
     */
    "Contactless": "Contactless",

    /**
     * value: "ContactlessOnly"
     * @const
     */
    "ContactlessOnly": "ContactlessOnly",

    /**
     * value: "All"
     * @const
     */
    "All": "All"
};



export default TflApiPresentationEntitiesFaresFareStation;

