/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesAccidentStatsCasualty from './TflApiPresentationEntitiesAccidentStatsCasualty';
import TflApiPresentationEntitiesAccidentStatsVehicle from './TflApiPresentationEntitiesAccidentStatsVehicle';

/**
 * The TflApiPresentationEntitiesAccidentStatsAccidentDetail model module.
 * @module model/TflApiPresentationEntitiesAccidentStatsAccidentDetail
 * @version v1
 */
class TflApiPresentationEntitiesAccidentStatsAccidentDetail {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesAccidentStatsAccidentDetail</code>.
     * @alias module:model/TflApiPresentationEntitiesAccidentStatsAccidentDetail
     */
    constructor() { 
        
        TflApiPresentationEntitiesAccidentStatsAccidentDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesAccidentStatsAccidentDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesAccidentStatsAccidentDetail} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesAccidentStatsAccidentDetail} The populated <code>TflApiPresentationEntitiesAccidentStatsAccidentDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesAccidentStatsAccidentDetail();

            if (data.hasOwnProperty('borough')) {
                obj['borough'] = ApiClient.convertToType(data['borough'], 'String');
            }
            if (data.hasOwnProperty('casualties')) {
                obj['casualties'] = ApiClient.convertToType(data['casualties'], [TflApiPresentationEntitiesAccidentStatsCasualty]);
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('lon')) {
                obj['lon'] = ApiClient.convertToType(data['lon'], 'Number');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('vehicles')) {
                obj['vehicles'] = ApiClient.convertToType(data['vehicles'], [TflApiPresentationEntitiesAccidentStatsVehicle]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesAccidentStatsAccidentDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesAccidentStatsAccidentDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['borough'] && !(typeof data['borough'] === 'string' || data['borough'] instanceof String)) {
            throw new Error("Expected the field `borough` to be a primitive type in the JSON string but got " + data['borough']);
        }
        if (data['casualties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['casualties'])) {
                throw new Error("Expected the field `casualties` to be an array in the JSON data but got " + data['casualties']);
            }
            // validate the optional field `casualties` (array)
            for (const item of data['casualties']) {
                TflApiPresentationEntitiesAccidentStatsCasualty.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        if (data['vehicles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vehicles'])) {
                throw new Error("Expected the field `vehicles` to be an array in the JSON data but got " + data['vehicles']);
            }
            // validate the optional field `vehicles` (array)
            for (const item of data['vehicles']) {
                TflApiPresentationEntitiesAccidentStatsVehicle.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} borough
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['borough'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesAccidentStatsCasualty>} casualties
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['casualties'] = undefined;

/**
 * @member {Date} date
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['date'] = undefined;

/**
 * @member {Number} id
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['id'] = undefined;

/**
 * @member {Number} lat
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['lat'] = undefined;

/**
 * @member {String} location
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['location'] = undefined;

/**
 * @member {Number} lon
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['lon'] = undefined;

/**
 * @member {String} severity
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['severity'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesAccidentStatsVehicle>} vehicles
 */
TflApiPresentationEntitiesAccidentStatsAccidentDetail.prototype['vehicles'] = undefined;






export default TflApiPresentationEntitiesAccidentStatsAccidentDetail;

