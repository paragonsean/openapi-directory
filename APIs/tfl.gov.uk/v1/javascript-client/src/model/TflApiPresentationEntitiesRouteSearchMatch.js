/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TflApiPresentationEntitiesLineRouteSection from './TflApiPresentationEntitiesLineRouteSection';
import TflApiPresentationEntitiesMatchedRouteSections from './TflApiPresentationEntitiesMatchedRouteSections';
import TflApiPresentationEntitiesMatchedStop from './TflApiPresentationEntitiesMatchedStop';

/**
 * The TflApiPresentationEntitiesRouteSearchMatch model module.
 * @module model/TflApiPresentationEntitiesRouteSearchMatch
 * @version v1
 */
class TflApiPresentationEntitiesRouteSearchMatch {
    /**
     * Constructs a new <code>TflApiPresentationEntitiesRouteSearchMatch</code>.
     * @alias module:model/TflApiPresentationEntitiesRouteSearchMatch
     */
    constructor() { 
        
        TflApiPresentationEntitiesRouteSearchMatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TflApiPresentationEntitiesRouteSearchMatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TflApiPresentationEntitiesRouteSearchMatch} obj Optional instance to populate.
     * @return {module:model/TflApiPresentationEntitiesRouteSearchMatch} The populated <code>TflApiPresentationEntitiesRouteSearchMatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TflApiPresentationEntitiesRouteSearchMatch();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('lineId')) {
                obj['lineId'] = ApiClient.convertToType(data['lineId'], 'String');
            }
            if (data.hasOwnProperty('lineName')) {
                obj['lineName'] = ApiClient.convertToType(data['lineName'], 'String');
            }
            if (data.hasOwnProperty('lineRouteSection')) {
                obj['lineRouteSection'] = ApiClient.convertToType(data['lineRouteSection'], [TflApiPresentationEntitiesLineRouteSection]);
            }
            if (data.hasOwnProperty('lon')) {
                obj['lon'] = ApiClient.convertToType(data['lon'], 'Number');
            }
            if (data.hasOwnProperty('matchedRouteSections')) {
                obj['matchedRouteSections'] = ApiClient.convertToType(data['matchedRouteSections'], [TflApiPresentationEntitiesMatchedRouteSections]);
            }
            if (data.hasOwnProperty('matchedStops')) {
                obj['matchedStops'] = ApiClient.convertToType(data['matchedStops'], [TflApiPresentationEntitiesMatchedStop]);
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TflApiPresentationEntitiesRouteSearchMatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TflApiPresentationEntitiesRouteSearchMatch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lineId'] && !(typeof data['lineId'] === 'string' || data['lineId'] instanceof String)) {
            throw new Error("Expected the field `lineId` to be a primitive type in the JSON string but got " + data['lineId']);
        }
        // ensure the json data is a string
        if (data['lineName'] && !(typeof data['lineName'] === 'string' || data['lineName'] instanceof String)) {
            throw new Error("Expected the field `lineName` to be a primitive type in the JSON string but got " + data['lineName']);
        }
        if (data['lineRouteSection']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lineRouteSection'])) {
                throw new Error("Expected the field `lineRouteSection` to be an array in the JSON data but got " + data['lineRouteSection']);
            }
            // validate the optional field `lineRouteSection` (array)
            for (const item of data['lineRouteSection']) {
                TflApiPresentationEntitiesLineRouteSection.validateJSON(item);
            };
        }
        if (data['matchedRouteSections']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matchedRouteSections'])) {
                throw new Error("Expected the field `matchedRouteSections` to be an array in the JSON data but got " + data['matchedRouteSections']);
            }
            // validate the optional field `matchedRouteSections` (array)
            for (const item of data['matchedRouteSections']) {
                TflApiPresentationEntitiesMatchedRouteSections.validateJSON(item);
            };
        }
        if (data['matchedStops']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matchedStops'])) {
                throw new Error("Expected the field `matchedStops` to be an array in the JSON data but got " + data['matchedStops']);
            }
            // validate the optional field `matchedStops` (array)
            for (const item of data['matchedStops']) {
                TflApiPresentationEntitiesMatchedStop.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['id'] = undefined;

/**
 * @member {Number} lat
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['lat'] = undefined;

/**
 * @member {String} lineId
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['lineId'] = undefined;

/**
 * @member {String} lineName
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['lineName'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesLineRouteSection>} lineRouteSection
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['lineRouteSection'] = undefined;

/**
 * @member {Number} lon
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['lon'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesMatchedRouteSections>} matchedRouteSections
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['matchedRouteSections'] = undefined;

/**
 * @member {Array.<module:model/TflApiPresentationEntitiesMatchedStop>} matchedStops
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['matchedStops'] = undefined;

/**
 * @member {String} mode
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['mode'] = undefined;

/**
 * @member {String} name
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['name'] = undefined;

/**
 * @member {String} url
 */
TflApiPresentationEntitiesRouteSearchMatch.prototype['url'] = undefined;






export default TflApiPresentationEntitiesRouteSearchMatch;

