/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TflApiPresentationEntitiesPrediction from '../model/TflApiPresentationEntitiesPrediction';

/**
* Vehicle service.
* @module api/VehicleApi
* @version v1
*/
export default class VehicleApi {

    /**
    * Constructs a new VehicleApi. 
    * @alias module:api/VehicleApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the vehicleGet operation.
     * @callback module:api/VehicleApi~vehicleGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TflApiPresentationEntitiesPrediction>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the predictions for a given list of vehicle Id's.
     * @param {Array.<String>} ids A comma-separated list of vehicle ids e.g. LX58CFV,LX11AZB,LX58CFE. Max approx. 25 ids.
     * @param {module:api/VehicleApi~vehicleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TflApiPresentationEntitiesPrediction>}
     */
    vehicleGet(ids, callback) {
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling vehicleGet");
      }

      let pathParams = {
        'ids': ids
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = [TflApiPresentationEntitiesPrediction];
      return this.apiClient.callApi(
        '/Vehicle/{ids}/Arrivals', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
