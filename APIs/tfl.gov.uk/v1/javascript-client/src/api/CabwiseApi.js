/**
 * Transport for London Unified API
 * Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Cabwise service.
* @module api/CabwiseApi
* @version v1
*/
export default class CabwiseApi {

    /**
    * Constructs a new CabwiseApi. 
    * @alias module:api/CabwiseApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cabwiseGet operation.
     * @callback module:api/CabwiseApi~cabwiseGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets taxis and minicabs contact information
     * @param {Number} lat Latitude
     * @param {Number} lon Longitude
     * @param {Object} opts Optional parameters
     * @param {String} [optype] Operator Type e.g Minicab, Executive, Limousine
     * @param {String} [wc] Wheelchair accessible
     * @param {Number} [radius] The radius of the bounding circle in metres
     * @param {String} [name] Trading name of operating company
     * @param {Number} [maxResults] An optional parameter to limit the number of results return. Default and maximum is 20.
     * @param {Boolean} [legacyFormat] Legacy Format
     * @param {Boolean} [forceXml] Force Xml
     * @param {Boolean} [twentyFourSevenOnly] Twenty Four Seven Only
     * @param {module:api/CabwiseApi~cabwiseGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    cabwiseGet(lat, lon, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'lat' is set
      if (lat === undefined || lat === null) {
        throw new Error("Missing the required parameter 'lat' when calling cabwiseGet");
      }
      // verify the required parameter 'lon' is set
      if (lon === undefined || lon === null) {
        throw new Error("Missing the required parameter 'lon' when calling cabwiseGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'lat': lat,
        'lon': lon,
        'optype': opts['optype'],
        'wc': opts['wc'],
        'radius': opts['radius'],
        'name': opts['name'],
        'maxResults': opts['maxResults'],
        'legacyFormat': opts['legacyFormat'],
        'forceXml': opts['forceXml'],
        'twentyFourSevenOnly': opts['twentyFourSevenOnly']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/Cabwise/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
