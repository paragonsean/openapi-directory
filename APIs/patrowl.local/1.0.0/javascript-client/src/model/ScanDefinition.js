/**
 * Swagger API-REST for Patrowl Engines
 * This is the API documentation for Patrowl Engines usage.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: getsupport@patrowl.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScanDefinitionAssetsInner from './ScanDefinitionAssetsInner';

/**
 * The ScanDefinition model module.
 * @module model/ScanDefinition
 * @version 1.0.0
 */
class ScanDefinition {
    /**
     * Constructs a new <code>ScanDefinition</code>.
     * @alias module:model/ScanDefinition
     */
    constructor() { 
        
        ScanDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScanDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScanDefinition} obj Optional instance to populate.
     * @return {module:model/ScanDefinition} The populated <code>ScanDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScanDefinition();

            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], [ScanDefinitionAssetsInner]);
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], Object);
            }
            if (data.hasOwnProperty('scan_id')) {
                obj['scan_id'] = ApiClient.convertToType(data['scan_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScanDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScanDefinition</code>.
     */
    static validateJSON(data) {
        if (data['assets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assets'])) {
                throw new Error("Expected the field `assets` to be an array in the JSON data but got " + data['assets']);
            }
            // validate the optional field `assets` (array)
            for (const item of data['assets']) {
                ScanDefinitionAssetsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/ScanDefinitionAssetsInner>} assets
 */
ScanDefinition.prototype['assets'] = undefined;

/**
 * @member {Object} options
 */
ScanDefinition.prototype['options'] = undefined;

/**
 * @member {Number} scan_id
 */
ScanDefinition.prototype['scan_id'] = undefined;






export default ScanDefinition;

