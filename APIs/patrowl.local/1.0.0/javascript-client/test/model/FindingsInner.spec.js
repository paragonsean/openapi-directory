/**
 * Swagger API-REST for Patrowl Engines
 * This is the API documentation for Patrowl Engines usage.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: getsupport@patrowl.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerApiRestForPatrowlEngines);
  }
}(this, function(expect, SwaggerApiRestForPatrowlEngines) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FindingsInner', function() {
    it('should create an instance of FindingsInner', function() {
      // uncomment below and update the code to test FindingsInner
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be.a(SwaggerApiRestForPatrowlEngines.FindingsInner);
    });

    it('should have the property confidence (base name: "confidence")', function() {
      // uncomment below and update the code to test the property confidence
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property issueId (base name: "issue_id")', function() {
      // uncomment below and update the code to test the property issueId
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property metaLinks (base name: "meta_links")', function() {
      // uncomment below and update the code to test the property metaLinks
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property metaRisk (base name: "meta_risk")', function() {
      // uncomment below and update the code to test the property metaRisk
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property metaTags (base name: "meta_tags")', function() {
      // uncomment below and update the code to test the property metaTags
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property metaVulnRefs (base name: "meta_vuln_refs")', function() {
      // uncomment below and update the code to test the property metaVulnRefs
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property raw (base name: "raw")', function() {
      // uncomment below and update the code to test the property raw
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property solution (base name: "solution")', function() {
      // uncomment below and update the code to test the property solution
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property targetAddrs (base name: "target_addrs")', function() {
      // uncomment below and update the code to test the property targetAddrs
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property targetProto (base name: "target_proto")', function() {
      // uncomment below and update the code to test the property targetProto
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SwaggerApiRestForPatrowlEngines.FindingsInner();
      //expect(instance).to.be();
    });

  });

}));
