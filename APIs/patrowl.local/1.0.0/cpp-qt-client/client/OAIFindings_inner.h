/**
 * Swagger API-REST for Patrowl Engines
 * This is the API documentation for Patrowl Engines usage.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: getsupport@patrowl.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFindings_inner.h
 *
 * 
 */

#ifndef OAIFindings_inner_H
#define OAIFindings_inner_H

#include <QJsonObject>

#include "OAIFindings_inner_meta_risk.h"
#include "OAIFindings_inner_meta_vuln_refs.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFindings_inner_meta_risk;
class OAIFindings_inner_meta_vuln_refs;

class OAIFindings_inner : public OAIObject {
public:
    OAIFindings_inner();
    OAIFindings_inner(QString json);
    ~OAIFindings_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfidence() const;
    void setConfidence(const QString &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getIssueId() const;
    void setIssueId(const qint32 &issue_id);
    bool is_issue_id_Set() const;
    bool is_issue_id_Valid() const;

    QList<QString> getMetaLinks() const;
    void setMetaLinks(const QList<QString> &meta_links);
    bool is_meta_links_Set() const;
    bool is_meta_links_Valid() const;

    OAIFindings_inner_meta_risk getMetaRisk() const;
    void setMetaRisk(const OAIFindings_inner_meta_risk &meta_risk);
    bool is_meta_risk_Set() const;
    bool is_meta_risk_Valid() const;

    QList<QString> getMetaTags() const;
    void setMetaTags(const QList<QString> &meta_tags);
    bool is_meta_tags_Set() const;
    bool is_meta_tags_Valid() const;

    OAIFindings_inner_meta_vuln_refs getMetaVulnRefs() const;
    void setMetaVulnRefs(const OAIFindings_inner_meta_vuln_refs &meta_vuln_refs);
    bool is_meta_vuln_refs_Set() const;
    bool is_meta_vuln_refs_Valid() const;

    QString getRaw() const;
    void setRaw(const QString &raw);
    bool is_raw_Set() const;
    bool is_raw_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getSolution() const;
    void setSolution(const QString &solution);
    bool is_solution_Set() const;
    bool is_solution_Valid() const;

    QList<QString> getTargetAddrs() const;
    void setTargetAddrs(const QList<QString> &target_addrs);
    bool is_target_addrs_Set() const;
    bool is_target_addrs_Valid() const;

    QList<QString> getTargetProto() const;
    void setTargetProto(const QList<QString> &target_proto);
    bool is_target_proto_Set() const;
    bool is_target_proto_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_issue_id;
    bool m_issue_id_isSet;
    bool m_issue_id_isValid;

    QList<QString> m_meta_links;
    bool m_meta_links_isSet;
    bool m_meta_links_isValid;

    OAIFindings_inner_meta_risk m_meta_risk;
    bool m_meta_risk_isSet;
    bool m_meta_risk_isValid;

    QList<QString> m_meta_tags;
    bool m_meta_tags_isSet;
    bool m_meta_tags_isValid;

    OAIFindings_inner_meta_vuln_refs m_meta_vuln_refs;
    bool m_meta_vuln_refs_isSet;
    bool m_meta_vuln_refs_isValid;

    QString m_raw;
    bool m_raw_isSet;
    bool m_raw_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_solution;
    bool m_solution_isSet;
    bool m_solution_isValid;

    QList<QString> m_target_addrs;
    bool m_target_addrs_isSet;
    bool m_target_addrs_isValid;

    QList<QString> m_target_proto;
    bool m_target_proto_isSet;
    bool m_target_proto_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFindings_inner)

#endif // OAIFindings_inner_H
