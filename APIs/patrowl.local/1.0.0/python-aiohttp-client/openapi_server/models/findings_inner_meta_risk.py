# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FindingsInnerMetaRisk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cvss_base_score: List[str]=None, cvss_vector: List[str]=None, exploit_available: List[str]=None, exploitability_ease: List[str]=None, patch_publication_date: List[str]=None):
        """FindingsInnerMetaRisk - a model defined in OpenAPI

        :param cvss_base_score: The cvss_base_score of this FindingsInnerMetaRisk.
        :param cvss_vector: The cvss_vector of this FindingsInnerMetaRisk.
        :param exploit_available: The exploit_available of this FindingsInnerMetaRisk.
        :param exploitability_ease: The exploitability_ease of this FindingsInnerMetaRisk.
        :param patch_publication_date: The patch_publication_date of this FindingsInnerMetaRisk.
        """
        self.openapi_types = {
            'cvss_base_score': List[str],
            'cvss_vector': List[str],
            'exploit_available': List[str],
            'exploitability_ease': List[str],
            'patch_publication_date': List[str]
        }

        self.attribute_map = {
            'cvss_base_score': 'cvss_base_score',
            'cvss_vector': 'cvss_vector',
            'exploit_available': 'exploit_available',
            'exploitability_ease': 'exploitability_ease',
            'patch_publication_date': 'patch_publication_date'
        }

        self._cvss_base_score = cvss_base_score
        self._cvss_vector = cvss_vector
        self._exploit_available = exploit_available
        self._exploitability_ease = exploitability_ease
        self._patch_publication_date = patch_publication_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindingsInnerMetaRisk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Findings_inner_meta_risk of this FindingsInnerMetaRisk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cvss_base_score(self):
        """Gets the cvss_base_score of this FindingsInnerMetaRisk.


        :return: The cvss_base_score of this FindingsInnerMetaRisk.
        :rtype: List[str]
        """
        return self._cvss_base_score

    @cvss_base_score.setter
    def cvss_base_score(self, cvss_base_score):
        """Sets the cvss_base_score of this FindingsInnerMetaRisk.


        :param cvss_base_score: The cvss_base_score of this FindingsInnerMetaRisk.
        :type cvss_base_score: List[str]
        """

        self._cvss_base_score = cvss_base_score

    @property
    def cvss_vector(self):
        """Gets the cvss_vector of this FindingsInnerMetaRisk.


        :return: The cvss_vector of this FindingsInnerMetaRisk.
        :rtype: List[str]
        """
        return self._cvss_vector

    @cvss_vector.setter
    def cvss_vector(self, cvss_vector):
        """Sets the cvss_vector of this FindingsInnerMetaRisk.


        :param cvss_vector: The cvss_vector of this FindingsInnerMetaRisk.
        :type cvss_vector: List[str]
        """

        self._cvss_vector = cvss_vector

    @property
    def exploit_available(self):
        """Gets the exploit_available of this FindingsInnerMetaRisk.


        :return: The exploit_available of this FindingsInnerMetaRisk.
        :rtype: List[str]
        """
        return self._exploit_available

    @exploit_available.setter
    def exploit_available(self, exploit_available):
        """Sets the exploit_available of this FindingsInnerMetaRisk.


        :param exploit_available: The exploit_available of this FindingsInnerMetaRisk.
        :type exploit_available: List[str]
        """

        self._exploit_available = exploit_available

    @property
    def exploitability_ease(self):
        """Gets the exploitability_ease of this FindingsInnerMetaRisk.


        :return: The exploitability_ease of this FindingsInnerMetaRisk.
        :rtype: List[str]
        """
        return self._exploitability_ease

    @exploitability_ease.setter
    def exploitability_ease(self, exploitability_ease):
        """Sets the exploitability_ease of this FindingsInnerMetaRisk.


        :param exploitability_ease: The exploitability_ease of this FindingsInnerMetaRisk.
        :type exploitability_ease: List[str]
        """

        self._exploitability_ease = exploitability_ease

    @property
    def patch_publication_date(self):
        """Gets the patch_publication_date of this FindingsInnerMetaRisk.


        :return: The patch_publication_date of this FindingsInnerMetaRisk.
        :rtype: List[str]
        """
        return self._patch_publication_date

    @patch_publication_date.setter
    def patch_publication_date(self, patch_publication_date):
        """Sets the patch_publication_date of this FindingsInnerMetaRisk.


        :param patch_publication_date: The patch_publication_date of this FindingsInnerMetaRisk.
        :type patch_publication_date: List[str]
        """

        self._patch_publication_date = patch_publication_date
