/**
 * Atmosphere API
 * Instantly access empirical models of atmospheric density and  composition that are recommended by the Committee on Space Research (COSPAR) for  satellite drag calculations. <br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppApiWfsEndpointsWFSGetValues200Response from '../model/AppApiWfsEndpointsWFSGetValues200Response';

/**
* WamIpe service.
* @module api/WamIpeApi
* @version 1.1.1
*/
export default class WamIpeApi {

    /**
    * Constructs a new WamIpeApi. 
    * @alias module:api/WamIpeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appApiWfsEndpointsWFSGetValues operation.
     * @callback module:api/WamIpeApi~appApiWfsEndpointsWFSGetValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppApiWfsEndpointsWFSGetValues200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Forecast winds, ion and molecular densities, and temperatures in the atmosphere 
     * at a given position and time on 42-48 hour forecast horizon (10 minute resolution). NOTE: latitudes outside the interval (-90,90) are clipped to the endpoints; longitudes outside (0,360) are wrapped.    
     * @param {Number} latitude Latitude (deg) -90 to 90 deg
     * @param {Number} longitude Longitude (deg) 0 to 360 deg or -180 to 180 deg
     * @param {Number} altitude Altitude in (km)
     * @param {Number} year Year in YYYY format
     * @param {Number} month Month in MM format
     * @param {Number} day Day in DD format
     * @param {Number} hour UTC Hour of the day in 24 hour format
     * @param {Number} minute Minute of the given hour
     * @param {module:api/WamIpeApi~appApiWfsEndpointsWFSGetValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppApiWfsEndpointsWFSGetValues200Response}
     */
    appApiWfsEndpointsWFSGetValues(latitude, longitude, altitude, year, month, day, hour, minute, callback) {
      let postBody = null;
      // verify the required parameter 'latitude' is set
      if (latitude === undefined || latitude === null) {
        throw new Error("Missing the required parameter 'latitude' when calling appApiWfsEndpointsWFSGetValues");
      }
      // verify the required parameter 'longitude' is set
      if (longitude === undefined || longitude === null) {
        throw new Error("Missing the required parameter 'longitude' when calling appApiWfsEndpointsWFSGetValues");
      }
      // verify the required parameter 'altitude' is set
      if (altitude === undefined || altitude === null) {
        throw new Error("Missing the required parameter 'altitude' when calling appApiWfsEndpointsWFSGetValues");
      }
      // verify the required parameter 'year' is set
      if (year === undefined || year === null) {
        throw new Error("Missing the required parameter 'year' when calling appApiWfsEndpointsWFSGetValues");
      }
      // verify the required parameter 'month' is set
      if (month === undefined || month === null) {
        throw new Error("Missing the required parameter 'month' when calling appApiWfsEndpointsWFSGetValues");
      }
      // verify the required parameter 'day' is set
      if (day === undefined || day === null) {
        throw new Error("Missing the required parameter 'day' when calling appApiWfsEndpointsWFSGetValues");
      }
      // verify the required parameter 'hour' is set
      if (hour === undefined || hour === null) {
        throw new Error("Missing the required parameter 'hour' when calling appApiWfsEndpointsWFSGetValues");
      }
      // verify the required parameter 'minute' is set
      if (minute === undefined || minute === null) {
        throw new Error("Missing the required parameter 'minute' when calling appApiWfsEndpointsWFSGetValues");
      }

      let pathParams = {
      };
      let queryParams = {
        'latitude': latitude,
        'longitude': longitude,
        'altitude': altitude,
        'year': year,
        'month': month,
        'day': day,
        'hour': hour,
        'minute': minute
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppApiWfsEndpointsWFSGetValues200Response;
      return this.apiClient.callApi(
        '/wam-ipe', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
