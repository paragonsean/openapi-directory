/*
 * Atmosphere API
 * Instantly access empirical models of atmospheric density and  composition that are recommended by the Committee on Space Research (COSPAR) for  satellite drag calculations. <br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponseEastwardWindNeutral;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponseN2Density;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponseNorthwardWindNeutral;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponseO2Density;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponseODensity;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponsePoint;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponseTempNeutral;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponseTotalMassDensity;
import org.openapitools.client.model.AppApiWfsEndpointsWFSGetValues200ResponseUpwardWindNeutral;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppApiWfsEndpointsWFSGetValues200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:27.392751-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppApiWfsEndpointsWFSGetValues200Response {
  public static final String SERIALIZED_NAME_N2_DENSITY = "N2_density";
  @SerializedName(SERIALIZED_NAME_N2_DENSITY)
  private AppApiWfsEndpointsWFSGetValues200ResponseN2Density n2Density;

  public static final String SERIALIZED_NAME_O2_DENSITY = "O2_density";
  @SerializedName(SERIALIZED_NAME_O2_DENSITY)
  private AppApiWfsEndpointsWFSGetValues200ResponseO2Density o2Density;

  public static final String SERIALIZED_NAME_O_DENSITY = "O_density";
  @SerializedName(SERIALIZED_NAME_O_DENSITY)
  private AppApiWfsEndpointsWFSGetValues200ResponseODensity oDensity;

  public static final String SERIALIZED_NAME_EASTWARD_WIND_NEUTRAL = "eastward_wind_neutral";
  @SerializedName(SERIALIZED_NAME_EASTWARD_WIND_NEUTRAL)
  private AppApiWfsEndpointsWFSGetValues200ResponseEastwardWindNeutral eastwardWindNeutral;

  public static final String SERIALIZED_NAME_NORTHWARD_WIND_NEUTRAL = "northward_wind_neutral";
  @SerializedName(SERIALIZED_NAME_NORTHWARD_WIND_NEUTRAL)
  private AppApiWfsEndpointsWFSGetValues200ResponseNorthwardWindNeutral northwardWindNeutral;

  public static final String SERIALIZED_NAME_POINT = "point";
  @SerializedName(SERIALIZED_NAME_POINT)
  private AppApiWfsEndpointsWFSGetValues200ResponsePoint point;

  public static final String SERIALIZED_NAME_TEMP_NEUTRAL = "temp_neutral";
  @SerializedName(SERIALIZED_NAME_TEMP_NEUTRAL)
  private AppApiWfsEndpointsWFSGetValues200ResponseTempNeutral tempNeutral;

  public static final String SERIALIZED_NAME_TOTAL_MASS_DENSITY = "total_mass_density";
  @SerializedName(SERIALIZED_NAME_TOTAL_MASS_DENSITY)
  private AppApiWfsEndpointsWFSGetValues200ResponseTotalMassDensity totalMassDensity;

  public static final String SERIALIZED_NAME_UPWARD_WIND_NEUTRAL = "upward_wind_neutral";
  @SerializedName(SERIALIZED_NAME_UPWARD_WIND_NEUTRAL)
  private AppApiWfsEndpointsWFSGetValues200ResponseUpwardWindNeutral upwardWindNeutral;

  public AppApiWfsEndpointsWFSGetValues200Response() {
  }

  public AppApiWfsEndpointsWFSGetValues200Response n2Density(AppApiWfsEndpointsWFSGetValues200ResponseN2Density n2Density) {
    this.n2Density = n2Density;
    return this;
  }

  /**
   * Get n2Density
   * @return n2Density
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponseN2Density getN2Density() {
    return n2Density;
  }

  public void setN2Density(AppApiWfsEndpointsWFSGetValues200ResponseN2Density n2Density) {
    this.n2Density = n2Density;
  }


  public AppApiWfsEndpointsWFSGetValues200Response o2Density(AppApiWfsEndpointsWFSGetValues200ResponseO2Density o2Density) {
    this.o2Density = o2Density;
    return this;
  }

  /**
   * Get o2Density
   * @return o2Density
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponseO2Density getO2Density() {
    return o2Density;
  }

  public void setO2Density(AppApiWfsEndpointsWFSGetValues200ResponseO2Density o2Density) {
    this.o2Density = o2Density;
  }


  public AppApiWfsEndpointsWFSGetValues200Response oDensity(AppApiWfsEndpointsWFSGetValues200ResponseODensity oDensity) {
    this.oDensity = oDensity;
    return this;
  }

  /**
   * Get oDensity
   * @return oDensity
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponseODensity getoDensity() {
    return oDensity;
  }

  public void setoDensity(AppApiWfsEndpointsWFSGetValues200ResponseODensity oDensity) {
    this.oDensity = oDensity;
  }


  public AppApiWfsEndpointsWFSGetValues200Response eastwardWindNeutral(AppApiWfsEndpointsWFSGetValues200ResponseEastwardWindNeutral eastwardWindNeutral) {
    this.eastwardWindNeutral = eastwardWindNeutral;
    return this;
  }

  /**
   * Get eastwardWindNeutral
   * @return eastwardWindNeutral
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponseEastwardWindNeutral getEastwardWindNeutral() {
    return eastwardWindNeutral;
  }

  public void setEastwardWindNeutral(AppApiWfsEndpointsWFSGetValues200ResponseEastwardWindNeutral eastwardWindNeutral) {
    this.eastwardWindNeutral = eastwardWindNeutral;
  }


  public AppApiWfsEndpointsWFSGetValues200Response northwardWindNeutral(AppApiWfsEndpointsWFSGetValues200ResponseNorthwardWindNeutral northwardWindNeutral) {
    this.northwardWindNeutral = northwardWindNeutral;
    return this;
  }

  /**
   * Get northwardWindNeutral
   * @return northwardWindNeutral
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponseNorthwardWindNeutral getNorthwardWindNeutral() {
    return northwardWindNeutral;
  }

  public void setNorthwardWindNeutral(AppApiWfsEndpointsWFSGetValues200ResponseNorthwardWindNeutral northwardWindNeutral) {
    this.northwardWindNeutral = northwardWindNeutral;
  }


  public AppApiWfsEndpointsWFSGetValues200Response point(AppApiWfsEndpointsWFSGetValues200ResponsePoint point) {
    this.point = point;
    return this;
  }

  /**
   * Get point
   * @return point
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponsePoint getPoint() {
    return point;
  }

  public void setPoint(AppApiWfsEndpointsWFSGetValues200ResponsePoint point) {
    this.point = point;
  }


  public AppApiWfsEndpointsWFSGetValues200Response tempNeutral(AppApiWfsEndpointsWFSGetValues200ResponseTempNeutral tempNeutral) {
    this.tempNeutral = tempNeutral;
    return this;
  }

  /**
   * Get tempNeutral
   * @return tempNeutral
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponseTempNeutral getTempNeutral() {
    return tempNeutral;
  }

  public void setTempNeutral(AppApiWfsEndpointsWFSGetValues200ResponseTempNeutral tempNeutral) {
    this.tempNeutral = tempNeutral;
  }


  public AppApiWfsEndpointsWFSGetValues200Response totalMassDensity(AppApiWfsEndpointsWFSGetValues200ResponseTotalMassDensity totalMassDensity) {
    this.totalMassDensity = totalMassDensity;
    return this;
  }

  /**
   * Get totalMassDensity
   * @return totalMassDensity
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponseTotalMassDensity getTotalMassDensity() {
    return totalMassDensity;
  }

  public void setTotalMassDensity(AppApiWfsEndpointsWFSGetValues200ResponseTotalMassDensity totalMassDensity) {
    this.totalMassDensity = totalMassDensity;
  }


  public AppApiWfsEndpointsWFSGetValues200Response upwardWindNeutral(AppApiWfsEndpointsWFSGetValues200ResponseUpwardWindNeutral upwardWindNeutral) {
    this.upwardWindNeutral = upwardWindNeutral;
    return this;
  }

  /**
   * Get upwardWindNeutral
   * @return upwardWindNeutral
   */
  @javax.annotation.Nullable
  public AppApiWfsEndpointsWFSGetValues200ResponseUpwardWindNeutral getUpwardWindNeutral() {
    return upwardWindNeutral;
  }

  public void setUpwardWindNeutral(AppApiWfsEndpointsWFSGetValues200ResponseUpwardWindNeutral upwardWindNeutral) {
    this.upwardWindNeutral = upwardWindNeutral;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppApiWfsEndpointsWFSGetValues200Response appApiWfsEndpointsWFSGetValues200Response = (AppApiWfsEndpointsWFSGetValues200Response) o;
    return Objects.equals(this.n2Density, appApiWfsEndpointsWFSGetValues200Response.n2Density) &&
        Objects.equals(this.o2Density, appApiWfsEndpointsWFSGetValues200Response.o2Density) &&
        Objects.equals(this.oDensity, appApiWfsEndpointsWFSGetValues200Response.oDensity) &&
        Objects.equals(this.eastwardWindNeutral, appApiWfsEndpointsWFSGetValues200Response.eastwardWindNeutral) &&
        Objects.equals(this.northwardWindNeutral, appApiWfsEndpointsWFSGetValues200Response.northwardWindNeutral) &&
        Objects.equals(this.point, appApiWfsEndpointsWFSGetValues200Response.point) &&
        Objects.equals(this.tempNeutral, appApiWfsEndpointsWFSGetValues200Response.tempNeutral) &&
        Objects.equals(this.totalMassDensity, appApiWfsEndpointsWFSGetValues200Response.totalMassDensity) &&
        Objects.equals(this.upwardWindNeutral, appApiWfsEndpointsWFSGetValues200Response.upwardWindNeutral);
  }

  @Override
  public int hashCode() {
    return Objects.hash(n2Density, o2Density, oDensity, eastwardWindNeutral, northwardWindNeutral, point, tempNeutral, totalMassDensity, upwardWindNeutral);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppApiWfsEndpointsWFSGetValues200Response {\n");
    sb.append("    n2Density: ").append(toIndentedString(n2Density)).append("\n");
    sb.append("    o2Density: ").append(toIndentedString(o2Density)).append("\n");
    sb.append("    oDensity: ").append(toIndentedString(oDensity)).append("\n");
    sb.append("    eastwardWindNeutral: ").append(toIndentedString(eastwardWindNeutral)).append("\n");
    sb.append("    northwardWindNeutral: ").append(toIndentedString(northwardWindNeutral)).append("\n");
    sb.append("    point: ").append(toIndentedString(point)).append("\n");
    sb.append("    tempNeutral: ").append(toIndentedString(tempNeutral)).append("\n");
    sb.append("    totalMassDensity: ").append(toIndentedString(totalMassDensity)).append("\n");
    sb.append("    upwardWindNeutral: ").append(toIndentedString(upwardWindNeutral)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("N2_density");
    openapiFields.add("O2_density");
    openapiFields.add("O_density");
    openapiFields.add("eastward_wind_neutral");
    openapiFields.add("northward_wind_neutral");
    openapiFields.add("point");
    openapiFields.add("temp_neutral");
    openapiFields.add("total_mass_density");
    openapiFields.add("upward_wind_neutral");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppApiWfsEndpointsWFSGetValues200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppApiWfsEndpointsWFSGetValues200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppApiWfsEndpointsWFSGetValues200Response is not found in the empty JSON string", AppApiWfsEndpointsWFSGetValues200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppApiWfsEndpointsWFSGetValues200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppApiWfsEndpointsWFSGetValues200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `N2_density`
      if (jsonObj.get("N2_density") != null && !jsonObj.get("N2_density").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponseN2Density.validateJsonElement(jsonObj.get("N2_density"));
      }
      // validate the optional field `O2_density`
      if (jsonObj.get("O2_density") != null && !jsonObj.get("O2_density").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponseO2Density.validateJsonElement(jsonObj.get("O2_density"));
      }
      // validate the optional field `O_density`
      if (jsonObj.get("O_density") != null && !jsonObj.get("O_density").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponseODensity.validateJsonElement(jsonObj.get("O_density"));
      }
      // validate the optional field `eastward_wind_neutral`
      if (jsonObj.get("eastward_wind_neutral") != null && !jsonObj.get("eastward_wind_neutral").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponseEastwardWindNeutral.validateJsonElement(jsonObj.get("eastward_wind_neutral"));
      }
      // validate the optional field `northward_wind_neutral`
      if (jsonObj.get("northward_wind_neutral") != null && !jsonObj.get("northward_wind_neutral").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponseNorthwardWindNeutral.validateJsonElement(jsonObj.get("northward_wind_neutral"));
      }
      // validate the optional field `point`
      if (jsonObj.get("point") != null && !jsonObj.get("point").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponsePoint.validateJsonElement(jsonObj.get("point"));
      }
      // validate the optional field `temp_neutral`
      if (jsonObj.get("temp_neutral") != null && !jsonObj.get("temp_neutral").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponseTempNeutral.validateJsonElement(jsonObj.get("temp_neutral"));
      }
      // validate the optional field `total_mass_density`
      if (jsonObj.get("total_mass_density") != null && !jsonObj.get("total_mass_density").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponseTotalMassDensity.validateJsonElement(jsonObj.get("total_mass_density"));
      }
      // validate the optional field `upward_wind_neutral`
      if (jsonObj.get("upward_wind_neutral") != null && !jsonObj.get("upward_wind_neutral").isJsonNull()) {
        AppApiWfsEndpointsWFSGetValues200ResponseUpwardWindNeutral.validateJsonElement(jsonObj.get("upward_wind_neutral"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppApiWfsEndpointsWFSGetValues200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppApiWfsEndpointsWFSGetValues200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppApiWfsEndpointsWFSGetValues200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppApiWfsEndpointsWFSGetValues200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<AppApiWfsEndpointsWFSGetValues200Response>() {
           @Override
           public void write(JsonWriter out, AppApiWfsEndpointsWFSGetValues200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppApiWfsEndpointsWFSGetValues200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppApiWfsEndpointsWFSGetValues200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppApiWfsEndpointsWFSGetValues200Response
   * @throws IOException if the JSON string is invalid with respect to AppApiWfsEndpointsWFSGetValues200Response
   */
  public static AppApiWfsEndpointsWFSGetValues200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppApiWfsEndpointsWFSGetValues200Response.class);
  }

  /**
   * Convert an instance of AppApiWfsEndpointsWFSGetValues200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

