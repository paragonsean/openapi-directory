/**
 * Atmosphere API
 * Instantly access empirical models of atmospheric density and  composition that are recommended by the Committee on Space Research (COSPAR) for  satellite drag calculations. <br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response.h
 *
 * 
 */

#ifndef OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response_H
#define OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response_H

#include <QJsonObject>

#include "OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp.h"
#include "OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response_ap.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp;
class OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response_ap;

class OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response : public OAIObject {
public:
    OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response();
    OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response(QString json);
    ~OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getArDensity() const;
    void setArDensity(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &ar_density);
    bool is_ar_density_Set() const;
    bool is_ar_density_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getHDensity() const;
    void setHDensity(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &h_density);
    bool is_h_density_Set() const;
    bool is_h_density_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getHeDensity() const;
    void setHeDensity(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &he_density);
    bool is_he_density_Set() const;
    bool is_he_density_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getN2Density() const;
    void setN2Density(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &n2_density);
    bool is_n2_density_Set() const;
    bool is_n2_density_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getNDensity() const;
    void setNDensity(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &n_density);
    bool is_n_density_Set() const;
    bool is_n_density_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getO2Density() const;
    void setO2Density(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &o2_density);
    bool is_o2_density_Set() const;
    bool is_o2_density_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getODensity() const;
    void setODensity(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &o_density);
    bool is_o_density_Set() const;
    bool is_o_density_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getAnomalousODensity() const;
    void setAnomalousODensity(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &anomalous_o_density);
    bool is_anomalous_o_density_Set() const;
    bool is_anomalous_o_density_Valid() const;

    OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response_ap getAp() const;
    void setAp(const OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response_ap &ap);
    bool is_ap_Set() const;
    bool is_ap_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getAtAltTemp() const;
    void setAtAltTemp(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &at_alt_temp);
    bool is_at_alt_temp_Set() const;
    bool is_at_alt_temp_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getExosphericTemp() const;
    void setExosphericTemp(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &exospheric_temp);
    bool is_exospheric_temp_Set() const;
    bool is_exospheric_temp_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getF107() const;
    void setF107(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &f107);
    bool is_f107_Set() const;
    bool is_f107_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getF107a() const;
    void setF107a(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &f107a);
    bool is_f107a_Set() const;
    bool is_f107a_Valid() const;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp getTotalMassDensity() const;
    void setTotalMassDensity(const OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp &total_mass_density);
    bool is_total_mass_density_Set() const;
    bool is_total_mass_density_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_ar_density;
    bool m_ar_density_isSet;
    bool m_ar_density_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_h_density;
    bool m_h_density_isSet;
    bool m_h_density_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_he_density;
    bool m_he_density_isSet;
    bool m_he_density_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_n2_density;
    bool m_n2_density_isSet;
    bool m_n2_density_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_n_density;
    bool m_n_density_isSet;
    bool m_n_density_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_o2_density;
    bool m_o2_density_isSet;
    bool m_o2_density_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_o_density;
    bool m_o_density_isSet;
    bool m_o_density_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_anomalous_o_density;
    bool m_anomalous_o_density_isSet;
    bool m_anomalous_o_density_isValid;

    OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response_ap m_ap;
    bool m_ap_isSet;
    bool m_ap_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_at_alt_temp;
    bool m_at_alt_temp_isSet;
    bool m_at_alt_temp_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_exospheric_temp;
    bool m_exospheric_temp_isSet;
    bool m_exospheric_temp_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_f107;
    bool m_f107_isSet;
    bool m_f107_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_f107a;
    bool m_f107a_isSet;
    bool m_f107a_isValid;

    OAIApp_api_endpoints_JB2008_sample_atmosphere_200_response_at_alt_temp m_total_mass_density;
    bool m_total_mass_density_isSet;
    bool m_total_mass_density_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response)

#endif // OAIApp_api_endpoints_NRLMSISE00_sample_atmosphere_200_response_H
