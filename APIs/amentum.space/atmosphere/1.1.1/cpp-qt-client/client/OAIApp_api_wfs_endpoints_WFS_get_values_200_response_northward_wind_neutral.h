/**
 * Atmosphere API
 * Instantly access empirical models of atmospheric density and  composition that are recommended by the Committee on Space Research (COSPAR) for  satellite drag calculations. <br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral.h
 *
 * Northerly component of neutral wind velocity in (m/s). 
 */

#ifndef OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral_H
#define OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral : public OAIObject {
public:
    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral();
    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral(QString json);
    ~OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUnits() const;
    void setUnits(const QString &units);
    bool is_units_Set() const;
    bool is_units_Valid() const;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_units;
    bool m_units_isSet;
    bool m_units_isValid;

    double m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral)

#endif // OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral_H
