/**
 * Atmosphere API
 * Instantly access empirical models of atmospheric density and  composition that are recommended by the Committee on Space Research (COSPAR) for  satellite drag calculations. <br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApp_api_wfs_endpoints_WFS_get_values_200_response.h
 *
 * 
 */

#ifndef OAIApp_api_wfs_endpoints_WFS_get_values_200_response_H
#define OAIApp_api_wfs_endpoints_WFS_get_values_200_response_H

#include <QJsonObject>

#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_N2_density.h"
#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O2_density.h"
#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O_density.h"
#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_eastward_wind_neutral.h"
#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral.h"
#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_point.h"
#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_temp_neutral.h"
#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_total_mass_density.h"
#include "OAIApp_api_wfs_endpoints_WFS_get_values_200_response_upward_wind_neutral.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_N2_density;
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O2_density;
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O_density;
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_eastward_wind_neutral;
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral;
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_point;
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_temp_neutral;
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_total_mass_density;
class OAIApp_api_wfs_endpoints_WFS_get_values_200_response_upward_wind_neutral;

class OAIApp_api_wfs_endpoints_WFS_get_values_200_response : public OAIObject {
public:
    OAIApp_api_wfs_endpoints_WFS_get_values_200_response();
    OAIApp_api_wfs_endpoints_WFS_get_values_200_response(QString json);
    ~OAIApp_api_wfs_endpoints_WFS_get_values_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_N2_density getN2Density() const;
    void setN2Density(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_N2_density &n2_density);
    bool is_n2_density_Set() const;
    bool is_n2_density_Valid() const;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O2_density getO2Density() const;
    void setO2Density(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O2_density &o2_density);
    bool is_o2_density_Set() const;
    bool is_o2_density_Valid() const;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O_density getODensity() const;
    void setODensity(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O_density &o_density);
    bool is_o_density_Set() const;
    bool is_o_density_Valid() const;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_eastward_wind_neutral getEastwardWindNeutral() const;
    void setEastwardWindNeutral(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_eastward_wind_neutral &eastward_wind_neutral);
    bool is_eastward_wind_neutral_Set() const;
    bool is_eastward_wind_neutral_Valid() const;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral getNorthwardWindNeutral() const;
    void setNorthwardWindNeutral(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral &northward_wind_neutral);
    bool is_northward_wind_neutral_Set() const;
    bool is_northward_wind_neutral_Valid() const;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_point getPoint() const;
    void setPoint(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_point &point);
    bool is_point_Set() const;
    bool is_point_Valid() const;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_temp_neutral getTempNeutral() const;
    void setTempNeutral(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_temp_neutral &temp_neutral);
    bool is_temp_neutral_Set() const;
    bool is_temp_neutral_Valid() const;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_total_mass_density getTotalMassDensity() const;
    void setTotalMassDensity(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_total_mass_density &total_mass_density);
    bool is_total_mass_density_Set() const;
    bool is_total_mass_density_Valid() const;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_upward_wind_neutral getUpwardWindNeutral() const;
    void setUpwardWindNeutral(const OAIApp_api_wfs_endpoints_WFS_get_values_200_response_upward_wind_neutral &upward_wind_neutral);
    bool is_upward_wind_neutral_Set() const;
    bool is_upward_wind_neutral_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_N2_density m_n2_density;
    bool m_n2_density_isSet;
    bool m_n2_density_isValid;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O2_density m_o2_density;
    bool m_o2_density_isSet;
    bool m_o2_density_isValid;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_O_density m_o_density;
    bool m_o_density_isSet;
    bool m_o_density_isValid;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_eastward_wind_neutral m_eastward_wind_neutral;
    bool m_eastward_wind_neutral_isSet;
    bool m_eastward_wind_neutral_isValid;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_northward_wind_neutral m_northward_wind_neutral;
    bool m_northward_wind_neutral_isSet;
    bool m_northward_wind_neutral_isValid;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_point m_point;
    bool m_point_isSet;
    bool m_point_isValid;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_temp_neutral m_temp_neutral;
    bool m_temp_neutral_isSet;
    bool m_temp_neutral_isValid;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_total_mass_density m_total_mass_density;
    bool m_total_mass_density_isSet;
    bool m_total_mass_density_isValid;

    OAIApp_api_wfs_endpoints_WFS_get_values_200_response_upward_wind_neutral m_upward_wind_neutral;
    bool m_upward_wind_neutral_isSet;
    bool m_upward_wind_neutral_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApp_api_wfs_endpoints_WFS_get_values_200_response)

#endif // OAIApp_api_wfs_endpoints_WFS_get_values_200_response_H
