/**
 * Gravity API
 * The gravitational field of the earth is non-uniform.  The <a href='https://en.wikipedia.org/wiki/Geoid'>geoid</a> is the shape the  ocean surface would take if only gravity and the rotation of the Earth   were considered. The geoid is the surface that defines zero elevation.<br><br>  The geoid height is the difference between an ideal reference ellipsoid  and the geoid.<br><br> The gravity anomaly is the difference between the acceleration due to gravity on the Earth's surface and the value calculated assuming the reference ellipsoid.<br><br> The official Earth Gravitational Model <a href=https://en.wikipedia.org/wiki/Earth_Gravitational_Model#EGM2008/>EGM2008</a> was developed and  released to the public by the National Geospatial-Intelligence Agency (NGA).<br><br> Our EGM2008 API provides on-demand access to the EGM2008 model, as implemented by the open-source GeographicLib  <a href=https://geographiclib.sourceforge.io/html/gravity.html>Gravity</a> library.<br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnomaly.h
 *
 * 
 */

#ifndef OAIAnomaly_H
#define OAIAnomaly_H

#include <QJsonObject>

#include "OAIAnomaly_eta.h"
#include "OAIAnomaly_gravity_anomaly.h"
#include "OAIAnomaly_xi.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnomaly_eta;
class OAIAnomaly_gravity_anomaly;
class OAIAnomaly_xi;

class OAIAnomaly : public OAIObject {
public:
    OAIAnomaly();
    OAIAnomaly(QString json);
    ~OAIAnomaly() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnomaly_eta getEta() const;
    void setEta(const OAIAnomaly_eta &eta);
    bool is_eta_Set() const;
    bool is_eta_Valid() const;

    OAIAnomaly_gravity_anomaly getGravityAnomaly() const;
    void setGravityAnomaly(const OAIAnomaly_gravity_anomaly &gravity_anomaly);
    bool is_gravity_anomaly_Set() const;
    bool is_gravity_anomaly_Valid() const;

    OAIAnomaly_xi getXi() const;
    void setXi(const OAIAnomaly_xi &xi);
    bool is_xi_Set() const;
    bool is_xi_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnomaly_eta m_eta;
    bool m_eta_isSet;
    bool m_eta_isValid;

    OAIAnomaly_gravity_anomaly m_gravity_anomaly;
    bool m_gravity_anomaly_isSet;
    bool m_gravity_anomaly_isValid;

    OAIAnomaly_xi m_xi;
    bool m_xi_isSet;
    bool m_xi_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnomaly)

#endif // OAIAnomaly_H
