# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.anomaly_eta import AnomalyEta
from openapi_server.models.anomaly_gravity_anomaly import AnomalyGravityAnomaly
from openapi_server.models.anomaly_xi import AnomalyXi
from openapi_server import util


class Anomaly(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eta: AnomalyEta=None, gravity_anomaly: AnomalyGravityAnomaly=None, xi: AnomalyXi=None):
        """Anomaly - a model defined in OpenAPI

        :param eta: The eta of this Anomaly.
        :param gravity_anomaly: The gravity_anomaly of this Anomaly.
        :param xi: The xi of this Anomaly.
        """
        self.openapi_types = {
            'eta': AnomalyEta,
            'gravity_anomaly': AnomalyGravityAnomaly,
            'xi': AnomalyXi
        }

        self.attribute_map = {
            'eta': 'eta',
            'gravity_anomaly': 'gravity_anomaly',
            'xi': 'xi'
        }

        self._eta = eta
        self._gravity_anomaly = gravity_anomaly
        self._xi = xi

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Anomaly':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Anomaly of this Anomaly.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eta(self):
        """Gets the eta of this Anomaly.


        :return: The eta of this Anomaly.
        :rtype: AnomalyEta
        """
        return self._eta

    @eta.setter
    def eta(self, eta):
        """Sets the eta of this Anomaly.


        :param eta: The eta of this Anomaly.
        :type eta: AnomalyEta
        """

        self._eta = eta

    @property
    def gravity_anomaly(self):
        """Gets the gravity_anomaly of this Anomaly.


        :return: The gravity_anomaly of this Anomaly.
        :rtype: AnomalyGravityAnomaly
        """
        return self._gravity_anomaly

    @gravity_anomaly.setter
    def gravity_anomaly(self, gravity_anomaly):
        """Sets the gravity_anomaly of this Anomaly.


        :param gravity_anomaly: The gravity_anomaly of this Anomaly.
        :type gravity_anomaly: AnomalyGravityAnomaly
        """

        self._gravity_anomaly = gravity_anomaly

    @property
    def xi(self):
        """Gets the xi of this Anomaly.


        :return: The xi of this Anomaly.
        :rtype: AnomalyXi
        """
        return self._xi

    @xi.setter
    def xi(self, xi):
        """Sets the xi of this Anomaly.


        :param xi: The xi of this Anomaly.
        :type xi: AnomalyXi
        """

        self._xi = xi
