/**
 * Gravity API
 * The gravitational field of the earth is non-uniform.  The <a href='https://en.wikipedia.org/wiki/Geoid'>geoid</a> is the shape the  ocean surface would take if only gravity and the rotation of the Earth   were considered. The geoid is the surface that defines zero elevation.<br><br>  The geoid height is the difference between an ideal reference ellipsoid  and the geoid.<br><br> The gravity anomaly is the difference between the acceleration due to gravity on the Earth's surface and the value calculated assuming the reference ellipsoid.<br><br> The official Earth Gravitational Model <a href=https://en.wikipedia.org/wiki/Earth_Gravitational_Model#EGM2008/>EGM2008</a> was developed and  released to the public by the National Geospatial-Intelligence Agency (NGA).<br><br> Our EGM2008 API provides on-demand access to the EGM2008 model, as implemented by the open-source GeographicLib  <a href=https://geographiclib.sourceforge.io/html/gravity.html>Gravity</a> library.<br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Anomaly from './model/Anomaly';
import AnomalyEta from './model/AnomalyEta';
import AnomalyGravityAnomaly from './model/AnomalyGravityAnomaly';
import AnomalyXi from './model/AnomalyXi';
import Height from './model/Height';
import HeightHeight from './model/HeightHeight';
import Egm2008Api from './api/Egm2008Api';


/**
* The gravitational field of the earth is non-uniform.  The &lt;a href&#x3D;&#39;https://en.wikipedia.org/wiki/Geoid&#39;&gt;geoid&lt;/a&gt; is the shape the  ocean surface would take if only gravity and the rotation of the Earth   were considered. The geoid is the surface that defines zero elevation.&lt;br&gt;&lt;br&gt;  The geoid height is the difference between an ideal reference ellipsoid  and the geoid.&lt;br&gt;&lt;br&gt; The gravity anomaly is the difference between the acceleration due to gravity on the Earth&#39;s surface and the value calculated assuming the reference ellipsoid.&lt;br&gt;&lt;br&gt; The official Earth Gravitational Model &lt;a href&#x3D;https://en.wikipedia.org/wiki/Earth_Gravitational_Model#EGM2008/&gt;EGM2008&lt;/a&gt; was developed and  released to the public by the National Geospatial-Intelligence Agency (NGA).&lt;br&gt;&lt;br&gt; Our EGM2008 API provides on-demand access to the EGM2008 model, as implemented by the open-source GeographicLib  &lt;a href&#x3D;https://geographiclib.sourceforge.io/html/gravity.html&gt;Gravity&lt;/a&gt; library.&lt;br&gt;&lt;br&gt; API requests must contain a key \&quot;API-Key\&quot; in the header (see code samples). Obtain a key from  &lt;a href&#x3D;&#39;https://developer.amentum.io&#39;&gt;here&lt;/a&gt;. &lt;br&gt;&lt;br&gt;  Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. &lt;br&gt;&lt;br&gt; Copyright &lt;a href&#x3D;&#39;https://amentum.space&#39;&gt;Amentum Pty Ltd&lt;/a&gt; 2021. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GravityApi = require('index'); // See note below*.
* var xxxSvc = new GravityApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GravityApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GravityApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GravityApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.1.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Anomaly model constructor.
     * @property {module:model/Anomaly}
     */
    Anomaly,

    /**
     * The AnomalyEta model constructor.
     * @property {module:model/AnomalyEta}
     */
    AnomalyEta,

    /**
     * The AnomalyGravityAnomaly model constructor.
     * @property {module:model/AnomalyGravityAnomaly}
     */
    AnomalyGravityAnomaly,

    /**
     * The AnomalyXi model constructor.
     * @property {module:model/AnomalyXi}
     */
    AnomalyXi,

    /**
     * The Height model constructor.
     * @property {module:model/Height}
     */
    Height,

    /**
     * The HeightHeight model constructor.
     * @property {module:model/HeightHeight}
     */
    HeightHeight,

    /**
    * The Egm2008Api service constructor.
    * @property {module:api/Egm2008Api}
    */
    Egm2008Api
};
