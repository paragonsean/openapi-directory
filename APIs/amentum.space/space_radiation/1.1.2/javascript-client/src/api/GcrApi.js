/**
 * Space Radiation API
 * Space has a hostile radiation environment that increases the risk of cancers in humans and malfunctions in spacecraft electronics. The types of space  radiation of primary concern are:   <ul>     <li>         Galactic Cosmic Rays from outside our solar system generated by          supernovae and other phenomena;     </li>     <li>         Solar Energetic Particles produced by the Sun during intense and         sporadic bursts of activity; and     </li>     <li>         Trapped Radiation: energetic particles confined by Earth's magnetic         field, usually comprising an inner belt of mostly high energy protons          and an outer belt dominated by lower energy electrons and plasma.     </li>   </ul>   Understanding the space radiation environment for a particular mission profile is becoming increasingly important. Commercial off-the-shelf electronic components  that aren't resilient to space radiation are now prevalent. Longer duration  missions to cislunar space, Mars, and beyond are placing astronauts at greater  risk of radiation exposure. <br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2022. 
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FluxAtEnergy from '../model/FluxAtEnergy';

/**
* Gcr service.
* @module api/GcrApi
* @version 1.1.2
*/
export default class GcrApi {

    /**
    * Constructs a new GcrApi. 
    * @alias module:api/GcrApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appApiEndpointsGCRCalculateDlrFlux operation.
     * @callback module:api/GcrApi~appApiEndpointsGCRCalculateDlrFluxCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FluxAtEnergy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Calculate particle flux  
     * for the given energy, atomic number, and date. 
     * @param {Number} year <br>
     * @param {Number} month <br>
     * @param {Number} day <br>
     * @param {Number} z <br>Particle atomic number
     * @param {Number} energy <br>Particle energy in MeV/n<br> Valid range: [0, 10<sup>6</sup>] MeV/n<br>  
     * @param {module:api/GcrApi~appApiEndpointsGCRCalculateDlrFluxCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FluxAtEnergy}
     */
    appApiEndpointsGCRCalculateDlrFlux(year, month, day, z, energy, callback) {
      let postBody = null;
      // verify the required parameter 'year' is set
      if (year === undefined || year === null) {
        throw new Error("Missing the required parameter 'year' when calling appApiEndpointsGCRCalculateDlrFlux");
      }
      // verify the required parameter 'month' is set
      if (month === undefined || month === null) {
        throw new Error("Missing the required parameter 'month' when calling appApiEndpointsGCRCalculateDlrFlux");
      }
      // verify the required parameter 'day' is set
      if (day === undefined || day === null) {
        throw new Error("Missing the required parameter 'day' when calling appApiEndpointsGCRCalculateDlrFlux");
      }
      // verify the required parameter 'z' is set
      if (z === undefined || z === null) {
        throw new Error("Missing the required parameter 'z' when calling appApiEndpointsGCRCalculateDlrFlux");
      }
      // verify the required parameter 'energy' is set
      if (energy === undefined || energy === null) {
        throw new Error("Missing the required parameter 'energy' when calling appApiEndpointsGCRCalculateDlrFlux");
      }

      let pathParams = {
      };
      let queryParams = {
        'year': year,
        'month': month,
        'day': day,
        'z': z,
        'energy': energy
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FluxAtEnergy;
      return this.apiClient.callApi(
        '/gcr/flux_dlr', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
