/**
 * Space Radiation API
 * Space has a hostile radiation environment that increases the risk of cancers in humans and malfunctions in spacecraft electronics. The types of space  radiation of primary concern are:   <ul>     <li>         Galactic Cosmic Rays from outside our solar system generated by          supernovae and other phenomena;     </li>     <li>         Solar Energetic Particles produced by the Sun during intense and         sporadic bursts of activity; and     </li>     <li>         Trapped Radiation: energetic particles confined by Earth's magnetic         field, usually comprising an inner belt of mostly high energy protons          and an outer belt dominated by lower energy electrons and plasma.     </li>   </ul>   Understanding the space radiation environment for a particular mission profile is becoming increasingly important. Commercial off-the-shelf electronic components  that aren't resilient to space radiation are now prevalent. Longer duration  missions to cislunar space, Mars, and beyond are placing astronauts at greater  risk of radiation exposure. <br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2022. 
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FluxAtEnergyFlux from './FluxAtEnergyFlux';

/**
 * The FluxAtEnergy model module.
 * @module model/FluxAtEnergy
 * @version 1.1.2
 */
class FluxAtEnergy {
    /**
     * Constructs a new <code>FluxAtEnergy</code>.
     * @alias module:model/FluxAtEnergy
     */
    constructor() { 
        
        FluxAtEnergy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FluxAtEnergy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FluxAtEnergy} obj Optional instance to populate.
     * @return {module:model/FluxAtEnergy} The populated <code>FluxAtEnergy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FluxAtEnergy();

            if (data.hasOwnProperty('flux')) {
                obj['flux'] = FluxAtEnergyFlux.constructFromObject(data['flux']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FluxAtEnergy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FluxAtEnergy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `flux`
        if (data['flux']) { // data not null
          FluxAtEnergyFlux.validateJSON(data['flux']);
        }

        return true;
    }


}



/**
 * @member {module:model/FluxAtEnergyFlux} flux
 */
FluxAtEnergy.prototype['flux'] = undefined;






export default FluxAtEnergy;

