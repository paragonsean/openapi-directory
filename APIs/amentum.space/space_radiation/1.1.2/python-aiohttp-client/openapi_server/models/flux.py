# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flux_energies import FluxEnergies
from openapi_server.models.flux_flux import FluxFlux
from openapi_server import util


class Flux(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, energies: FluxEnergies=None, flux: FluxFlux=None):
        """Flux - a model defined in OpenAPI

        :param energies: The energies of this Flux.
        :param flux: The flux of this Flux.
        """
        self.openapi_types = {
            'energies': FluxEnergies,
            'flux': FluxFlux
        }

        self.attribute_map = {
            'energies': 'energies',
            'flux': 'flux'
        }

        self._energies = energies
        self._flux = flux

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Flux':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Flux of this Flux.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def energies(self):
        """Gets the energies of this Flux.


        :return: The energies of this Flux.
        :rtype: FluxEnergies
        """
        return self._energies

    @energies.setter
    def energies(self, energies):
        """Sets the energies of this Flux.


        :param energies: The energies of this Flux.
        :type energies: FluxEnergies
        """

        self._energies = energies

    @property
    def flux(self):
        """Gets the flux of this Flux.


        :return: The flux of this Flux.
        :rtype: FluxFlux
        """
        return self._flux

    @flux.setter
    def flux(self, flux):
        """Sets the flux of this Flux.


        :param flux: The flux of this Flux.
        :type flux: FluxFlux
        """

        self._flux = flux
