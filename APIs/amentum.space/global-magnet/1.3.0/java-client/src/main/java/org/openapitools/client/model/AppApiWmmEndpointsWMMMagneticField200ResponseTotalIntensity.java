/*
 * Geomag API
 *  The World Magnetic Model calculates the intensity and direction of the Earth's magnetic field on a specific date-time, geodetic altitude, latitude, and longitude. It is relied upon throughout the world for navigation, mineral exploration, atmospheric and space science, and is installed on billions of devices.  <br><br> A comprehensive description of the World Magnetic Model, including its  limitations, can be found <a href='https://www.ngdc.noaa.gov/geomag/WMM/'>here</a>.  <br><br> We provide a RESTful API to access the out-of-cycle  World Magnetic Model (WMM2015v2) valid for years 2015.0 - 2020.0 and WMM2020 valid for years 2020.0 - 2025.0<br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Total magnetic field intensity in nano Teslas. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:32.250166-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity {
  public static final String SERIALIZED_NAME_UNITS = "units";
  @SerializedName(SERIALIZED_NAME_UNITS)
  private String units;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private BigDecimal value;

  public AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity() {
  }

  public AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity units(String units) {
    this.units = units;
    return this;
  }

  /**
   * Get units
   * @return units
   */
  @javax.annotation.Nullable
  public String getUnits() {
    return units;
  }

  public void setUnits(String units) {
    this.units = units;
  }


  public AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity value(BigDecimal value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public BigDecimal getValue() {
    return value;
  }

  public void setValue(BigDecimal value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity appApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity = (AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity) o;
    return Objects.equals(this.units, appApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity.units) &&
        Objects.equals(this.value, appApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(units, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity {\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("units");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity is not found in the empty JSON string", AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("units") != null && !jsonObj.get("units").isJsonNull()) && !jsonObj.get("units").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `units` to be a primitive type in the JSON string but got `%s`", jsonObj.get("units").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity.class));

       return (TypeAdapter<T>) new TypeAdapter<AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity>() {
           @Override
           public void write(JsonWriter out, AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity
   * @throws IOException if the JSON string is invalid with respect to AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity
   */
  public static AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity.class);
  }

  /**
   * Convert an instance of AppApiWmmEndpointsWMMMagneticField200ResponseTotalIntensity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

