/**
 * Geomag API
 *  The World Magnetic Model calculates the intensity and direction of the Earth's magnetic field on a specific date-time, geodetic altitude, latitude, and longitude. It is relied upon throughout the world for navigation, mineral exploration, atmospheric and space science, and is installed on billions of devices.  <br><br> A comprehensive description of the World Magnetic Model, including its  limitations, can be found <a href='https://www.ngdc.noaa.gov/geomag/WMM/'>here</a>.  <br><br> We provide a RESTful API to access the out-of-cycle  World Magnetic Model (WMM2015v2) valid for years 2015.0 - 2020.0 and WMM2020 valid for years 2020.0 - 2025.0<br><br> API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  <a href='https://developer.amentum.io'>here</a>. <br><br>  Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br> Help us improve the quality of our web APIs by completing our 2 minute survey <a href=\"https://www.surveymonkey.com/r/CTDTRBN\">here</a>.<br><br> Copyright <a href='https://amentum.space'>Amentum Pty Ltd</a> 2021. 
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GeomagApi);
  }
}(this, function(expect, GeomagApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GeomagApi.AppApiWmmEndpointsWMMMagneticField200Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppApiWmmEndpointsWMMMagneticField200Response', function() {
    it('should create an instance of AppApiWmmEndpointsWMMMagneticField200Response', function() {
      // uncomment below and update the code to test AppApiWmmEndpointsWMMMagneticField200Response
      //var instance = new GeomagApi.AppApiWmmEndpointsWMMMagneticField200Response();
      //expect(instance).to.be.a(GeomagApi.AppApiWmmEndpointsWMMMagneticField200Response);
    });

    it('should have the property declination (base name: "declination")', function() {
      // uncomment below and update the code to test the property declination
      //var instance = new GeomagApi.AppApiWmmEndpointsWMMMagneticField200Response();
      //expect(instance).to.be();
    });

    it('should have the property gridVariation (base name: "grid_variation")', function() {
      // uncomment below and update the code to test the property gridVariation
      //var instance = new GeomagApi.AppApiWmmEndpointsWMMMagneticField200Response();
      //expect(instance).to.be();
    });

    it('should have the property inclination (base name: "inclination")', function() {
      // uncomment below and update the code to test the property inclination
      //var instance = new GeomagApi.AppApiWmmEndpointsWMMMagneticField200Response();
      //expect(instance).to.be();
    });

    it('should have the property totalIntensity (base name: "total_intensity")', function() {
      // uncomment below and update the code to test the property totalIntensity
      //var instance = new GeomagApi.AppApiWmmEndpointsWMMMagneticField200Response();
      //expect(instance).to.be();
    });

  });

}));
