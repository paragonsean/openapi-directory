# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SandboxRetryCacheEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_key: str=None, count: int=None, expiration_timestamp: datetime=None):
        """SandboxRetryCacheEntry - a model defined in OpenAPI

        :param cache_key: The cache_key of this SandboxRetryCacheEntry.
        :param count: The count of this SandboxRetryCacheEntry.
        :param expiration_timestamp: The expiration_timestamp of this SandboxRetryCacheEntry.
        """
        self.openapi_types = {
            'cache_key': str,
            'count': int,
            'expiration_timestamp': datetime
        }

        self.attribute_map = {
            'cache_key': 'cacheKey',
            'count': 'count',
            'expiration_timestamp': 'expirationTimestamp'
        }

        self._cache_key = cache_key
        self._count = count
        self._expiration_timestamp = expiration_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SandboxRetryCacheEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SandboxRetryCacheEntry of this SandboxRetryCacheEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_key(self):
        """Gets the cache_key of this SandboxRetryCacheEntry.

        Cache key

        :return: The cache_key of this SandboxRetryCacheEntry.
        :rtype: str
        """
        return self._cache_key

    @cache_key.setter
    def cache_key(self, cache_key):
        """Sets the cache_key of this SandboxRetryCacheEntry.

        Cache key

        :param cache_key: The cache_key of this SandboxRetryCacheEntry.
        :type cache_key: str
        """

        self._cache_key = cache_key

    @property
    def count(self):
        """Gets the count of this SandboxRetryCacheEntry.

        Number of retries ( up to 4 )

        :return: The count of this SandboxRetryCacheEntry.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this SandboxRetryCacheEntry.

        Number of retries ( up to 4 )

        :param count: The count of this SandboxRetryCacheEntry.
        :type count: int
        """

        self._count = count

    @property
    def expiration_timestamp(self):
        """Gets the expiration_timestamp of this SandboxRetryCacheEntry.

        Expiration timestamp of the entry

        :return: The expiration_timestamp of this SandboxRetryCacheEntry.
        :rtype: datetime
        """
        return self._expiration_timestamp

    @expiration_timestamp.setter
    def expiration_timestamp(self, expiration_timestamp):
        """Sets the expiration_timestamp of this SandboxRetryCacheEntry.

        Expiration timestamp of the entry

        :param expiration_timestamp: The expiration_timestamp of this SandboxRetryCacheEntry.
        :type expiration_timestamp: datetime
        """

        self._expiration_timestamp = expiration_timestamp
