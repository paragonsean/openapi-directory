/*
 * Swagger Generator
 * This is an online swagger codegen server.  You can find out more at https://github.com/swagger-api/swagger-codegen or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
 *
 * The version of the OpenAPI document: 2.4.31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CliOption;
import org.openapitools.client.model.GeneratorInput;
import org.openapitools.client.model.ResponseCode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServersApi
 */
@Disabled
public class ServersApiTest {

    private final ServersApi api = new ServersApi();

    /**
     * Downloads a pre-generated file
     *
     * A valid &#x60;fileId&#x60; is generated by the &#x60;/clients/{language}&#x60; or &#x60;/servers/{language}&#x60; POST operations.  The fileId code can be used just once, after which a new &#x60;fileId&#x60; will need to be requested.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadFile_0Test() throws ApiException {
        String fileId = null;
        String response = api.downloadFile_0(fileId);
        // TODO: test validations
    }

    /**
     * Generates a server library
     *
     * Accepts a &#x60;GeneratorInput&#x60; options map for spec location and generation options.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateServerForLanguageTest() throws ApiException {
        String framework = null;
        GeneratorInput body = null;
        ResponseCode response = api.generateServerForLanguage(framework, body);
        // TODO: test validations
    }

    /**
     * Returns options for a server framework
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServerOptionsTest() throws ApiException {
        String framework = null;
        Map<String, CliOption> response = api.getServerOptions(framework);
        // TODO: test validations
    }

    /**
     * Gets languages supported by the server generator
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverOptionsTest() throws ApiException {
        List<String> response = api.serverOptions();
        // TODO: test validations
    }

}
