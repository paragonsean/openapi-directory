openapi: 3.0.1
info:
  contact:
    name: apiteam@swagger.io
  description: "This is an online swagger codegen server.  You can find out more at\
    \ https://github.com/swagger-api/swagger-codegen or on [irc.freenode.net, #swagger](http://swagger.io/irc/)."
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Generator
  version: 2.4.31
  x-apisguru-categories:
  - developer_tools
  - tools
  x-logo:
    backgroundColor: '#98C600'
    url: https://twitter.com/SwaggerApi/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://generator.swagger.io/api/swagger.json
    version: "2.0"
  x-providerName: swagger.io
  x-serviceName: generator
servers:
- url: https://generator.swagger.io/api
tags:
- name: gen
- name: clients
- name: servers
paths:
  /gen/clients:
    get:
      operationId: clientOptions
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      summary: Gets languages supported by the client generator
      tags:
      - clients
      x-accepts:
      - '*/*'
  /gen/clients/{language}:
    get:
      operationId: getClientOptions
      parameters:
      - description: The target language for the client library
        in: path
        name: language
        required: true
        schema:
          enum:
          - ada
          - akka-scala
          - android
          - apex
          - bash
          - clojure
          - cpprest
          - csharp
          - csharp-dotnet2
          - cwiki
          - dart
          - dart-jaguar
          - dynamic-html
          - eiffel
          - elixir
          - elm
          - erlang-client
          - flash
          - go
          - groovy
          - haskell-http-client
          - html
          - html2
          - java
          - javascript
          - javascript-closure-angular
          - jaxrs-cxf-client
          - jmeter
          - kotlin
          - lua
          - objc
          - perl
          - php
          - powershell
          - python
          - qt5cpp
          - r
          - ruby
          - rust
          - scala
          - scalaz
          - swagger
          - swagger-yaml
          - swift
          - swift3
          - swift4
          - swift5
          - tizen
          - typescript-angular
          - typescript-angularjs
          - typescript-aurelia
          - typescript-fetch
          - typescript-inversify
          - typescript-jquery
          - typescript-node
          - ue4cpp
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/CliOption'
                type: object
          description: successful operation
      summary: Returns options for a client library
      tags:
      - clients
      x-accepts:
      - application/json
    post:
      description: Accepts a `GeneratorInput` options map for spec location and generation
        options
      operationId: generateClient
      parameters:
      - description: The target language for the client library
        in: path
        name: language
        required: true
        schema:
          enum:
          - ada
          - akka-scala
          - android
          - apex
          - bash
          - clojure
          - cpprest
          - csharp
          - csharp-dotnet2
          - cwiki
          - dart
          - dart-jaguar
          - dynamic-html
          - eiffel
          - elixir
          - elm
          - erlang-client
          - flash
          - go
          - groovy
          - haskell-http-client
          - html
          - html2
          - java
          - javascript
          - javascript-closure-angular
          - jaxrs-cxf-client
          - jmeter
          - kotlin
          - lua
          - objc
          - perl
          - php
          - powershell
          - python
          - qt5cpp
          - r
          - ruby
          - rust
          - scala
          - scalaz
          - swagger
          - swagger-yaml
          - swift
          - swift3
          - swift4
          - swift5
          - tizen
          - typescript-angular
          - typescript-angularjs
          - typescript-aurelia
          - typescript-fetch
          - typescript-inversify
          - typescript-jquery
          - typescript-node
          - ue4cpp
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GeneratorInput'
        description: Configuration for building the client library
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseCode'
          description: successful operation
      summary: Generates a client library
      tags:
      - clients
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - '*/*'
  /gen/download/{fileId}:
    get:
      description: "A valid `fileId` is generated by the `/clients/{language}` or\
        \ `/servers/{language}` POST operations.  The fileId code can be used just\
        \ once, after which a new `fileId` will need to be requested."
      operationId: downloadFile
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: string
          description: successful operation
      summary: Downloads a pre-generated file
      tags:
      - clients
      - servers
      x-accepts:
      - application/octet-stream
  /gen/servers:
    get:
      operationId: serverOptions
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      summary: Gets languages supported by the server generator
      tags:
      - servers
      x-accepts:
      - '*/*'
  /gen/servers/{framework}:
    get:
      operationId: getServerOptions
      parameters:
      - description: The target language for the server framework
        in: path
        name: framework
        required: true
        schema:
          enum:
          - ada-server
          - aspnetcore
          - erlang-server
          - finch
          - go-server
          - haskell
          - inflector
          - java-pkmst
          - java-play-framework
          - java-vertx
          - jaxrs
          - jaxrs-cxf
          - jaxrs-cxf-cdi
          - jaxrs-resteasy
          - jaxrs-resteasy-eap
          - jaxrs-spec
          - kotlin-server
          - lumen
          - msf4j
          - nancyfx
          - nodejs-server
          - php-silex
          - php-symfony
          - pistache-server
          - python-flask
          - rails5
          - restbed
          - rust-server
          - scala-lagom-server
          - scalatra
          - sinatra
          - slim
          - spring
          - undertow
          - ze-ph
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/CliOption'
                type: object
          description: successful operation
      summary: Returns options for a server framework
      tags:
      - servers
      x-accepts:
      - application/json
    post:
      description: Accepts a `GeneratorInput` options map for spec location and generation
        options.
      operationId: generateServerForLanguage
      parameters:
      - description: framework
        in: path
        name: framework
        required: true
        schema:
          enum:
          - ada-server
          - aspnetcore
          - erlang-server
          - finch
          - go-server
          - haskell
          - inflector
          - java-pkmst
          - java-play-framework
          - java-vertx
          - jaxrs
          - jaxrs-cxf
          - jaxrs-cxf-cdi
          - jaxrs-resteasy
          - jaxrs-resteasy-eap
          - jaxrs-spec
          - kotlin-server
          - lumen
          - msf4j
          - nancyfx
          - nodejs-server
          - php-silex
          - php-symfony
          - pistache-server
          - python-flask
          - rails5
          - restbed
          - rust-server
          - scala-lagom-server
          - scalatra
          - sinatra
          - slim
          - spring
          - undertow
          - ze-ph
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GeneratorInput'
        description: parameters
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseCode'
          description: successful operation
      summary: Generates a server library
      tags:
      - servers
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - '*/*'
components:
  schemas:
    AuthorizationValue:
      example:
        urlMatcher: "{}"
        keyName: keyName
        type: type
        value: value
      properties:
        keyName:
          type: string
        type:
          type: string
        urlMatcher:
          type: object
        value:
          type: string
      type: object
    CliOption:
      properties:
        default:
          type: string
        description:
          type: string
        enum:
          additionalProperties:
            type: string
          type: object
        optionName:
          type: string
        type:
          description: Data type is based on the types supported by the JSON-Schema
          type: string
      type: object
    GeneratorInput:
      example:
        securityDefinition:
          description: description
          type: type
        options:
          key: options
        swaggerUrl: http://petstore.swagger.io/v2/swagger.json
        authorizationValue:
          urlMatcher: "{}"
          keyName: keyName
          type: type
          value: value
        spec: "{}"
        usingFlattenSpec: true
      properties:
        authorizationValue:
          $ref: '#/components/schemas/AuthorizationValue'
        options:
          additionalProperties:
            type: string
          type: object
        securityDefinition:
          $ref: '#/components/schemas/SecuritySchemeDefinition'
        spec:
          properties: {}
          type: object
        swaggerUrl:
          example: http://petstore.swagger.io/v2/swagger.json
          type: string
        usingFlattenSpec:
          type: boolean
      type: object
    ResponseCode:
      example:
        code: d40029be-eda6-4d62-b1ef-d05e2e91a72a
        link: http://generator.swagger.io:80/api/gen/download/d40029be-eda6-4d62-b1ef-d05e2e91a72a
      properties:
        code:
          description: File download code
          example: d40029be-eda6-4d62-b1ef-d05e2e91a72a
          type: string
        link:
          description: URL for fetching the generated client
          example: http://generator.swagger.io:80/api/gen/download/d40029be-eda6-4d62-b1ef-d05e2e91a72a
          type: string
      type: object
    SecuritySchemeDefinition:
      example:
        description: description
        type: type
      properties:
        description:
          type: string
        type:
          type: string
      type: object
    UrlMatcher:
      type: object
x-original-swagger-version: "2.0"

