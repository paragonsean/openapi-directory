# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorization_value import AuthorizationValue
from openapi_server.models.security_scheme_definition import SecuritySchemeDefinition
from openapi_server import util


class GeneratorInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_value: AuthorizationValue=None, options: Dict[str, str]=None, security_definition: SecuritySchemeDefinition=None, spec: object=None, swagger_url: str=None, using_flatten_spec: bool=None):
        """GeneratorInput - a model defined in OpenAPI

        :param authorization_value: The authorization_value of this GeneratorInput.
        :param options: The options of this GeneratorInput.
        :param security_definition: The security_definition of this GeneratorInput.
        :param spec: The spec of this GeneratorInput.
        :param swagger_url: The swagger_url of this GeneratorInput.
        :param using_flatten_spec: The using_flatten_spec of this GeneratorInput.
        """
        self.openapi_types = {
            'authorization_value': AuthorizationValue,
            'options': Dict[str, str],
            'security_definition': SecuritySchemeDefinition,
            'spec': object,
            'swagger_url': str,
            'using_flatten_spec': bool
        }

        self.attribute_map = {
            'authorization_value': 'authorizationValue',
            'options': 'options',
            'security_definition': 'securityDefinition',
            'spec': 'spec',
            'swagger_url': 'swaggerUrl',
            'using_flatten_spec': 'usingFlattenSpec'
        }

        self._authorization_value = authorization_value
        self._options = options
        self._security_definition = security_definition
        self._spec = spec
        self._swagger_url = swagger_url
        self._using_flatten_spec = using_flatten_spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeneratorInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GeneratorInput of this GeneratorInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_value(self):
        """Gets the authorization_value of this GeneratorInput.


        :return: The authorization_value of this GeneratorInput.
        :rtype: AuthorizationValue
        """
        return self._authorization_value

    @authorization_value.setter
    def authorization_value(self, authorization_value):
        """Sets the authorization_value of this GeneratorInput.


        :param authorization_value: The authorization_value of this GeneratorInput.
        :type authorization_value: AuthorizationValue
        """

        self._authorization_value = authorization_value

    @property
    def options(self):
        """Gets the options of this GeneratorInput.


        :return: The options of this GeneratorInput.
        :rtype: Dict[str, str]
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this GeneratorInput.


        :param options: The options of this GeneratorInput.
        :type options: Dict[str, str]
        """

        self._options = options

    @property
    def security_definition(self):
        """Gets the security_definition of this GeneratorInput.


        :return: The security_definition of this GeneratorInput.
        :rtype: SecuritySchemeDefinition
        """
        return self._security_definition

    @security_definition.setter
    def security_definition(self, security_definition):
        """Sets the security_definition of this GeneratorInput.


        :param security_definition: The security_definition of this GeneratorInput.
        :type security_definition: SecuritySchemeDefinition
        """

        self._security_definition = security_definition

    @property
    def spec(self):
        """Gets the spec of this GeneratorInput.


        :return: The spec of this GeneratorInput.
        :rtype: object
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this GeneratorInput.


        :param spec: The spec of this GeneratorInput.
        :type spec: object
        """

        self._spec = spec

    @property
    def swagger_url(self):
        """Gets the swagger_url of this GeneratorInput.


        :return: The swagger_url of this GeneratorInput.
        :rtype: str
        """
        return self._swagger_url

    @swagger_url.setter
    def swagger_url(self, swagger_url):
        """Sets the swagger_url of this GeneratorInput.


        :param swagger_url: The swagger_url of this GeneratorInput.
        :type swagger_url: str
        """

        self._swagger_url = swagger_url

    @property
    def using_flatten_spec(self):
        """Gets the using_flatten_spec of this GeneratorInput.


        :return: The using_flatten_spec of this GeneratorInput.
        :rtype: bool
        """
        return self._using_flatten_spec

    @using_flatten_spec.setter
    def using_flatten_spec(self, using_flatten_spec):
        """Sets the using_flatten_spec of this GeneratorInput.


        :param using_flatten_spec: The using_flatten_spec of this GeneratorInput.
        :type using_flatten_spec: bool
        """

        self._using_flatten_spec = using_flatten_spec
