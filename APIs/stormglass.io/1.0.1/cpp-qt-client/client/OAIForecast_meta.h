/**
 * Storm Glass Marine Weather
 * Global marine weather data from multiple sources in one single API with hourly resolution. Get your API key by visiting the Storm Glass web site.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@stormglass.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForecast_meta.h
 *
 * 
 */

#ifndef OAIForecast_meta_H
#define OAIForecast_meta_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIForecast_meta : public OAIObject {
public:
    OAIForecast_meta();
    OAIForecast_meta(QString json);
    ~OAIForecast_meta() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDailyQuota() const;
    void setDailyQuota(const qint32 &daily_quota);
    bool is_daily_quota_Set() const;
    bool is_daily_quota_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    double getLng() const;
    void setLng(const double &lng);
    bool is_lng_Set() const;
    bool is_lng_Valid() const;

    qint32 getRequestCount() const;
    void setRequestCount(const qint32 &request_count);
    bool is_request_count_Set() const;
    bool is_request_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_daily_quota;
    bool m_daily_quota_isSet;
    bool m_daily_quota_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    double m_lng;
    bool m_lng_isSet;
    bool m_lng_isValid;

    qint32 m_request_count;
    bool m_request_count_isSet;
    bool m_request_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForecast_meta)

#endif // OAIForecast_meta_H
