/**
 * Storm Glass Marine Weather
 * Global marine weather data from multiple sources in one single API with hourly resolution. Get your API key by visiting the Storm Glass web site.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@stormglass.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForecast.h
 *
 * 
 */

#ifndef OAIForecast_H
#define OAIForecast_H

#include <QJsonObject>

#include "OAIForecast_hours_inner.h"
#include "OAIForecast_meta.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIForecast_hours_inner;
class OAIForecast_meta;

class OAIForecast : public OAIObject {
public:
    OAIForecast();
    OAIForecast(QString json);
    ~OAIForecast() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIForecast_hours_inner> getHours() const;
    void setHours(const QList<OAIForecast_hours_inner> &hours);
    bool is_hours_Set() const;
    bool is_hours_Valid() const;

    OAIForecast_meta getMeta() const;
    void setMeta(const OAIForecast_meta &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIForecast_hours_inner> m_hours;
    bool m_hours_isSet;
    bool m_hours_isValid;

    OAIForecast_meta m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForecast)

#endif // OAIForecast_H
