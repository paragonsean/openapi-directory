/*
 * Storm Glass Marine Weather
 * Global marine weather data from multiple sources in one single API with hourly resolution. Get your API key by visiting the Storm Glass web site.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@stormglass.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ForecastHoursInnerAirTemperatureInner;
import org.openapitools.client.model.ForecastHoursInnerSwellDirectionInner;
import org.openapitools.client.model.ForecastHoursInnerSwellHeightInner;
import org.openapitools.client.model.ForecastHoursInnerSwellPeriodInner;
import org.openapitools.client.model.ForecastHoursInnerWaterTemperatureInner;
import org.openapitools.client.model.ForecastHoursInnerWaveDirectionInner;
import org.openapitools.client.model.ForecastHoursInnerWaveHeightInner;
import org.openapitools.client.model.ForecastHoursInnerWavePeriodInner;
import org.openapitools.client.model.ForecastHoursInnerWindDirectionInner;
import org.openapitools.client.model.ForecastHoursInnerWindSpeedInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ForecastHoursInner
 */
public class ForecastHoursInnerTest {
    private final ForecastHoursInner model = new ForecastHoursInner();

    /**
     * Model tests for ForecastHoursInner
     */
    @Test
    public void testForecastHoursInner() {
        // TODO: test ForecastHoursInner
    }

    /**
     * Test the property 'airTemperature'
     */
    @Test
    public void airTemperatureTest() {
        // TODO: test airTemperature
    }

    /**
     * Test the property 'swellDirection'
     */
    @Test
    public void swellDirectionTest() {
        // TODO: test swellDirection
    }

    /**
     * Test the property 'swellHeight'
     */
    @Test
    public void swellHeightTest() {
        // TODO: test swellHeight
    }

    /**
     * Test the property 'swellPeriod'
     */
    @Test
    public void swellPeriodTest() {
        // TODO: test swellPeriod
    }

    /**
     * Test the property 'time'
     */
    @Test
    public void timeTest() {
        // TODO: test time
    }

    /**
     * Test the property 'waterTemperature'
     */
    @Test
    public void waterTemperatureTest() {
        // TODO: test waterTemperature
    }

    /**
     * Test the property 'waveDirection'
     */
    @Test
    public void waveDirectionTest() {
        // TODO: test waveDirection
    }

    /**
     * Test the property 'waveHeight'
     */
    @Test
    public void waveHeightTest() {
        // TODO: test waveHeight
    }

    /**
     * Test the property 'wavePeriod'
     */
    @Test
    public void wavePeriodTest() {
        // TODO: test wavePeriod
    }

    /**
     * Test the property 'windDirection'
     */
    @Test
    public void windDirectionTest() {
        // TODO: test windDirection
    }

    /**
     * Test the property 'windSpeed'
     */
    @Test
    public void windSpeedTest() {
        // TODO: test windSpeed
    }

}
