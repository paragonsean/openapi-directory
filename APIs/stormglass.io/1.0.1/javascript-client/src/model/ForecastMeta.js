/**
 * Storm Glass Marine Weather
 * Global marine weather data from multiple sources in one single API with hourly resolution. Get your API key by visiting the Storm Glass web site.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@stormglass.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ForecastMeta model module.
 * @module model/ForecastMeta
 * @version 1.0.1
 */
class ForecastMeta {
    /**
     * Constructs a new <code>ForecastMeta</code>.
     * @alias module:model/ForecastMeta
     */
    constructor() { 
        
        ForecastMeta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ForecastMeta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ForecastMeta} obj Optional instance to populate.
     * @return {module:model/ForecastMeta} The populated <code>ForecastMeta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ForecastMeta();

            if (data.hasOwnProperty('dailyQuota')) {
                obj['dailyQuota'] = ApiClient.convertToType(data['dailyQuota'], 'Number');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('lng')) {
                obj['lng'] = ApiClient.convertToType(data['lng'], 'Number');
            }
            if (data.hasOwnProperty('requestCount')) {
                obj['requestCount'] = ApiClient.convertToType(data['requestCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ForecastMeta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ForecastMeta</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of successful requests you can do on one day
 * @member {Number} dailyQuota
 */
ForecastMeta.prototype['dailyQuota'] = undefined;

/**
 * The latitude the response is showing forecast data for
 * @member {Number} lat
 */
ForecastMeta.prototype['lat'] = undefined;

/**
 * The longitude the response is showing forecast data for
 * @member {Number} lng
 */
ForecastMeta.prototype['lng'] = undefined;

/**
 * The number of successful requests made this day.
 * @member {Number} requestCount
 */
ForecastMeta.prototype['requestCount'] = undefined;






export default ForecastMeta;

