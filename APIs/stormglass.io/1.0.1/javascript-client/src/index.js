/**
 * Storm Glass Marine Weather
 * Global marine weather data from multiple sources in one single API with hourly resolution. Get your API key by visiting the Storm Glass web site.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@stormglass.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Forecast from './model/Forecast';
import ForecastHoursInner from './model/ForecastHoursInner';
import ForecastHoursInnerAirTemperatureInner from './model/ForecastHoursInnerAirTemperatureInner';
import ForecastHoursInnerSwellDirectionInner from './model/ForecastHoursInnerSwellDirectionInner';
import ForecastHoursInnerSwellHeightInner from './model/ForecastHoursInnerSwellHeightInner';
import ForecastHoursInnerSwellPeriodInner from './model/ForecastHoursInnerSwellPeriodInner';
import ForecastHoursInnerWaterTemperatureInner from './model/ForecastHoursInnerWaterTemperatureInner';
import ForecastHoursInnerWaveDirectionInner from './model/ForecastHoursInnerWaveDirectionInner';
import ForecastHoursInnerWaveHeightInner from './model/ForecastHoursInnerWaveHeightInner';
import ForecastHoursInnerWavePeriodInner from './model/ForecastHoursInnerWavePeriodInner';
import ForecastHoursInnerWindDirectionInner from './model/ForecastHoursInnerWindDirectionInner';
import ForecastHoursInnerWindSpeedInner from './model/ForecastHoursInnerWindSpeedInner';
import ForecastMeta from './model/ForecastMeta';
import ForecastApi from './api/ForecastApi';


/**
* Global marine weather data from multiple sources in one single API with hourly resolution. Get your API key by visiting the Storm Glass web site..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var StormGlassMarineWeather = require('index'); // See note below*.
* var xxxSvc = new StormGlassMarineWeather.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new StormGlassMarineWeather.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new StormGlassMarineWeather.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new StormGlassMarineWeather.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Forecast model constructor.
     * @property {module:model/Forecast}
     */
    Forecast,

    /**
     * The ForecastHoursInner model constructor.
     * @property {module:model/ForecastHoursInner}
     */
    ForecastHoursInner,

    /**
     * The ForecastHoursInnerAirTemperatureInner model constructor.
     * @property {module:model/ForecastHoursInnerAirTemperatureInner}
     */
    ForecastHoursInnerAirTemperatureInner,

    /**
     * The ForecastHoursInnerSwellDirectionInner model constructor.
     * @property {module:model/ForecastHoursInnerSwellDirectionInner}
     */
    ForecastHoursInnerSwellDirectionInner,

    /**
     * The ForecastHoursInnerSwellHeightInner model constructor.
     * @property {module:model/ForecastHoursInnerSwellHeightInner}
     */
    ForecastHoursInnerSwellHeightInner,

    /**
     * The ForecastHoursInnerSwellPeriodInner model constructor.
     * @property {module:model/ForecastHoursInnerSwellPeriodInner}
     */
    ForecastHoursInnerSwellPeriodInner,

    /**
     * The ForecastHoursInnerWaterTemperatureInner model constructor.
     * @property {module:model/ForecastHoursInnerWaterTemperatureInner}
     */
    ForecastHoursInnerWaterTemperatureInner,

    /**
     * The ForecastHoursInnerWaveDirectionInner model constructor.
     * @property {module:model/ForecastHoursInnerWaveDirectionInner}
     */
    ForecastHoursInnerWaveDirectionInner,

    /**
     * The ForecastHoursInnerWaveHeightInner model constructor.
     * @property {module:model/ForecastHoursInnerWaveHeightInner}
     */
    ForecastHoursInnerWaveHeightInner,

    /**
     * The ForecastHoursInnerWavePeriodInner model constructor.
     * @property {module:model/ForecastHoursInnerWavePeriodInner}
     */
    ForecastHoursInnerWavePeriodInner,

    /**
     * The ForecastHoursInnerWindDirectionInner model constructor.
     * @property {module:model/ForecastHoursInnerWindDirectionInner}
     */
    ForecastHoursInnerWindDirectionInner,

    /**
     * The ForecastHoursInnerWindSpeedInner model constructor.
     * @property {module:model/ForecastHoursInnerWindSpeedInner}
     */
    ForecastHoursInnerWindSpeedInner,

    /**
     * The ForecastMeta model constructor.
     * @property {module:model/ForecastMeta}
     */
    ForecastMeta,

    /**
    * The ForecastApi service constructor.
    * @property {module:api/ForecastApi}
    */
    ForecastApi
};
