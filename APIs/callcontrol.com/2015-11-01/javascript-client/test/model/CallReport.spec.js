/**
 * Call Control API
 * API for blocking phone calls with Call Control. Data is from crowdsourced community blacklist from 12+ million users and government agencies (FTC, FCC, IRS) Try with api_key 'demo', hit explore above, and then try phone numbers 18008472911,13157244022,17275567300,18008276655,12061231234.
 *
 * The version of the OpenAPI document: 2015-11-01
 * Contact: info@kedlin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CallControlApi);
  }
}(this, function(expect, CallControlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CallControlApi.CallReport();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CallReport', function() {
    it('should create an instance of CallReport', function() {
      // uncomment below and update the code to test CallReport
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be.a(CallControlApi.CallReport);
    });

    it('should have the property callTime (base name: "CallTime")', function() {
      // uncomment below and update the code to test the property callTime
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property callerType (base name: "CallerType")', function() {
      // uncomment below and update the code to test the property callerType
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "Comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "IpAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "Latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "Longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "PhoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property reportedCallerId (base name: "ReportedCallerId")', function() {
      // uncomment below and update the code to test the property reportedCallerId
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property reportedCallerName (base name: "ReportedCallerName")', function() {
      // uncomment below and update the code to test the property reportedCallerName
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property reporter (base name: "Reporter")', function() {
      // uncomment below and update the code to test the property reporter
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

    it('should have the property unwantedCall (base name: "UnwantedCall")', function() {
      // uncomment below and update the code to test the property unwantedCall
      //var instance = new CallControlApi.CallReport();
      //expect(instance).to.be();
    });

  });

}));
