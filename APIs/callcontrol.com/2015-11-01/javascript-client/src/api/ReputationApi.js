/**
 * Call Control API
 * API for blocking phone calls with Call Control. Data is from crowdsourced community blacklist from 12+ million users and government agencies (FTC, FCC, IRS) Try with api_key 'demo', hit explore above, and then try phone numbers 18008472911,13157244022,17275567300,18008276655,12061231234.
 *
 * The version of the OpenAPI document: 2015-11-01
 * Contact: info@kedlin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CallReport from '../model/CallReport';
import Reputation from '../model/Reputation';

/**
* Reputation service.
* @module api/ReputationApi
* @version 2015-11-01
*/
export default class ReputationApi {

    /**
    * Constructs a new ReputationApi. 
    * @alias module:api/ReputationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reputationReport operation.
     * @callback module:api/ReputationApi~reputationReportCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Report: report spam calls received to better tune our algorithms based upon spam calls you receive
     * This returns information required to perform basic call blocking behaviors<br />              Try with api_key 'demo' and phone numbers 18008472911, 13157244022, 17275567300, 18008276655, and 12061231234 (last one not spam)
     * @param {module:model/CallReport} callReport [FromBody] Call Report              PhoneNumber,               Caller name(optional),               Call category(optional),               Comment or tags(free text) (optional),               Unwanted call  - yes/no(optional),
     * @param {module:api/ReputationApi~reputationReportCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reputationReport(callReport, callback) {
      let postBody = callReport;
      // verify the required parameter 'callReport' is set
      if (callReport === undefined || callReport === null) {
        throw new Error("Missing the required parameter 'callReport' when calling reputationReport");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/2015-11-01/Report', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reputationReputation operation.
     * @callback module:api/ReputationApi~reputationReputationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Reputation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reputation:  Premium service which returns a reputation informaiton of a phone number via API.
     * This returns information required to perform basic call blocking behaviors<br />              Try with api_key 'demo' and phone numbers 18008472911, 13157244022, 17275567300, 18008276655, and 12061231234 (last one not spam)
     * @param {String} phoneNumber phone number to search
     * @param {module:api/ReputationApi~reputationReputationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Reputation}
     */
    reputationReputation(phoneNumber, callback) {
      let postBody = null;
      // verify the required parameter 'phoneNumber' is set
      if (phoneNumber === undefined || phoneNumber === null) {
        throw new Error("Missing the required parameter 'phoneNumber' when calling reputationReputation");
      }

      let pathParams = {
        'phoneNumber': phoneNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = Reputation;
      return this.apiClient.callApi(
        '/api/2015-11-01/Reputation/{phoneNumber}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
