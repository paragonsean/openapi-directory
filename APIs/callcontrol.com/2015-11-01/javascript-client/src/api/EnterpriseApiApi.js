/**
 * Call Control API
 * API for blocking phone calls with Call Control. Data is from crowdsourced community blacklist from 12+ million users and government agencies (FTC, FCC, IRS) Try with api_key 'demo', hit explore above, and then try phone numbers 18008472911,13157244022,17275567300,18008276655,12061231234.
 *
 * The version of the OpenAPI document: 2015-11-01
 * Contact: info@kedlin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CallControlUser from '../model/CallControlUser';

/**
* EnterpriseApi service.
* @module api/EnterpriseApiApi
* @version 2015-11-01
*/
export default class EnterpriseApiApi {

    /**
    * Constructs a new EnterpriseApiApi. 
    * @alias module:api/EnterpriseApiApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the enterpriseApiGetUser operation.
     * @callback module:api/EnterpriseApiApi~enterpriseApiGetUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CallControlUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enterprise  GET: GetUser  Returns the current information from the user;  try 12066194123 as demo
     * @param {String} phoneNumber 
     * @param {module:api/EnterpriseApiApi~enterpriseApiGetUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CallControlUser}
     */
    enterpriseApiGetUser(phoneNumber, callback) {
      let postBody = null;
      // verify the required parameter 'phoneNumber' is set
      if (phoneNumber === undefined || phoneNumber === null) {
        throw new Error("Missing the required parameter 'phoneNumber' when calling enterpriseApiGetUser");
      }

      let pathParams = {
        'phoneNumber': phoneNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = CallControlUser;
      return this.apiClient.callApi(
        '/api/2015-11-01/Enterprise/GetUser/{phoneNumber}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enterpriseApiShouldBlock operation.
     * @callback module:api/EnterpriseApiApi~enterpriseApiShouldBlockCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enterprise  GET: ShouldBlock  Simple Enteprise which returns a call block proceed decision.
     * This returns information required to perform basic call blocking behaviors              Try with api_key 'demo' and phone numbers 18008472911, 13157244022, 17275567300, 18008276655, and 12061231234 (last one not spam)
     * @param {String} phoneNumber phone number to search
     * @param {String} userPhoneNumber (OPTIONAL) phone number of user to look up block rules
     * @param {module:api/EnterpriseApiApi~enterpriseApiShouldBlockCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    enterpriseApiShouldBlock(phoneNumber, userPhoneNumber, callback) {
      let postBody = null;
      // verify the required parameter 'phoneNumber' is set
      if (phoneNumber === undefined || phoneNumber === null) {
        throw new Error("Missing the required parameter 'phoneNumber' when calling enterpriseApiShouldBlock");
      }
      // verify the required parameter 'userPhoneNumber' is set
      if (userPhoneNumber === undefined || userPhoneNumber === null) {
        throw new Error("Missing the required parameter 'userPhoneNumber' when calling enterpriseApiShouldBlock");
      }

      let pathParams = {
        'phoneNumber': phoneNumber,
        'userPhoneNumber': userPhoneNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/api/2015-11-01/Enterprise/ShouldBlock/{phoneNumber}/{userPhoneNumber}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enterpriseApiUpsertUser operation.
     * @callback module:api/EnterpriseApiApi~enterpriseApiUpsertUserCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * UpsertUser: insert or update all properties from a user  PhoneNumber  WhiteList (list of phone numbers to whitelist)  BlackList (list of phone numbers to blacklist)  QuietHourList (list of quiet hour objects)  UseCommunityBlacklist (enable / disable community blacklist) default true  BreakThroughQhWithMultipleCalls (break through quiet hours with two calls in 3 minutes)  WhiteListBreaksQh (break through quiet hours for whitelist)
     * @param {module:model/CallControlUser} user [FromBody] User               <remarks>This returns information required to perform basic call blocking behaviors.  The demo key will return ok, but will not save the data.<br /></remarks>
     * @param {module:api/EnterpriseApiApi~enterpriseApiUpsertUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    enterpriseApiUpsertUser(user, callback) {
      let postBody = user;
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling enterpriseApiUpsertUser");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/2015-11-01/Enterprise/UpsertUser', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
