/**
 * Call Control API
 * API for blocking phone calls with Call Control. Data is from crowdsourced community blacklist from 12+ million users and government agencies (FTC, FCC, IRS) Try with api_key 'demo', hit explore above, and then try phone numbers 18008472911,13157244022,17275567300,18008276655,12061231234.
 *
 * The version of the OpenAPI document: 2015-11-01
 * Contact: info@kedlin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Complaints model module.
 * @module model/Complaints
 * @version 2015-11-01
 */
class Complaints {
    /**
     * Constructs a new <code>Complaints</code>.
     * Free service (with registration) which serves Government Do Not Call data via API   Search via phone number returns available data, reported name, total complaints
     * @alias module:model/Complaints
     */
    constructor() { 
        
        Complaints.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Complaints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Complaints} obj Optional instance to populate.
     * @return {module:model/Complaints} The populated <code>Complaints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Complaints();

            if (data.hasOwnProperty('ComplaintsByEntity')) {
                obj['ComplaintsByEntity'] = ApiClient.convertToType(data['ComplaintsByEntity'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('LastComplaintDate')) {
                obj['LastComplaintDate'] = ApiClient.convertToType(data['LastComplaintDate'], 'Date');
            }
            if (data.hasOwnProperty('ReportedCallerName')) {
                obj['ReportedCallerName'] = ApiClient.convertToType(data['ReportedCallerName'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], ['String']);
            }
            if (data.hasOwnProperty('TotalNumberOfComplaints')) {
                obj['TotalNumberOfComplaints'] = ApiClient.convertToType(data['TotalNumberOfComplaints'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Complaints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Complaints</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ReportedCallerName'] && !(typeof data['ReportedCallerName'] === 'string' || data['ReportedCallerName'] instanceof String)) {
            throw new Error("Expected the field `ReportedCallerName` to be a primitive type in the JSON string but got " + data['ReportedCallerName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Tags'])) {
            throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
        }

        return true;
    }


}



/**
 * @member {Object.<String, Number>} ComplaintsByEntity
 */
Complaints.prototype['ComplaintsByEntity'] = undefined;

/**
 * @member {Date} LastComplaintDate
 */
Complaints.prototype['LastComplaintDate'] = undefined;

/**
 * Reported Caller Name
 * @member {String} ReportedCallerName
 */
Complaints.prototype['ReportedCallerName'] = undefined;

/**
 * @member {Array.<String>} Tags
 */
Complaints.prototype['Tags'] = undefined;

/**
 * @member {Number} TotalNumberOfComplaints
 */
Complaints.prototype['TotalNumberOfComplaints'] = undefined;






export default Complaints;

