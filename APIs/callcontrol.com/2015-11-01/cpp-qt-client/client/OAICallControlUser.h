/**
 * Call Control API
 * API for blocking phone calls with Call Control. Data is from crowdsourced community blacklist from 12+ million users and government agencies (FTC, FCC, IRS) Try with api_key 'demo', hit explore above, and then try phone numbers 18008472911,13157244022,17275567300,18008276655,12061231234.
 *
 * The version of the OpenAPI document: 2015-11-01
 * Contact: info@kedlin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICallControlUser.h
 *
 * 
 */

#ifndef OAICallControlUser_H
#define OAICallControlUser_H

#include <QJsonObject>

#include "OAIQuietHour.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuietHour;

class OAICallControlUser : public OAIObject {
public:
    OAICallControlUser();
    OAICallControlUser(QString json);
    ~OAICallControlUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAge() const;
    void setAge(const qint32 &age);
    bool is_age_Set() const;
    bool is_age_Valid() const;

    QList<QString> getBlackList() const;
    void setBlackList(const QList<QString> &black_list);
    bool is_black_list_Set() const;
    bool is_black_list_Valid() const;

    QString getBlockBehavior() const;
    void setBlockBehavior(const QString &block_behavior);
    bool is_block_behavior_Set() const;
    bool is_block_behavior_Valid() const;

    bool isBreakThroughQhWithMultipleCalls() const;
    void setBreakThroughQhWithMultipleCalls(const bool &break_through_qh_with_multiple_calls);
    bool is_break_through_qh_with_multiple_calls_Set() const;
    bool is_break_through_qh_with_multiple_calls_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getMiddleName() const;
    void setMiddleName(const QString &middle_name);
    bool is_middle_name_Set() const;
    bool is_middle_name_Valid() const;

    QString getPhoneNumbeRegion() const;
    void setPhoneNumbeRegion(const QString &phone_numbe_region);
    bool is_phone_numbe_region_Set() const;
    bool is_phone_numbe_region_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QList<OAIQuietHour> getQuietHourList() const;
    void setQuietHourList(const QList<OAIQuietHour> &quiet_hour_list);
    bool is_quiet_hour_list_Set() const;
    bool is_quiet_hour_list_Valid() const;

    QString getSalutation() const;
    void setSalutation(const QString &salutation);
    bool is_salutation_Set() const;
    bool is_salutation_Valid() const;

    QString getSuffix() const;
    void setSuffix(const QString &suffix);
    bool is_suffix_Set() const;
    bool is_suffix_Valid() const;

    bool isUseCommunityBlacklist() const;
    void setUseCommunityBlacklist(const bool &use_community_blacklist);
    bool is_use_community_blacklist_Set() const;
    bool is_use_community_blacklist_Valid() const;

    QList<QString> getWhiteList() const;
    void setWhiteList(const QList<QString> &white_list);
    bool is_white_list_Set() const;
    bool is_white_list_Valid() const;

    bool isWhiteListBreaksQh() const;
    void setWhiteListBreaksQh(const bool &white_list_breaks_qh);
    bool is_white_list_breaks_qh_Set() const;
    bool is_white_list_breaks_qh_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_age;
    bool m_age_isSet;
    bool m_age_isValid;

    QList<QString> m_black_list;
    bool m_black_list_isSet;
    bool m_black_list_isValid;

    QString m_block_behavior;
    bool m_block_behavior_isSet;
    bool m_block_behavior_isValid;

    bool m_break_through_qh_with_multiple_calls;
    bool m_break_through_qh_with_multiple_calls_isSet;
    bool m_break_through_qh_with_multiple_calls_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_middle_name;
    bool m_middle_name_isSet;
    bool m_middle_name_isValid;

    QString m_phone_numbe_region;
    bool m_phone_numbe_region_isSet;
    bool m_phone_numbe_region_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QList<OAIQuietHour> m_quiet_hour_list;
    bool m_quiet_hour_list_isSet;
    bool m_quiet_hour_list_isValid;

    QString m_salutation;
    bool m_salutation_isSet;
    bool m_salutation_isValid;

    QString m_suffix;
    bool m_suffix_isSet;
    bool m_suffix_isValid;

    bool m_use_community_blacklist;
    bool m_use_community_blacklist_isSet;
    bool m_use_community_blacklist_isValid;

    QList<QString> m_white_list;
    bool m_white_list_isSet;
    bool m_white_list_isValid;

    bool m_white_list_breaks_qh;
    bool m_white_list_breaks_qh_isSet;
    bool m_white_list_breaks_qh_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICallControlUser)

#endif // OAICallControlUser_H
