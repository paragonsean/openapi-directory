/**
 * Call Control API
 * API for blocking phone calls with Call Control. Data is from crowdsourced community blacklist from 12+ million users and government agencies (FTC, FCC, IRS) Try with api_key 'demo', hit explore above, and then try phone numbers 18008472911,13157244022,17275567300,18008276655,12061231234.
 *
 * The version of the OpenAPI document: 2015-11-01
 * Contact: info@kedlin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICallReport.h
 *
 * Call Report  PhoneNumber,   Caller name(optional),   Call category(optional),   Comment or tags(free text) (optional),   Unwanted call  - yes/no(optional),
 */

#ifndef OAICallReport_H
#define OAICallReport_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICallReport : public OAIObject {
public:
    OAICallReport();
    OAICallReport(QString json);
    ~OAICallReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCallTime() const;
    void setCallTime(const QDateTime &call_time);
    bool is_call_time_Set() const;
    bool is_call_time_Valid() const;

    QString getCallerType() const;
    void setCallerType(const QString &caller_type);
    bool is_caller_type_Set() const;
    bool is_caller_type_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getReportedCallerId() const;
    void setReportedCallerId(const QString &reported_caller_id);
    bool is_reported_caller_id_Set() const;
    bool is_reported_caller_id_Valid() const;

    QString getReportedCallerName() const;
    void setReportedCallerName(const QString &reported_caller_name);
    bool is_reported_caller_name_Set() const;
    bool is_reported_caller_name_Valid() const;

    QString getReporter() const;
    void setReporter(const QString &reporter);
    bool is_reporter_Set() const;
    bool is_reporter_Valid() const;

    bool isUnwantedCall() const;
    void setUnwantedCall(const bool &unwanted_call);
    bool is_unwanted_call_Set() const;
    bool is_unwanted_call_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_call_time;
    bool m_call_time_isSet;
    bool m_call_time_isValid;

    QString m_caller_type;
    bool m_caller_type_isSet;
    bool m_caller_type_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_reported_caller_id;
    bool m_reported_caller_id_isSet;
    bool m_reported_caller_id_isValid;

    QString m_reported_caller_name;
    bool m_reported_caller_name_isSet;
    bool m_reported_caller_name_isValid;

    QString m_reporter;
    bool m_reporter_isSet;
    bool m_reporter_isValid;

    bool m_unwanted_call;
    bool m_unwanted_call_isSet;
    bool m_unwanted_call_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICallReport)

#endif // OAICallReport_H
