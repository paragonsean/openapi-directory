# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Reputation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, call_type: str=None, confidence: int=None, is_spam: bool=None, last_complaint_date: datetime=None, reported_caller_name: str=None, tags: List[str]=None):
        """Reputation - a model defined in OpenAPI

        :param call_type: The call_type of this Reputation.
        :param confidence: The confidence of this Reputation.
        :param is_spam: The is_spam of this Reputation.
        :param last_complaint_date: The last_complaint_date of this Reputation.
        :param reported_caller_name: The reported_caller_name of this Reputation.
        :param tags: The tags of this Reputation.
        """
        self.openapi_types = {
            'call_type': str,
            'confidence': int,
            'is_spam': bool,
            'last_complaint_date': datetime,
            'reported_caller_name': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'call_type': 'CallType',
            'confidence': 'Confidence',
            'is_spam': 'IsSpam',
            'last_complaint_date': 'LastComplaintDate',
            'reported_caller_name': 'ReportedCallerName',
            'tags': 'Tags'
        }

        self._call_type = call_type
        self._confidence = confidence
        self._is_spam = is_spam
        self._last_complaint_date = last_complaint_date
        self._reported_caller_name = reported_caller_name
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Reputation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Reputation of this Reputation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def call_type(self):
        """Gets the call_type of this Reputation.


        :return: The call_type of this Reputation.
        :rtype: str
        """
        return self._call_type

    @call_type.setter
    def call_type(self, call_type):
        """Sets the call_type of this Reputation.


        :param call_type: The call_type of this Reputation.
        :type call_type: str
        """

        self._call_type = call_type

    @property
    def confidence(self):
        """Gets the confidence of this Reputation.


        :return: The confidence of this Reputation.
        :rtype: int
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this Reputation.


        :param confidence: The confidence of this Reputation.
        :type confidence: int
        """

        self._confidence = confidence

    @property
    def is_spam(self):
        """Gets the is_spam of this Reputation.


        :return: The is_spam of this Reputation.
        :rtype: bool
        """
        return self._is_spam

    @is_spam.setter
    def is_spam(self, is_spam):
        """Sets the is_spam of this Reputation.


        :param is_spam: The is_spam of this Reputation.
        :type is_spam: bool
        """

        self._is_spam = is_spam

    @property
    def last_complaint_date(self):
        """Gets the last_complaint_date of this Reputation.


        :return: The last_complaint_date of this Reputation.
        :rtype: datetime
        """
        return self._last_complaint_date

    @last_complaint_date.setter
    def last_complaint_date(self, last_complaint_date):
        """Sets the last_complaint_date of this Reputation.


        :param last_complaint_date: The last_complaint_date of this Reputation.
        :type last_complaint_date: datetime
        """

        self._last_complaint_date = last_complaint_date

    @property
    def reported_caller_name(self):
        """Gets the reported_caller_name of this Reputation.


        :return: The reported_caller_name of this Reputation.
        :rtype: str
        """
        return self._reported_caller_name

    @reported_caller_name.setter
    def reported_caller_name(self, reported_caller_name):
        """Sets the reported_caller_name of this Reputation.


        :param reported_caller_name: The reported_caller_name of this Reputation.
        :type reported_caller_name: str
        """

        self._reported_caller_name = reported_caller_name

    @property
    def tags(self):
        """Gets the tags of this Reputation.


        :return: The tags of this Reputation.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Reputation.


        :param tags: The tags of this Reputation.
        :type tags: List[str]
        """

        self._tags = tags
