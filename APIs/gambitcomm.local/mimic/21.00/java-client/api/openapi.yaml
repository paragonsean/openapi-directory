openapi: 3.0.0
info:
  contact:
    email: support@gambitcomm.com
  description: This is the API for MIMIC client to connect to MIMIC daemon.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.gambitcomm.com/terms/
  title: MIMIC REST API
  version: "21.00"
  x-apisguru-categories:
  - iot
  x-logo:
    url: https://www.gambitcomm.com/site/images/logo.png
  x-origin:
  - format: openapi
    url: https://www.gambitcomm.com/docs/mimic.yaml
    version: "3.0"
  x-providerName: gambitcomm.local
  x-serviceName: mimic
externalDocs:
  description: Find out more about Gambit
  url: https://www.gambitcomm.com/site/about.php
servers:
- url: http://gambitcomm.local
- description: Gambit Communications MIMIC simulator REST API
  url: http://127.0.0.1
security:
- basicAuth: []
paths:
  /mimic/access/add/{user}/{agents}/{mask}:
    post:
      description: Adds/Overwrites the user entry in the access control database.
      operationId: access_add
      parameters:
      - description: Username of the simulator hosting system
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: Agent range in minimal range representation
        explode: false
        in: path
        name: agents
        required: true
        schema:
          type: string
        style: simple
      - description: Currently not used
        explode: false
        in: path
        name: mask
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds/Overwrites the user entry in the access control database.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/del/{user}:
    delete:
      description: Using '*' for user clears all the users.
      operationId: access_del
      parameters:
      - description: username of the simulator hosting system
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears a users entry from access control database.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/get/acldb:
    get:
      description: If nothing is specified then this returns "".
      operationId: access_get_acldb
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current access control database in use.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/get/admindir:
    get:
      description: "If nothing is specified in admin/settings.cfg then returns \"\"\
        . If no admin directory is specified then the shared area will be used where\
        \ needed (e.g. for persistent info, access control data files etc. )"
      operationId: access_get_admindir
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current admin directory.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/get/adminuser:
    get:
      description: If nothing is specified in admin/settings.cfg then returns "".
      operationId: access_get_adminuser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current administrator.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/get/enabled:
    get:
      description: "0 indicates that it is disabled, 1 indicates it is enabled."
      operationId: access_get_enabled
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the state of access control checking.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/list:
    get:
      description: "Each entry consists of user, agents (in minimal range representation)\
        \ and access mask (not used currently)."
      operationId: access_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessEntry'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns an array of entries.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/load/{filename}:
    put:
      description: If filename is not specified then the currently set 'acldb' parameter
        is used.
      operationId: access_load
      parameters:
      - description: Filename to load
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Loads the specified file for access control data.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/save/{filename}:
    put:
      description: If filename is not specified then the currently set 'acldb' parameter
        is used.
      operationId: access_save
      parameters:
      - description: Filename to save
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Saves current access control data in specified file.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/set/acldb/{databaseName}:
    put:
      description: This will be used for subsequent load and save operations.
      operationId: access_set_acldb
      parameters:
      - description: Database name to use
        explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Allows setting the name of the current access control database.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/access/set/enabled/{enabledOrNot}:
    put:
      description: "0 indicates disabled, 1 indicates enabled."
      operationId: access_set_enabled
      parameters:
      - description: indicator
        explode: false
        in: path
        name: enabledOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Allows the user to enable/disable the access control check.
      tags:
      - Access
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/add/{IP}:
    post:
      description: Add an agent.
      operationId: new
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Primary IP
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              description: Triplet array
              items:
                $ref: '#/components/schemas/Triplet'
              type: array
        description: Created agent object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add an agent.
      tags:
      - Agent
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/from/add/{IP}/{port}:
    post:
      description: "An empty ipaddress or 0.0.0.0 both imply any address. Similarly\
        \ an empty port or 0 both imply any port. For agents with source-address-indexing\
        \ enabled, messages which do not match any source address will be discarded\
        \ with an ERROR message, similar to community string mismatches."
      operationId: from_add
      parameters:
      - description: Agent to add the IP source
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "IP of the port, 0.0.0.0 for any"
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: "port of the source, 0 for any"
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add a source address that the agent will accept messages from.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/from/delete/{IP}/{port}:
    delete:
      description: "An empty ipaddress or 0.0.0.0 both imply any address. Similarly\
        \ an empty port or 0 both imply any port. For agents with source-address-indexing\
        \ enabled, messages which do not match any source address will be discarded\
        \ with an ERROR message, similar to community string mismatches."
      operationId: from_del
      parameters:
      - description: Agent to delete the IP source
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: IP of the source
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: port of the source
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: delete a source address that the agent will accept messages from.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/from/list:
    get:
      description: "This in effect implements source-address-indexing, where 2 agents\
        \ with the same address can be configured, each accepting messages from different\
        \ management stations."
      operationId: from_list
      parameters:
      - description: Agent to show the IP sources
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IPSource'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List the source addresses that the agent will accept messages from.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/changed:
    get:
      description: has the agent value space changed?
      operationId: get_changed
      parameters:
      - description: Agent to return the indicator
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: has the agent value space changed?
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/config_changed:
    get:
      description: has the lab configuration changed?
      operationId: get_config_changed
      parameters:
      - description: Agent to return the indicator
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: has the lab configuration changed?
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/delay:
    get:
      description: The minimum granularity is 10 msec.
      operationId: get_delay
      parameters:
      - description: Agent to return the delay time
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/start"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: one-way transit delay in msec.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/drops:
    get:
      description: drop rate (every N-th PDU). 0 means no drops.
      operationId: get_drops
      parameters:
      - description: Agent to return the drop rate
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: drop rate (every N-th PDU). 0 means no drops.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/host:
    get:
      description: "Currently, only IPv4 addresses are allowed as the main address\
        \ of the agent, but both IPv4 and IPv6 addresses are allowed as IP aliases\
        \ for the agent."
      operationId: get_host
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: string
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/value/get/{object}/{instance}/{variable}"
              parameters:
                agentNum: $request.body#/agentNum
                instance: $response.body#
                object: ipAdEntIfIndex
                variable: v
        "400":
          description: Invalid agent number value
      summary: host address of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/inform_timeout:
    get:
      description: The agent will retransmit INFORM PDUs at this interval until it
        has received a reply from the manager.
      operationId: get_inform_timeout
      parameters:
      - description: Agent to return the timeout setting
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: timeout in seconds for retransmitting INFORM PDUs.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/interface:
    get:
      description: network interface card for the agent.
      operationId: get_interface
      parameters:
      - description: Agent to return the primary interface
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: string
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/mask"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: network interface card for the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/mask:
    get:
      description: subnet mask of the agent.
      operationId: get_mask
      parameters:
      - description: Agent to return the primary interface
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: string
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/port"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: subnet mask of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/mibs:
    get:
      description: "set of MIBs, simulations and scenarios"
      operationId: get_mibs
      parameters:
      - description: Agent to return the MIB triplets
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Triplet'
                type: array
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/sim"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: "set of MIBs, simulations and scenarios"
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/num_starts:
    get:
      description: This count is incremented each time an agent starts. It affects
        the SNMPv3 EngineBoots parameter.
      operationId: get_number_starts
      parameters:
      - description: Agent to return the count
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: number of starts for the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/oiddir:
    get:
      description: MIB directory of the agent.
      operationId: get_oiddir
      parameters:
      - description: Agent to return the directory path
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: MIB directory of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/owner:
    get:
      description: owner of the agent.
      operationId: get_owner
      parameters:
      - description: Agent to return the owner
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: owner of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/pdusize:
    get:
      description: The limit for this configurable is 65536.
      operationId: get_pdusize
      parameters:
      - description: Agent to return the PDU size
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: maximum PDU size.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/port:
    get:
      description: port number
      operationId: get_port
      parameters:
      - description: Agent to return the primary SNMP port
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/protocol"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: port number
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/privdir:
    get:
      description: private directory of the agent.
      operationId: get_privdir
      parameters:
      - description: Agent to return the directory path
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: private directory of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/protocol:
    get:
      description: protocols supported by agent as an array of strings
      operationId: get_protocols
      parameters:
      - description: Agent to return the protocols arrary
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/protocol/{prot}/get/config"
              parameters:
                agentNum: $request.body#/agentNum
                prot: $response.body#
        "400":
          description: Invalid agent number value
      summary: protocols supported by agent
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/read:
    get:
      description: read community string
      operationId: get_read_community
      parameters:
      - description: Agent to return the SNMP read community string
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/write"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: read community string
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/scen:
    get:
      description: first scenario name
      operationId: get_scen
      parameters:
      - description: Agent to return the first scenario number
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: first scenario name
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/sim:
    get:
      description: first simulation name
      operationId: get_sim
      parameters:
      - description: Agent to return the first simulation name
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/scen"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: first simulation name
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/start:
    get:
      description: relative start time
      operationId: get_starttime
      parameters:
      - description: Agent to return the relative start time
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/mibs"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: relative start time
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/state:
    get:
      description: 0-Unknown 1-Running 2-Stopped 3-Halted 4-Paused 5-Deleted 6-Stopping
      operationId: get_agent_state
      parameters:
      - description: Agent to return the state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: current running state of the agent
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/state_changed:
    get:
      description: has the agent state changed?
      operationId: get_state_changed
      parameters:
      - description: Agent to return the indicator
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: has the agent state changed?
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/statistics:
    get:
      description: "The statistics are returned as 64-bit decimal numbers for the\
        \ following statistics, total, discarded, error, GET, GETNEXT, SET, GETBULK,\
        \ trap, GET variables, GETNEXT variables, SET variables, GETBULK variables,\
        \ INFORM sent, INFORM re-sent, INFORM timed out, INFORM acked, INFORM REPORT"
      operationId: get_statistics
      parameters:
      - description: Agent to return the statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: current statistics of the agent instance
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/trace:
    get:
      description: SNMP PDU tracing
      operationId: get_trace
      parameters:
      - description: Agent to return the indicator
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: SNMP PDU tracing
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/validate:
    get:
      description: "Is a bitmask in which with the following bits (from LSB) check\
        \ for type, length, range, access"
      operationId: get_validate
      parameters:
      - description: Agent to return the bitmask integer
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: SNMP SET validation policy.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/get/write:
    get:
      description: write community string
      operationId: get_write_community
      parameters:
      - description: Agent to return the SNMP write community string
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/delay"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: write community string
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/halt:
    put:
      description: Halt the current agent.
      operationId: halt
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Halt the current agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/ipalias/add/{IP}/{port}/{mask}/{interface}:
    post:
      description: "port defaults to 161 if not specified. mask defaults to the class-based\
        \ network mask for the address. interface defaults to the default network\
        \ interface.  If port is set to 0, the system will automatically select a\
        \ port number. This is useful for client-mode protocols, such as TFTP or TOD.\
        \ Upon start of an IP alias with a 0 (auto-assigned) port number, its port\
        \ will change to contain the value of the selected system port."
      operationId: add_ipalias
      parameters:
      - description: Agent to add the IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "IP address , IPv4 or IPv6"
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: "SNMP port , 0 or empty for default"
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Netmask, empty for default"
        explode: false
        in: path
        name: mask
        required: true
        schema:
          type: string
        style: simple
      - description: Interface. Empty for default
        explode: false
        in: path
        name: interface
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new ipalias for the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/ipalias/delete/{IP}/{port}:
    delete:
      description: port defaults to 161 if not specified.
      operationId: del_ipalias
      parameters:
      - description: Agent to delete the IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "IP address , IPv4 or IPv6"
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: "SNMP port , 0 or empty for default"
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes an existing ipalias from the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/ipalias/list:
    get:
      description: "The agent host address (set with mimic agent set host) is not\
        \ in this list, since it is already accessible separately with mimic agent\
        \ get host."
      operationId: list_ipaliases
      parameters:
      - description: Agent to show the IP alias list
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IPAlias'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Lists all the additional ipaliases configured for the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/ipalias/start/{IP}/{port}:
    put:
      description: port defaults to 161 if not specified.
      operationId: start_ipalias
      parameters:
      - description: Agent to start the IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "IP address , IPv4 or IPv6"
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: "SNMP port , 0 or empty for default"
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Starts an existing ipalias for the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/ipalias/status/{IP}/{port}:
    get:
      description: port defaults to 161 if not specified.
      operationId: status_ipalias
      parameters:
      - description: Agent to show status of the IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "IP address , IPv4 or IPv6"
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: "SNMP port , 0 or empty for default"
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "Returns the status (0=down, 1=up) of an existing ipalias for the agent."
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/ipalias/stop/{IP}/{port}:
    put:
      description: port defaults to 161 if not specified.
      operationId: stop_ipalias
      parameters:
      - description: Agent to stop the IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "IP address , IPv4 or IPv6"
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: "SNMP port , 0 or empty for default"
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stops an existing ipalias for the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/pause:
    put:
      description: Pause the current agent.
      operationId: pause_now
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Pause the current agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/coap/get/args:
    get:
      description: "Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_coap_get_args
      parameters:
      - description: Agent to show the COAP argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's COAP argument structure
      tags:
      - COAP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/coap/get/config:
    get:
      description: "Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_coap_get_config
      parameters:
      - description: Agent to show the COAP configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigCOAP'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's COAP configuration
      tags:
      - COAP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/coap/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_coap_get_statistics
      parameters:
      - description: Agent to show COAP statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's COAP statistics
      tags:
      - COAP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/coap/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_coap_get_trace
      parameters:
      - description: Agent to show whether COAP tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigCOAP'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's COAP traffic tracing
      tags:
      - COAP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/coap/set/config/{argument}/{value}:
    put:
      description: "Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_coap_set_config
      parameters:
      - description: Agent to set the COAP configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the COAP configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the COAP configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's COAP configuration
      tags:
      - COAP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/coap/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_coap_set_trace
      parameters:
      - description: Agent to set the COAP tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the COAP tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's COAP traffic tracing
      tags:
      - COAP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/dhcp/get/args:
    get:
      description: Agent's DHCP configuration particulars
      operationId: protocol_dhcp_get_args
      parameters:
      - description: Agent to show the DHCP argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's DHCP argument structure
      tags:
      - DHCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/dhcp/get/config:
    get:
      description: "Agent's DHCP configuration hwaddr,classid,add_options,script"
      operationId: protocol_dhcp_get_config
      parameters:
      - description: Agent to show the DHCP configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDHCP'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's DHCP configuration
      tags:
      - DHCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/dhcp/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_dhcp_get_statistics
      parameters:
      - description: Agent to show DHCP statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's DHCP statistics
      tags:
      - DHCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/dhcp/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_dhcp_get_trace
      parameters:
      - description: Agent to show whether DHCP tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDHCP'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's DHCP traffic tracing
      tags:
      - DHCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/dhcp/params:
    get:
      description: DHCP-OFFER message parameters
      operationId: protocol_dhcp_params
      parameters:
      - description: Agent to show DHCP DHCP-OFFER message
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the parameters configured by the server in its DHCP-OFFER message
      tags:
      - DHCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/dhcp/set/config/{argument}/{value}:
    put:
      description: "Agent's DHCP configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_dhcp_set_config
      parameters:
      - description: Agent to set the DHCP configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the DHCP configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the DHCP configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's DHCP configuration
      tags:
      - DHCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/dhcp/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_dhcp_set_trace
      parameters:
      - description: Agent to set the DHCP tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the DHCP tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's DHCP traffic tracing
      tags:
      - DHCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ipmi/get/args:
    get:
      description: "Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_ipmi_get_args
      parameters:
      - description: Agent to show the IPMI argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's IPMI argument structure
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ipmi/get/config:
    get:
      description: "Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_ipmi_get_config
      parameters:
      - description: Agent to show the IPMI configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigIPMI'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's IPMI configuration
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ipmi/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_ipmi_get_statistics
      parameters:
      - description: Agent to show IPMI statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's IPMI statistics
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ipmi/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_ipmi_get_trace
      parameters:
      - description: Agent to show whether IPMI tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigIPMI'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's IPMI traffic tracing
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ipmi/get/{attr}:
    get:
      description: "Attribute can be working_authtype ,session_id, outbound_seq, inbound_seq\
        \ , field_N"
      operationId: protocol_ipmi_get_attr
      parameters:
      - description: Agent to set the IPMI tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attribute
        explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the outgoing message's attributes
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ipmi/set/config/{argument}/{value}:
    put:
      description: "Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_ipmi_set_config
      parameters:
      - description: Agent to set the IPMI configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the IPMI configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the IPMI configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's IPMI configuration
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ipmi/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_ipmi_set_trace
      parameters:
      - description: Agent to set the IPMI tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the IPMI tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's IPMI traffic tracing
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ipmi/set/{attr}/{value}:
    put:
      description: "Attribute can be working_authtype ,session_id, outbound_seq, inbound_seq\
        \ , field_N"
      operationId: protocol_ipmi_set_attr
      parameters:
      - description: Agent to set the IPMI tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attribute
        explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the outgoing message's attributes
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/get/protstate:
    get:
      description: "0 - stopped, 2 - disconnected, 3 - connecting, 4 - connected,\
        \ 5 - waiting for CONNACK, 6 - waiting for SUBACK, 7 - CONNACK received, in\
        \ steady state"
      operationId: protocol_mqtt_client_get_protstate
      parameters:
      - description: Agent to show MQTT state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT TCP connection state
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/get/state:
    get:
      description: "0 means stopped, 1 means running"
      operationId: protocol_mqtt_client_get_state
      parameters:
      - description: Agent to show MQTT state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT state
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/card:
    get:
      description: 0 or more
      operationId: protocol_mqtt_client_message_card
      parameters:
      - description: Agent to show MQTT message state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's current messages' cardinality
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/get/{msgNum}/{attr}:
    get:
      description: "Attribute can be topic, interval, count, sent , pre, post, properties(list\
        \ of PUBLISH properties), properties.i (i-th PUBLISH property), properties.PROP-NAME\
        \ (PUBLISH property with name PROP-NAME)"
      operationId: protocol_mqtt_client_message_get
      parameters:
      - description: Agent to show MQTT state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Message Number
        explode: false
        in: path
        name: msgNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attribute
        explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's message attributes
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/set/{msgNum}/{attr}/{value}:
    put:
      description: "Attribute can not be sent or properties . Use set/{msgNum}/count/{value}\
        \ together with get/{msgNum}/count to throttle the outgoing MQTT message to\
        \ the broker."
      operationId: protocol_mqtt_client_message_set
      parameters:
      - description: Agent to show MQTT state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Message Number
        explode: false
        in: path
        name: msgNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attribute
        explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      - description: Value
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's message attributes
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/resubscribe/{subNum}:
    put:
      description: Restarts a subscription
      operationId: protocol_mqtt_client_resubscribe
      parameters:
      - description: Agent to change MQTT state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Subscription Number
        explode: false
        in: path
        name: subNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Restart receiving messages from a subcription of the agent
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/abort:
    put:
      description: Abort a connection
      operationId: protocol_mqtt_client_runtime_abort
      parameters:
      - description: Agent to set MQTT behavior
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Abort agent's MQTT TCP session without sending DISCONNECT command
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/connect:
    put:
      description: Start a connection
      operationId: protocol_mqtt_client_runtime_connect
      parameters:
      - description: Agent to set MQTT behavior
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start agent's MQTT TCP session
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/disconnect:
    put:
      description: Graceful disconnect
      operationId: protocol_mqtt_client_runtime_disconnect
      parameters:
      - description: Agent to set MQTT behavior
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Disconnect agent's MQTT TCP session by sending DISCONNECT command
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/broker/{brokerAddr}:
    put:
      description: Broker IP address
      operationId: protocol_mqtt_client_set_broker
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Broker address
        explode: false
        in: path
        name: brokerAddr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT TCP connection target broker
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/cleansession/{cleanOrNot}:
    put:
      description: "1 for clean session , 0 not"
      operationId: protocol_mqtt_client_set_cleansession
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Clean session
        explode: false
        in: path
        name: cleanOrNot
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT session
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/clientid/{clientID}:
    put:
      description: MQTT client ID
      operationId: protocol_mqtt_client_set_clientid
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Client ID
        explode: false
        in: path
        name: clientID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client ID
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/keepalive/{aliveTime}:
    put:
      description: Keep alive the TCP connection
      operationId: protocol_mqtt_client_set_keepalive
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: period to send keepalive messages
        explode: false
        in: path
        name: aliveTime
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT TCP keepalive
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/on_disconnect/{action}:
    put:
      description: Action to take when MQTT session is disconnected
      operationId: protocol_mqtt_client_set_on_disconnect
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Action to take
        explode: false
        in: path
        name: action
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT disconnection action
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/password/{password}:
    put:
      description: Client password
      operationId: protocol_mqtt_client_set_password
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Password
        explode: false
        in: path
        name: password
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client password
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/port/{port}:
    put:
      description: target TCP port
      operationId: protocol_mqtt_client_set_port
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: TCP port
        explode: false
        in: path
        name: port
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT TCP connection target port
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/username/{username}:
    put:
      description: Client username
      operationId: protocol_mqtt_client_set_username
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: User name
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client username
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willmsg/{msg}:
    put:
      description: Will message
      operationId: protocol_mqtt_client_set_willmsg
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Will message
        explode: false
        in: path
        name: msg
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client's will
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willqos/{qos}:
    put:
      description: QOS field
      operationId: protocol_mqtt_client_set_willqos
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Quality of service field
        explode: false
        in: path
        name: qos
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT will message's QOS field
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willretain/{retain}:
    put:
      description: Retaining will
      operationId: protocol_mqtt_client_set_willretain
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Retaining will
        explode: false
        in: path
        name: retain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT retained will
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willtopic/{topic}:
    put:
      description: Will topic for the will message
      operationId: protocol_mqtt_client_set_willtopic
      parameters:
      - description: Agent to set MQTT config
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: topic
        explode: false
        in: path
        name: topic
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client will's topic
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/card:
    get:
      description: 0 or more
      operationId: protocol_mqtt_client_subscribe_card
      parameters:
      - description: Agent to show MQTT subscription state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's current subscriptions' cardinality
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/get/{subNum}/{attr}:
    get:
      description: "Attribute can be topic, properties(list of SUBSCRIBE properties),\
        \ properties.i (i-th SUBSCRIBE property), properties.PROP-NAME (SUBSCRIBE\
        \ property with name PROP-NAME)"
      operationId: protocol_mqtt_client_subscribe_get
      parameters:
      - description: Agent to show MQTT state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Subscribe Number
        explode: false
        in: path
        name: subNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attribute
        explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's subscription attributes
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/set/{subNum}/{attr}/{value}:
    put:
      description: Attribute can not be properties .
      operationId: protocol_mqtt_client_subscribe_set
      parameters:
      - description: Agent to show MQTT state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Subscribe Number
        explode: false
        in: path
        name: subNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attribute
        explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      - description: Value
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's subscribe attributes
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/client/unsubscribe/{subNum}:
    put:
      description: Stops a subscription
      operationId: protocol_mqtt_client_unsubscribe
      parameters:
      - description: Agent to change MQTT state
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Subscription Number
        explode: false
        in: path
        name: subNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stops receiving messages from a subcription of the agent
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/get/args:
    get:
      description: "Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_mqtt_get_args
      parameters:
      - description: Agent to show the MQTT argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT argument structure
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/get/config:
    get:
      description: "Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_mqtt_get_config
      parameters:
      - description: Agent to show the MQTT configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMQTT'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT configuration
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_mqtt_get_statistics
      parameters:
      - description: Agent to show MQTT statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT statistics
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_mqtt_get_trace
      parameters:
      - description: Agent to show whether MQTT tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMQTT'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT traffic tracing
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/set/config/{argument}/{value}:
    put:
      description: "Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_mqtt_set_config
      parameters:
      - description: Agent to set the MQTT configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the MQTT configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the MQTT configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT configuration
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/mqtt/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_mqtt_set_trace
      parameters:
      - description: Agent to set the MQTT tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the MQTT tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT traffic tracing
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/dfs_interval/{interval}:
    put:
      description: Interval in msec .
      operationId: protocol_netflow_change_dfs
      parameters:
      - description: Agent to set the NETFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: NETFLOW export interval
        explode: false
        in: path
        name: interval
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Change NETFLOW data export interval
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/tfs_interval/{interval}:
    put:
      description: Interval in msec .
      operationId: protocol_netflow_change_tfs
      parameters:
      - description: Agent to set the NETFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: NETFLOW export interval
        explode: false
        in: path
        name: interval
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Change NETFLOW template export interval
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/{flowset-uid}/{field-num}/{attr}/{value}:
    put:
      description: Change attributes
      operationId: protocol_netflow_change_attr
      parameters:
      - description: Agent to set the NETFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: flowset-uid
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: field-num
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Change NETFLOW export attributes
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/flow/list:
    get:
      description: Show list of NETFLOW exports
      operationId: protocol_netflow_list
      parameters:
      - description: Agent to show NETFLOW statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show list of NETFLOW exports
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/get/args:
    get:
      description: "Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_netflow_get_args
      parameters:
      - description: Agent to show the NETFLOW argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's NETFLOW argument structure
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/get/config:
    get:
      description: "Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_netflow_get_config
      parameters:
      - description: Agent to show the NETFLOW configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigNETFLOW'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's NETFLOW configuration
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_netflow_get_statistics
      parameters:
      - description: Agent to show NETFLOW statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's NETFLOW statistics
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_netflow_get_trace
      parameters:
      - description: Agent to show whether NETFLOW tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigNETFLOW'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's NETFLOW traffic tracing
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/halt:
    put:
      description: Halt NETFLOW traffic
      operationId: protocol_netflow_halt
      parameters:
      - description: Agent to set the NETFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Halt NETFLOW traffic
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/reload:
    put:
      description: Reload NETFLOW configuration before resuming traffic
      operationId: protocol_netflow_reload
      parameters:
      - description: Agent to set the NETFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Reload NETFLOW configuration before resuming traffic
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/resume:
    put:
      description: Resuming traffic
      operationId: protocol_netflow_resume
      parameters:
      - description: Agent to set the NETFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Resuming traffic
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/set/collector/{collectorIP}:
    put:
      description: Allow changing collector without stopping agent
      operationId: protocol_netflow_set_collector
      parameters:
      - description: Agent to set the NETFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: file name to load config
        explode: false
        in: path
        name: collectorIP
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Swap NETFLOW collector
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/set/config/{argument}/{value}:
    put:
      description: "Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_netflow_set_config
      parameters:
      - description: Agent to set the NETFLOW configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the NETFLOW configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the NETFLOW configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's NETFLOW configuration
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/set/filename/{fileName}:
    put:
      description: Allow reloading the configuration file for an agent without stopping
        agent
      operationId: protocol_netflow_set_fileName
      parameters:
      - description: Agent to set the NETFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: file name to load config
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Swap NETFLOW configuration file
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/netflow/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_netflow_set_trace
      parameters:
      - description: Agent to set the NETFLOW tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the NETFLOW tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's NETFLOW traffic tracing
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/get/args:
    get:
      description: "Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_proxy_get_args
      parameters:
      - description: Agent to show the PROXY argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's PROXY argument structure
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/get/config:
    get:
      description: "Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_proxy_get_config
      parameters:
      - description: Agent to show the PROXY configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigPROXY'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's PROXY configuration
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_proxy_get_statistics
      parameters:
      - description: Agent to show PROXY statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's PROXY statistics
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_proxy_get_trace
      parameters:
      - description: Agent to show whether PROXY tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigPROXY'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's PROXY traffic tracing
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/port/add/{port}/{target}/{targetPort}:
    post:
      description: Additional proxy target
      operationId: protocol_proxy_port_add
      parameters:
      - description: Agent to manipulate PROXY target
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: target
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: targetPort
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add individual proxy target on the agent and the simulator host
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/port/isStarted/{port}:
    get:
      description: Check individual target
      operationId: protocol_proxy_port_isstarted
      parameters:
      - description: Agent to manipulate PROXY target
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check individual target
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/port/list:
    get:
      operationId: protocol_proxy_port_list
      parameters:
      - description: Agent to manipulate PROXY target
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List all proxy targets
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/port/remove/{port}:
    delete:
      description: Remove proxy target
      operationId: protocol_proxy_port_remove
      parameters:
      - description: Agent to manipulate PROXY target
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove individual proxy target on the agent and the simulator host
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/port/start/{port}:
    put:
      description: Start additional target
      operationId: protocol_proxy_port_start
      parameters:
      - description: Agent to manipulate PROXY target
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start additional target
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/port/stop/{port}:
    put:
      description: Stop additional target
      operationId: protocol_proxy_port_stop
      parameters:
      - description: Agent to manipulate PROXY target
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stop additional target
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/set/config/{argument}/{value}:
    put:
      description: "Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_proxy_set_config
      parameters:
      - description: Agent to set the PROXY configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the PROXY configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the PROXY configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's PROXY configuration
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/proxy/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_proxy_set_trace
      parameters:
      - description: Agent to set the PROXY tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the PROXY tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's PROXY traffic tracing
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/get/args:
    get:
      description: "Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_sflow_get_args
      parameters:
      - description: Agent to show the SFLOW argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SFLOW argument structure
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/get/config:
    get:
      description: "Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_sflow_get_config
      parameters:
      - description: Agent to show the SFLOW configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSFLOW'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SFLOW configuration
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_sflow_get_statistics
      parameters:
      - description: Agent to show SFLOW statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SFLOW statistics
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_sflow_get_trace
      parameters:
      - description: Agent to show whether SFLOW tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSFLOW'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SFLOW traffic tracing
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/halt:
    put:
      description: Halt SFLOW traffic
      operationId: protocol_sflow_halt
      parameters:
      - description: Agent to set the SFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Halt SFLOW traffic
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/reload:
    put:
      description: Reload SFLOW configuration before resuming traffic
      operationId: protocol_sflow_reload
      parameters:
      - description: Agent to set the SFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Reload SFLOW configuration before resuming traffic
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/resume:
    put:
      description: Resuming traffic
      operationId: protocol_sflow_resume
      parameters:
      - description: Agent to set the SFLOW
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Resuming traffic
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/set/config/{argument}/{value}:
    put:
      description: "Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_sflow_set_config
      parameters:
      - description: Agent to set the SFLOW configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the SFLOW configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the SFLOW configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SFLOW configuration
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/sflow/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_sflow_set_trace
      parameters:
      - description: Agent to set the SFLOW tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the SFLOW tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SFLOW traffic tracing
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/get/args:
    get:
      description: "Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_snmptcp_get_args
      parameters:
      - description: Agent to show the SNMPTCP argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SNMPTCP argument structure
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/get/config:
    get:
      description: "Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_snmptcp_get_config
      parameters:
      - description: Agent to show the SNMPTCP configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSNMPTCP'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SNMPTCP configuration
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_snmptcp_get_statistics
      parameters:
      - description: Agent to show SNMPTCP statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SNMPTCP statistics
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_snmptcp_get_trace
      parameters:
      - description: Agent to show whether SNMPTCP tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSNMPTCP'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SNMPTCP traffic tracing
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/disable/{ipaddress}/{port}:
    put:
      description: "By default, the MIMIC SNMPTCP server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_snmptcp_ipalias_disable
      parameters:
      - description: Agent to manipulate SNMPTCP IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Disable individual IP aliases on the agent and the simulator host
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/enable/{ipaddress}/{port}:
    put:
      description: "By default, the MIMIC SNMPTCP server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_snmptcp_ipalias_enable
      parameters:
      - description: Agent to manipulate SNMPTCP IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Enable individual IP aliases on the agent and the simulator host
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/isenabled/{ipaddress}/{port}:
    get:
      description: "By default, the MIMIC SNMPTCP server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_snmptcp_ipalias_isenabled
      parameters:
      - description: Agent to manipulate SNMPTCP IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check individual IP aliases on the agent and the simulator host
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/list:
    get:
      description: "By default, the MIMIC SNMPTCP server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_snmptcp_ipalias_list
      parameters:
      - description: Agent to manipulate SNMPTCP IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IPAlias'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List all IP aliases on the agent and the simulator host
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/set/config/{argument}/{value}:
    put:
      description: "Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_snmptcp_set_config
      parameters:
      - description: Agent to set the SNMPTCP configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the SNMPTCP configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the SNMPTCP configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SNMPTCP configuration
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmptcp/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_snmptcp_set_trace
      parameters:
      - description: Agent to set the SNMPTCP tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the SNMPTCP tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SNMPTCP traffic tracing
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  ? /mimic/agent/{agentNum}/protocol/msg/snmpv3/access/add/{groupName}/{prefix}/{securityModel}/{securityLevel}/{contextMatch}/{readView}/{writeView}/{notifyView}
  : post:
      description: Adds a new access entry with the specified parameters.
      operationId: protocol_snmpv3_access_add
      parameters:
      - description: Agent to add the SNMPv3 access
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 access name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 prefix
        explode: false
        in: path
        name: prefix
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 access security model
        explode: false
        in: path
        name: securityModel
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 access security level
        explode: false
        in: path
        name: securityLevel
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 access context match
        explode: false
        in: path
        name: contextMatch
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 access read view
        explode: false
        in: path
        name: readView
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 access write view
        explode: false
        in: path
        name: writeView
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 access notify view
        explode: false
        in: path
        name: notifyView
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new access entry with the specified parameters.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/access/clear:
    delete:
      description: Clears all access entries.
      operationId: protocol_snmpv3_access_clear
      parameters:
      - description: Agent to add the SNMPv3 access
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears all access entries.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/access/del/{accessName}:
    delete:
      description: Deletes the specified access entry.
      operationId: protocol_snmpv3_access_del
      parameters:
      - description: Agent to add the SNMPv3 access
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 access name
        explode: false
        in: path
        name: accessName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes the specified access entry.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/access/list:
    get:
      description: Returns the current acccess entries as an array of strings.
      operationId: protocol_snmpv3_access_list
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current acccess entries as an array of strings.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/get/config:
    get:
      description: Returns the SNMPv3 configuration.
      operationId: protocol_snmpv3_get_config
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSNMPv3'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the SNMPv3 configuration.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/get/context_engineid:
    get:
      description: Retrieves the contextEngineID for the agent instance.
      operationId: protocol_snmpv3_get_context_engineid
      parameters:
      - description: Agent to show the SNMPv3 engine
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Retrieves the contextEngineID for the agent instance.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/get/engineboots:
    get:
      description: Retrieves the number of times the agent has been restarted.
      operationId: protocol_snmpv3_get_engineboots
      parameters:
      - description: Agent to show the SNMPv3 engine
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Retrieves the number of times the agent has been restarted.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/get/engineid:
    get:
      description: "For stopped agents, this operation is meaningless. If not explicitly\
        \ set by the user then the autogenerated engineID is returned. The format\
        \ of the engineID is in the familiar hex format, eg. \\x01 23 45 67 89..."
      operationId: protocol_snmpv3_get_engineid
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "For started agents, retrieves the current engineID in use by the snmpv3\
        \ module."
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/get/enginetime:
    get:
      description: Retrieves the time in seconds for which the agent has been running.
      operationId: protocol_snmpv3_get_enginetime
      parameters:
      - description: Agent to show the SNMPv3 engine
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Retrieves the time in seconds for which the agent has been running.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/group/add/{groupName}/{securityModel}/{securityName}:
    post:
      description: Adds a new group entry with the specified parameters.
      operationId: protocol_snmpv3_group_add
      parameters:
      - description: Agent to add the SNMPv3 group
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 group name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 group security model
        explode: false
        in: path
        name: securityModel
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 group security name
        explode: false
        in: path
        name: securityName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new group entry with the specified parameters.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/group/clear:
    delete:
      description: Clears all group entries.
      operationId: protocol_snmpv3_group_clear
      parameters:
      - description: Agent to add the SNMPv3 group
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears all group entries.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/group/del/{groupName}:
    delete:
      description: Deletes the specified group entry.
      operationId: protocol_snmpv3_group_del
      parameters:
      - description: Agent to add the SNMPv3 group
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 group name
        explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes the specified group entry.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/group/list:
    get:
      description: Returns the current group entries as an array of strings.
      operationId: protocol_snmpv3_group_list
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current group entries as an array of strings.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/set/config/{parameter}/{value}:
    put:
      description: Changes the SNMPv3 configuration.
      operationId: protocol_snmpv3_set_config
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 configuration parameter
        explode: false
        in: path
        name: parameter
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 parameter value
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Changes the SNMPv3 configuration.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  ? /mimic/agent/{agentNum}/protocol/msg/snmpv3/user/add/{userName}/{securityName}/{authProtocol}/{authKey}/{privProtocol}/{privKey}
  : post:
      description: Adds a new user entry with the specified parameters.
      operationId: protocol_snmpv3_user_add
      parameters:
      - description: Agent to add the SNMPv3 user
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 user name
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 user security name
        explode: false
        in: path
        name: securityName
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 user authentication protocol
        explode: false
        in: path
        name: authProtocol
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 user authentication key
        explode: false
        in: path
        name: authKey
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 user privacy encryption protocol
        explode: false
        in: path
        name: privProtocol
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 user privacy encryption key
        explode: false
        in: path
        name: privKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new user entry with the specified parameters.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/user/clear:
    delete:
      description: Clears all user entries.
      operationId: protocol_snmpv3_user_clear
      parameters:
      - description: Agent to add the SNMPv3 user
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears all user entries.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/user/del/{userName}:
    delete:
      description: Deletes the specified user entry.
      operationId: protocol_snmpv3_user_del
      parameters:
      - description: Agent to add the SNMPv3 user
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 user name
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes the specified user entry.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/user/list:
    get:
      description: Returns the current user entries as a Tcl list.
      operationId: protocol_snmpv3_user_list
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current user entries as a Tcl list.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/usm/save:
    put:
      description: Saves current user settings in the currently loaded USM config
        file.
      operationId: protocol_snmpv3_usm_save
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Saves current user settings in the currently loaded USM config file.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/usm/saveas/{filename}:
    put:
      description: Saves current user settings in the specified USM config file.
      operationId: protocol_snmpv3_usm_saveas
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Filename to save
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Saves current user settings in the specified USM config file.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/vacm/save:
    put:
      description: "Saves current group, access, view settings in the currently loaded\
        \ VACM config file."
      operationId: protocol_snmpv3_vacm_save
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "Saves current group, access, view settings in the currently loaded\
        \ VACM config file."
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/vacm/saveas/{filename}:
    put:
      description: "Saves current group, access, view settings in the specified VACM\
        \ config file."
      operationId: protocol_snmpv3_vacm_saveas
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Filename to save
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "Saves current group, access, view settings in the specified VACM config\
        \ file."
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/view/add/{viewName}/{viewType}/{subtree}/{mask}:
    post:
      description: Adds a new view entry with the specified parameters.
      operationId: protocol_snmpv3_view_add
      parameters:
      - description: Agent to add the SNMPv3 view
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 view name
        explode: false
        in: path
        name: viewName
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 view type
        explode: false
        in: path
        name: viewType
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 view subtree
        explode: false
        in: path
        name: subtree
        required: true
        schema:
          type: string
        style: simple
      - description: SNMPv3 view mask
        explode: false
        in: path
        name: mask
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new view entry with the specified parameters.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/view/clear:
    delete:
      description: Clears all view entries.
      operationId: protocol_snmpv3_view_clear
      parameters:
      - description: Agent to add the SNMPv3 view
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears all view entries.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/view/del/{viewName}:
    delete:
      description: Deletes the specified view entry.
      operationId: protocol_snmpv3_view_del
      parameters:
      - description: Agent to add the SNMPv3 view
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMPv3 view name
        explode: false
        in: path
        name: viewName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes the specified view entry.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/snmpv3/view/list:
    get:
      description: Returns the current view entries as an array of strings.
      operationId: protocol_snmpv3_view_list
      parameters:
      - description: Agent to show the SNMPv3 configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current view entries as an array of strings.
      tags:
      - SNMPv3
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/get/args:
    get:
      description: "Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_ssh_get_args
      parameters:
      - description: Agent to show the SSH argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SSH argument structure
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/get/config:
    get:
      description: "Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_ssh_get_config
      parameters:
      - description: Agent to show the SSH configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSSH'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SSH configuration
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_ssh_get_statistics
      parameters:
      - description: Agent to show SSH statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SSH statistics
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_ssh_get_trace
      parameters:
      - description: Agent to show whether SSH tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSSH'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SSH traffic tracing
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/disable/{ipaddress}/{port}:
    put:
      description: "By default, the MIMIC SSH server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_ssh_ipalias_disable
      parameters:
      - description: Agent to manipulate SSH IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Disable individual IP aliases on the agent and the simulator host
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/enable/{ipaddress}/{port}:
    put:
      description: "By default, the MIMIC SSH server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_ssh_ipalias_enable
      parameters:
      - description: Agent to manipulate SSH IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Enable individual IP aliases on the agent and the simulator host
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/isenabled/{ipaddress}/{port}:
    get:
      description: "By default, the MIMIC SSH server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_ssh_ipalias_isenabled
      parameters:
      - description: Agent to manipulate SSH IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check individual IP aliases on the agent and the simulator host
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/list:
    get:
      description: "By default, the MIMIC SSH server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_ssh_ipalias_list
      parameters:
      - description: Agent to manipulate SSH IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IPAlias'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List all IP aliases on the agent and the simulator host
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/set/config/{argument}/{value}:
    put:
      description: "Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_ssh_set_config
      parameters:
      - description: Agent to set the SSH configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the SSH configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the SSH configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SSH configuration
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/ssh/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_ssh_set_trace
      parameters:
      - description: Agent to set the SSH tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the SSH tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SSH traffic tracing
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/get/args:
    get:
      description: "Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_syslog_get_args
      parameters:
      - description: Agent to show the SYSLOG argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SYSLOG argument structure
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/get/config:
    get:
      description: "Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_syslog_get_config
      parameters:
      - description: Agent to show the SYSLOG configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSYSLOG'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SYSLOG configuration
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_syslog_get_statistics
      parameters:
      - description: Agent to show SYSLOG statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SYSLOG statistics
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_syslog_get_trace
      parameters:
      - description: Agent to show whether SYSLOG tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSYSLOG'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SYSLOG traffic tracing
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/get/{attr}:
    get:
      description: "Attribute can be server , sequence , separator , hostname , timestamp"
      operationId: protocol_syslog_get_attr
      parameters:
      - description: Agent to set the SYSLOG tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attribute
        explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the outgoing message's attributes
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/send/{pri}:
    post:
      description: "1 to enable, 0 to disable"
      operationId: protocol_syslog_send
      parameters:
      - description: Agent to set the SYSLOG tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Message Priority
        explode: false
        in: path
        name: pri
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogMsg'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SYSLOG traffic tracing
      tags:
      - SYSLOG
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/set/config/{argument}/{value}:
    put:
      description: "Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_syslog_set_config
      parameters:
      - description: Agent to set the SYSLOG configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the SYSLOG configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the SYSLOG configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SYSLOG configuration
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_syslog_set_trace
      parameters:
      - description: Agent to set the SYSLOG tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the SYSLOG tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SYSLOG traffic tracing
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/syslog/set/{attr}/{value}:
    put:
      description: "Attribute can be server , sequence , separator , hostname , timestamp"
      operationId: protocol_syslog_set_attr
      parameters:
      - description: Agent to set the SYSLOG tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attribute
        explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the outgoing message's attributes
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/connection/logon/{connectionID}/{user}/{password}:
    put:
      description: Logon change allows (hidden) commands for a different access mode
        to run.
      operationId: protocol_telnet_connection_logon
      parameters:
      - description: Agent to manipulate TELNET connection
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: connectionID
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: password
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Changes the connection's current logon.
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/connection/request/{connectionID}/{command}:
    put:
      description: Equivalent of the command typed in by the user.
      operationId: protocol_telnet_connection_request
      parameters:
      - description: Agent to manipulate TELNET connection
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: connectionID
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: command
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Executes the command asynchronously .
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/connection/signal/{connectionID}/{signalName}:
    put:
      description: Signal name is either connect or idle
      operationId: protocol_telnet_connection_signal
      parameters:
      - description: Agent to manipulate TELNET connection
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: connectionID
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: signalName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Triggers the asynchronous signal event with the specified signal name
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/get/args:
    get:
      description: "Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_telnet_get_args
      parameters:
      - description: Agent to show the TELNET argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET argument structure
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/get/config:
    get:
      description: "Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_telnet_get_config
      parameters:
      - description: Agent to show the TELNET configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTELNET'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET configuration
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_telnet_get_statistics
      parameters:
      - description: Agent to show TELNET statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET statistics
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_telnet_get_trace
      parameters:
      - description: Agent to show whether TELNET tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTELNET'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET traffic tracing
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/disable/{ipaddress}/{port}:
    put:
      description: "By default, the MIMIC TELNET server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_telnet_ipalias_disable
      parameters:
      - description: Agent to manipulate TELNET IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Disable individual IP aliases on the agent and the simulator host
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/enable/{ipaddress}/{port}:
    put:
      description: "By default, the MIMIC TELNET server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_telnet_ipalias_enable
      parameters:
      - description: Agent to manipulate TELNET IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Enable individual IP aliases on the agent and the simulator host
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/isenabled/{ipaddress}/{port}:
    get:
      description: "By default, the MIMIC TELNET server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_telnet_ipalias_isenabled
      parameters:
      - description: Agent to manipulate TELNET IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: ipaddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check individual IP aliases on the agent and the simulator host
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/list:
    get:
      description: "By default, the MIMIC TELNET server listens on all the IP addresses\
        \ (aliases) that are configured for an agent"
      operationId: protocol_telnet_ipalias_list
      parameters:
      - description: Agent to manipulate TELNET IP alias
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IPAlias'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List all IP aliases on the agent and the simulator host
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/server/get/connections:
    get:
      description: IDs of all connected connections
      operationId: protocol_telnet_server_get_connections
      parameters:
      - description: Agent to show TELNET configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET connections
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/server/get/keymap:
    get:
      description: Keymap file name
      operationId: protocol_telnet_server_get_keymap
      parameters:
      - description: Agent to show TELNET statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET keymap file name
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/server/get/rulesdb:
    get:
      description: Rules db file name
      operationId: protocol_telnet_server_get_rulesdb
      parameters:
      - description: Agent to show TELNET statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET rules db file name
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/server/get/state:
    get:
      description: "Return 1 means accepting connections, 0 not"
      operationId: protocol_telnet_server_get_state
      parameters:
      - description: Agent to show TELNET statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET server state
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/server/get/userdb:
    get:
      description: User db file name
      operationId: protocol_telnet_server_get_userdb
      parameters:
      - description: Agent to show TELNET statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET user db file name
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/server/get/users:
    get:
      description: List of users
      operationId: protocol_telnet_server_get_users
      parameters:
      - description: Agent to show TELNET configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TelnetUser'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET users
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/set/config/{argument}/{value}:
    put:
      description: "Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_telnet_set_config
      parameters:
      - description: Agent to set the TELNET configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the TELNET configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the TELNET configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TELNET configuration
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/telnet/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_telnet_set_trace
      parameters:
      - description: Agent to set the TELNET tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the TELNET tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TELNET traffic tracing
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/get/args:
    get:
      description: "Agent's TFTP configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_tftp_get_args
      parameters:
      - description: Agent to show the TFTP argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TFTP argument structure
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/get/config:
    get:
      description: Agent's TFTP configuration
      operationId: protocol_tftp_get_config
      parameters:
      - description: Agent to show the TFTP configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTFTP'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TFTP configuration
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_tftp_get_statistics
      parameters:
      - description: Agent to show TFTP statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TFTP statistics
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_tftp_get_trace
      parameters:
      - description: Agent to show whether TFTP tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTFTP'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TFTP traffic tracing
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/session/read/server/{srcfile}:
    post:
      description: Session ID is returned
      operationId: protocol_tftp_session_read
      parameters:
      - description: Agent to show TFTP statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: File name to retrieve from server
        explode: false
        in: path
        name: srcfile
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Create a read session to download srcfile from server
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/session/write/server/{srcfile}:
    post:
      description: Session ID is returned
      operationId: protocol_tftp_session_write
      parameters:
      - description: Agent to show TFTP statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: File name to upload to server
        explode: false
        in: path
        name: srcfile
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Create a read session to upload srcfile to server
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/set/config/{argument}/{value}:
    put:
      description: Agent's TFTP configuration
      operationId: protocol_tftp_set_config
      parameters:
      - description: Agent to set the TFTP configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the TFTP configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the TFTP configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TFTP configuration
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_tftp_set_trace
      parameters:
      - description: Agent to set the TFTP tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the TFTP tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TFTP traffic tracing
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/get/{parameter}:
    get:
      description: "Parameter is server , port , or dstfile"
      operationId: protocol_tftp_session_get_parameter
      parameters:
      - description: Agent to show TFTP parameter
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SessionID
        explode: false
        in: path
        name: sessionID
        required: true
        schema:
          type: string
        style: simple
      - description: Parameter to show
        explode: false
        in: path
        name: parameter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show a parameter of a TFTP sesssion
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/set/{parameter}/{value}:
    put:
      description: "Parameter is server , port , or dstfile"
      operationId: protocol_tftp_session_set_parameter
      parameters:
      - description: Agent to set TFTP parameter
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SessionID
        explode: false
        in: path
        name: sessionID
        required: true
        schema:
          type: string
        style: simple
      - description: Parameter to set
        explode: false
        in: path
        name: parameter
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set a parameter of a TFTP sesssion
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/start:
    put:
      description: Start uploading or downloading the file
      operationId: protocol_tftp_session_start
      parameters:
      - description: Agent to start TFTP transaction
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SessionID
        explode: false
        in: path
        name: sessionID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start a TFTP sesssion
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/status:
    get:
      description: "Status includes running state, bytes transfered, and time elapsed"
      operationId: protocol_tftp_session_status
      parameters:
      - description: Agent to show TFTP transaction
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SessionID
        explode: false
        in: path
        name: sessionID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check a TFTP sesssion's status
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/stop:
    put:
      description: Stop uploading or downloading the file
      operationId: protocol_tftp_session_stop
      parameters:
      - description: Agent to stop TFTP transaction
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SessionID
        explode: false
        in: path
        name: sessionID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stop a TFTP sesssion
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tod/get/args:
    get:
      description: Agent's TOD configuration
      operationId: protocol_tod_get_args
      parameters:
      - description: Agent to show the TOD argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TOD argument structure
      tags:
      - TOD
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tod/get/config:
    get:
      description: Agent's TOD configuration
      operationId: protocol_tod_get_config
      parameters:
      - description: Agent to show the TOD configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTOD'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TOD configuration
      tags:
      - TOD
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tod/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_tod_get_statistics
      parameters:
      - description: Agent to show TOD statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TOD statistics
      tags:
      - TOD
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tod/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_tod_get_trace
      parameters:
      - description: Agent to show whether TOD tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTOD'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TOD traffic tracing
      tags:
      - TOD
      x-accepts:
      - application/json
  ? /mimic/agent/{agentNum}/protocol/msg/tod/gettime/server/{serverAddr}/port/{portNum}/script/{scriptName}/timeout/{timeSec}/retries/{numRetries}
  : get:
      description: Retrive time from server
      operationId: protocol_tod_gettime
      parameters:
      - description: Agent to show TOD return
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: serverAddr
        explode: false
        in: path
        name: serverAddr
        required: true
        schema:
          type: string
        style: simple
      - description: portNum
        explode: false
        in: path
        name: portNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: scriptName
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          type: string
        style: simple
      - description: timeSec
        explode: false
        in: path
        name: timeSec
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: numRetries
        explode: false
        in: path
        name: numRetries
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Retrieve TOD time
      tags:
      - TOD
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tod/set/config/{argument}/{value}:
    put:
      description: "Agent's TOD configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_tod_set_config
      parameters:
      - description: Agent to set the TOD configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the TOD configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the TOD configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TOD configuration
      tags:
      - TOD
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/tod/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_tod_set_trace
      parameters:
      - description: Agent to set the TOD tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the TOD tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TOD traffic tracing
      tags:
      - TOD
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/get/args:
    get:
      description: "Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_web_get_args
      parameters:
      - description: Agent to show the WEB argument structure
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB argument structure
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/get/config:
    get:
      description: "Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_web_get_config
      parameters:
      - description: Agent to show the WEB configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigWEB'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB configuration
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/get/statistics:
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_web_get_statistics
      parameters:
      - description: Agent to show WEB statistics
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB statistics
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/get/trace:
    get:
      description: "Trace 1 means enabled, 0 means not"
      operationId: protocol_web_get_trace
      parameters:
      - description: Agent to show whether WEB tracing is enabled
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigWEB'
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB traffic tracing
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/port/add/{port}:
    post:
      description: Add port
      operationId: protocol_web_port_add
      parameters:
      - description: Agent to add WEB port
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: TCP port
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add the agent's WEB port
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/port/exists/{port}:
    get:
      description: "Check the port. 1 means existing, 0 means not"
      operationId: protocol_web_port_exists
      parameters:
      - description: Agent to show WEB configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: TCP port
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB port
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/port/remove/{port}:
    delete:
      description: Remove port
      operationId: protocol_web_port_remove
      parameters:
      - description: Agent to remove WEB port
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: TCP port
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove the agent's WEB port
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/port/set/{port}/{protocol}/{version}:
    put:
      description: Set port
      operationId: protocol_web_port_set
      parameters:
      - description: Agent to set WEB port
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: TCP port
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Encryption or related protocol
        explode: false
        in: path
        name: protocol
        required: true
        schema:
          type: string
        style: simple
      - description: Encryption or related protocol version
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's WEB port attribute
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/port/start/{port}:
    put:
      description: Start port
      operationId: protocol_web_port_start
      parameters:
      - description: Agent to start WEB port
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: TCP port
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start the agent's WEB port
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/port/stop/{port}:
    put:
      description: Stop port
      operationId: protocol_web_port_stop
      parameters:
      - description: Agent to stop WEB port
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: TCP port
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stop the agent's WEB port
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/set/config/{argument}/{value}:
    put:
      description: "Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap"
      operationId: protocol_web_set_config
      parameters:
      - description: Agent to set the WEB configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Parameter to set the WEB configuration
        explode: false
        in: path
        name: argument
        required: true
        schema:
          type: string
        style: simple
      - description: Value to set the WEB configuration
        explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's WEB configuration
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/msg/web/set/trace/{enableOrNot}:
    put:
      description: "1 to enable, 0 to disable"
      operationId: protocol_web_set_trace
      parameters:
      - description: Agent to set the WEB tracing
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Value to set the WEB tracing
        explode: false
        in: path
        name: enableOrNot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's WEB traffic tracing
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/protocol/{prot}/get/config:
    get:
      description: Returns the protocol's configuration.
      operationId: protocol_get_config
      parameters:
      - description: Agent to show the protocol configuration
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Protocol to show configuration
        explode: false
        in: path
        name: prot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the protocol's configuration.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/reload:
    put:
      description: "This only works for halted agents. The net effect is the same\
        \ as restarting an agent (ie. stop, start, halt), but without disconnecting\
        \ the network (and thus existing connections)."
      operationId: reload
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Reload the current agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/remove:
    delete:
      description: "For speed, this operation will complete asynchronously. The same\
        \ synchronization considerations apply as in /mimic/agent/start."
      operationId: agent_remove
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove the current agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/resume:
    put:
      description: Resume the current agent.
      operationId: resume
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Resume the current agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/save:
    put:
      description: Save agent MIB values.
      operationId: save
      parameters:
      - description: Agent to save
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Save agent MIB values.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/delay/{delay}:
    put:
      description: The minimum granularity is 10 msec.
      operationId: set_delay
      parameters:
      - description: Agent to set the delay time
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Delay time of the agent
        explode: false
        in: path
        name: delay
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: one-way transit delay in msec
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/drops/{drops}:
    put:
      description: 0 means no drops
      operationId: set_drops
      parameters:
      - description: Agent to set the drop rate
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Drop rate of the agent
        explode: false
        in: path
        name: drops
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: drop rate (every N-th PDU)
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/host/{host}:
    put:
      description: "Currently, only IPv4 addresses are allowed as the main address\
        \ of the agent, but both IPv4 and IPv6 addresses are allowed as IP aliases\
        \ for the agent."
      operationId: set_host
      parameters:
      - description: Agent to set the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: string
          type: integer
        style: simple
      - description: Primary IP of the agent
        explode: false
        in: path
        name: host
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/value/set/{object}/0/{variable}"
              parameters:
                agentNum: $request.body#/agentNum
                object: sysDescr
                variable: v
        "400":
          description: Invalid agent number value
      summary: host address of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/inform_timeout/{inform_timeout}:
    put:
      description: The agent will retransmit INFORM PDUs at this interval until it
        has received a reply from the manager.
      operationId: set_inform_timeout
      parameters:
      - description: Agent to set the timeout setting
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Tmeout setting
        explode: false
        in: path
        name: inform_timeout
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: timeout in seconds for retransmitting INFORM PDUs
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/interface/{interface}:
    put:
      description: network interface card for the agent
      operationId: set_interface
      parameters:
      - description: Agent to set the primary interface
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: string
          type: integer
        style: simple
      - description: Primary interface of the agent
        explode: false
        in: path
        name: interface
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: network interface card for the agent
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/mask/{mask}:
    put:
      description: subnet mask of the agent.
      operationId: set_mask
      parameters:
      - description: Agent to set the primary IP address mask
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: string
          type: integer
        style: simple
      - description: Mask to set for the agent primary IP address
        explode: false
        in: path
        name: mask
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: subnet mask of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/mibs:
    put:
      description: "set of MIBs, simulations and scenarios"
      operationId: set_mibs
      parameters:
      - description: Agent to return the MIB triplets
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              description: Triplet array
              items:
                $ref: '#/components/schemas/Triplet'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "set of MIBs, simulations and scenarios"
      tags:
      - Agent
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/oiddir/{oiddir}:
    put:
      description: MIB directory of the agent.
      operationId: set_oiddir
      parameters:
      - description: Agent to set the directory path
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Directory path for the agent
        explode: false
        in: path
        name: oiddir
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: MIB directory of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/owner/{owner}:
    put:
      description: owner of the agent
      operationId: set_owner
      parameters:
      - description: Agent to set the owner
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Owner of the agent
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: owner of the agent
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/pdusize/{pdusize}:
    put:
      description: The limit for this configurable is 65536
      operationId: set_pdusize
      parameters:
      - description: Agent to return the PDU size
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: PDU size setting for the agent
        explode: false
        in: path
        name: pdusize
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: maximum PDU size
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/port/{port}:
    put:
      description: port number
      operationId: set_port
      parameters:
      - description: Agent to set the primary SNMP port
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Primary SNMP port of the agent
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: port number
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/privdir/{privdir}:
    put:
      description: private directory of the agent.
      operationId: set_privdir
      parameters:
      - description: Agent to set the directory path
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Directory path for the agent
        explode: false
        in: path
        name: privdir
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: private directory of the agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/protocol:
    put:
      description: protocols supported by agent as a comma-separated list
      operationId: set_protocols
      parameters:
      - description: Agent to return the protocols arrary
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: Protocol string
                type: string
              type: array
        description: Created agent object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: string
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: protocols supported by agent as a comma-separated list
      tags:
      - Agent
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/read/{read}:
    put:
      description: read community string
      operationId: set_read_community
      parameters:
      - description: Agent to return the SNMP read community string
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMP read community string
        explode: false
        in: path
        name: read
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: read community string
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/start/{start}:
    put:
      description: relative start time
      operationId: set_starttime
      parameters:
      - description: Agent to return the relative start time
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Relative start time of the agent
        explode: false
        in: path
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: relative start time
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/trace/{trace}:
    put:
      description: SNMP PDU tracing
      operationId: set_trace
      parameters:
      - description: Agent to set trace setting
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Trace setting for the agent
        explode: false
        in: path
        name: trace
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: SNMP PDU tracing
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/validate/{validate}:
    put:
      description: "Is a bitmask in which with the following bits (from LSB) check\
        \ for type, length, range, access. A default value of 65535 does all validation\
        \ checking."
      operationId: set_validate
      parameters:
      - description: Agent to set the bitmask integer
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Bitmask integer to set
        explode: false
        in: path
        name: validate
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: SNMP SET validation policy
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/set/write/{write}:
    put:
      description: write community string
      operationId: set_write_community
      parameters:
      - description: Agent to set the SNMP write community string
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: SNMP write community string
        explode: false
        in: path
        name: write
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: write community string
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/start:
    put:
      description: "For speed, this operation will complete asynchronously. A successful\
        \ return from this command means the starting of the agent is in progress.\
        \ If you need to rely on the agent to have completed startup, you should wait\
        \ for it's state to become RUNNING."
      operationId: start
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start the current agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/stop:
    put:
      description: Agent primary IP address
      operationId: stop
      parameters:
      - description: Agent to return the primary IP
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's primary IP address
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/store/copy/{otherAgent}:
    put:
      description: This command copies the variable store from the other agent to
        this agent.
      operationId: agent_store_copy
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Agent of the value space
        explode: false
        in: path
        name: otherAgent
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command copies the variable store from the other agent to this
        agent.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/store/exists/{var}:
    get:
      description: "It returns \"1\" if the variable exists, else \"0\"."
      operationId: agent_store_exists
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command can be used as a predicate to ascertain the existence
        of a given variable.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/store/get/{var}:
    get:
      description: The value will be returned as a string (like all Tcl values).
      operationId: agent_store_get
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Fetches the value associated with a variable.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/store/list:
    get:
      description: "The list will be a Tcl format list with curly braces \"{}\" around\
        \ each list element. These elements in turn are space separated."
      operationId: agent_store_list
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command will return the list of variables in the said scope.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/store/lreplace/{var}/{index}:
    put:
      description: "These commands treat the variable as a list, and allow to replace\
        \ an entry in the list at the specified index with the specified value. The\
        \ variable has to already exist."
      operationId: agent_store_lreplace
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      - description: Index
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "These commands treat the variable as a list, and allow to replace\
        \ an entry in the list at the specified index with the specified value. The\
        \ variable has to already exist."
      tags:
      - Agent
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/store/persists/{var}:
    get:
      description: "It returns \"1\" if the variable is persistent, else \"0\"."
      operationId: agent_store_persists
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command can be used as a predicate to ascertain the persistence
        of a given variable.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/store/set/{var}/{persist}:
    put:
      description: "The append sub-command will append the value to an existing variable,\
        \ or create a new one. The set sub-command will overwrite an existing variable,\
        \ or create a new one. The optional persist flag can be used to indicate if\
        \ the variable is to be persistent as described above. By default a value\
        \ of '0' will be implied for the persist flag. To avoid mistakes, for existing\
        \ variables the persist flag can only be set. If you want to reset it, you\
        \ first need to unset the variable."
      operationId: agent_store_set
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      - description: Persistent setting
        explode: false
        in: path
        name: persist
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "These commands allow the creation of a new variable, or changing an\
        \ existing value."
      tags:
      - Agent
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/store/unset/{var}:
    put:
      description: This will cleanup persistent variables if needed
      operationId: agent_store_unset
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes a variable which is currently defined.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/timer/script/add/{script}/{interval}/{arg}:
    post:
      description: Add a new timer script to be executed at specified interval (in
        msec) with the specified argument.
      operationId: add_timer_script
      parameters:
      - description: Agent to return the timer script list
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Script name
        explode: false
        in: path
        name: script
        required: true
        schema:
          type: string
        style: simple
      - description: Interval in msec
        explode: false
        in: path
        name: interval
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Arguments to the script
        explode: false
        in: path
        name: arg
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add a new timer script to be executed at specified interval (in msec)
        with the specified argument.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/timer/script/delete/{script}/{interval}/{arg}:
    delete:
      description: "The first scheduled script that matches the script name, and optionally\
        \ the interval and argument will be deleted."
      operationId: del_timer_script
      parameters:
      - description: Agent to return the timer script list
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Script name
        explode: false
        in: path
        name: script
        required: true
        schema:
          type: string
        style: simple
      - description: Interval in msec
        explode: false
        in: path
        name: interval
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Arguments to the script
        explode: false
        in: path
        name: arg
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove a timer script from the execution list.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/timer/script/list:
    get:
      description: "The command mimic timer script list lists global timer scripts,\
        \ the command /mimic/timer/script/{agentNum}/list is the per-agent equivalent\
        \ NOTE Global timer scripts run globally but within them you can address individual\
        \ agents using {agentNum}. To schedule timerscripts for an individual agent,\
        \ use /mimic/timer/script/{agentNum}."
      operationId: list_timer_scripts
      parameters:
      - description: Agent to return the timer script list
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimerScript'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List the timer scripts currently running along with the their intervals.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/trap/config/add/{IP}/{port}:
    post:
      description: Add a trap destination to the set of destinations.
      operationId: trap_config_add
      parameters:
      - description: Agent to add the destination
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: IP of the destination
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: port of the destination
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add a trap destination to the set of destinations.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/trap/config/delete/{IP}/{port}:
    delete:
      description: Remove a trap destination from the set of destinations.
      operationId: trap_config_del
      parameters:
      - description: Agent to delete the destination
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: IP of the destination
        explode: false
        in: path
        name: IP
        required: true
        schema:
          type: string
        style: simple
      - description: port of the destination
        explode: false
        in: path
        name: port
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove a trap destination from the set of destinations.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/trap/config/list:
    get:
      description: Each trap destination is identified with an IP address and a port
        number. The default port number is the standard SNMP trap port 162.
      operationId: trap_config_list
      parameters:
      - description: Agent to show the IP alias list
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrapDest'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List the set of trap destinations for this agent instance.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/trap/list:
    get:
      description: List the outstanding asynchronous traps for this agent instance.
      operationId: trap_list
      parameters:
      - description: Agent to list the traps
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: array of OID or Object strings
                items:
                  type: string
                type: array
          description: successful operation
      summary: List the outstanding asynchronous traps for this agent instance.
      tags:
      - Agent
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/add/{object}/{instance}:
    post:
      description: "The object needs to specify the MIB object with the INDEX clause,\
        \ usually an object whose name ends with Entry."
      operationId: add
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object (column) of the table in the agent's value space
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      - description: Object (column) of the table in the agent's value space
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add an entry to a table.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/eval/{object}/{instance}:
    get:
      description: Evaluate the values of the specified instance instance for each
        specified MIB object object and return it as it would through SNMP requests.
      operationId: eval_value
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Single instance object or object (column) of the table in the
          agent's value space.
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      - description: Row of the table in the agent's value space. 0 for single instance
          objects
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Evaluate the values of the specified instance instance for each specified
        MIB object object and return it as it would through SNMP requests.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/get/{object}/{instance}/{variable}:
    get:
      description: Get a variable in the Value Space.
      operationId: get_value
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object (column) of the table in the agent's value space
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      - description: Object (column) of the table in the agent's value space
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      - description: Object (column) of the table in the agent's value space
        explode: false
        in: path
        name: variable
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/value/eval/{object}/{instance}"
              parameters:
                agentNum: $request.body#/agentNum
                instance: "0"
                object: sysDescr
        "400":
          description: Invalid agent number value
      summary: Get a variable in the Value Space.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/info/{object}:
    get:
      description: "Return the syntactical information for the specified object, such\
        \ as type, size, range, enumerations, and ACCESS."
      operationId: get_info
      parameters:
      - description: Agent to show the information of the object
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "Return the syntactical information for the specified object, such\
        \ as type, size, range, enumerations, and ACCESS."
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/instances/{object}:
    get:
      description: This enables MIB browsing of the MIB on the current agent.
      operationId: get_instances
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object (column) of the table in the agent's value space
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Display the MIB object instances for the specified object.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/list/{OID}:
    get:
      description: This command is similar to the ls or dir operating system commands
        to list filesystem directories.
      operationId: get_objects
      parameters:
      - description: Agent to show the OID branches
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Current OID
        explode: false
        in: path
        name: OID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Display the MIB objects below the current position
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/meval/{objInsArray}:
    get:
      description: Evaluate the values of the specified instance instance for each
        specified MIB object object and return it as it would through SNMP requests.
      operationId: meval_value
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Multiple objects or object (column) of the table in the agent's
          value space.
        explode: false
        in: path
        name: objInsArray
        required: true
        schema:
          items:
            items:
              type: string
            type: array
          type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Evaluate the values of the specified instance instance for each specified
        MIB object object and return it as it would through SNMP requests.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/mget/{objInsVarArray}:
    get:
      description: "This is a performance optimization of the mimic value get command,\
        \ to be used when many variables are requested."
      operationId: mget_value
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Multiple objects or object (column) of the table in the agent's
          value space.
        explode: false
        in: path
        name: objInsVarArray
        required: true
        schema:
          items:
            items:
              type: string
            type: array
          type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Get multiple variables in the Value Space.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/mib/{object}:
    get:
      description: This will only return a MIB name if the object is unmistakeably
        defined in a MIB.
      operationId: get_mib
      parameters:
      - description: Agent to show the MIB
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Return the MIB that defines the specified object.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/mset:
    put:
      description: "This is a performance optimization of the mimic value set command,\
        \ to be used when many variables are to be set."
      operationId: mset_value
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                items:
                  type: string
                type: array
              type: array
        description: objInsVarValArray
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set multiple variables in the Value Space.
      tags:
      - Valuespace
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/munset:
    put:
      description: "This is a performance optimization of the mimic value unset command,\
        \ to be used when many variables are to be unset."
      operationId: munset_value
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                items:
                  type: string
                type: array
              type: array
        description: objInsVarArray
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Unset multiple variables in the Value Space
      tags:
      - Valuespace
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/name/{OID}:
    get:
      description: Return the symbolic name of the specified object identifier.
      operationId: get_name
      parameters:
      - description: Agent to show the object
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: OID
        explode: false
        in: path
        name: OID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Return the symbolic name of the specified object identifier.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/oid/{object}:
    get:
      description: Return the numeric OID of the specified object.
      operationId: get_oid
      parameters:
      - description: Agent to show the OID
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Return the numeric OID of the specified object.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/remove/{object}/{instance}:
    delete:
      description: "The object needs to specify the MIB object with the INDEX clause,\
        \ usually an object whose name ends with Entry."
      operationId: remove
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object (column) of the table in the agent's value space
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      - description: Object (column) of the table in the agent's value space
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove an entry from a table.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/set/{object}/{instance}/{variable}:
    put:
      description: "NOTE to set a binary string value, specify a string starting with\
        \ \\\\x followed by pairs of hexadecimal digits, eg. \"\\\\x 01 23 45\". This\
        \ command also assigns SNMP PDU action scripts for GET* and SET requests on\
        \ a MIB object. The instance parameter must be 0. The following variables\
        \ enable actions, g - The specified TCL script will be run on GET or GETNEXT\
        \ requests. It has to exist under the simulation directory. s - The specified\
        \ script will be run on SET requests. It has to exist under the simulation\
        \ directory. This command also controls advanced trap generation functionality.\
        \ The following variables control trap generation r, tu, c - These variables\
        \ together represent the rate settings for the trap. r and tu is the actual\
        \ per second rate and c represents the total duration in seconds for which\
        \ the trap is sent. As soon as the c variable is set, the trap generation\
        \ begins, for this reason it should be the last variable set for a particular\
        \ trap. The following variables have to be set before setting the c variable\
        \ to modify the behavior of the generated trap(s). OBJECT - An object name\
        \ when used as a variable is looked up during the trap send and the value\
        \ of that variable is included in the PDU. OBJECT.i - This type of variable\
        \ will be used to assign an optional instance for the specified object in\
        \ the traps varbind. The value of this variable identifies the index. e.g.\
        \ The commands below will send ifIndex.2 with a value of 5 in the linkUp trap\
        \ PDU. i - This variable is used to specify any extra version specific information\
        \ to the trap generation code. Here is what it can be used to represent for\
        \ various SNMP versions SNMPv1 - [community_string][,[enterprise][,agent_addr]]\
        \ SNMPv2c - community_string SNMPv2 - source_party,destination_party,context\
        \ SNMPv3 - user_name,context v - This variable lets the user override the\
        \ version of the PDU being generated. The possible values are - \"1\", \"\
        2c\", \"2\" and \"3\". o - This variable is used for traps that need extra\
        \ variables to be added to the PDU along with the ones defined in the MIB\
        \ as its variables. This lets the user force extra objects (along with instances\
        \ if needed). All variables to be sent need to be assigned to the o variable.\
        \ O - To omit any variables which are defined in the MIB you can use the O\
        \ (capital o) variable. This needs to be set to the list of OIDs of the variable\
        \ bindings in the order defined in the MIB. ip - The variable ip is used for\
        \ generating the trap from the N-th IP alias address. a - This variable associates\
        \ an action script to the trap or INFORM request. The action script specified\
        \ in the value of this variable has to exist in the simulation directory.\
        \ It will be executed before each instance of the trap is sent out. I - This\
        \ optional variable controls the generation of INFORM PDUs. An INFORM is sent\
        \ only if the variable is non-zero, else a TRAP is generated. R, T, E - This\
        \ variable associates an action script to the INFORM request. The action script\
        \ specified in the value of this variable has to exist in the simulation directory.\
        \ The action script associated with the R variable will be executed on receiving\
        \ a INFORM RESPONSE, the one associated with the T variable on a timeout (ie.\
        \ no response), the one associated with the E variable on a report PDU. eid.IP-ADDRESS.PORT\
        \ - control variable allows to configure message authoritative engine id for\
        \ the destination specified by IP-ADDRESS and optionally by PORT. eb.IP-ADDRESS.PORT\
        \ - control variable allows to configure message authoritative engine boots.\
        \ et.IP-ADDRESS.PORT - control variable allows to configure message authoritative\
        \ engine time."
      operationId: set_value
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Single instance object or object (column) of the table in the
          agent's value space.
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      - description: Row of the table in the agent's value space. 0 for single instance
          objects
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      - description: Variable
        explode: false
        in: path
        name: variable
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set a variable in the Value Space.
      tags:
      - Valuespace
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/split/{OID}:
    get:
      description: This is useful if you have an OID which is a combination of object
        and instance.
      operationId: split_oid
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: OID
        explode: false
        in: path
        name: OID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Split the numerical OID into the object OID and instance OID.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/state/get/{object}:
    get:
      description: "To disable traversal into a MIB object and any subtree underneath,\
        \ set the state to 0, else set the state to 1."
      operationId: get_state
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Get the state of a MIB object object.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/state/set/{object}/{state}:
    put:
      description: "To disable traversal into a MIB object and any subtree underneath,\
        \ set the state to 0, else set the state to 1."
      operationId: set_state
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Object
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      - description: State
        explode: false
        in: path
        name: state
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the state of a MIB object object
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/unset/{object}/{instance}/{variable}:
    put:
      description: Only variables that have previously been set can be unset.
      operationId: unset_value
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Single instance object or object (column) of the table in the
          agent's value space.
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      - description: Row of the table in the agent's value space. 0 for single instance
          objects
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      - description: Variable
        explode: false
        in: path
        name: variable
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Unset a variable in the Value Space in order to free its memory.
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/agent/{agentNum}/value/variables/{object}/{instance}:
    get:
      description: This enables variable browsing of the MIB on the current agent.
      operationId: get_variables
      parameters:
      - description: Agent of the value space
        explode: false
        in: path
        name: agentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Single instance object or object (column) of the table in the
          agent's value space.
        explode: false
        in: path
        name: object
        required: true
        schema:
          type: string
        style: simple
      - description: Row of the table in the agent's value space. 0 for single instance
          objects
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Display the variables for the specified instance instance for the specified
        MIB object object
      tags:
      - Valuespace
      x-accepts:
      - application/json
  /mimic/clear/{firstAgentNum}/{lastAgentNum}:
    put:
      description: Clear the lab configuration.
      operationId: cfg_new
      parameters:
      - description: Agent number to start clearing
        explode: false
        in: path
        name: firstAgentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Agent number to end the clearing
        explode: false
        in: path
        name: lastAgentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Clear the lab configuration.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/active_data_list:
    get:
      description: This list is guaranteed to be sorted into increasing order.
      operationId: get_active_data_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
          links:
            address:
              operationId: get_host
              parameters:
                agentNum: $response.body#/id/
      summary: "The list of {agentnum {statistics}} for agents that are currently\
        \ active and whose statistics have changed since the last invocation of this\
        \ command."
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/active_list:
    get:
      description: This list is guaranteed to be sorted into increasing order.
      operationId: get_active_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/interface"
              parameters:
                agentNum: $response.body#
      summary: "The list of {agentnum} that are currently active (running or paused)."
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/cfgfile:
    get:
      description: In the case of multi-user access this command returns a different
        configuration file loaded for each user.
      operationId: get_cfgfile
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The currently loaded lab configuration file for the particular user.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/cfgfile_changed:
    get:
      description: Whether the loaded agent configuration file has changed since the
        last time this predicate was queried. This allows for a client to detect agent
        configuration changes and to synchronize those changes from the MIMIC daemon.
      operationId: get_cfg_file_changed
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: This predicate indicates if the currently loaded agent configuration
        file has changed.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/changed_config_list:
    get:
      description: "This list contains at most 5000 agent(s), and is guaranteed to\
        \ be sorted into increasing order."
      operationId: get_changed_config_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
      summary: "The list of {agentnum} for which a configurable parameter changed."
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/changed_state_list:
    get:
      description: "This list contains at most 5000 agent(s), and is guaranteed to\
        \ be sorted into increasing order."
      operationId: get_changed_state_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentState'
                type: array
          description: successful operation
      summary: "The list of {agentnum state} for which the state changed."
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/clients:
    get:
      description: The number of clients currently connected to the daemon.
      operationId: get_clients
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The number of clients currently connected to the daemon.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/configured_list:
    get:
      description: This list is guaranteed to be sorted into increasing order.
      operationId: get_configured_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/host"
              parameters:
                agentNum: $response.body#
      summary: "The list of {agentnum} that are currently configured."
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/interfaces:
    get:
      description: The set of network interfaces that can be used for simulations.
      operationId: get_interfaces
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The set of network interfaces that can be used for simulations.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/last:
    get:
      description: The last configured agent instance.
      operationId: get_last
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
      summary: The last configured agent instance.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/log:
    get:
      description: The current log file for the Simulator.
      operationId: get_log
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The current log file for the Simulator.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/max:
    get:
      description: The maximum number of agent instances.
      operationId: get_max
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
      summary: The maximum number of agent instances.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/netaddr:
    get:
      description: The network address of the host where the MIMIC simulator is running.
      operationId: get_netaddr
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The network address of the host where the MIMIC simulator is running.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/netdev:
    get:
      description: The default network device to be used for agent addresses if the
        interface is not explicitly specified for an agent.
      operationId: get_netdev
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The default network device to be used for agent addresses.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/product:
    get:
      description: The product number that is licensed.
      operationId: get_product
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The product number that is licensed.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/protocols:
    get:
      description: The set of protocols supported by the Simulator.
      operationId: get_daemon_protocols
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The set of protocols supported by the Simulator.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/return:
    get:
      description: "The OpenAPI daemon operates in two modes, nocatch, where error\
        \ returns from MIMIC operations return error; or catch, where the TCL catch\
        \ semantics are used (these are similar to C++ exceptions)"
      operationId: get_return
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The return mode.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/get/version:
    get:
      description: The version of the MIMIC command interface.
      operationId: get_version
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      summary: The version of the MIMIC command interface.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/load/{cfgFile}/{firstAgentNum}/{lastAgentNum}/{startAgentNum}:
    put:
      description: Load agents in cfgFile from firstAgentNum to lastAgentNum on startAgentNum
        of current configuration
      operationId: cfg_load
      parameters:
      - description: MIMIC agent configuration file to load
        explode: false
        in: path
        name: cfgFile
        required: true
        schema:
          type: string
        style: simple
      - description: Agent number in cfgFile to start the loading
        explode: false
        in: path
        name: firstAgentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Agent number in cfgFile to end the loading
        explode: false
        in: path
        name: lastAgentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Agent number in current configuration to start placing the new
          agents
        explode: false
        in: path
        name: startAgentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Load the lab configuration file file.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/mget/{infoArray}:
    get:
      description: "Get multiple sets of information about MIMIC, where infoArray\
        \ is one of the parameters defined in the mimic get command."
      operationId: mget_info
      parameters:
      - description: Multiple strings of info.
        explode: false
        in: path
        name: infoArray
        required: true
        schema:
          items:
            type: string
          type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: successful operation
        "400":
          description: Invalid info string
      summary: "Get multiple sets of information about MIMIC, where infoArray is one\
        \ of the parameters defined in the mimic get command."
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/protocol/msg/coap/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_coap_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the COAP statistics headers
      tags:
      - COAP
      x-accepts:
      - application/json
  /mimic/protocol/msg/dhcp/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_dhcp_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the DHCP statistics headers
      tags:
      - DHCP
      x-accepts:
      - application/json
  /mimic/protocol/msg/ipmi/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_ipmi_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the IPMI statistics headers
      tags:
      - IPMI
      x-accepts:
      - application/json
  /mimic/protocol/msg/mqtt/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_mqtt_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the MQTT statistics headers
      tags:
      - MQTT
      x-accepts:
      - application/json
  /mimic/protocol/msg/netflow/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_netflow_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the NETFLOW statistics headers
      tags:
      - NETFLOW
      x-accepts:
      - application/json
  /mimic/protocol/msg/proxy/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_proxy_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the PROXY statistics headers
      tags:
      - PROXY
      x-accepts:
      - application/json
  /mimic/protocol/msg/sflow/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_sflow_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the SFLOW statistics headers
      tags:
      - SFLOW
      x-accepts:
      - application/json
  /mimic/protocol/msg/snmptcp/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_snmptcp_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the SNMPTCP statistics headers
      tags:
      - SNMPTCP
      x-accepts:
      - application/json
  /mimic/protocol/msg/ssh/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_ssh_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the SSH statistics headers
      tags:
      - SSH
      x-accepts:
      - application/json
  /mimic/protocol/msg/syslog/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_syslog_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the SYSLOG statistics headers
      tags:
      - SYSLOG
      x-accepts:
      - application/json
  /mimic/protocol/msg/telnet/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_telnet_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the TELNET statistics headers
      tags:
      - TELNET
      x-accepts:
      - application/json
  /mimic/protocol/msg/tftp/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_tftp_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the TFTP statistics headers
      tags:
      - TFTP
      x-accepts:
      - application/json
  /mimic/protocol/msg/tod/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_tod_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the TOD statistics headers
      tags:
      - TOD
      x-accepts:
      - application/json
  /mimic/protocol/msg/web/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_web_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the WEB statistics headers
      tags:
      - WEB
      x-accepts:
      - application/json
  /mimic/save:
    put:
      description: Save the lab configuration.
      operationId: cfg_save
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Save the lab configuration.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/saveas/{cfgFile}/{firstAgentNum}/{lastAgentNum}:
    put:
      description: Save the lab configuration in file.
      operationId: cfg_saveas
      parameters:
      - description: MIMIC agent configuration file to save
        explode: false
        in: path
        name: cfgFile
        required: true
        schema:
          type: string
        style: simple
      - description: Agent number in cfgFile to start the loading
        explode: false
        in: path
        name: firstAgentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Agent number in cfgFile to end the loading
        explode: false
        in: path
        name: lastAgentNum
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Save the lab configuration in file.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/set/log:
    put:
      description: The current log file for the Simulator.
      operationId: set_log
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The file name of the new log file
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      summary: The current log file for the Simulator.
      tags:
      - Daemon
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/set/netdev:
    put:
      description: The network address of the host where the MIMIC simulator is running.
      operationId: set_netdev
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The network address of the host where the MIMIC simulator is running.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/set/persistent:
    put:
      description: "The MIMIC daemon caches persistent objects and their changes,\
        \ and writes them to disk at program termination. If it were to crash, these\
        \ changes would be lost. This operation allows to checkpoint the cache, ie.\
        \ write changes to persistent objects to disk. To save the lab configuration\
        \ with per-agent persistent information the mimic save operation needs to\
        \ be used."
      operationId: store_save
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: This operation flushes all global objects which need to be made persistent
        to disk.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/start:
    put:
      description: Start MIMIC.
      operationId: start_all_agents
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Start MIMIC.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/stop:
    put:
      description: Stop MIMIC.
      operationId: stop_all_agents
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Stop MIMIC.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/store/exists/{var}:
    get:
      description: "It returns \"1\" if the variable exists, else \"0\"."
      operationId: store_exists
      parameters:
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command can be used as a predicate to ascertain the existence
        of a given variable.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/store/get/{var}:
    get:
      description: The value will be returned as a string (like all Tcl values).
      operationId: store_get
      parameters:
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Fetches the value associated with a variable.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/store/list:
    get:
      description: "The list will be a Tcl format list with curly braces \"{}\" around\
        \ each list element. These elements in turn are space separated."
      operationId: store_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command will return the list of variables in the said scope.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/store/lreplace/{var}/{index}:
    put:
      description: "These commands treat the variable as a list, and allow to replace\
        \ an entry in the list at the specified index with the specified value. The\
        \ variable has to already exist."
      operationId: store_lreplace
      parameters:
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      - description: Index
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: "These commands treat the variable as a list, and allow to replace\
        \ an entry in the list at the specified index with the specified value. The\
        \ variable has to already exist."
      tags:
      - Daemon
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/store/persists/{var}:
    get:
      description: "It returns \"1\" if the variable is persistent, else \"0\"."
      operationId: store_persists
      parameters:
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command can be used as a predicate to ascertain the persistence
        of a given variable.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/store/set/{var}/{persist}:
    put:
      description: "Persist 1 means persistent , 0 means non-persistent"
      operationId: store_set
      parameters:
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      - description: Persistent setting
        explode: false
        in: path
        name: persist
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the variable store for the global storage
      tags:
      - Daemon
      x-content-type: application/json
      x-accepts:
      - application/json
  /mimic/store/unset/{var}:
    put:
      description: This will cleanup persistent variables if needed
      operationId: store_unset
      parameters:
      - description: Variable name
        explode: false
        in: path
        name: var
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes a variable which is currently defined.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/terminate:
    put:
      description: Terminate the MIMIC daemon.
      operationId: terminate
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Terminate the MIMIC daemon.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/timer/script/add/{script}/{interval}/{arg}:
    post:
      description: Add a new timer script to be executed at specified interval (in
        msec) with the specified argument.
      operationId: add_daemon_timer_script
      parameters:
      - description: Script name
        explode: false
        in: path
        name: script
        required: true
        schema:
          type: string
        style: simple
      - description: Interval in msec
        explode: false
        in: path
        name: interval
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Arguments to the script
        explode: false
        in: path
        name: arg
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add a new timer script to be executed at specified interval (in msec)
        with the specified argument.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/timer/script/delete/{script}/{interval}/{arg}:
    delete:
      description: "The first scheduled script that matches the script name, and optionally\
        \ the interval and argument will be deleted."
      operationId: del_daemon_timer_script
      parameters:
      - description: Script name
        explode: false
        in: path
        name: script
        required: true
        schema:
          type: string
        style: simple
      - description: Interval in msec
        explode: false
        in: path
        name: interval
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Arguments to the script
        explode: false
        in: path
        name: arg
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove a timer script from the execution list.
      tags:
      - Daemon
      x-accepts:
      - application/json
  /mimic/timer/script/list:
    get:
      description: "The command mimic timer script list lists global timer scripts,\
        \ the command /mimic/timer/script/{agentNum}/list is the per-agent equivalent\
        \ NOTE Global timer scripts run globally but within them you can address individual\
        \ agents using {agentNum}. To schedule timerscripts for an individual agent,\
        \ use /mimic/timer/script/{agentNum}."
      operationId: list_daemon_timer_scripts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimerScript'
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List the timer scripts currently running along with the their intervals.
      tags:
      - Daemon
      x-accepts:
      - application/json
components:
  schemas:
    AccessEntry:
      example:
        access_mask: access_mask
        agent_range: agent_range
        user: user
      properties:
        access_mask:
          type: string
        agent_range:
          type: string
        user:
          type: string
      type: object
    AgentState:
      example:
        agentNum: 0
        state: 6
      properties:
        agentNum:
          format: int32
          type: integer
        state:
          format: int32
          type: integer
      type: object
    ConfigCOAP:
      example:
        rule: rule
        keystore: keystore
        primary_port: 0
        secure_port: 6
      properties:
        keystore:
          type: string
        primary_port:
          format: int32
          type: integer
        rule:
          type: string
        secure_port:
          format: int32
          type: integer
      type: object
    ConfigDHCP:
      example:
        classid: classid
        hwaddr: hwaddr
        add_options: add_options
        script: script
      properties:
        add_options:
          type: string
        classid:
          type: string
        hwaddr:
          type: string
        script:
          type: string
      type: object
    ConfigIPMI:
      example:
        primary_port: 0
        secure_port: 6
        version: version
      properties:
        primary_port:
          format: int32
          type: integer
        secure_port:
          format: int32
          type: integer
        version:
          type: string
      type: object
    ConfigMQTT:
      example:
        password: password
        clientid: clientid
        filename: filename
        port: 0
        is_tls: is_tls
        tls_conf_filename: tls_conf_filename
        broker: broker
        version: version
        username: username
      properties:
        broker:
          type: string
        clientid:
          type: string
        filename:
          type: string
        is_tls:
          type: string
        password:
          type: string
        port:
          format: int32
          type: integer
        tls_conf_filename:
          type: string
        username:
          type: string
        version:
          type: string
      type: object
    ConfigNETFLOW:
      example:
        filename: filename
        bundleflowsets: 0
        collectorport: 6
        collector: collector
      properties:
        bundleflowsets:
          format: int32
          type: integer
        collector:
          type: string
        collectorport:
          format: int32
          type: integer
        filename:
          type: string
      type: object
    ConfigPROXY:
      example:
        portno: 5
        client_to_server: client_to_server
        disconnect_delay: 6
        server_to_client: server_to_client
        pre_connect: pre_connect
        transport: transport
        max_connects: 1
        TCP_NODELAY: 0
        target: target
      properties:
        TCP_NODELAY:
          format: int32
          type: integer
        client_to_server:
          type: string
        disconnect_delay:
          format: int32
          type: integer
        max_connects:
          format: int32
          type: integer
        portno:
          format: int32
          type: integer
        pre_connect:
          type: string
        server_to_client:
          type: string
        target:
          type: string
        transport:
          type: string
      type: object
    ConfigSFLOW:
      example:
        flows_per_min: 6
        filename: filename
        include_samples: include_samples
        records_per_sample: records_per_sample
        collectorport: 0
        samples_per_datagram: samples_per_datagram
        collector: collector
        encoding_type: encoding_type
      properties:
        collector:
          type: string
        collectorport:
          format: int32
          type: integer
        encoding_type:
          type: string
        filename:
          type: string
        flows_per_min:
          format: int32
          type: integer
        include_samples:
          type: string
        records_per_sample:
          type: string
        samples_per_datagram:
          type: string
      type: object
    ConfigSNMPTCP:
      example:
        connections: 0
      properties:
        connections:
          format: int32
          type: integer
      type: object
    ConfigSNMPv3:
      example:
        usm_db: usm_db
        vacm_db: vacm_db
        context_engine_id: context_engine_id
        engine_id: engine_id
      properties:
        context_engine_id:
          type: string
        engine_id:
          type: string
        usm_db:
          type: string
        vacm_db:
          type: string
      type: object
    ConfigSSH:
      example:
        port: 0
        version: version
      properties:
        port:
          format: int32
          type: integer
        version:
          type: string
      type: object
    ConfigSYSLOG:
      example:
        sequence: 6
        server: server
        hostname: hostname
        serverport: 1
        client: client
        localport: 0
        separator: separator
        timestamp: timestamp
      properties:
        client:
          type: string
        hostname:
          type: string
        localport:
          format: int32
          type: integer
        separator:
          type: string
        sequence:
          format: int32
          type: integer
        server:
          type: string
        serverport:
          format: int32
          type: integer
        timestamp:
          type: string
      type: object
    ConfigTELNET:
      example:
        userdb: userdb
        keymap: keymap
        port: 0
        paging_prompt: paging_prompt
        rule: rule
        prompt: prompt
      properties:
        keymap:
          type: string
        paging_prompt:
          type: string
        port:
          format: int32
          type: integer
        prompt:
          type: string
        rule:
          type: string
        userdb:
          type: string
      type: object
    ConfigTFTP:
      example:
        mode: mode
        retries: 1
        server: server
        cache: 0
        trace: trace
        port: 6
        srcfile: srcfile
        client: client
        dstfile: dstfile
        script: script
        timeout: 5
      properties:
        cache:
          format: int32
          type: integer
        client:
          type: string
        dstfile:
          type: string
        mode:
          type: string
        port:
          format: int32
          type: integer
        retries:
          format: int32
          type: integer
        script:
          type: string
        server:
          type: string
        srcfile:
          type: string
        timeout:
          format: int32
          type: integer
        trace:
          type: string
      type: object
    ConfigTOD:
      example:
        retries: 6
        server: server
        port: 0
        script: script
        timeout: 1
      properties:
        port:
          format: int32
          type: integer
        retries:
          format: int32
          type: integer
        script:
          type: string
        server:
          type: string
        timeout:
          format: int32
          type: integer
      type: object
    ConfigWEB:
      example:
        password: password
        is_persistent_connections: 0
        wsdl: wsdl
        port: 6
        rule: rule
        username: username
      properties:
        is_persistent_connections:
          format: int32
          type: integer
        password:
          type: string
        port:
          format: int32
          type: integer
        rule:
          type: string
        username:
          type: string
        wsdl:
          type: string
      type: object
    IPAlias:
      example:
        port: 0
        IP: IP
        interface: interface
        mask: mask
      properties:
        IP:
          type: string
        interface:
          type: string
        mask:
          type: string
        port:
          format: int32
          type: integer
      type: object
    IPSource:
      example:
        port: 0
        IP: IP
      properties:
        IP:
          type: string
        port:
          format: int32
          type: integer
      type: object
    SyslogMsg:
      example:
        sequence: sequence
        hostname: hostname
        message: message
        separator: separator
        timestamp: timestamp
      properties:
        hostname:
          type: string
        message:
          type: string
        separator:
          type: string
        sequence:
          type: string
        timestamp:
          type: string
      type: object
    TelnetUser:
      example:
        password: password
        groups:
        - groups
        - groups
        hasPassword: 0
        username: username
      properties:
        groups:
          items:
            type: string
          type: array
        hasPassword:
          format: int32
          type: integer
        password:
          type: string
        username:
          type: string
      type: object
    TimerScript:
      example:
        arg: arg
        interval: 0
        script: script
      properties:
        arg:
          type: string
        interval:
          format: int32
          type: integer
        script:
          type: string
      type: object
    TrapDest:
      example:
        port: 0
        IP: IP
      properties:
        IP:
          type: string
        port:
          format: int32
          type: integer
      type: object
    Triplet:
      example:
        scenario: 0
        mib: mib
        device: device
      properties:
        device:
          type: string
        mib:
          type: string
        scenario:
          format: int32
          type: integer
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http

