/*
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConfigPROXY;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProxyApi
 */
@Disabled
public class ProxyApiTest {

    private final ProxyApi api = new ProxyApi();

    /**
     * Show the agent&#39;s PROXY argument structure
     *
     * Agent&#39;s PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyGetArgsTest() throws ApiException {
        Integer agentNum = null;
        Object response = api.protocolProxyGetArgs(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s PROXY configuration
     *
     * Agent&#39;s PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyGetConfigTest() throws ApiException {
        Integer agentNum = null;
        ConfigPROXY response = api.protocolProxyGetConfig(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s PROXY statistics
     *
     * Statistics of fields indicated in the headers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyGetStatisticsTest() throws ApiException {
        Integer agentNum = null;
        List<Integer> response = api.protocolProxyGetStatistics(agentNum);
        // TODO: test validations
    }

    /**
     * Show the PROXY statistics headers
     *
     * The headers of statistics fields
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyGetStatsHdrTest() throws ApiException {
        List<String> response = api.protocolProxyGetStatsHdr();
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s PROXY traffic tracing
     *
     * Trace 1 means enabled, 0 means not
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyGetTraceTest() throws ApiException {
        Integer agentNum = null;
        ConfigPROXY response = api.protocolProxyGetTrace(agentNum);
        // TODO: test validations
    }

    /**
     * Add individual proxy target on the agent and the simulator host
     *
     * Additional proxy target
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyPortAddTest() throws ApiException {
        Integer agentNum = null;
        Integer port = null;
        String target = null;
        Integer targetPort = null;
        String response = api.protocolProxyPortAdd(agentNum, port, target, targetPort);
        // TODO: test validations
    }

    /**
     * Check individual target
     *
     * Check individual target
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyPortIsstartedTest() throws ApiException {
        Integer agentNum = null;
        Integer port = null;
        String response = api.protocolProxyPortIsstarted(agentNum, port);
        // TODO: test validations
    }

    /**
     * List all proxy targets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyPortListTest() throws ApiException {
        Integer agentNum = null;
        List<Integer> response = api.protocolProxyPortList(agentNum);
        // TODO: test validations
    }

    /**
     * Remove individual proxy target on the agent and the simulator host
     *
     * Remove proxy target
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyPortRemoveTest() throws ApiException {
        Integer agentNum = null;
        Integer port = null;
        String response = api.protocolProxyPortRemove(agentNum, port);
        // TODO: test validations
    }

    /**
     * Start additional target
     *
     * Start additional target
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyPortStartTest() throws ApiException {
        Integer agentNum = null;
        Integer port = null;
        String response = api.protocolProxyPortStart(agentNum, port);
        // TODO: test validations
    }

    /**
     * Stop additional target
     *
     * Stop additional target
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxyPortStopTest() throws ApiException {
        Integer agentNum = null;
        Integer port = null;
        String response = api.protocolProxyPortStop(agentNum, port);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s PROXY configuration
     *
     * Agent&#39;s PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxySetConfigTest() throws ApiException {
        Integer agentNum = null;
        String argument = null;
        String value = null;
        String response = api.protocolProxySetConfig(agentNum, argument, value);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s PROXY traffic tracing
     *
     * 1 to enable, 0 to disable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolProxySetTraceTest() throws ApiException {
        Integer agentNum = null;
        String enableOrNot = null;
        String response = api.protocolProxySetTrace(agentNum, enableOrNot);
        // TODO: test validations
    }

}
