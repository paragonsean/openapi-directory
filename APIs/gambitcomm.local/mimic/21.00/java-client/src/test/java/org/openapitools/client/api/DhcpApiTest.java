/*
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConfigDHCP;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DhcpApi
 */
@Disabled
public class DhcpApiTest {

    private final DhcpApi api = new DhcpApi();

    /**
     * Show the agent&#39;s DHCP argument structure
     *
     * Agent&#39;s DHCP configuration particulars
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolDhcpGetArgsTest() throws ApiException {
        Integer agentNum = null;
        Object response = api.protocolDhcpGetArgs(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s DHCP configuration
     *
     * Agent&#39;s DHCP configuration hwaddr,classid,add_options,script
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolDhcpGetConfigTest() throws ApiException {
        Integer agentNum = null;
        ConfigDHCP response = api.protocolDhcpGetConfig(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s DHCP statistics
     *
     * Statistics of fields indicated in the headers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolDhcpGetStatisticsTest() throws ApiException {
        Integer agentNum = null;
        List<Integer> response = api.protocolDhcpGetStatistics(agentNum);
        // TODO: test validations
    }

    /**
     * Show the DHCP statistics headers
     *
     * The headers of statistics fields
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolDhcpGetStatsHdrTest() throws ApiException {
        List<String> response = api.protocolDhcpGetStatsHdr();
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s DHCP traffic tracing
     *
     * Trace 1 means enabled, 0 means not
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolDhcpGetTraceTest() throws ApiException {
        Integer agentNum = null;
        ConfigDHCP response = api.protocolDhcpGetTrace(agentNum);
        // TODO: test validations
    }

    /**
     * Show the parameters configured by the server in its DHCP-OFFER message
     *
     * DHCP-OFFER message parameters
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolDhcpParamsTest() throws ApiException {
        Integer agentNum = null;
        List<Object> response = api.protocolDhcpParams(agentNum);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s DHCP configuration
     *
     * Agent&#39;s DHCP configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolDhcpSetConfigTest() throws ApiException {
        Integer agentNum = null;
        String argument = null;
        String value = null;
        String response = api.protocolDhcpSetConfig(agentNum, argument, value);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s DHCP traffic tracing
     *
     * 1 to enable, 0 to disable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolDhcpSetTraceTest() throws ApiException {
        Integer agentNum = null;
        String enableOrNot = null;
        String response = api.protocolDhcpSetTrace(agentNum, enableOrNot);
        // TODO: test validations
    }

}
