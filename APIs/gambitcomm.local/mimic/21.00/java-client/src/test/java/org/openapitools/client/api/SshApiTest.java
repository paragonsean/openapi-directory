/*
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConfigSSH;
import org.openapitools.client.model.IPAlias;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SshApi
 */
@Disabled
public class SshApiTest {

    private final SshApi api = new SshApi();

    /**
     * Show the agent&#39;s SSH argument structure
     *
     * Agent&#39;s SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshGetArgsTest() throws ApiException {
        Integer agentNum = null;
        Object response = api.protocolSshGetArgs(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s SSH configuration
     *
     * Agent&#39;s SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshGetConfigTest() throws ApiException {
        Integer agentNum = null;
        ConfigSSH response = api.protocolSshGetConfig(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s SSH statistics
     *
     * Statistics of fields indicated in the headers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshGetStatisticsTest() throws ApiException {
        Integer agentNum = null;
        List<Integer> response = api.protocolSshGetStatistics(agentNum);
        // TODO: test validations
    }

    /**
     * Show the SSH statistics headers
     *
     * The headers of statistics fields
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshGetStatsHdrTest() throws ApiException {
        List<String> response = api.protocolSshGetStatsHdr();
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s SSH traffic tracing
     *
     * Trace 1 means enabled, 0 means not
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshGetTraceTest() throws ApiException {
        Integer agentNum = null;
        ConfigSSH response = api.protocolSshGetTrace(agentNum);
        // TODO: test validations
    }

    /**
     * Disable individual IP aliases on the agent and the simulator host
     *
     * By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshIpaliasDisableTest() throws ApiException {
        Integer agentNum = null;
        String ipaddress = null;
        Integer port = null;
        String response = api.protocolSshIpaliasDisable(agentNum, ipaddress, port);
        // TODO: test validations
    }

    /**
     * Enable individual IP aliases on the agent and the simulator host
     *
     * By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshIpaliasEnableTest() throws ApiException {
        Integer agentNum = null;
        String ipaddress = null;
        Integer port = null;
        String response = api.protocolSshIpaliasEnable(agentNum, ipaddress, port);
        // TODO: test validations
    }

    /**
     * Check individual IP aliases on the agent and the simulator host
     *
     * By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshIpaliasIsenabledTest() throws ApiException {
        Integer agentNum = null;
        String ipaddress = null;
        Integer port = null;
        String response = api.protocolSshIpaliasIsenabled(agentNum, ipaddress, port);
        // TODO: test validations
    }

    /**
     * List all IP aliases on the agent and the simulator host
     *
     * By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshIpaliasListTest() throws ApiException {
        Integer agentNum = null;
        List<IPAlias> response = api.protocolSshIpaliasList(agentNum);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s SSH configuration
     *
     * Agent&#39;s SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshSetConfigTest() throws ApiException {
        Integer agentNum = null;
        String argument = null;
        String value = null;
        String response = api.protocolSshSetConfig(agentNum, argument, value);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s SSH traffic tracing
     *
     * 1 to enable, 0 to disable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSshSetTraceTest() throws ApiException {
        Integer agentNum = null;
        String enableOrNot = null;
        String response = api.protocolSshSetTrace(agentNum, enableOrNot);
        // TODO: test validations
    }

}
