/*
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConfigIPMI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IpmiApi
 */
@Disabled
public class IpmiApiTest {

    private final IpmiApi api = new IpmiApi();

    /**
     * Show the agent&#39;s IPMI argument structure
     *
     * Agent&#39;s IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiGetArgsTest() throws ApiException {
        Integer agentNum = null;
        Object response = api.protocolIpmiGetArgs(agentNum);
        // TODO: test validations
    }

    /**
     * Show the outgoing message&#39;s attributes
     *
     * Attribute can be working_authtype ,session_id, outbound_seq, inbound_seq , field_N
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiGetAttrTest() throws ApiException {
        Integer agentNum = null;
        String attr = null;
        String response = api.protocolIpmiGetAttr(agentNum, attr);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s IPMI configuration
     *
     * Agent&#39;s IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiGetConfigTest() throws ApiException {
        Integer agentNum = null;
        ConfigIPMI response = api.protocolIpmiGetConfig(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s IPMI statistics
     *
     * Statistics of fields indicated in the headers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiGetStatisticsTest() throws ApiException {
        Integer agentNum = null;
        List<Integer> response = api.protocolIpmiGetStatistics(agentNum);
        // TODO: test validations
    }

    /**
     * Show the IPMI statistics headers
     *
     * The headers of statistics fields
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiGetStatsHdrTest() throws ApiException {
        List<String> response = api.protocolIpmiGetStatsHdr();
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s IPMI traffic tracing
     *
     * Trace 1 means enabled, 0 means not
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiGetTraceTest() throws ApiException {
        Integer agentNum = null;
        ConfigIPMI response = api.protocolIpmiGetTrace(agentNum);
        // TODO: test validations
    }

    /**
     * Set the outgoing message&#39;s attributes
     *
     * Attribute can be working_authtype ,session_id, outbound_seq, inbound_seq , field_N
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiSetAttrTest() throws ApiException {
        Integer agentNum = null;
        String attr = null;
        String value = null;
        String response = api.protocolIpmiSetAttr(agentNum, attr, value);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s IPMI configuration
     *
     * Agent&#39;s IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiSetConfigTest() throws ApiException {
        Integer agentNum = null;
        String argument = null;
        String value = null;
        String response = api.protocolIpmiSetConfig(agentNum, argument, value);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s IPMI traffic tracing
     *
     * 1 to enable, 0 to disable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolIpmiSetTraceTest() throws ApiException {
        Integer agentNum = null;
        String enableOrNot = null;
        String response = api.protocolIpmiSetTrace(agentNum, enableOrNot);
        // TODO: test validations
    }

}
