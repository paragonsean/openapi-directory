/*
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConfigSFLOW;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SflowApi
 */
@Disabled
public class SflowApiTest {

    private final SflowApi api = new SflowApi();

    /**
     * Show the agent&#39;s SFLOW argument structure
     *
     * Agent&#39;s SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowGetArgsTest() throws ApiException {
        Integer agentNum = null;
        Object response = api.protocolSflowGetArgs(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s SFLOW configuration
     *
     * Agent&#39;s SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowGetConfigTest() throws ApiException {
        Integer agentNum = null;
        ConfigSFLOW response = api.protocolSflowGetConfig(agentNum);
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s SFLOW statistics
     *
     * Statistics of fields indicated in the headers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowGetStatisticsTest() throws ApiException {
        Integer agentNum = null;
        List<Integer> response = api.protocolSflowGetStatistics(agentNum);
        // TODO: test validations
    }

    /**
     * Show the SFLOW statistics headers
     *
     * The headers of statistics fields
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowGetStatsHdrTest() throws ApiException {
        List<String> response = api.protocolSflowGetStatsHdr();
        // TODO: test validations
    }

    /**
     * Show the agent&#39;s SFLOW traffic tracing
     *
     * Trace 1 means enabled, 0 means not
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowGetTraceTest() throws ApiException {
        Integer agentNum = null;
        ConfigSFLOW response = api.protocolSflowGetTrace(agentNum);
        // TODO: test validations
    }

    /**
     * Halt SFLOW traffic
     *
     * Halt SFLOW traffic
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowHaltTest() throws ApiException {
        Integer agentNum = null;
        String response = api.protocolSflowHalt(agentNum);
        // TODO: test validations
    }

    /**
     * Reload SFLOW configuration before resuming traffic
     *
     * Reload SFLOW configuration before resuming traffic
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowReloadTest() throws ApiException {
        Integer agentNum = null;
        String response = api.protocolSflowReload(agentNum);
        // TODO: test validations
    }

    /**
     * Resuming traffic
     *
     * Resuming traffic
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowResumeTest() throws ApiException {
        Integer agentNum = null;
        String response = api.protocolSflowResume(agentNum);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s SFLOW configuration
     *
     * Agent&#39;s SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowSetConfigTest() throws ApiException {
        Integer agentNum = null;
        String argument = null;
        String value = null;
        String response = api.protocolSflowSetConfig(agentNum, argument, value);
        // TODO: test validations
    }

    /**
     * Set the agent&#39;s SFLOW traffic tracing
     *
     * 1 to enable, 0 to disable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void protocolSflowSetTraceTest() throws ApiException {
        Integer agentNum = null;
        String enableOrNot = null;
        String response = api.protocolSflowSetTrace(agentNum, enableOrNot);
        // TODO: test validations
    }

}
