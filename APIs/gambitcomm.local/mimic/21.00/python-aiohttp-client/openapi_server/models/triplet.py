# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Triplet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device: str=None, mib: str=None, scenario: int=None):
        """Triplet - a model defined in OpenAPI

        :param device: The device of this Triplet.
        :param mib: The mib of this Triplet.
        :param scenario: The scenario of this Triplet.
        """
        self.openapi_types = {
            'device': str,
            'mib': str,
            'scenario': int
        }

        self.attribute_map = {
            'device': 'device',
            'mib': 'mib',
            'scenario': 'scenario'
        }

        self._device = device
        self._mib = mib
        self._scenario = scenario

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Triplet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Triplet of this Triplet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device(self):
        """Gets the device of this Triplet.


        :return: The device of this Triplet.
        :rtype: str
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this Triplet.


        :param device: The device of this Triplet.
        :type device: str
        """

        self._device = device

    @property
    def mib(self):
        """Gets the mib of this Triplet.


        :return: The mib of this Triplet.
        :rtype: str
        """
        return self._mib

    @mib.setter
    def mib(self, mib):
        """Sets the mib of this Triplet.


        :param mib: The mib of this Triplet.
        :type mib: str
        """

        self._mib = mib

    @property
    def scenario(self):
        """Gets the scenario of this Triplet.


        :return: The scenario of this Triplet.
        :rtype: int
        """
        return self._scenario

    @scenario.setter
    def scenario(self, scenario):
        """Sets the scenario of this Triplet.


        :param scenario: The scenario of this Triplet.
        :type scenario: int
        """

        self._scenario = scenario
