# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigDHCP(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_options: str=None, classid: str=None, hwaddr: str=None, script: str=None):
        """ConfigDHCP - a model defined in OpenAPI

        :param add_options: The add_options of this ConfigDHCP.
        :param classid: The classid of this ConfigDHCP.
        :param hwaddr: The hwaddr of this ConfigDHCP.
        :param script: The script of this ConfigDHCP.
        """
        self.openapi_types = {
            'add_options': str,
            'classid': str,
            'hwaddr': str,
            'script': str
        }

        self.attribute_map = {
            'add_options': 'add_options',
            'classid': 'classid',
            'hwaddr': 'hwaddr',
            'script': 'script'
        }

        self._add_options = add_options
        self._classid = classid
        self._hwaddr = hwaddr
        self._script = script

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigDHCP':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigDHCP of this ConfigDHCP.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_options(self):
        """Gets the add_options of this ConfigDHCP.


        :return: The add_options of this ConfigDHCP.
        :rtype: str
        """
        return self._add_options

    @add_options.setter
    def add_options(self, add_options):
        """Sets the add_options of this ConfigDHCP.


        :param add_options: The add_options of this ConfigDHCP.
        :type add_options: str
        """

        self._add_options = add_options

    @property
    def classid(self):
        """Gets the classid of this ConfigDHCP.


        :return: The classid of this ConfigDHCP.
        :rtype: str
        """
        return self._classid

    @classid.setter
    def classid(self, classid):
        """Sets the classid of this ConfigDHCP.


        :param classid: The classid of this ConfigDHCP.
        :type classid: str
        """

        self._classid = classid

    @property
    def hwaddr(self):
        """Gets the hwaddr of this ConfigDHCP.


        :return: The hwaddr of this ConfigDHCP.
        :rtype: str
        """
        return self._hwaddr

    @hwaddr.setter
    def hwaddr(self, hwaddr):
        """Sets the hwaddr of this ConfigDHCP.


        :param hwaddr: The hwaddr of this ConfigDHCP.
        :type hwaddr: str
        """

        self._hwaddr = hwaddr

    @property
    def script(self):
        """Gets the script of this ConfigDHCP.


        :return: The script of this ConfigDHCP.
        :rtype: str
        """
        return self._script

    @script.setter
    def script(self, script):
        """Sets the script of this ConfigDHCP.


        :param script: The script of this ConfigDHCP.
        :type script: str
        """

        self._script = script
