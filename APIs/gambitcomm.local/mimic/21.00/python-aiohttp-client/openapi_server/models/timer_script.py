# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimerScript(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arg: str=None, interval: int=None, script: str=None):
        """TimerScript - a model defined in OpenAPI

        :param arg: The arg of this TimerScript.
        :param interval: The interval of this TimerScript.
        :param script: The script of this TimerScript.
        """
        self.openapi_types = {
            'arg': str,
            'interval': int,
            'script': str
        }

        self.attribute_map = {
            'arg': 'arg',
            'interval': 'interval',
            'script': 'script'
        }

        self._arg = arg
        self._interval = interval
        self._script = script

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimerScript':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimerScript of this TimerScript.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arg(self):
        """Gets the arg of this TimerScript.


        :return: The arg of this TimerScript.
        :rtype: str
        """
        return self._arg

    @arg.setter
    def arg(self, arg):
        """Sets the arg of this TimerScript.


        :param arg: The arg of this TimerScript.
        :type arg: str
        """

        self._arg = arg

    @property
    def interval(self):
        """Gets the interval of this TimerScript.


        :return: The interval of this TimerScript.
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this TimerScript.


        :param interval: The interval of this TimerScript.
        :type interval: int
        """

        self._interval = interval

    @property
    def script(self):
        """Gets the script of this TimerScript.


        :return: The script of this TimerScript.
        :rtype: str
        """
        return self._script

    @script.setter
    def script(self, script):
        """Sets the script of this TimerScript.


        :param script: The script of this TimerScript.
        :type script: str
        """

        self._script = script
