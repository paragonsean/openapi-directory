# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigIPMI(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_port: int=None, secure_port: int=None, version: str=None):
        """ConfigIPMI - a model defined in OpenAPI

        :param primary_port: The primary_port of this ConfigIPMI.
        :param secure_port: The secure_port of this ConfigIPMI.
        :param version: The version of this ConfigIPMI.
        """
        self.openapi_types = {
            'primary_port': int,
            'secure_port': int,
            'version': str
        }

        self.attribute_map = {
            'primary_port': 'primary_port',
            'secure_port': 'secure_port',
            'version': 'version'
        }

        self._primary_port = primary_port
        self._secure_port = secure_port
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigIPMI':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigIPMI of this ConfigIPMI.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_port(self):
        """Gets the primary_port of this ConfigIPMI.


        :return: The primary_port of this ConfigIPMI.
        :rtype: int
        """
        return self._primary_port

    @primary_port.setter
    def primary_port(self, primary_port):
        """Sets the primary_port of this ConfigIPMI.


        :param primary_port: The primary_port of this ConfigIPMI.
        :type primary_port: int
        """

        self._primary_port = primary_port

    @property
    def secure_port(self):
        """Gets the secure_port of this ConfigIPMI.


        :return: The secure_port of this ConfigIPMI.
        :rtype: int
        """
        return self._secure_port

    @secure_port.setter
    def secure_port(self, secure_port):
        """Sets the secure_port of this ConfigIPMI.


        :param secure_port: The secure_port of this ConfigIPMI.
        :type secure_port: int
        """

        self._secure_port = secure_port

    @property
    def version(self):
        """Gets the version of this ConfigIPMI.


        :return: The version of this ConfigIPMI.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ConfigIPMI.


        :param version: The version of this ConfigIPMI.
        :type version: str
        """

        self._version = version
