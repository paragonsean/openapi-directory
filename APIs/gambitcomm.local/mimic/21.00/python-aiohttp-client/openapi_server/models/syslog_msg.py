# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SyslogMsg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hostname: str=None, message: str=None, separator: str=None, sequence: str=None, timestamp: str=None):
        """SyslogMsg - a model defined in OpenAPI

        :param hostname: The hostname of this SyslogMsg.
        :param message: The message of this SyslogMsg.
        :param separator: The separator of this SyslogMsg.
        :param sequence: The sequence of this SyslogMsg.
        :param timestamp: The timestamp of this SyslogMsg.
        """
        self.openapi_types = {
            'hostname': str,
            'message': str,
            'separator': str,
            'sequence': str,
            'timestamp': str
        }

        self.attribute_map = {
            'hostname': 'hostname',
            'message': 'message',
            'separator': 'separator',
            'sequence': 'sequence',
            'timestamp': 'timestamp'
        }

        self._hostname = hostname
        self._message = message
        self._separator = separator
        self._sequence = sequence
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyslogMsg':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SyslogMsg of this SyslogMsg.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hostname(self):
        """Gets the hostname of this SyslogMsg.


        :return: The hostname of this SyslogMsg.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this SyslogMsg.


        :param hostname: The hostname of this SyslogMsg.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def message(self):
        """Gets the message of this SyslogMsg.


        :return: The message of this SyslogMsg.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SyslogMsg.


        :param message: The message of this SyslogMsg.
        :type message: str
        """

        self._message = message

    @property
    def separator(self):
        """Gets the separator of this SyslogMsg.


        :return: The separator of this SyslogMsg.
        :rtype: str
        """
        return self._separator

    @separator.setter
    def separator(self, separator):
        """Sets the separator of this SyslogMsg.


        :param separator: The separator of this SyslogMsg.
        :type separator: str
        """

        self._separator = separator

    @property
    def sequence(self):
        """Gets the sequence of this SyslogMsg.


        :return: The sequence of this SyslogMsg.
        :rtype: str
        """
        return self._sequence

    @sequence.setter
    def sequence(self, sequence):
        """Sets the sequence of this SyslogMsg.


        :param sequence: The sequence of this SyslogMsg.
        :type sequence: str
        """

        self._sequence = sequence

    @property
    def timestamp(self):
        """Gets the timestamp of this SyslogMsg.


        :return: The timestamp of this SyslogMsg.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this SyslogMsg.


        :param timestamp: The timestamp of this SyslogMsg.
        :type timestamp: str
        """

        self._timestamp = timestamp
