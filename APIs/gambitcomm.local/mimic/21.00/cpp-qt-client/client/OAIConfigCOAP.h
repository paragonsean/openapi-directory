/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigCOAP.h
 *
 * 
 */

#ifndef OAIConfigCOAP_H
#define OAIConfigCOAP_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConfigCOAP : public OAIObject {
public:
    OAIConfigCOAP();
    OAIConfigCOAP(QString json);
    ~OAIConfigCOAP() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKeystore() const;
    void setKeystore(const QString &keystore);
    bool is_keystore_Set() const;
    bool is_keystore_Valid() const;

    qint32 getPrimaryPort() const;
    void setPrimaryPort(const qint32 &primary_port);
    bool is_primary_port_Set() const;
    bool is_primary_port_Valid() const;

    QString getRule() const;
    void setRule(const QString &rule);
    bool is_rule_Set() const;
    bool is_rule_Valid() const;

    qint32 getSecurePort() const;
    void setSecurePort(const qint32 &secure_port);
    bool is_secure_port_Set() const;
    bool is_secure_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_keystore;
    bool m_keystore_isSet;
    bool m_keystore_isValid;

    qint32 m_primary_port;
    bool m_primary_port_isSet;
    bool m_primary_port_isValid;

    QString m_rule;
    bool m_rule_isSet;
    bool m_rule_isValid;

    qint32 m_secure_port;
    bool m_secure_port_isSet;
    bool m_secure_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigCOAP)

#endif // OAIConfigCOAP_H
