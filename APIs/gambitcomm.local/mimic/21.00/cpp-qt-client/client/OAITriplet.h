/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITriplet.h
 *
 * 
 */

#ifndef OAITriplet_H
#define OAITriplet_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITriplet : public OAIObject {
public:
    OAITriplet();
    OAITriplet(QString json);
    ~OAITriplet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDevice() const;
    void setDevice(const QString &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    QString getMib() const;
    void setMib(const QString &mib);
    bool is_mib_Set() const;
    bool is_mib_Valid() const;

    qint32 getScenario() const;
    void setScenario(const qint32 &scenario);
    bool is_scenario_Set() const;
    bool is_scenario_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    QString m_mib;
    bool m_mib_isSet;
    bool m_mib_isValid;

    qint32 m_scenario;
    bool m_scenario_isSet;
    bool m_scenario_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITriplet)

#endif // OAITriplet_H
