/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigMQTT.h
 *
 * 
 */

#ifndef OAIConfigMQTT_H
#define OAIConfigMQTT_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConfigMQTT : public OAIObject {
public:
    OAIConfigMQTT();
    OAIConfigMQTT(QString json);
    ~OAIConfigMQTT() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBroker() const;
    void setBroker(const QString &broker);
    bool is_broker_Set() const;
    bool is_broker_Valid() const;

    QString getClientid() const;
    void setClientid(const QString &clientid);
    bool is_clientid_Set() const;
    bool is_clientid_Valid() const;

    QString getFilename() const;
    void setFilename(const QString &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    QString getIsTls() const;
    void setIsTls(const QString &is_tls);
    bool is_is_tls_Set() const;
    bool is_is_tls_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getTlsConfFilename() const;
    void setTlsConfFilename(const QString &tls_conf_filename);
    bool is_tls_conf_filename_Set() const;
    bool is_tls_conf_filename_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_broker;
    bool m_broker_isSet;
    bool m_broker_isValid;

    QString m_clientid;
    bool m_clientid_isSet;
    bool m_clientid_isValid;

    QString m_filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    QString m_is_tls;
    bool m_is_tls_isSet;
    bool m_is_tls_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_tls_conf_filename;
    bool m_tls_conf_filename_isSet;
    bool m_tls_conf_filename_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigMQTT)

#endif // OAIConfigMQTT_H
