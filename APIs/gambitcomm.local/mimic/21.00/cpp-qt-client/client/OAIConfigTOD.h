/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigTOD.h
 *
 * 
 */

#ifndef OAIConfigTOD_H
#define OAIConfigTOD_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConfigTOD : public OAIObject {
public:
    OAIConfigTOD();
    OAIConfigTOD(QString json);
    ~OAIConfigTOD() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    qint32 getRetries() const;
    void setRetries(const qint32 &retries);
    bool is_retries_Set() const;
    bool is_retries_Valid() const;

    QString getScript() const;
    void setScript(const QString &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    QString getServer() const;
    void setServer(const QString &server);
    bool is_server_Set() const;
    bool is_server_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    qint32 m_retries;
    bool m_retries_isSet;
    bool m_retries_isValid;

    QString m_script;
    bool m_script_isSet;
    bool m_script_isValid;

    QString m_server;
    bool m_server_isSet;
    bool m_server_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigTOD)

#endif // OAIConfigTOD_H
