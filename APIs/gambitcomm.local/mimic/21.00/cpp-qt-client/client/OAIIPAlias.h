/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIPAlias.h
 *
 * 
 */

#ifndef OAIIPAlias_H
#define OAIIPAlias_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIPAlias : public OAIObject {
public:
    OAIIPAlias();
    OAIIPAlias(QString json);
    ~OAIIPAlias() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getInterface() const;
    void setInterface(const QString &interface);
    bool is_interface_Set() const;
    bool is_interface_Valid() const;

    QString getMask() const;
    void setMask(const QString &mask);
    bool is_mask_Set() const;
    bool is_mask_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_interface;
    bool m_interface_isSet;
    bool m_interface_isValid;

    QString m_mask;
    bool m_mask_isSet;
    bool m_mask_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIPAlias)

#endif // OAIIPAlias_H
