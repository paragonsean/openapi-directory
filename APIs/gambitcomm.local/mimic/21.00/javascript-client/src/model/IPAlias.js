/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IPAlias model module.
 * @module model/IPAlias
 * @version 21.00
 */
class IPAlias {
    /**
     * Constructs a new <code>IPAlias</code>.
     * @alias module:model/IPAlias
     */
    constructor() { 
        
        IPAlias.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IPAlias</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IPAlias} obj Optional instance to populate.
     * @return {module:model/IPAlias} The populated <code>IPAlias</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IPAlias();

            if (data.hasOwnProperty('IP')) {
                obj['IP'] = ApiClient.convertToType(data['IP'], 'String');
            }
            if (data.hasOwnProperty('interface')) {
                obj['interface'] = ApiClient.convertToType(data['interface'], 'String');
            }
            if (data.hasOwnProperty('mask')) {
                obj['mask'] = ApiClient.convertToType(data['mask'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IPAlias</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IPAlias</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['IP'] && !(typeof data['IP'] === 'string' || data['IP'] instanceof String)) {
            throw new Error("Expected the field `IP` to be a primitive type in the JSON string but got " + data['IP']);
        }
        // ensure the json data is a string
        if (data['interface'] && !(typeof data['interface'] === 'string' || data['interface'] instanceof String)) {
            throw new Error("Expected the field `interface` to be a primitive type in the JSON string but got " + data['interface']);
        }
        // ensure the json data is a string
        if (data['mask'] && !(typeof data['mask'] === 'string' || data['mask'] instanceof String)) {
            throw new Error("Expected the field `mask` to be a primitive type in the JSON string but got " + data['mask']);
        }

        return true;
    }


}



/**
 * @member {String} IP
 */
IPAlias.prototype['IP'] = undefined;

/**
 * @member {String} interface
 */
IPAlias.prototype['interface'] = undefined;

/**
 * @member {String} mask
 */
IPAlias.prototype['mask'] = undefined;

/**
 * @member {Number} port
 */
IPAlias.prototype['port'] = undefined;






export default IPAlias;

