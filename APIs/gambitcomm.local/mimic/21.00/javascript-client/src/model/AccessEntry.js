/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccessEntry model module.
 * @module model/AccessEntry
 * @version 21.00
 */
class AccessEntry {
    /**
     * Constructs a new <code>AccessEntry</code>.
     * @alias module:model/AccessEntry
     */
    constructor() { 
        
        AccessEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccessEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccessEntry} obj Optional instance to populate.
     * @return {module:model/AccessEntry} The populated <code>AccessEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccessEntry();

            if (data.hasOwnProperty('access_mask')) {
                obj['access_mask'] = ApiClient.convertToType(data['access_mask'], 'String');
            }
            if (data.hasOwnProperty('agent_range')) {
                obj['agent_range'] = ApiClient.convertToType(data['agent_range'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccessEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccessEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_mask'] && !(typeof data['access_mask'] === 'string' || data['access_mask'] instanceof String)) {
            throw new Error("Expected the field `access_mask` to be a primitive type in the JSON string but got " + data['access_mask']);
        }
        // ensure the json data is a string
        if (data['agent_range'] && !(typeof data['agent_range'] === 'string' || data['agent_range'] instanceof String)) {
            throw new Error("Expected the field `agent_range` to be a primitive type in the JSON string but got " + data['agent_range']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }

        return true;
    }


}



/**
 * @member {String} access_mask
 */
AccessEntry.prototype['access_mask'] = undefined;

/**
 * @member {String} agent_range
 */
AccessEntry.prototype['agent_range'] = undefined;

/**
 * @member {String} user
 */
AccessEntry.prototype['user'] = undefined;






export default AccessEntry;

