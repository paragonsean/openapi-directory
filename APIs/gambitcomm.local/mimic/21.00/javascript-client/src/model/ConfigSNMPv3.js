/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConfigSNMPv3 model module.
 * @module model/ConfigSNMPv3
 * @version 21.00
 */
class ConfigSNMPv3 {
    /**
     * Constructs a new <code>ConfigSNMPv3</code>.
     * @alias module:model/ConfigSNMPv3
     */
    constructor() { 
        
        ConfigSNMPv3.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConfigSNMPv3</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigSNMPv3} obj Optional instance to populate.
     * @return {module:model/ConfigSNMPv3} The populated <code>ConfigSNMPv3</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfigSNMPv3();

            if (data.hasOwnProperty('context_engine_id')) {
                obj['context_engine_id'] = ApiClient.convertToType(data['context_engine_id'], 'String');
            }
            if (data.hasOwnProperty('engine_id')) {
                obj['engine_id'] = ApiClient.convertToType(data['engine_id'], 'String');
            }
            if (data.hasOwnProperty('usm_db')) {
                obj['usm_db'] = ApiClient.convertToType(data['usm_db'], 'String');
            }
            if (data.hasOwnProperty('vacm_db')) {
                obj['vacm_db'] = ApiClient.convertToType(data['vacm_db'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfigSNMPv3</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfigSNMPv3</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['context_engine_id'] && !(typeof data['context_engine_id'] === 'string' || data['context_engine_id'] instanceof String)) {
            throw new Error("Expected the field `context_engine_id` to be a primitive type in the JSON string but got " + data['context_engine_id']);
        }
        // ensure the json data is a string
        if (data['engine_id'] && !(typeof data['engine_id'] === 'string' || data['engine_id'] instanceof String)) {
            throw new Error("Expected the field `engine_id` to be a primitive type in the JSON string but got " + data['engine_id']);
        }
        // ensure the json data is a string
        if (data['usm_db'] && !(typeof data['usm_db'] === 'string' || data['usm_db'] instanceof String)) {
            throw new Error("Expected the field `usm_db` to be a primitive type in the JSON string but got " + data['usm_db']);
        }
        // ensure the json data is a string
        if (data['vacm_db'] && !(typeof data['vacm_db'] === 'string' || data['vacm_db'] instanceof String)) {
            throw new Error("Expected the field `vacm_db` to be a primitive type in the JSON string but got " + data['vacm_db']);
        }

        return true;
    }


}



/**
 * @member {String} context_engine_id
 */
ConfigSNMPv3.prototype['context_engine_id'] = undefined;

/**
 * @member {String} engine_id
 */
ConfigSNMPv3.prototype['engine_id'] = undefined;

/**
 * @member {String} usm_db
 */
ConfigSNMPv3.prototype['usm_db'] = undefined;

/**
 * @member {String} vacm_db
 */
ConfigSNMPv3.prototype['vacm_db'] = undefined;






export default ConfigSNMPv3;

