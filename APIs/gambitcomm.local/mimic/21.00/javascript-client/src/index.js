/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessEntry from './model/AccessEntry';
import AgentState from './model/AgentState';
import ConfigCOAP from './model/ConfigCOAP';
import ConfigDHCP from './model/ConfigDHCP';
import ConfigIPMI from './model/ConfigIPMI';
import ConfigMQTT from './model/ConfigMQTT';
import ConfigNETFLOW from './model/ConfigNETFLOW';
import ConfigPROXY from './model/ConfigPROXY';
import ConfigSFLOW from './model/ConfigSFLOW';
import ConfigSNMPTCP from './model/ConfigSNMPTCP';
import ConfigSNMPv3 from './model/ConfigSNMPv3';
import ConfigSSH from './model/ConfigSSH';
import ConfigSYSLOG from './model/ConfigSYSLOG';
import ConfigTELNET from './model/ConfigTELNET';
import ConfigTFTP from './model/ConfigTFTP';
import ConfigTOD from './model/ConfigTOD';
import ConfigWEB from './model/ConfigWEB';
import IPAlias from './model/IPAlias';
import IPSource from './model/IPSource';
import SyslogMsg from './model/SyslogMsg';
import TelnetUser from './model/TelnetUser';
import TimerScript from './model/TimerScript';
import TrapDest from './model/TrapDest';
import Triplet from './model/Triplet';
import AccessApi from './api/AccessApi';
import AgentApi from './api/AgentApi';
import COAPApi from './api/COAPApi';
import DHCPApi from './api/DHCPApi';
import DaemonApi from './api/DaemonApi';
import IPMIApi from './api/IPMIApi';
import MQTTApi from './api/MQTTApi';
import NETFLOWApi from './api/NETFLOWApi';
import PROXYApi from './api/PROXYApi';
import SFLOWApi from './api/SFLOWApi';
import SNMPTCPApi from './api/SNMPTCPApi';
import SNMPv3Api from './api/SNMPv3Api';
import SSHApi from './api/SSHApi';
import SYSLOGApi from './api/SYSLOGApi';
import TELNETApi from './api/TELNETApi';
import TFTPApi from './api/TFTPApi';
import TODApi from './api/TODApi';
import ValuespaceApi from './api/ValuespaceApi';
import WEBApi from './api/WEBApi';


/**
* This is the API for MIMIC client to connect to MIMIC daemon..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MimicRestApi = require('index'); // See note below*.
* var xxxSvc = new MimicRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MimicRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MimicRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MimicRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 21.00
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessEntry model constructor.
     * @property {module:model/AccessEntry}
     */
    AccessEntry,

    /**
     * The AgentState model constructor.
     * @property {module:model/AgentState}
     */
    AgentState,

    /**
     * The ConfigCOAP model constructor.
     * @property {module:model/ConfigCOAP}
     */
    ConfigCOAP,

    /**
     * The ConfigDHCP model constructor.
     * @property {module:model/ConfigDHCP}
     */
    ConfigDHCP,

    /**
     * The ConfigIPMI model constructor.
     * @property {module:model/ConfigIPMI}
     */
    ConfigIPMI,

    /**
     * The ConfigMQTT model constructor.
     * @property {module:model/ConfigMQTT}
     */
    ConfigMQTT,

    /**
     * The ConfigNETFLOW model constructor.
     * @property {module:model/ConfigNETFLOW}
     */
    ConfigNETFLOW,

    /**
     * The ConfigPROXY model constructor.
     * @property {module:model/ConfigPROXY}
     */
    ConfigPROXY,

    /**
     * The ConfigSFLOW model constructor.
     * @property {module:model/ConfigSFLOW}
     */
    ConfigSFLOW,

    /**
     * The ConfigSNMPTCP model constructor.
     * @property {module:model/ConfigSNMPTCP}
     */
    ConfigSNMPTCP,

    /**
     * The ConfigSNMPv3 model constructor.
     * @property {module:model/ConfigSNMPv3}
     */
    ConfigSNMPv3,

    /**
     * The ConfigSSH model constructor.
     * @property {module:model/ConfigSSH}
     */
    ConfigSSH,

    /**
     * The ConfigSYSLOG model constructor.
     * @property {module:model/ConfigSYSLOG}
     */
    ConfigSYSLOG,

    /**
     * The ConfigTELNET model constructor.
     * @property {module:model/ConfigTELNET}
     */
    ConfigTELNET,

    /**
     * The ConfigTFTP model constructor.
     * @property {module:model/ConfigTFTP}
     */
    ConfigTFTP,

    /**
     * The ConfigTOD model constructor.
     * @property {module:model/ConfigTOD}
     */
    ConfigTOD,

    /**
     * The ConfigWEB model constructor.
     * @property {module:model/ConfigWEB}
     */
    ConfigWEB,

    /**
     * The IPAlias model constructor.
     * @property {module:model/IPAlias}
     */
    IPAlias,

    /**
     * The IPSource model constructor.
     * @property {module:model/IPSource}
     */
    IPSource,

    /**
     * The SyslogMsg model constructor.
     * @property {module:model/SyslogMsg}
     */
    SyslogMsg,

    /**
     * The TelnetUser model constructor.
     * @property {module:model/TelnetUser}
     */
    TelnetUser,

    /**
     * The TimerScript model constructor.
     * @property {module:model/TimerScript}
     */
    TimerScript,

    /**
     * The TrapDest model constructor.
     * @property {module:model/TrapDest}
     */
    TrapDest,

    /**
     * The Triplet model constructor.
     * @property {module:model/Triplet}
     */
    Triplet,

    /**
    * The AccessApi service constructor.
    * @property {module:api/AccessApi}
    */
    AccessApi,

    /**
    * The AgentApi service constructor.
    * @property {module:api/AgentApi}
    */
    AgentApi,

    /**
    * The COAPApi service constructor.
    * @property {module:api/COAPApi}
    */
    COAPApi,

    /**
    * The DHCPApi service constructor.
    * @property {module:api/DHCPApi}
    */
    DHCPApi,

    /**
    * The DaemonApi service constructor.
    * @property {module:api/DaemonApi}
    */
    DaemonApi,

    /**
    * The IPMIApi service constructor.
    * @property {module:api/IPMIApi}
    */
    IPMIApi,

    /**
    * The MQTTApi service constructor.
    * @property {module:api/MQTTApi}
    */
    MQTTApi,

    /**
    * The NETFLOWApi service constructor.
    * @property {module:api/NETFLOWApi}
    */
    NETFLOWApi,

    /**
    * The PROXYApi service constructor.
    * @property {module:api/PROXYApi}
    */
    PROXYApi,

    /**
    * The SFLOWApi service constructor.
    * @property {module:api/SFLOWApi}
    */
    SFLOWApi,

    /**
    * The SNMPTCPApi service constructor.
    * @property {module:api/SNMPTCPApi}
    */
    SNMPTCPApi,

    /**
    * The SNMPv3Api service constructor.
    * @property {module:api/SNMPv3Api}
    */
    SNMPv3Api,

    /**
    * The SSHApi service constructor.
    * @property {module:api/SSHApi}
    */
    SSHApi,

    /**
    * The SYSLOGApi service constructor.
    * @property {module:api/SYSLOGApi}
    */
    SYSLOGApi,

    /**
    * The TELNETApi service constructor.
    * @property {module:api/TELNETApi}
    */
    TELNETApi,

    /**
    * The TFTPApi service constructor.
    * @property {module:api/TFTPApi}
    */
    TFTPApi,

    /**
    * The TODApi service constructor.
    * @property {module:api/TODApi}
    */
    TODApi,

    /**
    * The ValuespaceApi service constructor.
    * @property {module:api/ValuespaceApi}
    */
    ValuespaceApi,

    /**
    * The WEBApi service constructor.
    * @property {module:api/WEBApi}
    */
    WEBApi
};
