/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MimicRestApi);
  }
}(this, function(expect, MimicRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MimicRestApi.IPMIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IPMIApi', function() {
    describe('protocolIpmiGetArgs', function() {
      it('should call protocolIpmiGetArgs successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiGetArgs
        //instance.protocolIpmiGetArgs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolIpmiGetAttr', function() {
      it('should call protocolIpmiGetAttr successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiGetAttr
        //instance.protocolIpmiGetAttr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolIpmiGetConfig', function() {
      it('should call protocolIpmiGetConfig successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiGetConfig
        //instance.protocolIpmiGetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolIpmiGetStatistics', function() {
      it('should call protocolIpmiGetStatistics successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiGetStatistics
        //instance.protocolIpmiGetStatistics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolIpmiGetStatsHdr', function() {
      it('should call protocolIpmiGetStatsHdr successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiGetStatsHdr
        //instance.protocolIpmiGetStatsHdr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolIpmiGetTrace', function() {
      it('should call protocolIpmiGetTrace successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiGetTrace
        //instance.protocolIpmiGetTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolIpmiSetAttr', function() {
      it('should call protocolIpmiSetAttr successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiSetAttr
        //instance.protocolIpmiSetAttr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolIpmiSetConfig', function() {
      it('should call protocolIpmiSetConfig successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiSetConfig
        //instance.protocolIpmiSetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolIpmiSetTrace', function() {
      it('should call protocolIpmiSetTrace successfully', function(done) {
        //uncomment below and update the code to test protocolIpmiSetTrace
        //instance.protocolIpmiSetTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
