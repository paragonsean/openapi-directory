/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MimicRestApi);
  }
}(this, function(expect, MimicRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MimicRestApi.AccessApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccessApi', function() {
    describe('accessAdd', function() {
      it('should call accessAdd successfully', function(done) {
        //uncomment below and update the code to test accessAdd
        //instance.accessAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessDel', function() {
      it('should call accessDel successfully', function(done) {
        //uncomment below and update the code to test accessDel
        //instance.accessDel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessGetAcldb', function() {
      it('should call accessGetAcldb successfully', function(done) {
        //uncomment below and update the code to test accessGetAcldb
        //instance.accessGetAcldb(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessGetAdmindir', function() {
      it('should call accessGetAdmindir successfully', function(done) {
        //uncomment below and update the code to test accessGetAdmindir
        //instance.accessGetAdmindir(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessGetAdminuser', function() {
      it('should call accessGetAdminuser successfully', function(done) {
        //uncomment below and update the code to test accessGetAdminuser
        //instance.accessGetAdminuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessGetEnabled', function() {
      it('should call accessGetEnabled successfully', function(done) {
        //uncomment below and update the code to test accessGetEnabled
        //instance.accessGetEnabled(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessList', function() {
      it('should call accessList successfully', function(done) {
        //uncomment below and update the code to test accessList
        //instance.accessList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessLoad', function() {
      it('should call accessLoad successfully', function(done) {
        //uncomment below and update the code to test accessLoad
        //instance.accessLoad(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessSave', function() {
      it('should call accessSave successfully', function(done) {
        //uncomment below and update the code to test accessSave
        //instance.accessSave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessSetAcldb', function() {
      it('should call accessSetAcldb successfully', function(done) {
        //uncomment below and update the code to test accessSetAcldb
        //instance.accessSetAcldb(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accessSetEnabled', function() {
      it('should call accessSetEnabled successfully', function(done) {
        //uncomment below and update the code to test accessSetEnabled
        //instance.accessSetEnabled(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
