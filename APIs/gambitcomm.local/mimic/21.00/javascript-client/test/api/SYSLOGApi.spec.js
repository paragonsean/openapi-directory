/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MimicRestApi);
  }
}(this, function(expect, MimicRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MimicRestApi.SYSLOGApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SYSLOGApi', function() {
    describe('protocolSyslogGetArgs', function() {
      it('should call protocolSyslogGetArgs successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogGetArgs
        //instance.protocolSyslogGetArgs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogGetAttr', function() {
      it('should call protocolSyslogGetAttr successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogGetAttr
        //instance.protocolSyslogGetAttr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogGetConfig', function() {
      it('should call protocolSyslogGetConfig successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogGetConfig
        //instance.protocolSyslogGetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogGetStatistics', function() {
      it('should call protocolSyslogGetStatistics successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogGetStatistics
        //instance.protocolSyslogGetStatistics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogGetStatsHdr', function() {
      it('should call protocolSyslogGetStatsHdr successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogGetStatsHdr
        //instance.protocolSyslogGetStatsHdr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogGetTrace', function() {
      it('should call protocolSyslogGetTrace successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogGetTrace
        //instance.protocolSyslogGetTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogSend', function() {
      it('should call protocolSyslogSend successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogSend
        //instance.protocolSyslogSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogSetAttr', function() {
      it('should call protocolSyslogSetAttr successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogSetAttr
        //instance.protocolSyslogSetAttr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogSetConfig', function() {
      it('should call protocolSyslogSetConfig successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogSetConfig
        //instance.protocolSyslogSetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolSyslogSetTrace', function() {
      it('should call protocolSyslogSetTrace successfully', function(done) {
        //uncomment below and update the code to test protocolSyslogSetTrace
        //instance.protocolSyslogSetTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
