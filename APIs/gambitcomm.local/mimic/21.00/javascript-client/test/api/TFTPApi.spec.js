/**
 * MIMIC REST API
 * This is the API for MIMIC client to connect to MIMIC daemon.
 *
 * The version of the OpenAPI document: 21.00
 * Contact: support@gambitcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MimicRestApi);
  }
}(this, function(expect, MimicRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MimicRestApi.TFTPApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TFTPApi', function() {
    describe('protocolTftpGetArgs', function() {
      it('should call protocolTftpGetArgs successfully', function(done) {
        //uncomment below and update the code to test protocolTftpGetArgs
        //instance.protocolTftpGetArgs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpGetConfig', function() {
      it('should call protocolTftpGetConfig successfully', function(done) {
        //uncomment below and update the code to test protocolTftpGetConfig
        //instance.protocolTftpGetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpGetStatistics', function() {
      it('should call protocolTftpGetStatistics successfully', function(done) {
        //uncomment below and update the code to test protocolTftpGetStatistics
        //instance.protocolTftpGetStatistics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpGetStatsHdr', function() {
      it('should call protocolTftpGetStatsHdr successfully', function(done) {
        //uncomment below and update the code to test protocolTftpGetStatsHdr
        //instance.protocolTftpGetStatsHdr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpGetTrace', function() {
      it('should call protocolTftpGetTrace successfully', function(done) {
        //uncomment below and update the code to test protocolTftpGetTrace
        //instance.protocolTftpGetTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSessionGetParameter', function() {
      it('should call protocolTftpSessionGetParameter successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSessionGetParameter
        //instance.protocolTftpSessionGetParameter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSessionRead', function() {
      it('should call protocolTftpSessionRead successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSessionRead
        //instance.protocolTftpSessionRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSessionSetParameter', function() {
      it('should call protocolTftpSessionSetParameter successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSessionSetParameter
        //instance.protocolTftpSessionSetParameter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSessionStart', function() {
      it('should call protocolTftpSessionStart successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSessionStart
        //instance.protocolTftpSessionStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSessionStatus', function() {
      it('should call protocolTftpSessionStatus successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSessionStatus
        //instance.protocolTftpSessionStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSessionStop', function() {
      it('should call protocolTftpSessionStop successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSessionStop
        //instance.protocolTftpSessionStop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSessionWrite', function() {
      it('should call protocolTftpSessionWrite successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSessionWrite
        //instance.protocolTftpSessionWrite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSetConfig', function() {
      it('should call protocolTftpSetConfig successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSetConfig
        //instance.protocolTftpSetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('protocolTftpSetTrace', function() {
      it('should call protocolTftpSetTrace successfully', function(done) {
        //uncomment below and update the code to test protocolTftpSetTrace
        //instance.protocolTftpSetTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
