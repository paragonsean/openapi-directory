/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetBoxApi);
  }
}(this, function(expect, NetBoxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetBoxApi.VirtualMachineWithConfigContext();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VirtualMachineWithConfigContext', function() {
    it('should create an instance of VirtualMachineWithConfigContext', function() {
      // uncomment below and update the code to test VirtualMachineWithConfigContext
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be.a(NetBoxApi.VirtualMachineWithConfigContext);
    });

    it('should have the property cluster (base name: "cluster")', function() {
      // uncomment below and update the code to test the property cluster
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property configContext (base name: "config_context")', function() {
      // uncomment below and update the code to test the property configContext
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "custom_fields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property disk (base name: "disk")', function() {
      // uncomment below and update the code to test the property disk
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "last_updated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property localContextData (base name: "local_context_data")', function() {
      // uncomment below and update the code to test the property localContextData
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property memory (base name: "memory")', function() {
      // uncomment below and update the code to test the property memory
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property platform (base name: "platform")', function() {
      // uncomment below and update the code to test the property platform
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property primaryIp (base name: "primary_ip")', function() {
      // uncomment below and update the code to test the property primaryIp
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property primaryIp4 (base name: "primary_ip4")', function() {
      // uncomment below and update the code to test the property primaryIp4
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property primaryIp6 (base name: "primary_ip6")', function() {
      // uncomment below and update the code to test the property primaryIp6
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property role (base name: "role")', function() {
      // uncomment below and update the code to test the property role
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property site (base name: "site")', function() {
      // uncomment below and update the code to test the property site
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property tenant (base name: "tenant")', function() {
      // uncomment below and update the code to test the property tenant
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

    it('should have the property vcpus (base name: "vcpus")', function() {
      // uncomment below and update the code to test the property vcpus
      //var instance = new NetBoxApi.VirtualMachineWithConfigContext();
      //expect(instance).to.be();
    });

  });

}));
