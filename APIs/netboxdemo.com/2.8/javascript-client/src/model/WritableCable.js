/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WritableCable model module.
 * @module model/WritableCable
 * @version 2.8
 */
class WritableCable {
    /**
     * Constructs a new <code>WritableCable</code>.
     * @alias module:model/WritableCable
     * @param terminationAId {Number} 
     * @param terminationAType {String} 
     * @param terminationBId {Number} 
     * @param terminationBType {String} 
     */
    constructor(terminationAId, terminationAType, terminationBId, terminationBType) { 
        
        WritableCable.initialize(this, terminationAId, terminationAType, terminationBId, terminationBType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, terminationAId, terminationAType, terminationBId, terminationBType) { 
        obj['termination_a_id'] = terminationAId;
        obj['termination_a_type'] = terminationAType;
        obj['termination_b_id'] = terminationBId;
        obj['termination_b_type'] = terminationBType;
    }

    /**
     * Constructs a <code>WritableCable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WritableCable} obj Optional instance to populate.
     * @return {module:model/WritableCable} The populated <code>WritableCable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WritableCable();

            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('length_unit')) {
                obj['length_unit'] = ApiClient.convertToType(data['length_unit'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('termination_a')) {
                obj['termination_a'] = ApiClient.convertToType(data['termination_a'], {'String': 'String'});
            }
            if (data.hasOwnProperty('termination_a_id')) {
                obj['termination_a_id'] = ApiClient.convertToType(data['termination_a_id'], 'Number');
            }
            if (data.hasOwnProperty('termination_a_type')) {
                obj['termination_a_type'] = ApiClient.convertToType(data['termination_a_type'], 'String');
            }
            if (data.hasOwnProperty('termination_b')) {
                obj['termination_b'] = ApiClient.convertToType(data['termination_b'], {'String': 'String'});
            }
            if (data.hasOwnProperty('termination_b_id')) {
                obj['termination_b_id'] = ApiClient.convertToType(data['termination_b_id'], 'Number');
            }
            if (data.hasOwnProperty('termination_b_type')) {
                obj['termination_b_type'] = ApiClient.convertToType(data['termination_b_type'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WritableCable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WritableCable</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WritableCable.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['color'] && !(typeof data['color'] === 'string' || data['color'] instanceof String)) {
            throw new Error("Expected the field `color` to be a primitive type in the JSON string but got " + data['color']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['length_unit'] && !(typeof data['length_unit'] === 'string' || data['length_unit'] instanceof String)) {
            throw new Error("Expected the field `length_unit` to be a primitive type in the JSON string but got " + data['length_unit']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['termination_a_type'] && !(typeof data['termination_a_type'] === 'string' || data['termination_a_type'] instanceof String)) {
            throw new Error("Expected the field `termination_a_type` to be a primitive type in the JSON string but got " + data['termination_a_type']);
        }
        // ensure the json data is a string
        if (data['termination_b_type'] && !(typeof data['termination_b_type'] === 'string' || data['termination_b_type'] instanceof String)) {
            throw new Error("Expected the field `termination_b_type` to be a primitive type in the JSON string but got " + data['termination_b_type']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

WritableCable.RequiredProperties = ["termination_a_id", "termination_a_type", "termination_b_id", "termination_b_type"];

/**
 * @member {String} color
 */
WritableCable.prototype['color'] = undefined;

/**
 * @member {Number} id
 */
WritableCable.prototype['id'] = undefined;

/**
 * @member {String} label
 */
WritableCable.prototype['label'] = undefined;

/**
 * @member {Number} length
 */
WritableCable.prototype['length'] = undefined;

/**
 * @member {module:model/WritableCable.LengthUnitEnum} length_unit
 */
WritableCable.prototype['length_unit'] = undefined;

/**
 * @member {module:model/WritableCable.StatusEnum} status
 */
WritableCable.prototype['status'] = undefined;

/**
 * @member {Object.<String, String>} termination_a
 */
WritableCable.prototype['termination_a'] = undefined;

/**
 * @member {Number} termination_a_id
 */
WritableCable.prototype['termination_a_id'] = undefined;

/**
 * @member {String} termination_a_type
 */
WritableCable.prototype['termination_a_type'] = undefined;

/**
 * @member {Object.<String, String>} termination_b
 */
WritableCable.prototype['termination_b'] = undefined;

/**
 * @member {Number} termination_b_id
 */
WritableCable.prototype['termination_b_id'] = undefined;

/**
 * @member {String} termination_b_type
 */
WritableCable.prototype['termination_b_type'] = undefined;

/**
 * @member {module:model/WritableCable.TypeEnum} type
 */
WritableCable.prototype['type'] = undefined;





/**
 * Allowed values for the <code>length_unit</code> property.
 * @enum {String}
 * @readonly
 */
WritableCable['LengthUnitEnum'] = {

    /**
     * value: "m"
     * @const
     */
    "m": "m",

    /**
     * value: "cm"
     * @const
     */
    "cm": "cm",

    /**
     * value: "ft"
     * @const
     */
    "ft": "ft",

    /**
     * value: "in"
     * @const
     */
    "in": "in"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
WritableCable['StatusEnum'] = {

    /**
     * value: "connected"
     * @const
     */
    "connected": "connected",

    /**
     * value: "planned"
     * @const
     */
    "planned": "planned",

    /**
     * value: "decommissioning"
     * @const
     */
    "decommissioning": "decommissioning"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
WritableCable['TypeEnum'] = {

    /**
     * value: "cat3"
     * @const
     */
    "cat3": "cat3",

    /**
     * value: "cat5"
     * @const
     */
    "cat5": "cat5",

    /**
     * value: "cat5e"
     * @const
     */
    "cat5e": "cat5e",

    /**
     * value: "cat6"
     * @const
     */
    "cat6": "cat6",

    /**
     * value: "cat6a"
     * @const
     */
    "cat6a": "cat6a",

    /**
     * value: "cat7"
     * @const
     */
    "cat7": "cat7",

    /**
     * value: "dac-active"
     * @const
     */
    "dac-active": "dac-active",

    /**
     * value: "dac-passive"
     * @const
     */
    "dac-passive": "dac-passive",

    /**
     * value: "mrj21-trunk"
     * @const
     */
    "mrj21-trunk": "mrj21-trunk",

    /**
     * value: "coaxial"
     * @const
     */
    "coaxial": "coaxial",

    /**
     * value: "mmf"
     * @const
     */
    "mmf": "mmf",

    /**
     * value: "mmf-om1"
     * @const
     */
    "mmf-om1": "mmf-om1",

    /**
     * value: "mmf-om2"
     * @const
     */
    "mmf-om2": "mmf-om2",

    /**
     * value: "mmf-om3"
     * @const
     */
    "mmf-om3": "mmf-om3",

    /**
     * value: "mmf-om4"
     * @const
     */
    "mmf-om4": "mmf-om4",

    /**
     * value: "smf"
     * @const
     */
    "smf": "smf",

    /**
     * value: "smf-os1"
     * @const
     */
    "smf-os1": "smf-os1",

    /**
     * value: "smf-os2"
     * @const
     */
    "smf-os2": "smf-os2",

    /**
     * value: "aoc"
     * @const
     */
    "aoc": "aoc",

    /**
     * value: "power"
     * @const
     */
    "power": "power"
};



export default WritableCable;

