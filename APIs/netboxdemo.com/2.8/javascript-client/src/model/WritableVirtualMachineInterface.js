/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WritableVirtualMachineInterface model module.
 * @module model/WritableVirtualMachineInterface
 * @version 2.8
 */
class WritableVirtualMachineInterface {
    /**
     * Constructs a new <code>WritableVirtualMachineInterface</code>.
     * @alias module:model/WritableVirtualMachineInterface
     * @param name {String} 
     * @param type {module:model/WritableVirtualMachineInterface.TypeEnum} 
     */
    constructor(name, type) { 
        
        WritableVirtualMachineInterface.initialize(this, name, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, type) { 
        obj['name'] = name;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>WritableVirtualMachineInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WritableVirtualMachineInterface} obj Optional instance to populate.
     * @return {module:model/WritableVirtualMachineInterface} The populated <code>WritableVirtualMachineInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WritableVirtualMachineInterface();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('mac_address')) {
                obj['mac_address'] = ApiClient.convertToType(data['mac_address'], 'String');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('mtu')) {
                obj['mtu'] = ApiClient.convertToType(data['mtu'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tagged_vlans')) {
                obj['tagged_vlans'] = ApiClient.convertToType(data['tagged_vlans'], ['Number']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('untagged_vlan')) {
                obj['untagged_vlan'] = ApiClient.convertToType(data['untagged_vlan'], 'Number');
            }
            if (data.hasOwnProperty('virtual_machine')) {
                obj['virtual_machine'] = ApiClient.convertToType(data['virtual_machine'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WritableVirtualMachineInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WritableVirtualMachineInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WritableVirtualMachineInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['mac_address'] && !(typeof data['mac_address'] === 'string' || data['mac_address'] instanceof String)) {
            throw new Error("Expected the field `mac_address` to be a primitive type in the JSON string but got " + data['mac_address']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tagged_vlans'])) {
            throw new Error("Expected the field `tagged_vlans` to be an array in the JSON data but got " + data['tagged_vlans']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

WritableVirtualMachineInterface.RequiredProperties = ["name", "type"];

/**
 * @member {String} description
 */
WritableVirtualMachineInterface.prototype['description'] = undefined;

/**
 * @member {Boolean} enabled
 */
WritableVirtualMachineInterface.prototype['enabled'] = undefined;

/**
 * @member {Number} id
 */
WritableVirtualMachineInterface.prototype['id'] = undefined;

/**
 * @member {String} mac_address
 */
WritableVirtualMachineInterface.prototype['mac_address'] = undefined;

/**
 * @member {module:model/WritableVirtualMachineInterface.ModeEnum} mode
 */
WritableVirtualMachineInterface.prototype['mode'] = undefined;

/**
 * @member {Number} mtu
 */
WritableVirtualMachineInterface.prototype['mtu'] = undefined;

/**
 * @member {String} name
 */
WritableVirtualMachineInterface.prototype['name'] = undefined;

/**
 * @member {Array.<Number>} tagged_vlans
 */
WritableVirtualMachineInterface.prototype['tagged_vlans'] = undefined;

/**
 * @member {Array.<String>} tags
 */
WritableVirtualMachineInterface.prototype['tags'] = undefined;

/**
 * @member {module:model/WritableVirtualMachineInterface.TypeEnum} type
 */
WritableVirtualMachineInterface.prototype['type'] = undefined;

/**
 * @member {Number} untagged_vlan
 */
WritableVirtualMachineInterface.prototype['untagged_vlan'] = undefined;

/**
 * @member {Number} virtual_machine
 */
WritableVirtualMachineInterface.prototype['virtual_machine'] = undefined;





/**
 * Allowed values for the <code>mode</code> property.
 * @enum {String}
 * @readonly
 */
WritableVirtualMachineInterface['ModeEnum'] = {

    /**
     * value: "access"
     * @const
     */
    "access": "access",

    /**
     * value: "tagged"
     * @const
     */
    "tagged": "tagged",

    /**
     * value: "tagged-all"
     * @const
     */
    "tagged-all": "tagged-all"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
WritableVirtualMachineInterface['TypeEnum'] = {

    /**
     * value: "virtual"
     * @const
     */
    "virtual": "virtual",

    /**
     * value: "lag"
     * @const
     */
    "lag": "lag",

    /**
     * value: "100base-tx"
     * @const
     */
    "100base-tx": "100base-tx",

    /**
     * value: "1000base-t"
     * @const
     */
    "1000base-t": "1000base-t",

    /**
     * value: "2.5gbase-t"
     * @const
     */
    "2.5gbase-t": "2.5gbase-t",

    /**
     * value: "5gbase-t"
     * @const
     */
    "5gbase-t": "5gbase-t",

    /**
     * value: "10gbase-t"
     * @const
     */
    "10gbase-t": "10gbase-t",

    /**
     * value: "10gbase-cx4"
     * @const
     */
    "10gbase-cx4": "10gbase-cx4",

    /**
     * value: "1000base-x-gbic"
     * @const
     */
    "1000base-x-gbic": "1000base-x-gbic",

    /**
     * value: "1000base-x-sfp"
     * @const
     */
    "1000base-x-sfp": "1000base-x-sfp",

    /**
     * value: "10gbase-x-sfpp"
     * @const
     */
    "10gbase-x-sfpp": "10gbase-x-sfpp",

    /**
     * value: "10gbase-x-xfp"
     * @const
     */
    "10gbase-x-xfp": "10gbase-x-xfp",

    /**
     * value: "10gbase-x-xenpak"
     * @const
     */
    "10gbase-x-xenpak": "10gbase-x-xenpak",

    /**
     * value: "10gbase-x-x2"
     * @const
     */
    "10gbase-x-x2": "10gbase-x-x2",

    /**
     * value: "25gbase-x-sfp28"
     * @const
     */
    "25gbase-x-sfp28": "25gbase-x-sfp28",

    /**
     * value: "40gbase-x-qsfpp"
     * @const
     */
    "40gbase-x-qsfpp": "40gbase-x-qsfpp",

    /**
     * value: "50gbase-x-sfp28"
     * @const
     */
    "50gbase-x-sfp28": "50gbase-x-sfp28",

    /**
     * value: "100gbase-x-cfp"
     * @const
     */
    "100gbase-x-cfp": "100gbase-x-cfp",

    /**
     * value: "100gbase-x-cfp2"
     * @const
     */
    "100gbase-x-cfp2": "100gbase-x-cfp2",

    /**
     * value: "200gbase-x-cfp2"
     * @const
     */
    "200gbase-x-cfp2": "200gbase-x-cfp2",

    /**
     * value: "100gbase-x-cfp4"
     * @const
     */
    "100gbase-x-cfp4": "100gbase-x-cfp4",

    /**
     * value: "100gbase-x-cpak"
     * @const
     */
    "100gbase-x-cpak": "100gbase-x-cpak",

    /**
     * value: "100gbase-x-qsfp28"
     * @const
     */
    "100gbase-x-qsfp28": "100gbase-x-qsfp28",

    /**
     * value: "200gbase-x-qsfp56"
     * @const
     */
    "200gbase-x-qsfp56": "200gbase-x-qsfp56",

    /**
     * value: "400gbase-x-qsfpdd"
     * @const
     */
    "400gbase-x-qsfpdd": "400gbase-x-qsfpdd",

    /**
     * value: "400gbase-x-osfp"
     * @const
     */
    "400gbase-x-osfp": "400gbase-x-osfp",

    /**
     * value: "ieee802.11a"
     * @const
     */
    "ieee802.11a": "ieee802.11a",

    /**
     * value: "ieee802.11g"
     * @const
     */
    "ieee802.11g": "ieee802.11g",

    /**
     * value: "ieee802.11n"
     * @const
     */
    "ieee802.11n": "ieee802.11n",

    /**
     * value: "ieee802.11ac"
     * @const
     */
    "ieee802.11ac": "ieee802.11ac",

    /**
     * value: "ieee802.11ad"
     * @const
     */
    "ieee802.11ad": "ieee802.11ad",

    /**
     * value: "ieee802.11ax"
     * @const
     */
    "ieee802.11ax": "ieee802.11ax",

    /**
     * value: "gsm"
     * @const
     */
    "gsm": "gsm",

    /**
     * value: "cdma"
     * @const
     */
    "cdma": "cdma",

    /**
     * value: "lte"
     * @const
     */
    "lte": "lte",

    /**
     * value: "sonet-oc3"
     * @const
     */
    "sonet-oc3": "sonet-oc3",

    /**
     * value: "sonet-oc12"
     * @const
     */
    "sonet-oc12": "sonet-oc12",

    /**
     * value: "sonet-oc48"
     * @const
     */
    "sonet-oc48": "sonet-oc48",

    /**
     * value: "sonet-oc192"
     * @const
     */
    "sonet-oc192": "sonet-oc192",

    /**
     * value: "sonet-oc768"
     * @const
     */
    "sonet-oc768": "sonet-oc768",

    /**
     * value: "sonet-oc1920"
     * @const
     */
    "sonet-oc1920": "sonet-oc1920",

    /**
     * value: "sonet-oc3840"
     * @const
     */
    "sonet-oc3840": "sonet-oc3840",

    /**
     * value: "1gfc-sfp"
     * @const
     */
    "1gfc-sfp": "1gfc-sfp",

    /**
     * value: "2gfc-sfp"
     * @const
     */
    "2gfc-sfp": "2gfc-sfp",

    /**
     * value: "4gfc-sfp"
     * @const
     */
    "4gfc-sfp": "4gfc-sfp",

    /**
     * value: "8gfc-sfpp"
     * @const
     */
    "8gfc-sfpp": "8gfc-sfpp",

    /**
     * value: "16gfc-sfpp"
     * @const
     */
    "16gfc-sfpp": "16gfc-sfpp",

    /**
     * value: "32gfc-sfp28"
     * @const
     */
    "32gfc-sfp28": "32gfc-sfp28",

    /**
     * value: "128gfc-sfp28"
     * @const
     */
    "128gfc-sfp28": "128gfc-sfp28",

    /**
     * value: "infiniband-sdr"
     * @const
     */
    "infiniband-sdr": "infiniband-sdr",

    /**
     * value: "infiniband-ddr"
     * @const
     */
    "infiniband-ddr": "infiniband-ddr",

    /**
     * value: "infiniband-qdr"
     * @const
     */
    "infiniband-qdr": "infiniband-qdr",

    /**
     * value: "infiniband-fdr10"
     * @const
     */
    "infiniband-fdr10": "infiniband-fdr10",

    /**
     * value: "infiniband-fdr"
     * @const
     */
    "infiniband-fdr": "infiniband-fdr",

    /**
     * value: "infiniband-edr"
     * @const
     */
    "infiniband-edr": "infiniband-edr",

    /**
     * value: "infiniband-hdr"
     * @const
     */
    "infiniband-hdr": "infiniband-hdr",

    /**
     * value: "infiniband-ndr"
     * @const
     */
    "infiniband-ndr": "infiniband-ndr",

    /**
     * value: "infiniband-xdr"
     * @const
     */
    "infiniband-xdr": "infiniband-xdr",

    /**
     * value: "t1"
     * @const
     */
    "t1": "t1",

    /**
     * value: "e1"
     * @const
     */
    "e1": "e1",

    /**
     * value: "t3"
     * @const
     */
    "t3": "t3",

    /**
     * value: "e3"
     * @const
     */
    "e3": "e3",

    /**
     * value: "cisco-stackwise"
     * @const
     */
    "cisco-stackwise": "cisco-stackwise",

    /**
     * value: "cisco-stackwise-plus"
     * @const
     */
    "cisco-stackwise-plus": "cisco-stackwise-plus",

    /**
     * value: "cisco-flexstack"
     * @const
     */
    "cisco-flexstack": "cisco-flexstack",

    /**
     * value: "cisco-flexstack-plus"
     * @const
     */
    "cisco-flexstack-plus": "cisco-flexstack-plus",

    /**
     * value: "juniper-vcp"
     * @const
     */
    "juniper-vcp": "juniper-vcp",

    /**
     * value: "extreme-summitstack"
     * @const
     */
    "extreme-summitstack": "extreme-summitstack",

    /**
     * value: "extreme-summitstack-128"
     * @const
     */
    "extreme-summitstack-128": "extreme-summitstack-128",

    /**
     * value: "extreme-summitstack-256"
     * @const
     */
    "extreme-summitstack-256": "extreme-summitstack-256",

    /**
     * value: "extreme-summitstack-512"
     * @const
     */
    "extreme-summitstack-512": "extreme-summitstack-512",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default WritableVirtualMachineInterface;

