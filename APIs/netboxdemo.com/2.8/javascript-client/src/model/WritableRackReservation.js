/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WritableRackReservation model module.
 * @module model/WritableRackReservation
 * @version 2.8
 */
class WritableRackReservation {
    /**
     * Constructs a new <code>WritableRackReservation</code>.
     * @alias module:model/WritableRackReservation
     * @param description {String} 
     * @param rack {Number} 
     * @param units {Array.<Number>} 
     * @param user {Number} 
     */
    constructor(description, rack, units, user) { 
        
        WritableRackReservation.initialize(this, description, rack, units, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, rack, units, user) { 
        obj['description'] = description;
        obj['rack'] = rack;
        obj['units'] = units;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>WritableRackReservation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WritableRackReservation} obj Optional instance to populate.
     * @return {module:model/WritableRackReservation} The populated <code>WritableRackReservation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WritableRackReservation();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('rack')) {
                obj['rack'] = ApiClient.convertToType(data['rack'], 'Number');
            }
            if (data.hasOwnProperty('tenant')) {
                obj['tenant'] = ApiClient.convertToType(data['tenant'], 'Number');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], ['Number']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WritableRackReservation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WritableRackReservation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WritableRackReservation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['units'])) {
            throw new Error("Expected the field `units` to be an array in the JSON data but got " + data['units']);
        }

        return true;
    }


}

WritableRackReservation.RequiredProperties = ["description", "rack", "units", "user"];

/**
 * @member {Date} created
 */
WritableRackReservation.prototype['created'] = undefined;

/**
 * @member {String} description
 */
WritableRackReservation.prototype['description'] = undefined;

/**
 * @member {Number} id
 */
WritableRackReservation.prototype['id'] = undefined;

/**
 * @member {Number} rack
 */
WritableRackReservation.prototype['rack'] = undefined;

/**
 * @member {Number} tenant
 */
WritableRackReservation.prototype['tenant'] = undefined;

/**
 * @member {Array.<Number>} units
 */
WritableRackReservation.prototype['units'] = undefined;

/**
 * @member {Number} user
 */
WritableRackReservation.prototype['user'] = undefined;






export default WritableRackReservation;

