/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TenancyTenantGroupsList200Response;
import org.openapitools.client.model.TenancyTenantsList200Response;
import org.openapitools.client.model.Tenant;
import org.openapitools.client.model.TenantGroup;
import org.openapitools.client.model.WritableTenant;
import org.openapitools.client.model.WritableTenantGroup;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TenancyApi
 */
@Disabled
public class TenancyApiTest {

    private final TenancyApi api = new TenancyApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsCreateTest() throws ApiException {
        WritableTenantGroup writableTenantGroup = null;
        TenantGroup response = api.tenancyTenantGroupsCreate(writableTenantGroup);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsDeleteTest() throws ApiException {
        Integer id = null;
        api.tenancyTenantGroupsDelete(id);
        // TODO: test validations
    }

    /**
     * Call to super to allow for caching
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsListTest() throws ApiException {
        String id = null;
        String name = null;
        String slug = null;
        String description = null;
        String q = null;
        String parentId = null;
        String parent = null;
        String idN = null;
        String idLte = null;
        String idLt = null;
        String idGte = null;
        String idGt = null;
        String nameN = null;
        String nameIc = null;
        String nameNic = null;
        String nameIew = null;
        String nameNiew = null;
        String nameIsw = null;
        String nameNisw = null;
        String nameIe = null;
        String nameNie = null;
        String slugN = null;
        String slugIc = null;
        String slugNic = null;
        String slugIew = null;
        String slugNiew = null;
        String slugIsw = null;
        String slugNisw = null;
        String slugIe = null;
        String slugNie = null;
        String descriptionN = null;
        String descriptionIc = null;
        String descriptionNic = null;
        String descriptionIew = null;
        String descriptionNiew = null;
        String descriptionIsw = null;
        String descriptionNisw = null;
        String descriptionIe = null;
        String descriptionNie = null;
        String parentIdN = null;
        String parentN = null;
        Integer limit = null;
        Integer offset = null;
        TenancyTenantGroupsList200Response response = api.tenancyTenantGroupsList(id, name, slug, description, q, parentId, parent, idN, idLte, idLt, idGte, idGt, nameN, nameIc, nameNic, nameIew, nameNiew, nameIsw, nameNisw, nameIe, nameNie, slugN, slugIc, slugNic, slugIew, slugNiew, slugIsw, slugNisw, slugIe, slugNie, descriptionN, descriptionIc, descriptionNic, descriptionIew, descriptionNiew, descriptionIsw, descriptionNisw, descriptionIe, descriptionNie, parentIdN, parentN, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsPartialUpdateTest() throws ApiException {
        Integer id = null;
        WritableTenantGroup writableTenantGroup = null;
        TenantGroup response = api.tenancyTenantGroupsPartialUpdate(id, writableTenantGroup);
        // TODO: test validations
    }

    /**
     * Call to super to allow for caching
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsReadTest() throws ApiException {
        Integer id = null;
        TenantGroup response = api.tenancyTenantGroupsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsUpdateTest() throws ApiException {
        Integer id = null;
        WritableTenantGroup writableTenantGroup = null;
        TenantGroup response = api.tenancyTenantGroupsUpdate(id, writableTenantGroup);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsCreateTest() throws ApiException {
        WritableTenant writableTenant = null;
        Tenant response = api.tenancyTenantsCreate(writableTenant);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsDeleteTest() throws ApiException {
        Integer id = null;
        api.tenancyTenantsDelete(id);
        // TODO: test validations
    }

    /**
     * Call to super to allow for caching
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsListTest() throws ApiException {
        String id = null;
        String name = null;
        String slug = null;
        String created = null;
        String createdGte = null;
        String createdLte = null;
        String lastUpdated = null;
        String lastUpdatedGte = null;
        String lastUpdatedLte = null;
        String q = null;
        String groupId = null;
        String group = null;
        String tag = null;
        String idN = null;
        String idLte = null;
        String idLt = null;
        String idGte = null;
        String idGt = null;
        String nameN = null;
        String nameIc = null;
        String nameNic = null;
        String nameIew = null;
        String nameNiew = null;
        String nameIsw = null;
        String nameNisw = null;
        String nameIe = null;
        String nameNie = null;
        String slugN = null;
        String slugIc = null;
        String slugNic = null;
        String slugIew = null;
        String slugNiew = null;
        String slugIsw = null;
        String slugNisw = null;
        String slugIe = null;
        String slugNie = null;
        String groupIdN = null;
        String groupN = null;
        String tagN = null;
        Integer limit = null;
        Integer offset = null;
        TenancyTenantsList200Response response = api.tenancyTenantsList(id, name, slug, created, createdGte, createdLte, lastUpdated, lastUpdatedGte, lastUpdatedLte, q, groupId, group, tag, idN, idLte, idLt, idGte, idGt, nameN, nameIc, nameNic, nameIew, nameNiew, nameIsw, nameNisw, nameIe, nameNie, slugN, slugIc, slugNic, slugIew, slugNiew, slugIsw, slugNisw, slugIe, slugNie, groupIdN, groupN, tagN, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsPartialUpdateTest() throws ApiException {
        Integer id = null;
        WritableTenant writableTenant = null;
        Tenant response = api.tenancyTenantsPartialUpdate(id, writableTenant);
        // TODO: test validations
    }

    /**
     * Call to super to allow for caching
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsReadTest() throws ApiException {
        Integer id = null;
        Tenant response = api.tenancyTenantsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsUpdateTest() throws ApiException {
        Integer id = null;
        WritableTenant writableTenant = null;
        Tenant response = api.tenancyTenantsUpdate(id, writableTenant);
        // TODO: test validations
    }

}
