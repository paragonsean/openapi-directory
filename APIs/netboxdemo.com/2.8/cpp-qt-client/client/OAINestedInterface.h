/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINestedInterface.h
 *
 * 
 */

#ifndef OAINestedInterface_H
#define OAINestedInterface_H

#include <QJsonObject>

#include "OAIConnection_status.h"
#include "OAINestedDevice.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnection_status;
class OAINestedDevice;

class OAINestedInterface : public OAIObject {
public:
    OAINestedInterface();
    OAINestedInterface(QString json);
    ~OAINestedInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCable() const;
    void setCable(const qint32 &cable);
    bool is_cable_Set() const;
    bool is_cable_Valid() const;

    OAIConnection_status getConnectionStatus() const;
    void setConnectionStatus(const OAIConnection_status &connection_status);
    bool is_connection_status_Set() const;
    bool is_connection_status_Valid() const;

    OAINestedDevice getDevice() const;
    void setDevice(const OAINestedDevice &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_cable;
    bool m_cable_isSet;
    bool m_cable_isValid;

    OAIConnection_status m_connection_status;
    bool m_connection_status_isSet;
    bool m_connection_status_isValid;

    OAINestedDevice m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINestedInterface)

#endif // OAINestedInterface_H
