/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINestedPowerPanel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINestedPowerPanel::OAINestedPowerPanel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINestedPowerPanel::OAINestedPowerPanel() {
    this->initializeModel();
}

OAINestedPowerPanel::~OAINestedPowerPanel() {}

void OAINestedPowerPanel::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_powerfeed_count_isSet = false;
    m_powerfeed_count_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAINestedPowerPanel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINestedPowerPanel::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_powerfeed_count_isValid = ::OpenAPI::fromJsonValue(m_powerfeed_count, json[QString("powerfeed_count")]);
    m_powerfeed_count_isSet = !json[QString("powerfeed_count")].isNull() && m_powerfeed_count_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAINestedPowerPanel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINestedPowerPanel::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_powerfeed_count_isSet) {
        obj.insert(QString("powerfeed_count"), ::OpenAPI::toJsonValue(m_powerfeed_count));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

qint32 OAINestedPowerPanel::getId() const {
    return m_id;
}
void OAINestedPowerPanel::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAINestedPowerPanel::is_id_Set() const{
    return m_id_isSet;
}

bool OAINestedPowerPanel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAINestedPowerPanel::getName() const {
    return m_name;
}
void OAINestedPowerPanel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAINestedPowerPanel::is_name_Set() const{
    return m_name_isSet;
}

bool OAINestedPowerPanel::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAINestedPowerPanel::getPowerfeedCount() const {
    return m_powerfeed_count;
}
void OAINestedPowerPanel::setPowerfeedCount(const qint32 &powerfeed_count) {
    m_powerfeed_count = powerfeed_count;
    m_powerfeed_count_isSet = true;
}

bool OAINestedPowerPanel::is_powerfeed_count_Set() const{
    return m_powerfeed_count_isSet;
}

bool OAINestedPowerPanel::is_powerfeed_count_Valid() const{
    return m_powerfeed_count_isValid;
}

QString OAINestedPowerPanel::getUrl() const {
    return m_url;
}
void OAINestedPowerPanel::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAINestedPowerPanel::is_url_Set() const{
    return m_url_isSet;
}

bool OAINestedPowerPanel::is_url_Valid() const{
    return m_url_isValid;
}

bool OAINestedPowerPanel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_powerfeed_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINestedPowerPanel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
