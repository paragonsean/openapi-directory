/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualChassis.h
 *
 * 
 */

#ifndef OAIVirtualChassis_H
#define OAIVirtualChassis_H

#include <QJsonObject>

#include "OAINestedDevice.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedDevice;

class OAIVirtualChassis : public OAIObject {
public:
    OAIVirtualChassis();
    OAIVirtualChassis(QString json);
    ~OAIVirtualChassis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAINestedDevice getMaster() const;
    void setMaster(const OAINestedDevice &master);
    bool is_master_Set() const;
    bool is_master_Valid() const;

    qint32 getMemberCount() const;
    void setMemberCount(const qint32 &member_count);
    bool is_member_count_Set() const;
    bool is_member_count_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAINestedDevice m_master;
    bool m_master_isSet;
    bool m_master_isValid;

    qint32 m_member_count;
    bool m_member_count_isSet;
    bool m_member_count_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualChassis)

#endif // OAIVirtualChassis_H
