/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIExtrasApi_H
#define OAI_OAIExtrasApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIConfigContext.h"
#include "OAIExportTemplate.h"
#include "OAIExtras_config_contexts_list_200_response.h"
#include "OAIExtras_export_templates_list_200_response.h"
#include "OAIExtras_graphs_list_200_response.h"
#include "OAIExtras_image_attachments_list_200_response.h"
#include "OAIExtras_object_changes_list_200_response.h"
#include "OAIExtras_tags_list_200_response.h"
#include "OAIGraph.h"
#include "OAIImageAttachment.h"
#include "OAIObjectChange.h"
#include "OAITag.h"
#include "OAIWritableConfigContext.h"
#include "OAIWritableExportTemplate.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIExtrasApi : public QObject {
    Q_OBJECT

public:
    OAIExtrasApi(const int timeOut = 0);
    ~OAIExtrasApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  oai_writable_config_context OAIWritableConfigContext [required]
    */
    virtual void extrasConfigContextsCreate(const OAIWritableConfigContext &oai_writable_config_context);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasConfigContextsDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  is_active QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  region_id QString [optional]
    * @param[in]  region QString [optional]
    * @param[in]  site_id QString [optional]
    * @param[in]  site QString [optional]
    * @param[in]  role_id QString [optional]
    * @param[in]  role QString [optional]
    * @param[in]  platform_id QString [optional]
    * @param[in]  platform QString [optional]
    * @param[in]  cluster_group_id QString [optional]
    * @param[in]  cluster_group QString [optional]
    * @param[in]  cluster_id QString [optional]
    * @param[in]  tenant_group_id QString [optional]
    * @param[in]  tenant_group QString [optional]
    * @param[in]  tenant_id QString [optional]
    * @param[in]  tenant QString [optional]
    * @param[in]  tag QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  region_id__n QString [optional]
    * @param[in]  region__n QString [optional]
    * @param[in]  site_id__n QString [optional]
    * @param[in]  site__n QString [optional]
    * @param[in]  role_id__n QString [optional]
    * @param[in]  role__n QString [optional]
    * @param[in]  platform_id__n QString [optional]
    * @param[in]  platform__n QString [optional]
    * @param[in]  cluster_group_id__n QString [optional]
    * @param[in]  cluster_group__n QString [optional]
    * @param[in]  cluster_id__n QString [optional]
    * @param[in]  tenant_group_id__n QString [optional]
    * @param[in]  tenant_group__n QString [optional]
    * @param[in]  tenant_id__n QString [optional]
    * @param[in]  tenant__n QString [optional]
    * @param[in]  tag__n QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasConfigContextsList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &is_active = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &region_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &region = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &role_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &role = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &platform_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &platform = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_group_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_group = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_group_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_group = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tag = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &region_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &region__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &role_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &role__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &platform_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &platform__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_group_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_group__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_group_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_group__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tag__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_config_context OAIWritableConfigContext [required]
    */
    virtual void extrasConfigContextsPartialUpdate(const qint32 &id, const OAIWritableConfigContext &oai_writable_config_context);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasConfigContextsRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_config_context OAIWritableConfigContext [required]
    */
    virtual void extrasConfigContextsUpdate(const qint32 &id, const OAIWritableConfigContext &oai_writable_config_context);


    virtual void extrasCustomFieldChoicesList();

    /**
    * @param[in]  id QString [required]
    */
    virtual void extrasCustomFieldChoicesRead(const QString &id);

    /**
    * @param[in]  oai_writable_export_template OAIWritableExportTemplate [required]
    */
    virtual void extrasExportTemplatesCreate(const OAIWritableExportTemplate &oai_writable_export_template);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasExportTemplatesDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  content_type QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  template_language QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  content_type__n QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  template_language__n QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasExportTemplatesList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &template_language = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &template_language__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_export_template OAIWritableExportTemplate [required]
    */
    virtual void extrasExportTemplatesPartialUpdate(const qint32 &id, const OAIWritableExportTemplate &oai_writable_export_template);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasExportTemplatesRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_export_template OAIWritableExportTemplate [required]
    */
    virtual void extrasExportTemplatesUpdate(const qint32 &id, const OAIWritableExportTemplate &oai_writable_export_template);

    /**
    * @param[in]  oai_graph OAIGraph [required]
    */
    virtual void extrasGraphsCreate(const OAIGraph &oai_graph);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasGraphsDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  type QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  template_language QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  type__n QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  template_language__n QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasGraphsList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &template_language = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &template_language__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_graph OAIGraph [required]
    */
    virtual void extrasGraphsPartialUpdate(const qint32 &id, const OAIGraph &oai_graph);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasGraphsRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_graph OAIGraph [required]
    */
    virtual void extrasGraphsUpdate(const qint32 &id, const OAIGraph &oai_graph);

    /**
    * @param[in]  oai_image_attachment OAIImageAttachment [required]
    */
    virtual void extrasImageAttachmentsCreate(const OAIImageAttachment &oai_image_attachment);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasImageAttachmentsDelete(const qint32 &id);

    /**
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasImageAttachmentsList(const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_image_attachment OAIImageAttachment [required]
    */
    virtual void extrasImageAttachmentsPartialUpdate(const qint32 &id, const OAIImageAttachment &oai_image_attachment);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasImageAttachmentsRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_image_attachment OAIImageAttachment [required]
    */
    virtual void extrasImageAttachmentsUpdate(const qint32 &id, const OAIImageAttachment &oai_image_attachment);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  user QString [optional]
    * @param[in]  user_name QString [optional]
    * @param[in]  request_id QString [optional]
    * @param[in]  action QString [optional]
    * @param[in]  changed_object_type QString [optional]
    * @param[in]  changed_object_id QString [optional]
    * @param[in]  object_repr QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  time QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  user__n QString [optional]
    * @param[in]  user_name__n QString [optional]
    * @param[in]  user_name__ic QString [optional]
    * @param[in]  user_name__nic QString [optional]
    * @param[in]  user_name__iew QString [optional]
    * @param[in]  user_name__niew QString [optional]
    * @param[in]  user_name__isw QString [optional]
    * @param[in]  user_name__nisw QString [optional]
    * @param[in]  user_name__ie QString [optional]
    * @param[in]  user_name__nie QString [optional]
    * @param[in]  action__n QString [optional]
    * @param[in]  changed_object_type__n QString [optional]
    * @param[in]  changed_object_id__n QString [optional]
    * @param[in]  changed_object_id__lte QString [optional]
    * @param[in]  changed_object_id__lt QString [optional]
    * @param[in]  changed_object_id__gte QString [optional]
    * @param[in]  changed_object_id__gt QString [optional]
    * @param[in]  object_repr__n QString [optional]
    * @param[in]  object_repr__ic QString [optional]
    * @param[in]  object_repr__nic QString [optional]
    * @param[in]  object_repr__iew QString [optional]
    * @param[in]  object_repr__niew QString [optional]
    * @param[in]  object_repr__isw QString [optional]
    * @param[in]  object_repr__nisw QString [optional]
    * @param[in]  object_repr__ie QString [optional]
    * @param[in]  object_repr__nie QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasObjectChangesList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &request_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasObjectChangesRead(const qint32 &id);


    virtual void extrasReportsList();

    /**
    * @param[in]  id QString [required]
    */
    virtual void extrasReportsRead(const QString &id);

    /**
    * @param[in]  id QString [required]
    */
    virtual void extrasReportsRun(const QString &id);


    virtual void extrasScriptsList();

    /**
    * @param[in]  id QString [required]
    */
    virtual void extrasScriptsRead(const QString &id);

    /**
    * @param[in]  oai_tag OAITag [required]
    */
    virtual void extrasTagsCreate(const OAITag &oai_tag);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasTagsDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  slug QString [optional]
    * @param[in]  color QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  slug__n QString [optional]
    * @param[in]  slug__ic QString [optional]
    * @param[in]  slug__nic QString [optional]
    * @param[in]  slug__iew QString [optional]
    * @param[in]  slug__niew QString [optional]
    * @param[in]  slug__isw QString [optional]
    * @param[in]  slug__nisw QString [optional]
    * @param[in]  slug__ie QString [optional]
    * @param[in]  slug__nie QString [optional]
    * @param[in]  color__n QString [optional]
    * @param[in]  color__ic QString [optional]
    * @param[in]  color__nic QString [optional]
    * @param[in]  color__iew QString [optional]
    * @param[in]  color__niew QString [optional]
    * @param[in]  color__isw QString [optional]
    * @param[in]  color__nisw QString [optional]
    * @param[in]  color__ie QString [optional]
    * @param[in]  color__nie QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasTagsList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_tag OAITag [required]
    */
    virtual void extrasTagsPartialUpdate(const qint32 &id, const OAITag &oai_tag);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasTagsRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_tag OAITag [required]
    */
    virtual void extrasTagsUpdate(const qint32 &id, const OAITag &oai_tag);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void extrasConfigContextsCreateCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsListCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsReadCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldChoicesListCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldChoicesReadCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesCreateCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesListCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesReadCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasGraphsCreateCallback(OAIHttpRequestWorker *worker);
    void extrasGraphsDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasGraphsListCallback(OAIHttpRequestWorker *worker);
    void extrasGraphsPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasGraphsReadCallback(OAIHttpRequestWorker *worker);
    void extrasGraphsUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsCreateCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsListCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsReadCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasObjectChangesListCallback(OAIHttpRequestWorker *worker);
    void extrasObjectChangesReadCallback(OAIHttpRequestWorker *worker);
    void extrasReportsListCallback(OAIHttpRequestWorker *worker);
    void extrasReportsReadCallback(OAIHttpRequestWorker *worker);
    void extrasReportsRunCallback(OAIHttpRequestWorker *worker);
    void extrasScriptsListCallback(OAIHttpRequestWorker *worker);
    void extrasScriptsReadCallback(OAIHttpRequestWorker *worker);
    void extrasTagsCreateCallback(OAIHttpRequestWorker *worker);
    void extrasTagsDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasTagsListCallback(OAIHttpRequestWorker *worker);
    void extrasTagsPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasTagsReadCallback(OAIHttpRequestWorker *worker);
    void extrasTagsUpdateCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void extrasConfigContextsCreateSignal(OAIConfigContext summary);
    void extrasConfigContextsDeleteSignal();
    void extrasConfigContextsListSignal(OAIExtras_config_contexts_list_200_response summary);
    void extrasConfigContextsPartialUpdateSignal(OAIConfigContext summary);
    void extrasConfigContextsReadSignal(OAIConfigContext summary);
    void extrasConfigContextsUpdateSignal(OAIConfigContext summary);
    void extrasCustomFieldChoicesListSignal();
    void extrasCustomFieldChoicesReadSignal();
    void extrasExportTemplatesCreateSignal(OAIExportTemplate summary);
    void extrasExportTemplatesDeleteSignal();
    void extrasExportTemplatesListSignal(OAIExtras_export_templates_list_200_response summary);
    void extrasExportTemplatesPartialUpdateSignal(OAIExportTemplate summary);
    void extrasExportTemplatesReadSignal(OAIExportTemplate summary);
    void extrasExportTemplatesUpdateSignal(OAIExportTemplate summary);
    void extrasGraphsCreateSignal(OAIGraph summary);
    void extrasGraphsDeleteSignal();
    void extrasGraphsListSignal(OAIExtras_graphs_list_200_response summary);
    void extrasGraphsPartialUpdateSignal(OAIGraph summary);
    void extrasGraphsReadSignal(OAIGraph summary);
    void extrasGraphsUpdateSignal(OAIGraph summary);
    void extrasImageAttachmentsCreateSignal(OAIImageAttachment summary);
    void extrasImageAttachmentsDeleteSignal();
    void extrasImageAttachmentsListSignal(OAIExtras_image_attachments_list_200_response summary);
    void extrasImageAttachmentsPartialUpdateSignal(OAIImageAttachment summary);
    void extrasImageAttachmentsReadSignal(OAIImageAttachment summary);
    void extrasImageAttachmentsUpdateSignal(OAIImageAttachment summary);
    void extrasObjectChangesListSignal(OAIExtras_object_changes_list_200_response summary);
    void extrasObjectChangesReadSignal(OAIObjectChange summary);
    void extrasReportsListSignal();
    void extrasReportsReadSignal();
    void extrasReportsRunSignal();
    void extrasScriptsListSignal();
    void extrasScriptsReadSignal();
    void extrasTagsCreateSignal(OAITag summary);
    void extrasTagsDeleteSignal();
    void extrasTagsListSignal(OAIExtras_tags_list_200_response summary);
    void extrasTagsPartialUpdateSignal(OAITag summary);
    void extrasTagsReadSignal(OAITag summary);
    void extrasTagsUpdateSignal(OAITag summary);


    void extrasConfigContextsCreateSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasConfigContextsDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasConfigContextsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_config_contexts_list_200_response summary);
    void extrasConfigContextsPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasConfigContextsReadSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasConfigContextsUpdateSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasCustomFieldChoicesListSignalFull(OAIHttpRequestWorker *worker);
    void extrasCustomFieldChoicesReadSignalFull(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesCreateSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasExportTemplatesDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_export_templates_list_200_response summary);
    void extrasExportTemplatesPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasExportTemplatesReadSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasExportTemplatesUpdateSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasGraphsCreateSignalFull(OAIHttpRequestWorker *worker, OAIGraph summary);
    void extrasGraphsDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasGraphsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_graphs_list_200_response summary);
    void extrasGraphsPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIGraph summary);
    void extrasGraphsReadSignalFull(OAIHttpRequestWorker *worker, OAIGraph summary);
    void extrasGraphsUpdateSignalFull(OAIHttpRequestWorker *worker, OAIGraph summary);
    void extrasImageAttachmentsCreateSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasImageAttachmentsDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_image_attachments_list_200_response summary);
    void extrasImageAttachmentsPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasImageAttachmentsReadSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasImageAttachmentsUpdateSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasObjectChangesListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_object_changes_list_200_response summary);
    void extrasObjectChangesReadSignalFull(OAIHttpRequestWorker *worker, OAIObjectChange summary);
    void extrasReportsListSignalFull(OAIHttpRequestWorker *worker);
    void extrasReportsReadSignalFull(OAIHttpRequestWorker *worker);
    void extrasReportsRunSignalFull(OAIHttpRequestWorker *worker);
    void extrasScriptsListSignalFull(OAIHttpRequestWorker *worker);
    void extrasScriptsReadSignalFull(OAIHttpRequestWorker *worker);
    void extrasTagsCreateSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasTagsDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasTagsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_tags_list_200_response summary);
    void extrasTagsPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasTagsReadSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasTagsUpdateSignalFull(OAIHttpRequestWorker *worker, OAITag summary);

    Q_DECL_DEPRECATED_X("Use extrasConfigContextsCreateSignalError() instead")
    void extrasConfigContextsCreateSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsCreateSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsDeleteSignalError() instead")
    void extrasConfigContextsDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsListSignalError() instead")
    void extrasConfigContextsListSignalE(OAIExtras_config_contexts_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsListSignalError(OAIExtras_config_contexts_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsPartialUpdateSignalError() instead")
    void extrasConfigContextsPartialUpdateSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsPartialUpdateSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsReadSignalError() instead")
    void extrasConfigContextsReadSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsReadSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsUpdateSignalError() instead")
    void extrasConfigContextsUpdateSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsUpdateSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldChoicesListSignalError() instead")
    void extrasCustomFieldChoicesListSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldChoicesListSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldChoicesReadSignalError() instead")
    void extrasCustomFieldChoicesReadSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldChoicesReadSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesCreateSignalError() instead")
    void extrasExportTemplatesCreateSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesCreateSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesDeleteSignalError() instead")
    void extrasExportTemplatesDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesListSignalError() instead")
    void extrasExportTemplatesListSignalE(OAIExtras_export_templates_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesListSignalError(OAIExtras_export_templates_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesPartialUpdateSignalError() instead")
    void extrasExportTemplatesPartialUpdateSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesPartialUpdateSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesReadSignalError() instead")
    void extrasExportTemplatesReadSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesReadSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesUpdateSignalError() instead")
    void extrasExportTemplatesUpdateSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesUpdateSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsCreateSignalError() instead")
    void extrasGraphsCreateSignalE(OAIGraph summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsCreateSignalError(OAIGraph summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsDeleteSignalError() instead")
    void extrasGraphsDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsListSignalError() instead")
    void extrasGraphsListSignalE(OAIExtras_graphs_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsListSignalError(OAIExtras_graphs_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsPartialUpdateSignalError() instead")
    void extrasGraphsPartialUpdateSignalE(OAIGraph summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsPartialUpdateSignalError(OAIGraph summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsReadSignalError() instead")
    void extrasGraphsReadSignalE(OAIGraph summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsReadSignalError(OAIGraph summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsUpdateSignalError() instead")
    void extrasGraphsUpdateSignalE(OAIGraph summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsUpdateSignalError(OAIGraph summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsCreateSignalError() instead")
    void extrasImageAttachmentsCreateSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsCreateSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsDeleteSignalError() instead")
    void extrasImageAttachmentsDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsListSignalError() instead")
    void extrasImageAttachmentsListSignalE(OAIExtras_image_attachments_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsListSignalError(OAIExtras_image_attachments_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsPartialUpdateSignalError() instead")
    void extrasImageAttachmentsPartialUpdateSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsPartialUpdateSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsReadSignalError() instead")
    void extrasImageAttachmentsReadSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsReadSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsUpdateSignalError() instead")
    void extrasImageAttachmentsUpdateSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsUpdateSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasObjectChangesListSignalError() instead")
    void extrasObjectChangesListSignalE(OAIExtras_object_changes_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasObjectChangesListSignalError(OAIExtras_object_changes_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasObjectChangesReadSignalError() instead")
    void extrasObjectChangesReadSignalE(OAIObjectChange summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasObjectChangesReadSignalError(OAIObjectChange summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsListSignalError() instead")
    void extrasReportsListSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsListSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsReadSignalError() instead")
    void extrasReportsReadSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsReadSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsRunSignalError() instead")
    void extrasReportsRunSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsRunSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasScriptsListSignalError() instead")
    void extrasScriptsListSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasScriptsListSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasScriptsReadSignalError() instead")
    void extrasScriptsReadSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasScriptsReadSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsCreateSignalError() instead")
    void extrasTagsCreateSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsCreateSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsDeleteSignalError() instead")
    void extrasTagsDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsListSignalError() instead")
    void extrasTagsListSignalE(OAIExtras_tags_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsListSignalError(OAIExtras_tags_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsPartialUpdateSignalError() instead")
    void extrasTagsPartialUpdateSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsPartialUpdateSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsReadSignalError() instead")
    void extrasTagsReadSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsReadSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsUpdateSignalError() instead")
    void extrasTagsUpdateSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsUpdateSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use extrasConfigContextsCreateSignalErrorFull() instead")
    void extrasConfigContextsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsDeleteSignalErrorFull() instead")
    void extrasConfigContextsDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsListSignalErrorFull() instead")
    void extrasConfigContextsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsPartialUpdateSignalErrorFull() instead")
    void extrasConfigContextsPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsReadSignalErrorFull() instead")
    void extrasConfigContextsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsUpdateSignalErrorFull() instead")
    void extrasConfigContextsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldChoicesListSignalErrorFull() instead")
    void extrasCustomFieldChoicesListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldChoicesListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldChoicesReadSignalErrorFull() instead")
    void extrasCustomFieldChoicesReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldChoicesReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesCreateSignalErrorFull() instead")
    void extrasExportTemplatesCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesDeleteSignalErrorFull() instead")
    void extrasExportTemplatesDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesListSignalErrorFull() instead")
    void extrasExportTemplatesListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesPartialUpdateSignalErrorFull() instead")
    void extrasExportTemplatesPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesReadSignalErrorFull() instead")
    void extrasExportTemplatesReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesUpdateSignalErrorFull() instead")
    void extrasExportTemplatesUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsCreateSignalErrorFull() instead")
    void extrasGraphsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsDeleteSignalErrorFull() instead")
    void extrasGraphsDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsListSignalErrorFull() instead")
    void extrasGraphsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsPartialUpdateSignalErrorFull() instead")
    void extrasGraphsPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsReadSignalErrorFull() instead")
    void extrasGraphsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasGraphsUpdateSignalErrorFull() instead")
    void extrasGraphsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasGraphsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsCreateSignalErrorFull() instead")
    void extrasImageAttachmentsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsDeleteSignalErrorFull() instead")
    void extrasImageAttachmentsDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsListSignalErrorFull() instead")
    void extrasImageAttachmentsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsPartialUpdateSignalErrorFull() instead")
    void extrasImageAttachmentsPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsReadSignalErrorFull() instead")
    void extrasImageAttachmentsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsUpdateSignalErrorFull() instead")
    void extrasImageAttachmentsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasObjectChangesListSignalErrorFull() instead")
    void extrasObjectChangesListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasObjectChangesListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasObjectChangesReadSignalErrorFull() instead")
    void extrasObjectChangesReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasObjectChangesReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsListSignalErrorFull() instead")
    void extrasReportsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsReadSignalErrorFull() instead")
    void extrasReportsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsRunSignalErrorFull() instead")
    void extrasReportsRunSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsRunSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasScriptsListSignalErrorFull() instead")
    void extrasScriptsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasScriptsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasScriptsReadSignalErrorFull() instead")
    void extrasScriptsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasScriptsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsCreateSignalErrorFull() instead")
    void extrasTagsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsDeleteSignalErrorFull() instead")
    void extrasTagsDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsListSignalErrorFull() instead")
    void extrasTagsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsPartialUpdateSignalErrorFull() instead")
    void extrasTagsPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsReadSignalErrorFull() instead")
    void extrasTagsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsUpdateSignalErrorFull() instead")
    void extrasTagsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
