/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritableExportTemplate.h
 *
 * 
 */

#ifndef OAIWritableExportTemplate_H
#define OAIWritableExportTemplate_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWritableExportTemplate : public OAIObject {
public:
    OAIWritableExportTemplate();
    OAIWritableExportTemplate(QString json);
    ~OAIWritableExportTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFileExtension() const;
    void setFileExtension(const QString &file_extension);
    bool is_file_extension_Set() const;
    bool is_file_extension_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMimeType() const;
    void setMimeType(const QString &mime_type);
    bool is_mime_type_Set() const;
    bool is_mime_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTemplateCode() const;
    void setTemplateCode(const QString &template_code);
    bool is_template_code_Set() const;
    bool is_template_code_Valid() const;

    QString getTemplateLanguage() const;
    void setTemplateLanguage(const QString &template_language);
    bool is_template_language_Set() const;
    bool is_template_language_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_file_extension;
    bool m_file_extension_isSet;
    bool m_file_extension_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_mime_type;
    bool m_mime_type_isSet;
    bool m_mime_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_template_code;
    bool m_template_code_isSet;
    bool m_template_code_isValid;

    QString m_template_language;
    bool m_template_language_isSet;
    bool m_template_language_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritableExportTemplate)

#endif // OAIWritableExportTemplate_H
