/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritableRearPortTemplate.h
 *
 * 
 */

#ifndef OAIWritableRearPortTemplate_H
#define OAIWritableRearPortTemplate_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWritableRearPortTemplate : public OAIObject {
public:
    OAIWritableRearPortTemplate();
    OAIWritableRearPortTemplate(QString json);
    ~OAIWritableRearPortTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDeviceType() const;
    void setDeviceType(const qint32 &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPositions() const;
    void setPositions(const qint32 &positions);
    bool is_positions_Set() const;
    bool is_positions_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_positions;
    bool m_positions_isSet;
    bool m_positions_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritableRearPortTemplate)

#endif // OAIWritableRearPortTemplate_H
