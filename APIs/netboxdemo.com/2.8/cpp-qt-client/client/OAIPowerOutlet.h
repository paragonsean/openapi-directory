/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPowerOutlet.h
 *
 * 
 */

#ifndef OAIPowerOutlet_H
#define OAIPowerOutlet_H

#include <QJsonObject>

#include "OAIConnection_status.h"
#include "OAIFeed_leg.h"
#include "OAINestedCable.h"
#include "OAINestedDevice.h"
#include "OAINestedPowerPort.h"
#include "OAIType_4.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedCable;
class OAIConnection_status;
class OAINestedDevice;
class OAIFeed_leg;
class OAINestedPowerPort;
class OAIType_4;

class OAIPowerOutlet : public OAIObject {
public:
    OAIPowerOutlet();
    OAIPowerOutlet(QString json);
    ~OAIPowerOutlet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINestedCable getCable() const;
    void setCable(const OAINestedCable &cable);
    bool is_cable_Set() const;
    bool is_cable_Valid() const;

    QMap<QString, QString> getConnectedEndpoint() const;
    void setConnectedEndpoint(const QMap<QString, QString> &connected_endpoint);
    bool is_connected_endpoint_Set() const;
    bool is_connected_endpoint_Valid() const;

    QString getConnectedEndpointType() const;
    void setConnectedEndpointType(const QString &connected_endpoint_type);
    bool is_connected_endpoint_type_Set() const;
    bool is_connected_endpoint_type_Valid() const;

    OAIConnection_status getConnectionStatus() const;
    void setConnectionStatus(const OAIConnection_status &connection_status);
    bool is_connection_status_Set() const;
    bool is_connection_status_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAINestedDevice getDevice() const;
    void setDevice(const OAINestedDevice &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    OAIFeed_leg getFeedLeg() const;
    void setFeedLeg(const OAIFeed_leg &feed_leg);
    bool is_feed_leg_Set() const;
    bool is_feed_leg_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINestedPowerPort getPowerPort() const;
    void setPowerPort(const OAINestedPowerPort &power_port);
    bool is_power_port_Set() const;
    bool is_power_port_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIType_4 getType() const;
    void setType(const OAIType_4 &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINestedCable m_cable;
    bool m_cable_isSet;
    bool m_cable_isValid;

    QMap<QString, QString> m_connected_endpoint;
    bool m_connected_endpoint_isSet;
    bool m_connected_endpoint_isValid;

    QString m_connected_endpoint_type;
    bool m_connected_endpoint_type_isSet;
    bool m_connected_endpoint_type_isValid;

    OAIConnection_status m_connection_status;
    bool m_connection_status_isSet;
    bool m_connection_status_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAINestedDevice m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    OAIFeed_leg m_feed_leg;
    bool m_feed_leg_isSet;
    bool m_feed_leg_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINestedPowerPort m_power_port;
    bool m_power_port_isSet;
    bool m_power_port_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIType_4 m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPowerOutlet)

#endif // OAIPowerOutlet_H
