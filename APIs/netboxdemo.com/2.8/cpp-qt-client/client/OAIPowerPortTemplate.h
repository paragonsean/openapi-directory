/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPowerPortTemplate.h
 *
 * 
 */

#ifndef OAIPowerPortTemplate_H
#define OAIPowerPortTemplate_H

#include <QJsonObject>

#include "OAINestedDeviceType.h"
#include "OAIType_5.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedDeviceType;
class OAIType_5;

class OAIPowerPortTemplate : public OAIObject {
public:
    OAIPowerPortTemplate();
    OAIPowerPortTemplate(QString json);
    ~OAIPowerPortTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAllocatedDraw() const;
    void setAllocatedDraw(const qint32 &allocated_draw);
    bool is_allocated_draw_Set() const;
    bool is_allocated_draw_Valid() const;

    OAINestedDeviceType getDeviceType() const;
    void setDeviceType(const OAINestedDeviceType &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getMaximumDraw() const;
    void setMaximumDraw(const qint32 &maximum_draw);
    bool is_maximum_draw_Set() const;
    bool is_maximum_draw_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIType_5 getType() const;
    void setType(const OAIType_5 &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_allocated_draw;
    bool m_allocated_draw_isSet;
    bool m_allocated_draw_isValid;

    OAINestedDeviceType m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_maximum_draw;
    bool m_maximum_draw_isSet;
    bool m_maximum_draw_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIType_5 m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPowerPortTemplate)

#endif // OAIPowerPortTemplate_H
