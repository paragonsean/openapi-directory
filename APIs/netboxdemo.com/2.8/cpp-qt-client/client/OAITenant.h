/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITenant.h
 *
 * 
 */

#ifndef OAITenant_H
#define OAITenant_H

#include <QJsonObject>

#include "OAINestedTenantGroup.h"
#include "OAIObject.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedTenantGroup;

class OAITenant : public OAIObject {
public:
    OAITenant();
    OAITenant(QString json);
    ~OAITenant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCircuitCount() const;
    void setCircuitCount(const qint32 &circuit_count);
    bool is_circuit_count_Set() const;
    bool is_circuit_count_Valid() const;

    qint32 getClusterCount() const;
    void setClusterCount(const qint32 &cluster_count);
    bool is_cluster_count_Set() const;
    bool is_cluster_count_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDate getCreated() const;
    void setCreated(const QDate &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDeviceCount() const;
    void setDeviceCount(const qint32 &device_count);
    bool is_device_count_Set() const;
    bool is_device_count_Valid() const;

    OAINestedTenantGroup getGroup() const;
    void setGroup(const OAINestedTenantGroup &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getIpaddressCount() const;
    void setIpaddressCount(const qint32 &ipaddress_count);
    bool is_ipaddress_count_Set() const;
    bool is_ipaddress_count_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPrefixCount() const;
    void setPrefixCount(const qint32 &prefix_count);
    bool is_prefix_count_Set() const;
    bool is_prefix_count_Valid() const;

    qint32 getRackCount() const;
    void setRackCount(const qint32 &rack_count);
    bool is_rack_count_Set() const;
    bool is_rack_count_Valid() const;

    qint32 getSiteCount() const;
    void setSiteCount(const qint32 &site_count);
    bool is_site_count_Set() const;
    bool is_site_count_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getVirtualmachineCount() const;
    void setVirtualmachineCount(const qint32 &virtualmachine_count);
    bool is_virtualmachine_count_Set() const;
    bool is_virtualmachine_count_Valid() const;

    qint32 getVlanCount() const;
    void setVlanCount(const qint32 &vlan_count);
    bool is_vlan_count_Set() const;
    bool is_vlan_count_Valid() const;

    qint32 getVrfCount() const;
    void setVrfCount(const qint32 &vrf_count);
    bool is_vrf_count_Set() const;
    bool is_vrf_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_circuit_count;
    bool m_circuit_count_isSet;
    bool m_circuit_count_isValid;

    qint32 m_cluster_count;
    bool m_cluster_count_isSet;
    bool m_cluster_count_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDate m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_device_count;
    bool m_device_count_isSet;
    bool m_device_count_isValid;

    OAINestedTenantGroup m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_ipaddress_count;
    bool m_ipaddress_count_isSet;
    bool m_ipaddress_count_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_prefix_count;
    bool m_prefix_count_isSet;
    bool m_prefix_count_isValid;

    qint32 m_rack_count;
    bool m_rack_count_isSet;
    bool m_rack_count_isValid;

    qint32 m_site_count;
    bool m_site_count_isSet;
    bool m_site_count_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_virtualmachine_count;
    bool m_virtualmachine_count_isSet;
    bool m_virtualmachine_count_isValid;

    qint32 m_vlan_count;
    bool m_vlan_count_isSet;
    bool m_vlan_count_isValid;

    qint32 m_vrf_count;
    bool m_vrf_count_isSet;
    bool m_vrf_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITenant)

#endif // OAITenant_H
