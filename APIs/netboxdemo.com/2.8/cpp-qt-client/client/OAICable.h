/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICable.h
 *
 * 
 */

#ifndef OAICable_H
#define OAICable_H

#include <QJsonObject>

#include "OAILength_unit.h"
#include "OAIStatus.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILength_unit;
class OAIStatus;

class OAICable : public OAIObject {
public:
    OAICable();
    OAICable(QString json);
    ~OAICable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    qint32 getLength() const;
    void setLength(const qint32 &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    OAILength_unit getLengthUnit() const;
    void setLengthUnit(const OAILength_unit &length_unit);
    bool is_length_unit_Set() const;
    bool is_length_unit_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap<QString, QString> getTerminationA() const;
    void setTerminationA(const QMap<QString, QString> &termination_a);
    bool is_termination_a_Set() const;
    bool is_termination_a_Valid() const;

    qint32 getTerminationAId() const;
    void setTerminationAId(const qint32 &termination_a_id);
    bool is_termination_a_id_Set() const;
    bool is_termination_a_id_Valid() const;

    QString getTerminationAType() const;
    void setTerminationAType(const QString &termination_a_type);
    bool is_termination_a_type_Set() const;
    bool is_termination_a_type_Valid() const;

    QMap<QString, QString> getTerminationB() const;
    void setTerminationB(const QMap<QString, QString> &termination_b);
    bool is_termination_b_Set() const;
    bool is_termination_b_Valid() const;

    qint32 getTerminationBId() const;
    void setTerminationBId(const qint32 &termination_b_id);
    bool is_termination_b_id_Set() const;
    bool is_termination_b_id_Valid() const;

    QString getTerminationBType() const;
    void setTerminationBType(const QString &termination_b_type);
    bool is_termination_b_type_Set() const;
    bool is_termination_b_type_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    qint32 m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    OAILength_unit m_length_unit;
    bool m_length_unit_isSet;
    bool m_length_unit_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap<QString, QString> m_termination_a;
    bool m_termination_a_isSet;
    bool m_termination_a_isValid;

    qint32 m_termination_a_id;
    bool m_termination_a_id_isSet;
    bool m_termination_a_id_isValid;

    QString m_termination_a_type;
    bool m_termination_a_type_isSet;
    bool m_termination_a_type_isValid;

    QMap<QString, QString> m_termination_b;
    bool m_termination_b_isSet;
    bool m_termination_b_isValid;

    qint32 m_termination_b_id;
    bool m_termination_b_id_isSet;
    bool m_termination_b_id_isValid;

    QString m_termination_b_type;
    bool m_termination_b_type_isSet;
    bool m_termination_b_type_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICable)

#endif // OAICable_H
