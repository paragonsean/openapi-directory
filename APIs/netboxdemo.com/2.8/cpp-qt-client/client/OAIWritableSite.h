/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritableSite.h
 *
 * 
 */

#ifndef OAIWritableSite_H
#define OAIWritableSite_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWritableSite : public OAIObject {
public:
    OAIWritableSite();
    OAIWritableSite(QString json);
    ~OAIWritableSite() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAsn() const;
    void setAsn(const qint32 &asn);
    bool is_asn_Set() const;
    bool is_asn_Valid() const;

    qint32 getCircuitCount() const;
    void setCircuitCount(const qint32 &circuit_count);
    bool is_circuit_count_Set() const;
    bool is_circuit_count_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getContactEmail() const;
    void setContactEmail(const QString &contact_email);
    bool is_contact_email_Set() const;
    bool is_contact_email_Valid() const;

    QString getContactName() const;
    void setContactName(const QString &contact_name);
    bool is_contact_name_Set() const;
    bool is_contact_name_Valid() const;

    QString getContactPhone() const;
    void setContactPhone(const QString &contact_phone);
    bool is_contact_phone_Set() const;
    bool is_contact_phone_Valid() const;

    QDate getCreated() const;
    void setCreated(const QDate &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDeviceCount() const;
    void setDeviceCount(const qint32 &device_count);
    bool is_device_count_Set() const;
    bool is_device_count_Valid() const;

    QString getFacility() const;
    void setFacility(const QString &facility);
    bool is_facility_Set() const;
    bool is_facility_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getLatitude() const;
    void setLatitude(const QString &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    QString getLongitude() const;
    void setLongitude(const QString &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPhysicalAddress() const;
    void setPhysicalAddress(const QString &physical_address);
    bool is_physical_address_Set() const;
    bool is_physical_address_Valid() const;

    qint32 getPrefixCount() const;
    void setPrefixCount(const qint32 &prefix_count);
    bool is_prefix_count_Set() const;
    bool is_prefix_count_Valid() const;

    qint32 getRackCount() const;
    void setRackCount(const qint32 &rack_count);
    bool is_rack_count_Set() const;
    bool is_rack_count_Valid() const;

    qint32 getRegion() const;
    void setRegion(const qint32 &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getShippingAddress() const;
    void setShippingAddress(const QString &shipping_address);
    bool is_shipping_address_Set() const;
    bool is_shipping_address_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getTenant() const;
    void setTenant(const qint32 &tenant);
    bool is_tenant_Set() const;
    bool is_tenant_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    qint32 getVirtualmachineCount() const;
    void setVirtualmachineCount(const qint32 &virtualmachine_count);
    bool is_virtualmachine_count_Set() const;
    bool is_virtualmachine_count_Valid() const;

    qint32 getVlanCount() const;
    void setVlanCount(const qint32 &vlan_count);
    bool is_vlan_count_Set() const;
    bool is_vlan_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_asn;
    bool m_asn_isSet;
    bool m_asn_isValid;

    qint32 m_circuit_count;
    bool m_circuit_count_isSet;
    bool m_circuit_count_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_contact_email;
    bool m_contact_email_isSet;
    bool m_contact_email_isValid;

    QString m_contact_name;
    bool m_contact_name_isSet;
    bool m_contact_name_isValid;

    QString m_contact_phone;
    bool m_contact_phone_isSet;
    bool m_contact_phone_isValid;

    QDate m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_device_count;
    bool m_device_count_isSet;
    bool m_device_count_isValid;

    QString m_facility;
    bool m_facility_isSet;
    bool m_facility_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    QString m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_physical_address;
    bool m_physical_address_isSet;
    bool m_physical_address_isValid;

    qint32 m_prefix_count;
    bool m_prefix_count_isSet;
    bool m_prefix_count_isValid;

    qint32 m_rack_count;
    bool m_rack_count_isSet;
    bool m_rack_count_isValid;

    qint32 m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_shipping_address;
    bool m_shipping_address_isSet;
    bool m_shipping_address_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_tenant;
    bool m_tenant_isSet;
    bool m_tenant_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    qint32 m_virtualmachine_count;
    bool m_virtualmachine_count_isSet;
    bool m_virtualmachine_count_isValid;

    qint32 m_vlan_count;
    bool m_vlan_count_isSet;
    bool m_vlan_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritableSite)

#endif // OAIWritableSite_H
