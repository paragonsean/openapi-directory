/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritablePowerFeed.h
 *
 * 
 */

#ifndef OAIWritablePowerFeed_H
#define OAIWritablePowerFeed_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWritablePowerFeed : public OAIObject {
public:
    OAIWritablePowerFeed();
    OAIWritablePowerFeed(QString json);
    ~OAIWritablePowerFeed() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAmperage() const;
    void setAmperage(const qint32 &amperage);
    bool is_amperage_Set() const;
    bool is_amperage_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDate getCreated() const;
    void setCreated(const QDate &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint32 getMaxUtilization() const;
    void setMaxUtilization(const qint32 &max_utilization);
    bool is_max_utilization_Set() const;
    bool is_max_utilization_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPhase() const;
    void setPhase(const QString &phase);
    bool is_phase_Set() const;
    bool is_phase_Valid() const;

    qint32 getPowerPanel() const;
    void setPowerPanel(const qint32 &power_panel);
    bool is_power_panel_Set() const;
    bool is_power_panel_Valid() const;

    qint32 getRack() const;
    void setRack(const qint32 &rack);
    bool is_rack_Set() const;
    bool is_rack_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSupply() const;
    void setSupply(const QString &supply);
    bool is_supply_Set() const;
    bool is_supply_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getVoltage() const;
    void setVoltage(const qint32 &voltage);
    bool is_voltage_Set() const;
    bool is_voltage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_amperage;
    bool m_amperage_isSet;
    bool m_amperage_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDate m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint32 m_max_utilization;
    bool m_max_utilization_isSet;
    bool m_max_utilization_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_phase;
    bool m_phase_isSet;
    bool m_phase_isValid;

    qint32 m_power_panel;
    bool m_power_panel_isSet;
    bool m_power_panel_isValid;

    qint32 m_rack;
    bool m_rack_isSet;
    bool m_rack_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_supply;
    bool m_supply_isSet;
    bool m_supply_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_voltage;
    bool m_voltage_isSet;
    bool m_voltage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritablePowerFeed)

#endif // OAIWritablePowerFeed_H
