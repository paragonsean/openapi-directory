/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritableVirtualMachineInterface.h
 *
 * 
 */

#ifndef OAIWritableVirtualMachineInterface_H
#define OAIWritableVirtualMachineInterface_H

#include <QJsonObject>

#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWritableVirtualMachineInterface : public OAIObject {
public:
    OAIWritableVirtualMachineInterface();
    OAIWritableVirtualMachineInterface(QString json);
    ~OAIWritableVirtualMachineInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMacAddress() const;
    void setMacAddress(const QString &mac_address);
    bool is_mac_address_Set() const;
    bool is_mac_address_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    qint32 getMtu() const;
    void setMtu(const qint32 &mtu);
    bool is_mtu_Set() const;
    bool is_mtu_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QSet<qint32> getTaggedVlans() const;
    void setTaggedVlans(const QSet<qint32> &tagged_vlans);
    bool is_tagged_vlans_Set() const;
    bool is_tagged_vlans_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getUntaggedVlan() const;
    void setUntaggedVlan(const qint32 &untagged_vlan);
    bool is_untagged_vlan_Set() const;
    bool is_untagged_vlan_Valid() const;

    qint32 getVirtualMachine() const;
    void setVirtualMachine(const qint32 &virtual_machine);
    bool is_virtual_machine_Set() const;
    bool is_virtual_machine_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_mac_address;
    bool m_mac_address_isSet;
    bool m_mac_address_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    qint32 m_mtu;
    bool m_mtu_isSet;
    bool m_mtu_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QSet<qint32> m_tagged_vlans;
    bool m_tagged_vlans_isSet;
    bool m_tagged_vlans_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_untagged_vlan;
    bool m_untagged_vlan_isSet;
    bool m_untagged_vlan_isValid;

    qint32 m_virtual_machine;
    bool m_virtual_machine_isSet;
    bool m_virtual_machine_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritableVirtualMachineInterface)

#endif // OAIWritableVirtualMachineInterface_H
