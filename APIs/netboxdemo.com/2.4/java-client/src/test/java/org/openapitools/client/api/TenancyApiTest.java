/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.4
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TenancyTenantGroupsList200Response;
import org.openapitools.client.model.TenancyTenantsList200Response;
import org.openapitools.client.model.Tenant;
import org.openapitools.client.model.TenantGroup;
import org.openapitools.client.model.WritableTenant;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TenancyApi
 */
@Disabled
public class TenancyApiTest {

    private final TenancyApi api = new TenancyApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyChoicesListTest() throws ApiException {
        api.tenancyChoicesList();
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyChoicesReadTest() throws ApiException {
        String id = null;
        api.tenancyChoicesRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsCreateTest() throws ApiException {
        TenantGroup tenantGroup = null;
        TenantGroup response = api.tenancyTenantGroupsCreate(tenantGroup);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsDeleteTest() throws ApiException {
        Integer id = null;
        api.tenancyTenantGroupsDelete(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsListTest() throws ApiException {
        String name = null;
        String slug = null;
        Integer limit = null;
        Integer offset = null;
        TenancyTenantGroupsList200Response response = api.tenancyTenantGroupsList(name, slug, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsPartialUpdateTest() throws ApiException {
        Integer id = null;
        TenantGroup tenantGroup = null;
        TenantGroup response = api.tenancyTenantGroupsPartialUpdate(id, tenantGroup);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsReadTest() throws ApiException {
        Integer id = null;
        TenantGroup response = api.tenancyTenantGroupsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantGroupsUpdateTest() throws ApiException {
        Integer id = null;
        TenantGroup tenantGroup = null;
        TenantGroup response = api.tenancyTenantGroupsUpdate(id, tenantGroup);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsCreateTest() throws ApiException {
        WritableTenant writableTenant = null;
        Tenant response = api.tenancyTenantsCreate(writableTenant);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsDeleteTest() throws ApiException {
        Integer id = null;
        api.tenancyTenantsDelete(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsListTest() throws ApiException {
        String name = null;
        String idIn = null;
        String q = null;
        String groupId = null;
        String group = null;
        String tag = null;
        Integer limit = null;
        Integer offset = null;
        TenancyTenantsList200Response response = api.tenancyTenantsList(name, idIn, q, groupId, group, tag, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsPartialUpdateTest() throws ApiException {
        Integer id = null;
        WritableTenant writableTenant = null;
        Tenant response = api.tenancyTenantsPartialUpdate(id, writableTenant);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsReadTest() throws ApiException {
        Integer id = null;
        Tenant response = api.tenancyTenantsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tenancyTenantsUpdateTest() throws ApiException {
        Integer id = null;
        WritableTenant writableTenant = null;
        Tenant response = api.tenancyTenantsUpdate(id, writableTenant);
        // TODO: test validations
    }

}
