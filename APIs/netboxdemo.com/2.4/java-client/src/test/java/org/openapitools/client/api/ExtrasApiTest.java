/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.4
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConfigContext;
import org.openapitools.client.model.ExportTemplate;
import org.openapitools.client.model.ExtrasConfigContextsList200Response;
import org.openapitools.client.model.ExtrasExportTemplatesList200Response;
import org.openapitools.client.model.ExtrasGraphsList200Response;
import org.openapitools.client.model.ExtrasImageAttachmentsList200Response;
import org.openapitools.client.model.ExtrasObjectChangesList200Response;
import org.openapitools.client.model.ExtrasRecentActivityList200Response;
import org.openapitools.client.model.ExtrasTagsList200Response;
import org.openapitools.client.model.ExtrasTopologyMapsList200Response;
import org.openapitools.client.model.Graph;
import org.openapitools.client.model.ImageAttachment;
import org.openapitools.client.model.ObjectChange;
import org.openapitools.client.model.Tag;
import org.openapitools.client.model.TopologyMap;
import org.openapitools.client.model.UserAction;
import org.openapitools.client.model.WritableConfigContext;
import org.openapitools.client.model.WritableGraph;
import org.openapitools.client.model.WritableTopologyMap;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExtrasApi
 */
@Disabled
public class ExtrasApiTest {

    private final ExtrasApi api = new ExtrasApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasChoicesListTest() throws ApiException {
        api.extrasChoicesList();
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasChoicesReadTest() throws ApiException {
        String id = null;
        api.extrasChoicesRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasConfigContextsCreateTest() throws ApiException {
        WritableConfigContext writableConfigContext = null;
        ConfigContext response = api.extrasConfigContextsCreate(writableConfigContext);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasConfigContextsDeleteTest() throws ApiException {
        Integer id = null;
        api.extrasConfigContextsDelete(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasConfigContextsListTest() throws ApiException {
        String name = null;
        String isActive = null;
        String q = null;
        String regionId = null;
        String region = null;
        String siteId = null;
        String site = null;
        String roleId = null;
        String role = null;
        String platformId = null;
        String platform = null;
        String tenantGroupId = null;
        String tenantGroup = null;
        String tenantId = null;
        String tenant = null;
        Integer limit = null;
        Integer offset = null;
        ExtrasConfigContextsList200Response response = api.extrasConfigContextsList(name, isActive, q, regionId, region, siteId, site, roleId, role, platformId, platform, tenantGroupId, tenantGroup, tenantId, tenant, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasConfigContextsPartialUpdateTest() throws ApiException {
        Integer id = null;
        WritableConfigContext writableConfigContext = null;
        ConfigContext response = api.extrasConfigContextsPartialUpdate(id, writableConfigContext);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasConfigContextsReadTest() throws ApiException {
        Integer id = null;
        ConfigContext response = api.extrasConfigContextsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasConfigContextsUpdateTest() throws ApiException {
        Integer id = null;
        WritableConfigContext writableConfigContext = null;
        ConfigContext response = api.extrasConfigContextsUpdate(id, writableConfigContext);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasExportTemplatesCreateTest() throws ApiException {
        ExportTemplate exportTemplate = null;
        ExportTemplate response = api.extrasExportTemplatesCreate(exportTemplate);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasExportTemplatesDeleteTest() throws ApiException {
        Integer id = null;
        api.extrasExportTemplatesDelete(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasExportTemplatesListTest() throws ApiException {
        String contentType = null;
        String name = null;
        Integer limit = null;
        Integer offset = null;
        ExtrasExportTemplatesList200Response response = api.extrasExportTemplatesList(contentType, name, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasExportTemplatesPartialUpdateTest() throws ApiException {
        Integer id = null;
        ExportTemplate exportTemplate = null;
        ExportTemplate response = api.extrasExportTemplatesPartialUpdate(id, exportTemplate);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasExportTemplatesReadTest() throws ApiException {
        Integer id = null;
        ExportTemplate response = api.extrasExportTemplatesRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasExportTemplatesUpdateTest() throws ApiException {
        Integer id = null;
        ExportTemplate exportTemplate = null;
        ExportTemplate response = api.extrasExportTemplatesUpdate(id, exportTemplate);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasGraphsCreateTest() throws ApiException {
        WritableGraph writableGraph = null;
        Graph response = api.extrasGraphsCreate(writableGraph);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasGraphsDeleteTest() throws ApiException {
        Integer id = null;
        api.extrasGraphsDelete(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasGraphsListTest() throws ApiException {
        String type = null;
        String name = null;
        Integer limit = null;
        Integer offset = null;
        ExtrasGraphsList200Response response = api.extrasGraphsList(type, name, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasGraphsPartialUpdateTest() throws ApiException {
        Integer id = null;
        WritableGraph writableGraph = null;
        Graph response = api.extrasGraphsPartialUpdate(id, writableGraph);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasGraphsReadTest() throws ApiException {
        Integer id = null;
        Graph response = api.extrasGraphsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasGraphsUpdateTest() throws ApiException {
        Integer id = null;
        WritableGraph writableGraph = null;
        Graph response = api.extrasGraphsUpdate(id, writableGraph);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasImageAttachmentsCreateTest() throws ApiException {
        ImageAttachment imageAttachment = null;
        ImageAttachment response = api.extrasImageAttachmentsCreate(imageAttachment);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasImageAttachmentsDeleteTest() throws ApiException {
        Integer id = null;
        api.extrasImageAttachmentsDelete(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasImageAttachmentsListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        ExtrasImageAttachmentsList200Response response = api.extrasImageAttachmentsList(limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasImageAttachmentsPartialUpdateTest() throws ApiException {
        Integer id = null;
        ImageAttachment imageAttachment = null;
        ImageAttachment response = api.extrasImageAttachmentsPartialUpdate(id, imageAttachment);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasImageAttachmentsReadTest() throws ApiException {
        Integer id = null;
        ImageAttachment response = api.extrasImageAttachmentsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasImageAttachmentsUpdateTest() throws ApiException {
        Integer id = null;
        ImageAttachment imageAttachment = null;
        ImageAttachment response = api.extrasImageAttachmentsUpdate(id, imageAttachment);
        // TODO: test validations
    }

    /**
     * Retrieve a list of recent changes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasObjectChangesListTest() throws ApiException {
        String user = null;
        String userName = null;
        String requestId = null;
        String action = null;
        String changedObjectType = null;
        String objectRepr = null;
        String q = null;
        String time = null;
        Integer limit = null;
        Integer offset = null;
        ExtrasObjectChangesList200Response response = api.extrasObjectChangesList(user, userName, requestId, action, changedObjectType, objectRepr, q, time, limit, offset);
        // TODO: test validations
    }

    /**
     * Retrieve a list of recent changes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasObjectChangesReadTest() throws ApiException {
        Integer id = null;
        ObjectChange response = api.extrasObjectChangesRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasRecentActivityListTest() throws ApiException {
        String user = null;
        String username = null;
        Integer limit = null;
        Integer offset = null;
        ExtrasRecentActivityList200Response response = api.extrasRecentActivityList(user, username, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasRecentActivityReadTest() throws ApiException {
        Integer id = null;
        UserAction response = api.extrasRecentActivityRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTagsCreateTest() throws ApiException {
        Tag tag = null;
        Tag response = api.extrasTagsCreate(tag);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTagsDeleteTest() throws ApiException {
        Integer id = null;
        api.extrasTagsDelete(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTagsListTest() throws ApiException {
        String name = null;
        String slug = null;
        String q = null;
        Integer limit = null;
        Integer offset = null;
        ExtrasTagsList200Response response = api.extrasTagsList(name, slug, q, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTagsPartialUpdateTest() throws ApiException {
        Integer id = null;
        Tag tag = null;
        Tag response = api.extrasTagsPartialUpdate(id, tag);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTagsReadTest() throws ApiException {
        Integer id = null;
        Tag response = api.extrasTagsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTagsUpdateTest() throws ApiException {
        Integer id = null;
        Tag tag = null;
        Tag response = api.extrasTagsUpdate(id, tag);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTopologyMapsCreateTest() throws ApiException {
        WritableTopologyMap writableTopologyMap = null;
        TopologyMap response = api.extrasTopologyMapsCreate(writableTopologyMap);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTopologyMapsDeleteTest() throws ApiException {
        Integer id = null;
        api.extrasTopologyMapsDelete(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTopologyMapsListTest() throws ApiException {
        String name = null;
        String slug = null;
        String siteId = null;
        String site = null;
        Integer limit = null;
        Integer offset = null;
        ExtrasTopologyMapsList200Response response = api.extrasTopologyMapsList(name, slug, siteId, site, limit, offset);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTopologyMapsPartialUpdateTest() throws ApiException {
        Integer id = null;
        WritableTopologyMap writableTopologyMap = null;
        TopologyMap response = api.extrasTopologyMapsPartialUpdate(id, writableTopologyMap);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTopologyMapsReadTest() throws ApiException {
        Integer id = null;
        TopologyMap response = api.extrasTopologyMapsRead(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTopologyMapsRenderTest() throws ApiException {
        Integer id = null;
        TopologyMap response = api.extrasTopologyMapsRender(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extrasTopologyMapsUpdateTest() throws ApiException {
        Integer id = null;
        WritableTopologyMap writableTopologyMap = null;
        TopologyMap response = api.extrasTopologyMapsUpdate(id, writableTopologyMap);
        // TODO: test validations
    }

}
