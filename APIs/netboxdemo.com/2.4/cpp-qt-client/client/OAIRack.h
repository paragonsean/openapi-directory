/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.4
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRack.h
 *
 * 
 */

#ifndef OAIRack_H
#define OAIRack_H

#include <QJsonObject>

#include "OAINestedRackGroup.h"
#include "OAINestedRackRole.h"
#include "OAINestedSite.h"
#include "OAINestedTenant.h"
#include "OAIObject.h"
#include "OAIType.h"
#include "OAIWidth.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedRackGroup;
class OAINestedRackRole;
class OAINestedSite;
class OAINestedTenant;
class OAIType;
class OAIWidth;

class OAIRack : public OAIObject {
public:
    OAIRack();
    OAIRack(QString json);
    ~OAIRack() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDate getCreated() const;
    void setCreated(const QDate &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    bool isDescUnits() const;
    void setDescUnits(const bool &desc_units);
    bool is_desc_units_Set() const;
    bool is_desc_units_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getFacilityId() const;
    void setFacilityId(const QString &facility_id);
    bool is_facility_id_Set() const;
    bool is_facility_id_Valid() const;

    OAINestedRackGroup getGroup() const;
    void setGroup(const OAINestedRackGroup &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINestedRackRole getRole() const;
    void setRole(const OAINestedRackRole &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getSerial() const;
    void setSerial(const QString &serial);
    bool is_serial_Set() const;
    bool is_serial_Valid() const;

    OAINestedSite getSite() const;
    void setSite(const OAINestedSite &site);
    bool is_site_Set() const;
    bool is_site_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAINestedTenant getTenant() const;
    void setTenant(const OAINestedTenant &tenant);
    bool is_tenant_Set() const;
    bool is_tenant_Valid() const;

    OAIType getType() const;
    void setType(const OAIType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getUHeight() const;
    void setUHeight(const qint32 &u_height);
    bool is_u_height_Set() const;
    bool is_u_height_Valid() const;

    OAIWidth getWidth() const;
    void setWidth(const OAIWidth &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDate m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    bool m_desc_units;
    bool m_desc_units_isSet;
    bool m_desc_units_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_facility_id;
    bool m_facility_id_isSet;
    bool m_facility_id_isValid;

    OAINestedRackGroup m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINestedRackRole m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_serial;
    bool m_serial_isSet;
    bool m_serial_isValid;

    OAINestedSite m_site;
    bool m_site_isSet;
    bool m_site_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAINestedTenant m_tenant;
    bool m_tenant_isSet;
    bool m_tenant_isValid;

    OAIType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_u_height;
    bool m_u_height_isSet;
    bool m_u_height_isValid;

    OAIWidth m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRack)

#endif // OAIRack_H
