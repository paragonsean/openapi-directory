/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.4
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritableInventoryItem.h
 *
 * 
 */

#ifndef OAIWritableInventoryItem_H
#define OAIWritableInventoryItem_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWritableInventoryItem : public OAIObject {
public:
    OAIWritableInventoryItem();
    OAIWritableInventoryItem(QString json);
    ~OAIWritableInventoryItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetTag() const;
    void setAssetTag(const QString &asset_tag);
    bool is_asset_tag_Set() const;
    bool is_asset_tag_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDevice() const;
    void setDevice(const qint32 &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    bool isDiscovered() const;
    void setDiscovered(const bool &discovered);
    bool is_discovered_Set() const;
    bool is_discovered_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getManufacturer() const;
    void setManufacturer(const qint32 &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getParent() const;
    void setParent(const qint32 &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    QString getPartId() const;
    void setPartId(const QString &part_id);
    bool is_part_id_Set() const;
    bool is_part_id_Valid() const;

    QString getSerial() const;
    void setSerial(const QString &serial);
    bool is_serial_Set() const;
    bool is_serial_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_tag;
    bool m_asset_tag_isSet;
    bool m_asset_tag_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    bool m_discovered;
    bool m_discovered_isSet;
    bool m_discovered_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    QString m_part_id;
    bool m_part_id_isSet;
    bool m_part_id_isValid;

    QString m_serial;
    bool m_serial_isSet;
    bool m_serial_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritableInventoryItem)

#endif // OAIWritableInventoryItem_H
