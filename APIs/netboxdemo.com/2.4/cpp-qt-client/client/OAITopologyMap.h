/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.4
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopologyMap.h
 *
 * 
 */

#ifndef OAITopologyMap_H
#define OAITopologyMap_H

#include <QJsonObject>

#include "OAINestedSite.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedSite;

class OAITopologyMap : public OAIObject {
public:
    OAITopologyMap();
    OAITopologyMap(QString json);
    ~OAITopologyMap() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDevicePatterns() const;
    void setDevicePatterns(const QString &device_patterns);
    bool is_device_patterns_Set() const;
    bool is_device_patterns_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINestedSite getSite() const;
    void setSite(const OAINestedSite &site);
    bool is_site_Set() const;
    bool is_site_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_device_patterns;
    bool m_device_patterns_isSet;
    bool m_device_patterns_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINestedSite m_site;
    bool m_site_isSet;
    bool m_site_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopologyMap)

#endif // OAITopologyMap_H
