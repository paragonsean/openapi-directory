/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.4
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageAttachment from './ImageAttachment';

/**
 * The ExtrasImageAttachmentsList200Response model module.
 * @module model/ExtrasImageAttachmentsList200Response
 * @version 2.4
 */
class ExtrasImageAttachmentsList200Response {
    /**
     * Constructs a new <code>ExtrasImageAttachmentsList200Response</code>.
     * @alias module:model/ExtrasImageAttachmentsList200Response
     * @param count {Number} 
     * @param results {Array.<module:model/ImageAttachment>} 
     */
    constructor(count, results) { 
        
        ExtrasImageAttachmentsList200Response.initialize(this, count, results);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, count, results) { 
        obj['count'] = count;
        obj['results'] = results;
    }

    /**
     * Constructs a <code>ExtrasImageAttachmentsList200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtrasImageAttachmentsList200Response} obj Optional instance to populate.
     * @return {module:model/ExtrasImageAttachmentsList200Response} The populated <code>ExtrasImageAttachmentsList200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtrasImageAttachmentsList200Response();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('next')) {
                obj['next'] = ApiClient.convertToType(data['next'], 'String');
            }
            if (data.hasOwnProperty('previous')) {
                obj['previous'] = ApiClient.convertToType(data['previous'], 'String');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [ImageAttachment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtrasImageAttachmentsList200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtrasImageAttachmentsList200Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExtrasImageAttachmentsList200Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['next'] && !(typeof data['next'] === 'string' || data['next'] instanceof String)) {
            throw new Error("Expected the field `next` to be a primitive type in the JSON string but got " + data['next']);
        }
        // ensure the json data is a string
        if (data['previous'] && !(typeof data['previous'] === 'string' || data['previous'] instanceof String)) {
            throw new Error("Expected the field `previous` to be a primitive type in the JSON string but got " + data['previous']);
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                ImageAttachment.validateJSON(item);
            };
        }

        return true;
    }


}

ExtrasImageAttachmentsList200Response.RequiredProperties = ["count", "results"];

/**
 * @member {Number} count
 */
ExtrasImageAttachmentsList200Response.prototype['count'] = undefined;

/**
 * @member {String} next
 */
ExtrasImageAttachmentsList200Response.prototype['next'] = undefined;

/**
 * @member {String} previous
 */
ExtrasImageAttachmentsList200Response.prototype['previous'] = undefined;

/**
 * @member {Array.<module:model/ImageAttachment>} results
 */
ExtrasImageAttachmentsList200Response.prototype['results'] = undefined;






export default ExtrasImageAttachmentsList200Response;

