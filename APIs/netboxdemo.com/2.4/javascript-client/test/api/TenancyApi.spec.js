/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.4
 * Contact: netbox@digitalocean.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetBoxApi);
  }
}(this, function(expect, NetBoxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetBoxApi.TenancyApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TenancyApi', function() {
    describe('tenancyChoicesList', function() {
      it('should call tenancyChoicesList successfully', function(done) {
        //uncomment below and update the code to test tenancyChoicesList
        //instance.tenancyChoicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyChoicesRead', function() {
      it('should call tenancyChoicesRead successfully', function(done) {
        //uncomment below and update the code to test tenancyChoicesRead
        //instance.tenancyChoicesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantGroupsCreate', function() {
      it('should call tenancyTenantGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantGroupsCreate
        //instance.tenancyTenantGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantGroupsDelete', function() {
      it('should call tenancyTenantGroupsDelete successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantGroupsDelete
        //instance.tenancyTenantGroupsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantGroupsList', function() {
      it('should call tenancyTenantGroupsList successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantGroupsList
        //instance.tenancyTenantGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantGroupsPartialUpdate', function() {
      it('should call tenancyTenantGroupsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantGroupsPartialUpdate
        //instance.tenancyTenantGroupsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantGroupsRead', function() {
      it('should call tenancyTenantGroupsRead successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantGroupsRead
        //instance.tenancyTenantGroupsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantGroupsUpdate', function() {
      it('should call tenancyTenantGroupsUpdate successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantGroupsUpdate
        //instance.tenancyTenantGroupsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantsCreate', function() {
      it('should call tenancyTenantsCreate successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantsCreate
        //instance.tenancyTenantsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantsDelete', function() {
      it('should call tenancyTenantsDelete successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantsDelete
        //instance.tenancyTenantsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantsList', function() {
      it('should call tenancyTenantsList successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantsList
        //instance.tenancyTenantsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantsPartialUpdate', function() {
      it('should call tenancyTenantsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantsPartialUpdate
        //instance.tenancyTenantsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantsRead', function() {
      it('should call tenancyTenantsRead successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantsRead
        //instance.tenancyTenantsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tenancyTenantsUpdate', function() {
      it('should call tenancyTenantsUpdate successfully', function(done) {
        //uncomment below and update the code to test tenancyTenantsUpdate
        //instance.tenancyTenantsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
