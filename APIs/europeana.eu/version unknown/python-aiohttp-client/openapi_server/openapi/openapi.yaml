openapi: 3.0.1
info:
  contact:
    name: https://pro.europeana.eu/page/intro#general
  description: "This Swagger API console provides an overview of the Europeana Search\
    \ & Record API. You can build and test anything from the simplest search to a\
    \ complex query using facetList such as dates, geotags and permissions. For more\
    \ help and information, head to our comprehensive <a href=\"https://pro.europeana.eu/page/intro\"\
    >online documentation</a>."
  license:
    name: API terms of use
    url: https://www.europeana.eu/en/rights/api-terms-of-use
  termsOfService: https://www.europeana.eu/en/rights/api-terms-of-use
  title: Europeana Search & Record API
  version: version unknown
  x-apisguru-categories:
  - open_data
  x-logo:
    url: https://twitter.com/Europeanaeu/profile_image?size=original
  x-origin:
  - format: swagger
    url: http://www.europeana.eu/api/api-docs
    version: "2.0"
  x-providerName: europeana.eu
servers:
- url: //api.europeana.eu/
tags:
- name: Record
- name: Search
paths:
  /record/v2/opensearch.rss:
    get:
      deprecated: false
      operationId: open_search
      parameters:
      - description: count
        in: query
        name: count
        schema:
          default: 12
          format: int32
          type: integer
      - description: searchTerms
        in: query
        name: searchTerms
        required: true
        schema:
          type: string
      - description: startIndex
        in: query
        name: startIndex
        schema:
          default: 1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            application/rss+xml:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            application/xhtml+xml:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: basic search function following the OpenSearch specification
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /record/v2/search.json:
    get:
      deprecated: false
      operationId: search_records
      parameters:
      - description: boost
        in: query
        name: boost
        schema:
          type: string
      - description: callback
        in: query
        name: callback
        schema:
          type: string
      - description: colourpalette
        explode: true
        in: query
        name: colourpalette
        schema:
          items:
            type: string
          type: array
        style: form
      - description: cursor
        in: query
        name: cursor
        schema:
          type: string
      - description: facet
        explode: true
        in: query
        name: facet
        schema:
          items:
            type: string
          type: array
        style: form
      - description: hit.fl
        in: query
        name: hit.fl
        schema:
          type: string
      - description: hit.selectors
        in: query
        name: hit.selectors
        schema:
          type: string
      - description: landingpage
        in: query
        name: landingpage
        schema:
          type: boolean
      - description: lang
        in: query
        name: lang
        schema:
          type: string
      - description: media
        in: query
        name: media
        schema:
          type: boolean
      - description: profile
        in: query
        name: profile
        schema:
          default: standard
          type: string
      - description: q.source
        in: query
        name: q.source
        schema:
          type: string
      - description: q.target
        in: query
        name: q.target
        schema:
          type: string
      - description: qf
        explode: true
        in: query
        name: qf
        schema:
          items:
            type: string
          type: array
        style: form
      - description: query
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: reusability
        explode: true
        in: query
        name: reusability
        schema:
          items:
            type: string
          type: array
        style: form
      - description: rows
        in: query
        name: rows
        schema:
          default: 12
          format: int32
          type: integer
      - description: sort
        in: query
        name: sort
        schema:
          type: string
      - description: start
        in: query
        name: start
        schema:
          default: 1
          format: int32
          type: integer
      - description: text_fulltext
        in: query
        name: text_fulltext
        schema:
          type: boolean
      - description: theme
        in: query
        name: theme
        schema:
          type: string
      - description: thumbnail
        in: query
        name: thumbnail
        schema:
          type: boolean
      - description: wskey
        in: query
        name: wskey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: search for records
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
    post:
      deprecated: false
      operationId: search_records_post
      parameters:
      - description: wskey
        in: query
        name: wskey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: searchRequest
        required: true
        x-body-name: searchRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: search for records post
      tags:
      - Search
      x-codegen-request-body-name: searchRequest
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /record/v2/translateQuery.json:
    get:
      deprecated: false
      operationId: translate_query_using_get
      parameters:
      - description: callback
        in: query
        name: callback
        schema:
          type: string
      - description: languageCodes
        explode: true
        in: query
        name: languageCodes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: profile
        in: query
        name: profile
        schema:
          type: string
      - description: term
        in: query
        name: term
        required: true
        schema:
          type: string
      - description: wskey
        in: query
        name: wskey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: translate a term to different languages
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /record/v2/{collectionId}/{recordId}.json:
    get:
      deprecated: false
      operationId: get_single_record_json
      parameters:
      - description: callback
        in: query
        name: callback
        schema:
          type: string
      - description: collectionId
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: lang
        in: query
        name: lang
        schema:
          type: string
      - description: profile
        in: query
        name: profile
        schema:
          default: standard
          type: string
      - description: recordId
        in: path
        name: recordId
        required: true
        schema:
          type: string
      - description: wskey
        in: query
        name: wskey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: get a single record in JSON format
      tags:
      - Record
      x-openapi-router-controller: openapi_server.controllers.record_controller
  /record/v2/{collectionId}/{recordId}.jsonld:
    get:
      deprecated: false
      operationId: get_single_record_json_ld
      parameters:
      - description: callback
        in: query
        name: callback
        schema:
          type: string
      - description: collectionId
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: lang
        in: query
        name: lang
        schema:
          type: string
      - description: profile
        in: query
        name: profile
        schema:
          default: standard
          type: string
      - description: recordId
        in: path
        name: recordId
        required: true
        schema:
          type: string
      - description: wskey
        in: query
        name: wskey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            application/ld+json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: get single record in JSON LD format
      tags:
      - Record
      x-openapi-router-controller: openapi_server.controllers.record_controller
  /record/v2/{collectionId}/{recordId}.rdf:
    get:
      deprecated: false
      operationId: get_single_record_rdf
      parameters:
      - description: collectionId
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: lang
        in: query
        name: lang
        schema:
          type: string
      - description: profile
        in: query
        name: profile
        schema:
          default: standard
          type: string
      - description: recordId
        in: path
        name: recordId
        required: true
        schema:
          type: string
      - description: wskey
        in: query
        name: wskey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/rdf+xml;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: get single record in RDF format)
      tags:
      - Record
      x-openapi-router-controller: openapi_server.controllers.record_controller
  /record/v2/{collectionId}/{recordId}.schema.jsonld:
    get:
      deprecated: false
      operationId: get_single_record_schema_org
      parameters:
      - description: callback
        in: query
        name: callback
        schema:
          type: string
      - description: collectionId
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: lang
        in: query
        name: lang
        schema:
          type: string
      - description: profile
        in: query
        name: profile
        schema:
          default: standard
          type: string
      - description: recordId
        in: path
        name: recordId
        required: true
        schema:
          type: string
      - description: wskey
        in: query
        name: wskey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            application/ld+json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: get single record in Schema.org JSON LD format
      tags:
      - Record
      x-openapi-router-controller: openapi_server.controllers.record_controller
  /record/v2/{collectionId}/{recordId}.ttl:
    get:
      deprecated: false
      operationId: get_single_record_turtle
      parameters:
      - description: collectionId
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: lang
        in: query
        name: lang
        schema:
          type: string
      - description: profile
        in: query
        name: profile
        schema:
          default: standard
          type: string
      - description: recordId
        in: path
        name: recordId
        required: true
        schema:
          type: string
      - description: wskey
        in: query
        name: wskey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            application/turtle:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: get single record in turtle format)
      tags:
      - Record
      x-openapi-router-controller: openapi_server.controllers.record_controller
components:
  schemas:
    Hit:
      example:
        fl: fl
        selectors: selectors
      properties:
        fl:
          title: fl
          type: string
        selectors:
          title: selectors
          type: string
      title: Hit
      type: object
    ModelAndView:
      example:
        reference: true
        view:
          contentType: contentType
        viewName: viewName
        model: "{}"
        modelMap:
          key: "{}"
        empty: true
        status: "100"
      properties:
        empty:
          title: empty
          type: boolean
        model:
          properties: {}
          title: model
          type: object
        modelMap:
          additionalProperties:
            properties: {}
            type: object
          title: modelMap
          type: object
        reference:
          title: reference
          type: boolean
        status:
          enum:
          - "100"
          - "101"
          - "102"
          - "103"
          - "200"
          - "201"
          - "202"
          - "203"
          - "204"
          - "205"
          - "206"
          - "207"
          - "208"
          - "226"
          - "300"
          - "301"
          - "302"
          - "303"
          - "304"
          - "305"
          - "307"
          - "308"
          - "400"
          - "401"
          - "402"
          - "403"
          - "404"
          - "405"
          - "406"
          - "407"
          - "408"
          - "409"
          - "410"
          - "411"
          - "412"
          - "413"
          - "414"
          - "415"
          - "416"
          - "417"
          - "418"
          - "419"
          - "420"
          - "421"
          - "422"
          - "423"
          - "424"
          - "426"
          - "428"
          - "429"
          - "431"
          - "451"
          - "500"
          - "501"
          - "502"
          - "503"
          - "504"
          - "505"
          - "506"
          - "507"
          - "508"
          - "509"
          - "510"
          - "511"
          title: status
          type: string
        view:
          $ref: '#/components/schemas/View'
        viewName:
          title: viewName
          type: string
      title: ModelAndView
      type: object
    SearchRequest:
      example:
        cursor: cursor
        thumbnail: true
        colourPalette:
        - colourPalette
        - colourPalette
        landingPage: true
        profile:
        - profile
        - profile
        query: query
        start: 6
        reusability:
        - reusability
        - reusability
        media: true
        sort:
        - sort
        - sort
        rows: 0
        textFulltext: true
        hit:
          fl: fl
          selectors: selectors
        qf:
        - qf
        - qf
        callback: callback
        boost: boost
        theme: theme
        facet:
        - facet
        - facet
      properties:
        boost:
          title: boost
          type: string
        callback:
          title: callback
          type: string
        colourPalette:
          items:
            type: string
          title: colourPalette
          type: array
        cursor:
          title: cursor
          type: string
        facet:
          items:
            type: string
          title: facet
          type: array
        hit:
          $ref: '#/components/schemas/Hit'
        landingPage:
          title: landingPage
          type: boolean
        media:
          title: media
          type: boolean
        profile:
          items:
            type: string
          title: profile
          type: array
        qf:
          items:
            type: string
          title: qf
          type: array
        query:
          title: query
          type: string
        reusability:
          items:
            type: string
          title: reusability
          type: array
        rows:
          format: int32
          title: rows
          type: integer
        sort:
          items:
            type: string
          title: sort
          type: array
        start:
          format: int32
          title: start
          type: integer
        textFulltext:
          title: textFulltext
          type: boolean
        theme:
          title: theme
          type: string
        thumbnail:
          title: thumbnail
          type: boolean
      required:
      - query
      title: SearchRequest
      type: object
    View:
      example:
        contentType: contentType
      properties:
        contentType:
          title: contentType
          type: string
      title: View
      type: object
x-original-swagger-version: "2.0"
