# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Restrictions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, own: object=None, view: object=None):
        """Restrictions - a model defined in OpenAPI

        :param own: The own of this Restrictions.
        :param view: The view of this Restrictions.
        """
        self.openapi_types = {
            'own': object,
            'view': object
        }

        self.attribute_map = {
            'own': 'own',
            'view': 'view'
        }

        self._own = own
        self._view = view

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Restrictions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Restrictions of this Restrictions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def own(self):
        """Gets the own of this Restrictions.

        A custom object containing fields paired with an array value of restrictions. Restricts the users that may own this app. Example: {'country':['Canada','Mexico']}

        :return: The own of this Restrictions.
        :rtype: object
        """
        return self._own

    @own.setter
    def own(self, own):
        """Sets the own of this Restrictions.

        A custom object containing fields paired with an array value of restrictions. Restricts the users that may own this app. Example: {'country':['Canada','Mexico']}

        :param own: The own of this Restrictions.
        :type own: object
        """

        self._own = own

    @property
    def view(self):
        """Gets the view of this Restrictions.

        A custom object containing fields paired with an array value of restrictions. Restricts the users that may view this app. Example: {'country':['Canada','Mexico']}

        :return: The view of this Restrictions.
        :rtype: object
        """
        return self._view

    @view.setter
    def view(self, view):
        """Sets the view of this Restrictions.

        A custom object containing fields paired with an array value of restrictions. Restricts the users that may view this app. Example: {'country':['Canada','Mexico']}

        :param view: The view of this Restrictions.
        :type view: object
        """

        self._view = view
