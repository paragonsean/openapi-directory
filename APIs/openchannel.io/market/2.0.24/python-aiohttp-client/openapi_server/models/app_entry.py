# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, _date: int=None):
        """AppEntry - a model defined in OpenAPI

        :param app_id: The app_id of this AppEntry.
        :param _date: The _date of this AppEntry.
        """
        self.openapi_types = {
            'app_id': str,
            '_date': int
        }

        self.attribute_map = {
            'app_id': 'appId',
            '_date': 'date'
        }

        self._app_id = app_id
        self.__date = _date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The App_Entry of this AppEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this AppEntry.

        The id of the app involved in this action

        :return: The app_id of this AppEntry.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this AppEntry.

        The id of the app involved in this action

        :param app_id: The app_id of this AppEntry.
        :type app_id: str
        """
        if app_id is None:
            raise ValueError("Invalid value for `app_id`, must not be `None`")

        self._app_id = app_id

    @property
    def _date(self):
        """Gets the _date of this AppEntry.

        The date (in millis) of when this action was performed

        :return: The _date of this AppEntry.
        :rtype: int
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AppEntry.

        The date (in millis) of when this action was performed

        :param _date: The _date of this AppEntry.
        :type _date: int
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")

        self.__date = _date
