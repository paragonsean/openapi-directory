# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataTotal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _field: int=None):
        """DataTotal - a model defined in OpenAPI

        :param _field: The _field of this DataTotal.
        """
        self.openapi_types = {
            '_field': int
        }

        self.attribute_map = {
            '_field': '$field'
        }

        self.__field = _field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataTotal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataTotal of this DataTotal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _field(self):
        """Gets the _field of this DataTotal.

        The totals for the field

        :return: The _field of this DataTotal.
        :rtype: int
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this DataTotal.

        The totals for the field

        :param _field: The _field of this DataTotal.
        :type _field: int
        """

        self.__field = _field
