# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReviewEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: int=None, review_id: str=None):
        """ReviewEntry - a model defined in OpenAPI

        :param _date: The _date of this ReviewEntry.
        :param review_id: The review_id of this ReviewEntry.
        """
        self.openapi_types = {
            '_date': int,
            'review_id': str
        }

        self.attribute_map = {
            '_date': 'date',
            'review_id': 'reviewId'
        }

        self.__date = _date
        self._review_id = review_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReviewEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Review_Entry of this ReviewEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this ReviewEntry.

        The date (in millis) of when this action was performed

        :return: The _date of this ReviewEntry.
        :rtype: int
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ReviewEntry.

        The date (in millis) of when this action was performed

        :param _date: The _date of this ReviewEntry.
        :type _date: int
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")

        self.__date = _date

    @property
    def review_id(self):
        """Gets the review_id of this ReviewEntry.

        The id of the review involved in this action

        :return: The review_id of this ReviewEntry.
        :rtype: str
        """
        return self._review_id

    @review_id.setter
    def review_id(self, review_id):
        """Sets the review_id of this ReviewEntry.

        The id of the review involved in this action

        :param review_id: The review_id of this ReviewEntry.
        :type review_id: str
        """
        if review_id is None:
            raise ValueError("Invalid value for `review_id`, must not be `None`")

        self._review_id = review_id
