from typing import List, Dict
from aiohttp import web

from openapi_server.models.accounts import Accounts
from openapi_server.models.cards import Cards
from openapi_server.models.developer_token import DeveloperToken
from openapi_server import util


async def stripe_gateway_developer_developer_id_accounts_get(request: web.Request, developer_id) -> web.Response:
    """Returns a developers connected Stripe accounts

    - Results are returned for the market provided within the basic authentication credentials 

    :param developer_id: The id of the developer connecting their Stripe account
    :type developer_id: str

    """
    return web.Response(status=200)


async def stripe_gateway_developer_developer_id_accounts_post(request: web.Request, developer_id, redirect_url) -> web.Response:
    """Generate a temporary URL to allow a developer to connect their Stripe account

    - Results are returned for the market provided within the basic authentication credentials  - The URL generated by this method is only valid for 48 hours. 

    :param developer_id: The id of the developer connecting their Stripe account
    :type developer_id: str
    :param redirect_url: The URL to redirect this developer after they have connected their Stripe account
    :type redirect_url: str

    """
    return web.Response(status=200)


async def stripe_gateway_developer_developer_id_accounts_stripe_id_delete(request: web.Request, developer_id, stripe_id) -> web.Response:
    """Disconnects a developer&#39;s Stripe account

     - Results are returned for the market provided within the basic authentication credentials 

    :param developer_id: The id of the developer disconnecting their Stripe account
    :type developer_id: str
    :param stripe_id: The id of the stripe account to disconnect
    :type stripe_id: str

    """
    return web.Response(status=200)


async def stripe_gateway_user_user_id_cards_card_id_delete(request: web.Request, user_id, card_id) -> web.Response:
    """Removes a credit card for a user

    

    :param user_id: The id of the user removing their credit card
    :type user_id: str
    :param card_id: The id of the credit card to remove
    :type card_id: str

    """
    return web.Response(status=200)


async def stripe_gateway_user_user_id_cards_card_id_post(request: web.Request, user_id, card_id, is_default=None, address_city=None, address_country=None, address_line1=None, address_line2=None, address_state=None, address_zip=None) -> web.Response:
    """Updates a credit card for this user

     - Results are returned for the market provided within the basic authentication credentials 

    :param user_id: The id of the user adding their credit card
    :type user_id: str
    :param card_id: The id of the card to be updated
    :type card_id: str
    :param is_default: Set to true if this should be set to be the default credit card
    :type is_default: bool
    :param address_city: The card holder&#39;s city
    :type address_city: str
    :param address_country: The card holder&#39;s country
    :type address_country: str
    :param address_line1: The card holder&#39;s street address
    :type address_line1: str
    :param address_line2: The card holder&#39;s street address
    :type address_line2: str
    :param address_state: The card holder&#39;s city state/province
    :type address_state: str
    :param address_zip: The card holder&#39;s zip/postal code
    :type address_zip: str

    """
    return web.Response(status=200)


async def stripe_gateway_user_user_id_cards_get(request: web.Request, user_id) -> web.Response:
    """Returns credit cards for this user

    - Results are returned for the market provided within the basic authentication credentials 

    :param user_id: The id of the user requesting their credit cards
    :type user_id: str

    """
    return web.Response(status=200)


async def stripe_gateway_user_user_id_cards_post(request: web.Request, user_id, token, is_default=None) -> web.Response:
    """Adds credit card for this user

    - Results are returned for the market provided within the basic authentication credentials 

    :param user_id: The id of the user adding their credit card
    :type user_id: str
    :param token: The Stripe token returned by the Stripe.js Stripe.card.createToken call
    :type token: str
    :param is_default: Set to true if this should be set to be the default credit card
    :type is_default: bool

    """
    return web.Response(status=200)
