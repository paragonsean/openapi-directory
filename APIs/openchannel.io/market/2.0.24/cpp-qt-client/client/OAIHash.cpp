/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHash.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHash::OAIHash(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHash::OAIHash() {
    this->initializeModel();
}

OAIHash::~OAIHash() {}

void OAIHash::initializeModel() {

    m_md5_isSet = false;
    m_md5_isValid = false;

    m_sha_1_isSet = false;
    m_sha_1_isValid = false;

    m_sha_256_isSet = false;
    m_sha_256_isValid = false;
}

void OAIHash::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHash::fromJsonObject(QJsonObject json) {

    m_md5_isValid = ::OpenAPI::fromJsonValue(m_md5, json[QString("MD5")]);
    m_md5_isSet = !json[QString("MD5")].isNull() && m_md5_isValid;

    m_sha_1_isValid = ::OpenAPI::fromJsonValue(m_sha_1, json[QString("SHA-1")]);
    m_sha_1_isSet = !json[QString("SHA-1")].isNull() && m_sha_1_isValid;

    m_sha_256_isValid = ::OpenAPI::fromJsonValue(m_sha_256, json[QString("SHA-256")]);
    m_sha_256_isSet = !json[QString("SHA-256")].isNull() && m_sha_256_isValid;
}

QString OAIHash::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHash::asJsonObject() const {
    QJsonObject obj;
    if (m_md5_isSet) {
        obj.insert(QString("MD5"), ::OpenAPI::toJsonValue(m_md5));
    }
    if (m_sha_1_isSet) {
        obj.insert(QString("SHA-1"), ::OpenAPI::toJsonValue(m_sha_1));
    }
    if (m_sha_256_isSet) {
        obj.insert(QString("SHA-256"), ::OpenAPI::toJsonValue(m_sha_256));
    }
    return obj;
}

QString OAIHash::getMd5() const {
    return m_md5;
}
void OAIHash::setMd5(const QString &md5) {
    m_md5 = md5;
    m_md5_isSet = true;
}

bool OAIHash::is_md5_Set() const{
    return m_md5_isSet;
}

bool OAIHash::is_md5_Valid() const{
    return m_md5_isValid;
}

QString OAIHash::getSha1() const {
    return m_sha_1;
}
void OAIHash::setSha1(const QString &sha_1) {
    m_sha_1 = sha_1;
    m_sha_1_isSet = true;
}

bool OAIHash::is_sha_1_Set() const{
    return m_sha_1_isSet;
}

bool OAIHash::is_sha_1_Valid() const{
    return m_sha_1_isValid;
}

QString OAIHash::getSha256() const {
    return m_sha_256;
}
void OAIHash::setSha256(const QString &sha_256) {
    m_sha_256 = sha_256;
    m_sha_256_isSet = true;
}

bool OAIHash::is_sha_256_Set() const{
    return m_sha_256_isSet;
}

bool OAIHash::is_sha_256_Valid() const{
    return m_sha_256_isValid;
}

bool OAIHash::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_md5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sha_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sha_256_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHash::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
