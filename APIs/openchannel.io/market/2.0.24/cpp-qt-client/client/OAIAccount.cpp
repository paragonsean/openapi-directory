/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccount::OAIAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccount::OAIAccount() {
    this->initializeModel();
}

OAIAccount::~OAIAccount() {}

void OAIAccount::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_default_currency_isSet = false;
    m_default_currency_isValid = false;

    m_stripe_id_isSet = false;
    m_stripe_id_isValid = false;
}

void OAIAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccount::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_default_currency_isValid = ::OpenAPI::fromJsonValue(m_default_currency, json[QString("defaultCurrency")]);
    m_default_currency_isSet = !json[QString("defaultCurrency")].isNull() && m_default_currency_isValid;

    m_stripe_id_isValid = ::OpenAPI::fromJsonValue(m_stripe_id, json[QString("stripeId")]);
    m_stripe_id_isSet = !json[QString("stripeId")].isNull() && m_stripe_id_isValid;
}

QString OAIAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_default_currency_isSet) {
        obj.insert(QString("defaultCurrency"), ::OpenAPI::toJsonValue(m_default_currency));
    }
    if (m_stripe_id_isSet) {
        obj.insert(QString("stripeId"), ::OpenAPI::toJsonValue(m_stripe_id));
    }
    return obj;
}

QString OAIAccount::getAccountName() const {
    return m_account_name;
}
void OAIAccount::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIAccount::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIAccount::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIAccount::getCountry() const {
    return m_country;
}
void OAIAccount::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIAccount::is_country_Set() const{
    return m_country_isSet;
}

bool OAIAccount::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIAccount::getDefaultCurrency() const {
    return m_default_currency;
}
void OAIAccount::setDefaultCurrency(const QString &default_currency) {
    m_default_currency = default_currency;
    m_default_currency_isSet = true;
}

bool OAIAccount::is_default_currency_Set() const{
    return m_default_currency_isSet;
}

bool OAIAccount::is_default_currency_Valid() const{
    return m_default_currency_isValid;
}

QString OAIAccount::getStripeId() const {
    return m_stripe_id;
}
void OAIAccount::setStripeId(const QString &stripe_id) {
    m_stripe_id = stripe_id;
    m_stripe_id_isSet = true;
}

bool OAIAccount::is_stripe_id_Set() const{
    return m_stripe_id_isSet;
}

bool OAIAccount::is_stripe_id_Valid() const{
    return m_stripe_id_isValid;
}

bool OAIAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stripe_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_name_isValid && m_country_isValid && m_default_currency_isValid && m_stripe_id_isValid && true;
}

} // namespace OpenAPI
