/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFoundVirus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFoundVirus::OAIFoundVirus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFoundVirus::OAIFoundVirus() {
    this->initializeModel();
}

OAIFoundVirus::~OAIFoundVirus() {}

void OAIFoundVirus::initializeModel() {

    m_file_name_isSet = false;
    m_file_name_isValid = false;

    m_virus_name_isSet = false;
    m_virus_name_isValid = false;
}

void OAIFoundVirus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFoundVirus::fromJsonObject(QJsonObject json) {

    m_file_name_isValid = ::OpenAPI::fromJsonValue(m_file_name, json[QString("fileName")]);
    m_file_name_isSet = !json[QString("fileName")].isNull() && m_file_name_isValid;

    m_virus_name_isValid = ::OpenAPI::fromJsonValue(m_virus_name, json[QString("virusName")]);
    m_virus_name_isSet = !json[QString("virusName")].isNull() && m_virus_name_isValid;
}

QString OAIFoundVirus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFoundVirus::asJsonObject() const {
    QJsonObject obj;
    if (m_file_name_isSet) {
        obj.insert(QString("fileName"), ::OpenAPI::toJsonValue(m_file_name));
    }
    if (m_virus_name_isSet) {
        obj.insert(QString("virusName"), ::OpenAPI::toJsonValue(m_virus_name));
    }
    return obj;
}

QString OAIFoundVirus::getFileName() const {
    return m_file_name;
}
void OAIFoundVirus::setFileName(const QString &file_name) {
    m_file_name = file_name;
    m_file_name_isSet = true;
}

bool OAIFoundVirus::is_file_name_Set() const{
    return m_file_name_isSet;
}

bool OAIFoundVirus::is_file_name_Valid() const{
    return m_file_name_isValid;
}

QString OAIFoundVirus::getVirusName() const {
    return m_virus_name;
}
void OAIFoundVirus::setVirusName(const QString &virus_name) {
    m_virus_name = virus_name;
    m_virus_name_isSet = true;
}

bool OAIFoundVirus::is_virus_name_Set() const{
    return m_virus_name_isSet;
}

bool OAIFoundVirus::is_virus_name_Valid() const{
    return m_virus_name_isValid;
}

bool OAIFoundVirus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_virus_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFoundVirus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
