/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICards.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICards::OAICards(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICards::OAICards() {
    this->initializeModel();
}

OAICards::~OAICards() {}

void OAICards::initializeModel() {

    m_cards_isSet = false;
    m_cards_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAICards::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICards::fromJsonObject(QJsonObject json) {

    m_cards_isValid = ::OpenAPI::fromJsonValue(m_cards, json[QString("cards")]);
    m_cards_isSet = !json[QString("cards")].isNull() && m_cards_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAICards::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICards::asJsonObject() const {
    QJsonObject obj;
    if (m_cards.size() > 0) {
        obj.insert(QString("cards"), ::OpenAPI::toJsonValue(m_cards));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QList<OAICard> OAICards::getCards() const {
    return m_cards;
}
void OAICards::setCards(const QList<OAICard> &cards) {
    m_cards = cards;
    m_cards_isSet = true;
}

bool OAICards::is_cards_Set() const{
    return m_cards_isSet;
}

bool OAICards::is_cards_Valid() const{
    return m_cards_isValid;
}

QString OAICards::getUserId() const {
    return m_user_id;
}
void OAICards::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAICards::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAICards::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAICards::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cards.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICards::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cards_isValid && m_user_id_isValid && true;
}

} // namespace OpenAPI
