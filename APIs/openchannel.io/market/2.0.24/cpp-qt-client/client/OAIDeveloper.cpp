/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeveloper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeveloper::OAIDeveloper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeveloper::OAIDeveloper() {
    this->initializeModel();
}

OAIDeveloper::~OAIDeveloper() {}

void OAIDeveloper::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_custom_data_isSet = false;
    m_custom_data_isValid = false;

    m_developer_id_isSet = false;
    m_developer_id_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIDeveloper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeveloper::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_custom_data_isValid = ::OpenAPI::fromJsonValue(m_custom_data, json[QString("customData")]);
    m_custom_data_isSet = !json[QString("customData")].isNull() && m_custom_data_isValid;

    m_developer_id_isValid = ::OpenAPI::fromJsonValue(m_developer_id, json[QString("developerId")]);
    m_developer_id_isSet = !json[QString("developerId")].isNull() && m_developer_id_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIDeveloper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeveloper::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_custom_data_isSet) {
        obj.insert(QString("customData"), ::OpenAPI::toJsonValue(m_custom_data));
    }
    if (m_developer_id_isSet) {
        obj.insert(QString("developerId"), ::OpenAPI::toJsonValue(m_developer_id));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

qint32 OAIDeveloper::getCreated() const {
    return m_created;
}
void OAIDeveloper::setCreated(const qint32 &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIDeveloper::is_created_Set() const{
    return m_created_isSet;
}

bool OAIDeveloper::is_created_Valid() const{
    return m_created_isValid;
}

OAIObject OAIDeveloper::getCustomData() const {
    return m_custom_data;
}
void OAIDeveloper::setCustomData(const OAIObject &custom_data) {
    m_custom_data = custom_data;
    m_custom_data_isSet = true;
}

bool OAIDeveloper::is_custom_data_Set() const{
    return m_custom_data_isSet;
}

bool OAIDeveloper::is_custom_data_Valid() const{
    return m_custom_data_isValid;
}

QString OAIDeveloper::getDeveloperId() const {
    return m_developer_id;
}
void OAIDeveloper::setDeveloperId(const QString &developer_id) {
    m_developer_id = developer_id;
    m_developer_id_isSet = true;
}

bool OAIDeveloper::is_developer_id_Set() const{
    return m_developer_id_isSet;
}

bool OAIDeveloper::is_developer_id_Valid() const{
    return m_developer_id_isValid;
}

QString OAIDeveloper::getEmail() const {
    return m_email;
}
void OAIDeveloper::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIDeveloper::is_email_Set() const{
    return m_email_isSet;
}

bool OAIDeveloper::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIDeveloper::getName() const {
    return m_name;
}
void OAIDeveloper::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDeveloper::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDeveloper::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDeveloper::getType() const {
    return m_type;
}
void OAIDeveloper::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIDeveloper::is_type_Set() const{
    return m_type_isSet;
}

bool OAIDeveloper::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIDeveloper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_developer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeveloper::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_isValid && m_developer_id_isValid && true;
}

} // namespace OpenAPI
