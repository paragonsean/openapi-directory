/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Transaction from '../model/Transaction';

/**
* CustomGatewayProcessPaymentsAndRefunds service.
* @module api/CustomGatewayProcessPaymentsAndRefundsApi
* @version 2.0.24
*/
export default class CustomGatewayProcessPaymentsAndRefundsApi {

    /**
    * Constructs a new CustomGatewayProcessPaymentsAndRefundsApi. 
    * @alias module:api/CustomGatewayProcessPaymentsAndRefundsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the customGatewayPaymentOwnershipIdPost operation.
     * @callback module:api/CustomGatewayProcessPaymentsAndRefundsApi~customGatewayPaymentOwnershipIdPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Transaction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a payment for an app on behalf of a user
     * - Results are returned for the market provided within the basic authentication credentials  - Payments must be enabled and 'Custom' must be selected as the gateway in order to use this API endpoint 
     * @param {String} ownershipId The id of the ownership record involved in this transaction
     * @param {Number} amount The total amount paid in cents
     * @param {Object} opts Optional parameters
     * @param {Number} [date] The date (in milliseconds) of when this payment was made
     * @param {Number} [feeAmount] The fee (in cents) paid to a payment processors or third parties to process this payment. Default is 0.
     * @param {Number} [marketplaceAmount] The amount (in cents) paid to the marketplace owner as a commission for the purchase of this app. Defaults based on the commission amount configured for this marketplace.
     * @param {Number} [developerAmount] The amount (in cents) paid to the owner of the app. Defaults based on the commission amount configured for this marketplace.
     * @param {String} [customData] A custom JSON object to attach to this transaction
     * @param {module:api/CustomGatewayProcessPaymentsAndRefundsApi~customGatewayPaymentOwnershipIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Transaction}
     */
    customGatewayPaymentOwnershipIdPost(ownershipId, amount, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ownershipId' is set
      if (ownershipId === undefined || ownershipId === null) {
        throw new Error("Missing the required parameter 'ownershipId' when calling customGatewayPaymentOwnershipIdPost");
      }
      // verify the required parameter 'amount' is set
      if (amount === undefined || amount === null) {
        throw new Error("Missing the required parameter 'amount' when calling customGatewayPaymentOwnershipIdPost");
      }

      let pathParams = {
        'ownershipId': ownershipId
      };
      let queryParams = {
        'amount': amount,
        'date': opts['date'],
        'feeAmount': opts['feeAmount'],
        'marketplaceAmount': opts['marketplaceAmount'],
        'developerAmount': opts['developerAmount'],
        'customData': opts['customData']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = Transaction;
      return this.apiClient.callApi(
        '/custom-gateway/payment/{ownershipId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customGatewayRefundOwnershipIdPost operation.
     * @callback module:api/CustomGatewayProcessPaymentsAndRefundsApi~customGatewayRefundOwnershipIdPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Transaction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fully or partially refund payment for an app on behalf of a user
     * - Results are returned for the market provided within the basic authentication credentials - Payments must be enabled and 'Custom' must be selected as the gateway in order to use this API endpoint 
     * @param {String} ownershipId The id of the ownership record involved in this transaction
     * @param {Number} amount The total amount refunded in cents
     * @param {Object} opts Optional parameters
     * @param {Number} [date] The date (in milliseconds) of when this refund was made
     * @param {Number} [feeAmount] The fee (in cents) recovered from a payment processor or third party to process this payment. The default value is 0
     * @param {Number} [marketplaceAmount] The amount (in cents) recovered from the marketplace owner as a commission refund for the purchase of this app
     * @param {Number} [developerAmount] The amount (in cents) recovered from the owner of the app
     * @param {String} [customData] A custom JSON object to attach to this transaction
     * @param {module:api/CustomGatewayProcessPaymentsAndRefundsApi~customGatewayRefundOwnershipIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Transaction}
     */
    customGatewayRefundOwnershipIdPost(ownershipId, amount, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ownershipId' is set
      if (ownershipId === undefined || ownershipId === null) {
        throw new Error("Missing the required parameter 'ownershipId' when calling customGatewayRefundOwnershipIdPost");
      }
      // verify the required parameter 'amount' is set
      if (amount === undefined || amount === null) {
        throw new Error("Missing the required parameter 'amount' when calling customGatewayRefundOwnershipIdPost");
      }

      let pathParams = {
        'ownershipId': ownershipId
      };
      let queryParams = {
        'amount': amount,
        'date': opts['date'],
        'feeAmount': opts['feeAmount'],
        'marketplaceAmount': opts['marketplaceAmount'],
        'developerAmount': opts['developerAmount'],
        'customData': opts['customData']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = Transaction;
      return this.apiClient.callApi(
        '/custom-gateway/refund/{ownershipId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
