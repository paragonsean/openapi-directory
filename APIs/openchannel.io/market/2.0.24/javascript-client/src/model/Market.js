/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Attributes from './Attributes';
import CategoryGroups from './CategoryGroups';

/**
 * The Market model module.
 * @module model/Market
 * @version 2.0.24
 */
class Market {
    /**
     * Constructs a new <code>Market</code>.
     * A marketplace
     * @alias module:model/Market
     * @param attributes {Array.<module:model/Attributes>} The different app attributes supported by this marketplace
     * @param marketplaceId {String} The id of this marketplace
     * @param previewAppUrl {String} The URL template for previewing apps on this marketplace
     * @param viewAppUrl {String} The URL template for viewing apps on this marketplace
     */
    constructor(attributes, marketplaceId, previewAppUrl, viewAppUrl) { 
        
        Market.initialize(this, attributes, marketplaceId, previewAppUrl, viewAppUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributes, marketplaceId, previewAppUrl, viewAppUrl) { 
        obj['attributes'] = attributes;
        obj['marketplaceId'] = marketplaceId;
        obj['previewAppUrl'] = previewAppUrl;
        obj['viewAppUrl'] = viewAppUrl;
    }

    /**
     * Constructs a <code>Market</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Market} obj Optional instance to populate.
     * @return {module:model/Market} The populated <code>Market</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Market();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], [Attributes]);
            }
            if (data.hasOwnProperty('categoryGroups')) {
                obj['categoryGroups'] = ApiClient.convertToType(data['categoryGroups'], [CategoryGroups]);
            }
            if (data.hasOwnProperty('marketplaceId')) {
                obj['marketplaceId'] = ApiClient.convertToType(data['marketplaceId'], 'String');
            }
            if (data.hasOwnProperty('previewAppUrl')) {
                obj['previewAppUrl'] = ApiClient.convertToType(data['previewAppUrl'], 'String');
            }
            if (data.hasOwnProperty('viewAppUrl')) {
                obj['viewAppUrl'] = ApiClient.convertToType(data['viewAppUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Market</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Market</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Market.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attributes'])) {
                throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
            }
            // validate the optional field `attributes` (array)
            for (const item of data['attributes']) {
                Attributes.validateJSON(item);
            };
        }
        if (data['categoryGroups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categoryGroups'])) {
                throw new Error("Expected the field `categoryGroups` to be an array in the JSON data but got " + data['categoryGroups']);
            }
            // validate the optional field `categoryGroups` (array)
            for (const item of data['categoryGroups']) {
                CategoryGroups.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['marketplaceId'] && !(typeof data['marketplaceId'] === 'string' || data['marketplaceId'] instanceof String)) {
            throw new Error("Expected the field `marketplaceId` to be a primitive type in the JSON string but got " + data['marketplaceId']);
        }
        // ensure the json data is a string
        if (data['previewAppUrl'] && !(typeof data['previewAppUrl'] === 'string' || data['previewAppUrl'] instanceof String)) {
            throw new Error("Expected the field `previewAppUrl` to be a primitive type in the JSON string but got " + data['previewAppUrl']);
        }
        // ensure the json data is a string
        if (data['viewAppUrl'] && !(typeof data['viewAppUrl'] === 'string' || data['viewAppUrl'] instanceof String)) {
            throw new Error("Expected the field `viewAppUrl` to be a primitive type in the JSON string but got " + data['viewAppUrl']);
        }

        return true;
    }


}

Market.RequiredProperties = ["attributes", "marketplaceId", "previewAppUrl", "viewAppUrl"];

/**
 * The different app attributes supported by this marketplace
 * @member {Array.<module:model/Attributes>} attributes
 */
Market.prototype['attributes'] = undefined;

/**
 * The category groups supported by this marketplace
 * @member {Array.<module:model/CategoryGroups>} categoryGroups
 */
Market.prototype['categoryGroups'] = undefined;

/**
 * The id of this marketplace
 * @member {String} marketplaceId
 */
Market.prototype['marketplaceId'] = undefined;

/**
 * The URL template for previewing apps on this marketplace
 * @member {String} previewAppUrl
 */
Market.prototype['previewAppUrl'] = undefined;

/**
 * The URL template for viewing apps on this marketplace
 * @member {String} viewAppUrl
 */
Market.prototype['viewAppUrl'] = undefined;






export default Market;

