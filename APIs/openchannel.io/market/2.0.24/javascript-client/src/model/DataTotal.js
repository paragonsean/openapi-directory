/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataTotal model module.
 * @module model/DataTotal
 * @version 2.0.24
 */
class DataTotal {
    /**
     * Constructs a new <code>DataTotal</code>.
     * The totals for the field
     * @alias module:model/DataTotal
     */
    constructor() { 
        
        DataTotal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataTotal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataTotal} obj Optional instance to populate.
     * @return {module:model/DataTotal} The populated <code>DataTotal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataTotal();

            if (data.hasOwnProperty('$field')) {
                obj['$field'] = ApiClient.convertToType(data['$field'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataTotal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataTotal</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The totals for the field
 * @member {Number} $field
 */
DataTotal.prototype['$field'] = undefined;






export default DataTotal;

