/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppEntry model module.
 * @module model/AppEntry
 * @version 2.0.24
 */
class AppEntry {
    /**
     * Constructs a new <code>AppEntry</code>.
     * 
     * @alias module:model/AppEntry
     * @param appId {String} The id of the app involved in this action
     * @param date {Number} The date (in millis) of when this action was performed
     */
    constructor(appId, date) { 
        
        AppEntry.initialize(this, appId, date);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appId, date) { 
        obj['appId'] = appId;
        obj['date'] = date;
    }

    /**
     * Constructs a <code>AppEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppEntry} obj Optional instance to populate.
     * @return {module:model/AppEntry} The populated <code>AppEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppEntry();

            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppEntry</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppEntry.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }

        return true;
    }


}

AppEntry.RequiredProperties = ["appId", "date"];

/**
 * The id of the app involved in this action
 * @member {String} appId
 */
AppEntry.prototype['appId'] = undefined;

/**
 * The date (in millis) of when this action was performed
 * @member {Number} date
 */
AppEntry.prototype['date'] = undefined;






export default AppEntry;

