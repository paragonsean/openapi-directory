/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppTotal from './AppTotal';
import DataTotal from './DataTotal';

/**
 * The Total model module.
 * @module model/Total
 * @version 2.0.24
 */
class Total {
    /**
     * Constructs a new <code>Total</code>.
     * The total number of events for a particular field
     * @alias module:model/Total
     * @param apps {module:model/AppTotal} 
     * @param totals {module:model/DataTotal} 
     */
    constructor(apps, totals) { 
        
        Total.initialize(this, apps, totals);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apps, totals) { 
        obj['apps'] = apps;
        obj['totals'] = totals;
    }

    /**
     * Constructs a <code>Total</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Total} obj Optional instance to populate.
     * @return {module:model/Total} The populated <code>Total</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Total();

            if (data.hasOwnProperty('apps')) {
                obj['apps'] = AppTotal.constructFromObject(data['apps']);
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Number');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Number');
            }
            if (data.hasOwnProperty('totals')) {
                obj['totals'] = DataTotal.constructFromObject(data['totals']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Total</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Total</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Total.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `apps`
        if (data['apps']) { // data not null
          AppTotal.validateJSON(data['apps']);
        }
        // validate the optional field `totals`
        if (data['totals']) { // data not null
          DataTotal.validateJSON(data['totals']);
        }

        return true;
    }


}

Total.RequiredProperties = ["apps", "totals"];

/**
 * @member {module:model/AppTotal} apps
 */
Total.prototype['apps'] = undefined;

/**
 * The end date for this total (in millis)
 * @member {Number} end
 */
Total.prototype['end'] = undefined;

/**
 * The start date for this total (in millis)
 * @member {Number} start
 */
Total.prototype['start'] = undefined;

/**
 * @member {module:model/DataTotal} totals
 */
Total.prototype['totals'] = undefined;






export default Total;

