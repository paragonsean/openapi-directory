/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Model from './Model';
import Ownership from './Ownership';
import Restrictions from './Restrictions';
import Status from './Status';

/**
 * The App model module.
 * @module model/App
 * @version 2.0.24
 */
class App {
    /**
     * Constructs a new <code>App</code>.
     * An app
     * @alias module:model/App
     * @param allow {module:model/Restrictions} 
     * @param appId {String} The id of this app
     * @param attributes {Object} A custom defined list of app attributes
     * @param created {Number} The date (in millis) that this app was created
     * @param customData {Object} A custom JSON object that you can create and attach to this record
     * @param developerId {String} The id of the developer that owns this app
     * @param isLive {Boolean} True if this is the live version of the app
     * @param lastUpdated {Number} The date (in millis) that this app was last modified
     * @param model {Array.<module:model/Model>} The models that describes the cost and pricing for this app
     * @param name {String} The name of this app
     * @param randomize {Number} A random number that changes hourly and is used for achieving a random sort order when displaying apps
     * @param rating {Number} The average review rating for this app. Reviews are rated from 100 (one star) to 500 (five star)
     * @param restrict {module:model/Restrictions} 
     * @param safeName {Array.<String>} URL safe aliases that can be used to identify this app even after name changes. The current alias is always at position 0.
     * @param status {module:model/Status} 
     * @param version {Number} The version number for this app
     */
    constructor(allow, appId, attributes, created, customData, developerId, isLive, lastUpdated, model, name, randomize, rating, restrict, safeName, status, version) { 
        
        App.initialize(this, allow, appId, attributes, created, customData, developerId, isLive, lastUpdated, model, name, randomize, rating, restrict, safeName, status, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allow, appId, attributes, created, customData, developerId, isLive, lastUpdated, model, name, randomize, rating, restrict, safeName, status, version) { 
        obj['allow'] = allow;
        obj['appId'] = appId;
        obj['attributes'] = attributes;
        obj['created'] = created;
        obj['customData'] = customData;
        obj['developerId'] = developerId;
        obj['isLive'] = isLive;
        obj['lastUpdated'] = lastUpdated;
        obj['model'] = model;
        obj['name'] = name;
        obj['randomize'] = randomize;
        obj['rating'] = rating;
        obj['restrict'] = restrict;
        obj['safeName'] = safeName;
        obj['status'] = status;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>App</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/App} obj Optional instance to populate.
     * @return {module:model/App} The populated <code>App</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new App();

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], ['String']);
            }
            if (data.hasOwnProperty('allow')) {
                obj['allow'] = Restrictions.constructFromObject(data['allow']);
            }
            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], Object);
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('customData')) {
                obj['customData'] = ApiClient.convertToType(data['customData'], Object);
            }
            if (data.hasOwnProperty('developerId')) {
                obj['developerId'] = ApiClient.convertToType(data['developerId'], 'String');
            }
            if (data.hasOwnProperty('isLive')) {
                obj['isLive'] = ApiClient.convertToType(data['isLive'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Number');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], [Model]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('ownership')) {
                obj['ownership'] = Ownership.constructFromObject(data['ownership']);
            }
            if (data.hasOwnProperty('randomize')) {
                obj['randomize'] = ApiClient.convertToType(data['randomize'], 'Number');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('restrict')) {
                obj['restrict'] = Restrictions.constructFromObject(data['restrict']);
            }
            if (data.hasOwnProperty('reviewCount')) {
                obj['reviewCount'] = ApiClient.convertToType(data['reviewCount'], 'Number');
            }
            if (data.hasOwnProperty('safeName')) {
                obj['safeName'] = ApiClient.convertToType(data['safeName'], ['String']);
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = ApiClient.convertToType(data['statistics'], Object);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('submittedDate')) {
                obj['submittedDate'] = ApiClient.convertToType(data['submittedDate'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>App</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>App</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of App.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['access'])) {
            throw new Error("Expected the field `access` to be an array in the JSON data but got " + data['access']);
        }
        // validate the optional field `allow`
        if (data['allow']) { // data not null
          Restrictions.validateJSON(data['allow']);
        }
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }
        // ensure the json data is a string
        if (data['developerId'] && !(typeof data['developerId'] === 'string' || data['developerId'] instanceof String)) {
            throw new Error("Expected the field `developerId` to be a primitive type in the JSON string but got " + data['developerId']);
        }
        if (data['model']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['model'])) {
                throw new Error("Expected the field `model` to be an array in the JSON data but got " + data['model']);
            }
            // validate the optional field `model` (array)
            for (const item of data['model']) {
                Model.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `ownership`
        if (data['ownership']) { // data not null
          Ownership.validateJSON(data['ownership']);
        }
        // validate the optional field `restrict`
        if (data['restrict']) { // data not null
          Restrictions.validateJSON(data['restrict']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['safeName'])) {
            throw new Error("Expected the field `safeName` to be an array in the JSON data but got " + data['safeName']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status.validateJSON(data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

App.RequiredProperties = ["allow", "appId", "attributes", "created", "customData", "developerId", "isLive", "lastUpdated", "model", "name", "randomize", "rating", "restrict", "safeName", "status", "version"];

/**
 * A custom defined list of access requirements
 * @member {Array.<String>} access
 */
App.prototype['access'] = undefined;

/**
 * @member {module:model/Restrictions} allow
 */
App.prototype['allow'] = undefined;

/**
 * The id of this app
 * @member {String} appId
 */
App.prototype['appId'] = undefined;

/**
 * A custom defined list of app attributes
 * @member {Object} attributes
 */
App.prototype['attributes'] = undefined;

/**
 * The date (in millis) that this app was created
 * @member {Number} created
 */
App.prototype['created'] = undefined;

/**
 * A custom JSON object that you can create and attach to this record
 * @member {Object} customData
 */
App.prototype['customData'] = undefined;

/**
 * The id of the developer that owns this app
 * @member {String} developerId
 */
App.prototype['developerId'] = undefined;

/**
 * True if this is the live version of the app
 * @member {Boolean} isLive
 */
App.prototype['isLive'] = undefined;

/**
 * The date (in millis) that this app was last modified
 * @member {Number} lastUpdated
 */
App.prototype['lastUpdated'] = undefined;

/**
 * The models that describes the cost and pricing for this app
 * @member {Array.<module:model/Model>} model
 */
App.prototype['model'] = undefined;

/**
 * The name of this app
 * @member {String} name
 */
App.prototype['name'] = undefined;

/**
 * @member {module:model/Ownership} ownership
 */
App.prototype['ownership'] = undefined;

/**
 * A random number that changes hourly and is used for achieving a random sort order when displaying apps
 * @member {Number} randomize
 */
App.prototype['randomize'] = undefined;

/**
 * The average review rating for this app. Reviews are rated from 100 (one star) to 500 (five star)
 * @member {Number} rating
 */
App.prototype['rating'] = undefined;

/**
 * @member {module:model/Restrictions} restrict
 */
App.prototype['restrict'] = undefined;

/**
 * The number of approved reviews for this app.
 * @member {Number} reviewCount
 */
App.prototype['reviewCount'] = undefined;

/**
 * URL safe aliases that can be used to identify this app even after name changes. The current alias is always at position 0.
 * @member {Array.<String>} safeName
 */
App.prototype['safeName'] = undefined;

/**
 * A field containing summary stats about the app and is specially designed to allow apps to be sorted by popularity
 * @member {Object} statistics
 */
App.prototype['statistics'] = undefined;

/**
 * @member {module:model/Status} status
 */
App.prototype['status'] = undefined;

/**
 * The date (in millis) that this app was submitted for approval
 * @member {Number} submittedDate
 */
App.prototype['submittedDate'] = undefined;

/**
 * The type for this app
 * @member {String} type
 */
App.prototype['type'] = undefined;

/**
 * The version number for this app
 * @member {Number} version
 */
App.prototype['version'] = undefined;






export default App;

