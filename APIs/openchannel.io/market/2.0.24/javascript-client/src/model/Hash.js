/**
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Hash model module.
 * @module model/Hash
 * @version 2.0.24
 */
class Hash {
    /**
     * Constructs a new <code>Hash</code>.
     * The hashes requested for the file.
     * @alias module:model/Hash
     */
    constructor() { 
        
        Hash.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Hash</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Hash} obj Optional instance to populate.
     * @return {module:model/Hash} The populated <code>Hash</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Hash();

            if (data.hasOwnProperty('MD5')) {
                obj['MD5'] = ApiClient.convertToType(data['MD5'], 'String');
            }
            if (data.hasOwnProperty('SHA-1')) {
                obj['SHA-1'] = ApiClient.convertToType(data['SHA-1'], 'String');
            }
            if (data.hasOwnProperty('SHA-256')) {
                obj['SHA-256'] = ApiClient.convertToType(data['SHA-256'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Hash</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Hash</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['MD5'] && !(typeof data['MD5'] === 'string' || data['MD5'] instanceof String)) {
            throw new Error("Expected the field `MD5` to be a primitive type in the JSON string but got " + data['MD5']);
        }
        // ensure the json data is a string
        if (data['SHA-1'] && !(typeof data['SHA-1'] === 'string' || data['SHA-1'] instanceof String)) {
            throw new Error("Expected the field `SHA-1` to be a primitive type in the JSON string but got " + data['SHA-1']);
        }
        // ensure the json data is a string
        if (data['SHA-256'] && !(typeof data['SHA-256'] === 'string' || data['SHA-256'] instanceof String)) {
            throw new Error("Expected the field `SHA-256` to be a primitive type in the JSON string but got " + data['SHA-256']);
        }

        return true;
    }


}



/**
 * The MD5 hash for this uploaded file.
 * @member {String} MD5
 */
Hash.prototype['MD5'] = undefined;

/**
 * The SHA-1 hash for this uploaded file.
 * @member {String} SHA-1
 */
Hash.prototype['SHA-1'] = undefined;

/**
 * The SHA-256 hash for this uploaded file.
 * @member {String} SHA-256
 */
Hash.prototype['SHA-256'] = undefined;






export default Hash;

