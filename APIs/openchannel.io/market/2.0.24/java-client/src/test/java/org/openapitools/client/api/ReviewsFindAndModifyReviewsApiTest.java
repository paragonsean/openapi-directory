/*
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Review;
import org.openapitools.client.model.ReviewPages;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReviewsFindAndModifyReviewsApi
 */
@Disabled
public class ReviewsFindAndModifyReviewsApiTest {

    private final ReviewsFindAndModifyReviewsApi api = new ReviewsFindAndModifyReviewsApi();

    /**
     * Find reviews for a particular App and marketplace. Results are automatically paginated when limit is set
     *
     * - Results are paginated and the default is value is 100 if no limit is provided 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewsGetTest() throws ApiException {
        String query = null;
        String sort = null;
        Integer pageNumber = null;
        Integer limit = null;
        ReviewPages response = api.reviewsGet(query, sort, pageNumber, limit);
        // TODO: test validations
    }

    /**
     * Post a review from a User and returns the new post
     *
     * - Only authenticated users are able to post reviews - Returns the newly created review 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewsPostTest() throws ApiException {
        String appId = null;
        String userId = null;
        String headline = null;
        Integer rating = null;
        String description = null;
        String userAccountId = null;
        String type = null;
        Boolean mustOwnApp = null;
        Boolean autoApprove = null;
        String customData = null;
        Review response = api.reviewsPost(appId, userId, headline, rating, description, userAccountId, type, mustOwnApp, autoApprove, customData);
        // TODO: test validations
    }

    /**
     * Remove a review
     *
     * - Only the review author is able to remove their review 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewsReviewIdDeleteTest() throws ApiException {
        String reviewId = null;
        String userId = null;
        String userAccountId = null;
        api.reviewsReviewIdDelete(reviewId, userId, userAccountId);
        // TODO: test validations
    }

    /**
     * Find a Review within a particular App and marketplace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewsReviewIdGetTest() throws ApiException {
        String reviewId = null;
        Review response = api.reviewsReviewIdGet(reviewId);
        // TODO: test validations
    }

    /**
     * Update a review fields
     *
     * - Only the review author is able to update their review - Returns the newly updated review 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewsReviewIdPatchTest() throws ApiException {
        String reviewId = null;
        String userId = null;
        String userAccountId = null;
        String headline = null;
        Integer rating = null;
        String description = null;
        String customData = null;
        Review response = api.reviewsReviewIdPatch(reviewId, userId, userAccountId, headline, rating, description, customData);
        // TODO: test validations
    }

    /**
     * Update a review from a User and returns the new post
     *
     * - Only the review author is able to update their review - Returns the newly updated review 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewsReviewIdPostTest() throws ApiException {
        String reviewId = null;
        String userId = null;
        String userAccountId = null;
        String headline = null;
        Integer rating = null;
        String description = null;
        String customData = null;
        Review response = api.reviewsReviewIdPost(reviewId, userId, userAccountId, headline, rating, description, customData);
        // TODO: test validations
    }

}
