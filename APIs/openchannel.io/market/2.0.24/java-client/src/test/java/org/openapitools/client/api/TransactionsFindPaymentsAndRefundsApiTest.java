/*
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Transaction;
import org.openapitools.client.model.TransactionPages;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionsFindPaymentsAndRefundsApi
 */
@Disabled
public class TransactionsFindPaymentsAndRefundsApiTest {

    private final TransactionsFindPaymentsAndRefundsApi api = new TransactionsFindPaymentsAndRefundsApi();

    /**
     * Returns a paginated list of transactions
     *
     * - Results are paginated and the default is value is 100 if no limit is provided 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsGetTest() throws ApiException {
        String query = null;
        String sort = null;
        Integer pageNumber = null;
        Integer limit = null;
        TransactionPages response = api.transactionsGet(query, sort, pageNumber, limit);
        // TODO: test validations
    }

    /**
     * Deleted a transaction
     *
     * - Results are returned for the market provided within the basic authentication credentials 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsTransactionIdDeleteTest() throws ApiException {
        String transactionId = null;
        api.transactionsTransactionIdDelete(transactionId);
        // TODO: test validations
    }

    /**
     * Returns a transaction
     *
     * - Results are returned for the market provided within the basic authentication credentials 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsTransactionIdGetTest() throws ApiException {
        String transactionId = null;
        api.transactionsTransactionIdGet(transactionId);
        // TODO: test validations
    }

    /**
     * Updates a transaction
     *
     * - Results are returned for the market provided within the basic authentication credentials 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transactionsTransactionIdPostTest() throws ApiException {
        String transactionId = null;
        String customData = null;
        Transaction response = api.transactionsTransactionIdPost(transactionId, customData);
        // TODO: test validations
    }

}
