/*
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UserAccount;
import org.openapitools.client.model.UserAccountPages;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserAccountsFindAndModifyUserAccountsApi
 */
@Disabled
public class UserAccountsFindAndModifyUserAccountsApiTest {

    private final UserAccountsFindAndModifyUserAccountsApi api = new UserAccountsFindAndModifyUserAccountsApi();

    /**
     * Returns a paginated list of userAccounts
     *
     * - Results are paginated and the default is value is 1000 if no limit is provided 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userAccountsGetTest() throws ApiException {
        String query = null;
        String sort = null;
        Integer pageNumber = null;
        Integer limit = null;
        UserAccountPages response = api.userAccountsGet(query, sort, pageNumber, limit);
        // TODO: test validations
    }

    /**
     * Removes the user account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userAccountsUserAccountIdDeleteTest() throws ApiException {
        String userAccountId = null;
        api.userAccountsUserAccountIdDelete(userAccountId);
        // TODO: test validations
    }

    /**
     * Returns a single user account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userAccountsUserAccountIdGetTest() throws ApiException {
        String userAccountId = null;
        UserAccount response = api.userAccountsUserAccountIdGet(userAccountId);
        // TODO: test validations
    }

    /**
     * Updates the user account fields
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userAccountsUserAccountIdPatchTest() throws ApiException {
        String userAccountId = null;
        String userId = null;
        String email = null;
        String name = null;
        String customData = null;
        UserAccount response = api.userAccountsUserAccountIdPatch(userAccountId, userId, email, name, customData);
        // TODO: test validations
    }

    /**
     * Updates the user account or adds the user account if it doesn&#39;t exist
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userAccountsUserAccountIdPostTest() throws ApiException {
        String userAccountId = null;
        String userId = null;
        String email = null;
        String name = null;
        String customData = null;
        UserAccount response = api.userAccountsUserAccountIdPost(userAccountId, userId, email, name, customData);
        // TODO: test validations
    }

}
