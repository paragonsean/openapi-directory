/*
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.FileDownload;
import org.openapitools.client.model.ModelFile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FilesUploadFilesApi
 */
@Disabled
public class FilesUploadFilesApiTest {

    private final FilesUploadFilesApi api = new FilesUploadFilesApi();

    /**
     * Get the details for a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesByIdOrUrlGetTest() throws ApiException {
        String fileIdOrUrl = null;
        ModelFile response = api.filesByIdOrUrlGet(fileIdOrUrl);
        // TODO: test validations
    }

    /**
     * A signed URL for downloading a private file can be returned by providing the fileId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesDownloadGetTest() throws ApiException {
        String fileId = null;
        Integer validSeconds = null;
        FileDownload response = api.filesDownloadGet(fileId, validSeconds);
        // TODO: test validations
    }

    /**
     * Returns a paginated list of files
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesGetTest() throws ApiException {
        String query = null;
        String sort = null;
        Integer pageNumber = null;
        Integer limit = null;
        ModelFile response = api.filesGet(query, sort, pageNumber, limit);
        // TODO: test validations
    }

    /**
     * Uploads a file.
     *
     * - WARNING: File URLs or fileIds must be stored somewhere within the customData field for an app, review, developer or user. Unused files will be removed after a few days.  - This method is called on behalf of a developer. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesPostTest() throws ApiException {
        File _file = null;
        Boolean isPrivate = null;
        String hash = null;
        ModelFile response = api.filesPost(_file, isPrivate, hash);
        // TODO: test validations
    }

    /**
     * Uploads a file from a URL
     *
     * - WARNING: File URLs or fileIds must be stored somewhere within the customData field for an app, review, developer or user. Unused files will be removed after a few days. - This method is called on behalf of a developer. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filesUrlPostTest() throws ApiException {
        String url = null;
        Boolean isPrivate = null;
        ModelFile response = api.filesUrlPost(url, isPrivate);
        // TODO: test validations
    }

}
