/*
 * OpenChannel Market API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Ownership;
import org.openapitools.client.model.OwnershipPages;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OwnershipFindOwnershipApi
 */
@Disabled
public class OwnershipFindOwnershipApiTest {

    private final OwnershipFindOwnershipApi api = new OwnershipFindOwnershipApi();

    /**
     * Returns a paginated list of app licenses
     *
     *  - Results are returned for the market provided within the basic authentication credentials 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ownershipGetTest() throws ApiException {
        String query = null;
        String sort = null;
        Integer pageNumber = null;
        Integer limit = null;
        OwnershipPages response = api.ownershipGet(query, sort, pageNumber, limit);
        // TODO: test validations
    }

    /**
     * Aquires an app license for a user (installs app)
     *
     *  - This method is called on behalf of a user - This method requires either a modelId from the app or a custom model - User data and statistics are recorded when this method is called 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ownershipInstallPostTest() throws ApiException {
        String appId = null;
        String userId = null;
        String modelId = null;
        String model = null;
        String customData = null;
        Ownership response = api.ownershipInstallPost(appId, userId, modelId, model, customData);
        // TODO: test validations
    }

    /**
     * Returns an ownership record
     *
     *  - Results are returned for the market provided within the basic authentication credentials 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ownershipOwnershipIdGetTest() throws ApiException {
        String ownershipId = null;
        Ownership response = api.ownershipOwnershipIdGet(ownershipId);
        // TODO: test validations
    }

    /**
     * Updates ownership fields
     *
     *  - Results are returned for the market provided within the basic authentication credentials 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ownershipOwnershipIdPatchTest() throws ApiException {
        String ownershipId = null;
        String customData = null;
        Long expires = null;
        Ownership response = api.ownershipOwnershipIdPatch(ownershipId, customData, expires);
        // TODO: test validations
    }

    /**
     * Updates an ownership record
     *
     *  - Results are returned for the market provided within the basic authentication credentials 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ownershipOwnershipIdPostTest() throws ApiException {
        String ownershipId = null;
        String customData = null;
        Long expires = null;
        Ownership response = api.ownershipOwnershipIdPost(ownershipId, customData, expires);
        // TODO: test validations
    }

    /**
     * Uninstalls a license for a particular user and app (uninstalls app)
     *
     *  - This method is called on behalf of a user - User data and statistics are recorded when this method is called 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ownershipUninstallOwnershipIdPostTest() throws ApiException {
        String ownershipId = null;
        String userId = null;
        Boolean cancelOwnership = null;
        String customData = null;
        Ownership response = api.ownershipUninstallOwnershipIdPost(ownershipId, userId, cancelOwnership, customData);
        // TODO: test validations
    }

}
