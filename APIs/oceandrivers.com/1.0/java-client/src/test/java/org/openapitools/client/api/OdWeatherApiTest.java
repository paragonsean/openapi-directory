/*
 * ODWeather
 * This is the api to access the ODWeather API information
 *
 * The version of the OpenAPI document: 1.0
 * Contact: matiasbonet@oceandrivers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OdWeatherApi
 */
@Disabled
public class OdWeatherApiTest {

    private final OdWeatherApi api = new OdWeatherApi();

    /**
     * Get forecast and realtime information for known points&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void compareStationTest() throws ApiException {
        String stationName = null;
        api.compareStation(stationName);
        // TODO: test validations
    }

    /**
     * Get data from the aemet stations&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAemetStationTest() throws ApiException {
        String stationName = null;
        String period = null;
        api.getAemetStation(stationName, period);
        // TODO: test validations
    }

    /**
     * Get data from the easywind weather stations&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEasywindTest() throws ApiException {
        String easywindId = null;
        String period = null;
        api.getEasywind(easywindId, period);
        // TODO: test validations
    }

    /**
     * Get stations in an event&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventStationsTest() throws ApiException {
        String eventId = null;
        api.getEventStations(eventId);
        // TODO: test validations
    }

    /**
     * Get forecast points of a yatchclub&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getForecastPointsTest() throws ApiException {
        String yatchclubid = null;
        String language = null;
        api.getForecastPoints(yatchclubid, language);
        // TODO: test validations
    }

    /**
     * Get timeseries forecast information&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getForecastTimeSeriesTest() throws ApiException {
        Float latitude = null;
        Float longitude = null;
        String weather = null;
        String inittime = null;
        String endtime = null;
        Integer days = null;
        Integer hours = null;
        String wave = null;
        String entryid = null;
        api.getForecastTimeSeries(latitude, longitude, weather, inittime, endtime, days, hours, wave, entryid);
        // TODO: test validations
    }

    /**
     * Get timeseries forecast information&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getForecastTimeSeriesWrfTest() throws ApiException {
        Float latitude = null;
        Float longitude = null;
        String weather = null;
        String inittime = null;
        String endtime = null;
        Integer days = null;
        Integer hours = null;
        String wave = null;
        String entryid = null;
        api.getForecastTimeSeriesWrf(latitude, longitude, weather, inittime, endtime, days, hours, wave, entryid);
        // TODO: test validations
    }

    /**
     * Get data from the socib bahia de palma buoy&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSocibWeatherStationTest() throws ApiException {
        String stationName = null;
        String period = null;
        api.getSocibWeatherStation(stationName, period);
        // TODO: test validations
    }

    /**
     * Get data from the weather display software&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWeatherDisplayTest() throws ApiException {
        String stationName = null;
        String period = null;
        api.getWeatherDisplay(stationName, period);
        // TODO: test validations
    }

    /**
     * Get forecast and realtime information for known points&lt;br/&gt;None
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebCamsTest() throws ApiException {
        api.getWebCams();
        // TODO: test validations
    }

}
