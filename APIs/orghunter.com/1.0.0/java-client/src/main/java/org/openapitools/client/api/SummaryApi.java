/*
 * OrgHunter
 * Get the latest IRS data and most up to date charity information for your website or application
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SummaryApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public SummaryApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SummaryApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getSummary
     * @param ein Employer Identification Number (EIN) (optional)
     * @param searchTerm Charity Name or Keyword. Example: humane society or cancer (optional)
     * @param city City Name. Example: Miami (optional)
     * @param state State Name - Two letter state abbreviation (optional)
     * @param zipCode Zipcode Value - 5 digit zipcode value (optional)
     * @param category Category Value Selected from Categories API (optional)
     * @param eligible eligible&#x3D;1 will return only organizations that are tax deductible and in good standing with the IRS (optional)
     * @param start Record Set Start Position (optional)
     * @param rows Records Per Page. Default Value &#x3D; 20 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSummaryCall(String ein, String searchTerm, String city, String state, String zipCode, String category, String eligible, String start, String rows, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/charitysearch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (ein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ein", ein));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchTerm", searchTerm));
        }

        if (city != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("city", city));
        }

        if (state != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("state", state));
        }

        if (zipCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("zipCode", zipCode));
        }

        if (category != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("category", category));
        }

        if (eligible != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eligible", eligible));
        }

        if (start != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("start", start));
        }

        if (rows != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rows", rows));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "user_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getSummaryValidateBeforeCall(String ein, String searchTerm, String city, String state, String zipCode, String category, String eligible, String start, String rows, final ApiCallback _callback) throws ApiException {
        return getSummaryCall(ein, searchTerm, city, state, zipCode, category, eligible, start, rows, _callback);

    }

    /**
     * Get summary data!
     * &lt;p&gt;This operation provides summary data.&lt;/p&gt;
     * @param ein Employer Identification Number (EIN) (optional)
     * @param searchTerm Charity Name or Keyword. Example: humane society or cancer (optional)
     * @param city City Name. Example: Miami (optional)
     * @param state State Name - Two letter state abbreviation (optional)
     * @param zipCode Zipcode Value - 5 digit zipcode value (optional)
     * @param category Category Value Selected from Categories API (optional)
     * @param eligible eligible&#x3D;1 will return only organizations that are tax deductible and in good standing with the IRS (optional)
     * @param start Record Set Start Position (optional)
     * @param rows Records Per Page. Default Value &#x3D; 20 (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public void getSummary(String ein, String searchTerm, String city, String state, String zipCode, String category, String eligible, String start, String rows) throws ApiException {
        getSummaryWithHttpInfo(ein, searchTerm, city, state, zipCode, category, eligible, start, rows);
    }

    /**
     * Get summary data!
     * &lt;p&gt;This operation provides summary data.&lt;/p&gt;
     * @param ein Employer Identification Number (EIN) (optional)
     * @param searchTerm Charity Name or Keyword. Example: humane society or cancer (optional)
     * @param city City Name. Example: Miami (optional)
     * @param state State Name - Two letter state abbreviation (optional)
     * @param zipCode Zipcode Value - 5 digit zipcode value (optional)
     * @param category Category Value Selected from Categories API (optional)
     * @param eligible eligible&#x3D;1 will return only organizations that are tax deductible and in good standing with the IRS (optional)
     * @param start Record Set Start Position (optional)
     * @param rows Records Per Page. Default Value &#x3D; 20 (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> getSummaryWithHttpInfo(String ein, String searchTerm, String city, String state, String zipCode, String category, String eligible, String start, String rows) throws ApiException {
        okhttp3.Call localVarCall = getSummaryValidateBeforeCall(ein, searchTerm, city, state, zipCode, category, eligible, start, rows, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Get summary data! (asynchronously)
     * &lt;p&gt;This operation provides summary data.&lt;/p&gt;
     * @param ein Employer Identification Number (EIN) (optional)
     * @param searchTerm Charity Name or Keyword. Example: humane society or cancer (optional)
     * @param city City Name. Example: Miami (optional)
     * @param state State Name - Two letter state abbreviation (optional)
     * @param zipCode Zipcode Value - 5 digit zipcode value (optional)
     * @param category Category Value Selected from Categories API (optional)
     * @param eligible eligible&#x3D;1 will return only organizations that are tax deductible and in good standing with the IRS (optional)
     * @param start Record Set Start Position (optional)
     * @param rows Records Per Page. Default Value &#x3D; 20 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSummaryAsync(String ein, String searchTerm, String city, String state, String zipCode, String category, String eligible, String start, String rows, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = getSummaryValidateBeforeCall(ein, searchTerm, city, state, zipCode, category, eligible, start, rows, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
