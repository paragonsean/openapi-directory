/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForgotMailToken.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForgotMailToken::OAIForgotMailToken(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForgotMailToken::OAIForgotMailToken() {
    this->initializeModel();
}

OAIForgotMailToken::~OAIForgotMailToken() {}

void OAIForgotMailToken::initializeModel() {

    m_activity_isSet = false;
    m_activity_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;
}

void OAIForgotMailToken::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForgotMailToken::fromJsonObject(QJsonObject json) {

    m_activity_isValid = ::OpenAPI::fromJsonValue(m_activity, json[QString("activity")]);
    m_activity_isSet = !json[QString("activity")].isNull() && m_activity_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;
}

QString OAIForgotMailToken::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForgotMailToken::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_isSet) {
        obj.insert(QString("activity"), ::OpenAPI::toJsonValue(m_activity));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    return obj;
}

QString OAIForgotMailToken::getActivity() const {
    return m_activity;
}
void OAIForgotMailToken::setActivity(const QString &activity) {
    m_activity = activity;
    m_activity_isSet = true;
}

bool OAIForgotMailToken::is_activity_Set() const{
    return m_activity_isSet;
}

bool OAIForgotMailToken::is_activity_Valid() const{
    return m_activity_isValid;
}

QString OAIForgotMailToken::getPassword() const {
    return m_password;
}
void OAIForgotMailToken::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIForgotMailToken::is_password_Set() const{
    return m_password_isSet;
}

bool OAIForgotMailToken::is_password_Valid() const{
    return m_password_isValid;
}

QString OAIForgotMailToken::getToken() const {
    return m_token;
}
void OAIForgotMailToken::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIForgotMailToken::is_token_Set() const{
    return m_token_isSet;
}

bool OAIForgotMailToken::is_token_Valid() const{
    return m_token_isValid;
}

bool OAIForgotMailToken::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForgotMailToken::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_activity_isValid && m_token_isValid && true;
}

} // namespace OpenAPI
