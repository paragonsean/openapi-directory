/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegistrationModel.h
 *
 * 
 */

#ifndef OAIRegistrationModel_H
#define OAIRegistrationModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegistrationModel : public OAIObject {
public:
    OAIRegistrationModel();
    OAIRegistrationModel(QString json);
    ~OAIRegistrationModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCompanyDescription() const;
    void setCompanyDescription(const QString &company_description);
    bool is_company_description_Set() const;
    bool is_company_description_Valid() const;

    QString getCompanyName() const;
    void setCompanyName(const QString &company_name);
    bool is_company_name_Set() const;
    bool is_company_name_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDate1() const;
    void setDate1(const QString &date1);
    bool is_date1_Set() const;
    bool is_date1_Valid() const;

    QString getDate2() const;
    void setDate2(const QString &date2);
    bool is_date2_Set() const;
    bool is_date2_Valid() const;

    QString getDate3() const;
    void setDate3(const QString &date3);
    bool is_date3_Set() const;
    bool is_date3_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    qint32 getNumber1() const;
    void setNumber1(const qint32 &number1);
    bool is_number1_Set() const;
    bool is_number1_Valid() const;

    qint32 getNumber2() const;
    void setNumber2(const qint32 &number2);
    bool is_number2_Set() const;
    bool is_number2_Valid() const;

    qint32 getNumber3() const;
    void setNumber3(const qint32 &number3);
    bool is_number3_Set() const;
    bool is_number3_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStorage() const;
    void setStorage(const QString &storage);
    bool is_storage_Set() const;
    bool is_storage_Valid() const;

    QString getStreetAddress() const;
    void setStreetAddress(const QString &street_address);
    bool is_street_address_Set() const;
    bool is_street_address_Valid() const;

    QString getString1() const;
    void setString1(const QString &string1);
    bool is_string1_Set() const;
    bool is_string1_Valid() const;

    QString getString2() const;
    void setString2(const QString &string2);
    bool is_string2_Set() const;
    bool is_string2_Valid() const;

    QString getString3() const;
    void setString3(const QString &string3);
    bool is_string3_Set() const;
    bool is_string3_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getZip() const;
    void setZip(const QString &zip);
    bool is_zip_Set() const;
    bool is_zip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_company_description;
    bool m_company_description_isSet;
    bool m_company_description_isValid;

    QString m_company_name;
    bool m_company_name_isSet;
    bool m_company_name_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_date1;
    bool m_date1_isSet;
    bool m_date1_isValid;

    QString m_date2;
    bool m_date2_isSet;
    bool m_date2_isValid;

    QString m_date3;
    bool m_date3_isSet;
    bool m_date3_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    qint32 m_number1;
    bool m_number1_isSet;
    bool m_number1_isValid;

    qint32 m_number2;
    bool m_number2_isSet;
    bool m_number2_isValid;

    qint32 m_number3;
    bool m_number3_isSet;
    bool m_number3_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_storage;
    bool m_storage_isSet;
    bool m_storage_isValid;

    QString m_street_address;
    bool m_street_address_isSet;
    bool m_street_address_isValid;

    QString m_string1;
    bool m_string1_isSet;
    bool m_string1_isValid;

    QString m_string2;
    bool m_string2_isSet;
    bool m_string2_isValid;

    QString m_string3;
    bool m_string3_isSet;
    bool m_string3_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_zip;
    bool m_zip_isSet;
    bool m_zip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegistrationModel)

#endif // OAIRegistrationModel_H
