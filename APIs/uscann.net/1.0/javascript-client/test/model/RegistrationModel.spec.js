/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiDocumentation);
  }
}(this, function(expect, ApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiDocumentation.RegistrationModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RegistrationModel', function() {
    it('should create an instance of RegistrationModel', function() {
      // uncomment below and update the code to test RegistrationModel
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be.a(ApiDocumentation.RegistrationModel);
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property companyDescription (base name: "companyDescription")', function() {
      // uncomment below and update the code to test the property companyDescription
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property date1 (base name: "date1")', function() {
      // uncomment below and update the code to test the property date1
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property date2 (base name: "date2")', function() {
      // uncomment below and update the code to test the property date2
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property date3 (base name: "date3")', function() {
      // uncomment below and update the code to test the property date3
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property number1 (base name: "number1")', function() {
      // uncomment below and update the code to test the property number1
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property number2 (base name: "number2")', function() {
      // uncomment below and update the code to test the property number2
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property number3 (base name: "number3")', function() {
      // uncomment below and update the code to test the property number3
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property storage (base name: "storage")', function() {
      // uncomment below and update the code to test the property storage
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property streetAddress (base name: "streetAddress")', function() {
      // uncomment below and update the code to test the property streetAddress
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property string1 (base name: "string1")', function() {
      // uncomment below and update the code to test the property string1
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property string2 (base name: "string2")', function() {
      // uncomment below and update the code to test the property string2
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property string3 (base name: "string3")', function() {
      // uncomment below and update the code to test the property string3
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

    it('should have the property zip (base name: "zip")', function() {
      // uncomment below and update the code to test the property zip
      //var instance = new ApiDocumentation.RegistrationModel();
      //expect(instance).to.be();
    });

  });

}));
