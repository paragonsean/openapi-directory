/*
 * Test the ExhibitDay API with Swagger
 * This API can be used to programmatically pull data out of ExhibitDay or push data into ExhibitDay -- allowing for automation between ExhibitDay and your internal systems (or other third-party software). To use the API, you'll need working knowledge of consuming REST APIs.<br /><br />Docs: https://api.exhibitday.com/swagger/docs/v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TasksApi
 */
@Disabled
public class TasksApiTest {

    private final TasksApi api = new TasksApi();

    /**
     * Retrieve Tasks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasks0GetTest() throws ApiException {
        String apiKey = null;
        BigDecimal filterByEventId = null;
        BigDecimal filterByGeneralTasksOnly = null;
        String filterByIncompleteOnly = null;
        String filterByCompletedOnly = null;
        String filterByNoDueDate = null;
        LocalDate filterByDueDateGreaterThanOrEqualTo = null;
        LocalDate filterByDueDateSmallerThanOrEqualTo = null;
        String filterByHasAssignee = null;
        String filterByAssigneeUserId = null;
        String filterByTaskNameContainsText = null;
        String filterByIntegrationMetadataField1 = null;
        String filterByIntegrationMetadataField2 = null;
        String filterByIntegrationMetadataField3 = null;
        String filterByIntegrationMetadataField4 = null;
        String filterByIntegrationMetadataField5 = null;
        String hydrateTaskComments = null;
        String response = api.tasks0Get(apiKey, filterByEventId, filterByGeneralTasksOnly, filterByIncompleteOnly, filterByCompletedOnly, filterByNoDueDate, filterByDueDateGreaterThanOrEqualTo, filterByDueDateSmallerThanOrEqualTo, filterByHasAssignee, filterByAssigneeUserId, filterByTaskNameContainsText, filterByIntegrationMetadataField1, filterByIntegrationMetadataField2, filterByIntegrationMetadataField3, filterByIntegrationMetadataField4, filterByIntegrationMetadataField5, hydrateTaskComments);
        // TODO: test validations
    }

    /**
     * Add a Task
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasks1PostTest() throws ApiException {
        String apiKey = null;
        String name = null;
        BigDecimal eventId = null;
        BigDecimal taskSectionId = null;
        String isCompleted = null;
        LocalDate dueDate = null;
        String assigneeUserId = null;
        String details = null;
        String integrationMetadataField1 = null;
        String integrationMetadataField2 = null;
        String integrationMetadataField3 = null;
        String integrationMetadataField4 = null;
        String integrationMetadataField5 = null;
        String response = api.tasks1Post(apiKey, name, eventId, taskSectionId, isCompleted, dueDate, assigneeUserId, details, integrationMetadataField1, integrationMetadataField2, integrationMetadataField3, integrationMetadataField4, integrationMetadataField5);
        // TODO: test validations
    }

    /**
     * Update a Task
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasks2PatchTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String name = null;
        BigDecimal taskSectionId = null;
        String isCompleted = null;
        LocalDate dueDate = null;
        String assigneeUserId = null;
        String details = null;
        String integrationMetadataField1 = null;
        String integrationMetadataField2 = null;
        String integrationMetadataField3 = null;
        String integrationMetadataField4 = null;
        String integrationMetadataField5 = null;
        String response = api.tasks2Patch(apiKey, id, name, taskSectionId, isCompleted, dueDate, assigneeUserId, details, integrationMetadataField1, integrationMetadataField2, integrationMetadataField3, integrationMetadataField4, integrationMetadataField5);
        // TODO: test validations
    }

    /**
     * Delete a Task
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasks3DeleteTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String response = api.tasks3Delete(apiKey, id);
        // TODO: test validations
    }

    /**
     * Retrieve a Single Task Comment by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksComment0GetTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String response = api.tasksComment0Get(apiKey, id);
        // TODO: test validations
    }

    /**
     * Add a Comment to a Task
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksComment1PostTest() throws ApiException {
        String apiKey = null;
        BigDecimal taskId = null;
        String comment = null;
        String response = api.tasksComment1Post(apiKey, taskId, comment);
        // TODO: test validations
    }

    /**
     * Update a Task Comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksComment2PatchTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String comment = null;
        String response = api.tasksComment2Patch(apiKey, id, comment);
        // TODO: test validations
    }

    /**
     * Delete a Task Comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksComment3DeleteTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String response = api.tasksComment3Delete(apiKey, id);
        // TODO: test validations
    }

    /**
     * Retrieve Task Comments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksComments0GetTest() throws ApiException {
        String apiKey = null;
        BigDecimal filterByEventId = null;
        BigDecimal filterByTaskId = null;
        String hydrateTask = null;
        String response = api.tasksComments0Get(apiKey, filterByEventId, filterByTaskId, hydrateTask);
        // TODO: test validations
    }

    /**
     * Retrieve a Single Task by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksInfo0GetTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String response = api.tasksInfo0Get(apiKey, id);
        // TODO: test validations
    }

}
