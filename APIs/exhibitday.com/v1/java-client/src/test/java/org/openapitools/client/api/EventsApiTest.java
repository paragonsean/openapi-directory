/*
 * Test the ExhibitDay API with Swagger
 * This API can be used to programmatically pull data out of ExhibitDay or push data into ExhibitDay -- allowing for automation between ExhibitDay and your internal systems (or other third-party software). To use the API, you'll need working knowledge of consuming REST APIs.<br /><br />Docs: https://api.exhibitday.com/swagger/docs/v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
@Disabled
public class EventsApiTest {

    private final EventsApi api = new EventsApi();

    /**
     * Retrieve Events
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void events0GetTest() throws ApiException {
        String apiKey = null;
        String filterByEventNameContainsText = null;
        LocalDate filterByStartDateGreaterThanOrEqualTo = null;
        LocalDate filterByStartDateSmallerThanOrEqualTo = null;
        LocalDate filterByEndDateGreaterThanOrEqualTo = null;
        LocalDate filterByEndDateSmallerThanOrEqualTo = null;
        BigDecimal filterByEventParticipationTypeId = null;
        BigDecimal filterByEventFormatId = null;
        BigDecimal filterByEventStarRating = null;
        String filterByEventTag = null;
        String filterByCustomEventFieldCustomNNNNNN = null;
        String filterByIntegrationMetadataField1 = null;
        String filterByIntegrationMetadataField2 = null;
        String filterByIntegrationMetadataField3 = null;
        String filterByIntegrationMetadataField4 = null;
        String filterByIntegrationMetadataField5 = null;
        String hydrateTasks = null;
        String hydrateTaskSectionsList = null;
        String hydrateCustomFields = null;
        String response = api.events0Get(apiKey, filterByEventNameContainsText, filterByStartDateGreaterThanOrEqualTo, filterByStartDateSmallerThanOrEqualTo, filterByEndDateGreaterThanOrEqualTo, filterByEndDateSmallerThanOrEqualTo, filterByEventParticipationTypeId, filterByEventFormatId, filterByEventStarRating, filterByEventTag, filterByCustomEventFieldCustomNNNNNN, filterByIntegrationMetadataField1, filterByIntegrationMetadataField2, filterByIntegrationMetadataField3, filterByIntegrationMetadataField4, filterByIntegrationMetadataField5, hydrateTasks, hydrateTaskSectionsList, hydrateCustomFields);
        // TODO: test validations
    }

    /**
     * Add an Event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void events1PostTest() throws ApiException {
        String apiKey = null;
        String name = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        BigDecimal formatId = null;
        BigDecimal participationTypeId = null;
        String integrationMetadataField1 = null;
        String integrationMetadataField2 = null;
        String integrationMetadataField3 = null;
        String integrationMetadataField4 = null;
        String integrationMetadataField5 = null;
        String response = api.events1Post(apiKey, name, startDate, endDate, formatId, participationTypeId, integrationMetadataField1, integrationMetadataField2, integrationMetadataField3, integrationMetadataField4, integrationMetadataField5);
        // TODO: test validations
    }

    /**
     * Update an Event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void events2PatchTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String name = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        BigDecimal participationTypeId = null;
        BigDecimal formatId = null;
        BigDecimal starRating = null;
        String websiteUrl = null;
        String venueName = null;
        BigDecimal boothSize = null;
        BigDecimal boothNumber = null;
        BigDecimal eventNotes = null;
        BigDecimal boothNotes = null;
        BigDecimal budgetNotes = null;
        BigDecimal roiNotes = null;
        BigDecimal budgetBoothReservation = null;
        BigDecimal budgetBoothServices = null;
        BigDecimal budgetAttendeeRegistrations = null;
        BigDecimal budgetTravel = null;
        BigDecimal budgetGiveaways = null;
        BigDecimal budgetShipments = null;
        BigDecimal budgetMiscExpenses = null;
        BigDecimal budgetSponsorships = null;
        BigDecimal roiNumLeads = null;
        BigDecimal roiNumImpressionsBooth = null;
        BigDecimal roiNumImpressionsSponsorships = null;
        BigDecimal roiNumImpressionsMedia = null;
        BigDecimal roiNumMeetingsExistingCustomers = null;
        BigDecimal roiNumMeetingsNewCustomers = null;
        BigDecimal roiAmountActualSales = null;
        BigDecimal roiAmountPotentialSales = null;
        String integrationMetadataField1 = null;
        String integrationMetadataField2 = null;
        String integrationMetadataField3 = null;
        String integrationMetadataField4 = null;
        String integrationMetadataField5 = null;
        String response = api.events2Patch(apiKey, id, name, startDate, endDate, participationTypeId, formatId, starRating, websiteUrl, venueName, boothSize, boothNumber, eventNotes, boothNotes, budgetNotes, roiNotes, budgetBoothReservation, budgetBoothServices, budgetAttendeeRegistrations, budgetTravel, budgetGiveaways, budgetShipments, budgetMiscExpenses, budgetSponsorships, roiNumLeads, roiNumImpressionsBooth, roiNumImpressionsSponsorships, roiNumImpressionsMedia, roiNumMeetingsExistingCustomers, roiNumMeetingsNewCustomers, roiAmountActualSales, roiAmountPotentialSales, integrationMetadataField1, integrationMetadataField2, integrationMetadataField3, integrationMetadataField4, integrationMetadataField5);
        // TODO: test validations
    }

    /**
     * Delete an Event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void events3DeleteTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String response = api.events3Delete(apiKey, id);
        // TODO: test validations
    }

    /**
     * Retrieve a Single Event by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventsInfo0GetTest() throws ApiException {
        String apiKey = null;
        BigDecimal id = null;
        String response = api.eventsInfo0Get(apiKey, id);
        // TODO: test validations
    }

}
