/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMapCounts.h
 *
 * 
 */

#ifndef OAIMapCounts_H
#define OAIMapCounts_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMapCounts : public OAIObject {
public:
    OAIMapCounts();
    OAIMapCounts(QString json);
    ~OAIMapCounts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAttachments() const;
    void setAttachments(const qint32 &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    qint32 getComments() const;
    void setComments(const qint32 &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    qint32 getImpressions() const;
    void setImpressions(const qint32 &impressions);
    bool is_impressions_Set() const;
    bool is_impressions_Valid() const;

    qint32 getRespots() const;
    void setRespots(const qint32 &respots);
    bool is_respots_Set() const;
    bool is_respots_Valid() const;

    qint32 getSpots() const;
    void setSpots(const qint32 &spots);
    bool is_spots_Set() const;
    bool is_spots_Valid() const;

    qint32 getSubscriptions() const;
    void setSubscriptions(const qint32 &subscriptions);
    bool is_subscriptions_Set() const;
    bool is_subscriptions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    qint32 m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    qint32 m_impressions;
    bool m_impressions_isSet;
    bool m_impressions_isValid;

    qint32 m_respots;
    bool m_respots_isSet;
    bool m_respots_isValid;

    qint32 m_spots;
    bool m_spots_isSet;
    bool m_spots_isValid;

    qint32 m_subscriptions;
    bool m_subscriptions_isSet;
    bool m_subscriptions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMapCounts)

#endif // OAIMapCounts_H
