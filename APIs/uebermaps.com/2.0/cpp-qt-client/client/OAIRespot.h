/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRespot.h
 *
 * 
 */

#ifndef OAIRespot_H
#define OAIRespot_H

#include <QJsonObject>

#include "OAIMap.h"
#include "OAISpot.h"
#include "OAIUser.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMap;
class OAISpot;
class OAIUser;

class OAIRespot : public OAIObject {
public:
    OAIRespot();
    OAIRespot(QString json);
    ~OAIRespot() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIMap getMap() const;
    void setMap(const OAIMap &map);
    bool is_map_Set() const;
    bool is_map_Valid() const;

    qint32 getMapId() const;
    void setMapId(const qint32 &map_id);
    bool is_map_id_Set() const;
    bool is_map_id_Valid() const;

    OAISpot getSpot() const;
    void setSpot(const OAISpot &spot);
    bool is_spot_Set() const;
    bool is_spot_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIMap m_map;
    bool m_map_isSet;
    bool m_map_isValid;

    qint32 m_map_id;
    bool m_map_id_isSet;
    bool m_map_id_isValid;

    OAISpot m_spot;
    bool m_spot_isSet;
    bool m_spot_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRespot)

#endif // OAIRespot_H
