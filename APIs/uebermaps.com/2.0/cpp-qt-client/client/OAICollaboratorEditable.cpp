/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICollaboratorEditable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICollaboratorEditable::OAICollaboratorEditable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICollaboratorEditable::OAICollaboratorEditable() {
    this->initializeModel();
}

OAICollaboratorEditable::~OAICollaboratorEditable() {}

void OAICollaboratorEditable::initializeModel() {

    m_group_isSet = false;
    m_group_isValid = false;
}

void OAICollaboratorEditable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICollaboratorEditable::fromJsonObject(QJsonObject json) {

    m_group_isValid = ::OpenAPI::fromJsonValue(m_group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;
}

QString OAICollaboratorEditable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICollaboratorEditable::asJsonObject() const {
    QJsonObject obj;
    if (m_group_isSet) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(m_group));
    }
    return obj;
}

QString OAICollaboratorEditable::getGroup() const {
    return m_group;
}
void OAICollaboratorEditable::setGroup(const QString &group) {
    m_group = group;
    m_group_isSet = true;
}

bool OAICollaboratorEditable::is_group_Set() const{
    return m_group_isSet;
}

bool OAICollaboratorEditable::is_group_Valid() const{
    return m_group_isValid;
}

bool OAICollaboratorEditable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICollaboratorEditable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
