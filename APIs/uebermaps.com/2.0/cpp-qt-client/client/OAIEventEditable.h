/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventEditable.h
 *
 * 
 */

#ifndef OAIEventEditable_H
#define OAIEventEditable_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventEditable : public OAIObject {
public:
    OAIEventEditable();
    OAIEventEditable(QString json);
    ~OAIEventEditable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEndsAt() const;
    void setEndsAt(const QDateTime &ends_at);
    bool is_ends_at_Set() const;
    bool is_ends_at_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    double getLon() const;
    void setLon(const double &lon);
    bool is_lon_Set() const;
    bool is_lon_Valid() const;

    QString getPicture() const;
    void setPicture(const QString &picture);
    bool is_picture_Set() const;
    bool is_picture_Valid() const;

    QDateTime getStartsAt() const;
    void setStartsAt(const QDateTime &starts_at);
    bool is_starts_at_Set() const;
    bool is_starts_at_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_ends_at;
    bool m_ends_at_isSet;
    bool m_ends_at_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    double m_lon;
    bool m_lon_isSet;
    bool m_lon_isValid;

    QString m_picture;
    bool m_picture_isSet;
    bool m_picture_isValid;

    QDateTime m_starts_at;
    bool m_starts_at_isSet;
    bool m_starts_at_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventEditable)

#endif // OAIEventEditable_H
