/*
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MapEditable;
import org.openapitools.client.model.MapWithRelation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MapsApi
 */
@Disabled
public class MapsApiTest {

    private final MapsApi api = new MapsApi();

    /**
     * List your own maps
     *
     * List your own maps.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsGetTest() throws ApiException {
        List<Map> response = api.mapsGet();
        // TODO: test validations
    }

    /**
     * Delete map
     *
     * Delete map.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsIdDeleteTest() throws ApiException {
        Integer id = null;
        Map response = api.mapsIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get map
     *
     * Get basic information about a map
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsIdGetTest() throws ApiException {
        Integer id = null;
        MapWithRelation response = api.mapsIdGet(id);
        // TODO: test validations
    }

    /**
     * Update map
     *
     * Update map. Wrap map parameters in [map]. To update the map header picture pass a base64 encoded string to [map][picture].
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsIdPatchTest() throws ApiException {
        Integer id = null;
        MapEditable map = null;
        Map response = api.mapsIdPatch(id, map);
        // TODO: test validations
    }

    /**
     * Create map
     *
     * Create map. Wrap map parameters in [map]. To add a map header picture pass a base64 encoded string to [map][picture].
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsPostTest() throws ApiException {
        MapEditable map = null;
        Map response = api.mapsPost(map);
        // TODO: test validations
    }

    /**
     * List maps for a given user
     *
     * List maps for a given user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserIdMapsGetTest() throws ApiException {
        Integer userId = null;
        List<Map> response = api.usersUserIdMapsGet(userId);
        // TODO: test validations
    }

}
