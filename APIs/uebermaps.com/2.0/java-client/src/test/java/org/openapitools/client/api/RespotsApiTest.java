/*
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Respot;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RespotsApi
 */
@Disabled
public class RespotsApiTest {

    private final RespotsApi api = new RespotsApi();

    /**
     * List respots of a map
     *
     * List respots of a map.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsIdRespotsGetTest() throws ApiException {
        Integer id = null;
        List<Respot> response = api.mapsIdRespotsGet(id);
        // TODO: test validations
    }

    /**
     * Delete respot from map by spot id
     *
     * Delete respot from map by spot id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsMapIdSpotsSpotIdRespotDeleteTest() throws ApiException {
        Integer mapId = null;
        Integer spotId = null;
        Respot response = api.mapsMapIdSpotsSpotIdRespotDelete(mapId, spotId);
        // TODO: test validations
    }

    /**
     * List maps that user can respot to
     *
     * List maps that user can respot to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void respotMapsGetTest() throws ApiException {
        List<Map> response = api.respotMapsGet();
        // TODO: test validations
    }

    /**
     * Delete respot
     *
     * Delete respot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void respotsIdDeleteTest() throws ApiException {
        Integer id = null;
        Respot response = api.respotsIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get respot
     *
     * Get basic information about a respot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void respotsIdGetTest() throws ApiException {
        Integer id = null;
        Respot response = api.respotsIdGet(id);
        // TODO: test validations
    }

    /**
     * Respot a spot onto a map
     *
     * Respot a spot onto a map.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spotsIdRespotsPostTest() throws ApiException {
        Integer id = null;
        BigDecimal mapId = null;
        Respot response = api.spotsIdRespotsPost(id, mapId);
        // TODO: test validations
    }

}
