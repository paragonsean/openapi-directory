/*
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CollaboratorInvitation;
import org.openapitools.client.model.CollaboratorInvitationCreate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CollaboratorInvitationsApi
 */
@Disabled
public class CollaboratorInvitationsApiTest {

    private final CollaboratorInvitationsApi api = new CollaboratorInvitationsApi();

    /**
     * List your collaborator invitations
     *
     * List your collaborator invitations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collaboratorInvitationsGetTest() throws ApiException {
        List<CollaboratorInvitation> response = api.collaboratorInvitationsGet();
        // TODO: test validations
    }

    /**
     * Delete collaborator invitation
     *
     * Delete collaborator invitation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collaboratorInvitationsIdDeleteTest() throws ApiException {
        Integer id = null;
        CollaboratorInvitation response = api.collaboratorInvitationsIdDelete(id);
        // TODO: test validations
    }

    /**
     * Show collaborator invitation
     *
     * Show collaborator invitation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collaboratorInvitationsIdGetTest() throws ApiException {
        Integer id = null;
        CollaboratorInvitation response = api.collaboratorInvitationsIdGet(id);
        // TODO: test validations
    }

    /**
     * Accept collaborator invitation.
     *
     * Accept collaborator invitation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collaboratorInvitationsIdPatchTest() throws ApiException {
        Integer id = null;
        CollaboratorInvitation response = api.collaboratorInvitationsIdPatch(id);
        // TODO: test validations
    }

    /**
     * Invite user to collaborate on map
     *
     * Invite user to collaborate on map.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collaboratorInvitationsPostTest() throws ApiException {
        CollaboratorInvitationCreate body = null;
        CollaboratorInvitation response = api.collaboratorInvitationsPost(body);
        // TODO: test validations
    }

}
