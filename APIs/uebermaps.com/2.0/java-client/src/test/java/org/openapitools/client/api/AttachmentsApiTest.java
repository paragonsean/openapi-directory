/*
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Attachment;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttachmentsApi
 */
@Disabled
public class AttachmentsApiTest {

    private final AttachmentsApi api = new AttachmentsApi();

    /**
     * Delete attachment
     *
     * Delete attachment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attachmentsIdDeleteTest() throws ApiException {
        Integer id = null;
        Attachment response = api.attachmentsIdDelete(id);
        // TODO: test validations
    }

    /**
     * List attachments for a given map
     *
     * List attachments for a given map.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsIdAttachmentsGetTest() throws ApiException {
        Integer id = null;
        List<Attachment> response = api.mapsIdAttachmentsGet(id);
        // TODO: test validations
    }

    /**
     * Upload map attachment
     *
     * Upload map attachment. Wrap attachment parameters in [attachment]
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsIdAttachmentsPostTest() throws ApiException {
        Integer id = null;
        String image = null;
        Attachment response = api.mapsIdAttachmentsPost(id, image);
        // TODO: test validations
    }

    /**
     * List attachments for a given spot
     *
     * List attachments for a given spot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spotsIdAttachmentsGetTest() throws ApiException {
        Integer id = null;
        List<Attachment> response = api.spotsIdAttachmentsGet(id);
        // TODO: test validations
    }

    /**
     * Upload spot attachment
     *
     * Upload spot attachment. Wrap attachment parameters in [attachment]
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spotsIdAttachmentsPostTest() throws ApiException {
        Integer id = null;
        String image = null;
        Attachment response = api.spotsIdAttachmentsPost(id, image);
        // TODO: test validations
    }

}
