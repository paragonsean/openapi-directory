/*
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Subscription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionsApi
 */
@Disabled
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi();

    /**
     * Unsubscribe from map
     *
     * Unsubscribe from map.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsIdSubscriptionsDeleteTest() throws ApiException {
        Integer id = null;
        Subscription response = api.mapsIdSubscriptionsDelete(id);
        // TODO: test validations
    }

    /**
     * List subscriptions for a given map
     *
     * List subscriptions for a given map.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapsIdSubscriptionsGetTest() throws ApiException {
        Integer id = null;
        List<Subscription> response = api.mapsIdSubscriptionsGet(id);
        // TODO: test validations
    }

    /**
     * List subscriptions. Pass no parameters to get own subscriptions
     *
     * List subscriptions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsGetTest() throws ApiException {
        Integer userId = null;
        Integer mapId = null;
        List<Subscription> response = api.subscriptionsGet(userId, mapId);
        // TODO: test validations
    }

    /**
     * Create map subscription
     *
     * Create map subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsPostTest() throws ApiException {
        BigDecimal mapId = null;
        Subscription response = api.subscriptionsPost(mapId);
        // TODO: test validations
    }

}
