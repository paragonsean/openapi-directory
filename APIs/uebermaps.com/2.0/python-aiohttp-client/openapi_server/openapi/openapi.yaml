openapi: 3.0.1
info:
  contact:
    name: uebermaps API Team
  description: Enable people to store spots on public and private maps
  termsOfService: https://uebermaps.com/terms/
  title: uebermaps API endpoints
  version: "2.0"
  x-apisguru-categories:
  - location
  x-logo:
    url: https://twitter.com/uebermaps/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://uebermaps.com/api/v2/apidocs
    version: "2.0"
  x-providerName: uebermaps.com
servers:
- url: //uebermaps.com/api/v2
paths:
  /account:
    patch:
      description: "Update account. Wrap map parameters in [user]."
      operationId: account_patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEditable'
        description: user attributes
        required: false
        x-body-name: user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Contains user data.
      summary: Update account
      tags:
      - Account
      x-codegen-request-body-name: user
      x-openapi-router-controller: openapi_server.controllers.account_controller
  /attachments/{id}:
    delete:
      description: Delete attachment.
      operationId: attachments_id_delete
      parameters:
      - description: Attachment id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Contains deleted attachment.
      summary: Delete attachment
      tags:
      - Attachments
      x-openapi-router-controller: openapi_server.controllers.attachments_controller
  /authentication:
    post:
      description: "Sign in user. Wrap authentication parameters in [user]."
      operationId: authentication_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthentication'
        description: user authentication attributes
        required: true
        x-body-name: user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullProfile'
          description: Contains user data including authentication token for subsequent
            requests
      summary: Sign in user
      tags:
      - Authentication
      x-codegen-request-body-name: user
      x-openapi-router-controller: openapi_server.controllers.authentication_controller
  /collaborator_invitations:
    get:
      description: List your collaborator invitations.
      operationId: collaborator_invitations_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CollaboratorInvitation'
                type: array
          description: Contains list of collaborator invitations.
      summary: List your collaborator invitations
      tags:
      - CollaboratorInvitations
      x-openapi-router-controller: openapi_server.controllers.collaborator_invitations_controller
    post:
      description: Invite user to collaborate on map.
      operationId: collaborator_invitations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaboratorInvitationCreate'
        description: Supply map_id and either a comma separated list of user_ids or
          emails. Optionally you can provide a 'is_admin' parameter with 'true' or
          'false' to give the invited users admin privileges.
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaboratorInvitation'
          description: Contains collaborator invitation data.
      summary: Invite user to collaborate on map
      tags:
      - CollaboratorInvitations
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.collaborator_invitations_controller
  /collaborator_invitations/{id}:
    delete:
      description: Delete collaborator invitation.
      operationId: collaborator_invitations_id_delete
      parameters:
      - description: Collaborator invitation id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaboratorInvitation'
          description: Contains deleted collaborator invitation.
      summary: Delete collaborator invitation
      tags:
      - CollaboratorInvitations
      x-openapi-router-controller: openapi_server.controllers.collaborator_invitations_controller
    get:
      description: Show collaborator invitation
      operationId: collaborator_invitations_id_get
      parameters:
      - description: Collaborator invitation id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaboratorInvitation'
          description: Contains collaborator invitation data.
      summary: Show collaborator invitation
      tags:
      - CollaboratorInvitations
      x-openapi-router-controller: openapi_server.controllers.collaborator_invitations_controller
    patch:
      description: Accept collaborator invitation.
      operationId: collaborator_invitations_id_patch
      parameters:
      - description: Collaborator invitation id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaboratorInvitation'
          description: Contains collaborator invitation data.
      summary: Accept collaborator invitation.
      tags:
      - CollaboratorInvitations
      x-openapi-router-controller: openapi_server.controllers.collaborator_invitations_controller
  /comments/{id}:
    delete:
      description: Delete comment.
      operationId: comments_id_delete
      parameters:
      - description: Comment id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Contains deleted comment.
      summary: Delete comment
      tags:
      - Comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
    patch:
      description: "Update comment. Wrap comment parameters in [comment]."
      operationId: comments_id_patch
      parameters:
      - description: Comment id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEditable'
        description: Comment attributes
        required: false
        x-body-name: comment
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Contains comment data
      summary: Update comment
      tags:
      - Comments
      x-codegen-request-body-name: comment
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /events:
    get:
      description: List your own events.
      operationId: events_get
      parameters:
      - description: Begin of time range of event (ISO 8601 date format).
        in: query
        name: timeframe_start
        schema:
          type: string
      - description: End of time range of event (ISO 8601 date format).
        in: query
        name: timeframe_end
        schema:
          type: string
      - description: "To refine your event index request to contain only events within\
          \                                                             a geographical\
          \ box pass the followng bounds parameters.                             \
          \                                F. e. to get events within 'Hamburg, St.\
          \ Pauli':                                                             bounds[sw_lat]=53.54831449741324\
          \                                                             bounds[sw_lon]=9.943227767944336\
          \                                                             bounds[ne_lat]=53.5571103674878\
          \                                                             bounds[ne_lon]=9.9776029586792"
        in: query
        name: bounds
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
          description: Contains list of events.
      summary: List your own events
      tags:
      - Events
      x-openapi-router-controller: openapi_server.controllers.events_controller
  /events/{id}:
    delete:
      description: Delete event.
      operationId: events_id_delete
      parameters:
      - description: Event id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Contains deleted event.
      summary: Delete event
      tags:
      - Events
      x-openapi-router-controller: openapi_server.controllers.events_controller
    get:
      description: Get basic information about an event
      operationId: events_id_get
      parameters:
      - description: Id of event
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Contains event data.
      summary: Get event
      tags:
      - Events
      x-openapi-router-controller: openapi_server.controllers.events_controller
    patch:
      description: "Update event. Wrap event parameters in [event]."
      operationId: events_id_patch
      parameters:
      - description: Event id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEditable'
        description: Event attributes
        required: false
        x-body-name: event
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: "Contains map data, map settings and your relation to this\
            \ map"
      summary: Update event
      tags:
      - Events
      x-codegen-request-body-name: event
      x-openapi-router-controller: openapi_server.controllers.events_controller
  /maps:
    get:
      description: List your own maps.
      operationId: maps_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Map'
                type: array
          description: Contains list of maps.
      summary: List your own maps
      tags:
      - Maps
      x-openapi-router-controller: openapi_server.controllers.maps_controller
    post:
      description: "Create map. Wrap map parameters in [map]. To add a map header\
        \ picture pass a base64 encoded string to [map][picture]."
      operationId: maps_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapEditable'
        description: map attributes
        required: false
        x-body-name: map
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: "Contains map data, map settings and your relation to this\
            \ map"
      summary: Create map
      tags:
      - Maps
      x-codegen-request-body-name: map
      x-openapi-router-controller: openapi_server.controllers.maps_controller
  /maps/search:
    get:
      description: Search maps
      operationId: maps_search_get
      parameters:
      - description: Query
        in: query
        name: q
        schema:
          type: string
      - description: "Distance. Diameter of search radius in meter (default: 2000\
          \ meter)"
        in: query
        name: d
        schema:
          type: integer
      - description: "Latitude for search radius (default distance: 2000 meter)"
        in: query
        name: lat
        schema:
          type: number
      - description: "Longitude for search radius (default distance: 2000 meter)"
        in: query
        name: lon
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: Contains map data.
      summary: Search maps
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /maps/{id}:
    delete:
      description: Delete map.
      operationId: maps_id_delete
      parameters:
      - description: map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: Contains deleted map.
      summary: Delete map
      tags:
      - Maps
      x-openapi-router-controller: openapi_server.controllers.maps_controller
    get:
      description: Get basic information about a map
      operationId: maps_id_get
      parameters:
      - description: Id of map
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapWithRelation'
          description: "Contains map data, map settings and your relation to this\
            \ map"
      summary: Get map
      tags:
      - Maps
      x-openapi-router-controller: openapi_server.controllers.maps_controller
    patch:
      description: "Update map. Wrap map parameters in [map]. To update the map header\
        \ picture pass a base64 encoded string to [map][picture]."
      operationId: maps_id_patch
      parameters:
      - description: map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapEditable'
        description: map settings attributes
        required: false
        x-body-name: map
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: "Contains map data, map settings and your relation to this\
            \ map"
      summary: Update map
      tags:
      - Maps
      x-codegen-request-body-name: map
      x-openapi-router-controller: openapi_server.controllers.maps_controller
  /maps/{id}/attachments:
    get:
      description: List attachments for a given map.
      operationId: maps_id_attachments_get
      parameters:
      - description: Map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: Contains list of attachments.
      summary: List attachments for a given map
      tags:
      - Attachments
      x-openapi-router-controller: openapi_server.controllers.attachments_controller
    post:
      description: "Upload map attachment. Wrap attachment parameters in [attachment]"
      operationId: maps_id_attachments_post
      parameters:
      - description: Map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Base64 encoded image
        required: true
        x-body-name: image
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Contains attachment data
      summary: Upload map attachment
      tags:
      - Attachments
      x-codegen-request-body-name: image
      x-openapi-router-controller: openapi_server.controllers.attachments_controller
  /maps/{id}/collaborators/:
    get:
      description: List collaborators of a map.
      operationId: maps_id_collaborators_get
      parameters:
      - description: Map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collaborator'
                type: array
          description: Contains list of collaborators.
      summary: List collaborators of a map
      tags:
      - Collaborators
      x-openapi-router-controller: openapi_server.controllers.collaborators_controller
  /maps/{id}/collaborators/{user_id}:
    delete:
      description: Delete collaboration.
      operationId: maps_id_collaborators_user_id_delete
      parameters:
      - description: map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: user id
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaborator'
          description: Contains deleted collaborator.
      summary: Delete collaboration
      tags:
      - Collaborators
      x-openapi-router-controller: openapi_server.controllers.collaborators_controller
    patch:
      description: "Update collaborator. Wrap collaborator parameters in [collaborator]"
      operationId: maps_id_collaborators_user_id_patch
      parameters:
      - description: map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: user id
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaboratorEditable'
        description: collaborator attributes
        required: false
        x-body-name: collaborator
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaborator'
          description: Contains collaborator data
      summary: Update collaborator
      tags:
      - Collaborators
      x-codegen-request-body-name: collaborator
      x-openapi-router-controller: openapi_server.controllers.collaborators_controller
  /maps/{id}/comments:
    get:
      description: List comments for a given map.
      operationId: maps_id_comments_get
      parameters:
      - description: Id of map
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: Contains list of comments.
      summary: List comments for a given map
      tags:
      - Comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
    post:
      description: "Create map comment. Wrap comment parameters in [comment]."
      operationId: maps_id_comments_post
      parameters:
      - description: map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEditable'
        description: comment attributes
        required: false
        x-body-name: comment
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Contains comment data
      summary: Create map comment
      tags:
      - Comments
      x-codegen-request-body-name: comment
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /maps/{id}/respots:
    get:
      description: List respots of a map.
      operationId: maps_id_respots_get
      parameters:
      - description: Map Id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Respot'
                type: array
          description: Contains list of respots.
      summary: List respots of a map
      tags:
      - Respots
      x-openapi-router-controller: openapi_server.controllers.respots_controller
  /maps/{id}/spots:
    get:
      description: List spots for a given map.
      operationId: maps_id_spots_get
      parameters:
      - description: Id of map
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Order of spots
        in: query
        name: order
        schema:
          enum:
          - created_at_asc
          - created_at_desc
          - updated_at_asc
          - updated_at_desc
          - title_asc
          - title_desc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Spot'
                type: array
          description: Contains list of spots.
      summary: List spots for a given map
      tags:
      - Spots
      x-openapi-router-controller: openapi_server.controllers.spots_controller
    post:
      description: "Create spot. Wrap parameters in [spot]. To add a spot picture\
        \ pass a base64 encoded string to [spot][picture]."
      operationId: maps_id_spots_post
      parameters:
      - description: Id of map
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpotEditable'
        description: spot attributes
        required: true
        x-body-name: spot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spot'
          description: Contains spot data
      summary: Create spot
      tags:
      - Spots
      x-codegen-request-body-name: spot
      x-openapi-router-controller: openapi_server.controllers.spots_controller
  /maps/{id}/subscriptions:
    delete:
      description: Unsubscribe from map.
      operationId: maps_id_subscriptions_delete
      parameters:
      - description: map id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Contains deleted subscription.
      summary: Unsubscribe from map
      tags:
      - Subscriptions
      x-openapi-router-controller: openapi_server.controllers.subscriptions_controller
    get:
      description: List subscriptions for a given map.
      operationId: maps_id_subscriptions_get
      parameters:
      - description: Id of map
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: Contains list of subscriptions.
      summary: List subscriptions for a given map
      tags:
      - Subscriptions
      x-openapi-router-controller: openapi_server.controllers.subscriptions_controller
  /maps/{map_id}/spots/{id}:
    get:
      description: Get basic information about a spot
      operationId: maps_map_id_spots_id_get
      parameters:
      - description: Id of spot
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Id of map
        in: path
        name: map_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spot'
          description: Contains spot data
      summary: Get spot
      tags:
      - Spots
      x-openapi-router-controller: openapi_server.controllers.spots_controller
  /maps/{map_id}/spots/{spot_id}/respot:
    delete:
      description: Delete respot from map by spot id.
      operationId: maps_map_id_spots_spot_id_respot_delete
      parameters:
      - description: Map Id
        in: path
        name: map_id
        required: true
        schema:
          type: integer
      - description: Spot Id
        in: path
        name: spot_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Respot'
          description: Contains deleted respot.
      summary: Delete respot from map by spot id
      tags:
      - Respots
      x-openapi-router-controller: openapi_server.controllers.respots_controller
  /respot_maps:
    get:
      description: List maps that user can respot to.
      operationId: respot_maps_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Map'
                type: array
          description: Contains list of maps.
      summary: List maps that user can respot to
      tags:
      - Respots
      x-openapi-router-controller: openapi_server.controllers.respots_controller
  /respots/{id}:
    delete:
      description: Delete respot.
      operationId: respots_id_delete
      parameters:
      - description: Respot Id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Respot'
          description: Contains deleted respot.
      summary: Delete respot
      tags:
      - Respots
      x-openapi-router-controller: openapi_server.controllers.respots_controller
    get:
      description: Get basic information about a respot
      operationId: respots_id_get
      parameters:
      - description: Id of respot
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Respot'
          description: Contains respot data.
      summary: Get respot
      tags:
      - Respots
      x-openapi-router-controller: openapi_server.controllers.respots_controller
  /share/map/{id}:
    get:
      description: Get secret access token of an uebermap with access set to 'Secret
        link'. Pass the 'token' on every request you make to access this uebermap
        and its resources. F.e. token=1-x_gqu7eLBe3uKoAGAGXy
      operationId: share_map_id_get
      parameters:
      - description: Id of map
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapWithAuthToken'
          description: Contains map data and a secret token to access this map.
      summary: Get secret access token to share map
      tags:
      - Share
      x-openapi-router-controller: openapi_server.controllers.share_controller
  /spots:
    get:
      description: List your own spots.
      operationId: spots_get
      parameters:
      - description: Order of spots
        in: query
        name: order
        schema:
          enum:
          - created_at_asc
          - created_at_desc
          - updated_at_asc
          - updated_at_desc
          - title_asc
          - title_desc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Spot'
                type: array
          description: Contains list of spots.
      summary: List your own spots
      tags:
      - Spots
      x-openapi-router-controller: openapi_server.controllers.spots_controller
  /spots/search:
    get:
      description: Search spots
      operationId: spots_search_get
      parameters:
      - description: Query
        in: query
        name: q
        schema:
          type: string
      - description: "Distance. Diameter of search radius in meter (default: 2000\
          \ meter)"
        in: query
        name: d
        schema:
          type: integer
      - description: Latitude for search radius (2 km)
        in: query
        name: lat
        schema:
          type: number
      - description: Longitude for search radius (2 km)
        in: query
        name: lon
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spot'
          description: Contains spot data.
      summary: Search spots
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /spots/{id}:
    delete:
      description: Delete spot.
      operationId: spots_id_delete
      parameters:
      - description: spot id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spot'
          description: Contains deleted spot.
      summary: Delete spot
      tags:
      - Spots
      x-openapi-router-controller: openapi_server.controllers.spots_controller
    patch:
      description: "Update spot. Wrap parameters in [spot]. To update the spot picture\
        \ pass a base64 encoded string to [spot][picture]."
      operationId: spots_id_patch
      parameters:
      - description: spot id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpotEditable'
        description: spot attributes
        required: false
        x-body-name: spot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spot'
          description: Contains spot data
      summary: Update spot
      tags:
      - Spots
      x-codegen-request-body-name: spot
      x-openapi-router-controller: openapi_server.controllers.spots_controller
  /spots/{id}/attachments:
    get:
      description: List attachments for a given spot.
      operationId: spots_id_attachments_get
      parameters:
      - description: Spot id
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: Contains list of attachments.
      summary: List attachments for a given spot
      tags:
      - Attachments
      x-openapi-router-controller: openapi_server.controllers.attachments_controller
    post:
      description: "Upload spot attachment. Wrap attachment parameters in [attachment]"
      operationId: spots_id_attachments_post
      parameters:
      - description: Spot id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Base64 encoded image
        required: true
        x-body-name: image
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Contains attachment data
      summary: Upload spot attachment
      tags:
      - Attachments
      x-codegen-request-body-name: image
      x-openapi-router-controller: openapi_server.controllers.attachments_controller
  /spots/{id}/comments:
    get:
      description: List comments for a given spot.
      operationId: spots_id_comments_get
      parameters:
      - description: Id of spot
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: Contains list of comments.
      summary: List comments for a given spot
      tags:
      - Comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
    post:
      description: "Create spot comment. Wrap comment parameters in [comment]."
      operationId: spots_id_comments_post
      parameters:
      - description: spot id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEditable'
        description: comment attributes
        required: false
        x-body-name: comment
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Contains comment data
      summary: Create spot comment
      tags:
      - Comments
      x-codegen-request-body-name: comment
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /spots/{id}/events:
    get:
      description: List maps for a given spot.
      operationId: spots_id_events_get
      parameters:
      - description: Id of spot
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Begin of time range of event (ISO 8601 date format).
        in: query
        name: timeframe_start
        schema:
          type: string
      - description: End of time range of event (ISO 8601 date format).
        in: query
        name: timeframe_end
        schema:
          type: string
      - description: "To refine your event index request to contain only events within\
          \                                                             a geographical\
          \ box pass the followng bounds parameters.                             \
          \                                F. e. to get events within 'Hamburg, St.\
          \ Pauli':                                                             bounds[sw_lat]=53.54831449741324\
          \                                                             bounds[sw_lon]=9.943227767944336\
          \                                                             bounds[ne_lat]=53.5571103674878\
          \                                                             bounds[ne_lon]=9.9776029586792"
        in: query
        name: bounds
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
          description: Contains list of events.
      summary: List events for a given spot
      tags:
      - Events
      x-openapi-router-controller: openapi_server.controllers.events_controller
    post:
      description: "Create event. Wrap map parameters in [event]."
      operationId: spots_id_events_post
      parameters:
      - description: Spot id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEditable'
        description: Event attributes
        required: false
        x-body-name: event
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Contains event data
      summary: Create event
      tags:
      - Events
      x-codegen-request-body-name: event
      x-openapi-router-controller: openapi_server.controllers.events_controller
  /spots/{id}/respots:
    post:
      description: Respot a spot onto a map.
      operationId: spots_id_respots_post
      parameters:
      - description: Spot Id
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              format: integer
              type: number
        description: Map Id
        required: true
        x-body-name: map_id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Respot'
          description: Contains respot data.
      summary: Respot a spot onto a map
      tags:
      - Respots
      x-codegen-request-body-name: map_id
      x-openapi-router-controller: openapi_server.controllers.respots_controller
  /subscriptions:
    get:
      description: List subscriptions.
      operationId: subscriptions_get
      parameters:
      - description: Id of user
        in: query
        name: user_id
        schema:
          type: integer
      - description: Id of map
        in: query
        name: map_id
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: Contains list of subscriptions.
      summary: List subscriptions. Pass no parameters to get own subscriptions
      tags:
      - Subscriptions
      x-openapi-router-controller: openapi_server.controllers.subscriptions_controller
    post:
      description: Create map subscription.
      operationId: subscriptions_post
      requestBody:
        content:
          application/json:
            schema:
              format: integer
              type: number
        description: map id
        required: true
        x-body-name: map_id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Contains subscription data.
      summary: Create map subscription
      tags:
      - Subscriptions
      x-codegen-request-body-name: map_id
      x-openapi-router-controller: openapi_server.controllers.subscriptions_controller
  /trends/latest:
    get:
      description: List latest maps.
      operationId: trends_latest_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Map'
                type: array
          description: Contains list of maps.
      summary: List latest maps
      tags:
      - Trends
      x-openapi-router-controller: openapi_server.controllers.trends_controller
  /trends/recommended:
    get:
      description: List recommended maps.
      operationId: trends_recommended_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Map'
                type: array
          description: Contains list of maps.
      summary: List recommended maps
      tags:
      - Trends
      x-openapi-router-controller: openapi_server.controllers.trends_controller
  /users/search:
    get:
      description: Search users
      operationId: users_search_get
      parameters:
      - description: Query
        in: query
        name: q
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Contains users data.
      summary: Search users
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /users/{id}:
    get:
      description: Get profile a user
      operationId: users_id_get
      parameters:
      - description: Id of user
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Contains user data
      summary: Get user profile
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user_id}/maps:
    get:
      description: List maps for a given user.
      operationId: users_user_id_maps_get
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Map'
                type: array
          description: Contains list of maps.
      summary: List maps for a given user
      tags:
      - Maps
      x-openapi-router-controller: openapi_server.controllers.maps_controller
components:
  schemas:
    Attachment:
      example:
        file_url: https://...
        sizes:
          large:
            h: 860
            w: 1024
        map_id: 985732
        spot:
          picture_url: https://...
          counts:
            attachments: 4
            comments: 24
            respot: 34
          created_at: 2000-01-23T04:56:07.000+00:00
          description: Landed here by accident but look how wonderful this place is
            in the photos attached
          lon: 10.58349
          time_zone: Berlin
          title: Beautiful place out in the country
          updated_at: 2000-01-23T04:56:07.000+00:00
          map_id: 394805
          id: 5932234
          user:
            picture_url: https://...
            screen_name: billhicks
            counts:
              maps: 24
            about: The comedian
            header_picture: https://...
            name: Bill Hicks
            location: "Little Rock, Arkansas"
            id: 5829035
            url: http://www.billhicks.com
          lat: 53.112385
          status: approved
        attachable_id: 7543829
        created_at: 2000-01-23T04:56:07.000+00:00
        description: This photo was taken in front of the restaurant
        id: 34939432
        user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
        attachable_type: Spot
        status: approved
      properties:
        attachable_id:
          example: 7543829
          title: attachable_id
          type: integer
        attachable_type:
          example: Spot
          title: attachable_type
          type: string
        created_at:
          format: date-time
          title: created_at
          type: string
        description:
          example: This photo was taken in front of the restaurant
          title: description
          type: string
        file_url:
          example: https://...
          title: file_url
          type: string
        id:
          example: 34939432
          title: id
          type: integer
        map_id:
          example: 985732
          title: map_id
          type: integer
        sizes:
          example:
            large:
              h: 860
              w: 1024
          properties: {}
          title: sizes
          type: object
        spot:
          $ref: '#/components/schemas/Spot'
        status:
          enum:
          - approved
          - unapproved
          example: approved
          title: status
          type: string
        user:
          $ref: '#/components/schemas/User'
      title: Attachment
      type: object
    Collaborator:
      example:
        is_admin: false
        updated_at: 2000-01-23T04:56:07.000+00:00
        map_id: 324894
        user_id: 649302
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 4829504
        map:
          map_settings:
            respotting_to_this_map: true
            visitor_access: ""
            editor_access: ""
          picture_url: https://...
          updated_at: 2000-01-23T04:56:07.000+00:00
          visibility: public
          counts:
            subscriptions: 3892
            attachments: 31
            comments: 234
            respots: 24
            spots: 67
            impressions: 234332
          owner_id: 9829358
          created_at: 2000-01-23T04:56:07.000+00:00
          description: "A collection of restaurants, cafes, clubs and random spots\
            \ that I recommend in Berlin"
          id: 18234843
          title: My favourite places in Berlin
        user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
        group: editor
      properties:
        created_at:
          format: date-time
          title: created_at
          type: string
        group:
          enum:
          - admin
          - editor
          example: editor
          title: group
          type: string
        id:
          example: 4829504
          title: id
          type: integer
        is_admin:
          example: false
          title: is_admin
          type: boolean
        map:
          $ref: '#/components/schemas/Map'
        map_id:
          example: 324894
          title: map_id
          type: integer
        updated_at:
          format: date-time
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/User'
        user_id:
          example: 649302
          title: user_id
          type: integer
      title: Collaborator
      type: object
    CollaboratorEditable:
      example:
        group: editor
      properties:
        group:
          enum:
          - admin
          - editor
          example: editor
          title: group
          type: string
      title: CollaboratorEditable
      type: object
    CollaboratorInvitation:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        accepted: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 8696493
        map:
          map_settings:
            respotting_to_this_map: true
            visitor_access: ""
            editor_access: ""
          picture_url: https://...
          updated_at: 2000-01-23T04:56:07.000+00:00
          visibility: public
          counts:
            subscriptions: 3892
            attachments: 31
            comments: 234
            respots: 24
            spots: 67
            impressions: 234332
          owner_id: 9829358
          created_at: 2000-01-23T04:56:07.000+00:00
          description: "A collection of restaurants, cafes, clubs and random spots\
            \ that I recommend in Berlin"
          id: 18234843
          title: My favourite places in Berlin
        sent: true
        user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
        email: a@b.com
        invited_by_user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
        group: editor
      properties:
        accepted:
          example: true
          title: accepted
          type: boolean
        created_at:
          format: date-time
          title: created_at
          type: string
        email:
          example: a@b.com
          title: email
          type: string
        group:
          enum:
          - admin
          - editor
          example: editor
          title: group
          type: string
        id:
          example: 8696493
          title: id
          type: integer
        invited_by_user:
          $ref: '#/components/schemas/User'
        map:
          $ref: '#/components/schemas/Map'
        sent:
          example: true
          title: sent
          type: boolean
        updated_at:
          format: date-time
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/User'
      title: CollaboratorInvitation
      type: object
    CollaboratorInvitationCreate:
      example:
        emails: "a@b.com, c@d.com, e@f.com"
        is_admin: true
        map_id: 34925783
        user_ids: "5839459, 389423, 89494, 686950"
      properties:
        emails:
          example: "a@b.com, c@d.com, e@f.com"
          title: emails
          type: string
        is_admin:
          example: true
          title: is_admin
          type: boolean
        map_id:
          example: 34925783
          title: map_id
          type: integer
        user_ids:
          example: "5839459, 389423, 89494, 686950"
          title: user_ids
          type: string
      title: CollaboratorInvitationCreate
      type: object
    Comment:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 29628358
        body: Nice photo
        user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
        status: approved
      properties:
        body:
          example: Nice photo
          title: body
          type: string
        created_at:
          format: date-time
          title: created_at
          type: string
        id:
          example: 29628358
          title: id
          type: integer
        status:
          enum:
          - approved
          - unapproved
          example: approved
          title: status
          type: string
        updated_at:
          format: date-time
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/User'
      title: Comment
      type: object
    CommentEditable:
      example:
        body: Nice photo
      properties:
        body:
          example: Nice photo
          title: body
          type: string
      title: CommentEditable
      type: object
    Event:
      example:
        starts_at: 2000-01-23T04:56:07.000+00:00
        picture_url: https://...
        counts:
          attachments: 27
          comments: 284
        owner_id: 82389429
        created_at: 2000-01-23T04:56:07.000+00:00
        description: Very special event
        lon: 12.394328
        time_zone: Berlin
        title: 20th anniversary event
        updated_at: 2000-01-23T04:56:07.000+00:00
        spot:
          picture_url: https://...
          counts:
            attachments: 4
            comments: 24
            respot: 34
          created_at: 2000-01-23T04:56:07.000+00:00
          description: Landed here by accident but look how wonderful this place is
            in the photos attached
          lon: 10.58349
          time_zone: Berlin
          title: Beautiful place out in the country
          updated_at: 2000-01-23T04:56:07.000+00:00
          map_id: 394805
          id: 5932234
          user:
            picture_url: https://...
            screen_name: billhicks
            counts:
              maps: 24
            about: The comedian
            header_picture: https://...
            name: Bill Hicks
            location: "Little Rock, Arkansas"
            id: 5829035
            url: http://www.billhicks.com
          lat: 53.112385
          status: approved
        ends_at: 2000-01-23T04:56:07.000+00:00
        id: 482959
        user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
        lat: 53.293493
      properties:
        counts:
          $ref: '#/components/schemas/EventCounts'
        created_at:
          format: date-time
          title: created_at
          type: string
        description:
          example: Very special event
          title: description
          type: string
        ends_at:
          format: date-time
          title: ends_at
          type: string
        id:
          example: 482959
          title: id
          type: integer
        lat:
          example: 53.293493
          title: lat
          type: number
        lon:
          example: 12.394328
          title: lon
          type: number
        owner_id:
          example: 82389429
          title: owner_id
          type: integer
        picture_url:
          example: https://...
          title: picture_url
          type: string
        spot:
          $ref: '#/components/schemas/Spot'
        starts_at:
          format: date-time
          title: starts_at
          type: string
        time_zone:
          example: Berlin
          title: time_zone
          type: string
        title:
          example: 20th anniversary event
          title: title
          type: string
        updated_at:
          format: date-time
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/User'
      title: Event
      type: object
    EventCounts:
      example:
        attachments: 27
        comments: 284
      properties:
        attachments:
          example: 27
          title: attachments
          type: integer
        comments:
          example: 284
          title: comments
          type: integer
      title: EventCounts
      type: object
    EventEditable:
      example:
        starts_at: 2000-01-23T04:56:07.000+00:00
        user_id: 703943
        description: Very special event
        lon: 12.394328
        ends_at: 2000-01-23T04:56:07.000+00:00
        time_zone: Berlin
        title: 20th anniversary event
        lat: 53.293493
        picture: <BASE_64_ENCODED_STRING>
      properties:
        description:
          example: Very special event
          title: description
          type: string
        ends_at:
          format: date-time
          title: ends_at
          type: string
        lat:
          example: 53.293493
          title: lat
          type: number
        lon:
          example: 12.394328
          title: lon
          type: number
        picture:
          example: <BASE_64_ENCODED_STRING>
          title: picture
          type: string
        starts_at:
          format: date-time
          title: starts_at
          type: string
        time_zone:
          example: Berlin
          title: time_zone
          type: string
        title:
          example: 20th anniversary event
          title: title
          type: string
        user_id:
          example: 703943
          title: user_id
          type: integer
      title: EventEditable
      type: object
    Map:
      example:
        map_settings:
          respotting_to_this_map: true
          visitor_access: ""
          editor_access: ""
        picture_url: https://...
        updated_at: 2000-01-23T04:56:07.000+00:00
        visibility: public
        counts:
          subscriptions: 3892
          attachments: 31
          comments: 234
          respots: 24
          spots: 67
          impressions: 234332
        owner_id: 9829358
        created_at: 2000-01-23T04:56:07.000+00:00
        description: "A collection of restaurants, cafes, clubs and random spots that\
          \ I recommend in Berlin"
        id: 18234843
        title: My favourite places in Berlin
      properties:
        counts:
          $ref: '#/components/schemas/MapCounts'
        created_at:
          format: date-time
          title: created_at
          type: string
        description:
          example: "A collection of restaurants, cafes, clubs and random spots that\
            \ I recommend in Berlin"
          title: description
          type: string
        id:
          example: 18234843
          title: id
          type: integer
        map_settings:
          $ref: '#/components/schemas/MapSettings'
        owner_id:
          example: 9829358
          title: owner_id
          type: integer
        picture_url:
          example: https://...
          title: picture_url
          type: string
        title:
          example: My favourite places in Berlin
          title: title
          type: string
        updated_at:
          format: date-time
          title: updated_at
          type: string
        visibility:
          enum:
          - public
          - link
          - private
          example: public
          title: visibility
          type: string
      title: Map
      type: object
    MapCounts:
      example:
        subscriptions: 3892
        attachments: 31
        comments: 234
        respots: 24
        spots: 67
        impressions: 234332
      properties:
        attachments:
          example: 31
          title: attachments
          type: integer
        comments:
          example: 234
          title: comments
          type: integer
        impressions:
          example: 234332
          title: impressions
          type: integer
        respots:
          example: 24
          title: respots
          type: integer
        spots:
          example: 67
          title: spots
          type: integer
        subscriptions:
          example: 3892
          title: subscriptions
          type: integer
      title: MapCounts
      type: object
    MapEditable:
      example:
        map_settings:
          respotting_to_this_map: true
          visitor_access: ""
          editor_access: ""
        visibility: public
        description: "A collection of restaurants, cafes, clubs and random spots that\
          \ I recommend in Berlin"
        title: My favourite places in Berlin
        picture: <BASE_64_ENCODED_STRING>
      properties:
        description:
          example: "A collection of restaurants, cafes, clubs and random spots that\
            \ I recommend in Berlin"
          title: description
          type: string
        map_settings:
          $ref: '#/components/schemas/MapSettings'
        picture:
          example: <BASE_64_ENCODED_STRING>
          title: picture
          type: string
        title:
          example: My favourite places in Berlin
          title: title
          type: string
        visibility:
          enum:
          - public
          - link
          - private
          example: public
          title: visibility
          type: string
      title: MapEditable
      type: object
    MapRelation:
      example:
        subscribed: true
        access: ""
        access_group: owner
      properties:
        access:
          example: ""
          title: access
          type: string
        access_group:
          enum:
          - visitor
          - editor
          - admin
          example: owner
          title: access_group
          type: string
        subscribed:
          example: true
          title: subscribed
          type: boolean
      title: MapRelation
      type: object
    MapSettings:
      example:
        respotting_to_this_map: true
        visitor_access: ""
        editor_access: ""
      properties:
        editor_access:
          example: ""
          title: editor_access
          type: string
        respotting_to_this_map:
          example: true
          title: respotting_to_this_map
          type: boolean
        visitor_access:
          example: ""
          title: visitor_access
          type: string
      title: MapSettings
      type: object
    MapWithAuthToken:
      example:
        picture_url: https://...
        updated_at: 2000-01-23T04:56:07.000+00:00
        visibility: public
        counts:
          subscriptions: 3892
          attachments: 31
          comments: 234
          respots: 24
          spots: 67
          impressions: 234332
        owner_id: 9829358
        created_at: 2000-01-23T04:56:07.000+00:00
        description: "A collection of restaurants, cafes, clubs and random spots that\
          \ I recommend in Berlin"
        id: 18234843
        title: My favourite places in Berlin
        token: 1-x_gqu7eLBe3uKoAGAGXy
      properties:
        counts:
          $ref: '#/components/schemas/MapCounts'
        created_at:
          format: date-time
          title: created_at
          type: string
        description:
          example: "A collection of restaurants, cafes, clubs and random spots that\
            \ I recommend in Berlin"
          title: description
          type: string
        id:
          example: 18234843
          title: id
          type: integer
        owner_id:
          example: 9829358
          title: owner_id
          type: integer
        picture_url:
          example: https://...
          title: picture_url
          type: string
        title:
          example: My favourite places in Berlin
          title: title
          type: string
        token:
          example: 1-x_gqu7eLBe3uKoAGAGXy
          title: token
          type: string
        updated_at:
          format: date-time
          title: updated_at
          type: string
        visibility:
          enum:
          - public
          - link
          - private
          example: public
          title: visibility
          type: string
      title: MapWithAuthToken
      type: object
    MapWithRelation:
      example:
        map_settings:
          respotting_to_this_map: true
          visitor_access: ""
          editor_access: ""
        picture_url: https://...
        updated_at: 2000-01-23T04:56:07.000+00:00
        visibility: public
        counts:
          subscriptions: 3892
          attachments: 31
          comments: 234
          respots: 24
          spots: 67
          impressions: 234332
        owner_id: 9829358
        created_at: 2000-01-23T04:56:07.000+00:00
        description: "A collection of restaurants, cafes, clubs and random spots that\
          \ I recommend in Berlin"
        id: 18234843
        title: My favourite places in Berlin
        relation:
          subscribed: true
          access: ""
          access_group: owner
      properties:
        counts:
          $ref: '#/components/schemas/MapCounts'
        created_at:
          format: date-time
          title: created_at
          type: string
        description:
          example: "A collection of restaurants, cafes, clubs and random spots that\
            \ I recommend in Berlin"
          title: description
          type: string
        id:
          example: 18234843
          title: id
          type: integer
        map_settings:
          $ref: '#/components/schemas/MapSettings'
        owner_id:
          example: 9829358
          title: owner_id
          type: integer
        picture_url:
          example: https://...
          title: picture_url
          type: string
        relation:
          $ref: '#/components/schemas/MapRelation'
        title:
          example: My favourite places in Berlin
          title: title
          type: string
        updated_at:
          format: date-time
          title: updated_at
          type: string
        visibility:
          enum:
          - public
          - link
          - private
          example: public
          title: visibility
          type: string
      title: MapWithRelation
      type: object
    Respot:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        map_id: 8393450
        spot:
          picture_url: https://...
          counts:
            attachments: 4
            comments: 24
            respot: 34
          created_at: 2000-01-23T04:56:07.000+00:00
          description: Landed here by accident but look how wonderful this place is
            in the photos attached
          lon: 10.58349
          time_zone: Berlin
          title: Beautiful place out in the country
          updated_at: 2000-01-23T04:56:07.000+00:00
          map_id: 394805
          id: 5932234
          user:
            picture_url: https://...
            screen_name: billhicks
            counts:
              maps: 24
            about: The comedian
            header_picture: https://...
            name: Bill Hicks
            location: "Little Rock, Arkansas"
            id: 5829035
            url: http://www.billhicks.com
          lat: 53.112385
          status: approved
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 589032
        map:
          map_settings:
            respotting_to_this_map: true
            visitor_access: ""
            editor_access: ""
          picture_url: https://...
          updated_at: 2000-01-23T04:56:07.000+00:00
          visibility: public
          counts:
            subscriptions: 3892
            attachments: 31
            comments: 234
            respots: 24
            spots: 67
            impressions: 234332
          owner_id: 9829358
          created_at: 2000-01-23T04:56:07.000+00:00
          description: "A collection of restaurants, cafes, clubs and random spots\
            \ that I recommend in Berlin"
          id: 18234843
          title: My favourite places in Berlin
        user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
      properties:
        created_at:
          format: date-time
          title: created_at
          type: string
        id:
          example: 589032
          title: id
          type: integer
        map:
          $ref: '#/components/schemas/Map'
        map_id:
          example: 8393450
          title: map_id
          type: integer
        spot:
          $ref: '#/components/schemas/Spot'
        updated_at:
          format: date-time
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/User'
      title: Respot
      type: object
    Spot:
      example:
        picture_url: https://...
        counts:
          attachments: 4
          comments: 24
          respot: 34
        created_at: 2000-01-23T04:56:07.000+00:00
        description: Landed here by accident but look how wonderful this place is
          in the photos attached
        lon: 10.58349
        time_zone: Berlin
        title: Beautiful place out in the country
        updated_at: 2000-01-23T04:56:07.000+00:00
        map_id: 394805
        id: 5932234
        user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
        lat: 53.112385
        status: approved
      properties:
        counts:
          $ref: '#/components/schemas/SpotCounts'
        created_at:
          format: date-time
          title: created_at
          type: string
        description:
          example: Landed here by accident but look how wonderful this place is in
            the photos attached
          title: description
          type: string
        id:
          example: 5932234
          title: id
          type: integer
        lat:
          example: 53.112385
          title: lat
          type: number
        lon:
          example: 10.58349
          title: lon
          type: number
        map_id:
          example: 394805
          title: map_id
          type: integer
        picture_url:
          example: https://...
          title: picture_url
          type: string
        status:
          enum:
          - approved
          - unapproved
          example: approved
          title: status
          type: string
        time_zone:
          example: Berlin
          title: time_zone
          type: string
        title:
          example: Beautiful place out in the country
          title: title
          type: string
        updated_at:
          format: date-time
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/User'
      title: Spot
      type: object
    SpotCounts:
      example:
        attachments: 4
        comments: 24
        respot: 34
      properties:
        attachments:
          example: 4
          title: attachments
          type: integer
        comments:
          example: 24
          title: comments
          type: integer
        respot:
          example: 34
          title: respot
          type: integer
      title: SpotCounts
      type: object
    SpotEditable:
      example:
        description: Landed here by accident but look how wonderful this place is
          in the photos attached
        lon: 10.58349
        time_zone: Berlin
        title: Beautiful place out in the country
        lat: 53.112385
        picture: <BASE_64_ENCODED_STRING>
      properties:
        description:
          example: Landed here by accident but look how wonderful this place is in
            the photos attached
          title: description
          type: string
        lat:
          example: 53.112385
          title: lat
          type: number
        lon:
          example: 10.58349
          title: lon
          type: number
        picture:
          example: <BASE_64_ENCODED_STRING>
          title: picture
          type: string
        time_zone:
          example: Berlin
          title: time_zone
          type: string
        title:
          example: Beautiful place out in the country
          title: title
          type: string
      title: SpotEditable
      type: object
    Subscription:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 852002
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 23950552
        map:
          map_settings:
            respotting_to_this_map: true
            visitor_access: ""
            editor_access: ""
          picture_url: https://...
          updated_at: 2000-01-23T04:56:07.000+00:00
          visibility: public
          counts:
            subscriptions: 3892
            attachments: 31
            comments: 234
            respots: 24
            spots: 67
            impressions: 234332
          owner_id: 9829358
          created_at: 2000-01-23T04:56:07.000+00:00
          description: "A collection of restaurants, cafes, clubs and random spots\
            \ that I recommend in Berlin"
          id: 18234843
          title: My favourite places in Berlin
        user:
          picture_url: https://...
          screen_name: billhicks
          counts:
            maps: 24
          about: The comedian
          header_picture: https://...
          name: Bill Hicks
          location: "Little Rock, Arkansas"
          id: 5829035
          url: http://www.billhicks.com
      properties:
        created_at:
          format: date-time
          title: created_at
          type: string
        id:
          example: 23950552
          title: id
          type: integer
        map:
          $ref: '#/components/schemas/Map'
        updated_at:
          format: date-time
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/User'
        user_id:
          example: 852002
          title: user_id
          type: integer
      title: Subscription
      type: object
    User:
      example:
        picture_url: https://...
        screen_name: billhicks
        counts:
          maps: 24
        about: The comedian
        header_picture: https://...
        name: Bill Hicks
        location: "Little Rock, Arkansas"
        id: 5829035
        url: http://www.billhicks.com
      properties:
        about:
          example: The comedian
          title: about
          type: string
        counts:
          $ref: '#/components/schemas/User_counts'
        header_picture:
          example: https://...
          title: header_picture
          type: string
        id:
          example: 5829035
          title: id
          type: integer
        location:
          example: "Little Rock, Arkansas"
          title: location
          type: string
        name:
          example: Bill Hicks
          title: name
          type: string
        picture_url:
          example: https://...
          title: picture_url
          type: string
        screen_name:
          example: billhicks
          title: screen_name
          type: string
        url:
          example: http://www.billhicks.com
          title: url
          type: string
      title: User
      type: object
    UserAuthentication:
      example:
        password: ••••••••
        email: a@b.com
      properties:
        email:
          example: a@b.com
          title: email
          type: string
        password:
          example: ••••••••
          title: password
          type: string
      title: UserAuthentication
      type: object
    UserEditable:
      example:
        screen_name: billhicks
        about: The comedian
        name: Bill Hicks
        header: <BASE_64_ENCODED_STRING>
        language: en
        location: "Little Rock, Arkansas"
        time_zone: Pacific Time (US & Canada)
        picture: <BASE_64_ENCODED_STRING>
        url: http://www.billhicks.com
      properties:
        about:
          example: The comedian
          title: about
          type: string
        header:
          example: <BASE_64_ENCODED_STRING>
          title: header
          type: string
        language:
          example: en
          title: language
          type: string
        location:
          example: "Little Rock, Arkansas"
          title: location
          type: string
        name:
          example: Bill Hicks
          title: name
          type: string
        picture:
          example: <BASE_64_ENCODED_STRING>
          title: picture
          type: string
        screen_name:
          example: billhicks
          title: screen_name
          type: string
        time_zone:
          example: Pacific Time (US & Canada)
          title: time_zone
          type: string
        url:
          example: http://www.billhicks.com
          title: url
          type: string
      title: UserEditable
      type: object
    UserFullProfile:
      allOf:
      - $ref: '#/components/schemas/User'
      example:
        language: en
        auth_token: 6g8as82h3kj23h2
        time_zone: Pacific Time (US & Canada)
      properties:
        auth_token:
          example: 6g8as82h3kj23h2
          title: auth_token
          type: string
        language:
          example: en
          title: language
          type: string
        time_zone:
          example: Pacific Time (US & Canada)
          title: time_zone
          type: string
      title: UserFullProfile
    User_counts:
      example:
        maps: 24
      properties:
        maps:
          example: 24
          title: maps
          type: integer
      title: User_counts
      type: object
x-original-swagger-version: "2.0"
