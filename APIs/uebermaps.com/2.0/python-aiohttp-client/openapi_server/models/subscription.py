# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.map import Map
from openapi_server.models.user import User
from openapi_server import util


class Subscription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, id: int=None, map: Map=None, updated_at: datetime=None, user: User=None, user_id: int=None):
        """Subscription - a model defined in OpenAPI

        :param created_at: The created_at of this Subscription.
        :param id: The id of this Subscription.
        :param map: The map of this Subscription.
        :param updated_at: The updated_at of this Subscription.
        :param user: The user of this Subscription.
        :param user_id: The user_id of this Subscription.
        """
        self.openapi_types = {
            'created_at': datetime,
            'id': int,
            'map': Map,
            'updated_at': datetime,
            'user': User,
            'user_id': int
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'id': 'id',
            'map': 'map',
            'updated_at': 'updated_at',
            'user': 'user',
            'user_id': 'user_id'
        }

        self._created_at = created_at
        self._id = id
        self._map = map
        self._updated_at = updated_at
        self._user = user
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Subscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subscription of this Subscription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Subscription.


        :return: The created_at of this Subscription.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Subscription.


        :param created_at: The created_at of this Subscription.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this Subscription.


        :return: The id of this Subscription.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Subscription.


        :param id: The id of this Subscription.
        :type id: int
        """

        self._id = id

    @property
    def map(self):
        """Gets the map of this Subscription.


        :return: The map of this Subscription.
        :rtype: Map
        """
        return self._map

    @map.setter
    def map(self, map):
        """Sets the map of this Subscription.


        :param map: The map of this Subscription.
        :type map: Map
        """

        self._map = map

    @property
    def updated_at(self):
        """Gets the updated_at of this Subscription.


        :return: The updated_at of this Subscription.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Subscription.


        :param updated_at: The updated_at of this Subscription.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def user(self):
        """Gets the user of this Subscription.


        :return: The user of this Subscription.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Subscription.


        :param user: The user of this Subscription.
        :type user: User
        """

        self._user = user

    @property
    def user_id(self):
        """Gets the user_id of this Subscription.


        :return: The user_id of this Subscription.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Subscription.


        :param user_id: The user_id of this Subscription.
        :type user_id: int
        """

        self._user_id = user_id
