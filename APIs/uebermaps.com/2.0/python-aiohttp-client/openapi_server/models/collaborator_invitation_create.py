# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CollaboratorInvitationCreate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, emails: str=None, is_admin: bool=None, map_id: int=None, user_ids: str=None):
        """CollaboratorInvitationCreate - a model defined in OpenAPI

        :param emails: The emails of this CollaboratorInvitationCreate.
        :param is_admin: The is_admin of this CollaboratorInvitationCreate.
        :param map_id: The map_id of this CollaboratorInvitationCreate.
        :param user_ids: The user_ids of this CollaboratorInvitationCreate.
        """
        self.openapi_types = {
            'emails': str,
            'is_admin': bool,
            'map_id': int,
            'user_ids': str
        }

        self.attribute_map = {
            'emails': 'emails',
            'is_admin': 'is_admin',
            'map_id': 'map_id',
            'user_ids': 'user_ids'
        }

        self._emails = emails
        self._is_admin = is_admin
        self._map_id = map_id
        self._user_ids = user_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CollaboratorInvitationCreate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CollaboratorInvitationCreate of this CollaboratorInvitationCreate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def emails(self):
        """Gets the emails of this CollaboratorInvitationCreate.


        :return: The emails of this CollaboratorInvitationCreate.
        :rtype: str
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this CollaboratorInvitationCreate.


        :param emails: The emails of this CollaboratorInvitationCreate.
        :type emails: str
        """

        self._emails = emails

    @property
    def is_admin(self):
        """Gets the is_admin of this CollaboratorInvitationCreate.


        :return: The is_admin of this CollaboratorInvitationCreate.
        :rtype: bool
        """
        return self._is_admin

    @is_admin.setter
    def is_admin(self, is_admin):
        """Sets the is_admin of this CollaboratorInvitationCreate.


        :param is_admin: The is_admin of this CollaboratorInvitationCreate.
        :type is_admin: bool
        """

        self._is_admin = is_admin

    @property
    def map_id(self):
        """Gets the map_id of this CollaboratorInvitationCreate.


        :return: The map_id of this CollaboratorInvitationCreate.
        :rtype: int
        """
        return self._map_id

    @map_id.setter
    def map_id(self, map_id):
        """Sets the map_id of this CollaboratorInvitationCreate.


        :param map_id: The map_id of this CollaboratorInvitationCreate.
        :type map_id: int
        """

        self._map_id = map_id

    @property
    def user_ids(self):
        """Gets the user_ids of this CollaboratorInvitationCreate.


        :return: The user_ids of this CollaboratorInvitationCreate.
        :rtype: str
        """
        return self._user_ids

    @user_ids.setter
    def user_ids(self, user_ids):
        """Sets the user_ids of this CollaboratorInvitationCreate.


        :param user_ids: The user_ids of this CollaboratorInvitationCreate.
        :type user_ids: str
        """

        self._user_ids = user_ids
