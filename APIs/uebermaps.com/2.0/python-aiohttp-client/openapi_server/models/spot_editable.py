# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SpotEditable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, lat: float=None, lon: float=None, picture: str=None, time_zone: str=None, title: str=None):
        """SpotEditable - a model defined in OpenAPI

        :param description: The description of this SpotEditable.
        :param lat: The lat of this SpotEditable.
        :param lon: The lon of this SpotEditable.
        :param picture: The picture of this SpotEditable.
        :param time_zone: The time_zone of this SpotEditable.
        :param title: The title of this SpotEditable.
        """
        self.openapi_types = {
            'description': str,
            'lat': float,
            'lon': float,
            'picture': str,
            'time_zone': str,
            'title': str
        }

        self.attribute_map = {
            'description': 'description',
            'lat': 'lat',
            'lon': 'lon',
            'picture': 'picture',
            'time_zone': 'time_zone',
            'title': 'title'
        }

        self._description = description
        self._lat = lat
        self._lon = lon
        self._picture = picture
        self._time_zone = time_zone
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpotEditable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpotEditable of this SpotEditable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this SpotEditable.


        :return: The description of this SpotEditable.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SpotEditable.


        :param description: The description of this SpotEditable.
        :type description: str
        """

        self._description = description

    @property
    def lat(self):
        """Gets the lat of this SpotEditable.


        :return: The lat of this SpotEditable.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this SpotEditable.


        :param lat: The lat of this SpotEditable.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self):
        """Gets the lon of this SpotEditable.


        :return: The lon of this SpotEditable.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """Sets the lon of this SpotEditable.


        :param lon: The lon of this SpotEditable.
        :type lon: float
        """

        self._lon = lon

    @property
    def picture(self):
        """Gets the picture of this SpotEditable.


        :return: The picture of this SpotEditable.
        :rtype: str
        """
        return self._picture

    @picture.setter
    def picture(self, picture):
        """Sets the picture of this SpotEditable.


        :param picture: The picture of this SpotEditable.
        :type picture: str
        """

        self._picture = picture

    @property
    def time_zone(self):
        """Gets the time_zone of this SpotEditable.


        :return: The time_zone of this SpotEditable.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this SpotEditable.


        :param time_zone: The time_zone of this SpotEditable.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def title(self):
        """Gets the title of this SpotEditable.


        :return: The title of this SpotEditable.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SpotEditable.


        :param title: The title of this SpotEditable.
        :type title: str
        """

        self._title = title
