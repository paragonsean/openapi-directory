# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserEditable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, about: str=None, header: str=None, language: str=None, location: str=None, name: str=None, picture: str=None, screen_name: str=None, time_zone: str=None, url: str=None):
        """UserEditable - a model defined in OpenAPI

        :param about: The about of this UserEditable.
        :param header: The header of this UserEditable.
        :param language: The language of this UserEditable.
        :param location: The location of this UserEditable.
        :param name: The name of this UserEditable.
        :param picture: The picture of this UserEditable.
        :param screen_name: The screen_name of this UserEditable.
        :param time_zone: The time_zone of this UserEditable.
        :param url: The url of this UserEditable.
        """
        self.openapi_types = {
            'about': str,
            'header': str,
            'language': str,
            'location': str,
            'name': str,
            'picture': str,
            'screen_name': str,
            'time_zone': str,
            'url': str
        }

        self.attribute_map = {
            'about': 'about',
            'header': 'header',
            'language': 'language',
            'location': 'location',
            'name': 'name',
            'picture': 'picture',
            'screen_name': 'screen_name',
            'time_zone': 'time_zone',
            'url': 'url'
        }

        self._about = about
        self._header = header
        self._language = language
        self._location = location
        self._name = name
        self._picture = picture
        self._screen_name = screen_name
        self._time_zone = time_zone
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserEditable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserEditable of this UserEditable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def about(self):
        """Gets the about of this UserEditable.


        :return: The about of this UserEditable.
        :rtype: str
        """
        return self._about

    @about.setter
    def about(self, about):
        """Sets the about of this UserEditable.


        :param about: The about of this UserEditable.
        :type about: str
        """

        self._about = about

    @property
    def header(self):
        """Gets the header of this UserEditable.


        :return: The header of this UserEditable.
        :rtype: str
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this UserEditable.


        :param header: The header of this UserEditable.
        :type header: str
        """

        self._header = header

    @property
    def language(self):
        """Gets the language of this UserEditable.


        :return: The language of this UserEditable.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this UserEditable.


        :param language: The language of this UserEditable.
        :type language: str
        """

        self._language = language

    @property
    def location(self):
        """Gets the location of this UserEditable.


        :return: The location of this UserEditable.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this UserEditable.


        :param location: The location of this UserEditable.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this UserEditable.


        :return: The name of this UserEditable.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserEditable.


        :param name: The name of this UserEditable.
        :type name: str
        """

        self._name = name

    @property
    def picture(self):
        """Gets the picture of this UserEditable.


        :return: The picture of this UserEditable.
        :rtype: str
        """
        return self._picture

    @picture.setter
    def picture(self, picture):
        """Sets the picture of this UserEditable.


        :param picture: The picture of this UserEditable.
        :type picture: str
        """

        self._picture = picture

    @property
    def screen_name(self):
        """Gets the screen_name of this UserEditable.


        :return: The screen_name of this UserEditable.
        :rtype: str
        """
        return self._screen_name

    @screen_name.setter
    def screen_name(self, screen_name):
        """Sets the screen_name of this UserEditable.


        :param screen_name: The screen_name of this UserEditable.
        :type screen_name: str
        """

        self._screen_name = screen_name

    @property
    def time_zone(self):
        """Gets the time_zone of this UserEditable.


        :return: The time_zone of this UserEditable.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this UserEditable.


        :param time_zone: The time_zone of this UserEditable.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def url(self):
        """Gets the url of this UserEditable.


        :return: The url of this UserEditable.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this UserEditable.


        :param url: The url of this UserEditable.
        :type url: str
        """

        self._url = url
