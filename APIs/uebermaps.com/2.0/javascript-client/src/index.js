/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Attachment from './model/Attachment';
import Collaborator from './model/Collaborator';
import CollaboratorEditable from './model/CollaboratorEditable';
import CollaboratorInvitation from './model/CollaboratorInvitation';
import CollaboratorInvitationCreate from './model/CollaboratorInvitationCreate';
import Comment from './model/Comment';
import CommentEditable from './model/CommentEditable';
import Event from './model/Event';
import EventCounts from './model/EventCounts';
import EventEditable from './model/EventEditable';
import Map from './model/Map';
import MapCounts from './model/MapCounts';
import MapEditable from './model/MapEditable';
import MapRelation from './model/MapRelation';
import MapSettings from './model/MapSettings';
import MapWithAuthToken from './model/MapWithAuthToken';
import MapWithRelation from './model/MapWithRelation';
import Respot from './model/Respot';
import Spot from './model/Spot';
import SpotCounts from './model/SpotCounts';
import SpotEditable from './model/SpotEditable';
import Subscription from './model/Subscription';
import User from './model/User';
import UserAuthentication from './model/UserAuthentication';
import UserCounts from './model/UserCounts';
import UserEditable from './model/UserEditable';
import UserFullProfile from './model/UserFullProfile';
import AccountApi from './api/AccountApi';
import AttachmentsApi from './api/AttachmentsApi';
import AuthenticationApi from './api/AuthenticationApi';
import CollaboratorInvitationsApi from './api/CollaboratorInvitationsApi';
import CollaboratorsApi from './api/CollaboratorsApi';
import CommentsApi from './api/CommentsApi';
import EventsApi from './api/EventsApi';
import MapsApi from './api/MapsApi';
import RespotsApi from './api/RespotsApi';
import SearchApi from './api/SearchApi';
import ShareApi from './api/ShareApi';
import SpotsApi from './api/SpotsApi';
import SubscriptionsApi from './api/SubscriptionsApi';
import TrendsApi from './api/TrendsApi';
import UsersApi from './api/UsersApi';


/**
* Enable people to store spots on public and private maps.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var UebermapsApiEndpoints = require('index'); // See note below*.
* var xxxSvc = new UebermapsApiEndpoints.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new UebermapsApiEndpoints.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new UebermapsApiEndpoints.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new UebermapsApiEndpoints.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Attachment model constructor.
     * @property {module:model/Attachment}
     */
    Attachment,

    /**
     * The Collaborator model constructor.
     * @property {module:model/Collaborator}
     */
    Collaborator,

    /**
     * The CollaboratorEditable model constructor.
     * @property {module:model/CollaboratorEditable}
     */
    CollaboratorEditable,

    /**
     * The CollaboratorInvitation model constructor.
     * @property {module:model/CollaboratorInvitation}
     */
    CollaboratorInvitation,

    /**
     * The CollaboratorInvitationCreate model constructor.
     * @property {module:model/CollaboratorInvitationCreate}
     */
    CollaboratorInvitationCreate,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The CommentEditable model constructor.
     * @property {module:model/CommentEditable}
     */
    CommentEditable,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventCounts model constructor.
     * @property {module:model/EventCounts}
     */
    EventCounts,

    /**
     * The EventEditable model constructor.
     * @property {module:model/EventEditable}
     */
    EventEditable,

    /**
     * The Map model constructor.
     * @property {module:model/Map}
     */
    Map,

    /**
     * The MapCounts model constructor.
     * @property {module:model/MapCounts}
     */
    MapCounts,

    /**
     * The MapEditable model constructor.
     * @property {module:model/MapEditable}
     */
    MapEditable,

    /**
     * The MapRelation model constructor.
     * @property {module:model/MapRelation}
     */
    MapRelation,

    /**
     * The MapSettings model constructor.
     * @property {module:model/MapSettings}
     */
    MapSettings,

    /**
     * The MapWithAuthToken model constructor.
     * @property {module:model/MapWithAuthToken}
     */
    MapWithAuthToken,

    /**
     * The MapWithRelation model constructor.
     * @property {module:model/MapWithRelation}
     */
    MapWithRelation,

    /**
     * The Respot model constructor.
     * @property {module:model/Respot}
     */
    Respot,

    /**
     * The Spot model constructor.
     * @property {module:model/Spot}
     */
    Spot,

    /**
     * The SpotCounts model constructor.
     * @property {module:model/SpotCounts}
     */
    SpotCounts,

    /**
     * The SpotEditable model constructor.
     * @property {module:model/SpotEditable}
     */
    SpotEditable,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserAuthentication model constructor.
     * @property {module:model/UserAuthentication}
     */
    UserAuthentication,

    /**
     * The UserCounts model constructor.
     * @property {module:model/UserCounts}
     */
    UserCounts,

    /**
     * The UserEditable model constructor.
     * @property {module:model/UserEditable}
     */
    UserEditable,

    /**
     * The UserFullProfile model constructor.
     * @property {module:model/UserFullProfile}
     */
    UserFullProfile,

    /**
    * The AccountApi service constructor.
    * @property {module:api/AccountApi}
    */
    AccountApi,

    /**
    * The AttachmentsApi service constructor.
    * @property {module:api/AttachmentsApi}
    */
    AttachmentsApi,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi,

    /**
    * The CollaboratorInvitationsApi service constructor.
    * @property {module:api/CollaboratorInvitationsApi}
    */
    CollaboratorInvitationsApi,

    /**
    * The CollaboratorsApi service constructor.
    * @property {module:api/CollaboratorsApi}
    */
    CollaboratorsApi,

    /**
    * The CommentsApi service constructor.
    * @property {module:api/CommentsApi}
    */
    CommentsApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The MapsApi service constructor.
    * @property {module:api/MapsApi}
    */
    MapsApi,

    /**
    * The RespotsApi service constructor.
    * @property {module:api/RespotsApi}
    */
    RespotsApi,

    /**
    * The SearchApi service constructor.
    * @property {module:api/SearchApi}
    */
    SearchApi,

    /**
    * The ShareApi service constructor.
    * @property {module:api/ShareApi}
    */
    ShareApi,

    /**
    * The SpotsApi service constructor.
    * @property {module:api/SpotsApi}
    */
    SpotsApi,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi,

    /**
    * The TrendsApi service constructor.
    * @property {module:api/TrendsApi}
    */
    TrendsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
