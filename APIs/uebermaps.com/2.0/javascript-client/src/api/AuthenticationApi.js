/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UserAuthentication from '../model/UserAuthentication';
import UserFullProfile from '../model/UserFullProfile';

/**
* Authentication service.
* @module api/AuthenticationApi
* @version 2.0
*/
export default class AuthenticationApi {

    /**
    * Constructs a new AuthenticationApi. 
    * @alias module:api/AuthenticationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the authenticationPost operation.
     * @callback module:api/AuthenticationApi~authenticationPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserFullProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sign in user
     * Sign in user. Wrap authentication parameters in [user].
     * @param {module:model/UserAuthentication} user user authentication attributes
     * @param {module:api/AuthenticationApi~authenticationPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserFullProfile}
     */
    authenticationPost(user, callback) {
      let postBody = user;
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling authenticationPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserFullProfile;
      return this.apiClient.callApi(
        '/authentication', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
