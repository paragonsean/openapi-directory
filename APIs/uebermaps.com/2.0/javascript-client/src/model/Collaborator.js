/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Map from './Map';
import User from './User';

/**
 * The Collaborator model module.
 * @module model/Collaborator
 * @version 2.0
 */
class Collaborator {
    /**
     * Constructs a new <code>Collaborator</code>.
     * @alias module:model/Collaborator
     */
    constructor() { 
        
        Collaborator.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Collaborator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Collaborator} obj Optional instance to populate.
     * @return {module:model/Collaborator} The populated <code>Collaborator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Collaborator();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('is_admin')) {
                obj['is_admin'] = ApiClient.convertToType(data['is_admin'], 'Boolean');
            }
            if (data.hasOwnProperty('map')) {
                obj['map'] = Map.constructFromObject(data['map']);
            }
            if (data.hasOwnProperty('map_id')) {
                obj['map_id'] = ApiClient.convertToType(data['map_id'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = User.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Collaborator</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Collaborator</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // validate the optional field `map`
        if (data['map']) { // data not null
          Map.validateJSON(data['map']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          User.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {Date} created_at
 */
Collaborator.prototype['created_at'] = undefined;

/**
 * @member {module:model/Collaborator.GroupEnum} group
 */
Collaborator.prototype['group'] = undefined;

/**
 * @member {Number} id
 */
Collaborator.prototype['id'] = undefined;

/**
 * @member {Boolean} is_admin
 */
Collaborator.prototype['is_admin'] = undefined;

/**
 * @member {module:model/Map} map
 */
Collaborator.prototype['map'] = undefined;

/**
 * @member {Number} map_id
 */
Collaborator.prototype['map_id'] = undefined;

/**
 * @member {Date} updated_at
 */
Collaborator.prototype['updated_at'] = undefined;

/**
 * @member {module:model/User} user
 */
Collaborator.prototype['user'] = undefined;

/**
 * @member {Number} user_id
 */
Collaborator.prototype['user_id'] = undefined;





/**
 * Allowed values for the <code>group</code> property.
 * @enum {String}
 * @readonly
 */
Collaborator['GroupEnum'] = {

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin",

    /**
     * value: "editor"
     * @const
     */
    "editor": "editor"
};



export default Collaborator;

