/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SpotCounts model module.
 * @module model/SpotCounts
 * @version 2.0
 */
class SpotCounts {
    /**
     * Constructs a new <code>SpotCounts</code>.
     * @alias module:model/SpotCounts
     */
    constructor() { 
        
        SpotCounts.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpotCounts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpotCounts} obj Optional instance to populate.
     * @return {module:model/SpotCounts} The populated <code>SpotCounts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpotCounts();

            if (data.hasOwnProperty('attachments')) {
                obj['attachments'] = ApiClient.convertToType(data['attachments'], 'Number');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'Number');
            }
            if (data.hasOwnProperty('respot')) {
                obj['respot'] = ApiClient.convertToType(data['respot'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpotCounts</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpotCounts</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} attachments
 */
SpotCounts.prototype['attachments'] = undefined;

/**
 * @member {Number} comments
 */
SpotCounts.prototype['comments'] = undefined;

/**
 * @member {Number} respot
 */
SpotCounts.prototype['respot'] = undefined;






export default SpotCounts;

