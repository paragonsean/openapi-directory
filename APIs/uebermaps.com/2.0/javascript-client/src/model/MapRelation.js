/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MapRelation model module.
 * @module model/MapRelation
 * @version 2.0
 */
class MapRelation {
    /**
     * Constructs a new <code>MapRelation</code>.
     * @alias module:model/MapRelation
     */
    constructor() { 
        
        MapRelation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MapRelation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MapRelation} obj Optional instance to populate.
     * @return {module:model/MapRelation} The populated <code>MapRelation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MapRelation();

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
            if (data.hasOwnProperty('access_group')) {
                obj['access_group'] = ApiClient.convertToType(data['access_group'], 'String');
            }
            if (data.hasOwnProperty('subscribed')) {
                obj['subscribed'] = ApiClient.convertToType(data['subscribed'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MapRelation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MapRelation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access'] && !(typeof data['access'] === 'string' || data['access'] instanceof String)) {
            throw new Error("Expected the field `access` to be a primitive type in the JSON string but got " + data['access']);
        }
        // ensure the json data is a string
        if (data['access_group'] && !(typeof data['access_group'] === 'string' || data['access_group'] instanceof String)) {
            throw new Error("Expected the field `access_group` to be a primitive type in the JSON string but got " + data['access_group']);
        }

        return true;
    }


}



/**
 * @member {String} access
 */
MapRelation.prototype['access'] = undefined;

/**
 * @member {module:model/MapRelation.AccessGroupEnum} access_group
 */
MapRelation.prototype['access_group'] = undefined;

/**
 * @member {Boolean} subscribed
 */
MapRelation.prototype['subscribed'] = undefined;





/**
 * Allowed values for the <code>access_group</code> property.
 * @enum {String}
 * @readonly
 */
MapRelation['AccessGroupEnum'] = {

    /**
     * value: "visitor"
     * @const
     */
    "visitor": "visitor",

    /**
     * value: "editor"
     * @const
     */
    "editor": "editor",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin"
};



export default MapRelation;

