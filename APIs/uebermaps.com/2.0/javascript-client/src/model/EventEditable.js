/**
 * uebermaps API endpoints
 * Enable people to store spots on public and private maps
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventEditable model module.
 * @module model/EventEditable
 * @version 2.0
 */
class EventEditable {
    /**
     * Constructs a new <code>EventEditable</code>.
     * @alias module:model/EventEditable
     */
    constructor() { 
        
        EventEditable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventEditable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventEditable} obj Optional instance to populate.
     * @return {module:model/EventEditable} The populated <code>EventEditable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventEditable();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('ends_at')) {
                obj['ends_at'] = ApiClient.convertToType(data['ends_at'], 'Date');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('lon')) {
                obj['lon'] = ApiClient.convertToType(data['lon'], 'Number');
            }
            if (data.hasOwnProperty('picture')) {
                obj['picture'] = ApiClient.convertToType(data['picture'], 'String');
            }
            if (data.hasOwnProperty('starts_at')) {
                obj['starts_at'] = ApiClient.convertToType(data['starts_at'], 'Date');
            }
            if (data.hasOwnProperty('time_zone')) {
                obj['time_zone'] = ApiClient.convertToType(data['time_zone'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventEditable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventEditable</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['picture'] && !(typeof data['picture'] === 'string' || data['picture'] instanceof String)) {
            throw new Error("Expected the field `picture` to be a primitive type in the JSON string but got " + data['picture']);
        }
        // ensure the json data is a string
        if (data['time_zone'] && !(typeof data['time_zone'] === 'string' || data['time_zone'] instanceof String)) {
            throw new Error("Expected the field `time_zone` to be a primitive type in the JSON string but got " + data['time_zone']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {String} description
 */
EventEditable.prototype['description'] = undefined;

/**
 * @member {Date} ends_at
 */
EventEditable.prototype['ends_at'] = undefined;

/**
 * @member {Number} lat
 */
EventEditable.prototype['lat'] = undefined;

/**
 * @member {Number} lon
 */
EventEditable.prototype['lon'] = undefined;

/**
 * @member {String} picture
 */
EventEditable.prototype['picture'] = undefined;

/**
 * @member {Date} starts_at
 */
EventEditable.prototype['starts_at'] = undefined;

/**
 * @member {String} time_zone
 */
EventEditable.prototype['time_zone'] = undefined;

/**
 * @member {String} title
 */
EventEditable.prototype['title'] = undefined;

/**
 * @member {Number} user_id
 */
EventEditable.prototype['user_id'] = undefined;






export default EventEditable;

