# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deprecations import Deprecations
from openapi_server.models.feed import Feed
from openapi_server import util


class Feeds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployment_root: str=None, deprecations: Deprecations=None, feed: List[Feed]=None):
        """Feeds - a model defined in OpenAPI

        :param deployment_root: The deployment_root of this Feeds.
        :param deprecations: The deprecations of this Feeds.
        :param feed: The feed of this Feeds.
        """
        self.openapi_types = {
            'deployment_root': str,
            'deprecations': Deprecations,
            'feed': List[Feed]
        }

        self.attribute_map = {
            'deployment_root': 'deployment_root',
            'deprecations': 'deprecations',
            'feed': 'feed'
        }

        self._deployment_root = deployment_root
        self._deprecations = deprecations
        self._feed = feed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Feeds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The feeds of this Feeds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment_root(self):
        """Gets the deployment_root of this Feeds.


        :return: The deployment_root of this Feeds.
        :rtype: str
        """
        return self._deployment_root

    @deployment_root.setter
    def deployment_root(self, deployment_root):
        """Sets the deployment_root of this Feeds.


        :param deployment_root: The deployment_root of this Feeds.
        :type deployment_root: str
        """

        self._deployment_root = deployment_root

    @property
    def deprecations(self):
        """Gets the deprecations of this Feeds.


        :return: The deprecations of this Feeds.
        :rtype: Deprecations
        """
        return self._deprecations

    @deprecations.setter
    def deprecations(self, deprecations):
        """Sets the deprecations of this Feeds.


        :param deprecations: The deprecations of this Feeds.
        :type deprecations: Deprecations
        """

        self._deprecations = deprecations

    @property
    def feed(self):
        """Gets the feed of this Feeds.


        :return: The feed of this Feeds.
        :rtype: List[Feed]
        """
        return self._feed

    @feed.setter
    def feed(self, feed):
        """Sets the feed of this Feeds.


        :param feed: The feed of this Feeds.
        :type feed: List[Feed]
        """

        self._feed = feed
