# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.prohibits_filter_inner import ProhibitsFilterInner
from openapi_server.models.prohibits_mixin_inner import ProhibitsMixinInner
from openapi_server import util


class Prohibits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: List[ProhibitsFilterInner]=None, mixin: List[ProhibitsMixinInner]=None):
        """Prohibits - a model defined in OpenAPI

        :param filter: The filter of this Prohibits.
        :param mixin: The mixin of this Prohibits.
        """
        self.openapi_types = {
            'filter': List[ProhibitsFilterInner],
            'mixin': List[ProhibitsMixinInner]
        }

        self.attribute_map = {
            'filter': 'filter',
            'mixin': 'mixin'
        }

        self._filter = filter
        self._mixin = mixin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Prohibits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The prohibits of this Prohibits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this Prohibits.


        :return: The filter of this Prohibits.
        :rtype: List[ProhibitsFilterInner]
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this Prohibits.


        :param filter: The filter of this Prohibits.
        :type filter: List[ProhibitsFilterInner]
        """

        self._filter = filter

    @property
    def mixin(self):
        """Gets the mixin of this Prohibits.


        :return: The mixin of this Prohibits.
        :rtype: List[ProhibitsMixinInner]
        """
        return self._mixin

    @mixin.setter
    def mixin(self, mixin):
        """Sets the mixin of this Prohibits.


        :param mixin: The mixin of this Prohibits.
        :type mixin: List[ProhibitsMixinInner]
        """

        self._mixin = mixin
