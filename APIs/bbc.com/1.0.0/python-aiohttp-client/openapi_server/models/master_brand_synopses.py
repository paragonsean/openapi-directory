# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MasterBrandSynopses(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, long: str=None, medium: str=None, short: str=None):
        """MasterBrandSynopses - a model defined in OpenAPI

        :param long: The long of this MasterBrandSynopses.
        :param medium: The medium of this MasterBrandSynopses.
        :param short: The short of this MasterBrandSynopses.
        """
        self.openapi_types = {
            'long': str,
            'medium': str,
            'short': str
        }

        self.attribute_map = {
            'long': 'long',
            'medium': 'medium',
            'short': 'short'
        }

        self._long = long
        self._medium = medium
        self._short = short

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MasterBrandSynopses':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The master_brand_synopses of this MasterBrandSynopses.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def long(self):
        """Gets the long of this MasterBrandSynopses.


        :return: The long of this MasterBrandSynopses.
        :rtype: str
        """
        return self._long

    @long.setter
    def long(self, long):
        """Sets the long of this MasterBrandSynopses.


        :param long: The long of this MasterBrandSynopses.
        :type long: str
        """

        self._long = long

    @property
    def medium(self):
        """Gets the medium of this MasterBrandSynopses.


        :return: The medium of this MasterBrandSynopses.
        :rtype: str
        """
        return self._medium

    @medium.setter
    def medium(self, medium):
        """Sets the medium of this MasterBrandSynopses.


        :param medium: The medium of this MasterBrandSynopses.
        :type medium: str
        """

        self._medium = medium

    @property
    def short(self):
        """Gets the short of this MasterBrandSynopses.


        :return: The short of this MasterBrandSynopses.
        :rtype: str
        """
        return self._short

    @short.setter
    def short(self, short):
        """Sets the short of this MasterBrandSynopses.


        :param short: The short of this MasterBrandSynopses.
        :type short: str
        """

        self._short = short
