# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.master_brand_master_brand_date_range import MasterBrandMasterBrandDateRange
from openapi_server.models.synopses import Synopses
import re
from openapi_server import util


class RelatedLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability: MasterBrandMasterBrandDateRange=None, is_external: bool=None, pid: str=None, position: int=None, synopses: Synopses=None, title: str=None, type: str=None, uri: str=None):
        """RelatedLink - a model defined in OpenAPI

        :param availability: The availability of this RelatedLink.
        :param is_external: The is_external of this RelatedLink.
        :param pid: The pid of this RelatedLink.
        :param position: The position of this RelatedLink.
        :param synopses: The synopses of this RelatedLink.
        :param title: The title of this RelatedLink.
        :param type: The type of this RelatedLink.
        :param uri: The uri of this RelatedLink.
        """
        self.openapi_types = {
            'availability': MasterBrandMasterBrandDateRange,
            'is_external': bool,
            'pid': str,
            'position': int,
            'synopses': Synopses,
            'title': str,
            'type': str,
            'uri': str
        }

        self.attribute_map = {
            'availability': 'availability',
            'is_external': 'is_external',
            'pid': 'pid',
            'position': 'position',
            'synopses': 'synopses',
            'title': 'title',
            'type': 'type',
            'uri': 'uri'
        }

        self._availability = availability
        self._is_external = is_external
        self._pid = pid
        self._position = position
        self._synopses = synopses
        self._title = title
        self._type = type
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelatedLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The related_link of this RelatedLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability(self):
        """Gets the availability of this RelatedLink.


        :return: The availability of this RelatedLink.
        :rtype: MasterBrandMasterBrandDateRange
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this RelatedLink.


        :param availability: The availability of this RelatedLink.
        :type availability: MasterBrandMasterBrandDateRange
        """

        self._availability = availability

    @property
    def is_external(self):
        """Gets the is_external of this RelatedLink.


        :return: The is_external of this RelatedLink.
        :rtype: bool
        """
        return self._is_external

    @is_external.setter
    def is_external(self, is_external):
        """Sets the is_external of this RelatedLink.


        :param is_external: The is_external of this RelatedLink.
        :type is_external: bool
        """

        self._is_external = is_external

    @property
    def pid(self):
        """Gets the pid of this RelatedLink.


        :return: The pid of this RelatedLink.
        :rtype: str
        """
        return self._pid

    @pid.setter
    def pid(self, pid):
        """Sets the pid of this RelatedLink.


        :param pid: The pid of this RelatedLink.
        :type pid: str
        """
        if pid is None:
            raise ValueError("Invalid value for `pid`, must not be `None`")
        if pid is not None and not re.search(r'([a-z0-9\.\-]+|.*PID.*)', pid):
            raise ValueError("Invalid value for `pid`, must be a follow pattern or equal to `/([a-z0-9\.\-]+|.*PID.*)/`")

        self._pid = pid

    @property
    def position(self):
        """Gets the position of this RelatedLink.


        :return: The position of this RelatedLink.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this RelatedLink.


        :param position: The position of this RelatedLink.
        :type position: int
        """

        self._position = position

    @property
    def synopses(self):
        """Gets the synopses of this RelatedLink.


        :return: The synopses of this RelatedLink.
        :rtype: Synopses
        """
        return self._synopses

    @synopses.setter
    def synopses(self, synopses):
        """Sets the synopses of this RelatedLink.


        :param synopses: The synopses of this RelatedLink.
        :type synopses: Synopses
        """

        self._synopses = synopses

    @property
    def title(self):
        """Gets the title of this RelatedLink.


        :return: The title of this RelatedLink.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this RelatedLink.


        :param title: The title of this RelatedLink.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this RelatedLink.


        :return: The type of this RelatedLink.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RelatedLink.


        :param type: The type of this RelatedLink.
        :type type: str
        """

        self._type = type

    @property
    def uri(self):
        """Gets the uri of this RelatedLink.


        :return: The uri of this RelatedLink.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this RelatedLink.


        :param uri: The uri of this RelatedLink.
        :type uri: str
        """

        self._uri = uri
