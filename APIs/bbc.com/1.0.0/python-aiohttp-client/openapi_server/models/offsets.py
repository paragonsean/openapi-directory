# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.offset_in import OffsetIn
from openapi_server import util


class Offsets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offset_in: List[OffsetIn]=None):
        """Offsets - a model defined in OpenAPI

        :param offset_in: The offset_in of this Offsets.
        """
        self.openapi_types = {
            'offset_in': List[OffsetIn]
        }

        self.attribute_map = {
            'offset_in': 'offset_in'
        }

        self._offset_in = offset_in

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Offsets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The offsets of this Offsets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offset_in(self):
        """Gets the offset_in of this Offsets.


        :return: The offset_in of this Offsets.
        :rtype: List[OffsetIn]
        """
        return self._offset_in

    @offset_in.setter
    def offset_in(self, offset_in):
        """Sets the offset_in of this Offsets.


        :param offset_in: The offset_in of this Offsets.
        :type offset_in: List[OffsetIn]
        """

        self._offset_in = offset_in
