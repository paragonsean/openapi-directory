# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contributions_mixin_contributor_name import ContributionsMixinContributorName
from openapi_server import util


class ContributionsMixinContributorContributorContributor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contributions_mixin_contributor_name: ContributionsMixinContributorName=None, href: str=None, type: str=None):
        """ContributionsMixinContributorContributorContributor - a model defined in OpenAPI

        :param contributions_mixin_contributor_name: The contributions_mixin_contributor_name of this ContributionsMixinContributorContributorContributor.
        :param href: The href of this ContributionsMixinContributorContributorContributor.
        :param type: The type of this ContributionsMixinContributorContributorContributor.
        """
        self.openapi_types = {
            'contributions_mixin_contributor_name': ContributionsMixinContributorName,
            'href': str,
            'type': str
        }

        self.attribute_map = {
            'contributions_mixin_contributor_name': 'contributions_mixin_contributor_name',
            'href': 'href',
            'type': 'type'
        }

        self._contributions_mixin_contributor_name = contributions_mixin_contributor_name
        self._href = href
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContributionsMixinContributorContributorContributor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The contributions_mixin_contributor_contributor_contributor of this ContributionsMixinContributorContributorContributor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contributions_mixin_contributor_name(self):
        """Gets the contributions_mixin_contributor_name of this ContributionsMixinContributorContributorContributor.


        :return: The contributions_mixin_contributor_name of this ContributionsMixinContributorContributorContributor.
        :rtype: ContributionsMixinContributorName
        """
        return self._contributions_mixin_contributor_name

    @contributions_mixin_contributor_name.setter
    def contributions_mixin_contributor_name(self, contributions_mixin_contributor_name):
        """Sets the contributions_mixin_contributor_name of this ContributionsMixinContributorContributorContributor.


        :param contributions_mixin_contributor_name: The contributions_mixin_contributor_name of this ContributionsMixinContributorContributorContributor.
        :type contributions_mixin_contributor_name: ContributionsMixinContributorName
        """

        self._contributions_mixin_contributor_name = contributions_mixin_contributor_name

    @property
    def href(self):
        """Gets the href of this ContributionsMixinContributorContributorContributor.


        :return: The href of this ContributionsMixinContributorContributorContributor.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this ContributionsMixinContributorContributorContributor.


        :param href: The href of this ContributionsMixinContributorContributorContributor.
        :type href: str
        """

        self._href = href

    @property
    def type(self):
        """Gets the type of this ContributionsMixinContributorContributorContributor.


        :return: The type of this ContributionsMixinContributorContributorContributor.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ContributionsMixinContributorContributorContributor.


        :param type: The type of this ContributionsMixinContributorContributorContributor.
        :type type: str
        """

        self._type = type
