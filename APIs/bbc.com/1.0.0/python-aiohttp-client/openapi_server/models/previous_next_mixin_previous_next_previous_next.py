# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference import Reference
from openapi_server import util


class PreviousNextMixinPreviousNextPreviousNext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next: Reference=None, previous: Reference=None):
        """PreviousNextMixinPreviousNextPreviousNext - a model defined in OpenAPI

        :param next: The next of this PreviousNextMixinPreviousNextPreviousNext.
        :param previous: The previous of this PreviousNextMixinPreviousNextPreviousNext.
        """
        self.openapi_types = {
            'next': Reference,
            'previous': Reference
        }

        self.attribute_map = {
            'next': 'next',
            'previous': 'previous'
        }

        self._next = next
        self._previous = previous

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviousNextMixinPreviousNextPreviousNext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The previous_next_mixin_previous_next_previous_next of this PreviousNextMixinPreviousNextPreviousNext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next(self):
        """Gets the next of this PreviousNextMixinPreviousNextPreviousNext.


        :return: The next of this PreviousNextMixinPreviousNextPreviousNext.
        :rtype: Reference
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this PreviousNextMixinPreviousNextPreviousNext.


        :param next: The next of this PreviousNextMixinPreviousNextPreviousNext.
        :type next: Reference
        """

        self._next = next

    @property
    def previous(self):
        """Gets the previous of this PreviousNextMixinPreviousNextPreviousNext.


        :return: The previous of this PreviousNextMixinPreviousNextPreviousNext.
        :rtype: Reference
        """
        return self._previous

    @previous.setter
    def previous(self, previous):
        """Sets the previous of this PreviousNextMixinPreviousNextPreviousNext.


        :param previous: The previous of this PreviousNextMixinPreviousNextPreviousNext.
        :type previous: Reference
        """

        self._previous = previous
