# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deprecated import Deprecated
from openapi_server import util


class Deprecations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deprecated: List[Deprecated]=None):
        """Deprecations - a model defined in OpenAPI

        :param deprecated: The deprecated of this Deprecations.
        """
        self.openapi_types = {
            'deprecated': List[Deprecated]
        }

        self.attribute_map = {
            'deprecated': 'deprecated'
        }

        self._deprecated = deprecated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Deprecations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The deprecations of this Deprecations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deprecated(self):
        """Gets the deprecated of this Deprecations.


        :return: The deprecated of this Deprecations.
        :rtype: List[Deprecated]
        """
        return self._deprecated

    @deprecated.setter
    def deprecated(self, deprecated):
        """Sets the deprecated of this Deprecations.


        :param deprecated: The deprecated of this Deprecations.
        :type deprecated: List[Deprecated]
        """

        self._deprecated = deprecated
