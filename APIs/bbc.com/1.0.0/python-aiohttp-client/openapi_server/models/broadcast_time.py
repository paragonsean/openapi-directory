# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class BroadcastTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end: datetime=None, start: datetime=None, duration: str=None):
        """BroadcastTime - a model defined in OpenAPI

        :param end: The end of this BroadcastTime.
        :param start: The start of this BroadcastTime.
        :param duration: The duration of this BroadcastTime.
        """
        self.openapi_types = {
            'end': datetime,
            'start': datetime,
            'duration': str
        }

        self.attribute_map = {
            'end': 'end',
            'start': 'start',
            'duration': 'duration'
        }

        self._end = end
        self._start = start
        self._duration = duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BroadcastTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The broadcastTime of this BroadcastTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end(self):
        """Gets the end of this BroadcastTime.


        :return: The end of this BroadcastTime.
        :rtype: datetime
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this BroadcastTime.


        :param end: The end of this BroadcastTime.
        :type end: datetime
        """

        self._end = end

    @property
    def start(self):
        """Gets the start of this BroadcastTime.


        :return: The start of this BroadcastTime.
        :rtype: datetime
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this BroadcastTime.


        :param start: The start of this BroadcastTime.
        :type start: datetime
        """

        self._start = start

    @property
    def duration(self):
        """Gets the duration of this BroadcastTime.


        :return: The duration of this BroadcastTime.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this BroadcastTime.


        :param duration: The duration of this BroadcastTime.
        :type duration: str
        """
        if duration is not None and not re.search(r'^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$', duration):
            raise ValueError("Invalid value for `duration`, must be a follow pattern or equal to `/^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$/`")

        self._duration = duration
