# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.publication_rights import PublicationRights
from openapi_server import util


class ScheduledPublicationRights(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, publication_rights: List[PublicationRights]=None):
        """ScheduledPublicationRights - a model defined in OpenAPI

        :param publication_rights: The publication_rights of this ScheduledPublicationRights.
        """
        self.openapi_types = {
            'publication_rights': List[PublicationRights]
        }

        self.attribute_map = {
            'publication_rights': 'publication_rights'
        }

        self._publication_rights = publication_rights

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduledPublicationRights':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scheduled_publication_rights of this ScheduledPublicationRights.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def publication_rights(self):
        """Gets the publication_rights of this ScheduledPublicationRights.


        :return: The publication_rights of this ScheduledPublicationRights.
        :rtype: List[PublicationRights]
        """
        return self._publication_rights

    @publication_rights.setter
    def publication_rights(self, publication_rights):
        """Sets the publication_rights of this ScheduledPublicationRights.


        :param publication_rights: The publication_rights of this ScheduledPublicationRights.
        :type publication_rights: List[PublicationRights]
        """

        self._publication_rights = publication_rights
