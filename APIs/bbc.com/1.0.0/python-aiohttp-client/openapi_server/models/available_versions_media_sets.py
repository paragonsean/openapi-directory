# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.available_versions_media_sets_media_sets import AvailableVersionsMediaSetsMediaSets
from openapi_server import util


class AvailableVersionsMediaSets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_sets: AvailableVersionsMediaSetsMediaSets=None):
        """AvailableVersionsMediaSets - a model defined in OpenAPI

        :param media_sets: The media_sets of this AvailableVersionsMediaSets.
        """
        self.openapi_types = {
            'media_sets': AvailableVersionsMediaSetsMediaSets
        }

        self.attribute_map = {
            'media_sets': 'media_sets'
        }

        self._media_sets = media_sets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailableVersionsMediaSets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The available_versions_media_sets of this AvailableVersionsMediaSets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_sets(self):
        """Gets the media_sets of this AvailableVersionsMediaSets.


        :return: The media_sets of this AvailableVersionsMediaSets.
        :rtype: AvailableVersionsMediaSetsMediaSets
        """
        return self._media_sets

    @media_sets.setter
    def media_sets(self, media_sets):
        """Sets the media_sets of this AvailableVersionsMediaSets.


        :param media_sets: The media_sets of this AvailableVersionsMediaSets.
        :type media_sets: AvailableVersionsMediaSetsMediaSets
        """

        self._media_sets = media_sets
