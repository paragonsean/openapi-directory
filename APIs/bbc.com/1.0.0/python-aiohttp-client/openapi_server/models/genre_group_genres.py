# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.genre import Genre
from openapi_server import util


class GenreGroupGenres(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, genre: List[Genre]=None):
        """GenreGroupGenres - a model defined in OpenAPI

        :param genre: The genre of this GenreGroupGenres.
        """
        self.openapi_types = {
            'genre': List[Genre]
        }

        self.attribute_map = {
            'genre': 'genre'
        }

        self._genre = genre

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenreGroupGenres':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The genre_group_genres of this GenreGroupGenres.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def genre(self):
        """Gets the genre of this GenreGroupGenres.


        :return: The genre of this GenreGroupGenres.
        :rtype: List[Genre]
        """
        return self._genre

    @genre.setter
    def genre(self, genre):
        """Sets the genre of this GenreGroupGenres.


        :param genre: The genre of this GenreGroupGenres.
        :type genre: List[Genre]
        """

        self._genre = genre
