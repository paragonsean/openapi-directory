# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.types_with_id_types_type_inner_types_type_inner import TypesWithIdTypesTypeInnerTypesTypeInner
from openapi_server import util


class TypesWithIdTypesTypeInnerTypes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: List[TypesWithIdTypesTypeInnerTypesTypeInner]=None):
        """TypesWithIdTypesTypeInnerTypes - a model defined in OpenAPI

        :param type: The type of this TypesWithIdTypesTypeInnerTypes.
        """
        self.openapi_types = {
            'type': List[TypesWithIdTypesTypeInnerTypesTypeInner]
        }

        self.attribute_map = {
            'type': 'type'
        }

        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TypesWithIdTypesTypeInnerTypes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The types_with_id_types_type_inner_types of this TypesWithIdTypesTypeInnerTypes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this TypesWithIdTypesTypeInnerTypes.


        :return: The type of this TypesWithIdTypesTypeInnerTypes.
        :rtype: List[TypesWithIdTypesTypeInnerTypesTypeInner]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TypesWithIdTypesTypeInnerTypes.


        :param type: The type of this TypesWithIdTypesTypeInnerTypes.
        :type type: List[TypesWithIdTypesTypeInnerTypesTypeInner]
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")
        if type is not None and len(type) < 1:
            raise ValueError("Invalid value for `type`, number of items must be greater than or equal to `1`")

        self._type = type
