# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.available_versions_media_sets import AvailableVersionsMediaSets
from openapi_server import util


class AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accurate_end: datetime=None, accurate_start: datetime=None, available_versions_media_sets: AvailableVersionsMediaSets=None, media_availability_end: datetime=None, media_availability_start: datetime=None, payment_type: str=None, scheduled_end: datetime=None, scheduled_start: datetime=None, status: str=None, type: str=None):
        """AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner - a model defined in OpenAPI

        :param accurate_end: The accurate_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param accurate_start: The accurate_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param available_versions_media_sets: The available_versions_media_sets of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param media_availability_end: The media_availability_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param media_availability_start: The media_availability_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param payment_type: The payment_type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param scheduled_end: The scheduled_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param scheduled_start: The scheduled_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param status: The status of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :param type: The type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        """
        self.openapi_types = {
            'accurate_end': datetime,
            'accurate_start': datetime,
            'available_versions_media_sets': AvailableVersionsMediaSets,
            'media_availability_end': datetime,
            'media_availability_start': datetime,
            'payment_type': str,
            'scheduled_end': datetime,
            'scheduled_start': datetime,
            'status': str,
            'type': str
        }

        self.attribute_map = {
            'accurate_end': 'accurate_end',
            'accurate_start': 'accurate_start',
            'available_versions_media_sets': 'available_versions_media_sets',
            'media_availability_end': 'media_availability_end',
            'media_availability_start': 'media_availability_start',
            'payment_type': 'payment_type',
            'scheduled_end': 'scheduled_end',
            'scheduled_start': 'scheduled_start',
            'status': 'status',
            'type': 'type'
        }

        self._accurate_end = accurate_end
        self._accurate_start = accurate_start
        self._available_versions_media_sets = available_versions_media_sets
        self._media_availability_end = media_availability_end
        self._media_availability_start = media_availability_start
        self._payment_type = payment_type
        self._scheduled_end = scheduled_end
        self._scheduled_start = scheduled_start
        self._status = status
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The available_mixins_availabilities_availabilities_availability_inner of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accurate_end(self):
        """Gets the accurate_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The accurate_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: datetime
        """
        return self._accurate_end

    @accurate_end.setter
    def accurate_end(self, accurate_end):
        """Sets the accurate_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param accurate_end: The accurate_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type accurate_end: datetime
        """

        self._accurate_end = accurate_end

    @property
    def accurate_start(self):
        """Gets the accurate_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The accurate_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: datetime
        """
        return self._accurate_start

    @accurate_start.setter
    def accurate_start(self, accurate_start):
        """Sets the accurate_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param accurate_start: The accurate_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type accurate_start: datetime
        """

        self._accurate_start = accurate_start

    @property
    def available_versions_media_sets(self):
        """Gets the available_versions_media_sets of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The available_versions_media_sets of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: AvailableVersionsMediaSets
        """
        return self._available_versions_media_sets

    @available_versions_media_sets.setter
    def available_versions_media_sets(self, available_versions_media_sets):
        """Sets the available_versions_media_sets of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param available_versions_media_sets: The available_versions_media_sets of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type available_versions_media_sets: AvailableVersionsMediaSets
        """
        if available_versions_media_sets is None:
            raise ValueError("Invalid value for `available_versions_media_sets`, must not be `None`")

        self._available_versions_media_sets = available_versions_media_sets

    @property
    def media_availability_end(self):
        """Gets the media_availability_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The media_availability_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: datetime
        """
        return self._media_availability_end

    @media_availability_end.setter
    def media_availability_end(self, media_availability_end):
        """Sets the media_availability_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param media_availability_end: The media_availability_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type media_availability_end: datetime
        """

        self._media_availability_end = media_availability_end

    @property
    def media_availability_start(self):
        """Gets the media_availability_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The media_availability_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: datetime
        """
        return self._media_availability_start

    @media_availability_start.setter
    def media_availability_start(self, media_availability_start):
        """Sets the media_availability_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param media_availability_start: The media_availability_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type media_availability_start: datetime
        """

        self._media_availability_start = media_availability_start

    @property
    def payment_type(self):
        """Gets the payment_type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The payment_type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: str
        """
        return self._payment_type

    @payment_type.setter
    def payment_type(self, payment_type):
        """Sets the payment_type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param payment_type: The payment_type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type payment_type: str
        """

        self._payment_type = payment_type

    @property
    def scheduled_end(self):
        """Gets the scheduled_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The scheduled_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: datetime
        """
        return self._scheduled_end

    @scheduled_end.setter
    def scheduled_end(self, scheduled_end):
        """Sets the scheduled_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param scheduled_end: The scheduled_end of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type scheduled_end: datetime
        """

        self._scheduled_end = scheduled_end

    @property
    def scheduled_start(self):
        """Gets the scheduled_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The scheduled_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: datetime
        """
        return self._scheduled_start

    @scheduled_start.setter
    def scheduled_start(self, scheduled_start):
        """Sets the scheduled_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param scheduled_start: The scheduled_start of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type scheduled_start: datetime
        """

        self._scheduled_start = scheduled_start

    @property
    def status(self):
        """Gets the status of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The status of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param status: The status of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type status: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :return: The type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.


        :param type: The type of this AvailableMixinsAvailabilitiesAvailabilitiesAvailabilityInner.
        :type type: str
        """

        self._type = type
