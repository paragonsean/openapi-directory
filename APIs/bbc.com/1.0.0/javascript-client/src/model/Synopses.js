/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Synopses model module.
 * @module model/Synopses
 * @version 1.0.0
 */
class Synopses {
    /**
     * Constructs a new <code>Synopses</code>.
     * @alias module:model/Synopses
     */
    constructor() { 
        
        Synopses.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Synopses</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Synopses} obj Optional instance to populate.
     * @return {module:model/Synopses} The populated <code>Synopses</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Synopses();

            if (data.hasOwnProperty('long')) {
                obj['long'] = ApiClient.convertToType(data['long'], 'String');
            }
            if (data.hasOwnProperty('medium')) {
                obj['medium'] = ApiClient.convertToType(data['medium'], 'String');
            }
            if (data.hasOwnProperty('short')) {
                obj['short'] = ApiClient.convertToType(data['short'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Synopses</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Synopses</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['long'] && !(typeof data['long'] === 'string' || data['long'] instanceof String)) {
            throw new Error("Expected the field `long` to be a primitive type in the JSON string but got " + data['long']);
        }
        // ensure the json data is a string
        if (data['medium'] && !(typeof data['medium'] === 'string' || data['medium'] instanceof String)) {
            throw new Error("Expected the field `medium` to be a primitive type in the JSON string but got " + data['medium']);
        }
        // ensure the json data is a string
        if (data['short'] && !(typeof data['short'] === 'string' || data['short'] instanceof String)) {
            throw new Error("Expected the field `short` to be a primitive type in the JSON string but got " + data['short']);
        }

        return true;
    }


}



/**
 * @member {String} long
 */
Synopses.prototype['long'] = undefined;

/**
 * @member {String} medium
 */
Synopses.prototype['medium'] = undefined;

/**
 * @member {String} short
 */
Synopses.prototype['short'] = undefined;






export default Synopses;

