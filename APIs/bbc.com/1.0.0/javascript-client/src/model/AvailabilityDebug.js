/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MediaProfileGroups from './MediaProfileGroups';
import PidReference from './PidReference';
import ServiceReference from './ServiceReference';

/**
 * The AvailabilityDebug model module.
 * @module model/AvailabilityDebug
 * @version 1.0.0
 */
class AvailabilityDebug {
    /**
     * Constructs a new <code>AvailabilityDebug</code>.
     * @alias module:model/AvailabilityDebug
     * @param availabilityOf {module:model/PidReference} 
     */
    constructor(availabilityOf) { 
        
        AvailabilityDebug.initialize(this, availabilityOf);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, availabilityOf) { 
        obj['availability_of'] = availabilityOf;
    }

    /**
     * Constructs a <code>AvailabilityDebug</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailabilityDebug} obj Optional instance to populate.
     * @return {module:model/AvailabilityDebug} The populated <code>AvailabilityDebug</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailabilityDebug();

            if (data.hasOwnProperty('availability_of')) {
                obj['availability_of'] = PidReference.constructFromObject(data['availability_of']);
            }
            if (data.hasOwnProperty('media_profile_groups')) {
                obj['media_profile_groups'] = MediaProfileGroups.constructFromObject(data['media_profile_groups']);
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ServiceReference.constructFromObject(data['service']);
            }
            if (data.hasOwnProperty('territory')) {
                obj['territory'] = ApiClient.convertToType(data['territory'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailabilityDebug</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailabilityDebug</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AvailabilityDebug.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `availability_of`
        if (data['availability_of']) { // data not null
          PidReference.validateJSON(data['availability_of']);
        }
        // validate the optional field `media_profile_groups`
        if (data['media_profile_groups']) { // data not null
          MediaProfileGroups.validateJSON(data['media_profile_groups']);
        }
        // validate the optional field `service`
        if (data['service']) { // data not null
          ServiceReference.validateJSON(data['service']);
        }
        // ensure the json data is a string
        if (data['territory'] && !(typeof data['territory'] === 'string' || data['territory'] instanceof String)) {
            throw new Error("Expected the field `territory` to be a primitive type in the JSON string but got " + data['territory']);
        }

        return true;
    }


}

AvailabilityDebug.RequiredProperties = ["availability_of"];

/**
 * @member {module:model/PidReference} availability_of
 */
AvailabilityDebug.prototype['availability_of'] = undefined;

/**
 * @member {module:model/MediaProfileGroups} media_profile_groups
 */
AvailabilityDebug.prototype['media_profile_groups'] = undefined;

/**
 * @member {module:model/ServiceReference} service
 */
AvailabilityDebug.prototype['service'] = undefined;

/**
 * @member {String} territory
 */
AvailabilityDebug.prototype['territory'] = undefined;






export default AvailabilityDebug;

