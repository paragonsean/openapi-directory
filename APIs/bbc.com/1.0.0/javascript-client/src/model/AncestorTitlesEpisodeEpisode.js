/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AncestorTitlesEpisodeEpisode model module.
 * @module model/AncestorTitlesEpisodeEpisode
 * @version 1.0.0
 */
class AncestorTitlesEpisodeEpisode {
    /**
     * Constructs a new <code>AncestorTitlesEpisodeEpisode</code>.
     * @alias module:model/AncestorTitlesEpisodeEpisode
     * @param pid {String} 
     */
    constructor(pid) { 
        
        AncestorTitlesEpisodeEpisode.initialize(this, pid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pid) { 
        obj['pid'] = pid;
    }

    /**
     * Constructs a <code>AncestorTitlesEpisodeEpisode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AncestorTitlesEpisodeEpisode} obj Optional instance to populate.
     * @return {module:model/AncestorTitlesEpisodeEpisode} The populated <code>AncestorTitlesEpisodeEpisode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AncestorTitlesEpisodeEpisode();

            if (data.hasOwnProperty('containers_title')) {
                obj['containers_title'] = ApiClient.convertToType(data['containers_title'], 'String');
            }
            if (data.hasOwnProperty('pid')) {
                obj['pid'] = ApiClient.convertToType(data['pid'], 'String');
            }
            if (data.hasOwnProperty('presentation_title')) {
                obj['presentation_title'] = ApiClient.convertToType(data['presentation_title'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AncestorTitlesEpisodeEpisode</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AncestorTitlesEpisodeEpisode</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AncestorTitlesEpisodeEpisode.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['containers_title'] && !(typeof data['containers_title'] === 'string' || data['containers_title'] instanceof String)) {
            throw new Error("Expected the field `containers_title` to be a primitive type in the JSON string but got " + data['containers_title']);
        }
        // ensure the json data is a string
        if (data['pid'] && !(typeof data['pid'] === 'string' || data['pid'] instanceof String)) {
            throw new Error("Expected the field `pid` to be a primitive type in the JSON string but got " + data['pid']);
        }
        // ensure the json data is a string
        if (data['presentation_title'] && !(typeof data['presentation_title'] === 'string' || data['presentation_title'] instanceof String)) {
            throw new Error("Expected the field `presentation_title` to be a primitive type in the JSON string but got " + data['presentation_title']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

AncestorTitlesEpisodeEpisode.RequiredProperties = ["pid"];

/**
 * @member {String} containers_title
 */
AncestorTitlesEpisodeEpisode.prototype['containers_title'] = undefined;

/**
 * @member {String} pid
 */
AncestorTitlesEpisodeEpisode.prototype['pid'] = undefined;

/**
 * @member {String} presentation_title
 */
AncestorTitlesEpisodeEpisode.prototype['presentation_title'] = undefined;

/**
 * @member {String} title
 */
AncestorTitlesEpisodeEpisode.prototype['title'] = undefined;






export default AncestorTitlesEpisodeEpisode;

