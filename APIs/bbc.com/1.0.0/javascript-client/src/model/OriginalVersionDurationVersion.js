/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OriginalVersionDurationVersionVersion from './OriginalVersionDurationVersionVersion';

/**
 * The OriginalVersionDurationVersion model module.
 * @module model/OriginalVersionDurationVersion
 * @version 1.0.0
 */
class OriginalVersionDurationVersion {
    /**
     * Constructs a new <code>OriginalVersionDurationVersion</code>.
     * @alias module:model/OriginalVersionDurationVersion
     * @param href {String} 
     * @param pid {String} 
     */
    constructor(href, pid) { 
        
        OriginalVersionDurationVersion.initialize(this, href, pid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, href, pid) { 
        obj['href'] = href;
        obj['pid'] = pid;
    }

    /**
     * Constructs a <code>OriginalVersionDurationVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OriginalVersionDurationVersion} obj Optional instance to populate.
     * @return {module:model/OriginalVersionDurationVersion} The populated <code>OriginalVersionDurationVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OriginalVersionDurationVersion();

            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('href')) {
                obj['href'] = ApiClient.convertToType(data['href'], 'String');
            }
            if (data.hasOwnProperty('pid')) {
                obj['pid'] = ApiClient.convertToType(data['pid'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = OriginalVersionDurationVersionVersion.constructFromObject(data['version']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OriginalVersionDurationVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OriginalVersionDurationVersion</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OriginalVersionDurationVersion.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // ensure the json data is a string
        if (data['href'] && !(typeof data['href'] === 'string' || data['href'] instanceof String)) {
            throw new Error("Expected the field `href` to be a primitive type in the JSON string but got " + data['href']);
        }
        // ensure the json data is a string
        if (data['pid'] && !(typeof data['pid'] === 'string' || data['pid'] instanceof String)) {
            throw new Error("Expected the field `pid` to be a primitive type in the JSON string but got " + data['pid']);
        }
        // validate the optional field `version`
        if (data['version']) { // data not null
          OriginalVersionDurationVersionVersion.validateJSON(data['version']);
        }

        return true;
    }


}

OriginalVersionDurationVersion.RequiredProperties = ["href", "pid"];

/**
 * @member {String} duration
 */
OriginalVersionDurationVersion.prototype['duration'] = undefined;

/**
 * @member {String} href
 */
OriginalVersionDurationVersion.prototype['href'] = undefined;

/**
 * @member {String} pid
 */
OriginalVersionDurationVersion.prototype['pid'] = undefined;

/**
 * @member {module:model/OriginalVersionDurationVersionVersion} version
 */
OriginalVersionDurationVersion.prototype['version'] = undefined;






export default OriginalVersionDurationVersion;

