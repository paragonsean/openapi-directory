/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContributionsMixinContributionContributionContribution from './ContributionsMixinContributionContributionContribution';
import ContributionsMixinContributionContributionContributionCreditRole from './ContributionsMixinContributionContributionContributionCreditRole';
import ContributionsMixinContributor from './ContributionsMixinContributor';

/**
 * The ContributionsMixinContributionContribution model module.
 * @module model/ContributionsMixinContributionContribution
 * @version 1.0.0
 */
class ContributionsMixinContributionContribution {
    /**
     * Constructs a new <code>ContributionsMixinContributionContribution</code>.
     * @alias module:model/ContributionsMixinContributionContribution
     * @param contribution {module:model/ContributionsMixinContributionContributionContribution} 
     */
    constructor(contribution) { 
        
        ContributionsMixinContributionContribution.initialize(this, contribution);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contribution) { 
        obj['contribution'] = contribution;
    }

    /**
     * Constructs a <code>ContributionsMixinContributionContribution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContributionsMixinContributionContribution} obj Optional instance to populate.
     * @return {module:model/ContributionsMixinContributionContribution} The populated <code>ContributionsMixinContributionContribution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContributionsMixinContributionContribution();

            if (data.hasOwnProperty('character_name')) {
                obj['character_name'] = ApiClient.convertToType(data['character_name'], 'String');
            }
            if (data.hasOwnProperty('contribution')) {
                obj['contribution'] = ContributionsMixinContributionContributionContribution.constructFromObject(data['contribution']);
            }
            if (data.hasOwnProperty('contributions_mixin_contributor')) {
                obj['contributions_mixin_contributor'] = ContributionsMixinContributor.constructFromObject(data['contributions_mixin_contributor']);
            }
            if (data.hasOwnProperty('credit_role')) {
                obj['credit_role'] = ContributionsMixinContributionContributionContributionCreditRole.constructFromObject(data['credit_role']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContributionsMixinContributionContribution</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContributionsMixinContributionContribution</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContributionsMixinContributionContribution.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['character_name'] && !(typeof data['character_name'] === 'string' || data['character_name'] instanceof String)) {
            throw new Error("Expected the field `character_name` to be a primitive type in the JSON string but got " + data['character_name']);
        }
        // validate the optional field `contribution`
        if (data['contribution']) { // data not null
          ContributionsMixinContributionContributionContribution.validateJSON(data['contribution']);
        }
        // validate the optional field `contributions_mixin_contributor`
        if (data['contributions_mixin_contributor']) { // data not null
          ContributionsMixinContributor.validateJSON(data['contributions_mixin_contributor']);
        }
        // validate the optional field `credit_role`
        if (data['credit_role']) { // data not null
          ContributionsMixinContributionContributionContributionCreditRole.validateJSON(data['credit_role']);
        }

        return true;
    }


}

ContributionsMixinContributionContribution.RequiredProperties = ["contribution"];

/**
 * @member {String} character_name
 */
ContributionsMixinContributionContribution.prototype['character_name'] = undefined;

/**
 * @member {module:model/ContributionsMixinContributionContributionContribution} contribution
 */
ContributionsMixinContributionContribution.prototype['contribution'] = undefined;

/**
 * @member {module:model/ContributionsMixinContributor} contributions_mixin_contributor
 */
ContributionsMixinContributionContribution.prototype['contributions_mixin_contributor'] = undefined;

/**
 * @member {module:model/ContributionsMixinContributionContributionContributionCreditRole} credit_role
 */
ContributionsMixinContributionContribution.prototype['credit_role'] = undefined;






export default ContributionsMixinContributionContribution;

