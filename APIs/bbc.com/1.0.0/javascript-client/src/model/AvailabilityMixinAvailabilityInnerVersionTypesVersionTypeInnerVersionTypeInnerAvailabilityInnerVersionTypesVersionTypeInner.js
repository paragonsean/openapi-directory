/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInner from './AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInner';

/**
 * The AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner model module.
 * @module model/AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner
 * @version 1.0.0
 */
class AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner {
    /**
     * Constructs a new <code>AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner</code>.
     * @alias module:model/AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner
     * @param versionType {Array.<module:model/AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInner>} 
     */
    constructor(versionType) { 
        
        AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner.initialize(this, versionType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, versionType) { 
        obj['version_type'] = versionType;
    }

    /**
     * Constructs a <code>AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner} obj Optional instance to populate.
     * @return {module:model/AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner} The populated <code>AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner();

            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
            if (data.hasOwnProperty('version_type')) {
                obj['version_type'] = ApiClient.convertToType(data['version_type'], [AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['version_type']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['version_type'])) {
                throw new Error("Expected the field `version_type` to be an array in the JSON data but got " + data['version_type']);
            }
            // validate the optional field `version_type` (array)
            for (const item of data['version_type']) {
                AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInner.validateJSON(item);
            };
        }

        return true;
    }


}

AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner.RequiredProperties = ["version_type"];

/**
 * @member {Date} end
 */
AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner.prototype['end'] = undefined;

/**
 * @member {String} id
 */
AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner.prototype['id'] = undefined;

/**
 * @member {Date} start
 */
AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner.prototype['start'] = undefined;

/**
 * @member {Array.<module:model/AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInner>} version_type
 */
AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner.prototype['version_type'] = undefined;






export default AvailabilityMixinAvailabilityInnerVersionTypesVersionTypeInnerVersionTypeInnerAvailabilityInnerVersionTypesVersionTypeInner;

