/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContributionsMixinContribution from './ContributionsMixinContribution';
import ContributionsMixinContributionsContributions from './ContributionsMixinContributionsContributions';

/**
 * The ContributionsMixinContributions model module.
 * @module model/ContributionsMixinContributions
 * @version 1.0.0
 */
class ContributionsMixinContributions {
    /**
     * Constructs a new <code>ContributionsMixinContributions</code>.
     * @alias module:model/ContributionsMixinContributions
     * @param contributions {module:model/ContributionsMixinContributionsContributions} 
     */
    constructor(contributions) { 
        
        ContributionsMixinContributions.initialize(this, contributions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contributions) { 
        obj['contributions'] = contributions;
    }

    /**
     * Constructs a <code>ContributionsMixinContributions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContributionsMixinContributions} obj Optional instance to populate.
     * @return {module:model/ContributionsMixinContributions} The populated <code>ContributionsMixinContributions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContributionsMixinContributions();

            if (data.hasOwnProperty('contributions')) {
                obj['contributions'] = ContributionsMixinContributionsContributions.constructFromObject(data['contributions']);
            }
            if (data.hasOwnProperty('contributions_mixin_contribution')) {
                obj['contributions_mixin_contribution'] = ApiClient.convertToType(data['contributions_mixin_contribution'], [ContributionsMixinContribution]);
            }
            if (data.hasOwnProperty('href')) {
                obj['href'] = ApiClient.convertToType(data['href'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContributionsMixinContributions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContributionsMixinContributions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContributionsMixinContributions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `contributions`
        if (data['contributions']) { // data not null
          ContributionsMixinContributionsContributions.validateJSON(data['contributions']);
        }
        if (data['contributions_mixin_contribution']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['contributions_mixin_contribution'])) {
                throw new Error("Expected the field `contributions_mixin_contribution` to be an array in the JSON data but got " + data['contributions_mixin_contribution']);
            }
            // validate the optional field `contributions_mixin_contribution` (array)
            for (const item of data['contributions_mixin_contribution']) {
                ContributionsMixinContribution.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['href'] && !(typeof data['href'] === 'string' || data['href'] instanceof String)) {
            throw new Error("Expected the field `href` to be a primitive type in the JSON string but got " + data['href']);
        }

        return true;
    }


}

ContributionsMixinContributions.RequiredProperties = ["contributions"];

/**
 * @member {module:model/ContributionsMixinContributionsContributions} contributions
 */
ContributionsMixinContributions.prototype['contributions'] = undefined;

/**
 * @member {Array.<module:model/ContributionsMixinContribution>} contributions_mixin_contribution
 */
ContributionsMixinContributions.prototype['contributions_mixin_contribution'] = undefined;

/**
 * @member {String} href
 */
ContributionsMixinContributions.prototype['href'] = undefined;






export default ContributionsMixinContributions;

