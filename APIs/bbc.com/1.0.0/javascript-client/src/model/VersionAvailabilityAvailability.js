/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvailableMediaSets from './AvailableMediaSets';
import VersionAvailabilityAvailabilityAvailability from './VersionAvailabilityAvailabilityAvailability';

/**
 * The VersionAvailabilityAvailability model module.
 * @module model/VersionAvailabilityAvailability
 * @version 1.0.0
 */
class VersionAvailabilityAvailability {
    /**
     * Constructs a new <code>VersionAvailabilityAvailability</code>.
     * @alias module:model/VersionAvailabilityAvailability
     * @param availability {module:model/VersionAvailabilityAvailabilityAvailability} 
     * @param availableMediaSets {module:model/AvailableMediaSets} 
     */
    constructor(availability, availableMediaSets) { 
        
        VersionAvailabilityAvailability.initialize(this, availability, availableMediaSets);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, availability, availableMediaSets) { 
        obj['availability'] = availability;
        obj['available_media_sets'] = availableMediaSets;
    }

    /**
     * Constructs a <code>VersionAvailabilityAvailability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionAvailabilityAvailability} obj Optional instance to populate.
     * @return {module:model/VersionAvailabilityAvailability} The populated <code>VersionAvailabilityAvailability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionAvailabilityAvailability();

            if (data.hasOwnProperty('availability')) {
                obj['availability'] = VersionAvailabilityAvailabilityAvailability.constructFromObject(data['availability']);
            }
            if (data.hasOwnProperty('availability_end')) {
                obj['availability_end'] = ApiClient.convertToType(data['availability_end'], 'Date');
            }
            if (data.hasOwnProperty('availability_start')) {
                obj['availability_start'] = ApiClient.convertToType(data['availability_start'], 'Date');
            }
            if (data.hasOwnProperty('available_media_sets')) {
                obj['available_media_sets'] = AvailableMediaSets.constructFromObject(data['available_media_sets']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionAvailabilityAvailability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionAvailabilityAvailability</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VersionAvailabilityAvailability.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `availability`
        if (data['availability']) { // data not null
          VersionAvailabilityAvailabilityAvailability.validateJSON(data['availability']);
        }
        // validate the optional field `available_media_sets`
        if (data['available_media_sets']) { // data not null
          AvailableMediaSets.validateJSON(data['available_media_sets']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

VersionAvailabilityAvailability.RequiredProperties = ["availability", "available_media_sets"];

/**
 * @member {module:model/VersionAvailabilityAvailabilityAvailability} availability
 */
VersionAvailabilityAvailability.prototype['availability'] = undefined;

/**
 * @member {Date} availability_end
 */
VersionAvailabilityAvailability.prototype['availability_end'] = undefined;

/**
 * @member {Date} availability_start
 */
VersionAvailabilityAvailability.prototype['availability_start'] = undefined;

/**
 * @member {module:model/AvailableMediaSets} available_media_sets
 */
VersionAvailabilityAvailability.prototype['available_media_sets'] = undefined;

/**
 * @member {String} status
 */
VersionAvailabilityAvailability.prototype['status'] = undefined;






export default VersionAvailabilityAvailability;

