/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BbcNitroApi);
  }
}(this, function(expect, BbcNitroApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BbcNitroApi.RawApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RawApi', function() {
    describe('getRawAncestors', function() {
      it('should call getRawAncestors successfully', function(done) {
        //uncomment below and update the code to test getRawAncestors
        //instance.getRawAncestors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawBrand', function() {
      it('should call getRawBrand successfully', function(done) {
        //uncomment below and update the code to test getRawBrand
        //instance.getRawBrand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawBrandFranchises', function() {
      it('should call getRawBrandFranchises successfully', function(done) {
        //uncomment below and update the code to test getRawBrandFranchises
        //instance.getRawBrandFranchises(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawEpisode', function() {
      it('should call getRawEpisode successfully', function(done) {
        //uncomment below and update the code to test getRawEpisode
        //instance.getRawEpisode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawFormats', function() {
      it('should call getRawFormats successfully', function(done) {
        //uncomment below and update the code to test getRawFormats
        //instance.getRawFormats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawGenreGroups', function() {
      it('should call getRawGenreGroups successfully', function(done) {
        //uncomment below and update the code to test getRawGenreGroups
        //instance.getRawGenreGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawImage', function() {
      it('should call getRawImage successfully', function(done) {
        //uncomment below and update the code to test getRawImage
        //instance.getRawImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawMasterbrand', function() {
      it('should call getRawMasterbrand successfully', function(done) {
        //uncomment below and update the code to test getRawMasterbrand
        //instance.getRawMasterbrand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawPromotion', function() {
      it('should call getRawPromotion successfully', function(done) {
        //uncomment below and update the code to test getRawPromotion
        //instance.getRawPromotion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
