/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BbcNitroApi);
  }
}(this, function(expect, BbcNitroApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BbcNitroApi.Results();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Results', function() {
    it('should create an instance of Results', function() {
      // uncomment below and update the code to test Results
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be.a(BbcNitroApi.Results);
    });

    it('should have the property availability (base name: "availability")', function() {
      // uncomment below and update the code to test the property availability
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property broadcast (base name: "broadcast")', function() {
      // uncomment below and update the code to test the property broadcast
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property chapter (base name: "chapter")', function() {
      // uncomment below and update the code to test the property chapter
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property clip (base name: "clip")', function() {
      // uncomment below and update the code to test the property clip
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property collection (base name: "collection")', function() {
      // uncomment below and update the code to test the property collection
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property contributor (base name: "contributor")', function() {
      // uncomment below and update the code to test the property contributor
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property episode (base name: "episode")', function() {
      // uncomment below and update the code to test the property episode
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property franchise (base name: "franchise")', function() {
      // uncomment below and update the code to test the property franchise
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property gallery (base name: "gallery")', function() {
      // uncomment below and update the code to test the property gallery
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property highlight (base name: "highlight")', function() {
      // uncomment below and update the code to test the property highlight
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property masterBrand (base name: "master_brand")', function() {
      // uncomment below and update the code to test the property masterBrand
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property moreThan (base name: "more_than")', function() {
      // uncomment below and update the code to test the property moreThan
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property music (base name: "music")', function() {
      // uncomment below and update the code to test the property music
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property other (base name: "other")', function() {
      // uncomment below and update the code to test the property other
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property page (base name: "page")', function() {
      // uncomment below and update the code to test the property page
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property pageSize (base name: "page_size")', function() {
      // uncomment below and update the code to test the property pageSize
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property promotion (base name: "promotion")', function() {
      // uncomment below and update the code to test the property promotion
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "season")', function() {
      // uncomment below and update the code to test the property season
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property series (base name: "series")', function() {
      // uncomment below and update the code to test the property series
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property service (base name: "service")', function() {
      // uncomment below and update the code to test the property service
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property speech (base name: "speech")', function() {
      // uncomment below and update the code to test the property speech
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property versionGroup (base name: "version_group")', function() {
      // uncomment below and update the code to test the property versionGroup
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

    it('should have the property window (base name: "window")', function() {
      // uncomment below and update the code to test the property window
      //var instance = new BbcNitroApi.Results();
      //expect(instance).to.be();
    });

  });

}));
