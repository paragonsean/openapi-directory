/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BbcNitroApi);
  }
}(this, function(expect, BbcNitroApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BbcNitroApi.Availability();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Availability', function() {
    it('should create an instance of Availability', function() {
      // uncomment below and update the code to test Availability
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be.a(BbcNitroApi.Availability);
    });

    it('should have the property accurateProgrammeTime (base name: "accurate_programme_time")', function() {
      // uncomment below and update the code to test the property accurateProgrammeTime
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property actualStart (base name: "actual_start")', function() {
      // uncomment below and update the code to test the property actualStart
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property availabilityDebug (base name: "availability-debug")', function() {
      // uncomment below and update the code to test the property availabilityDebug
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property availabilityOf (base name: "availability_of")', function() {
      // uncomment below and update the code to test the property availabilityOf
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property availabilityType (base name: "availability_type")', function() {
      // uncomment below and update the code to test the property availabilityType
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property mediaAvailabilityTime (base name: "media_availability_time")', function() {
      // uncomment below and update the code to test the property mediaAvailabilityTime
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property mediaSet (base name: "media_set")', function() {
      // uncomment below and update the code to test the property mediaSet
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property revocationStatus (base name: "revocation_status")', function() {
      // uncomment below and update the code to test the property revocationStatus
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property scheduledTime (base name: "scheduled_time")', function() {
      // uncomment below and update the code to test the property scheduledTime
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BbcNitroApi.Availability();
      //expect(instance).to.be();
    });

  });

}));
