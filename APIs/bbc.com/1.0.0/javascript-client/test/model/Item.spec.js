/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BbcNitroApi);
  }
}(this, function(expect, BbcNitroApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BbcNitroApi.Item();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Item', function() {
    it('should create an instance of Item', function() {
      // uncomment below and update the code to test Item
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be.a(BbcNitroApi.Item);
    });

    it('should have the property catalogueNumber (base name: "catalogue_number")', function() {
      // uncomment below and update the code to test the property catalogueNumber
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property contributionsMixin (base name: "contributions_mixin")', function() {
      // uncomment below and update the code to test the property contributionsMixin
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property identifiers (base name: "identifiers")', function() {
      // uncomment below and update the code to test the property identifiers
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property ids (base name: "ids")', function() {
      // uncomment below and update the code to test the property ids
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property imagesMixin (base name: "images_mixin")', function() {
      // uncomment below and update the code to test the property imagesMixin
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property itemOf (base name: "item_of")', function() {
      // uncomment below and update the code to test the property itemOf
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property musicCode (base name: "music_code")', function() {
      // uncomment below and update the code to test the property musicCode
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property offsets (base name: "offsets")', function() {
      // uncomment below and update the code to test the property offsets
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property partner (base name: "partner")', function() {
      // uncomment below and update the code to test the property partner
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property pid (base name: "pid")', function() {
      // uncomment below and update the code to test the property pid
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property playEvents (base name: "play_events")', function() {
      // uncomment below and update the code to test the property playEvents
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property publisher (base name: "publisher")', function() {
      // uncomment below and update the code to test the property publisher
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property recordLabel (base name: "record_label")', function() {
      // uncomment below and update the code to test the property recordLabel
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property recordingDate (base name: "recording_date")', function() {
      // uncomment below and update the code to test the property recordingDate
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property releaseTitle (base name: "release_title")', function() {
      // uncomment below and update the code to test the property releaseTitle
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property snippetUrl (base name: "snippet_url")', function() {
      // uncomment below and update the code to test the property snippetUrl
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property sourceMedia (base name: "source_media")', function() {
      // uncomment below and update the code to test the property sourceMedia
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property synopses (base name: "synopses")', function() {
      // uncomment below and update the code to test the property synopses
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property trackNumber (base name: "track_number")', function() {
      // uncomment below and update the code to test the property trackNumber
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property trackSide (base name: "track_side")', function() {
      // uncomment below and update the code to test the property trackSide
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property updatedTime (base name: "updated_time")', function() {
      // uncomment below and update the code to test the property updatedTime
      //var instance = new BbcNitroApi.Item();
      //expect(instance).to.be();
    });

  });

}));
