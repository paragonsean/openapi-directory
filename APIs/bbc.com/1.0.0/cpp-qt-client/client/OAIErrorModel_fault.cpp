/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIErrorModel_fault.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIErrorModel_fault::OAIErrorModel_fault(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIErrorModel_fault::OAIErrorModel_fault() {
    this->initializeModel();
}

OAIErrorModel_fault::~OAIErrorModel_fault() {}

void OAIErrorModel_fault::initializeModel() {

    m_detail_isSet = false;
    m_detail_isValid = false;

    m_fault_string_isSet = false;
    m_fault_string_isValid = false;
}

void OAIErrorModel_fault::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIErrorModel_fault::fromJsonObject(QJsonObject json) {

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("detail")]);
    m_detail_isSet = !json[QString("detail")].isNull() && m_detail_isValid;

    m_fault_string_isValid = ::OpenAPI::fromJsonValue(m_fault_string, json[QString("faultString")]);
    m_fault_string_isSet = !json[QString("faultString")].isNull() && m_fault_string_isValid;
}

QString OAIErrorModel_fault::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIErrorModel_fault::asJsonObject() const {
    QJsonObject obj;
    if (m_detail.isSet()) {
        obj.insert(QString("detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    if (m_fault_string_isSet) {
        obj.insert(QString("faultString"), ::OpenAPI::toJsonValue(m_fault_string));
    }
    return obj;
}

OAIErrorModel_fault_detail OAIErrorModel_fault::getDetail() const {
    return m_detail;
}
void OAIErrorModel_fault::setDetail(const OAIErrorModel_fault_detail &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAIErrorModel_fault::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAIErrorModel_fault::is_detail_Valid() const{
    return m_detail_isValid;
}

QString OAIErrorModel_fault::getFaultString() const {
    return m_fault_string;
}
void OAIErrorModel_fault::setFaultString(const QString &fault_string) {
    m_fault_string = fault_string;
    m_fault_string_isSet = true;
}

bool OAIErrorModel_fault::is_fault_string_Set() const{
    return m_fault_string_isSet;
}

bool OAIErrorModel_fault::is_fault_string_Valid() const{
    return m_fault_string_isValid;
}

bool OAIErrorModel_fault::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fault_string_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIErrorModel_fault::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
