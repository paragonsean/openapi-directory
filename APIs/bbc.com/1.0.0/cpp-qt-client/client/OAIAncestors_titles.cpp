/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAncestors_titles.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAncestors_titles::OAIAncestors_titles(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAncestors_titles::OAIAncestors_titles() {
    this->initializeModel();
}

OAIAncestors_titles::~OAIAncestors_titles() {}

void OAIAncestors_titles::initializeModel() {

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_episode_isSet = false;
    m_episode_isValid = false;

    m_series_isSet = false;
    m_series_isValid = false;
}

void OAIAncestors_titles::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAncestors_titles::fromJsonObject(QJsonObject json) {

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_episode_isValid = ::OpenAPI::fromJsonValue(m_episode, json[QString("episode")]);
    m_episode_isSet = !json[QString("episode")].isNull() && m_episode_isValid;

    m_series_isValid = ::OpenAPI::fromJsonValue(m_series, json[QString("series")]);
    m_series_isSet = !json[QString("series")].isNull() && m_series_isValid;
}

QString OAIAncestors_titles::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAncestors_titles::asJsonObject() const {
    QJsonObject obj;
    if (m_brand.isSet()) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_episode.isSet()) {
        obj.insert(QString("episode"), ::OpenAPI::toJsonValue(m_episode));
    }
    if (m_series.size() > 0) {
        obj.insert(QString("series"), ::OpenAPI::toJsonValue(m_series));
    }
    return obj;
}

OAIAncestor_titles_brand OAIAncestors_titles::getBrand() const {
    return m_brand;
}
void OAIAncestors_titles::setBrand(const OAIAncestor_titles_brand &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAIAncestors_titles::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAIAncestors_titles::is_brand_Valid() const{
    return m_brand_isValid;
}

OAIAncestor_titles_episode OAIAncestors_titles::getEpisode() const {
    return m_episode;
}
void OAIAncestors_titles::setEpisode(const OAIAncestor_titles_episode &episode) {
    m_episode = episode;
    m_episode_isSet = true;
}

bool OAIAncestors_titles::is_episode_Set() const{
    return m_episode_isSet;
}

bool OAIAncestors_titles::is_episode_Valid() const{
    return m_episode_isValid;
}

QList<OAIAncestor_titles_brand> OAIAncestors_titles::getSeries() const {
    return m_series;
}
void OAIAncestors_titles::setSeries(const QList<OAIAncestor_titles_brand> &series) {
    m_series = series;
    m_series_isSet = true;
}

bool OAIAncestors_titles::is_series_Set() const{
    return m_series_isSet;
}

bool OAIAncestors_titles::is_series_Valid() const{
    return m_series_isValid;
}

bool OAIAncestors_titles::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_brand.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_episode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_series.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAncestors_titles::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
