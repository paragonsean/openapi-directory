/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISort.h
 *
 * 
 */

#ifndef OAISort_H
#define OAISort_H

#include <QJsonObject>

#include "OAIRelease_status_type.h"
#include "OAISort_direction.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISort_direction;

class OAISort : public OAIObject {
public:
    OAISort();
    OAISort(QString json);
    ~OAISort() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDeprecated() const;
    void setDeprecated(const bool &deprecated);
    bool is_deprecated_Set() const;
    bool is_deprecated_Valid() const;

    QString getDeprecatedSince() const;
    void setDeprecatedSince(const QString &deprecated_since);
    bool is_deprecated_since_Set() const;
    bool is_deprecated_since_Valid() const;

    QString getGuaranteedUntil() const;
    void setGuaranteedUntil(const QString &guaranteed_until);
    bool is_guaranteed_until_Set() const;
    bool is_guaranteed_until_Valid() const;

    QString getIsDefault() const;
    void setIsDefault(const QString &is_default);
    bool is_is_default_Set() const;
    bool is_is_default_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIRelease_status_type getReleaseStatus() const;
    void setReleaseStatus(const OAIRelease_status_type &release_status);
    bool is_release_status_Set() const;
    bool is_release_status_Valid() const;

    QString getReplacedBy() const;
    void setReplacedBy(const QString &replaced_by);
    bool is_replaced_by_Set() const;
    bool is_replaced_by_Valid() const;

    QList<OAISort_direction> getSortDirection() const;
    void setSortDirection(const QList<OAISort_direction> &sort_direction);
    bool is_sort_direction_Set() const;
    bool is_sort_direction_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_deprecated;
    bool m_deprecated_isSet;
    bool m_deprecated_isValid;

    QString m_deprecated_since;
    bool m_deprecated_since_isSet;
    bool m_deprecated_since_isValid;

    QString m_guaranteed_until;
    bool m_guaranteed_until_isSet;
    bool m_guaranteed_until_isValid;

    QString m_is_default;
    bool m_is_default_isSet;
    bool m_is_default_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIRelease_status_type m_release_status;
    bool m_release_status_isSet;
    bool m_release_status_isValid;

    QString m_replaced_by;
    bool m_replaced_by_isSet;
    bool m_replaced_by_isValid;

    QList<OAISort_direction> m_sort_direction;
    bool m_sort_direction_isSet;
    bool m_sort_direction_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISort)

#endif // OAISort_H
