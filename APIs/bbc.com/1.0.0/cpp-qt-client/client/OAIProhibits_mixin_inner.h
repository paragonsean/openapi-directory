/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProhibits_mixin_inner.h
 *
 * 
 */

#ifndef OAIProhibits_mixin_inner_H
#define OAIProhibits_mixin_inner_H

#include <QJsonObject>

#include "OAIProhibits_filter_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProhibits_filter_inner;

class OAIProhibits_mixin_inner : public OAIObject {
public:
    OAIProhibits_mixin_inner();
    OAIProhibits_mixin_inner(QString json);
    ~OAIProhibits_mixin_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIProhibits_filter_inner> getFilter() const;
    void setFilter(const QList<OAIProhibits_filter_inner> &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QList<OAIProhibits_filter_inner> getMixin() const;
    void setMixin(const QList<OAIProhibits_filter_inner> &mixin);
    bool is_mixin_Set() const;
    bool is_mixin_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIProhibits_filter_inner> m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QList<OAIProhibits_filter_inner> m_mixin;
    bool m_mixin_isSet;
    bool m_mixin_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProhibits_mixin_inner)

#endif // OAIProhibits_mixin_inner_H
