/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvailability.h
 *
 * 
 */

#ifndef OAIAvailability_H
#define OAIAvailability_H

#include <QJsonObject>

#include "OAIAvailability_debug.h"
#include "OAIAvailability_of.h"
#include "OAIAvailability_type.h"
#include "OAIDateRange.h"
#include "OAIScheduled_time.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDateRange;
class OAIAvailability_debug;
class OAIAvailability_of;
class OAIScheduled_time;

class OAIAvailability : public OAIObject {
public:
    OAIAvailability();
    OAIAvailability(QString json);
    ~OAIAvailability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDateRange getAccurateProgrammeTime() const;
    void setAccurateProgrammeTime(const OAIDateRange &accurate_programme_time);
    bool is_accurate_programme_time_Set() const;
    bool is_accurate_programme_time_Valid() const;

    QDateTime getActualStart() const;
    void setActualStart(const QDateTime &actual_start);
    bool is_actual_start_Set() const;
    bool is_actual_start_Valid() const;

    OAIAvailability_debug getAvailabilityDebug() const;
    void setAvailabilityDebug(const OAIAvailability_debug &availability_debug);
    bool is_availability_debug_Set() const;
    bool is_availability_debug_Valid() const;

    QList<OAIAvailability_of> getAvailabilityOf() const;
    void setAvailabilityOf(const QList<OAIAvailability_of> &availability_of);
    bool is_availability_of_Set() const;
    bool is_availability_of_Valid() const;

    OAIAvailability_type getAvailabilityType() const;
    void setAvailabilityType(const OAIAvailability_type &availability_type);
    bool is_availability_type_Set() const;
    bool is_availability_type_Valid() const;

    OAIDateRange getMediaAvailabilityTime() const;
    void setMediaAvailabilityTime(const OAIDateRange &media_availability_time);
    bool is_media_availability_time_Set() const;
    bool is_media_availability_time_Valid() const;

    QList<QString> getMediaSet() const;
    void setMediaSet(const QList<QString> &media_set);
    bool is_media_set_Set() const;
    bool is_media_set_Valid() const;

    QString getRevocationStatus() const;
    void setRevocationStatus(const QString &revocation_status);
    bool is_revocation_status_Set() const;
    bool is_revocation_status_Valid() const;

    OAIScheduled_time getScheduledTime() const;
    void setScheduledTime(const OAIScheduled_time &scheduled_time);
    bool is_scheduled_time_Set() const;
    bool is_scheduled_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDateRange m_accurate_programme_time;
    bool m_accurate_programme_time_isSet;
    bool m_accurate_programme_time_isValid;

    QDateTime m_actual_start;
    bool m_actual_start_isSet;
    bool m_actual_start_isValid;

    OAIAvailability_debug m_availability_debug;
    bool m_availability_debug_isSet;
    bool m_availability_debug_isValid;

    QList<OAIAvailability_of> m_availability_of;
    bool m_availability_of_isSet;
    bool m_availability_of_isValid;

    OAIAvailability_type m_availability_type;
    bool m_availability_type_isSet;
    bool m_availability_type_isValid;

    OAIDateRange m_media_availability_time;
    bool m_media_availability_time_isSet;
    bool m_media_availability_time_isValid;

    QList<QString> m_media_set;
    bool m_media_set_isSet;
    bool m_media_set_isValid;

    QString m_revocation_status;
    bool m_revocation_status_isSet;
    bool m_revocation_status_isValid;

    OAIScheduled_time m_scheduled_time;
    bool m_scheduled_time_isSet;
    bool m_scheduled_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvailability)

#endif // OAIAvailability_H
