/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIXquery_version.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIXquery_version::OAIXquery_version(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIXquery_version::OAIXquery_version() {
    this->initializeModel();
}

OAIXquery_version::~OAIXquery_version() {}

void OAIXquery_version::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIXquery_version::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIXquery_version::fromJson(QString jsonString) {
    
    if ( jsonString.compare("1.0-ml", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXquery_version::_1_0_ML;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("0.9-ml", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXquery_version::_0_9_ML;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("1.0", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXquery_version::_1_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XSLT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXquery_version::XSLT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIXquery_version::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIXquery_version::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIXquery_version::_1_0_ML:
            val = "1.0-ml";
            break;
        case eOAIXquery_version::_0_9_ML:
            val = "0.9-ml";
            break;
        case eOAIXquery_version::_1_0:
            val = "1.0";
            break;
        case eOAIXquery_version::XSLT:
            val = "XSLT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIXquery_version::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIXquery_version::eOAIXquery_version OAIXquery_version::getValue() const {
    return m_value;
}

void OAIXquery_version::setValue(const OAIXquery_version::eOAIXquery_version& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIXquery_version::isSet() const {
    
    return m_value_isSet;
}

bool OAIXquery_version::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
