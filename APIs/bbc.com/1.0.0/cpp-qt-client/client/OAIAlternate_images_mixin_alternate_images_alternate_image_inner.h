/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlternate_images_mixin_alternate_images_alternate_image_inner.h
 *
 * 
 */

#ifndef OAIAlternate_images_mixin_alternate_images_alternate_image_inner_H
#define OAIAlternate_images_mixin_alternate_images_alternate_image_inner_H

#include <QJsonObject>

#include "OAIAlternate_images_mixin_alternate_images_alternate_image_inner_alternate_images.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlternate_images_mixin_alternate_images_alternate_image_inner_alternate_images;

class OAIAlternate_images_mixin_alternate_images_alternate_image_inner : public OAIObject {
public:
    OAIAlternate_images_mixin_alternate_images_alternate_image_inner();
    OAIAlternate_images_mixin_alternate_images_alternate_image_inner(QString json);
    ~OAIAlternate_images_mixin_alternate_images_alternate_image_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAlternate_images_mixin_alternate_images_alternate_image_inner_alternate_images getAlternateImages() const;
    void setAlternateImages(const OAIAlternate_images_mixin_alternate_images_alternate_image_inner_alternate_images &alternate_images);
    bool is_alternate_images_Set() const;
    bool is_alternate_images_Valid() const;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getTemplateUrl() const;
    void setTemplateUrl(const QString &template_url);
    bool is_template_url_Set() const;
    bool is_template_url_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAlternate_images_mixin_alternate_images_alternate_image_inner_alternate_images m_alternate_images;
    bool m_alternate_images_isSet;
    bool m_alternate_images_isValid;

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_template_url;
    bool m_template_url_isSet;
    bool m_template_url_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlternate_images_mixin_alternate_images_alternate_image_inner)

#endif // OAIAlternate_images_mixin_alternate_images_alternate_image_inner_H
