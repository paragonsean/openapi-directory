/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeprecatedReferenceElement.h
 *
 * 
 */

#ifndef OAIDeprecatedReferenceElement_H
#define OAIDeprecatedReferenceElement_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeprecatedReferenceElement : public OAIObject {
public:
    OAIDeprecatedReferenceElement();
    OAIDeprecatedReferenceElement(QString json);
    ~OAIDeprecatedReferenceElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getResultType() const;
    void setResultType(const QString &result_type);
    bool is_result_type_Set() const;
    bool is_result_type_Valid() const;

    bool isDeprecated() const;
    void setDeprecated(const bool &deprecated);
    bool is_deprecated_Set() const;
    bool is_deprecated_Valid() const;

    QString getDeprecatedSince() const;
    void setDeprecatedSince(const QString &deprecated_since);
    bool is_deprecated_since_Set() const;
    bool is_deprecated_since_Valid() const;

    QString getReplacedBy() const;
    void setReplacedBy(const QString &replaced_by);
    bool is_replaced_by_Set() const;
    bool is_replaced_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_result_type;
    bool m_result_type_isSet;
    bool m_result_type_isValid;

    bool m_deprecated;
    bool m_deprecated_isSet;
    bool m_deprecated_isValid;

    QString m_deprecated_since;
    bool m_deprecated_since_isSet;
    bool m_deprecated_since_isValid;

    QString m_replaced_by;
    bool m_replaced_by_isSet;
    bool m_replaced_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeprecatedReferenceElement)

#endif // OAIDeprecatedReferenceElement_H
