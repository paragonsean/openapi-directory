/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelease_status_type.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelease_status_type::OAIRelease_status_type(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelease_status_type::OAIRelease_status_type() {
    this->initializeModel();
}

OAIRelease_status_type::~OAIRelease_status_type() {}

void OAIRelease_status_type::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRelease_status_type::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRelease_status_type::fromJson(QString jsonString) {
    
    if ( jsonString.compare("alpha", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelease_status_type::ALPHA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("beta", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelease_status_type::BETA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("supported", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelease_status_type::SUPPORTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("deprecated", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelease_status_type::DEPRECATED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRelease_status_type::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRelease_status_type::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRelease_status_type::ALPHA:
            val = "alpha";
            break;
        case eOAIRelease_status_type::BETA:
            val = "beta";
            break;
        case eOAIRelease_status_type::SUPPORTED:
            val = "supported";
            break;
        case eOAIRelease_status_type::DEPRECATED:
            val = "deprecated";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRelease_status_type::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRelease_status_type::eOAIRelease_status_type OAIRelease_status_type::getValue() const {
    return m_value;
}

void OAIRelease_status_type::setValue(const OAIRelease_status_type::eOAIRelease_status_type& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRelease_status_type::isSet() const {
    
    return m_value_isSet;
}

bool OAIRelease_status_type::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
