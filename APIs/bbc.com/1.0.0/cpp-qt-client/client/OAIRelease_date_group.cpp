/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelease_date_group.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelease_date_group::OAIRelease_date_group(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelease_date_group::OAIRelease_date_group() {
    this->initializeModel();
}

OAIRelease_date_group::~OAIRelease_date_group() {}

void OAIRelease_date_group::initializeModel() {

    m_release_date_isSet = false;
    m_release_date_isValid = false;

    m_release_year_isSet = false;
    m_release_year_isValid = false;

    m_release_year_month_isSet = false;
    m_release_year_month_isValid = false;
}

void OAIRelease_date_group::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelease_date_group::fromJsonObject(QJsonObject json) {

    m_release_date_isValid = ::OpenAPI::fromJsonValue(m_release_date, json[QString("release_date")]);
    m_release_date_isSet = !json[QString("release_date")].isNull() && m_release_date_isValid;

    m_release_year_isValid = ::OpenAPI::fromJsonValue(m_release_year, json[QString("release_year")]);
    m_release_year_isSet = !json[QString("release_year")].isNull() && m_release_year_isValid;

    m_release_year_month_isValid = ::OpenAPI::fromJsonValue(m_release_year_month, json[QString("release_year_month")]);
    m_release_year_month_isSet = !json[QString("release_year_month")].isNull() && m_release_year_month_isValid;
}

QString OAIRelease_date_group::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelease_date_group::asJsonObject() const {
    QJsonObject obj;
    if (m_release_date_isSet) {
        obj.insert(QString("release_date"), ::OpenAPI::toJsonValue(m_release_date));
    }
    if (m_release_year_isSet) {
        obj.insert(QString("release_year"), ::OpenAPI::toJsonValue(m_release_year));
    }
    if (m_release_year_month_isSet) {
        obj.insert(QString("release_year_month"), ::OpenAPI::toJsonValue(m_release_year_month));
    }
    return obj;
}

QString OAIRelease_date_group::getReleaseDate() const {
    return m_release_date;
}
void OAIRelease_date_group::setReleaseDate(const QString &release_date) {
    m_release_date = release_date;
    m_release_date_isSet = true;
}

bool OAIRelease_date_group::is_release_date_Set() const{
    return m_release_date_isSet;
}

bool OAIRelease_date_group::is_release_date_Valid() const{
    return m_release_date_isValid;
}

QString OAIRelease_date_group::getReleaseYear() const {
    return m_release_year;
}
void OAIRelease_date_group::setReleaseYear(const QString &release_year) {
    m_release_year = release_year;
    m_release_year_isSet = true;
}

bool OAIRelease_date_group::is_release_year_Set() const{
    return m_release_year_isSet;
}

bool OAIRelease_date_group::is_release_year_Valid() const{
    return m_release_year_isValid;
}

QString OAIRelease_date_group::getReleaseYearMonth() const {
    return m_release_year_month;
}
void OAIRelease_date_group::setReleaseYearMonth(const QString &release_year_month) {
    m_release_year_month = release_year_month;
    m_release_year_month_isSet = true;
}

bool OAIRelease_date_group::is_release_year_month_Set() const{
    return m_release_year_month_isSet;
}

bool OAIRelease_date_group::is_release_year_month_Valid() const{
    return m_release_year_month_isValid;
}

bool OAIRelease_date_group::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_release_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_year_month_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelease_date_group::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
