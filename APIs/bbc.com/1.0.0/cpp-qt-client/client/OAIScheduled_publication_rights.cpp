/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScheduled_publication_rights.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScheduled_publication_rights::OAIScheduled_publication_rights(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScheduled_publication_rights::OAIScheduled_publication_rights() {
    this->initializeModel();
}

OAIScheduled_publication_rights::~OAIScheduled_publication_rights() {}

void OAIScheduled_publication_rights::initializeModel() {

    m_publication_rights_isSet = false;
    m_publication_rights_isValid = false;
}

void OAIScheduled_publication_rights::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScheduled_publication_rights::fromJsonObject(QJsonObject json) {

    m_publication_rights_isValid = ::OpenAPI::fromJsonValue(m_publication_rights, json[QString("publication_rights")]);
    m_publication_rights_isSet = !json[QString("publication_rights")].isNull() && m_publication_rights_isValid;
}

QString OAIScheduled_publication_rights::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScheduled_publication_rights::asJsonObject() const {
    QJsonObject obj;
    if (m_publication_rights.size() > 0) {
        obj.insert(QString("publication_rights"), ::OpenAPI::toJsonValue(m_publication_rights));
    }
    return obj;
}

QList<OAIPublication_rights> OAIScheduled_publication_rights::getPublicationRights() const {
    return m_publication_rights;
}
void OAIScheduled_publication_rights::setPublicationRights(const QList<OAIPublication_rights> &publication_rights) {
    m_publication_rights = publication_rights;
    m_publication_rights_isSet = true;
}

bool OAIScheduled_publication_rights::is_publication_rights_Set() const{
    return m_publication_rights_isSet;
}

bool OAIScheduled_publication_rights::is_publication_rights_Valid() const{
    return m_publication_rights_isValid;
}

bool OAIScheduled_publication_rights::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_publication_rights.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScheduled_publication_rights::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
