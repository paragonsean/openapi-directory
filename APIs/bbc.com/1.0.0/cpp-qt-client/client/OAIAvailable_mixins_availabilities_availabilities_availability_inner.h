/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvailable_mixins_availabilities_availabilities_availability_inner.h
 *
 * 
 */

#ifndef OAIAvailable_mixins_availabilities_availabilities_availability_inner_H
#define OAIAvailable_mixins_availabilities_availabilities_availability_inner_H

#include <QJsonObject>

#include "OAIAvailable_versions_media_sets.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAvailable_versions_media_sets;

class OAIAvailable_mixins_availabilities_availabilities_availability_inner : public OAIObject {
public:
    OAIAvailable_mixins_availabilities_availabilities_availability_inner();
    OAIAvailable_mixins_availabilities_availabilities_availability_inner(QString json);
    ~OAIAvailable_mixins_availabilities_availabilities_availability_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAccurateEnd() const;
    void setAccurateEnd(const QDateTime &accurate_end);
    bool is_accurate_end_Set() const;
    bool is_accurate_end_Valid() const;

    QDateTime getAccurateStart() const;
    void setAccurateStart(const QDateTime &accurate_start);
    bool is_accurate_start_Set() const;
    bool is_accurate_start_Valid() const;

    OAIAvailable_versions_media_sets getAvailableVersionsMediaSets() const;
    void setAvailableVersionsMediaSets(const OAIAvailable_versions_media_sets &available_versions_media_sets);
    bool is_available_versions_media_sets_Set() const;
    bool is_available_versions_media_sets_Valid() const;

    QDateTime getMediaAvailabilityEnd() const;
    void setMediaAvailabilityEnd(const QDateTime &media_availability_end);
    bool is_media_availability_end_Set() const;
    bool is_media_availability_end_Valid() const;

    QDateTime getMediaAvailabilityStart() const;
    void setMediaAvailabilityStart(const QDateTime &media_availability_start);
    bool is_media_availability_start_Set() const;
    bool is_media_availability_start_Valid() const;

    QString getPaymentType() const;
    void setPaymentType(const QString &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    QDateTime getScheduledEnd() const;
    void setScheduledEnd(const QDateTime &scheduled_end);
    bool is_scheduled_end_Set() const;
    bool is_scheduled_end_Valid() const;

    QDateTime getScheduledStart() const;
    void setScheduledStart(const QDateTime &scheduled_start);
    bool is_scheduled_start_Set() const;
    bool is_scheduled_start_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_accurate_end;
    bool m_accurate_end_isSet;
    bool m_accurate_end_isValid;

    QDateTime m_accurate_start;
    bool m_accurate_start_isSet;
    bool m_accurate_start_isValid;

    OAIAvailable_versions_media_sets m_available_versions_media_sets;
    bool m_available_versions_media_sets_isSet;
    bool m_available_versions_media_sets_isValid;

    QDateTime m_media_availability_end;
    bool m_media_availability_end_isSet;
    bool m_media_availability_end_isValid;

    QDateTime m_media_availability_start;
    bool m_media_availability_start_isSet;
    bool m_media_availability_start_isValid;

    QString m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;

    QDateTime m_scheduled_end;
    bool m_scheduled_end_isSet;
    bool m_scheduled_end_isValid;

    QDateTime m_scheduled_start;
    bool m_scheduled_start_isSet;
    bool m_scheduled_start_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvailable_mixins_availabilities_availabilities_availability_inner)

#endif // OAIAvailable_mixins_availabilities_availabilities_availability_inner_H
