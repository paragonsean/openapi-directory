/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroup_body.h
 *
 * 
 */

#ifndef OAIGroup_body_H
#define OAIGroup_body_H

#include <QJsonObject>

#include "OAIAlternate_images_mixin.h"
#include "OAIEmbargoed.h"
#include "OAIFor_programmes.h"
#include "OAIIdentifiers.h"
#include "OAIIds.h"
#include "OAIImages_mixin.h"
#include "OAIMaster_brand_link.h"
#include "OAIRelated_links.h"
#include "OAIScheduled.h"
#include "OAISynopses.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlternate_images_mixin;
class OAIFor_programmes;
class OAIIdentifiers;
class OAIIds;
class OAIImages_mixin;
class OAIMaster_brand_link;
class OAIRelated_links;
class OAIScheduled;
class OAISynopses;

class OAIGroup_body : public OAIObject {
public:
    OAIGroup_body();
    OAIGroup_body(QString json);
    ~OAIGroup_body() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAlternate_images_mixin getAlternateImagesMixin() const;
    void setAlternateImagesMixin(const OAIAlternate_images_mixin &alternate_images_mixin);
    bool is_alternate_images_mixin_Set() const;
    bool is_alternate_images_mixin_Valid() const;

    OAIEmbargoed getEmbargoed() const;
    void setEmbargoed(const OAIEmbargoed &embargoed);
    bool is_embargoed_Set() const;
    bool is_embargoed_Valid() const;

    OAIFor_programmes getForProgrammes() const;
    void setForProgrammes(const OAIFor_programmes &for_programmes);
    bool is_for_programmes_Set() const;
    bool is_for_programmes_Valid() const;

    OAIIdentifiers getIdentifiers() const;
    void setIdentifiers(const OAIIdentifiers &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    OAIIds getIds() const;
    void setIds(const OAIIds &ids);
    bool is_ids_Set() const;
    bool is_ids_Valid() const;

    OAIImages_mixin getImagesMixin() const;
    void setImagesMixin(const OAIImages_mixin &images_mixin);
    bool is_images_mixin_Set() const;
    bool is_images_mixin_Valid() const;

    OAIMaster_brand_link getMasterBrandLink() const;
    void setMasterBrandLink(const OAIMaster_brand_link &master_brand_link);
    bool is_master_brand_link_Set() const;
    bool is_master_brand_link_Valid() const;

    QString getPartner() const;
    void setPartner(const QString &partner);
    bool is_partner_Set() const;
    bool is_partner_Valid() const;

    QString getPid() const;
    void setPid(const QString &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    OAIRelated_links getRelatedLinks() const;
    void setRelatedLinks(const OAIRelated_links &related_links);
    bool is_related_links_Set() const;
    bool is_related_links_Valid() const;

    OAIScheduled getScheduled() const;
    void setScheduled(const OAIScheduled &scheduled);
    bool is_scheduled_Set() const;
    bool is_scheduled_Valid() const;

    OAISynopses getSynopses() const;
    void setSynopses(const OAISynopses &synopses);
    bool is_synopses_Set() const;
    bool is_synopses_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedTime() const;
    void setUpdatedTime(const QDateTime &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    QString getUrlKey() const;
    void setUrlKey(const QString &url_key);
    bool is_url_key_Set() const;
    bool is_url_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAlternate_images_mixin m_alternate_images_mixin;
    bool m_alternate_images_mixin_isSet;
    bool m_alternate_images_mixin_isValid;

    OAIEmbargoed m_embargoed;
    bool m_embargoed_isSet;
    bool m_embargoed_isValid;

    OAIFor_programmes m_for_programmes;
    bool m_for_programmes_isSet;
    bool m_for_programmes_isValid;

    OAIIdentifiers m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    OAIIds m_ids;
    bool m_ids_isSet;
    bool m_ids_isValid;

    OAIImages_mixin m_images_mixin;
    bool m_images_mixin_isSet;
    bool m_images_mixin_isValid;

    OAIMaster_brand_link m_master_brand_link;
    bool m_master_brand_link_isSet;
    bool m_master_brand_link_isValid;

    QString m_partner;
    bool m_partner_isSet;
    bool m_partner_isValid;

    QString m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    OAIRelated_links m_related_links;
    bool m_related_links_isSet;
    bool m_related_links_isValid;

    OAIScheduled m_scheduled;
    bool m_scheduled_isSet;
    bool m_scheduled_isValid;

    OAISynopses m_synopses;
    bool m_synopses_isSet;
    bool m_synopses_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;

    QString m_url_key;
    bool m_url_key_isSet;
    bool m_url_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroup_body)

#endif // OAIGroup_body_H
