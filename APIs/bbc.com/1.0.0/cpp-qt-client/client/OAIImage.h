/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImage.h
 *
 * 
 */

#ifndef OAIImage_H
#define OAIImage_H

#include <QJsonObject>

#include "OAIEmbargoed.h"
#include "OAIIdentifiers.h"
#include "OAISource_asset.h"
#include "OAISynopses.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentifiers;
class OAISource_asset;
class OAISynopses;

class OAIImage : public OAIObject {
public:
    OAIImage();
    OAIImage(QString json);
    ~OAIImage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAIEmbargoed getEmbargoed() const;
    void setEmbargoed(const OAIEmbargoed &embargoed);
    bool is_embargoed_Set() const;
    bool is_embargoed_Valid() const;

    OAIIdentifiers getIdentifiers() const;
    void setIdentifiers(const OAIIdentifiers &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    QString getPartner() const;
    void setPartner(const QString &partner);
    bool is_partner_Set() const;
    bool is_partner_Valid() const;

    QString getPid() const;
    void setPid(const QString &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    QDateTime getShootDate() const;
    void setShootDate(const QDateTime &shoot_date);
    bool is_shoot_date_Set() const;
    bool is_shoot_date_Valid() const;

    OAISource_asset getSourceAsset() const;
    void setSourceAsset(const OAISource_asset &source_asset);
    bool is_source_asset_Set() const;
    bool is_source_asset_Valid() const;

    OAISynopses getSynopses() const;
    void setSynopses(const OAISynopses &synopses);
    bool is_synopses_Set() const;
    bool is_synopses_Valid() const;

    QString getTemplateUrl() const;
    void setTemplateUrl(const QString &template_url);
    bool is_template_url_Set() const;
    bool is_template_url_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAIEmbargoed m_embargoed;
    bool m_embargoed_isSet;
    bool m_embargoed_isValid;

    OAIIdentifiers m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    QString m_partner;
    bool m_partner_isSet;
    bool m_partner_isValid;

    QString m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    QDateTime m_shoot_date;
    bool m_shoot_date_isSet;
    bool m_shoot_date_isValid;

    OAISource_asset m_source_asset;
    bool m_source_asset_isSet;
    bool m_source_asset_isValid;

    OAISynopses m_synopses;
    bool m_synopses_isSet;
    bool m_synopses_isValid;

    QString m_template_url;
    bool m_template_url_isSet;
    bool m_template_url_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImage)

#endif // OAIImage_H
