/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets() {
    this->initializeModel();
}

OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::~OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets() {}

void OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::initializeModel() {

    m_media_set_isSet = false;
    m_media_set_isValid = false;
}

void OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::fromJsonObject(QJsonObject json) {

    m_media_set_isValid = ::OpenAPI::fromJsonValue(m_media_set, json[QString("media_set")]);
    m_media_set_isSet = !json[QString("media_set")].isNull() && m_media_set_isValid;
}

QString OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::asJsonObject() const {
    QJsonObject obj;
    if (m_media_set.size() > 0) {
        obj.insert(QString("media_set"), ::OpenAPI::toJsonValue(m_media_set));
    }
    return obj;
}

QList<OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets_media_set_inner> OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::getMediaSet() const {
    return m_media_set;
}
void OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::setMediaSet(const QList<OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets_media_set_inner> &media_set) {
    m_media_set = media_set;
    m_media_set_isSet = true;
}

bool OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::is_media_set_Set() const{
    return m_media_set_isSet;
}

bool OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::is_media_set_Valid() const{
    return m_media_set_isValid;
}

bool OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_media_set.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAvailable_versions_media_sets_media_sets_media_set_inner_territories_media_sets::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_media_set_isValid && true;
}

} // namespace OpenAPI
