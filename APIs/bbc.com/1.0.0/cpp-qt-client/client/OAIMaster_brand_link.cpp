/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMaster_brand_link.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMaster_brand_link::OAIMaster_brand_link(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMaster_brand_link::OAIMaster_brand_link() {
    this->initializeModel();
}

OAIMaster_brand_link::~OAIMaster_brand_link() {}

void OAIMaster_brand_link::initializeModel() {

    m_master_brand_isSet = false;
    m_master_brand_isValid = false;
}

void OAIMaster_brand_link::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMaster_brand_link::fromJsonObject(QJsonObject json) {

    m_master_brand_isValid = ::OpenAPI::fromJsonValue(m_master_brand, json[QString("master_brand")]);
    m_master_brand_isSet = !json[QString("master_brand")].isNull() && m_master_brand_isValid;
}

QString OAIMaster_brand_link::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMaster_brand_link::asJsonObject() const {
    QJsonObject obj;
    if (m_master_brand.isSet()) {
        obj.insert(QString("master_brand"), ::OpenAPI::toJsonValue(m_master_brand));
    }
    return obj;
}

OAIMaster_brand_link_master_brand OAIMaster_brand_link::getMasterBrand() const {
    return m_master_brand;
}
void OAIMaster_brand_link::setMasterBrand(const OAIMaster_brand_link_master_brand &master_brand) {
    m_master_brand = master_brand;
    m_master_brand_isSet = true;
}

bool OAIMaster_brand_link::is_master_brand_Set() const{
    return m_master_brand_isSet;
}

bool OAIMaster_brand_link::is_master_brand_Valid() const{
    return m_master_brand_isValid;
}

bool OAIMaster_brand_link::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_master_brand.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMaster_brand_link::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_master_brand_isValid && true;
}

} // namespace OpenAPI
