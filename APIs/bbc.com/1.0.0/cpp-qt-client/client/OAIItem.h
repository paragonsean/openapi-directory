/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem.h
 *
 * 
 */

#ifndef OAIItem_H
#define OAIItem_H

#include <QJsonObject>

#include "OAIContributions_mixin.h"
#include "OAIIdentifiers.h"
#include "OAIIds.h"
#include "OAIImages_mixin.h"
#include "OAIOffsets.h"
#include "OAIPlay_events.h"
#include "OAIReference.h"
#include "OAISynopses.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContributions_mixin;
class OAIIdentifiers;
class OAIIds;
class OAIImages_mixin;
class OAIReference;
class OAIOffsets;
class OAIPlay_events;
class OAISynopses;

class OAIItem : public OAIObject {
public:
    OAIItem();
    OAIItem(QString json);
    ~OAIItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCatalogueNumber() const;
    void setCatalogueNumber(const QString &catalogue_number);
    bool is_catalogue_number_Set() const;
    bool is_catalogue_number_Valid() const;

    OAIContributions_mixin getContributionsMixin() const;
    void setContributionsMixin(const OAIContributions_mixin &contributions_mixin);
    bool is_contributions_mixin_Set() const;
    bool is_contributions_mixin_Valid() const;

    float getDuration() const;
    void setDuration(const float &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    OAIIdentifiers getIdentifiers() const;
    void setIdentifiers(const OAIIdentifiers &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    OAIIds getIds() const;
    void setIds(const OAIIds &ids);
    bool is_ids_Set() const;
    bool is_ids_Valid() const;

    OAIImages_mixin getImagesMixin() const;
    void setImagesMixin(const OAIImages_mixin &images_mixin);
    bool is_images_mixin_Set() const;
    bool is_images_mixin_Valid() const;

    OAIReference getItemOf() const;
    void setItemOf(const OAIReference &item_of);
    bool is_item_of_Set() const;
    bool is_item_of_Valid() const;

    QString getMusicCode() const;
    void setMusicCode(const QString &music_code);
    bool is_music_code_Set() const;
    bool is_music_code_Valid() const;

    OAIOffsets getOffsets() const;
    void setOffsets(const OAIOffsets &offsets);
    bool is_offsets_Set() const;
    bool is_offsets_Valid() const;

    QString getPartner() const;
    void setPartner(const QString &partner);
    bool is_partner_Set() const;
    bool is_partner_Valid() const;

    QString getPid() const;
    void setPid(const QString &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    OAIPlay_events getPlayEvents() const;
    void setPlayEvents(const OAIPlay_events &play_events);
    bool is_play_events_Set() const;
    bool is_play_events_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    QString getRecordLabel() const;
    void setRecordLabel(const QString &record_label);
    bool is_record_label_Set() const;
    bool is_record_label_Valid() const;

    QString getRecordingDate() const;
    void setRecordingDate(const QString &recording_date);
    bool is_recording_date_Set() const;
    bool is_recording_date_Valid() const;

    QString getReleaseTitle() const;
    void setReleaseTitle(const QString &release_title);
    bool is_release_title_Set() const;
    bool is_release_title_Valid() const;

    QString getSnippetUrl() const;
    void setSnippetUrl(const QString &snippet_url);
    bool is_snippet_url_Set() const;
    bool is_snippet_url_Valid() const;

    QString getSourceMedia() const;
    void setSourceMedia(const QString &source_media);
    bool is_source_media_Set() const;
    bool is_source_media_Valid() const;

    OAISynopses getSynopses() const;
    void setSynopses(const OAISynopses &synopses);
    bool is_synopses_Set() const;
    bool is_synopses_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTrackNumber() const;
    void setTrackNumber(const QString &track_number);
    bool is_track_number_Set() const;
    bool is_track_number_Valid() const;

    QString getTrackSide() const;
    void setTrackSide(const QString &track_side);
    bool is_track_side_Set() const;
    bool is_track_side_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedTime() const;
    void setUpdatedTime(const QDateTime &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_catalogue_number;
    bool m_catalogue_number_isSet;
    bool m_catalogue_number_isValid;

    OAIContributions_mixin m_contributions_mixin;
    bool m_contributions_mixin_isSet;
    bool m_contributions_mixin_isValid;

    float m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    OAIIdentifiers m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    OAIIds m_ids;
    bool m_ids_isSet;
    bool m_ids_isValid;

    OAIImages_mixin m_images_mixin;
    bool m_images_mixin_isSet;
    bool m_images_mixin_isValid;

    OAIReference m_item_of;
    bool m_item_of_isSet;
    bool m_item_of_isValid;

    QString m_music_code;
    bool m_music_code_isSet;
    bool m_music_code_isValid;

    OAIOffsets m_offsets;
    bool m_offsets_isSet;
    bool m_offsets_isValid;

    QString m_partner;
    bool m_partner_isSet;
    bool m_partner_isValid;

    QString m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    OAIPlay_events m_play_events;
    bool m_play_events_isSet;
    bool m_play_events_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    QString m_record_label;
    bool m_record_label_isSet;
    bool m_record_label_isValid;

    QString m_recording_date;
    bool m_recording_date_isSet;
    bool m_recording_date_isValid;

    QString m_release_title;
    bool m_release_title_isSet;
    bool m_release_title_isValid;

    QString m_snippet_url;
    bool m_snippet_url_isSet;
    bool m_snippet_url_isValid;

    QString m_source_media;
    bool m_source_media_isSet;
    bool m_source_media_isValid;

    OAISynopses m_synopses;
    bool m_synopses_isSet;
    bool m_synopses_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_track_number;
    bool m_track_number_isSet;
    bool m_track_number_isValid;

    QString m_track_side;
    bool m_track_side_isSet;
    bool m_track_side_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem)

#endif // OAIItem_H
