/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMixin.h
 *
 * 
 */

#ifndef OAIMixin_H
#define OAIMixin_H

#include <QJsonObject>

#include "OAIAffected_by.h"
#include "OAIDependency_on.h"
#include "OAIProhibits.h"
#include "OAIRelease_status_type.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAffected_by;
class OAIDependency_on;
class OAIProhibits;

class OAIMixin : public OAIObject {
public:
    OAIMixin();
    OAIMixin(QString json);
    ~OAIMixin() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAffected_by> getAffectedBy() const;
    void setAffectedBy(const QList<OAIAffected_by> &affected_by);
    bool is_affected_by_Set() const;
    bool is_affected_by_Valid() const;

    QList<OAIDependency_on> getDependencyOn() const;
    void setDependencyOn(const QList<OAIDependency_on> &dependency_on);
    bool is_dependency_on_Set() const;
    bool is_dependency_on_Valid() const;

    QString getDependsOn() const;
    void setDependsOn(const QString &depends_on);
    bool is_depends_on_Set() const;
    bool is_depends_on_Valid() const;

    bool isDeprecated() const;
    void setDeprecated(const bool &deprecated);
    bool is_deprecated_Set() const;
    bool is_deprecated_Valid() const;

    QString getDeprecatedSince() const;
    void setDeprecatedSince(const QString &deprecated_since);
    bool is_deprecated_since_Set() const;
    bool is_deprecated_since_Valid() const;

    QString getGuaranteedUntil() const;
    void setGuaranteedUntil(const QString &guaranteed_until);
    bool is_guaranteed_until_Set() const;
    bool is_guaranteed_until_Valid() const;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIProhibits> getProhibits() const;
    void setProhibits(const QList<OAIProhibits> &prohibits);
    bool is_prohibits_Set() const;
    bool is_prohibits_Valid() const;

    OAIRelease_status_type getReleaseStatus() const;
    void setReleaseStatus(const OAIRelease_status_type &release_status);
    bool is_release_status_Set() const;
    bool is_release_status_Valid() const;

    QString getReplacedBy() const;
    void setReplacedBy(const QString &replaced_by);
    bool is_replaced_by_Set() const;
    bool is_replaced_by_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAffected_by> m_affected_by;
    bool m_affected_by_isSet;
    bool m_affected_by_isValid;

    QList<OAIDependency_on> m_dependency_on;
    bool m_dependency_on_isSet;
    bool m_dependency_on_isValid;

    QString m_depends_on;
    bool m_depends_on_isSet;
    bool m_depends_on_isValid;

    bool m_deprecated;
    bool m_deprecated_isSet;
    bool m_deprecated_isValid;

    QString m_deprecated_since;
    bool m_deprecated_since_isSet;
    bool m_deprecated_since_isValid;

    QString m_guaranteed_until;
    bool m_guaranteed_until_isSet;
    bool m_guaranteed_until_isValid;

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIProhibits> m_prohibits;
    bool m_prohibits_isSet;
    bool m_prohibits_isValid;

    OAIRelease_status_type m_release_status;
    bool m_release_status_isSet;
    bool m_release_status_isValid;

    QString m_replaced_by;
    bool m_replaced_by_isSet;
    bool m_replaced_by_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMixin)

#endif // OAIMixin_H
