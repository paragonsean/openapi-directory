/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeprecated.h
 *
 * 
 */

#ifndef OAIDeprecated_H
#define OAIDeprecated_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeprecated : public OAIObject {
public:
    OAIDeprecated();
    OAIDeprecated(QString json);
    ~OAIDeprecated() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeprecatedSince() const;
    void setDeprecatedSince(const QString &deprecated_since);
    bool is_deprecated_since_Set() const;
    bool is_deprecated_since_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReplacedBy() const;
    void setReplacedBy(const QString &replaced_by);
    bool is_replaced_by_Set() const;
    bool is_replaced_by_Valid() const;

    QString getReplacementType() const;
    void setReplacementType(const QString &replacement_type);
    bool is_replacement_type_Set() const;
    bool is_replacement_type_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_deprecated_since;
    bool m_deprecated_since_isSet;
    bool m_deprecated_since_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_replaced_by;
    bool m_replaced_by_isSet;
    bool m_replaced_by_isValid;

    QString m_replacement_type;
    bool m_replacement_type_isSet;
    bool m_replacement_type_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeprecated)

#endif // OAIDeprecated_H
