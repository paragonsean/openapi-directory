/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVersion_availability_mixin_version_inner_version_inner.h
 *
 * 
 */

#ifndef OAIVersion_availability_mixin_version_inner_version_inner_H
#define OAIVersion_availability_mixin_version_inner_version_inner_H

#include <QJsonObject>

#include "OAIAvailable_versions_element_version_inner_types_inner.h"
#include "OAIGuidance_warnings.h"
#include "OAIVersion_availability_mixin_version_inner_availabilities_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVersion_availability_mixin_version_inner_availabilities_inner;
class OAIGuidance_warnings;
class OAIAvailable_versions_element_version_inner_types_inner;

class OAIVersion_availability_mixin_version_inner_version_inner : public OAIObject {
public:
    OAIVersion_availability_mixin_version_inner_version_inner();
    OAIVersion_availability_mixin_version_inner_version_inner(QString json);
    ~OAIVersion_availability_mixin_version_inner_version_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIVersion_availability_mixin_version_inner_availabilities_inner> getAvailabilities() const;
    void setAvailabilities(const QList<OAIVersion_availability_mixin_version_inner_availabilities_inner> &availabilities);
    bool is_availabilities_Set() const;
    bool is_availabilities_Valid() const;

    QString getCompetitionWarning() const;
    void setCompetitionWarning(const QString &competition_warning);
    bool is_competition_warning_Set() const;
    bool is_competition_warning_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    OAIGuidance_warnings getGuidanceWarnings() const;
    void setGuidanceWarnings(const OAIGuidance_warnings &guidance_warnings);
    bool is_guidance_warnings_Set() const;
    bool is_guidance_warnings_Valid() const;

    QString getPid() const;
    void setPid(const QString &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    QList<OAIAvailable_versions_element_version_inner_types_inner> getTypes() const;
    void setTypes(const QList<OAIAvailable_versions_element_version_inner_types_inner> &types);
    bool is_types_Set() const;
    bool is_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIVersion_availability_mixin_version_inner_availabilities_inner> m_availabilities;
    bool m_availabilities_isSet;
    bool m_availabilities_isValid;

    QString m_competition_warning;
    bool m_competition_warning_isSet;
    bool m_competition_warning_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    OAIGuidance_warnings m_guidance_warnings;
    bool m_guidance_warnings_isSet;
    bool m_guidance_warnings_isValid;

    QString m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    QList<OAIAvailable_versions_element_version_inner_types_inner> m_types;
    bool m_types_isSet;
    bool m_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVersion_availability_mixin_version_inner_version_inner)

#endif // OAIVersion_availability_mixin_version_inner_version_inner_H
