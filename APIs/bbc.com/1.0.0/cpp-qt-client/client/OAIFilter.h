/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilter.h
 *
 * 
 */

#ifndef OAIFilter_H
#define OAIFilter_H

#include <QJsonObject>

#include "OAIOption.h"
#include "OAIProhibits.h"
#include "OAIRelease_status_type.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOption;
class OAIProhibits;

class OAIFilter : public OAIObject {
public:
    OAIFilter();
    OAIFilter(QString json);
    ~OAIFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRDefault() const;
    void setRDefault(const QString &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    QString getDependsOn() const;
    void setDependsOn(const QString &depends_on);
    bool is_depends_on_Set() const;
    bool is_depends_on_Valid() const;

    bool isDeprecated() const;
    void setDeprecated(const bool &deprecated);
    bool is_deprecated_Set() const;
    bool is_deprecated_Valid() const;

    QString getDeprecatedSince() const;
    void setDeprecatedSince(const QString &deprecated_since);
    bool is_deprecated_since_Set() const;
    bool is_deprecated_since_Valid() const;

    QString getGuaranteedUntil() const;
    void setGuaranteedUntil(const QString &guaranteed_until);
    bool is_guaranteed_until_Set() const;
    bool is_guaranteed_until_Valid() const;

    qint32 getMaxValue() const;
    void setMaxValue(const qint32 &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    qint32 getMinValue() const;
    void setMinValue(const qint32 &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    bool isMultipleValues() const;
    void setMultipleValues(const bool &multiple_values);
    bool is_multiple_values_Set() const;
    bool is_multiple_values_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIOption> getOption() const;
    void setOption(const QList<OAIOption> &option);
    bool is_option_Set() const;
    bool is_option_Valid() const;

    QString getPrefer() const;
    void setPrefer(const QString &prefer);
    bool is_prefer_Set() const;
    bool is_prefer_Valid() const;

    QList<OAIProhibits> getProhibits() const;
    void setProhibits(const QList<OAIProhibits> &prohibits);
    bool is_prohibits_Set() const;
    bool is_prohibits_Valid() const;

    OAIRelease_status_type getReleaseStatus() const;
    void setReleaseStatus(const OAIRelease_status_type &release_status);
    bool is_release_status_Set() const;
    bool is_release_status_Valid() const;

    QString getReplacedBy() const;
    void setReplacedBy(const QString &replaced_by);
    bool is_replaced_by_Set() const;
    bool is_replaced_by_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    QString m_depends_on;
    bool m_depends_on_isSet;
    bool m_depends_on_isValid;

    bool m_deprecated;
    bool m_deprecated_isSet;
    bool m_deprecated_isValid;

    QString m_deprecated_since;
    bool m_deprecated_since_isSet;
    bool m_deprecated_since_isValid;

    QString m_guaranteed_until;
    bool m_guaranteed_until_isSet;
    bool m_guaranteed_until_isValid;

    qint32 m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    qint32 m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    bool m_multiple_values;
    bool m_multiple_values_isSet;
    bool m_multiple_values_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIOption> m_option;
    bool m_option_isSet;
    bool m_option_isValid;

    QString m_prefer;
    bool m_prefer_isSet;
    bool m_prefer_isValid;

    QList<OAIProhibits> m_prohibits;
    bool m_prohibits_isSet;
    bool m_prohibits_isValid;

    OAIRelease_status_type m_release_status;
    bool m_release_status_isSet;
    bool m_release_status_isValid;

    QString m_replaced_by;
    bool m_replaced_by_isSet;
    bool m_replaced_by_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilter)

#endif // OAIFilter_H
