/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReference.h
 *
 * 
 */

#ifndef OAIReference_H
#define OAIReference_H

#include <QJsonObject>

#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReference : public OAIObject {
public:
    OAIReference();
    OAIReference(QString json);
    ~OAIReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getResultType() const;
    void setResultType(const QString &result_type);
    bool is_result_type_Set() const;
    bool is_result_type_Valid() const;

    bool isHrefDeprecated() const;
    void setHrefDeprecated(const bool &href_deprecated);
    bool is_href_deprecated_Set() const;
    bool is_href_deprecated_Valid() const;

    bool isResultTypeDeprecated() const;
    void setResultTypeDeprecated(const bool &result_type_deprecated);
    bool is_result_type_deprecated_Set() const;
    bool is_result_type_deprecated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_result_type;
    bool m_result_type_isSet;
    bool m_result_type_isValid;

    bool m_href_deprecated;
    bool m_href_deprecated_isSet;
    bool m_href_deprecated_isValid;

    bool m_result_type_deprecated;
    bool m_result_type_deprecated_isSet;
    bool m_result_type_deprecated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReference)

#endif // OAIReference_H
