/**
 * BBC Nitro API
 * BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nitro@bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVersion_group_version.h
 *
 * 
 */

#ifndef OAIVersion_group_version_H
#define OAIVersion_group_version_H

#include <QJsonObject>

#include "OAIIdentifiers.h"
#include "OAIIds.h"
#include "OAIPidReference.h"
#include "OAITypes_with_id.h"
#include "OAIVersion_group_version_version.h"
#include "OAIVersion_types_with_id.h"
#include "OAIWarnings.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentifiers;
class OAIIds;
class OAITypes_with_id;
class OAIVersion_group_version_version;
class OAIPidReference;
class OAIVersion_types_with_id;
class OAIWarnings;

class OAIVersion_group_version : public OAIObject {
public:
    OAIVersion_group_version();
    OAIVersion_group_version(QString json);
    ~OAIVersion_group_version() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAspectRatio() const;
    void setAspectRatio(const QString &aspect_ratio);
    bool is_aspect_ratio_Set() const;
    bool is_aspect_ratio_Valid() const;

    bool isCompetitionWarning() const;
    void setCompetitionWarning(const bool &competition_warning);
    bool is_competition_warning_Set() const;
    bool is_competition_warning_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    OAIIdentifiers getIdentifiers() const;
    void setIdentifiers(const OAIIdentifiers &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    OAIIds getIds() const;
    void setIds(const OAIIds &ids);
    bool is_ids_Set() const;
    bool is_ids_Valid() const;

    QString getPid() const;
    void setPid(const QString &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    OAITypes_with_id getTypesWithId() const;
    void setTypesWithId(const OAITypes_with_id &types_with_id);
    bool is_types_with_id_Set() const;
    bool is_types_with_id_Valid() const;

    QDateTime getUpdatedTime() const;
    void setUpdatedTime(const QDateTime &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    OAIVersion_group_version_version getVersion() const;
    void setVersion(const OAIVersion_group_version_version &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIPidReference getVersionOf() const;
    void setVersionOf(const OAIPidReference &version_of);
    bool is_version_of_Set() const;
    bool is_version_of_Valid() const;

    OAIVersion_types_with_id getVersionTypesWithId() const;
    void setVersionTypesWithId(const OAIVersion_types_with_id &version_types_with_id);
    bool is_version_types_with_id_Set() const;
    bool is_version_types_with_id_Valid() const;

    OAIWarnings getWarnings() const;
    void setWarnings(const OAIWarnings &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aspect_ratio;
    bool m_aspect_ratio_isSet;
    bool m_aspect_ratio_isValid;

    bool m_competition_warning;
    bool m_competition_warning_isSet;
    bool m_competition_warning_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    OAIIdentifiers m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    OAIIds m_ids;
    bool m_ids_isSet;
    bool m_ids_isValid;

    QString m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    OAITypes_with_id m_types_with_id;
    bool m_types_with_id_isSet;
    bool m_types_with_id_isValid;

    QDateTime m_updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;

    OAIVersion_group_version_version m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIPidReference m_version_of;
    bool m_version_of_isSet;
    bool m_version_of_isValid;

    OAIVersion_types_with_id m_version_types_with_id;
    bool m_version_types_with_id_isSet;
    bool m_version_types_with_id_isValid;

    OAIWarnings m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVersion_group_version)

#endif // OAIVersion_group_version_H
