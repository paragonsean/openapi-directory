/**
 * Labour Resource Department, Bihar
 * Department of Labour Resources (http://labour.bih.nic.in/) issues various certificates to the citizens. They can be pulled into citizen's DigiLocker account. Currently available- Shops and Commercial Establishments Registration Certificate
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AlimwRequestCertificateParameters model module.
 * @module model/AlimwRequestCertificateParameters
 * @version 3.0.0
 */
class AlimwRequestCertificateParameters {
    /**
     * Constructs a new <code>AlimwRequestCertificateParameters</code>.
     * @alias module:model/AlimwRequestCertificateParameters
     * @param refNo {String} Reference No.
     * @param tokenNo {String} Token ID
     */
    constructor(refNo, tokenNo) { 
        
        AlimwRequestCertificateParameters.initialize(this, refNo, tokenNo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, refNo, tokenNo) { 
        obj['RefNo'] = refNo;
        obj['TokenNo'] = tokenNo;
    }

    /**
     * Constructs a <code>AlimwRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlimwRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/AlimwRequestCertificateParameters} The populated <code>AlimwRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlimwRequestCertificateParameters();

            if (data.hasOwnProperty('RefNo')) {
                obj['RefNo'] = ApiClient.convertToType(data['RefNo'], 'String');
            }
            if (data.hasOwnProperty('TokenNo')) {
                obj['TokenNo'] = ApiClient.convertToType(data['TokenNo'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlimwRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlimwRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AlimwRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['RefNo'] && !(typeof data['RefNo'] === 'string' || data['RefNo'] instanceof String)) {
            throw new Error("Expected the field `RefNo` to be a primitive type in the JSON string but got " + data['RefNo']);
        }
        // ensure the json data is a string
        if (data['TokenNo'] && !(typeof data['TokenNo'] === 'string' || data['TokenNo'] instanceof String)) {
            throw new Error("Expected the field `TokenNo` to be a primitive type in the JSON string but got " + data['TokenNo']);
        }

        return true;
    }


}

AlimwRequestCertificateParameters.RequiredProperties = ["RefNo", "TokenNo"];

/**
 * Reference No.
 * @member {String} RefNo
 */
AlimwRequestCertificateParameters.prototype['RefNo'] = undefined;

/**
 * Token ID
 * @member {String} TokenNo
 */
AlimwRequestCertificateParameters.prototype['TokenNo'] = undefined;






export default AlimwRequestCertificateParameters;

