/**
 * Revenue, Registration & Land Reforms Department, Jharkhand
 * Department of Revenue, Registration & Land Reforms, Jharkhand (http://www.jharkhand.gov.in/revenue) is issuing Registration Certificate of Deeds into citizens' DigiLocker accounts from 5th May 2017 onwards.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegrii_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegrii_request_certificateParameters::OAIRegrii_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegrii_request_certificateParameters::OAIRegrii_request_certificateParameters() {
    this->initializeModel();
}

OAIRegrii_request_certificateParameters::~OAIRegrii_request_certificateParameters() {}

void OAIRegrii_request_certificateParameters::initializeModel() {

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_regno_isSet = false;
    m_regno_isValid = false;

    m_sro_id_isSet = false;
    m_sro_id_isValid = false;

    m_yr_isSet = false;
    m_yr_isValid = false;
}

void OAIRegrii_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegrii_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("FullName")]);
    m_full_name_isSet = !json[QString("FullName")].isNull() && m_full_name_isValid;

    m_regno_isValid = ::OpenAPI::fromJsonValue(m_regno, json[QString("regno")]);
    m_regno_isSet = !json[QString("regno")].isNull() && m_regno_isValid;

    m_sro_id_isValid = ::OpenAPI::fromJsonValue(m_sro_id, json[QString("sro_id")]);
    m_sro_id_isSet = !json[QString("sro_id")].isNull() && m_sro_id_isValid;

    m_yr_isValid = ::OpenAPI::fromJsonValue(m_yr, json[QString("yr")]);
    m_yr_isSet = !json[QString("yr")].isNull() && m_yr_isValid;
}

QString OAIRegrii_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegrii_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_full_name_isSet) {
        obj.insert(QString("FullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_regno_isSet) {
        obj.insert(QString("regno"), ::OpenAPI::toJsonValue(m_regno));
    }
    if (m_sro_id_isSet) {
        obj.insert(QString("sro_id"), ::OpenAPI::toJsonValue(m_sro_id));
    }
    if (m_yr_isSet) {
        obj.insert(QString("yr"), ::OpenAPI::toJsonValue(m_yr));
    }
    return obj;
}

QString OAIRegrii_request_certificateParameters::getFullName() const {
    return m_full_name;
}
void OAIRegrii_request_certificateParameters::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIRegrii_request_certificateParameters::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIRegrii_request_certificateParameters::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIRegrii_request_certificateParameters::getRegno() const {
    return m_regno;
}
void OAIRegrii_request_certificateParameters::setRegno(const QString &regno) {
    m_regno = regno;
    m_regno_isSet = true;
}

bool OAIRegrii_request_certificateParameters::is_regno_Set() const{
    return m_regno_isSet;
}

bool OAIRegrii_request_certificateParameters::is_regno_Valid() const{
    return m_regno_isValid;
}

QString OAIRegrii_request_certificateParameters::getSroId() const {
    return m_sro_id;
}
void OAIRegrii_request_certificateParameters::setSroId(const QString &sro_id) {
    m_sro_id = sro_id;
    m_sro_id_isSet = true;
}

bool OAIRegrii_request_certificateParameters::is_sro_id_Set() const{
    return m_sro_id_isSet;
}

bool OAIRegrii_request_certificateParameters::is_sro_id_Valid() const{
    return m_sro_id_isValid;
}

QString OAIRegrii_request_certificateParameters::getYr() const {
    return m_yr;
}
void OAIRegrii_request_certificateParameters::setYr(const QString &yr) {
    m_yr = yr;
    m_yr_isSet = true;
}

bool OAIRegrii_request_certificateParameters::is_yr_Set() const{
    return m_yr_isSet;
}

bool OAIRegrii_request_certificateParameters::is_yr_Valid() const{
    return m_yr_isValid;
}

bool OAIRegrii_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_regno_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sro_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_yr_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegrii_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_full_name_isValid && m_regno_isValid && m_sro_id_isValid && m_yr_isValid && true;
}

} // namespace OpenAPI
