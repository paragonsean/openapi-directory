/**
 * Revenue, Registration & Land Reforms Department, Jharkhand
 * Department of Revenue, Registration & Land Reforms, Jharkhand (http://www.jharkhand.gov.in/revenue) is issuing Registration Certificate of Deeds into citizens' DigiLocker accounts from 5th May 2017 onwards.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RegriiRequestCertificateParameters model module.
 * @module model/RegriiRequestCertificateParameters
 * @version 3.0.0
 */
class RegriiRequestCertificateParameters {
    /**
     * Constructs a new <code>RegriiRequestCertificateParameters</code>.
     * @alias module:model/RegriiRequestCertificateParameters
     * @param fullName {String} Full name
     * @param regno {String} Regitration No
     * @param sroId {String} SRO Name
     * @param yr {String} Year
     */
    constructor(fullName, regno, sroId, yr) { 
        
        RegriiRequestCertificateParameters.initialize(this, fullName, regno, sroId, yr);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fullName, regno, sroId, yr) { 
        obj['FullName'] = fullName;
        obj['regno'] = regno;
        obj['sro_id'] = sroId;
        obj['yr'] = yr;
    }

    /**
     * Constructs a <code>RegriiRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegriiRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/RegriiRequestCertificateParameters} The populated <code>RegriiRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegriiRequestCertificateParameters();

            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('regno')) {
                obj['regno'] = ApiClient.convertToType(data['regno'], 'String');
            }
            if (data.hasOwnProperty('sro_id')) {
                obj['sro_id'] = ApiClient.convertToType(data['sro_id'], 'String');
            }
            if (data.hasOwnProperty('yr')) {
                obj['yr'] = ApiClient.convertToType(data['yr'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegriiRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegriiRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RegriiRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['regno'] && !(typeof data['regno'] === 'string' || data['regno'] instanceof String)) {
            throw new Error("Expected the field `regno` to be a primitive type in the JSON string but got " + data['regno']);
        }
        // ensure the json data is a string
        if (data['sro_id'] && !(typeof data['sro_id'] === 'string' || data['sro_id'] instanceof String)) {
            throw new Error("Expected the field `sro_id` to be a primitive type in the JSON string but got " + data['sro_id']);
        }
        // ensure the json data is a string
        if (data['yr'] && !(typeof data['yr'] === 'string' || data['yr'] instanceof String)) {
            throw new Error("Expected the field `yr` to be a primitive type in the JSON string but got " + data['yr']);
        }

        return true;
    }


}

RegriiRequestCertificateParameters.RequiredProperties = ["FullName", "regno", "sro_id", "yr"];

/**
 * Full name
 * @member {String} FullName
 */
RegriiRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Regitration No
 * @member {String} regno
 */
RegriiRequestCertificateParameters.prototype['regno'] = undefined;

/**
 * SRO Name
 * @member {String} sro_id
 */
RegriiRequestCertificateParameters.prototype['sro_id'] = undefined;

/**
 * Year
 * @member {String} yr
 */
RegriiRequestCertificateParameters.prototype['yr'] = undefined;






export default RegriiRequestCertificateParameters;

