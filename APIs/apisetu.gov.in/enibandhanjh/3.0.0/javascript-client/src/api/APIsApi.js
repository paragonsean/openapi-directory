/**
 * Revenue, Registration & Land Reforms Department, Jharkhand
 * Department of Revenue, Registration & Land Reforms, Jharkhand (http://www.jharkhand.gov.in/revenue) is issuing Registration Certificate of Deeds into citizens' DigiLocker accounts from 5th May 2017 onwards.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Rdcer400Response from '../model/Rdcer400Response';
import Rdcer401Response from '../model/Rdcer401Response';
import Rdcer404Response from '../model/Rdcer404Response';
import Rdcer500Response from '../model/Rdcer500Response';
import Rdcer502Response from '../model/Rdcer502Response';
import Rdcer503Response from '../model/Rdcer503Response';
import Rdcer504Response from '../model/Rdcer504Response';
import RdcerRequest from '../model/RdcerRequest';
import RegriiRequest from '../model/RegriiRequest';

/**
* APIs service.
* @module api/APIsApi
* @version 3.0.0
*/
export default class APIsApi {

    /**
    * Constructs a new APIsApi. 
    * @alias module:api/APIsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the rdcer operation.
     * @callback module:api/APIsApi~rdcerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Copy of Registered Deed
     * API to verify Copy of Registered Deed.
     * @param {Object} opts Optional parameters
     * @param {module:model/RdcerRequest} [rdcerRequest] Request format
     * @param {module:api/APIsApi~rdcerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rdcer(opts, callback) {
      opts = opts || {};
      let postBody = opts['rdcerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/rdcer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the regrii operation.
     * @callback module:api/APIsApi~regriiCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ROR Register 2
     * API to verify ROR Register 2.
     * @param {Object} opts Optional parameters
     * @param {module:model/RegriiRequest} [regriiRequest] Request format
     * @param {module:api/APIsApi~regriiCallback} callback The callback function, accepting three arguments: error, data, response
     */
    regrii(opts, callback) {
      opts = opts || {};
      let postBody = opts['regriiRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/regrii/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rmcer operation.
     * @callback module:api/APIsApi~rmcerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Marriage Certificate
     * API to verify Marriage Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/RegriiRequest} [regriiRequest] Request format
     * @param {module:api/APIsApi~rmcerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rmcer(opts, callback) {
      opts = opts || {};
      let postBody = opts['regriiRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/rmcer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
