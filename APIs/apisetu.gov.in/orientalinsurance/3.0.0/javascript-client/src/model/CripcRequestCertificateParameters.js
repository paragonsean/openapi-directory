/**
 * The Oriental Insurance Co. Ltd.
 * General Insurance policies such as Motor, Health, Travel, Property, Engineering  e.t.c issued by The Oriental  Insurance are available to be pulled for citizens of India.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CripcRequestCertificateParameters model module.
 * @module model/CripcRequestCertificateParameters
 * @version 3.0.0
 */
class CripcRequestCertificateParameters {
    /**
     * Constructs a new <code>CripcRequestCertificateParameters</code>.
     * @alias module:model/CripcRequestCertificateParameters
     * @param INSCODE {String} INSCODE
     * @param POLNO {String} POLNO
     * @param STARTDT {String} STARTDT
     */
    constructor(INSCODE, POLNO, STARTDT) { 
        
        CripcRequestCertificateParameters.initialize(this, INSCODE, POLNO, STARTDT);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, INSCODE, POLNO, STARTDT) { 
        obj['INSCODE'] = INSCODE;
        obj['POLNO'] = POLNO;
        obj['STARTDT'] = STARTDT;
    }

    /**
     * Constructs a <code>CripcRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CripcRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/CripcRequestCertificateParameters} The populated <code>CripcRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CripcRequestCertificateParameters();

            if (data.hasOwnProperty('INSCODE')) {
                obj['INSCODE'] = ApiClient.convertToType(data['INSCODE'], 'String');
            }
            if (data.hasOwnProperty('POLNO')) {
                obj['POLNO'] = ApiClient.convertToType(data['POLNO'], 'String');
            }
            if (data.hasOwnProperty('STARTDT')) {
                obj['STARTDT'] = ApiClient.convertToType(data['STARTDT'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CripcRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CripcRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CripcRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['INSCODE'] && !(typeof data['INSCODE'] === 'string' || data['INSCODE'] instanceof String)) {
            throw new Error("Expected the field `INSCODE` to be a primitive type in the JSON string but got " + data['INSCODE']);
        }
        // ensure the json data is a string
        if (data['POLNO'] && !(typeof data['POLNO'] === 'string' || data['POLNO'] instanceof String)) {
            throw new Error("Expected the field `POLNO` to be a primitive type in the JSON string but got " + data['POLNO']);
        }
        // ensure the json data is a string
        if (data['STARTDT'] && !(typeof data['STARTDT'] === 'string' || data['STARTDT'] instanceof String)) {
            throw new Error("Expected the field `STARTDT` to be a primitive type in the JSON string but got " + data['STARTDT']);
        }

        return true;
    }


}

CripcRequestCertificateParameters.RequiredProperties = ["INSCODE", "POLNO", "STARTDT"];

/**
 * INSCODE
 * @member {String} INSCODE
 */
CripcRequestCertificateParameters.prototype['INSCODE'] = undefined;

/**
 * POLNO
 * @member {String} POLNO
 */
CripcRequestCertificateParameters.prototype['POLNO'] = undefined;

/**
 * STARTDT
 * @member {String} STARTDT
 */
CripcRequestCertificateParameters.prototype['STARTDT'] = undefined;






export default CripcRequestCertificateParameters;

