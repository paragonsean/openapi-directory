# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CripcRequestCertificateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inscode: str=None, polno: str=None, startdt: str=None):
        """CripcRequestCertificateParameters - a model defined in OpenAPI

        :param inscode: The inscode of this CripcRequestCertificateParameters.
        :param polno: The polno of this CripcRequestCertificateParameters.
        :param startdt: The startdt of this CripcRequestCertificateParameters.
        """
        self.openapi_types = {
            'inscode': str,
            'polno': str,
            'startdt': str
        }

        self.attribute_map = {
            'inscode': 'INSCODE',
            'polno': 'POLNO',
            'startdt': 'STARTDT'
        }

        self._inscode = inscode
        self._polno = polno
        self._startdt = startdt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CripcRequestCertificateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The cripc_request_certificateParameters of this CripcRequestCertificateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inscode(self):
        """Gets the inscode of this CripcRequestCertificateParameters.

        INSCODE

        :return: The inscode of this CripcRequestCertificateParameters.
        :rtype: str
        """
        return self._inscode

    @inscode.setter
    def inscode(self, inscode):
        """Sets the inscode of this CripcRequestCertificateParameters.

        INSCODE

        :param inscode: The inscode of this CripcRequestCertificateParameters.
        :type inscode: str
        """
        if inscode is None:
            raise ValueError("Invalid value for `inscode`, must not be `None`")

        self._inscode = inscode

    @property
    def polno(self):
        """Gets the polno of this CripcRequestCertificateParameters.

        POLNO

        :return: The polno of this CripcRequestCertificateParameters.
        :rtype: str
        """
        return self._polno

    @polno.setter
    def polno(self, polno):
        """Sets the polno of this CripcRequestCertificateParameters.

        POLNO

        :param polno: The polno of this CripcRequestCertificateParameters.
        :type polno: str
        """
        if polno is None:
            raise ValueError("Invalid value for `polno`, must not be `None`")

        self._polno = polno

    @property
    def startdt(self):
        """Gets the startdt of this CripcRequestCertificateParameters.

        STARTDT

        :return: The startdt of this CripcRequestCertificateParameters.
        :rtype: str
        """
        return self._startdt

    @startdt.setter
    def startdt(self, startdt):
        """Sets the startdt of this CripcRequestCertificateParameters.

        STARTDT

        :param startdt: The startdt of this CripcRequestCertificateParameters.
        :type startdt: str
        """
        if startdt is None:
            raise ValueError("Invalid value for `startdt`, must not be `None`")

        self._startdt = startdt
