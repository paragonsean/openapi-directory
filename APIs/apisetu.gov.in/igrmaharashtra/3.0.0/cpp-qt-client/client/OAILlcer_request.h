/**
 * Department of Registration & Stamps, Maharashtra
 * Dept of Registration & Stamps, Maharashtra (https://esearchigr.maharashtra.gov.in) is issuing digital Leave & License Certificates into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILlcer_request.h
 *
 * 
 */

#ifndef OAILlcer_request_H
#define OAILlcer_request_H

#include <QJsonObject>

#include "OAIConsentArtifactSchema.h"
#include "OAILlcer_request_certificateParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILlcer_request_certificateParameters;
class OAIConsentArtifactSchema;

class OAILlcer_request : public OAIObject {
public:
    OAILlcer_request();
    OAILlcer_request(QString json);
    ~OAILlcer_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILlcer_request_certificateParameters getCertificateParameters() const;
    void setCertificateParameters(const OAILlcer_request_certificateParameters &certificate_parameters);
    bool is_certificate_parameters_Set() const;
    bool is_certificate_parameters_Valid() const;

    OAIConsentArtifactSchema getConsentArtifact() const;
    void setConsentArtifact(const OAIConsentArtifactSchema &consent_artifact);
    bool is_consent_artifact_Set() const;
    bool is_consent_artifact_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getTxnId() const;
    void setTxnId(const QString &txn_id);
    bool is_txn_id_Set() const;
    bool is_txn_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILlcer_request_certificateParameters m_certificate_parameters;
    bool m_certificate_parameters_isSet;
    bool m_certificate_parameters_isValid;

    OAIConsentArtifactSchema m_consent_artifact;
    bool m_consent_artifact_isSet;
    bool m_consent_artifact_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_txn_id;
    bool m_txn_id_isSet;
    bool m_txn_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILlcer_request)

#endif // OAILlcer_request_H
