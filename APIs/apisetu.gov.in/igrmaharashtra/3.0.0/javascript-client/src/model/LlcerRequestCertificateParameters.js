/**
 * Department of Registration & Stamps, Maharashtra
 * Dept of Registration & Stamps, Maharashtra (https://esearchigr.maharashtra.gov.in) is issuing digital Leave & License Certificates into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LlcerRequestCertificateParameters model module.
 * @module model/LlcerRequestCertificateParameters
 * @version 3.0.0
 */
class LlcerRequestCertificateParameters {
    /**
     * Constructs a new <code>LlcerRequestCertificateParameters</code>.
     * @alias module:model/LlcerRequestCertificateParameters
     * @param uDF1 {String} Document SRO
     * @param uDF2 {String} Document Number
     * @param uDF3 {String} Document Year
     */
    constructor(uDF1, uDF2, uDF3) { 
        
        LlcerRequestCertificateParameters.initialize(this, uDF1, uDF2, uDF3);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, uDF1, uDF2, uDF3) { 
        obj['UDF1'] = uDF1;
        obj['UDF2'] = uDF2;
        obj['UDF3'] = uDF3;
    }

    /**
     * Constructs a <code>LlcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LlcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/LlcerRequestCertificateParameters} The populated <code>LlcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LlcerRequestCertificateParameters();

            if (data.hasOwnProperty('UDF1')) {
                obj['UDF1'] = ApiClient.convertToType(data['UDF1'], 'String');
            }
            if (data.hasOwnProperty('UDF2')) {
                obj['UDF2'] = ApiClient.convertToType(data['UDF2'], 'String');
            }
            if (data.hasOwnProperty('UDF3')) {
                obj['UDF3'] = ApiClient.convertToType(data['UDF3'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LlcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LlcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LlcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['UDF1'] && !(typeof data['UDF1'] === 'string' || data['UDF1'] instanceof String)) {
            throw new Error("Expected the field `UDF1` to be a primitive type in the JSON string but got " + data['UDF1']);
        }
        // ensure the json data is a string
        if (data['UDF2'] && !(typeof data['UDF2'] === 'string' || data['UDF2'] instanceof String)) {
            throw new Error("Expected the field `UDF2` to be a primitive type in the JSON string but got " + data['UDF2']);
        }
        // ensure the json data is a string
        if (data['UDF3'] && !(typeof data['UDF3'] === 'string' || data['UDF3'] instanceof String)) {
            throw new Error("Expected the field `UDF3` to be a primitive type in the JSON string but got " + data['UDF3']);
        }

        return true;
    }


}

LlcerRequestCertificateParameters.RequiredProperties = ["UDF1", "UDF2", "UDF3"];

/**
 * Document SRO
 * @member {String} UDF1
 */
LlcerRequestCertificateParameters.prototype['UDF1'] = undefined;

/**
 * Document Number
 * @member {String} UDF2
 */
LlcerRequestCertificateParameters.prototype['UDF2'] = undefined;

/**
 * Document Year
 * @member {String} UDF3
 */
LlcerRequestCertificateParameters.prototype['UDF3'] = undefined;






export default LlcerRequestCertificateParameters;

