/**
 * eDistrict Andaman & Nicobar Islands, Andaman & Nicobar
 * eDistrict Andaman (https://edistrict.andaman.gov.in/) is the online service delivery portal for Andaman & Nicobar Islands. Certain documents issued by it (e.g. Local Certificate,Income Certificate,OBC Certificate,Resident Certificate  etc) can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BrlcsRequestCertificateParameters model module.
 * @module model/BrlcsRequestCertificateParameters
 * @version 3.0.0
 */
class BrlcsRequestCertificateParameters {
    /**
     * Constructs a new <code>BrlcsRequestCertificateParameters</code>.
     * @alias module:model/BrlcsRequestCertificateParameters
     * @param certificateNumber {String} Certificate Number
     */
    constructor(certificateNumber) { 
        
        BrlcsRequestCertificateParameters.initialize(this, certificateNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, certificateNumber) { 
        obj['CertificateNumber'] = certificateNumber;
    }

    /**
     * Constructs a <code>BrlcsRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BrlcsRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/BrlcsRequestCertificateParameters} The populated <code>BrlcsRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrlcsRequestCertificateParameters();

            if (data.hasOwnProperty('CertificateNumber')) {
                obj['CertificateNumber'] = ApiClient.convertToType(data['CertificateNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BrlcsRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BrlcsRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BrlcsRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CertificateNumber'] && !(typeof data['CertificateNumber'] === 'string' || data['CertificateNumber'] instanceof String)) {
            throw new Error("Expected the field `CertificateNumber` to be a primitive type in the JSON string but got " + data['CertificateNumber']);
        }

        return true;
    }


}

BrlcsRequestCertificateParameters.RequiredProperties = ["CertificateNumber"];

/**
 * Certificate Number
 * @member {String} CertificateNumber
 */
BrlcsRequestCertificateParameters.prototype['CertificateNumber'] = undefined;






export default BrlcsRequestCertificateParameters;

