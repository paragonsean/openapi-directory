/**
 * eDistrict Andaman & Nicobar Islands, Andaman & Nicobar
 * eDistrict Andaman (https://edistrict.andaman.gov.in/) is the online service delivery portal for Andaman & Nicobar Islands. Certain documents issued by it (e.g. Local Certificate,Income Certificate,OBC Certificate,Resident Certificate  etc) can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EDistrictAndamanNicobarIslandsAndamanNicobar);
  }
}(this, function(expect, EDistrictAndamanNicobarIslandsAndamanNicobar) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EDistrictAndamanNicobarIslandsAndamanNicobar.APIsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('APIsApi', function() {
    describe('brlcs', function() {
      it('should call brlcs successfully', function(done) {
        //uncomment below and update the code to test brlcs
        //instance.brlcs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dpcer', function() {
      it('should call dpcer successfully', function(done) {
        //uncomment below and update the code to test dpcer
        //instance.dpcer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fmcer', function() {
      it('should call fmcer successfully', function(done) {
        //uncomment below and update the code to test fmcer
        //instance.fmcer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('incer', function() {
      it('should call incer successfully', function(done) {
        //uncomment below and update the code to test incer
        //instance.incer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lccep', function() {
      it('should call lccep successfully', function(done) {
        //uncomment below and update the code to test lccep
        //instance.lccep(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ndcer', function() {
      it('should call ndcer successfully', function(done) {
        //uncomment below and update the code to test ndcer
        //instance.ndcer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('obcer', function() {
      it('should call obcer successfully', function(done) {
        //uncomment below and update the code to test obcer
        //instance.obcer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rmcer', function() {
      it('should call rmcer successfully', function(done) {
        //uncomment below and update the code to test rmcer
        //instance.rmcer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rscer', function() {
      it('should call rscer successfully', function(done) {
        //uncomment below and update the code to test rscer
        //instance.rscer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rucer', function() {
      it('should call rucer successfully', function(done) {
        //uncomment below and update the code to test rucer
        //instance.rucer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sicrd', function() {
      it('should call sicrd successfully', function(done) {
        //uncomment below and update the code to test sicrd
        //instance.sicrd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vlcer', function() {
      it('should call vlcer successfully', function(done) {
        //uncomment below and update the code to test vlcer
        //instance.vlcer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
