/**
 * eDistrict Andaman & Nicobar Islands, Andaman & Nicobar
 * eDistrict Andaman (https://edistrict.andaman.gov.in/) is the online service delivery portal for Andaman & Nicobar Islands. Certain documents issued by it (e.g. Local Certificate,Income Certificate,OBC Certificate,Resident Certificate  etc) can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBrlcs_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBrlcs_request_certificateParameters::OAIBrlcs_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBrlcs_request_certificateParameters::OAIBrlcs_request_certificateParameters() {
    this->initializeModel();
}

OAIBrlcs_request_certificateParameters::~OAIBrlcs_request_certificateParameters() {}

void OAIBrlcs_request_certificateParameters::initializeModel() {

    m_certificate_number_isSet = false;
    m_certificate_number_isValid = false;
}

void OAIBrlcs_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBrlcs_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_certificate_number_isValid = ::OpenAPI::fromJsonValue(m_certificate_number, json[QString("CertificateNumber")]);
    m_certificate_number_isSet = !json[QString("CertificateNumber")].isNull() && m_certificate_number_isValid;
}

QString OAIBrlcs_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBrlcs_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_certificate_number_isSet) {
        obj.insert(QString("CertificateNumber"), ::OpenAPI::toJsonValue(m_certificate_number));
    }
    return obj;
}

QString OAIBrlcs_request_certificateParameters::getCertificateNumber() const {
    return m_certificate_number;
}
void OAIBrlcs_request_certificateParameters::setCertificateNumber(const QString &certificate_number) {
    m_certificate_number = certificate_number;
    m_certificate_number_isSet = true;
}

bool OAIBrlcs_request_certificateParameters::is_certificate_number_Set() const{
    return m_certificate_number_isSet;
}

bool OAIBrlcs_request_certificateParameters::is_certificate_number_Valid() const{
    return m_certificate_number_isValid;
}

bool OAIBrlcs_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_certificate_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBrlcs_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_certificate_number_isValid && true;
}

} // namespace OpenAPI
