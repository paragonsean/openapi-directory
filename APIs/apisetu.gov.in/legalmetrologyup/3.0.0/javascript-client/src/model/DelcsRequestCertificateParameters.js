/**
 * Department of Legal Metrology, Uttar Pradesh
 * Licenses issued by Department of Legal Metrology, Uttar Pradesh can be pulled by citizens into their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DelcsRequestCertificateParameters model module.
 * @module model/DelcsRequestCertificateParameters
 * @version 3.0.0
 */
class DelcsRequestCertificateParameters {
    /**
     * Constructs a new <code>DelcsRequestCertificateParameters</code>.
     * @alias module:model/DelcsRequestCertificateParameters
     * @param applicationNo {String} Application No.
     * @param licenseNo {String} License No.
     */
    constructor(applicationNo, licenseNo) { 
        
        DelcsRequestCertificateParameters.initialize(this, applicationNo, licenseNo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationNo, licenseNo) { 
        obj['applicationNo'] = applicationNo;
        obj['licenseNo'] = licenseNo;
    }

    /**
     * Constructs a <code>DelcsRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DelcsRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/DelcsRequestCertificateParameters} The populated <code>DelcsRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DelcsRequestCertificateParameters();

            if (data.hasOwnProperty('applicationNo')) {
                obj['applicationNo'] = ApiClient.convertToType(data['applicationNo'], 'String');
            }
            if (data.hasOwnProperty('licenseNo')) {
                obj['licenseNo'] = ApiClient.convertToType(data['licenseNo'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DelcsRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DelcsRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DelcsRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['applicationNo'] && !(typeof data['applicationNo'] === 'string' || data['applicationNo'] instanceof String)) {
            throw new Error("Expected the field `applicationNo` to be a primitive type in the JSON string but got " + data['applicationNo']);
        }
        // ensure the json data is a string
        if (data['licenseNo'] && !(typeof data['licenseNo'] === 'string' || data['licenseNo'] instanceof String)) {
            throw new Error("Expected the field `licenseNo` to be a primitive type in the JSON string but got " + data['licenseNo']);
        }

        return true;
    }


}

DelcsRequestCertificateParameters.RequiredProperties = ["applicationNo", "licenseNo"];

/**
 * Application No.
 * @member {String} applicationNo
 */
DelcsRequestCertificateParameters.prototype['applicationNo'] = undefined;

/**
 * License No.
 * @member {String} licenseNo
 */
DelcsRequestCertificateParameters.prototype['licenseNo'] = undefined;






export default DelcsRequestCertificateParameters;

