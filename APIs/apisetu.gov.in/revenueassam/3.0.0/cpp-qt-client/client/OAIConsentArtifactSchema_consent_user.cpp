/**
 * Revenue & Disaster Management Department, Assam, Assam
 * APIs provided by Revenue & Disaster Management Department, Assam, Assam.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConsentArtifactSchema_consent_user.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConsentArtifactSchema_consent_user::OAIConsentArtifactSchema_consent_user(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConsentArtifactSchema_consent_user::OAIConsentArtifactSchema_consent_user() {
    this->initializeModel();
}

OAIConsentArtifactSchema_consent_user::~OAIConsentArtifactSchema_consent_user() {}

void OAIConsentArtifactSchema_consent_user::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_number_isSet = false;
    m_id_number_isValid = false;

    m_id_type_isSet = false;
    m_id_type_isValid = false;

    m_mobile_isSet = false;
    m_mobile_isValid = false;
}

void OAIConsentArtifactSchema_consent_user::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConsentArtifactSchema_consent_user::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_id_number_isValid = ::OpenAPI::fromJsonValue(m_id_number, json[QString("idNumber")]);
    m_id_number_isSet = !json[QString("idNumber")].isNull() && m_id_number_isValid;

    m_id_type_isValid = ::OpenAPI::fromJsonValue(m_id_type, json[QString("idType")]);
    m_id_type_isSet = !json[QString("idType")].isNull() && m_id_type_isValid;

    m_mobile_isValid = ::OpenAPI::fromJsonValue(m_mobile, json[QString("mobile")]);
    m_mobile_isSet = !json[QString("mobile")].isNull() && m_mobile_isValid;
}

QString OAIConsentArtifactSchema_consent_user::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConsentArtifactSchema_consent_user::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_number_isSet) {
        obj.insert(QString("idNumber"), ::OpenAPI::toJsonValue(m_id_number));
    }
    if (m_id_type_isSet) {
        obj.insert(QString("idType"), ::OpenAPI::toJsonValue(m_id_type));
    }
    if (m_mobile_isSet) {
        obj.insert(QString("mobile"), ::OpenAPI::toJsonValue(m_mobile));
    }
    return obj;
}

QString OAIConsentArtifactSchema_consent_user::getEmail() const {
    return m_email;
}
void OAIConsentArtifactSchema_consent_user::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIConsentArtifactSchema_consent_user::is_email_Set() const{
    return m_email_isSet;
}

bool OAIConsentArtifactSchema_consent_user::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIConsentArtifactSchema_consent_user::getIdNumber() const {
    return m_id_number;
}
void OAIConsentArtifactSchema_consent_user::setIdNumber(const QString &id_number) {
    m_id_number = id_number;
    m_id_number_isSet = true;
}

bool OAIConsentArtifactSchema_consent_user::is_id_number_Set() const{
    return m_id_number_isSet;
}

bool OAIConsentArtifactSchema_consent_user::is_id_number_Valid() const{
    return m_id_number_isValid;
}

QString OAIConsentArtifactSchema_consent_user::getIdType() const {
    return m_id_type;
}
void OAIConsentArtifactSchema_consent_user::setIdType(const QString &id_type) {
    m_id_type = id_type;
    m_id_type_isSet = true;
}

bool OAIConsentArtifactSchema_consent_user::is_id_type_Set() const{
    return m_id_type_isSet;
}

bool OAIConsentArtifactSchema_consent_user::is_id_type_Valid() const{
    return m_id_type_isValid;
}

QString OAIConsentArtifactSchema_consent_user::getMobile() const {
    return m_mobile;
}
void OAIConsentArtifactSchema_consent_user::setMobile(const QString &mobile) {
    m_mobile = mobile;
    m_mobile_isSet = true;
}

bool OAIConsentArtifactSchema_consent_user::is_mobile_Set() const{
    return m_mobile_isSet;
}

bool OAIConsentArtifactSchema_consent_user::is_mobile_Valid() const{
    return m_mobile_isValid;
}

bool OAIConsentArtifactSchema_consent_user::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConsentArtifactSchema_consent_user::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_id_number_isValid && m_id_type_isValid && m_mobile_isValid && true;
}

} // namespace OpenAPI
