/**
 * Acko General Insurance Limited
 * Insurance policies issued by Acko General Insurance (https://www.acko.com) can be fetched by the citizens in their Digilocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICripc_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICripc_request_certificateParameters::OAICripc_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICripc_request_certificateParameters::OAICripc_request_certificateParameters() {
    this->initializeModel();
}

OAICripc_request_certificateParameters::~OAICripc_request_certificateParameters() {}

void OAICripc_request_certificateParameters::initializeModel() {

    m_phoneno_isSet = false;
    m_phoneno_isValid = false;

    m_policyno_isSet = false;
    m_policyno_isValid = false;
}

void OAICripc_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICripc_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_phoneno_isValid = ::OpenAPI::fromJsonValue(m_phoneno, json[QString("phoneno")]);
    m_phoneno_isSet = !json[QString("phoneno")].isNull() && m_phoneno_isValid;

    m_policyno_isValid = ::OpenAPI::fromJsonValue(m_policyno, json[QString("policyno")]);
    m_policyno_isSet = !json[QString("policyno")].isNull() && m_policyno_isValid;
}

QString OAICripc_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICripc_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_phoneno_isSet) {
        obj.insert(QString("phoneno"), ::OpenAPI::toJsonValue(m_phoneno));
    }
    if (m_policyno_isSet) {
        obj.insert(QString("policyno"), ::OpenAPI::toJsonValue(m_policyno));
    }
    return obj;
}

QString OAICripc_request_certificateParameters::getPhoneno() const {
    return m_phoneno;
}
void OAICripc_request_certificateParameters::setPhoneno(const QString &phoneno) {
    m_phoneno = phoneno;
    m_phoneno_isSet = true;
}

bool OAICripc_request_certificateParameters::is_phoneno_Set() const{
    return m_phoneno_isSet;
}

bool OAICripc_request_certificateParameters::is_phoneno_Valid() const{
    return m_phoneno_isValid;
}

QString OAICripc_request_certificateParameters::getPolicyno() const {
    return m_policyno;
}
void OAICripc_request_certificateParameters::setPolicyno(const QString &policyno) {
    m_policyno = policyno;
    m_policyno_isSet = true;
}

bool OAICripc_request_certificateParameters::is_policyno_Set() const{
    return m_policyno_isSet;
}

bool OAICripc_request_certificateParameters::is_policyno_Valid() const{
    return m_policyno_isValid;
}

bool OAICripc_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_phoneno_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policyno_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICripc_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_phoneno_isValid && m_policyno_isValid && true;
}

} // namespace OpenAPI
