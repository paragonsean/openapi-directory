/**
 * Acko General Insurance Limited
 * Insurance policies issued by Acko General Insurance (https://www.acko.com) can be fetched by the citizens in their Digilocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CripcRequestCertificateParameters model module.
 * @module model/CripcRequestCertificateParameters
 * @version 3.0.0
 */
class CripcRequestCertificateParameters {
    /**
     * Constructs a new <code>CripcRequestCertificateParameters</code>.
     * @alias module:model/CripcRequestCertificateParameters
     * @param phoneno {String} Phone Number
     * @param policyno {String} Policy Number
     */
    constructor(phoneno, policyno) { 
        
        CripcRequestCertificateParameters.initialize(this, phoneno, policyno);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, phoneno, policyno) { 
        obj['phoneno'] = phoneno;
        obj['policyno'] = policyno;
    }

    /**
     * Constructs a <code>CripcRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CripcRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/CripcRequestCertificateParameters} The populated <code>CripcRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CripcRequestCertificateParameters();

            if (data.hasOwnProperty('phoneno')) {
                obj['phoneno'] = ApiClient.convertToType(data['phoneno'], 'String');
            }
            if (data.hasOwnProperty('policyno')) {
                obj['policyno'] = ApiClient.convertToType(data['policyno'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CripcRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CripcRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CripcRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['phoneno'] && !(typeof data['phoneno'] === 'string' || data['phoneno'] instanceof String)) {
            throw new Error("Expected the field `phoneno` to be a primitive type in the JSON string but got " + data['phoneno']);
        }
        // ensure the json data is a string
        if (data['policyno'] && !(typeof data['policyno'] === 'string' || data['policyno'] instanceof String)) {
            throw new Error("Expected the field `policyno` to be a primitive type in the JSON string but got " + data['policyno']);
        }

        return true;
    }


}

CripcRequestCertificateParameters.RequiredProperties = ["phoneno", "policyno"];

/**
 * Phone Number
 * @member {String} phoneno
 */
CripcRequestCertificateParameters.prototype['phoneno'] = undefined;

/**
 * Policy Number
 * @member {String} policyno
 */
CripcRequestCertificateParameters.prototype['policyno'] = undefined;






export default CripcRequestCertificateParameters;

