/**
 * DigiLocker Issuer APIs
 * This document provides detailed specification of the Digital Locker Pull APIs. The Pull model of integration with Digital Locker enables a Digital Locker user to search a document/certificate from issuer repository and fetch (pull) it into Digital Locker. The issuer departments can use these APIs for the documents that are not Aadhaar seeded. The issuer organization integrating with Digital Locker maintains the documents/certificates in its own repository (database or file system). The issuer application provides APIs to Digital Locker to access the documents in this repository. Each issuer organization will have to implement 2 APIs to integrate with the Digital Locker system.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPullURIResponse_DocDetails.h
 *
 * Issuer can add meta content specific to document here.
 */

#ifndef OAIPullURIResponse_DocDetails_H
#define OAIPullURIResponse_DocDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPullURIResponse_DocDetails : public OAIObject {
public:
    OAIPullURIResponse_DocDetails();
    OAIPullURIResponse_DocDetails(QString json);
    ~OAIPullURIResponse_DocDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDob() const;
    void setDob(const QString &dob);
    bool is_dob_Set() const;
    bool is_dob_Valid() const;

    QString getDataContent() const;
    void setDataContent(const QString &data_content);
    bool is_data_content_Set() const;
    bool is_data_content_Valid() const;

    QString getDigiLockerId() const;
    void setDigiLockerId(const QString &digi_locker_id);
    bool is_digi_locker_id_Set() const;
    bool is_digi_locker_id_Valid() const;

    QString getDocContent() const;
    void setDocContent(const QString &doc_content);
    bool is_doc_content_Set() const;
    bool is_doc_content_Valid() const;

    QString getDocType() const;
    void setDocType(const QString &doc_type);
    bool is_doc_type_Set() const;
    bool is_doc_type_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    QString getUdf1() const;
    void setUdf1(const QString &udf1);
    bool is_udf1_Set() const;
    bool is_udf1_Valid() const;

    QString getUdf2() const;
    void setUdf2(const QString &udf2);
    bool is_udf2_Set() const;
    bool is_udf2_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dob;
    bool m_dob_isSet;
    bool m_dob_isValid;

    QString m_data_content;
    bool m_data_content_isSet;
    bool m_data_content_isValid;

    QString m_digi_locker_id;
    bool m_digi_locker_id_isSet;
    bool m_digi_locker_id_isValid;

    QString m_doc_content;
    bool m_doc_content_isSet;
    bool m_doc_content_isValid;

    QString m_doc_type;
    bool m_doc_type_isSet;
    bool m_doc_type_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    QString m_udf1;
    bool m_udf1_isSet;
    bool m_udf1_isValid;

    QString m_udf2;
    bool m_udf2_isSet;
    bool m_udf2_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPullURIResponse_DocDetails)

#endif // OAIPullURIResponse_DocDetails_H
