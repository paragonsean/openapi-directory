/**
 * DigiLocker Issuer APIs
 * This document provides detailed specification of the Digital Locker Pull APIs. The Pull model of integration with Digital Locker enables a Digital Locker user to search a document/certificate from issuer repository and fetch (pull) it into Digital Locker. The issuer departments can use these APIs for the documents that are not Aadhaar seeded. The issuer organization integrating with Digital Locker maintains the documents/certificates in its own repository (database or file system). The issuer application provides APIs to Digital Locker to access the documents in this repository. Each issuer organization will have to implement 2 APIs to integrate with the Digital Locker system.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPullDocRequest.h
 *
 * 
 */

#ifndef OAIPullDocRequest_H
#define OAIPullDocRequest_H

#include <QJsonObject>

#include "OAIPullDocRequest_DocDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPullDocRequest_DocDetails;

class OAIPullDocRequest : public OAIObject {
public:
    OAIPullDocRequest();
    OAIPullDocRequest(QString json);
    ~OAIPullDocRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPullDocRequest_DocDetails getDocDetails() const;
    void setDocDetails(const OAIPullDocRequest_DocDetails &doc_details);
    bool is_doc_details_Set() const;
    bool is_doc_details_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getOrgId() const;
    void setOrgId(const QString &org_id);
    bool is_org_id_Set() const;
    bool is_org_id_Valid() const;

    QString getTs() const;
    void setTs(const QString &ts);
    bool is_ts_Set() const;
    bool is_ts_Valid() const;

    QString getTxn() const;
    void setTxn(const QString &txn);
    bool is_txn_Set() const;
    bool is_txn_Valid() const;

    QString getVer() const;
    void setVer(const QString &ver);
    bool is_ver_Set() const;
    bool is_ver_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPullDocRequest_DocDetails m_doc_details;
    bool m_doc_details_isSet;
    bool m_doc_details_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_org_id;
    bool m_org_id_isSet;
    bool m_org_id_isValid;

    QString m_ts;
    bool m_ts_isSet;
    bool m_ts_isValid;

    QString m_txn;
    bool m_txn_isSet;
    bool m_txn_isValid;

    QString m_ver;
    bool m_ver_isSet;
    bool m_ver_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPullDocRequest)

#endif // OAIPullDocRequest_H
