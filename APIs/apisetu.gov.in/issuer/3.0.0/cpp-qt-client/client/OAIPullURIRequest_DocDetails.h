/**
 * DigiLocker Issuer APIs
 * This document provides detailed specification of the Digital Locker Pull APIs. The Pull model of integration with Digital Locker enables a Digital Locker user to search a document/certificate from issuer repository and fetch (pull) it into Digital Locker. The issuer departments can use these APIs for the documents that are not Aadhaar seeded. The issuer organization integrating with Digital Locker maintains the documents/certificates in its own repository (database or file system). The issuer application provides APIs to Digital Locker to access the documents in this repository. Each issuer organization will have to implement 2 APIs to integrate with the Digital Locker system.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPullURIRequest_DocDetails.h
 *
 * 
 */

#ifndef OAIPullURIRequest_DocDetails_H
#define OAIPullURIRequest_DocDetails_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPullURIRequest_DocDetails : public OAIObject {
public:
    OAIPullURIRequest_DocDetails();
    OAIPullURIRequest_DocDetails(QString json);
    ~OAIPullURIRequest_DocDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QJsonValue> getDob() const;
    void setDob(const QList<QJsonValue> &dob);
    bool is_dob_Set() const;
    bool is_dob_Valid() const;

    QList<QJsonValue> getDigiLockerId() const;
    void setDigiLockerId(const QList<QJsonValue> &digi_locker_id);
    bool is_digi_locker_id_Set() const;
    bool is_digi_locker_id_Valid() const;

    QList<QJsonValue> getDocType() const;
    void setDocType(const QList<QJsonValue> &doc_type);
    bool is_doc_type_Set() const;
    bool is_doc_type_Valid() const;

    QList<QJsonValue> getFullName() const;
    void setFullName(const QList<QJsonValue> &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    QList<QJsonValue> getPhoto() const;
    void setPhoto(const QList<QJsonValue> &photo);
    bool is_photo_Set() const;
    bool is_photo_Valid() const;

    QList<QJsonValue> getUdf1() const;
    void setUdf1(const QList<QJsonValue> &udf1);
    bool is_udf1_Set() const;
    bool is_udf1_Valid() const;

    QList<QJsonValue> getUdf2() const;
    void setUdf2(const QList<QJsonValue> &udf2);
    bool is_udf2_Set() const;
    bool is_udf2_Valid() const;

    QList<QJsonValue> getUdf3() const;
    void setUdf3(const QList<QJsonValue> &udf3);
    bool is_udf3_Set() const;
    bool is_udf3_Valid() const;

    QList<QJsonValue> getUdfn() const;
    void setUdfn(const QList<QJsonValue> &udfn);
    bool is_udfn_Set() const;
    bool is_udfn_Valid() const;

    QList<QJsonValue> getUid() const;
    void setUid(const QList<QJsonValue> &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QJsonValue> m_dob;
    bool m_dob_isSet;
    bool m_dob_isValid;

    QList<QJsonValue> m_digi_locker_id;
    bool m_digi_locker_id_isSet;
    bool m_digi_locker_id_isValid;

    QList<QJsonValue> m_doc_type;
    bool m_doc_type_isSet;
    bool m_doc_type_isValid;

    QList<QJsonValue> m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    QList<QJsonValue> m_photo;
    bool m_photo_isSet;
    bool m_photo_isValid;

    QList<QJsonValue> m_udf1;
    bool m_udf1_isSet;
    bool m_udf1_isValid;

    QList<QJsonValue> m_udf2;
    bool m_udf2_isSet;
    bool m_udf2_isValid;

    QList<QJsonValue> m_udf3;
    bool m_udf3_isSet;
    bool m_udf3_isValid;

    QList<QJsonValue> m_udfn;
    bool m_udfn_isSet;
    bool m_udfn_isValid;

    QList<QJsonValue> m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPullURIRequest_DocDetails)

#endif // OAIPullURIRequest_DocDetails_H
