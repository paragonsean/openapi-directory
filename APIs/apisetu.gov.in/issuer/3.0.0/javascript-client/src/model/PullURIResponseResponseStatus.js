/**
 * DigiLocker Issuer APIs
 * This document provides detailed specification of the Digital Locker Pull APIs. The Pull model of integration with Digital Locker enables a Digital Locker user to search a document/certificate from issuer repository and fetch (pull) it into Digital Locker. The issuer departments can use these APIs for the documents that are not Aadhaar seeded. The issuer organization integrating with Digital Locker maintains the documents/certificates in its own repository (database or file system). The issuer application provides APIs to Digital Locker to access the documents in this repository. Each issuer organization will have to implement 2 APIs to integrate with the Digital Locker system.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PullURIResponseResponseStatus model module.
 * @module model/PullURIResponseResponseStatus
 * @version 3.0.0
 */
class PullURIResponseResponseStatus {
    /**
     * Constructs a new <code>PullURIResponseResponseStatus</code>.
     * @alias module:model/PullURIResponseResponseStatus
     * @param status {String} 1 for success, 0 for error and 9 for pending.
     * @param ts {String} A timestamp value as sent in the request.
     * @param txn {String} Transaction id value as sent in the request.
     */
    constructor(status, ts, txn) { 
        
        PullURIResponseResponseStatus.initialize(this, status, ts, txn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status, ts, txn) { 
        obj['Status'] = status;
        obj['ts'] = ts;
        obj['txn'] = txn;
    }

    /**
     * Constructs a <code>PullURIResponseResponseStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PullURIResponseResponseStatus} obj Optional instance to populate.
     * @return {module:model/PullURIResponseResponseStatus} The populated <code>PullURIResponseResponseStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PullURIResponseResponseStatus();

            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('ts')) {
                obj['ts'] = ApiClient.convertToType(data['ts'], 'String');
            }
            if (data.hasOwnProperty('txn')) {
                obj['txn'] = ApiClient.convertToType(data['txn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PullURIResponseResponseStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PullURIResponseResponseStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PullURIResponseResponseStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }
        // ensure the json data is a string
        if (data['ts'] && !(typeof data['ts'] === 'string' || data['ts'] instanceof String)) {
            throw new Error("Expected the field `ts` to be a primitive type in the JSON string but got " + data['ts']);
        }
        // ensure the json data is a string
        if (data['txn'] && !(typeof data['txn'] === 'string' || data['txn'] instanceof String)) {
            throw new Error("Expected the field `txn` to be a primitive type in the JSON string but got " + data['txn']);
        }

        return true;
    }


}

PullURIResponseResponseStatus.RequiredProperties = ["Status", "ts", "txn"];

/**
 * 1 for success, 0 for error and 9 for pending.
 * @member {String} Status
 */
PullURIResponseResponseStatus.prototype['Status'] = undefined;

/**
 * A timestamp value as sent in the request.
 * @member {String} ts
 */
PullURIResponseResponseStatus.prototype['ts'] = undefined;

/**
 * Transaction id value as sent in the request.
 * @member {String} txn
 */
PullURIResponseResponseStatus.prototype['txn'] = undefined;






export default PullURIResponseResponseStatus;

