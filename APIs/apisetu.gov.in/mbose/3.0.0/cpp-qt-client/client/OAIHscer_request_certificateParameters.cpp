/**
 * Meghalaya Board of School Education, Tura, Meghalaya
 * Meghalaya Board of School Education (MBOSE) with Marksheets of Class Xth and Class XIIth (Arts , Science, Commerce and Vocational), is availablke on DigiLocker for the students of 2015-2019.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHscer_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHscer_request_certificateParameters::OAIHscer_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHscer_request_certificateParameters::OAIHscer_request_certificateParameters() {
    this->initializeModel();
}

OAIHscer_request_certificateParameters::~OAIHscer_request_certificateParameters() {}

void OAIHscer_request_certificateParameters::initializeModel() {

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_rroll_isSet = false;
    m_rroll_isValid = false;

    m_year_isSet = false;
    m_year_isValid = false;
}

void OAIHscer_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHscer_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("FullName")]);
    m_full_name_isSet = !json[QString("FullName")].isNull() && m_full_name_isValid;

    m_rroll_isValid = ::OpenAPI::fromJsonValue(m_rroll, json[QString("RROLL")]);
    m_rroll_isSet = !json[QString("RROLL")].isNull() && m_rroll_isValid;

    m_year_isValid = ::OpenAPI::fromJsonValue(m_year, json[QString("YEAR")]);
    m_year_isSet = !json[QString("YEAR")].isNull() && m_year_isValid;
}

QString OAIHscer_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHscer_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_full_name_isSet) {
        obj.insert(QString("FullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_rroll_isSet) {
        obj.insert(QString("RROLL"), ::OpenAPI::toJsonValue(m_rroll));
    }
    if (m_year_isSet) {
        obj.insert(QString("YEAR"), ::OpenAPI::toJsonValue(m_year));
    }
    return obj;
}

QString OAIHscer_request_certificateParameters::getFullName() const {
    return m_full_name;
}
void OAIHscer_request_certificateParameters::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIHscer_request_certificateParameters::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIHscer_request_certificateParameters::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIHscer_request_certificateParameters::getRroll() const {
    return m_rroll;
}
void OAIHscer_request_certificateParameters::setRroll(const QString &rroll) {
    m_rroll = rroll;
    m_rroll_isSet = true;
}

bool OAIHscer_request_certificateParameters::is_rroll_Set() const{
    return m_rroll_isSet;
}

bool OAIHscer_request_certificateParameters::is_rroll_Valid() const{
    return m_rroll_isValid;
}

QString OAIHscer_request_certificateParameters::getYear() const {
    return m_year;
}
void OAIHscer_request_certificateParameters::setYear(const QString &year) {
    m_year = year;
    m_year_isSet = true;
}

bool OAIHscer_request_certificateParameters::is_year_Set() const{
    return m_year_isSet;
}

bool OAIHscer_request_certificateParameters::is_year_Valid() const{
    return m_year_isValid;
}

bool OAIHscer_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rroll_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHscer_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_full_name_isValid && m_rroll_isValid && m_year_isValid && true;
}

} // namespace OpenAPI
