/**
 * Cholamandalam MS General Insurance Company Ltd.
 * APIs provided by Cholamandalam MS General Insurance Company Ltd..
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICripc_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICripc_request_certificateParameters::OAICripc_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICripc_request_certificateParameters::OAICripc_request_certificateParameters() {
    this->initializeModel();
}

OAICripc_request_certificateParameters::~OAICripc_request_certificateParameters() {}

void OAICripc_request_certificateParameters::initializeModel() {

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_polno_isSet = false;
    m_polno_isValid = false;
}

void OAICripc_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICripc_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("DOB")]);
    m_dob_isSet = !json[QString("DOB")].isNull() && m_dob_isValid;

    m_polno_isValid = ::OpenAPI::fromJsonValue(m_polno, json[QString("polno")]);
    m_polno_isSet = !json[QString("polno")].isNull() && m_polno_isValid;
}

QString OAICripc_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICripc_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_dob_isSet) {
        obj.insert(QString("DOB"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_polno_isSet) {
        obj.insert(QString("polno"), ::OpenAPI::toJsonValue(m_polno));
    }
    return obj;
}

QString OAICripc_request_certificateParameters::getDob() const {
    return m_dob;
}
void OAICripc_request_certificateParameters::setDob(const QString &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAICripc_request_certificateParameters::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAICripc_request_certificateParameters::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAICripc_request_certificateParameters::getPolno() const {
    return m_polno;
}
void OAICripc_request_certificateParameters::setPolno(const QString &polno) {
    m_polno = polno;
    m_polno_isSet = true;
}

bool OAICripc_request_certificateParameters::is_polno_Set() const{
    return m_polno_isSet;
}

bool OAICripc_request_certificateParameters::is_polno_Valid() const{
    return m_polno_isValid;
}

bool OAICripc_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_polno_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICripc_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dob_isValid && m_polno_isValid && true;
}

} // namespace OpenAPI
