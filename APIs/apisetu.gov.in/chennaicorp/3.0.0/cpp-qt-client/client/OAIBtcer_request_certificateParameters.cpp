/**
 * Greater Chennai Corporation, Tamil Nadu
 * Birth and Death certificates from 1934-till date, as provided by Greater Chennai Corporation (http://www.chennaicorporation.gov.in), can be downloaded in citizen's DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBtcer_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBtcer_request_certificateParameters::OAIBtcer_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBtcer_request_certificateParameters::OAIBtcer_request_certificateParameters() {
    this->initializeModel();
}

OAIBtcer_request_certificateParameters::~OAIBtcer_request_certificateParameters() {}

void OAIBtcer_request_certificateParameters::initializeModel() {

    m_dateofbirth_isSet = false;
    m_dateofbirth_isValid = false;

    m_regno_isSet = false;
    m_regno_isValid = false;
}

void OAIBtcer_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBtcer_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_dateofbirth_isValid = ::OpenAPI::fromJsonValue(m_dateofbirth, json[QString("DATEOFBIRTH")]);
    m_dateofbirth_isSet = !json[QString("DATEOFBIRTH")].isNull() && m_dateofbirth_isValid;

    m_regno_isValid = ::OpenAPI::fromJsonValue(m_regno, json[QString("REGNO")]);
    m_regno_isSet = !json[QString("REGNO")].isNull() && m_regno_isValid;
}

QString OAIBtcer_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBtcer_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_dateofbirth_isSet) {
        obj.insert(QString("DATEOFBIRTH"), ::OpenAPI::toJsonValue(m_dateofbirth));
    }
    if (m_regno_isSet) {
        obj.insert(QString("REGNO"), ::OpenAPI::toJsonValue(m_regno));
    }
    return obj;
}

QString OAIBtcer_request_certificateParameters::getDateofbirth() const {
    return m_dateofbirth;
}
void OAIBtcer_request_certificateParameters::setDateofbirth(const QString &dateofbirth) {
    m_dateofbirth = dateofbirth;
    m_dateofbirth_isSet = true;
}

bool OAIBtcer_request_certificateParameters::is_dateofbirth_Set() const{
    return m_dateofbirth_isSet;
}

bool OAIBtcer_request_certificateParameters::is_dateofbirth_Valid() const{
    return m_dateofbirth_isValid;
}

QString OAIBtcer_request_certificateParameters::getRegno() const {
    return m_regno;
}
void OAIBtcer_request_certificateParameters::setRegno(const QString &regno) {
    m_regno = regno;
    m_regno_isSet = true;
}

bool OAIBtcer_request_certificateParameters::is_regno_Set() const{
    return m_regno_isSet;
}

bool OAIBtcer_request_certificateParameters::is_regno_Valid() const{
    return m_regno_isValid;
}

bool OAIBtcer_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dateofbirth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_regno_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBtcer_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dateofbirth_isValid && m_regno_isValid && true;
}

} // namespace OpenAPI
