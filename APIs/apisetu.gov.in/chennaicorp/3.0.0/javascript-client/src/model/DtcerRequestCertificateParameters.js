/**
 * Greater Chennai Corporation, Tamil Nadu
 * Birth and Death certificates from 1934-till date, as provided by Greater Chennai Corporation (http://www.chennaicorporation.gov.in), can be downloaded in citizen's DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtcerRequestCertificateParameters model module.
 * @module model/DtcerRequestCertificateParameters
 * @version 3.0.0
 */
class DtcerRequestCertificateParameters {
    /**
     * Constructs a new <code>DtcerRequestCertificateParameters</code>.
     * @alias module:model/DtcerRequestCertificateParameters
     * @param DATEOFDEATH {String} Date of Death
     * @param REGNO {String} Registration Number
     */
    constructor(DATEOFDEATH, REGNO) { 
        
        DtcerRequestCertificateParameters.initialize(this, DATEOFDEATH, REGNO);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, DATEOFDEATH, REGNO) { 
        obj['DATEOFDEATH'] = DATEOFDEATH;
        obj['REGNO'] = REGNO;
    }

    /**
     * Constructs a <code>DtcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/DtcerRequestCertificateParameters} The populated <code>DtcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtcerRequestCertificateParameters();

            if (data.hasOwnProperty('DATEOFDEATH')) {
                obj['DATEOFDEATH'] = ApiClient.convertToType(data['DATEOFDEATH'], 'String');
            }
            if (data.hasOwnProperty('REGNO')) {
                obj['REGNO'] = ApiClient.convertToType(data['REGNO'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DtcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DATEOFDEATH'] && !(typeof data['DATEOFDEATH'] === 'string' || data['DATEOFDEATH'] instanceof String)) {
            throw new Error("Expected the field `DATEOFDEATH` to be a primitive type in the JSON string but got " + data['DATEOFDEATH']);
        }
        // ensure the json data is a string
        if (data['REGNO'] && !(typeof data['REGNO'] === 'string' || data['REGNO'] instanceof String)) {
            throw new Error("Expected the field `REGNO` to be a primitive type in the JSON string but got " + data['REGNO']);
        }

        return true;
    }


}

DtcerRequestCertificateParameters.RequiredProperties = ["DATEOFDEATH", "REGNO"];

/**
 * Date of Death
 * @member {String} DATEOFDEATH
 */
DtcerRequestCertificateParameters.prototype['DATEOFDEATH'] = undefined;

/**
 * Registration Number
 * @member {String} REGNO
 */
DtcerRequestCertificateParameters.prototype['REGNO'] = undefined;






export default DtcerRequestCertificateParameters;

