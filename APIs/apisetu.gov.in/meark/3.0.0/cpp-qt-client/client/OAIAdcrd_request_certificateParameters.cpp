/**
 * Meark Enterprise Pvt. Ltd.
 * A single consolidated system of MEARK has been integrated with DigiLocker to produce Co-curricular activity Awards for Universities and Academic Institutions of India. Initially starting with all the Universities of Maharashtra.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdcrd_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdcrd_request_certificateParameters::OAIAdcrd_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdcrd_request_certificateParameters::OAIAdcrd_request_certificateParameters() {
    this->initializeModel();
}

OAIAdcrd_request_certificateParameters::~OAIAdcrd_request_certificateParameters() {}

void OAIAdcrd_request_certificateParameters::initializeModel() {

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_prn_no_isSet = false;
    m_prn_no_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAIAdcrd_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdcrd_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("DOB")]);
    m_dob_isSet = !json[QString("DOB")].isNull() && m_dob_isValid;

    m_prn_no_isValid = ::OpenAPI::fromJsonValue(m_prn_no, json[QString("PrnNo")]);
    m_prn_no_isSet = !json[QString("PrnNo")].isNull() && m_prn_no_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;
}

QString OAIAdcrd_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdcrd_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_dob_isSet) {
        obj.insert(QString("DOB"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_prn_no_isSet) {
        obj.insert(QString("PrnNo"), ::OpenAPI::toJsonValue(m_prn_no));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QString OAIAdcrd_request_certificateParameters::getDob() const {
    return m_dob;
}
void OAIAdcrd_request_certificateParameters::setDob(const QString &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAIAdcrd_request_certificateParameters::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAIAdcrd_request_certificateParameters::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAIAdcrd_request_certificateParameters::getPrnNo() const {
    return m_prn_no;
}
void OAIAdcrd_request_certificateParameters::setPrnNo(const QString &prn_no) {
    m_prn_no = prn_no;
    m_prn_no_isSet = true;
}

bool OAIAdcrd_request_certificateParameters::is_prn_no_Set() const{
    return m_prn_no_isSet;
}

bool OAIAdcrd_request_certificateParameters::is_prn_no_Valid() const{
    return m_prn_no_isValid;
}

QString OAIAdcrd_request_certificateParameters::getRequestId() const {
    return m_request_id;
}
void OAIAdcrd_request_certificateParameters::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIAdcrd_request_certificateParameters::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIAdcrd_request_certificateParameters::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAIAdcrd_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prn_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdcrd_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dob_isValid && m_prn_no_isValid && m_request_id_isValid && true;
}

} // namespace OpenAPI
