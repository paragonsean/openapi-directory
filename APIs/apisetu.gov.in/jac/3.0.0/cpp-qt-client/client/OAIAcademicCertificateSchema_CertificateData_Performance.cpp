/**
 * Jharkhand State Board (Jharkhand Academic Council), Jharkhand
 * Jharkhand Academic Council (JAC) is issuing marksheets & passing certificates through DigiLocker. These can be pulled by students into their DigiLocker accounts. Currently available - 2009-2017 [Class XII], 2009-2017 [Class X].
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcademicCertificateSchema_CertificateData_Performance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcademicCertificateSchema_CertificateData_Performance::OAIAcademicCertificateSchema_CertificateData_Performance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcademicCertificateSchema_CertificateData_Performance::OAIAcademicCertificateSchema_CertificateData_Performance() {
    this->initializeModel();
}

OAIAcademicCertificateSchema_CertificateData_Performance::~OAIAcademicCertificateSchema_CertificateData_Performance() {}

void OAIAcademicCertificateSchema_CertificateData_Performance::initializeModel() {

    m_subjects_isSet = false;
    m_subjects_isValid = false;

    m_cgpa_isSet = false;
    m_cgpa_isValid = false;

    m_cgpa_max_isSet = false;
    m_cgpa_max_isValid = false;

    m_grade_isSet = false;
    m_grade_isValid = false;

    m_marks_max_isSet = false;
    m_marks_max_isValid = false;

    m_marks_total_isSet = false;
    m_marks_total_isValid = false;

    m_percentage_isSet = false;
    m_percentage_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_result_date_isSet = false;
    m_result_date_isValid = false;

    m_update_date_isSet = false;
    m_update_date_isValid = false;
}

void OAIAcademicCertificateSchema_CertificateData_Performance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcademicCertificateSchema_CertificateData_Performance::fromJsonObject(QJsonObject json) {

    m_subjects_isValid = ::OpenAPI::fromJsonValue(m_subjects, json[QString("Subjects")]);
    m_subjects_isSet = !json[QString("Subjects")].isNull() && m_subjects_isValid;

    m_cgpa_isValid = ::OpenAPI::fromJsonValue(m_cgpa, json[QString("cgpa")]);
    m_cgpa_isSet = !json[QString("cgpa")].isNull() && m_cgpa_isValid;

    m_cgpa_max_isValid = ::OpenAPI::fromJsonValue(m_cgpa_max, json[QString("cgpaMax")]);
    m_cgpa_max_isSet = !json[QString("cgpaMax")].isNull() && m_cgpa_max_isValid;

    m_grade_isValid = ::OpenAPI::fromJsonValue(m_grade, json[QString("grade")]);
    m_grade_isSet = !json[QString("grade")].isNull() && m_grade_isValid;

    m_marks_max_isValid = ::OpenAPI::fromJsonValue(m_marks_max, json[QString("marksMax")]);
    m_marks_max_isSet = !json[QString("marksMax")].isNull() && m_marks_max_isValid;

    m_marks_total_isValid = ::OpenAPI::fromJsonValue(m_marks_total, json[QString("marksTotal")]);
    m_marks_total_isSet = !json[QString("marksTotal")].isNull() && m_marks_total_isValid;

    m_percentage_isValid = ::OpenAPI::fromJsonValue(m_percentage, json[QString("percentage")]);
    m_percentage_isSet = !json[QString("percentage")].isNull() && m_percentage_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_result_date_isValid = ::OpenAPI::fromJsonValue(m_result_date, json[QString("resultDate")]);
    m_result_date_isSet = !json[QString("resultDate")].isNull() && m_result_date_isValid;

    m_update_date_isValid = ::OpenAPI::fromJsonValue(m_update_date, json[QString("updateDate")]);
    m_update_date_isSet = !json[QString("updateDate")].isNull() && m_update_date_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcademicCertificateSchema_CertificateData_Performance::asJsonObject() const {
    QJsonObject obj;
    if (m_subjects.size() > 0) {
        obj.insert(QString("Subjects"), ::OpenAPI::toJsonValue(m_subjects));
    }
    if (m_cgpa_isSet) {
        obj.insert(QString("cgpa"), ::OpenAPI::toJsonValue(m_cgpa));
    }
    if (m_cgpa_max_isSet) {
        obj.insert(QString("cgpaMax"), ::OpenAPI::toJsonValue(m_cgpa_max));
    }
    if (m_grade_isSet) {
        obj.insert(QString("grade"), ::OpenAPI::toJsonValue(m_grade));
    }
    if (m_marks_max_isSet) {
        obj.insert(QString("marksMax"), ::OpenAPI::toJsonValue(m_marks_max));
    }
    if (m_marks_total_isSet) {
        obj.insert(QString("marksTotal"), ::OpenAPI::toJsonValue(m_marks_total));
    }
    if (m_percentage_isSet) {
        obj.insert(QString("percentage"), ::OpenAPI::toJsonValue(m_percentage));
    }
    if (m_result_isSet) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_result_date_isSet) {
        obj.insert(QString("resultDate"), ::OpenAPI::toJsonValue(m_result_date));
    }
    if (m_update_date_isSet) {
        obj.insert(QString("updateDate"), ::OpenAPI::toJsonValue(m_update_date));
    }
    return obj;
}

QList<OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner> OAIAcademicCertificateSchema_CertificateData_Performance::getSubjects() const {
    return m_subjects;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setSubjects(const QList<OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner> &subjects) {
    m_subjects = subjects;
    m_subjects_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_subjects_Set() const{
    return m_subjects_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_subjects_Valid() const{
    return m_subjects_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getCgpa() const {
    return m_cgpa;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setCgpa(const QString &cgpa) {
    m_cgpa = cgpa;
    m_cgpa_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_cgpa_Set() const{
    return m_cgpa_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_cgpa_Valid() const{
    return m_cgpa_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getCgpaMax() const {
    return m_cgpa_max;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setCgpaMax(const QString &cgpa_max) {
    m_cgpa_max = cgpa_max;
    m_cgpa_max_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_cgpa_max_Set() const{
    return m_cgpa_max_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_cgpa_max_Valid() const{
    return m_cgpa_max_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getGrade() const {
    return m_grade;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setGrade(const QString &grade) {
    m_grade = grade;
    m_grade_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_grade_Set() const{
    return m_grade_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_grade_Valid() const{
    return m_grade_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getMarksMax() const {
    return m_marks_max;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setMarksMax(const QString &marks_max) {
    m_marks_max = marks_max;
    m_marks_max_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_marks_max_Set() const{
    return m_marks_max_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_marks_max_Valid() const{
    return m_marks_max_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getMarksTotal() const {
    return m_marks_total;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setMarksTotal(const QString &marks_total) {
    m_marks_total = marks_total;
    m_marks_total_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_marks_total_Set() const{
    return m_marks_total_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_marks_total_Valid() const{
    return m_marks_total_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getPercentage() const {
    return m_percentage;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setPercentage(const QString &percentage) {
    m_percentage = percentage;
    m_percentage_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_percentage_Set() const{
    return m_percentage_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_percentage_Valid() const{
    return m_percentage_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getResult() const {
    return m_result;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setResult(const QString &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_result_Set() const{
    return m_result_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_result_Valid() const{
    return m_result_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getResultDate() const {
    return m_result_date;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setResultDate(const QString &result_date) {
    m_result_date = result_date;
    m_result_date_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_result_date_Set() const{
    return m_result_date_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_result_date_Valid() const{
    return m_result_date_isValid;
}

QString OAIAcademicCertificateSchema_CertificateData_Performance::getUpdateDate() const {
    return m_update_date;
}
void OAIAcademicCertificateSchema_CertificateData_Performance::setUpdateDate(const QString &update_date) {
    m_update_date = update_date;
    m_update_date_isSet = true;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_update_date_Set() const{
    return m_update_date_isSet;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::is_update_date_Valid() const{
    return m_update_date_isValid;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subjects.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_cgpa_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cgpa_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marks_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marks_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcademicCertificateSchema_CertificateData_Performance::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_subjects_isValid && m_cgpa_isValid && m_cgpa_max_isValid && m_grade_isValid && m_marks_max_isValid && m_marks_total_isValid && m_percentage_isValid && m_result_isValid && m_result_date_isValid && m_update_date_isValid && true;
}

} // namespace OpenAPI
