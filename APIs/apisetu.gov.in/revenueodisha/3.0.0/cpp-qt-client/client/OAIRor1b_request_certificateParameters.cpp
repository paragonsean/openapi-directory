/**
 * Revenue Department, Odisha
 * Revenue Department of Odisha(http://revenueodisha.gov.in/) provides Copy of Registered Deed(Sale, Gift) of year 2010 onward and Copy of Record of Rights (RoR).
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRor1b_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRor1b_request_certificateParameters::OAIRor1b_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRor1b_request_certificateParameters::OAIRor1b_request_certificateParameters() {
    this->initializeModel();
}

OAIRor1b_request_certificateParameters::~OAIRor1b_request_certificateParameters() {}

void OAIRor1b_request_certificateParameters::initializeModel() {

    m_khatano_isSet = false;
    m_khatano_isValid = false;

    m_level1_isSet = false;
    m_level1_isValid = false;

    m_level2_isSet = false;
    m_level2_isValid = false;

    m_level3_isSet = false;
    m_level3_isValid = false;
}

void OAIRor1b_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRor1b_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_khatano_isValid = ::OpenAPI::fromJsonValue(m_khatano, json[QString("khatano")]);
    m_khatano_isSet = !json[QString("khatano")].isNull() && m_khatano_isValid;

    m_level1_isValid = ::OpenAPI::fromJsonValue(m_level1, json[QString("level1")]);
    m_level1_isSet = !json[QString("level1")].isNull() && m_level1_isValid;

    m_level2_isValid = ::OpenAPI::fromJsonValue(m_level2, json[QString("level2")]);
    m_level2_isSet = !json[QString("level2")].isNull() && m_level2_isValid;

    m_level3_isValid = ::OpenAPI::fromJsonValue(m_level3, json[QString("level3")]);
    m_level3_isSet = !json[QString("level3")].isNull() && m_level3_isValid;
}

QString OAIRor1b_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRor1b_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_khatano_isSet) {
        obj.insert(QString("khatano"), ::OpenAPI::toJsonValue(m_khatano));
    }
    if (m_level1_isSet) {
        obj.insert(QString("level1"), ::OpenAPI::toJsonValue(m_level1));
    }
    if (m_level2_isSet) {
        obj.insert(QString("level2"), ::OpenAPI::toJsonValue(m_level2));
    }
    if (m_level3_isSet) {
        obj.insert(QString("level3"), ::OpenAPI::toJsonValue(m_level3));
    }
    return obj;
}

QString OAIRor1b_request_certificateParameters::getKhatano() const {
    return m_khatano;
}
void OAIRor1b_request_certificateParameters::setKhatano(const QString &khatano) {
    m_khatano = khatano;
    m_khatano_isSet = true;
}

bool OAIRor1b_request_certificateParameters::is_khatano_Set() const{
    return m_khatano_isSet;
}

bool OAIRor1b_request_certificateParameters::is_khatano_Valid() const{
    return m_khatano_isValid;
}

QString OAIRor1b_request_certificateParameters::getLevel1() const {
    return m_level1;
}
void OAIRor1b_request_certificateParameters::setLevel1(const QString &level1) {
    m_level1 = level1;
    m_level1_isSet = true;
}

bool OAIRor1b_request_certificateParameters::is_level1_Set() const{
    return m_level1_isSet;
}

bool OAIRor1b_request_certificateParameters::is_level1_Valid() const{
    return m_level1_isValid;
}

QString OAIRor1b_request_certificateParameters::getLevel2() const {
    return m_level2;
}
void OAIRor1b_request_certificateParameters::setLevel2(const QString &level2) {
    m_level2 = level2;
    m_level2_isSet = true;
}

bool OAIRor1b_request_certificateParameters::is_level2_Set() const{
    return m_level2_isSet;
}

bool OAIRor1b_request_certificateParameters::is_level2_Valid() const{
    return m_level2_isValid;
}

QString OAIRor1b_request_certificateParameters::getLevel3() const {
    return m_level3;
}
void OAIRor1b_request_certificateParameters::setLevel3(const QString &level3) {
    m_level3 = level3;
    m_level3_isSet = true;
}

bool OAIRor1b_request_certificateParameters::is_level3_Set() const{
    return m_level3_isSet;
}

bool OAIRor1b_request_certificateParameters::is_level3_Valid() const{
    return m_level3_isValid;
}

bool OAIRor1b_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_khatano_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level3_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRor1b_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_khatano_isValid && m_level1_isValid && m_level2_isValid && m_level3_isValid && true;
}

} // namespace OpenAPI
