/**
 * Joint Entrance Examination Council, Uttar Pradesh, Uttar Pradesh
 * Joint Entrance Examination Council (https://jeecup.nic.in) is providing digital Admit Cards for 2018 entrance examination of Diploma courses in the Polytechnics / Institutes affiliated to Board Of Technical Education, U.P.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcademicCertificateSchema_IssuedTo_Person.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcademicCertificateSchema_IssuedTo_Person::OAIAcademicCertificateSchema_IssuedTo_Person(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcademicCertificateSchema_IssuedTo_Person::OAIAcademicCertificateSchema_IssuedTo_Person() {
    this->initializeModel();
}

OAIAcademicCertificateSchema_IssuedTo_Person::~OAIAcademicCertificateSchema_IssuedTo_Person() {}

void OAIAcademicCertificateSchema_IssuedTo_Person::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_photo_isSet = false;
    m_photo_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_disability_status_isSet = false;
    m_disability_status_isValid = false;

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_marital_status_isSet = false;
    m_marital_status_isValid = false;

    m_mother_name_isSet = false;
    m_mother_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_religion_isSet = false;
    m_religion_isValid = false;

    m_swd_isSet = false;
    m_swd_isValid = false;

    m_swd_indicator_isSet = false;
    m_swd_indicator_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAIAcademicCertificateSchema_IssuedTo_Person::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcademicCertificateSchema_IssuedTo_Person::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("Address")]);
    m_address_isSet = !json[QString("Address")].isNull() && m_address_isValid;

    m_photo_isValid = ::OpenAPI::fromJsonValue(m_photo, json[QString("Photo")]);
    m_photo_isSet = !json[QString("Photo")].isNull() && m_photo_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_disability_status_isValid = ::OpenAPI::fromJsonValue(m_disability_status, json[QString("disabilityStatus")]);
    m_disability_status_isSet = !json[QString("disabilityStatus")].isNull() && m_disability_status_isValid;

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("dob")]);
    m_dob_isSet = !json[QString("dob")].isNull() && m_dob_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_marital_status_isValid = ::OpenAPI::fromJsonValue(m_marital_status, json[QString("maritalStatus")]);
    m_marital_status_isSet = !json[QString("maritalStatus")].isNull() && m_marital_status_isValid;

    m_mother_name_isValid = ::OpenAPI::fromJsonValue(m_mother_name, json[QString("motherName")]);
    m_mother_name_isSet = !json[QString("motherName")].isNull() && m_mother_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_religion_isValid = ::OpenAPI::fromJsonValue(m_religion, json[QString("religion")]);
    m_religion_isSet = !json[QString("religion")].isNull() && m_religion_isValid;

    m_swd_isValid = ::OpenAPI::fromJsonValue(m_swd, json[QString("swd")]);
    m_swd_isSet = !json[QString("swd")].isNull() && m_swd_isValid;

    m_swd_indicator_isValid = ::OpenAPI::fromJsonValue(m_swd_indicator, json[QString("swdIndicator")]);
    m_swd_indicator_isSet = !json[QString("swdIndicator")].isNull() && m_swd_indicator_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcademicCertificateSchema_IssuedTo_Person::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("Address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_photo.isSet()) {
        obj.insert(QString("Photo"), ::OpenAPI::toJsonValue(m_photo));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_disability_status_isSet) {
        obj.insert(QString("disabilityStatus"), ::OpenAPI::toJsonValue(m_disability_status));
    }
    if (m_dob_isSet) {
        obj.insert(QString("dob"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_marital_status_isSet) {
        obj.insert(QString("maritalStatus"), ::OpenAPI::toJsonValue(m_marital_status));
    }
    if (m_mother_name_isSet) {
        obj.insert(QString("motherName"), ::OpenAPI::toJsonValue(m_mother_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_religion_isSet) {
        obj.insert(QString("religion"), ::OpenAPI::toJsonValue(m_religion));
    }
    if (m_swd_isSet) {
        obj.insert(QString("swd"), ::OpenAPI::toJsonValue(m_swd));
    }
    if (m_swd_indicator_isSet) {
        obj.insert(QString("swdIndicator"), ::OpenAPI::toJsonValue(m_swd_indicator));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

OAIAcademicCertificateSchema_IssuedTo_Person_Address OAIAcademicCertificateSchema_IssuedTo_Person::getAddress() const {
    return m_address;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setAddress(const OAIAcademicCertificateSchema_IssuedTo_Person_Address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_address_Set() const{
    return m_address_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_address_Valid() const{
    return m_address_isValid;
}

OAIAcademicCertificateSchema_IssuedTo_Person_Photo OAIAcademicCertificateSchema_IssuedTo_Person::getPhoto() const {
    return m_photo;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setPhoto(const OAIAcademicCertificateSchema_IssuedTo_Person_Photo &photo) {
    m_photo = photo;
    m_photo_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_photo_Set() const{
    return m_photo_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_photo_Valid() const{
    return m_photo_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getCategory() const {
    return m_category;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_category_Set() const{
    return m_category_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getDisabilityStatus() const {
    return m_disability_status;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setDisabilityStatus(const QString &disability_status) {
    m_disability_status = disability_status;
    m_disability_status_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_disability_status_Set() const{
    return m_disability_status_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_disability_status_Valid() const{
    return m_disability_status_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getDob() const {
    return m_dob;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setDob(const QString &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getEmail() const {
    return m_email;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getGender() const {
    return m_gender;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getMaritalStatus() const {
    return m_marital_status;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setMaritalStatus(const QString &marital_status) {
    m_marital_status = marital_status;
    m_marital_status_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_marital_status_Set() const{
    return m_marital_status_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_marital_status_Valid() const{
    return m_marital_status_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getMotherName() const {
    return m_mother_name;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setMotherName(const QString &mother_name) {
    m_mother_name = mother_name;
    m_mother_name_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_mother_name_Set() const{
    return m_mother_name_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_mother_name_Valid() const{
    return m_mother_name_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getName() const {
    return m_name;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getPhone() const {
    return m_phone;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getReligion() const {
    return m_religion;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setReligion(const QString &religion) {
    m_religion = religion;
    m_religion_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_religion_Set() const{
    return m_religion_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_religion_Valid() const{
    return m_religion_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getSwd() const {
    return m_swd;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setSwd(const QString &swd) {
    m_swd = swd;
    m_swd_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_swd_Set() const{
    return m_swd_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_swd_Valid() const{
    return m_swd_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getSwdIndicator() const {
    return m_swd_indicator;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setSwdIndicator(const QString &swd_indicator) {
    m_swd_indicator = swd_indicator;
    m_swd_indicator_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_swd_indicator_Set() const{
    return m_swd_indicator_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_swd_indicator_Valid() const{
    return m_swd_indicator_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getTitle() const {
    return m_title;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_title_Set() const{
    return m_title_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIAcademicCertificateSchema_IssuedTo_Person::getUid() const {
    return m_uid;
}
void OAIAcademicCertificateSchema_IssuedTo_Person::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_photo.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disability_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marital_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mother_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_religion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_swd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_swd_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcademicCertificateSchema_IssuedTo_Person::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_photo_isValid && m_category_isValid && m_disability_status_isValid && m_dob_isValid && m_email_isValid && m_gender_isValid && m_marital_status_isValid && m_mother_name_isValid && m_name_isValid && m_phone_isValid && m_religion_isValid && m_swd_isValid && m_swd_indicator_isValid && m_title_isValid && m_uid_isValid && true;
}

} // namespace OpenAPI
