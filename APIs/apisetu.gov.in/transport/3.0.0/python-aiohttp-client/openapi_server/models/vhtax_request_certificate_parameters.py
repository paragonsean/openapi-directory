# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VhtaxRequestCertificateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, full_name: str=None, uid: str=None, chasis_no: str=None, reg_no: str=None, swd_name: str=None):
        """VhtaxRequestCertificateParameters - a model defined in OpenAPI

        :param full_name: The full_name of this VhtaxRequestCertificateParameters.
        :param uid: The uid of this VhtaxRequestCertificateParameters.
        :param chasis_no: The chasis_no of this VhtaxRequestCertificateParameters.
        :param reg_no: The reg_no of this VhtaxRequestCertificateParameters.
        :param swd_name: The swd_name of this VhtaxRequestCertificateParameters.
        """
        self.openapi_types = {
            'full_name': str,
            'uid': str,
            'chasis_no': str,
            'reg_no': str,
            'swd_name': str
        }

        self.attribute_map = {
            'full_name': 'FullName',
            'uid': 'UID',
            'chasis_no': 'chasis_no',
            'reg_no': 'reg_no',
            'swd_name': 'swd_name'
        }

        self._full_name = full_name
        self._uid = uid
        self._chasis_no = chasis_no
        self._reg_no = reg_no
        self._swd_name = swd_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VhtaxRequestCertificateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The vhtax_request_certificateParameters of this VhtaxRequestCertificateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_name(self):
        """Gets the full_name of this VhtaxRequestCertificateParameters.

        Full name

        :return: The full_name of this VhtaxRequestCertificateParameters.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this VhtaxRequestCertificateParameters.

        Full name

        :param full_name: The full_name of this VhtaxRequestCertificateParameters.
        :type full_name: str
        """
        if full_name is None:
            raise ValueError("Invalid value for `full_name`, must not be `None`")

        self._full_name = full_name

    @property
    def uid(self):
        """Gets the uid of this VhtaxRequestCertificateParameters.

        Aadhaar number

        :return: The uid of this VhtaxRequestCertificateParameters.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this VhtaxRequestCertificateParameters.

        Aadhaar number

        :param uid: The uid of this VhtaxRequestCertificateParameters.
        :type uid: str
        """
        if uid is None:
            raise ValueError("Invalid value for `uid`, must not be `None`")

        self._uid = uid

    @property
    def chasis_no(self):
        """Gets the chasis_no of this VhtaxRequestCertificateParameters.

        Chassis No

        :return: The chasis_no of this VhtaxRequestCertificateParameters.
        :rtype: str
        """
        return self._chasis_no

    @chasis_no.setter
    def chasis_no(self, chasis_no):
        """Sets the chasis_no of this VhtaxRequestCertificateParameters.

        Chassis No

        :param chasis_no: The chasis_no of this VhtaxRequestCertificateParameters.
        :type chasis_no: str
        """
        if chasis_no is None:
            raise ValueError("Invalid value for `chasis_no`, must not be `None`")

        self._chasis_no = chasis_no

    @property
    def reg_no(self):
        """Gets the reg_no of this VhtaxRequestCertificateParameters.

        Vehicle Registration No

        :return: The reg_no of this VhtaxRequestCertificateParameters.
        :rtype: str
        """
        return self._reg_no

    @reg_no.setter
    def reg_no(self, reg_no):
        """Sets the reg_no of this VhtaxRequestCertificateParameters.

        Vehicle Registration No

        :param reg_no: The reg_no of this VhtaxRequestCertificateParameters.
        :type reg_no: str
        """
        if reg_no is None:
            raise ValueError("Invalid value for `reg_no`, must not be `None`")

        self._reg_no = reg_no

    @property
    def swd_name(self):
        """Gets the swd_name of this VhtaxRequestCertificateParameters.

        Son / Wife / Daughter of

        :return: The swd_name of this VhtaxRequestCertificateParameters.
        :rtype: str
        """
        return self._swd_name

    @swd_name.setter
    def swd_name(self, swd_name):
        """Sets the swd_name of this VhtaxRequestCertificateParameters.

        Son / Wife / Daughter of

        :param swd_name: The swd_name of this VhtaxRequestCertificateParameters.
        :type swd_name: str
        """
        if swd_name is None:
            raise ValueError("Invalid value for `swd_name`, must not be `None`")

        self._swd_name = swd_name
