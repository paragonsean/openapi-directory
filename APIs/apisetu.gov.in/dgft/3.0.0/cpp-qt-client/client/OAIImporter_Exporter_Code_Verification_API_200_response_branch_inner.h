/**
 * Importer-Exporter Details API
 * The Importer-Exporter Code (IEC), issued by Directorate General of Foreign Trade (DGFT), is a key business identification number which is mandatory for Exports or Imports. This API can be used to get details of a importer-exporter by importer-exporter code.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner.h
 *
 * 
 */

#ifndef OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner_H
#define OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner : public OAIObject {
public:
    OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner();
    OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner(QString json);
    ~OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBadd1() const;
    void setBadd1(const QString &badd1);
    bool is_badd1_Set() const;
    bool is_badd1_Valid() const;

    QString getBadd2() const;
    void setBadd2(const QString &badd2);
    bool is_badd2_Set() const;
    bool is_badd2_Valid() const;

    QString getBranchCode() const;
    void setBranchCode(const QString &branch_code);
    bool is_branch_code_Set() const;
    bool is_branch_code_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getPin() const;
    void setPin(const QString &pin);
    bool is_pin_Set() const;
    bool is_pin_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_badd1;
    bool m_badd1_isSet;
    bool m_badd1_isValid;

    QString m_badd2;
    bool m_badd2_isSet;
    bool m_badd2_isValid;

    QString m_branch_code;
    bool m_branch_code_isSet;
    bool m_branch_code_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_pin;
    bool m_pin_isSet;
    bool m_pin_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner)

#endif // OAIImporter_Exporter_Code_Verification_API_200_response_branch_inner_H
