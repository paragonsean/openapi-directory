/**
 * Tata AIA Life Insurance Co. Ltd.
 * Tata AIA Life Insurance Company Limited provides life insurance solutions to its consumers. Customers can access their policy details [Insurance Policy ï¿½ Life] and premium receipts [Premium Receipt] that are available to be pulled by the policy holders into their DigiLocker account (only documents issued on or after 28-June-2019 are currently available)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PrcptRequestCertificateParameters model module.
 * @module model/PrcptRequestCertificateParameters
 * @version 3.0.0
 */
class PrcptRequestCertificateParameters {
    /**
     * Constructs a new <code>PrcptRequestCertificateParameters</code>.
     * @alias module:model/PrcptRequestCertificateParameters
     * @param fullName {String} Full name
     * @param PI_DOB {String} Date of Birth
     * @param PI_FIN_YEAR {String} Financial Year
     * @param PI_POLICYNBR {String} Policy No
     */
    constructor(fullName, PI_DOB, PI_FIN_YEAR, PI_POLICYNBR) { 
        
        PrcptRequestCertificateParameters.initialize(this, fullName, PI_DOB, PI_FIN_YEAR, PI_POLICYNBR);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fullName, PI_DOB, PI_FIN_YEAR, PI_POLICYNBR) { 
        obj['FullName'] = fullName;
        obj['PI_DOB'] = PI_DOB;
        obj['PI_FIN_YEAR'] = PI_FIN_YEAR;
        obj['PI_POLICYNBR'] = PI_POLICYNBR;
    }

    /**
     * Constructs a <code>PrcptRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrcptRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/PrcptRequestCertificateParameters} The populated <code>PrcptRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrcptRequestCertificateParameters();

            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('PI_DOB')) {
                obj['PI_DOB'] = ApiClient.convertToType(data['PI_DOB'], 'String');
            }
            if (data.hasOwnProperty('PI_FIN_YEAR')) {
                obj['PI_FIN_YEAR'] = ApiClient.convertToType(data['PI_FIN_YEAR'], 'String');
            }
            if (data.hasOwnProperty('PI_POLICYNBR')) {
                obj['PI_POLICYNBR'] = ApiClient.convertToType(data['PI_POLICYNBR'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrcptRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrcptRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PrcptRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['PI_DOB'] && !(typeof data['PI_DOB'] === 'string' || data['PI_DOB'] instanceof String)) {
            throw new Error("Expected the field `PI_DOB` to be a primitive type in the JSON string but got " + data['PI_DOB']);
        }
        // ensure the json data is a string
        if (data['PI_FIN_YEAR'] && !(typeof data['PI_FIN_YEAR'] === 'string' || data['PI_FIN_YEAR'] instanceof String)) {
            throw new Error("Expected the field `PI_FIN_YEAR` to be a primitive type in the JSON string but got " + data['PI_FIN_YEAR']);
        }
        // ensure the json data is a string
        if (data['PI_POLICYNBR'] && !(typeof data['PI_POLICYNBR'] === 'string' || data['PI_POLICYNBR'] instanceof String)) {
            throw new Error("Expected the field `PI_POLICYNBR` to be a primitive type in the JSON string but got " + data['PI_POLICYNBR']);
        }

        return true;
    }


}

PrcptRequestCertificateParameters.RequiredProperties = ["FullName", "PI_DOB", "PI_FIN_YEAR", "PI_POLICYNBR"];

/**
 * Full name
 * @member {String} FullName
 */
PrcptRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Date of Birth
 * @member {String} PI_DOB
 */
PrcptRequestCertificateParameters.prototype['PI_DOB'] = undefined;

/**
 * Financial Year
 * @member {String} PI_FIN_YEAR
 */
PrcptRequestCertificateParameters.prototype['PI_FIN_YEAR'] = undefined;

/**
 * Policy No
 * @member {String} PI_POLICYNBR
 */
PrcptRequestCertificateParameters.prototype['PI_POLICYNBR'] = undefined;






export default PrcptRequestCertificateParameters;

