/**
 * eService (eDistrict), Arunachal Pradesh
 * eService (eDistrict), Arunachal Pradesh (http://eservice.arunachal.gov.in/) is the online service delivery portal for Arunachal Pradesh  State Govt. Certain documents issued by it (e.g. Income, Caste, Domicile, Dependency, SC/ST ,Character,  Residence Certificates etc) are made available in citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Chcer400Response from '../model/Chcer400Response';
import Chcer401Response from '../model/Chcer401Response';
import Chcer404Response from '../model/Chcer404Response';
import Chcer500Response from '../model/Chcer500Response';
import Chcer502Response from '../model/Chcer502Response';
import Chcer503Response from '../model/Chcer503Response';
import Chcer504Response from '../model/Chcer504Response';
import ChcerRequest from '../model/ChcerRequest';

/**
* APIs service.
* @module api/APIsApi
* @version 3.0.0
*/
export default class APIsApi {

    /**
    * Constructs a new APIsApi. 
    * @alias module:api/APIsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the chcer operation.
     * @callback module:api/APIsApi~chcerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Character Certificate
     * API to verify Character Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/ChcerRequest} [chcerRequest] Request format
     * @param {module:api/APIsApi~chcerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    chcer(opts, callback) {
      opts = opts || {};
      let postBody = opts['chcerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/chcer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dmcer operation.
     * @callback module:api/APIsApi~dmcerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Domicile Certificate
     * API to verify Domicile Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/ChcerRequest} [chcerRequest] Request format
     * @param {module:api/APIsApi~dmcerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dmcer(opts, callback) {
      opts = opts || {};
      let postBody = opts['chcerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/dmcer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dpcer operation.
     * @callback module:api/APIsApi~dpcerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Dependency Certificate
     * API to verify Dependency Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/ChcerRequest} [chcerRequest] Request format
     * @param {module:api/APIsApi~dpcerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dpcer(opts, callback) {
      opts = opts || {};
      let postBody = opts['chcerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/dpcer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the incer operation.
     * @callback module:api/APIsApi~incerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Income Certificate
     * API to verify Income Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/ChcerRequest} [chcerRequest] Request format
     * @param {module:api/APIsApi~incerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    incer(opts, callback) {
      opts = opts || {};
      let postBody = opts['chcerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/incer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rscer operation.
     * @callback module:api/APIsApi~rscerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Residence Certificate
     * API to verify Residence Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/ChcerRequest} [chcerRequest] Request format
     * @param {module:api/APIsApi~rscerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rscer(opts, callback) {
      opts = opts || {};
      let postBody = opts['chcerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/rscer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the shcer operation.
     * @callback module:api/APIsApi~shcerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * SC/ST  Certificate
     * API to verify SC/ST  Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/ChcerRequest} [chcerRequest] Request format
     * @param {module:api/APIsApi~shcerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    shcer(opts, callback) {
      opts = opts || {};
      let postBody = opts['chcerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/shcer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
