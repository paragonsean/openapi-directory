/**
 * National Insurance Company Ltd.
 * APIs provided by National Insurance Company Ltd..
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CripcRequestCertificateParameters model module.
 * @module model/CripcRequestCertificateParameters
 * @version 3.0.0
 */
class CripcRequestCertificateParameters {
    /**
     * Constructs a new <code>CripcRequestCertificateParameters</code>.
     * @alias module:model/CripcRequestCertificateParameters
     * @param customerId {String} Customer No
     * @param policyNumber {String} Policy Number
     * @param policyStartDate {String} Policy Start Date
     */
    constructor(customerId, policyNumber, policyStartDate) { 
        
        CripcRequestCertificateParameters.initialize(this, customerId, policyNumber, policyStartDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customerId, policyNumber, policyStartDate) { 
        obj['customer_Id'] = customerId;
        obj['policy_Number'] = policyNumber;
        obj['policy_StartDate'] = policyStartDate;
    }

    /**
     * Constructs a <code>CripcRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CripcRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/CripcRequestCertificateParameters} The populated <code>CripcRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CripcRequestCertificateParameters();

            if (data.hasOwnProperty('customer_Id')) {
                obj['customer_Id'] = ApiClient.convertToType(data['customer_Id'], 'String');
            }
            if (data.hasOwnProperty('policy_Number')) {
                obj['policy_Number'] = ApiClient.convertToType(data['policy_Number'], 'String');
            }
            if (data.hasOwnProperty('policy_StartDate')) {
                obj['policy_StartDate'] = ApiClient.convertToType(data['policy_StartDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CripcRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CripcRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CripcRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['customer_Id'] && !(typeof data['customer_Id'] === 'string' || data['customer_Id'] instanceof String)) {
            throw new Error("Expected the field `customer_Id` to be a primitive type in the JSON string but got " + data['customer_Id']);
        }
        // ensure the json data is a string
        if (data['policy_Number'] && !(typeof data['policy_Number'] === 'string' || data['policy_Number'] instanceof String)) {
            throw new Error("Expected the field `policy_Number` to be a primitive type in the JSON string but got " + data['policy_Number']);
        }
        // ensure the json data is a string
        if (data['policy_StartDate'] && !(typeof data['policy_StartDate'] === 'string' || data['policy_StartDate'] instanceof String)) {
            throw new Error("Expected the field `policy_StartDate` to be a primitive type in the JSON string but got " + data['policy_StartDate']);
        }

        return true;
    }


}

CripcRequestCertificateParameters.RequiredProperties = ["customer_Id", "policy_Number", "policy_StartDate"];

/**
 * Customer No
 * @member {String} customer_Id
 */
CripcRequestCertificateParameters.prototype['customer_Id'] = undefined;

/**
 * Policy Number
 * @member {String} policy_Number
 */
CripcRequestCertificateParameters.prototype['policy_Number'] = undefined;

/**
 * Policy Start Date
 * @member {String} policy_StartDate
 */
CripcRequestCertificateParameters.prototype['policy_StartDate'] = undefined;






export default CripcRequestCertificateParameters;

