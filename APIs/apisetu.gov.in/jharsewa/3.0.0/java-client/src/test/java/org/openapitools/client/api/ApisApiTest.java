/*
 * Jharsewa (eDistrict), Jharkhand
 * Jharkhand e-District is a comprehensive and web enabled service portal that acts as an electronic gateway into the Government's portfolio of services. Jharsewa provides Certificates  like Birth, Death, Income, Caste and Residence Certificates in Digilocker.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Btcer400Response;
import org.openapitools.client.model.Btcer401Response;
import org.openapitools.client.model.Btcer404Response;
import org.openapitools.client.model.Btcer500Response;
import org.openapitools.client.model.Btcer502Response;
import org.openapitools.client.model.Btcer503Response;
import org.openapitools.client.model.Btcer504Response;
import org.openapitools.client.model.BtcerRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApisApi
 */
@Disabled
public class ApisApiTest {

    private final ApisApi api = new ApisApi();

    /**
     * Birth Certificate
     *
     * API to verify Birth Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void btcerTest() throws ApiException {
        BtcerRequest btcerRequest = null;
        api.btcer(btcerRequest);
        // TODO: test validations
    }

    /**
     * Caste Certificate
     *
     * API to verify Caste Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ctcerTest() throws ApiException {
        BtcerRequest btcerRequest = null;
        api.ctcer(btcerRequest);
        // TODO: test validations
    }

    /**
     * Death Certificate
     *
     * API to verify Death Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dtcerTest() throws ApiException {
        BtcerRequest btcerRequest = null;
        api.dtcer(btcerRequest);
        // TODO: test validations
    }

    /**
     * Economically Weaker Section Certificate
     *
     * API to verify Economically Weaker Section Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ewcerTest() throws ApiException {
        BtcerRequest btcerRequest = null;
        api.ewcer(btcerRequest);
        // TODO: test validations
    }

    /**
     * Income Certificate
     *
     * API to verify Income Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void incerTest() throws ApiException {
        BtcerRequest btcerRequest = null;
        api.incer(btcerRequest);
        // TODO: test validations
    }

    /**
     * Marriage Certificate
     *
     * API to verify Marriage Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rmcerTest() throws ApiException {
        BtcerRequest btcerRequest = null;
        api.rmcer(btcerRequest);
        // TODO: test validations
    }

    /**
     * Residence Certificate
     *
     * API to verify Residence Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rscerTest() throws ApiException {
        BtcerRequest btcerRequest = null;
        api.rscer(btcerRequest);
        // TODO: test validations
    }

}
