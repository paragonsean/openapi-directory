/**
 * Jharsewa (eDistrict), Jharkhand
 * Jharkhand e-District is a comprehensive and web enabled service portal that acts as an electronic gateway into the Government's portfolio of services. Jharsewa provides Certificates  like Birth, Death, Income, Caste and Residence Certificates in Digilocker.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BtcerRequestCertificateParameters model module.
 * @module model/BtcerRequestCertificateParameters
 * @version 3.0.0
 */
class BtcerRequestCertificateParameters {
    /**
     * Constructs a new <code>BtcerRequestCertificateParameters</code>.
     * @alias module:model/BtcerRequestCertificateParameters
     * @param refNo {String} Application Reference Number
     * @param tokenNo {String} Certificate Token Number
     */
    constructor(refNo, tokenNo) { 
        
        BtcerRequestCertificateParameters.initialize(this, refNo, tokenNo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, refNo, tokenNo) { 
        obj['RefNo'] = refNo;
        obj['TokenNo'] = tokenNo;
    }

    /**
     * Constructs a <code>BtcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BtcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/BtcerRequestCertificateParameters} The populated <code>BtcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BtcerRequestCertificateParameters();

            if (data.hasOwnProperty('RefNo')) {
                obj['RefNo'] = ApiClient.convertToType(data['RefNo'], 'String');
            }
            if (data.hasOwnProperty('TokenNo')) {
                obj['TokenNo'] = ApiClient.convertToType(data['TokenNo'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BtcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BtcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BtcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['RefNo'] && !(typeof data['RefNo'] === 'string' || data['RefNo'] instanceof String)) {
            throw new Error("Expected the field `RefNo` to be a primitive type in the JSON string but got " + data['RefNo']);
        }
        // ensure the json data is a string
        if (data['TokenNo'] && !(typeof data['TokenNo'] === 'string' || data['TokenNo'] instanceof String)) {
            throw new Error("Expected the field `TokenNo` to be a primitive type in the JSON string but got " + data['TokenNo']);
        }

        return true;
    }


}

BtcerRequestCertificateParameters.RequiredProperties = ["RefNo", "TokenNo"];

/**
 * Application Reference Number
 * @member {String} RefNo
 */
BtcerRequestCertificateParameters.prototype['RefNo'] = undefined;

/**
 * Certificate Token Number
 * @member {String} TokenNo
 */
BtcerRequestCertificateParameters.prototype['TokenNo'] = undefined;






export default BtcerRequestCertificateParameters;

