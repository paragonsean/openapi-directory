/**
 * Transport Department, Manipur
 * Driving License (DL) and Vehicle Registration Certificate (RC) of the State, as available on Parivahan Sewa (http://parivahan.co.in/) of Ministry of Road Transport and Highways, are available on DigiLocker. Citizens can pull these documents into their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAcademicCertificateSchema_IssuedTo_Person.h
 *
 * 
 */

#ifndef OAIAcademicCertificateSchema_IssuedTo_Person_H
#define OAIAcademicCertificateSchema_IssuedTo_Person_H

#include <QJsonObject>

#include "OAIAcademicCertificateSchema_IssuedTo_Person_Address.h"
#include "OAIAcademicCertificateSchema_IssuedTo_Person_Photo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAcademicCertificateSchema_IssuedTo_Person_Address;
class OAIAcademicCertificateSchema_IssuedTo_Person_Photo;

class OAIAcademicCertificateSchema_IssuedTo_Person : public OAIObject {
public:
    OAIAcademicCertificateSchema_IssuedTo_Person();
    OAIAcademicCertificateSchema_IssuedTo_Person(QString json);
    ~OAIAcademicCertificateSchema_IssuedTo_Person() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAcademicCertificateSchema_IssuedTo_Person_Address getAddress() const;
    void setAddress(const OAIAcademicCertificateSchema_IssuedTo_Person_Address &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    OAIAcademicCertificateSchema_IssuedTo_Person_Photo getPhoto() const;
    void setPhoto(const OAIAcademicCertificateSchema_IssuedTo_Person_Photo &photo);
    bool is_photo_Set() const;
    bool is_photo_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDisabilityStatus() const;
    void setDisabilityStatus(const QString &disability_status);
    bool is_disability_status_Set() const;
    bool is_disability_status_Valid() const;

    QString getDob() const;
    void setDob(const QString &dob);
    bool is_dob_Set() const;
    bool is_dob_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getMaritalStatus() const;
    void setMaritalStatus(const QString &marital_status);
    bool is_marital_status_Set() const;
    bool is_marital_status_Valid() const;

    QString getMotherName() const;
    void setMotherName(const QString &mother_name);
    bool is_mother_name_Set() const;
    bool is_mother_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getReligion() const;
    void setReligion(const QString &religion);
    bool is_religion_Set() const;
    bool is_religion_Valid() const;

    QString getSwd() const;
    void setSwd(const QString &swd);
    bool is_swd_Set() const;
    bool is_swd_Valid() const;

    QString getSwdIndicator() const;
    void setSwdIndicator(const QString &swd_indicator);
    bool is_swd_indicator_Set() const;
    bool is_swd_indicator_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAcademicCertificateSchema_IssuedTo_Person_Address m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAIAcademicCertificateSchema_IssuedTo_Person_Photo m_photo;
    bool m_photo_isSet;
    bool m_photo_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_disability_status;
    bool m_disability_status_isSet;
    bool m_disability_status_isValid;

    QString m_dob;
    bool m_dob_isSet;
    bool m_dob_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_marital_status;
    bool m_marital_status_isSet;
    bool m_marital_status_isValid;

    QString m_mother_name;
    bool m_mother_name_isSet;
    bool m_mother_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_religion;
    bool m_religion_isSet;
    bool m_religion_isValid;

    QString m_swd;
    bool m_swd_isSet;
    bool m_swd_isValid;

    QString m_swd_indicator;
    bool m_swd_indicator_isSet;
    bool m_swd_indicator_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAcademicCertificateSchema_IssuedTo_Person)

#endif // OAIAcademicCertificateSchema_IssuedTo_Person_H
