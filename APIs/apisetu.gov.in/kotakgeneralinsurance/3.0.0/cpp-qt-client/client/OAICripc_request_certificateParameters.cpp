/**
 * Kotak Mahindra General Insurance Company Ltd.
 * Insurance Policies such as Health, Car, Two Wheeler, Group, Home etc. issued by KOTAK MAHINDRA GENERAL INSURANCE are available to be pulled by citizens.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICripc_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICripc_request_certificateParameters::OAICripc_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICripc_request_certificateParameters::OAICripc_request_certificateParameters() {
    this->initializeModel();
}

OAICripc_request_certificateParameters::~OAICripc_request_certificateParameters() {}

void OAICripc_request_certificateParameters::initializeModel() {

    m_policy_no_isSet = false;
    m_policy_no_isValid = false;

    m_val_isSet = false;
    m_val_isValid = false;

    m_verification_isSet = false;
    m_verification_isValid = false;
}

void OAICripc_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICripc_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_policy_no_isValid = ::OpenAPI::fromJsonValue(m_policy_no, json[QString("PolicyNo")]);
    m_policy_no_isSet = !json[QString("PolicyNo")].isNull() && m_policy_no_isValid;

    m_val_isValid = ::OpenAPI::fromJsonValue(m_val, json[QString("Val")]);
    m_val_isSet = !json[QString("Val")].isNull() && m_val_isValid;

    m_verification_isValid = ::OpenAPI::fromJsonValue(m_verification, json[QString("Verification")]);
    m_verification_isSet = !json[QString("Verification")].isNull() && m_verification_isValid;
}

QString OAICripc_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICripc_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_policy_no_isSet) {
        obj.insert(QString("PolicyNo"), ::OpenAPI::toJsonValue(m_policy_no));
    }
    if (m_val_isSet) {
        obj.insert(QString("Val"), ::OpenAPI::toJsonValue(m_val));
    }
    if (m_verification_isSet) {
        obj.insert(QString("Verification"), ::OpenAPI::toJsonValue(m_verification));
    }
    return obj;
}

QString OAICripc_request_certificateParameters::getPolicyNo() const {
    return m_policy_no;
}
void OAICripc_request_certificateParameters::setPolicyNo(const QString &policy_no) {
    m_policy_no = policy_no;
    m_policy_no_isSet = true;
}

bool OAICripc_request_certificateParameters::is_policy_no_Set() const{
    return m_policy_no_isSet;
}

bool OAICripc_request_certificateParameters::is_policy_no_Valid() const{
    return m_policy_no_isValid;
}

QString OAICripc_request_certificateParameters::getVal() const {
    return m_val;
}
void OAICripc_request_certificateParameters::setVal(const QString &val) {
    m_val = val;
    m_val_isSet = true;
}

bool OAICripc_request_certificateParameters::is_val_Set() const{
    return m_val_isSet;
}

bool OAICripc_request_certificateParameters::is_val_Valid() const{
    return m_val_isValid;
}

QString OAICripc_request_certificateParameters::getVerification() const {
    return m_verification;
}
void OAICripc_request_certificateParameters::setVerification(const QString &verification) {
    m_verification = verification;
    m_verification_isSet = true;
}

bool OAICripc_request_certificateParameters::is_verification_Set() const{
    return m_verification_isSet;
}

bool OAICripc_request_certificateParameters::is_verification_Valid() const{
    return m_verification_isValid;
}

bool OAICripc_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_val_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verification_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICripc_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_policy_no_isValid && m_val_isValid && m_verification_isValid && true;
}

} // namespace OpenAPI
