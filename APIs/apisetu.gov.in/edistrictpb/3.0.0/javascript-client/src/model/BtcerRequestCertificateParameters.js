/**
 * Punjab State eGovernance Society, Punjab
 * eDistrict Punjab (http://edistrict.punjabgovt.gov.in) is the online service delivery portal for Punjab State Govt. Certain documents issued by it (e.g. Residence, SC/ST, OBC Certificates etc) can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BtcerRequestCertificateParameters model module.
 * @module model/BtcerRequestCertificateParameters
 * @version 3.0.0
 */
class BtcerRequestCertificateParameters {
    /**
     * Constructs a new <code>BtcerRequestCertificateParameters</code>.
     * @alias module:model/BtcerRequestCertificateParameters
     * @param DOB {String} Date of birth in DD-MM-YYYY format
     * @param registrationID {String} Registration Number
     */
    constructor(DOB, registrationID) { 
        
        BtcerRequestCertificateParameters.initialize(this, DOB, registrationID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, DOB, registrationID) { 
        obj['DOB'] = DOB;
        obj['RegistrationID'] = registrationID;
    }

    /**
     * Constructs a <code>BtcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BtcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/BtcerRequestCertificateParameters} The populated <code>BtcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BtcerRequestCertificateParameters();

            if (data.hasOwnProperty('DOB')) {
                obj['DOB'] = ApiClient.convertToType(data['DOB'], 'String');
            }
            if (data.hasOwnProperty('RegistrationID')) {
                obj['RegistrationID'] = ApiClient.convertToType(data['RegistrationID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BtcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BtcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BtcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DOB'] && !(typeof data['DOB'] === 'string' || data['DOB'] instanceof String)) {
            throw new Error("Expected the field `DOB` to be a primitive type in the JSON string but got " + data['DOB']);
        }
        // ensure the json data is a string
        if (data['RegistrationID'] && !(typeof data['RegistrationID'] === 'string' || data['RegistrationID'] instanceof String)) {
            throw new Error("Expected the field `RegistrationID` to be a primitive type in the JSON string but got " + data['RegistrationID']);
        }

        return true;
    }


}

BtcerRequestCertificateParameters.RequiredProperties = ["DOB", "RegistrationID"];

/**
 * Date of birth in DD-MM-YYYY format
 * @member {String} DOB
 */
BtcerRequestCertificateParameters.prototype['DOB'] = undefined;

/**
 * Registration Number
 * @member {String} RegistrationID
 */
BtcerRequestCertificateParameters.prototype['RegistrationID'] = undefined;






export default BtcerRequestCertificateParameters;

