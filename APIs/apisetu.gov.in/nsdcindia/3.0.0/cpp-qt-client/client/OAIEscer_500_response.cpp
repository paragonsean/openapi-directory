/**
 * National Skill Development Corporation (NSDC)
 * NSDC (https://www.nsdcindia.org) promotes skill development by catalyzing creation of large, quality and for-profit vocational institutions. Skill certificates provided under various NSDC programmes are made available to citizens in their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEscer_500_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEscer_500_response::OAIEscer_500_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEscer_500_response::OAIEscer_500_response() {
    this->initializeModel();
}

OAIEscer_500_response::~OAIEscer_500_response() {}

void OAIEscer_500_response::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;

    m_error_description_isSet = false;
    m_error_description_isValid = false;
}

void OAIEscer_500_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEscer_500_response::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_error_description_isValid = ::OpenAPI::fromJsonValue(m_error_description, json[QString("errorDescription")]);
    m_error_description_isSet = !json[QString("errorDescription")].isNull() && m_error_description_isValid;
}

QString OAIEscer_500_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEscer_500_response::asJsonObject() const {
    QJsonObject obj;
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_error_description_isSet) {
        obj.insert(QString("errorDescription"), ::OpenAPI::toJsonValue(m_error_description));
    }
    return obj;
}

QString OAIEscer_500_response::getError() const {
    return m_error;
}
void OAIEscer_500_response::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIEscer_500_response::is_error_Set() const{
    return m_error_isSet;
}

bool OAIEscer_500_response::is_error_Valid() const{
    return m_error_isValid;
}

QString OAIEscer_500_response::getErrorDescription() const {
    return m_error_description;
}
void OAIEscer_500_response::setErrorDescription(const QString &error_description) {
    m_error_description = error_description;
    m_error_description_isSet = true;
}

bool OAIEscer_500_response::is_error_description_Set() const{
    return m_error_description_isSet;
}

bool OAIEscer_500_response::is_error_description_Valid() const{
    return m_error_description_isValid;
}

bool OAIEscer_500_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEscer_500_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
