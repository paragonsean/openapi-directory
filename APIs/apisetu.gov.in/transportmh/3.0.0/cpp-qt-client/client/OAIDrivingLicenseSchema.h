/**
 * Motor Vehicle Department, Maharashtra
 * Driving License (DL) and Vehicle Registration Certificate (RC) of the State, as available on Parivahan Sewa (http://parivahan.co.in/) of Ministry of Road Transport and Highways, are available on DigiLocker. Citizens can pull these documents into their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDrivingLicenseSchema.h
 *
 * 
 */

#ifndef OAIDrivingLicenseSchema_H
#define OAIDrivingLicenseSchema_H

#include <QJsonObject>

#include "OAIDrivingLicenseSchema_CertificateData.h"
#include "OAIDrivingLicenseSchema_IssuedBy.h"
#include "OAIDrivingLicenseSchema_IssuedTo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDrivingLicenseSchema_CertificateData;
class OAIDrivingLicenseSchema_IssuedBy;
class OAIDrivingLicenseSchema_IssuedTo;

class OAIDrivingLicenseSchema : public OAIObject {
public:
    OAIDrivingLicenseSchema();
    OAIDrivingLicenseSchema(QString json);
    ~OAIDrivingLicenseSchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDrivingLicenseSchema_CertificateData getCertificateData() const;
    void setCertificateData(const OAIDrivingLicenseSchema_CertificateData &certificate_data);
    bool is_certificate_data_Set() const;
    bool is_certificate_data_Valid() const;

    OAIDrivingLicenseSchema_IssuedBy getIssuedBy() const;
    void setIssuedBy(const OAIDrivingLicenseSchema_IssuedBy &issued_by);
    bool is_issued_by_Set() const;
    bool is_issued_by_Valid() const;

    OAIDrivingLicenseSchema_IssuedTo getIssuedTo() const;
    void setIssuedTo(const OAIDrivingLicenseSchema_IssuedTo &issued_to);
    bool is_issued_to_Set() const;
    bool is_issued_to_Valid() const;

    QString getExpiryDate() const;
    void setExpiryDate(const QString &expiry_date);
    bool is_expiry_date_Set() const;
    bool is_expiry_date_Valid() const;

    QString getIssueDate() const;
    void setIssueDate(const QString &issue_date);
    bool is_issue_date_Set() const;
    bool is_issue_date_Valid() const;

    QString getIssuedAt() const;
    void setIssuedAt(const QString &issued_at);
    bool is_issued_at_Set() const;
    bool is_issued_at_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    qint32 getPrevNumber() const;
    void setPrevNumber(const qint32 &prev_number);
    bool is_prev_number_Set() const;
    bool is_prev_number_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getValidFromDate() const;
    void setValidFromDate(const QString &valid_from_date);
    bool is_valid_from_date_Set() const;
    bool is_valid_from_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDrivingLicenseSchema_CertificateData m_certificate_data;
    bool m_certificate_data_isSet;
    bool m_certificate_data_isValid;

    OAIDrivingLicenseSchema_IssuedBy m_issued_by;
    bool m_issued_by_isSet;
    bool m_issued_by_isValid;

    OAIDrivingLicenseSchema_IssuedTo m_issued_to;
    bool m_issued_to_isSet;
    bool m_issued_to_isValid;

    QString m_expiry_date;
    bool m_expiry_date_isSet;
    bool m_expiry_date_isValid;

    QString m_issue_date;
    bool m_issue_date_isSet;
    bool m_issue_date_isValid;

    QString m_issued_at;
    bool m_issued_at_isSet;
    bool m_issued_at_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    qint32 m_prev_number;
    bool m_prev_number_isSet;
    bool m_prev_number_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_valid_from_date;
    bool m_valid_from_date_isSet;
    bool m_valid_from_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDrivingLicenseSchema)

#endif // OAIDrivingLicenseSchema_H
