/**
 * Dr. Babasaheb Ambedkar Research & Training Institute, Maharashtra
 * APIs provided by Dr. Babasaheb Ambedkar Research & Training Institute, Maharashtra.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CvcerRequestCertificateParameters model module.
 * @module model/CvcerRequestCertificateParameters
 * @version 3.0.0
 */
class CvcerRequestCertificateParameters {
    /**
     * Constructs a new <code>CvcerRequestCertificateParameters</code>.
     * @alias module:model/CvcerRequestCertificateParameters
     * @param DOB {String} Date of birth in DD-MM-YYYY format
     * @param vCNo {String} VC No
     */
    constructor(DOB, vCNo) { 
        
        CvcerRequestCertificateParameters.initialize(this, DOB, vCNo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, DOB, vCNo) { 
        obj['DOB'] = DOB;
        obj['VCNo'] = vCNo;
    }

    /**
     * Constructs a <code>CvcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CvcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/CvcerRequestCertificateParameters} The populated <code>CvcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CvcerRequestCertificateParameters();

            if (data.hasOwnProperty('DOB')) {
                obj['DOB'] = ApiClient.convertToType(data['DOB'], 'String');
            }
            if (data.hasOwnProperty('VCNo')) {
                obj['VCNo'] = ApiClient.convertToType(data['VCNo'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CvcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CvcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CvcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DOB'] && !(typeof data['DOB'] === 'string' || data['DOB'] instanceof String)) {
            throw new Error("Expected the field `DOB` to be a primitive type in the JSON string but got " + data['DOB']);
        }
        // ensure the json data is a string
        if (data['VCNo'] && !(typeof data['VCNo'] === 'string' || data['VCNo'] instanceof String)) {
            throw new Error("Expected the field `VCNo` to be a primitive type in the JSON string but got " + data['VCNo']);
        }

        return true;
    }


}

CvcerRequestCertificateParameters.RequiredProperties = ["DOB", "VCNo"];

/**
 * Date of birth in DD-MM-YYYY format
 * @member {String} DOB
 */
CvcerRequestCertificateParameters.prototype['DOB'] = undefined;

/**
 * VC No
 * @member {String} VCNo
 */
CvcerRequestCertificateParameters.prototype['VCNo'] = undefined;






export default CvcerRequestCertificateParameters;

