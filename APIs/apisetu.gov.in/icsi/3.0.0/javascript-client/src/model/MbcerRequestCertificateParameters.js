/**
 * Institute of Company Secretaries of India
 * Institute of Company Secretaries of India is available on DigiLocker. ID Card is available for candidates to pull into their DigiLocker account. ICSI members can also pull their ACS certificates  into their DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MbcerRequestCertificateParameters model module.
 * @module model/MbcerRequestCertificateParameters
 * @version 3.0.0
 */
class MbcerRequestCertificateParameters {
    /**
     * Constructs a new <code>MbcerRequestCertificateParameters</code>.
     * @alias module:model/MbcerRequestCertificateParameters
     * @param certType {String} Type of Certificate
     * @param fullName {String} Full name
     * @param membershipNo {String} Membership No.
     */
    constructor(certType, fullName, membershipNo) { 
        
        MbcerRequestCertificateParameters.initialize(this, certType, fullName, membershipNo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, certType, fullName, membershipNo) { 
        obj['CertType'] = certType;
        obj['FullName'] = fullName;
        obj['Membership_No'] = membershipNo;
    }

    /**
     * Constructs a <code>MbcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MbcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/MbcerRequestCertificateParameters} The populated <code>MbcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MbcerRequestCertificateParameters();

            if (data.hasOwnProperty('CertType')) {
                obj['CertType'] = ApiClient.convertToType(data['CertType'], 'String');
            }
            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('Membership_No')) {
                obj['Membership_No'] = ApiClient.convertToType(data['Membership_No'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MbcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MbcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MbcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CertType'] && !(typeof data['CertType'] === 'string' || data['CertType'] instanceof String)) {
            throw new Error("Expected the field `CertType` to be a primitive type in the JSON string but got " + data['CertType']);
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['Membership_No'] && !(typeof data['Membership_No'] === 'string' || data['Membership_No'] instanceof String)) {
            throw new Error("Expected the field `Membership_No` to be a primitive type in the JSON string but got " + data['Membership_No']);
        }

        return true;
    }


}

MbcerRequestCertificateParameters.RequiredProperties = ["CertType", "FullName", "Membership_No"];

/**
 * Type of Certificate
 * @member {String} CertType
 */
MbcerRequestCertificateParameters.prototype['CertType'] = undefined;

/**
 * Full name
 * @member {String} FullName
 */
MbcerRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Membership No.
 * @member {String} Membership_No
 */
MbcerRequestCertificateParameters.prototype['Membership_No'] = undefined;






export default MbcerRequestCertificateParameters;

