/**
 * Gauhati University
 * GAUHATI UNIVERSITY (https://www.gauhati.ac.in/) has made available Registration Certificate in DigiLocker, which can be pulled by students into their accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SocerRequestCertificateParameters model module.
 * @module model/SocerRequestCertificateParameters
 * @version 3.0.0
 */
class SocerRequestCertificateParameters {
    /**
     * Constructs a new <code>SocerRequestCertificateParameters</code>.
     * @alias module:model/SocerRequestCertificateParameters
     * @param APPL_NO {String} Application No
     * @param DOB {String} Date of birth
     * @param fullName {String} Name
     * @param SESSION {String} Session
     */
    constructor(APPL_NO, DOB, fullName, SESSION) { 
        
        SocerRequestCertificateParameters.initialize(this, APPL_NO, DOB, fullName, SESSION);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, APPL_NO, DOB, fullName, SESSION) { 
        obj['APPL_NO'] = APPL_NO;
        obj['DOB'] = DOB;
        obj['FullName'] = fullName;
        obj['SESSION'] = SESSION;
    }

    /**
     * Constructs a <code>SocerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SocerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/SocerRequestCertificateParameters} The populated <code>SocerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SocerRequestCertificateParameters();

            if (data.hasOwnProperty('APPL_NO')) {
                obj['APPL_NO'] = ApiClient.convertToType(data['APPL_NO'], 'String');
            }
            if (data.hasOwnProperty('DOB')) {
                obj['DOB'] = ApiClient.convertToType(data['DOB'], 'String');
            }
            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('SESSION')) {
                obj['SESSION'] = ApiClient.convertToType(data['SESSION'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SocerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SocerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SocerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['APPL_NO'] && !(typeof data['APPL_NO'] === 'string' || data['APPL_NO'] instanceof String)) {
            throw new Error("Expected the field `APPL_NO` to be a primitive type in the JSON string but got " + data['APPL_NO']);
        }
        // ensure the json data is a string
        if (data['DOB'] && !(typeof data['DOB'] === 'string' || data['DOB'] instanceof String)) {
            throw new Error("Expected the field `DOB` to be a primitive type in the JSON string but got " + data['DOB']);
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['SESSION'] && !(typeof data['SESSION'] === 'string' || data['SESSION'] instanceof String)) {
            throw new Error("Expected the field `SESSION` to be a primitive type in the JSON string but got " + data['SESSION']);
        }

        return true;
    }


}

SocerRequestCertificateParameters.RequiredProperties = ["APPL_NO", "DOB", "FullName", "SESSION"];

/**
 * Application No
 * @member {String} APPL_NO
 */
SocerRequestCertificateParameters.prototype['APPL_NO'] = undefined;

/**
 * Date of birth
 * @member {String} DOB
 */
SocerRequestCertificateParameters.prototype['DOB'] = undefined;

/**
 * Name
 * @member {String} FullName
 */
SocerRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Session
 * @member {String} SESSION
 */
SocerRequestCertificateParameters.prototype['SESSION'] = undefined;






export default SocerRequestCertificateParameters;

