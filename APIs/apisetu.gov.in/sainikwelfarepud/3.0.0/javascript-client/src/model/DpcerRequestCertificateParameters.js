/**
 * Department of Sainik Welfare, Puducherry
 * Department of Sainik Welfare Society (www.sainikwelfare.puducherry.gov.in) is issuing digital &#34;Dependency Certificate&#34; . These certificates are being made available through DigiLocker. These Certificates can be pulled by citizens into their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DpcerRequestCertificateParameters model module.
 * @module model/DpcerRequestCertificateParameters
 * @version 3.0.0
 */
class DpcerRequestCertificateParameters {
    /**
     * Constructs a new <code>DpcerRequestCertificateParameters</code>.
     * @alias module:model/DpcerRequestCertificateParameters
     * @param fullName {String} Full name
     * @param UID {String} Aadhaar number
     * @param certNo {String} Certificate No
     */
    constructor(fullName, UID, certNo) { 
        
        DpcerRequestCertificateParameters.initialize(this, fullName, UID, certNo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fullName, UID, certNo) { 
        obj['FullName'] = fullName;
        obj['UID'] = UID;
        obj['certNo'] = certNo;
    }

    /**
     * Constructs a <code>DpcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DpcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/DpcerRequestCertificateParameters} The populated <code>DpcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DpcerRequestCertificateParameters();

            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('UID')) {
                obj['UID'] = ApiClient.convertToType(data['UID'], 'String');
            }
            if (data.hasOwnProperty('certNo')) {
                obj['certNo'] = ApiClient.convertToType(data['certNo'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DpcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DpcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DpcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['UID'] && !(typeof data['UID'] === 'string' || data['UID'] instanceof String)) {
            throw new Error("Expected the field `UID` to be a primitive type in the JSON string but got " + data['UID']);
        }
        // ensure the json data is a string
        if (data['certNo'] && !(typeof data['certNo'] === 'string' || data['certNo'] instanceof String)) {
            throw new Error("Expected the field `certNo` to be a primitive type in the JSON string but got " + data['certNo']);
        }

        return true;
    }


}

DpcerRequestCertificateParameters.RequiredProperties = ["FullName", "UID", "certNo"];

/**
 * Full name
 * @member {String} FullName
 */
DpcerRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Aadhaar number
 * @member {String} UID
 */
DpcerRequestCertificateParameters.prototype['UID'] = undefined;

/**
 * Certificate No
 * @member {String} certNo
 */
DpcerRequestCertificateParameters.prototype['certNo'] = undefined;






export default DpcerRequestCertificateParameters;

