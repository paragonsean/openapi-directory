/**
 * Andaman Law College, Andaman & Nicobar
 * Transfer Certificate issued by Andaman Law College can be downloaded in citizen's DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Trcer502Response model module.
 * @module model/Trcer502Response
 * @version 3.0.0
 */
class Trcer502Response {
    /**
     * Constructs a new <code>Trcer502Response</code>.
     * @alias module:model/Trcer502Response
     */
    constructor() { 
        
        Trcer502Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Trcer502Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Trcer502Response} obj Optional instance to populate.
     * @return {module:model/Trcer502Response} The populated <code>Trcer502Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Trcer502Response();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('errorDescription')) {
                obj['errorDescription'] = ApiClient.convertToType(data['errorDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Trcer502Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Trcer502Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['errorDescription'] && !(typeof data['errorDescription'] === 'string' || data['errorDescription'] instanceof String)) {
            throw new Error("Expected the field `errorDescription` to be a primitive type in the JSON string but got " + data['errorDescription']);
        }

        return true;
    }


}



/**
 * @member {module:model/Trcer502Response.ErrorEnum} error
 */
Trcer502Response.prototype['error'] = undefined;

/**
 * @member {module:model/Trcer502Response.ErrorDescriptionEnum} errorDescription
 */
Trcer502Response.prototype['errorDescription'] = undefined;





/**
 * Allowed values for the <code>error</code> property.
 * @enum {String}
 * @readonly
 */
Trcer502Response['ErrorEnum'] = {

    /**
     * value: "bad_gatewy"
     * @const
     */
    "bad_gatewy": "bad_gatewy"
};


/**
 * Allowed values for the <code>errorDescription</code> property.
 * @enum {String}
 * @readonly
 */
Trcer502Response['ErrorDescriptionEnum'] = {

    /**
     * value: "Publisher service returned an invalid response"
     * @const
     */
    "Publisher service returned an invalid response": "Publisher service returned an invalid response"
};



export default Trcer502Response;

