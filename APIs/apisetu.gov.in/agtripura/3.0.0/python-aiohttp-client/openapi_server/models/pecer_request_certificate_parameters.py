# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PecerRequestCertificateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ac_no: str=None, dob: str=None):
        """PecerRequestCertificateParameters - a model defined in OpenAPI

        :param ac_no: The ac_no of this PecerRequestCertificateParameters.
        :param dob: The dob of this PecerRequestCertificateParameters.
        """
        self.openapi_types = {
            'ac_no': str,
            'dob': str
        }

        self.attribute_map = {
            'ac_no': 'AC_NO',
            'dob': 'DOB'
        }

        self._ac_no = ac_no
        self._dob = dob

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PecerRequestCertificateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The pecer_request_certificateParameters of this PecerRequestCertificateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ac_no(self):
        """Gets the ac_no of this PecerRequestCertificateParameters.

        Account No./PPO No.

        :return: The ac_no of this PecerRequestCertificateParameters.
        :rtype: str
        """
        return self._ac_no

    @ac_no.setter
    def ac_no(self, ac_no):
        """Sets the ac_no of this PecerRequestCertificateParameters.

        Account No./PPO No.

        :param ac_no: The ac_no of this PecerRequestCertificateParameters.
        :type ac_no: str
        """
        if ac_no is None:
            raise ValueError("Invalid value for `ac_no`, must not be `None`")

        self._ac_no = ac_no

    @property
    def dob(self):
        """Gets the dob of this PecerRequestCertificateParameters.

        Date of birth in DD-MM-YYYY format

        :return: The dob of this PecerRequestCertificateParameters.
        :rtype: str
        """
        return self._dob

    @dob.setter
    def dob(self, dob):
        """Sets the dob of this PecerRequestCertificateParameters.

        Date of birth in DD-MM-YYYY format

        :param dob: The dob of this PecerRequestCertificateParameters.
        :type dob: str
        """
        if dob is None:
            raise ValueError("Invalid value for `dob`, must not be `None`")

        self._dob = dob
