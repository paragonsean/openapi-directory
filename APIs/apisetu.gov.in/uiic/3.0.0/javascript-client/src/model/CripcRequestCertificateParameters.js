/**
 * United India Insurance Company Limited
 * United India Insurance Co. Ltd. is a Public Sector General Insurance Company incorporated in 1938, having its presence all over India providing risk cover to 1.74 Crore policyholders. General Insurance Policies such as Motor, Health, Personal Accident, Travel, e.t.c issued by United India Insurance Co. Ltd. (https://uiic.co.in/) are available to be downloaded by citizens of India to their DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CripcRequestCertificateParameters model module.
 * @module model/CripcRequestCertificateParameters
 * @version 3.0.0
 */
class CripcRequestCertificateParameters {
    /**
     * Constructs a new <code>CripcRequestCertificateParameters</code>.
     * @alias module:model/CripcRequestCertificateParameters
     * @param DOB {String} Date of birth in DD-MM-YYYY format
     * @param fullName {String} Full name
     * @param uDF1 {String} Policy Number
     * @param uDF2 {String} Policy Effective Date
     * @param uDF3 {String} Customer ID
     * @param UID {String} Aadhaar number
     */
    constructor(DOB, fullName, uDF1, uDF2, uDF3, UID) { 
        
        CripcRequestCertificateParameters.initialize(this, DOB, fullName, uDF1, uDF2, uDF3, UID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, DOB, fullName, uDF1, uDF2, uDF3, UID) { 
        obj['DOB'] = DOB;
        obj['FullName'] = fullName;
        obj['UDF1'] = uDF1;
        obj['UDF2'] = uDF2;
        obj['UDF3'] = uDF3;
        obj['UID'] = UID;
    }

    /**
     * Constructs a <code>CripcRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CripcRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/CripcRequestCertificateParameters} The populated <code>CripcRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CripcRequestCertificateParameters();

            if (data.hasOwnProperty('DOB')) {
                obj['DOB'] = ApiClient.convertToType(data['DOB'], 'String');
            }
            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('UDF1')) {
                obj['UDF1'] = ApiClient.convertToType(data['UDF1'], 'String');
            }
            if (data.hasOwnProperty('UDF2')) {
                obj['UDF2'] = ApiClient.convertToType(data['UDF2'], 'String');
            }
            if (data.hasOwnProperty('UDF3')) {
                obj['UDF3'] = ApiClient.convertToType(data['UDF3'], 'String');
            }
            if (data.hasOwnProperty('UID')) {
                obj['UID'] = ApiClient.convertToType(data['UID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CripcRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CripcRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CripcRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DOB'] && !(typeof data['DOB'] === 'string' || data['DOB'] instanceof String)) {
            throw new Error("Expected the field `DOB` to be a primitive type in the JSON string but got " + data['DOB']);
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['UDF1'] && !(typeof data['UDF1'] === 'string' || data['UDF1'] instanceof String)) {
            throw new Error("Expected the field `UDF1` to be a primitive type in the JSON string but got " + data['UDF1']);
        }
        // ensure the json data is a string
        if (data['UDF2'] && !(typeof data['UDF2'] === 'string' || data['UDF2'] instanceof String)) {
            throw new Error("Expected the field `UDF2` to be a primitive type in the JSON string but got " + data['UDF2']);
        }
        // ensure the json data is a string
        if (data['UDF3'] && !(typeof data['UDF3'] === 'string' || data['UDF3'] instanceof String)) {
            throw new Error("Expected the field `UDF3` to be a primitive type in the JSON string but got " + data['UDF3']);
        }
        // ensure the json data is a string
        if (data['UID'] && !(typeof data['UID'] === 'string' || data['UID'] instanceof String)) {
            throw new Error("Expected the field `UID` to be a primitive type in the JSON string but got " + data['UID']);
        }

        return true;
    }


}

CripcRequestCertificateParameters.RequiredProperties = ["DOB", "FullName", "UDF1", "UDF2", "UDF3", "UID"];

/**
 * Date of birth in DD-MM-YYYY format
 * @member {String} DOB
 */
CripcRequestCertificateParameters.prototype['DOB'] = undefined;

/**
 * Full name
 * @member {String} FullName
 */
CripcRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Policy Number
 * @member {String} UDF1
 */
CripcRequestCertificateParameters.prototype['UDF1'] = undefined;

/**
 * Policy Effective Date
 * @member {String} UDF2
 */
CripcRequestCertificateParameters.prototype['UDF2'] = undefined;

/**
 * Customer ID
 * @member {String} UDF3
 */
CripcRequestCertificateParameters.prototype['UDF3'] = undefined;

/**
 * Aadhaar number
 * @member {String} UID
 */
CripcRequestCertificateParameters.prototype['UID'] = undefined;






export default CripcRequestCertificateParameters;

