/*
 * eDistrict Kerala, Kerala
 * eDistrict Kerala (https://edistrict.kerala.gov.in/) is the online service delivery portal for Kerala State Govt. Certain documents issued by it (e.g. Residence, Income, Caste Certificates etc) are made available in citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Cmcer400Response;
import org.openapitools.client.model.Cmcer401Response;
import org.openapitools.client.model.Cmcer404Response;
import org.openapitools.client.model.Cmcer500Response;
import org.openapitools.client.model.Cmcer502Response;
import org.openapitools.client.model.Cmcer503Response;
import org.openapitools.client.model.Cmcer504Response;
import org.openapitools.client.model.CmcerRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApisApi
 */
@Disabled
public class ApisApiTest {

    private final ApisApi api = new ApisApi();

    /**
     * Community Certificate
     *
     * API to verify Community Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cmcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.cmcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Conversion Certificate
     *
     * API to verify Conversion Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cncerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.cncer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Caste Certificate
     *
     * API to verify Caste Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ctcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.ctcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Domicile Certificate
     *
     * API to verify Domicile Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dmcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.dmcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Dependency Certificate
     *
     * API to verify Dependency Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dpcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.dpcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Destitute Certificate
     *
     * API to verify Destitute Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.dscer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Family Membership Certificate
     *
     * API to verify Family Membership Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fmcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.fmcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Identification Certificate
     *
     * API to verify Identification Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void idcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.idcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Inter-Caste Marriage Certificate
     *
     * API to verify Inter-Caste Marriage Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void imcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.imcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Income Certificate
     *
     * API to verify Income Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void incerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.incer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Life Certificate
     *
     * API to verify Life Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lfcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.lfcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Legal Heir Certificate
     *
     * API to verify Legal Heir Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lhcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.lhcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Location Certificate
     *
     * API to verify Location Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void locerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.locer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Minority Certificate
     *
     * API to verify Minority Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mncerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.mncer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Non-Remarriage Certificate
     *
     * API to verify Non-Remarriage Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void nrcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.nrcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Nativity Certificate
     *
     * API to verify Nativity Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ntcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.ntcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * One and the Same Certificate
     *
     * API to verify One and the Same Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oscerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.oscer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Possession and Non-Attachment Certificate
     *
     * API to verify Possession and Non-Attachment Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pncerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.pncer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Possession Certificate
     *
     * API to verify Possession Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pscerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.pscer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Relationship Certificate
     *
     * API to verify Relationship Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rlcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.rlcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Residence Certificate
     *
     * API to verify Residence Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rscerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.rscer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Solvency Certificate
     *
     * API to verify Solvency Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void slcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.slcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Valuation Certificate
     *
     * API to verify Valuation Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vlcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.vlcer(cmcerRequest);
        // TODO: test validations
    }

    /**
     * Widow-Widower Certificate
     *
     * API to verify Widow-Widower Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wwcerTest() throws ApiException {
        CmcerRequest cmcerRequest = null;
        api.wwcer(cmcerRequest);
        // TODO: test validations
    }

}
