/**
 * Transport Department, Punjab
 * Driving License (DL) and Vehicle Registration Certificate (RC) of the State, as available on Parivahan Sewa (http://parivahan.co.in/) of Ministry of Road Transport and Highways, are available on DigiLocker. Citizens can pull these documents into their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance() {
    this->initializeModel();
}

OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::~OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance() {}

void OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::initializeModel() {

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_policy_no_isSet = false;
    m_policy_no_isValid = false;

    m_valid_till_isSet = false;
    m_valid_till_isValid = false;
}

void OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::fromJsonObject(QJsonObject json) {

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_policy_no_isValid = ::OpenAPI::fromJsonValue(m_policy_no, json[QString("policyNo")]);
    m_policy_no_isSet = !json[QString("policyNo")].isNull() && m_policy_no_isValid;

    m_valid_till_isValid = ::OpenAPI::fromJsonValue(m_valid_till, json[QString("validTill")]);
    m_valid_till_isSet = !json[QString("validTill")].isNull() && m_valid_till_isValid;
}

QString OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::asJsonObject() const {
    QJsonObject obj;
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_policy_no_isSet) {
        obj.insert(QString("policyNo"), ::OpenAPI::toJsonValue(m_policy_no));
    }
    if (m_valid_till_isSet) {
        obj.insert(QString("validTill"), ::OpenAPI::toJsonValue(m_valid_till));
    }
    return obj;
}

QString OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::getCompanyName() const {
    return m_company_name;
}
void OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::getPolicyNo() const {
    return m_policy_no;
}
void OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::setPolicyNo(const QString &policy_no) {
    m_policy_no = policy_no;
    m_policy_no_isSet = true;
}

bool OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::is_policy_no_Set() const{
    return m_policy_no_isSet;
}

bool OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::is_policy_no_Valid() const{
    return m_policy_no_isValid;
}

QString OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::getValidTill() const {
    return m_valid_till;
}
void OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::setValidTill(const QString &valid_till) {
    m_valid_till = valid_till;
    m_valid_till_isSet = true;
}

bool OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::is_valid_till_Set() const{
    return m_valid_till_isSet;
}

bool OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::is_valid_till_Valid() const{
    return m_valid_till_isValid;
}

bool OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_till_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
