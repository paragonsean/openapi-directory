/**
 * GMCH, Chandigarh
 * Government Medical College and Hospital (GMCH), Chandigarh provides patient's clinical laboratory reports to DigiLocker.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LabrpRequestCertificateParameters model module.
 * @module model/LabrpRequestCertificateParameters
 * @version 3.0.0
 */
class LabrpRequestCertificateParameters {
    /**
     * Constructs a new <code>LabrpRequestCertificateParameters</code>.
     * @alias module:model/LabrpRequestCertificateParameters
     * @param fullName {String} Full name
     * @param reportdate {String} Report Date in DDMMYYYY format
     * @param uhid {String} UHID/Health ID
     */
    constructor(fullName, reportdate, uhid) { 
        
        LabrpRequestCertificateParameters.initialize(this, fullName, reportdate, uhid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fullName, reportdate, uhid) { 
        obj['FullName'] = fullName;
        obj['reportdate'] = reportdate;
        obj['uhid'] = uhid;
    }

    /**
     * Constructs a <code>LabrpRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LabrpRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/LabrpRequestCertificateParameters} The populated <code>LabrpRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LabrpRequestCertificateParameters();

            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('reportdate')) {
                obj['reportdate'] = ApiClient.convertToType(data['reportdate'], 'String');
            }
            if (data.hasOwnProperty('uhid')) {
                obj['uhid'] = ApiClient.convertToType(data['uhid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LabrpRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LabrpRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LabrpRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['reportdate'] && !(typeof data['reportdate'] === 'string' || data['reportdate'] instanceof String)) {
            throw new Error("Expected the field `reportdate` to be a primitive type in the JSON string but got " + data['reportdate']);
        }
        // ensure the json data is a string
        if (data['uhid'] && !(typeof data['uhid'] === 'string' || data['uhid'] instanceof String)) {
            throw new Error("Expected the field `uhid` to be a primitive type in the JSON string but got " + data['uhid']);
        }

        return true;
    }


}

LabrpRequestCertificateParameters.RequiredProperties = ["FullName", "reportdate", "uhid"];

/**
 * Full name
 * @member {String} FullName
 */
LabrpRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Report Date in DDMMYYYY format
 * @member {String} reportdate
 */
LabrpRequestCertificateParameters.prototype['reportdate'] = undefined;

/**
 * UHID/Health ID
 * @member {String} uhid
 */
LabrpRequestCertificateParameters.prototype['uhid'] = undefined;






export default LabrpRequestCertificateParameters;

