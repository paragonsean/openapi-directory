# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SkmstRequestCertificateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, txt10th_roll_no: str=None, txt_candidate_app_seq: str=None, txt_exam_date: str=None):
        """SkmstRequestCertificateParameters - a model defined in OpenAPI

        :param txt10th_roll_no: The txt10th_roll_no of this SkmstRequestCertificateParameters.
        :param txt_candidate_app_seq: The txt_candidate_app_seq of this SkmstRequestCertificateParameters.
        :param txt_exam_date: The txt_exam_date of this SkmstRequestCertificateParameters.
        """
        self.openapi_types = {
            'txt10th_roll_no': str,
            'txt_candidate_app_seq': str,
            'txt_exam_date': str
        }

        self.attribute_map = {
            'txt10th_roll_no': 'txt10thRollNo',
            'txt_candidate_app_seq': 'txtCandidateAppSeq',
            'txt_exam_date': 'txtExamDate'
        }

        self._txt10th_roll_no = txt10th_roll_no
        self._txt_candidate_app_seq = txt_candidate_app_seq
        self._txt_exam_date = txt_exam_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkmstRequestCertificateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The skmst_request_certificateParameters of this SkmstRequestCertificateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def txt10th_roll_no(self):
        """Gets the txt10th_roll_no of this SkmstRequestCertificateParameters.

        10thRollNumber

        :return: The txt10th_roll_no of this SkmstRequestCertificateParameters.
        :rtype: str
        """
        return self._txt10th_roll_no

    @txt10th_roll_no.setter
    def txt10th_roll_no(self, txt10th_roll_no):
        """Sets the txt10th_roll_no of this SkmstRequestCertificateParameters.

        10thRollNumber

        :param txt10th_roll_no: The txt10th_roll_no of this SkmstRequestCertificateParameters.
        :type txt10th_roll_no: str
        """
        if txt10th_roll_no is None:
            raise ValueError("Invalid value for `txt10th_roll_no`, must not be `None`")

        self._txt10th_roll_no = txt10th_roll_no

    @property
    def txt_candidate_app_seq(self):
        """Gets the txt_candidate_app_seq of this SkmstRequestCertificateParameters.

        Registration Number

        :return: The txt_candidate_app_seq of this SkmstRequestCertificateParameters.
        :rtype: str
        """
        return self._txt_candidate_app_seq

    @txt_candidate_app_seq.setter
    def txt_candidate_app_seq(self, txt_candidate_app_seq):
        """Sets the txt_candidate_app_seq of this SkmstRequestCertificateParameters.

        Registration Number

        :param txt_candidate_app_seq: The txt_candidate_app_seq of this SkmstRequestCertificateParameters.
        :type txt_candidate_app_seq: str
        """
        if txt_candidate_app_seq is None:
            raise ValueError("Invalid value for `txt_candidate_app_seq`, must not be `None`")

        self._txt_candidate_app_seq = txt_candidate_app_seq

    @property
    def txt_exam_date(self):
        """Gets the txt_exam_date of this SkmstRequestCertificateParameters.

        ExamDate

        :return: The txt_exam_date of this SkmstRequestCertificateParameters.
        :rtype: str
        """
        return self._txt_exam_date

    @txt_exam_date.setter
    def txt_exam_date(self, txt_exam_date):
        """Sets the txt_exam_date of this SkmstRequestCertificateParameters.

        ExamDate

        :param txt_exam_date: The txt_exam_date of this SkmstRequestCertificateParameters.
        :type txt_exam_date: str
        """
        if txt_exam_date is None:
            raise ValueError("Invalid value for `txt_exam_date`, must not be `None`")

        self._txt_exam_date = txt_exam_date
