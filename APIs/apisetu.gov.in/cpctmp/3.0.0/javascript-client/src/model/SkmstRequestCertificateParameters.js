/**
 * CPCT-MAPIT, Madhya Pradesh
 * Computer Proficiency Certification Exam (https://cpct.mp.gov.in) is mandatory for data entry/IT Operator/Assistant Grade-3/steno/shorthand/typist and other similar Permanent/Contractual positions in the departments, corporations and agencies in MP. The CPCT Score Card of 2016 can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SkmstRequestCertificateParameters model module.
 * @module model/SkmstRequestCertificateParameters
 * @version 3.0.0
 */
class SkmstRequestCertificateParameters {
    /**
     * Constructs a new <code>SkmstRequestCertificateParameters</code>.
     * @alias module:model/SkmstRequestCertificateParameters
     * @param txt10thRollNo {String} 10thRollNumber
     * @param txtCandidateAppSeq {String} Registration Number
     * @param txtExamDate {String} ExamDate
     */
    constructor(txt10thRollNo, txtCandidateAppSeq, txtExamDate) { 
        
        SkmstRequestCertificateParameters.initialize(this, txt10thRollNo, txtCandidateAppSeq, txtExamDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, txt10thRollNo, txtCandidateAppSeq, txtExamDate) { 
        obj['txt10thRollNo'] = txt10thRollNo;
        obj['txtCandidateAppSeq'] = txtCandidateAppSeq;
        obj['txtExamDate'] = txtExamDate;
    }

    /**
     * Constructs a <code>SkmstRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SkmstRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/SkmstRequestCertificateParameters} The populated <code>SkmstRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SkmstRequestCertificateParameters();

            if (data.hasOwnProperty('txt10thRollNo')) {
                obj['txt10thRollNo'] = ApiClient.convertToType(data['txt10thRollNo'], 'String');
            }
            if (data.hasOwnProperty('txtCandidateAppSeq')) {
                obj['txtCandidateAppSeq'] = ApiClient.convertToType(data['txtCandidateAppSeq'], 'String');
            }
            if (data.hasOwnProperty('txtExamDate')) {
                obj['txtExamDate'] = ApiClient.convertToType(data['txtExamDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SkmstRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SkmstRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SkmstRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['txt10thRollNo'] && !(typeof data['txt10thRollNo'] === 'string' || data['txt10thRollNo'] instanceof String)) {
            throw new Error("Expected the field `txt10thRollNo` to be a primitive type in the JSON string but got " + data['txt10thRollNo']);
        }
        // ensure the json data is a string
        if (data['txtCandidateAppSeq'] && !(typeof data['txtCandidateAppSeq'] === 'string' || data['txtCandidateAppSeq'] instanceof String)) {
            throw new Error("Expected the field `txtCandidateAppSeq` to be a primitive type in the JSON string but got " + data['txtCandidateAppSeq']);
        }
        // ensure the json data is a string
        if (data['txtExamDate'] && !(typeof data['txtExamDate'] === 'string' || data['txtExamDate'] instanceof String)) {
            throw new Error("Expected the field `txtExamDate` to be a primitive type in the JSON string but got " + data['txtExamDate']);
        }

        return true;
    }


}

SkmstRequestCertificateParameters.RequiredProperties = ["txt10thRollNo", "txtCandidateAppSeq", "txtExamDate"];

/**
 * 10thRollNumber
 * @member {String} txt10thRollNo
 */
SkmstRequestCertificateParameters.prototype['txt10thRollNo'] = undefined;

/**
 * Registration Number
 * @member {String} txtCandidateAppSeq
 */
SkmstRequestCertificateParameters.prototype['txtCandidateAppSeq'] = undefined;

/**
 * ExamDate
 * @member {String} txtExamDate
 */
SkmstRequestCertificateParameters.prototype['txtExamDate'] = undefined;






export default SkmstRequestCertificateParameters;

