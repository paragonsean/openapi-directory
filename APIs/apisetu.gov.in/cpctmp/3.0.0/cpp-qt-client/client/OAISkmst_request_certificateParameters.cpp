/**
 * CPCT-MAPIT, Madhya Pradesh
 * Computer Proficiency Certification Exam (https://cpct.mp.gov.in) is mandatory for data entry/IT Operator/Assistant Grade-3/steno/shorthand/typist and other similar Permanent/Contractual positions in the departments, corporations and agencies in MP. The CPCT Score Card of 2016 can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISkmst_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISkmst_request_certificateParameters::OAISkmst_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISkmst_request_certificateParameters::OAISkmst_request_certificateParameters() {
    this->initializeModel();
}

OAISkmst_request_certificateParameters::~OAISkmst_request_certificateParameters() {}

void OAISkmst_request_certificateParameters::initializeModel() {

    m_txt10th_roll_no_isSet = false;
    m_txt10th_roll_no_isValid = false;

    m_txt_candidate_app_seq_isSet = false;
    m_txt_candidate_app_seq_isValid = false;

    m_txt_exam_date_isSet = false;
    m_txt_exam_date_isValid = false;
}

void OAISkmst_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISkmst_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_txt10th_roll_no_isValid = ::OpenAPI::fromJsonValue(m_txt10th_roll_no, json[QString("txt10thRollNo")]);
    m_txt10th_roll_no_isSet = !json[QString("txt10thRollNo")].isNull() && m_txt10th_roll_no_isValid;

    m_txt_candidate_app_seq_isValid = ::OpenAPI::fromJsonValue(m_txt_candidate_app_seq, json[QString("txtCandidateAppSeq")]);
    m_txt_candidate_app_seq_isSet = !json[QString("txtCandidateAppSeq")].isNull() && m_txt_candidate_app_seq_isValid;

    m_txt_exam_date_isValid = ::OpenAPI::fromJsonValue(m_txt_exam_date, json[QString("txtExamDate")]);
    m_txt_exam_date_isSet = !json[QString("txtExamDate")].isNull() && m_txt_exam_date_isValid;
}

QString OAISkmst_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISkmst_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_txt10th_roll_no_isSet) {
        obj.insert(QString("txt10thRollNo"), ::OpenAPI::toJsonValue(m_txt10th_roll_no));
    }
    if (m_txt_candidate_app_seq_isSet) {
        obj.insert(QString("txtCandidateAppSeq"), ::OpenAPI::toJsonValue(m_txt_candidate_app_seq));
    }
    if (m_txt_exam_date_isSet) {
        obj.insert(QString("txtExamDate"), ::OpenAPI::toJsonValue(m_txt_exam_date));
    }
    return obj;
}

QString OAISkmst_request_certificateParameters::getTxt10thRollNo() const {
    return m_txt10th_roll_no;
}
void OAISkmst_request_certificateParameters::setTxt10thRollNo(const QString &txt10th_roll_no) {
    m_txt10th_roll_no = txt10th_roll_no;
    m_txt10th_roll_no_isSet = true;
}

bool OAISkmst_request_certificateParameters::is_txt10th_roll_no_Set() const{
    return m_txt10th_roll_no_isSet;
}

bool OAISkmst_request_certificateParameters::is_txt10th_roll_no_Valid() const{
    return m_txt10th_roll_no_isValid;
}

QString OAISkmst_request_certificateParameters::getTxtCandidateAppSeq() const {
    return m_txt_candidate_app_seq;
}
void OAISkmst_request_certificateParameters::setTxtCandidateAppSeq(const QString &txt_candidate_app_seq) {
    m_txt_candidate_app_seq = txt_candidate_app_seq;
    m_txt_candidate_app_seq_isSet = true;
}

bool OAISkmst_request_certificateParameters::is_txt_candidate_app_seq_Set() const{
    return m_txt_candidate_app_seq_isSet;
}

bool OAISkmst_request_certificateParameters::is_txt_candidate_app_seq_Valid() const{
    return m_txt_candidate_app_seq_isValid;
}

QString OAISkmst_request_certificateParameters::getTxtExamDate() const {
    return m_txt_exam_date;
}
void OAISkmst_request_certificateParameters::setTxtExamDate(const QString &txt_exam_date) {
    m_txt_exam_date = txt_exam_date;
    m_txt_exam_date_isSet = true;
}

bool OAISkmst_request_certificateParameters::is_txt_exam_date_Set() const{
    return m_txt_exam_date_isSet;
}

bool OAISkmst_request_certificateParameters::is_txt_exam_date_Valid() const{
    return m_txt_exam_date_isValid;
}

bool OAISkmst_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_txt10th_roll_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txt_candidate_app_seq_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txt_exam_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISkmst_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_txt10th_roll_no_isValid && m_txt_candidate_app_seq_isValid && m_txt_exam_date_isValid && true;
}

} // namespace OpenAPI
