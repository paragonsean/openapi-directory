/**
 * Public Health Engineering Department, Haryana, Haryana
 * APIs provided by Public Health Engineering Department, Haryana, Haryana.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISicer_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISicer_request_certificateParameters::OAISicer_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISicer_request_certificateParameters::OAISicer_request_certificateParameters() {
    this->initializeModel();
}

OAISicer_request_certificateParameters::~OAISicer_request_certificateParameters() {}

void OAISicer_request_certificateParameters::initializeModel() {

    m__name_isSet = false;
    m__name_isValid = false;

    m_consumer_id_isSet = false;
    m_consumer_id_isValid = false;
}

void OAISicer_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISicer_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m__name_isValid = ::OpenAPI::fromJsonValue(m__name, json[QString("_name")]);
    m__name_isSet = !json[QString("_name")].isNull() && m__name_isValid;

    m_consumer_id_isValid = ::OpenAPI::fromJsonValue(m_consumer_id, json[QString("consumer_id")]);
    m_consumer_id_isSet = !json[QString("consumer_id")].isNull() && m_consumer_id_isValid;
}

QString OAISicer_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISicer_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m__name_isSet) {
        obj.insert(QString("_name"), ::OpenAPI::toJsonValue(m__name));
    }
    if (m_consumer_id_isSet) {
        obj.insert(QString("consumer_id"), ::OpenAPI::toJsonValue(m_consumer_id));
    }
    return obj;
}

QString OAISicer_request_certificateParameters::getName() const {
    return m__name;
}
void OAISicer_request_certificateParameters::setName(const QString &_name) {
    m__name = _name;
    m__name_isSet = true;
}

bool OAISicer_request_certificateParameters::is__name_Set() const{
    return m__name_isSet;
}

bool OAISicer_request_certificateParameters::is__name_Valid() const{
    return m__name_isValid;
}

QString OAISicer_request_certificateParameters::getConsumerId() const {
    return m_consumer_id;
}
void OAISicer_request_certificateParameters::setConsumerId(const QString &consumer_id) {
    m_consumer_id = consumer_id;
    m_consumer_id_isSet = true;
}

bool OAISicer_request_certificateParameters::is_consumer_id_Set() const{
    return m_consumer_id_isSet;
}

bool OAISicer_request_certificateParameters::is_consumer_id_Valid() const{
    return m_consumer_id_isValid;
}

bool OAISicer_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_consumer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISicer_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m__name_isValid && m_consumer_id_isValid && true;
}

} // namespace OpenAPI
