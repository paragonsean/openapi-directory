# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GovidRequestCertificateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uniqueid: str=None):
        """GovidRequestCertificateParameters - a model defined in OpenAPI

        :param uniqueid: The uniqueid of this GovidRequestCertificateParameters.
        """
        self.openapi_types = {
            'uniqueid': str
        }

        self.attribute_map = {
            'uniqueid': '_uniqueid'
        }

        self._uniqueid = uniqueid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GovidRequestCertificateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The govid_request_certificateParameters of this GovidRequestCertificateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uniqueid(self):
        """Gets the uniqueid of this GovidRequestCertificateParameters.

        Unique Code

        :return: The uniqueid of this GovidRequestCertificateParameters.
        :rtype: str
        """
        return self._uniqueid

    @uniqueid.setter
    def uniqueid(self, uniqueid):
        """Sets the uniqueid of this GovidRequestCertificateParameters.

        Unique Code

        :param uniqueid: The uniqueid of this GovidRequestCertificateParameters.
        :type uniqueid: str
        """
        if uniqueid is None:
            raise ValueError("Invalid value for `uniqueid`, must not be `None`")

        self._uniqueid = uniqueid
