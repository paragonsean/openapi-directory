/**
 * Public Health Engineering Department, Haryana, Haryana
 * APIs provided by Public Health Engineering Department, Haryana, Haryana.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SicerRequestCertificateParameters model module.
 * @module model/SicerRequestCertificateParameters
 * @version 3.0.0
 */
class SicerRequestCertificateParameters {
    /**
     * Constructs a new <code>SicerRequestCertificateParameters</code>.
     * @alias module:model/SicerRequestCertificateParameters
     * @param name {String} Name
     * @param consumerId {String} Consumer ID
     */
    constructor(name, consumerId) { 
        
        SicerRequestCertificateParameters.initialize(this, name, consumerId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, consumerId) { 
        obj['_name'] = name;
        obj['consumer_id'] = consumerId;
    }

    /**
     * Constructs a <code>SicerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SicerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/SicerRequestCertificateParameters} The populated <code>SicerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SicerRequestCertificateParameters();

            if (data.hasOwnProperty('_name')) {
                obj['_name'] = ApiClient.convertToType(data['_name'], 'String');
            }
            if (data.hasOwnProperty('consumer_id')) {
                obj['consumer_id'] = ApiClient.convertToType(data['consumer_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SicerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SicerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SicerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['_name'] && !(typeof data['_name'] === 'string' || data['_name'] instanceof String)) {
            throw new Error("Expected the field `_name` to be a primitive type in the JSON string but got " + data['_name']);
        }
        // ensure the json data is a string
        if (data['consumer_id'] && !(typeof data['consumer_id'] === 'string' || data['consumer_id'] instanceof String)) {
            throw new Error("Expected the field `consumer_id` to be a primitive type in the JSON string but got " + data['consumer_id']);
        }

        return true;
    }


}

SicerRequestCertificateParameters.RequiredProperties = ["_name", "consumer_id"];

/**
 * Name
 * @member {String} _name
 */
SicerRequestCertificateParameters.prototype['_name'] = undefined;

/**
 * Consumer ID
 * @member {String} consumer_id
 */
SicerRequestCertificateParameters.prototype['consumer_id'] = undefined;






export default SicerRequestCertificateParameters;

