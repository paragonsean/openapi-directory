/**
 * Public Health Engineering Department, Haryana, Haryana
 * APIs provided by Public Health Engineering Department, Haryana, Haryana.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Etcer400Response from '../model/Etcer400Response';
import Etcer401Response from '../model/Etcer401Response';
import Etcer404Response from '../model/Etcer404Response';
import Etcer500Response from '../model/Etcer500Response';
import Etcer502Response from '../model/Etcer502Response';
import Etcer503Response from '../model/Etcer503Response';
import Etcer504Response from '../model/Etcer504Response';
import EtcerRequest from '../model/EtcerRequest';
import GovidRequest from '../model/GovidRequest';
import SicerRequest from '../model/SicerRequest';

/**
* APIs service.
* @module api/APIsApi
* @version 3.0.0
*/
export default class APIsApi {

    /**
    * Constructs a new APIsApi. 
    * @alias module:api/APIsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the etcer operation.
     * @callback module:api/APIsApi~etcerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enlistment Certificate
     * API to verify Enlistment Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/EtcerRequest} [etcerRequest] Request format
     * @param {module:api/APIsApi~etcerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    etcer(opts, callback) {
      opts = opts || {};
      let postBody = opts['etcerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/etcer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the govid operation.
     * @callback module:api/APIsApi~govidCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ID Card
     * API to verify ID Card.
     * @param {Object} opts Optional parameters
     * @param {module:model/GovidRequest} [govidRequest] Request format
     * @param {module:api/APIsApi~govidCallback} callback The callback function, accepting three arguments: error, data, response
     */
    govid(opts, callback) {
      opts = opts || {};
      let postBody = opts['govidRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/govid/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sicer operation.
     * @callback module:api/APIsApi~sicerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sanction Letter/ Certificate
     * API to verify Sanction Letter/ Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/SicerRequest} [sicerRequest] Request format
     * @param {module:api/APIsApi~sicerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sicer(opts, callback) {
      opts = opts || {};
      let postBody = opts['sicerRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/sicer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
