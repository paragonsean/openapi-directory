openapi: 3.0.0
info:
  description: "APIs provided by Public Health Engineering Department, Haryana, Haryana."
  termsOfService: https://apisetu.gov.in/terms.php
  title: "Public Health Engineering Department, Haryana, Haryana"
  version: 3.0.0
  x-apisguru-categories:
  - open_data
  x-origin:
  - format: openapi
    url: https://apisetu.gov.in/api_specification_v8/phedharyana.yaml
    version: "3.0"
  x-providerName: apisetu.gov.in
  x-serviceName: phedharyana
servers:
- url: https://apisetu.gov.in/phedharyana/v3
paths:
  /etcer/certificate:
    post:
      description: API to verify Enlistment Certificate.
      operationId: etcer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/etcer_request'
        description: Request format
      responses:
        "200":
          content:
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
          description: "The certificate data in response body in PDF, XML or JSON\
            \ format as requested in format parameter."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_400_response'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_401_response'
          description: Unauthorized access
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_404_response'
          description: No record found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_500_response'
          description: Internal server error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_502_response'
          description: Bad gateway
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_503_response'
          description: Service unavailable
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_504_response'
          description: Gateway timeout
      security:
      - apiKey: []
        clientId: []
      summary: Enlistment Certificate
      tags:
      - APIs
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/pdf
  /govid/certificate:
    post:
      description: API to verify ID Card.
      operationId: govid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/govid_request'
        description: Request format
      responses:
        "200":
          content:
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
          description: "The certificate data in response body in PDF, XML or JSON\
            \ format as requested in format parameter."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_400_response'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_401_response'
          description: Unauthorized access
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_404_response'
          description: No record found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_500_response'
          description: Internal server error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_502_response'
          description: Bad gateway
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_503_response'
          description: Service unavailable
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_504_response'
          description: Gateway timeout
      security:
      - apiKey: []
        clientId: []
      summary: ID Card
      tags:
      - APIs
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/pdf
  /sicer/certificate:
    post:
      description: API to verify Sanction Letter/ Certificate.
      operationId: sicer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sicer_request'
        description: Request format
      responses:
        "200":
          content:
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
          description: "The certificate data in response body in PDF, XML or JSON\
            \ format as requested in format parameter."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_400_response'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_401_response'
          description: Unauthorized access
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_404_response'
          description: No record found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_500_response'
          description: Internal server error
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_502_response'
          description: Bad gateway
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_503_response'
          description: Service unavailable
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/etcer_504_response'
          description: Gateway timeout
      security:
      - apiKey: []
        clientId: []
      summary: Sanction Letter/ Certificate
      tags:
      - APIs
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/pdf
components:
  responses:
    "400Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/etcer_400_response'
      description: Bad request
    "401Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/etcer_401_response'
      description: Unauthorized access
    "404Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/etcer_404_response'
      description: No record found
    "500Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/etcer_500_response'
      description: Internal server error
    "502Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/etcer_502_response'
      description: Bad gateway
    "503Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/etcer_503_response'
      description: Service unavailable
    "504Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/etcer_504_response'
      description: Gateway timeout
  schemas:
    AcademicCertificateSchema:
      properties:
        CertificateData:
          $ref: '#/components/schemas/AcademicCertificateSchema_CertificateData'
        IssuedBy:
          $ref: '#/components/schemas/AcademicCertificateSchema_IssuedBy'
        IssuedTo:
          $ref: '#/components/schemas/AcademicCertificateSchema_IssuedTo'
        issueDate:
          example: ' '
          type: string
          xml:
            attribute: true
        issuedAt:
          example: ""
          type: string
          xml:
            attribute: true
        language:
          example: "99"
          minLength: 1
          type: string
          xml:
            attribute: true
        name:
          example: Secondary School Certificate
          minLength: 1
          type: string
          xml:
            attribute: true
        number:
          example: 1100044
          minLength: 1
          type: integer
          xml:
            attribute: true
        status:
          example: A
          minLength: 1
          type: string
          xml:
            attribute: true
        type:
          example: SSCER
          type: string
          xml:
            attribute: true
        validFromDate:
          example: ' '
          type: string
          xml:
            attribute: true
      required:
      - CertificateData
      - IssuedBy
      - IssuedTo
      - issueDate
      - issuedAt
      - language
      - name
      - number
      - status
      - type
      - validFromDate
      type: object
      xml:
        name: Certificate
    ConsentArtifactSchema:
      properties:
        consent:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent'
        signature:
          $ref: '#/components/schemas/ConsentArtifactSchema_signature'
      required:
      - consent
      - signature
    etcer_request_certificateParameters:
      properties:
        _unique_code:
          description: Unique Code
          example: 7L017C
          type: string
      required:
      - _unique_code
      type: object
    etcer_request:
      properties:
        certificateParameters:
          $ref: '#/components/schemas/etcer_request_certificateParameters'
        consentArtifact:
          $ref: '#/components/schemas/ConsentArtifactSchema'
        format:
          description: The format of the certificate in response.
          enum:
          - pdf
          type: string
        txnId:
          description: A unique transaction id for this request in UUID format. It
            is used for tracking the request.
          example: f7f1469c-29b0-4325-9dfc-c567200a70f7
          format: uuid
          type: string
      required:
      - format
      - txnId
      type: object
    etcer_400_response:
      example:
        errorDescription: Please provide all mandatory parameters
        error: missing_parameter
      properties:
        error:
          enum:
          - missing_parameter
          - invalid_parameter
          - invalid_format
          - invalid_txnid
          - invalid_consentid
          type: string
        errorDescription:
          enum:
          - Please provide all mandatory parameters
          - Bad request
          - The format parameter is invalid
          - The txnId parameter must be in UUID format
          - The consentId parameter must be in UUID format
          type: string
      type: object
    etcer_401_response:
      example:
        errorDescription: Authentication failed
        error: invalid_authentication
      properties:
        error:
          enum:
          - invalid_authentication
          - invalid_authorization
          type: string
        errorDescription:
          enum:
          - Authentication failed
          - You are not authorized to use this API
          type: string
      type: object
    etcer_404_response:
      example:
        errorDescription: No record found
        error: record_not_found
      properties:
        error:
          enum:
          - record_not_found
          - url_not_found
          type: string
        errorDescription:
          enum:
          - No record found
          - Your API url or path is incorrect
          type: string
      type: object
    etcer_500_response:
      example:
        errorDescription: Internal server error
        error: internal_server_error
      properties:
        error:
          enum:
          - internal_server_error
          type: string
        errorDescription:
          enum:
          - Internal server error
          type: string
      type: object
    etcer_502_response:
      example:
        errorDescription: Publisher service returned an invalid response
        error: bad_gatewy
      properties:
        error:
          enum:
          - bad_gatewy
          type: string
        errorDescription:
          enum:
          - Publisher service returned an invalid response
          type: string
      type: object
    etcer_503_response:
      example:
        errorDescription: Publisher service is temporarily unavailable
        error: service_unavailable
      properties:
        error:
          enum:
          - service_unavailable
          type: string
        errorDescription:
          enum:
          - Publisher service is temporarily unavailable
          type: string
      type: object
    etcer_504_response:
      example:
        errorDescription: Publisher service did not respond in time
        error: gateway_timeout
      properties:
        error:
          enum:
          - gateway_timeout
          type: string
        errorDescription:
          enum:
          - Publisher service did not respond in time
          type: string
      type: object
    govid_request_certificateParameters:
      properties:
        _uniqueid:
          description: Unique Code
          example: JANNAR
          type: string
      required:
      - _uniqueid
      type: object
    govid_request:
      properties:
        certificateParameters:
          $ref: '#/components/schemas/govid_request_certificateParameters'
        consentArtifact:
          $ref: '#/components/schemas/ConsentArtifactSchema'
        format:
          description: The format of the certificate in response.
          enum:
          - pdf
          type: string
        txnId:
          description: A unique transaction id for this request in UUID format. It
            is used for tracking the request.
          example: f7f1469c-29b0-4325-9dfc-c567200a70f7
          format: uuid
          type: string
      required:
      - format
      - txnId
      type: object
    sicer_request_certificateParameters:
      properties:
        _name:
          description: Name
          example: Arjun Dev
          type: string
        consumer_id:
          description: Consumer ID
          example: "441947"
          type: string
      required:
      - _name
      - consumer_id
      type: object
    sicer_request:
      properties:
        certificateParameters:
          $ref: '#/components/schemas/sicer_request_certificateParameters'
        consentArtifact:
          $ref: '#/components/schemas/ConsentArtifactSchema'
        format:
          description: The format of the certificate in response.
          enum:
          - pdf
          type: string
        txnId:
          description: A unique transaction id for this request in UUID format. It
            is used for tracking the request.
          example: f7f1469c-29b0-4325-9dfc-c567200a70f7
          format: uuid
          type: string
      required:
      - format
      - txnId
      type: object
    AcademicCertificateSchema_CertificateData_Examination:
      properties:
        month:
          example: MARCH
          minLength: 1
          type: string
          xml:
            attribute: true
        name:
          example: SENION SCHOOL CERTIFICATE EXAMINATION
          minLength: 1
          type: string
          xml:
            attribute: true
        year:
          example: "2019"
          minLength: 1
          type: string
          xml:
            attribute: true
      required:
      - month
      - name
      - year
      type: object
    AcademicCertificateSchema_CertificateData_Performance_Subjects_inner:
      properties:
        code:
          example: "30"
          minLength: 1
          type: string
          xml:
            attribute: true
        gp:
          example: ""
          type: string
          xml:
            attribute: true
        gpMax:
          example: ""
          type: string
          xml:
            attribute: true
        grade:
          example: A2
          minLength: 1
          type: string
          xml:
            attribute: true
        marksMax:
          type: integer
          xml:
            attribute: true
        marksMaxPractical:
          type: integer
          xml:
            attribute: true
        marksMaxTheory:
          type: integer
          xml:
            attribute: true
        marksPractical:
          example: 17
          type: integer
          xml:
            attribute: true
        marksTheory:
          example: 70
          minLength: 1
          type: integer
          xml:
            attribute: true
        marksTotal:
          example: 87
          minLength: 1
          type: integer
          xml:
            attribute: true
        name:
          example: ECONOMICS
          minLength: 1
          type: string
          xml:
            attribute: true
      required:
      - code
      - gp
      - gpMax
      - grade
      - marksMax
      - marksMaxPractical
      - marksMaxTheory
      - marksPractical
      - marksTheory
      - marksTotal
      - name
      type: object
      xml:
        name: Subject
    AcademicCertificateSchema_CertificateData_Performance:
      properties:
        Subjects:
          items:
            $ref: '#/components/schemas/AcademicCertificateSchema_CertificateData_Performance_Subjects_inner'
          type: array
          xml:
            name: Subjects
            wrapped: true
        cgpa:
          example: ""
          type: string
          xml:
            attribute: true
        cgpaMax:
          example: ""
          type: string
          xml:
            attribute: true
        grade:
          example: ""
          type: string
          xml:
            attribute: true
        marksMax:
          example: ""
          type: string
          xml:
            attribute: true
        marksTotal:
          example: ""
          type: string
          xml:
            attribute: true
        percentage:
          example: ""
          type: string
          xml:
            attribute: true
        result:
          example: PASS
          minLength: 1
          type: string
          xml:
            attribute: true
        resultDate:
          example: 02-05-2019
          minLength: 1
          type: string
          xml:
            attribute: true
        updateDate:
          example: ""
          type: string
          xml:
            attribute: true
      required:
      - Subjects
      - cgpa
      - cgpaMax
      - grade
      - marksMax
      - marksTotal
      - percentage
      - result
      - resultDate
      - updateDate
      type: object
    AcademicCertificateSchema_CertificateData_School:
      properties:
        code:
          example: "20020"
          minLength: 1
          type: string
          xml:
            attribute: true
        name:
          example: DELHI PUBLIC SCHOOL GURGAON
          minLength: 1
          type: string
          xml:
            attribute: true
      required:
      - code
      - name
      type: object
    AcademicCertificateSchema_CertificateData:
      properties:
        Examination:
          $ref: '#/components/schemas/AcademicCertificateSchema_CertificateData_Examination'
        Performance:
          $ref: '#/components/schemas/AcademicCertificateSchema_CertificateData_Performance'
        School:
          $ref: '#/components/schemas/AcademicCertificateSchema_CertificateData_School'
      required:
      - Examination
      - Performance
      - School
      type: object
    AcademicCertificateSchema_IssuedBy_Organization_Address:
      properties:
        country:
          example: IN
          minLength: 1
          type: string
          xml:
            attribute: true
        district:
          example: ""
          type: string
          xml:
            attribute: true
        house:
          example: ""
          type: string
          xml:
            attribute: true
        landmark:
          example: ""
          type: string
          xml:
            attribute: true
        line1:
          example: ""
          type: string
          xml:
            attribute: true
        line2:
          example: ""
          type: string
          xml:
            attribute: true
        locality:
          example: ""
          type: string
          xml:
            attribute: true
        pin:
          example: ""
          type: string
          xml:
            attribute: true
        state:
          example: ""
          type: string
          xml:
            attribute: true
        type:
          example: ""
          type: string
          xml:
            attribute: true
        vtc:
          example: ""
          type: string
          xml:
            attribute: true
      required:
      - country
      - district
      - house
      - landmark
      - line1
      - line2
      - locality
      - pin
      - state
      - type
      - vtc
      type: object
    AcademicCertificateSchema_IssuedBy_Organization:
      properties:
        Address:
          $ref: '#/components/schemas/AcademicCertificateSchema_IssuedBy_Organization_Address'
        code:
          example: ""
          type: string
          xml:
            attribute: true
        name:
          example: Central Board of Secondary Education
          minLength: 1
          type: string
          xml:
            attribute: true
        tin:
          example: ""
          type: string
          xml:
            attribute: true
        type:
          example: CG
          minLength: 1
          type: string
          xml:
            attribute: true
        uid:
          example: ""
          type: string
          xml:
            attribute: true
      required:
      - Address
      - code
      - name
      - tin
      - type
      - uid
      type: object
    AcademicCertificateSchema_IssuedBy:
      properties:
        Organization:
          $ref: '#/components/schemas/AcademicCertificateSchema_IssuedBy_Organization'
      required:
      - Organization
      type: object
    AcademicCertificateSchema_IssuedTo_Person_Address:
      properties:
        country:
          example: IN
          minLength: 1
          type: string
          xml:
            attribute: true
        district:
          example: ""
          type: string
          xml:
            attribute: true
        house:
          example: ""
          type: string
          xml:
            attribute: true
        landmark:
          type: string
          xml:
            attribute: true
          example: null
        line1:
          example: ""
          type: string
          xml:
            attribute: true
        line2:
          example: ""
          type: string
          xml:
            attribute: true
        locality:
          example: ""
          type: string
          xml:
            attribute: true
        pin:
          example: ""
          type: string
          xml:
            attribute: true
        state:
          example: ""
          type: string
          xml:
            attribute: true
        type:
          example: permanent
          minLength: 1
          type: string
        vtc:
          example: ""
          type: string
          xml:
            attribute: true
      required:
      - country
      - district
      - house
      - landmark
      - line1
      - line2
      - locality
      - pin
      - state
      - type
      - vtc
      type: object
    AcademicCertificateSchema_IssuedTo_Person_Photo:
      properties:
        format:
          type: string
          xml:
            attribute: true
      required:
      - format
      type: object
    AcademicCertificateSchema_IssuedTo_Person:
      properties:
        Address:
          $ref: '#/components/schemas/AcademicCertificateSchema_IssuedTo_Person_Address'
        Photo:
          $ref: '#/components/schemas/AcademicCertificateSchema_IssuedTo_Person_Photo'
        category:
          example: SC
          minLength: 1
          type: string
          xml:
            attribute: true
        disabilityStatus:
          example: ""
          type: string
          xml:
            attribute: true
        dob:
          example: 01-10-1988
          minLength: 1
          type: string
          xml:
            attribute: true
        email:
          example: ""
          type: string
          xml:
            attribute: true
        gender:
          example: ""
          type: string
          xml:
            attribute: true
        maritalStatus:
          example: ""
          type: string
          xml:
            attribute: true
        motherName:
          example: SUNITA DEVI
          minLength: 1
          type: string
          xml:
            attribute: true
        name:
          example: ANAND KUMAR
          minLength: 1
          type: string
          xml:
            attribute: true
        phone:
          example: ""
          type: string
          xml:
            attribute: true
        religion:
          example: ""
          type: string
          xml:
            attribute: true
        swd:
          example: PRAMOD KUMAR
          minLength: 1
          type: string
          xml:
            attribute: true
        swdIndicator:
          example: S
          minLength: 1
          type: string
          xml:
            attribute: true
        title:
          example: ""
          type: string
          xml:
            attribute: true
        uid:
          example: ""
          type: string
          xml:
            attribute: true
      required:
      - Address
      - Photo
      - category
      - disabilityStatus
      - dob
      - email
      - gender
      - maritalStatus
      - motherName
      - name
      - phone
      - religion
      - swd
      - swdIndicator
      - title
      - uid
      type: object
    AcademicCertificateSchema_IssuedTo:
      properties:
        Person:
          $ref: '#/components/schemas/AcademicCertificateSchema_IssuedTo_Person'
      required:
      - Person
      type: object
    ConsentArtifactSchema_consent_data:
      properties:
        id:
          minLength: 1
          type: string
      required:
      - id
      type: object
    ConsentArtifactSchema_consent_permission_dateRange:
      properties:
        from:
          description: "Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"
          format: date-time
          minLength: 1
          type: string
        to:
          description: "Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"
          format: date-time
          minLength: 1
          type: string
      required:
      - from
      - to
      type: object
    ConsentArtifactSchema_consent_permission_frequency:
      properties:
        repeats:
          type: number
        unit:
          minLength: 1
          type: string
        value:
          type: number
      required:
      - repeats
      - unit
      - value
      type: object
    ConsentArtifactSchema_consent_permission:
      properties:
        access:
          minLength: 1
          type: string
        dateRange:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent_permission_dateRange'
        frequency:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent_permission_frequency'
      required:
      - access
      - dateRange
      - frequency
      type: object
    ConsentArtifactSchema_consent_purpose:
      properties:
        description:
          minLength: 1
          type: string
      required:
      - description
      type: object
    ConsentArtifactSchema_consent_user:
      properties:
        email:
          minLength: 1
          type: string
        idNumber:
          minLength: 1
          type: string
        idType:
          minLength: 1
          type: string
        mobile:
          minLength: 1
          type: string
      required:
      - email
      - idNumber
      - idType
      - mobile
      type: object
    ConsentArtifactSchema_consent:
      properties:
        consentId:
          description: A unique consent id in UUID format.
          example: ea9c43aa-7f5a-4bf3-a0be-e1caa24737ba
          format: uuid
          minLength: 1
          type: string
        data:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent_data'
        dataConsumer:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent_data'
        dataProvider:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent_data'
        permission:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent_permission'
        purpose:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent_purpose'
        timestamp:
          description: "Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"
          format: date-time
          minLength: 1
          type: string
        user:
          $ref: '#/components/schemas/ConsentArtifactSchema_consent_user'
      required:
      - consentId
      - data
      - dataConsumer
      - dataProvider
      - permission
      - purpose
      - timestamp
      - user
      type: object
    ConsentArtifactSchema_signature:
      properties:
        signature:
          type: string
      required:
      - signature
      type: object
  securitySchemes:
    apiKey:
      in: header
      name: X-APISETU-APIKEY
      type: apiKey
    clientId:
      in: header
      name: X-APISETU-CLIENTID
      type: apiKey

