/**
 * eDistrict Himachal Pradesh, Himachal Pradesh
 * eDistrict Himachal (http://edistrict.hp.gov.in/) is the online service delivery portal for Himachal Pradesh State Govt. Certain documents issued by it (e.g. Birth, Income, Caste, Agriculturist, Bonafide Himachali Certificates etc) can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAecmw_401_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAecmw_401_response::OAIAecmw_401_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAecmw_401_response::OAIAecmw_401_response() {
    this->initializeModel();
}

OAIAecmw_401_response::~OAIAecmw_401_response() {}

void OAIAecmw_401_response::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;

    m_error_description_isSet = false;
    m_error_description_isValid = false;
}

void OAIAecmw_401_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAecmw_401_response::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_error_description_isValid = ::OpenAPI::fromJsonValue(m_error_description, json[QString("errorDescription")]);
    m_error_description_isSet = !json[QString("errorDescription")].isNull() && m_error_description_isValid;
}

QString OAIAecmw_401_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAecmw_401_response::asJsonObject() const {
    QJsonObject obj;
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_error_description_isSet) {
        obj.insert(QString("errorDescription"), ::OpenAPI::toJsonValue(m_error_description));
    }
    return obj;
}

QString OAIAecmw_401_response::getError() const {
    return m_error;
}
void OAIAecmw_401_response::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIAecmw_401_response::is_error_Set() const{
    return m_error_isSet;
}

bool OAIAecmw_401_response::is_error_Valid() const{
    return m_error_isValid;
}

QString OAIAecmw_401_response::getErrorDescription() const {
    return m_error_description;
}
void OAIAecmw_401_response::setErrorDescription(const QString &error_description) {
    m_error_description = error_description;
    m_error_description_isSet = true;
}

bool OAIAecmw_401_response::is_error_description_Set() const{
    return m_error_description_isSet;
}

bool OAIAecmw_401_response::is_error_description_Valid() const{
    return m_error_description_isValid;
}

bool OAIAecmw_401_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAecmw_401_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
