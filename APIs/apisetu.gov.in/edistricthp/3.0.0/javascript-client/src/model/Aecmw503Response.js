/**
 * eDistrict Himachal Pradesh, Himachal Pradesh
 * eDistrict Himachal (http://edistrict.hp.gov.in/) is the online service delivery portal for Himachal Pradesh State Govt. Certain documents issued by it (e.g. Birth, Income, Caste, Agriculturist, Bonafide Himachali Certificates etc) can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Aecmw503Response model module.
 * @module model/Aecmw503Response
 * @version 3.0.0
 */
class Aecmw503Response {
    /**
     * Constructs a new <code>Aecmw503Response</code>.
     * @alias module:model/Aecmw503Response
     */
    constructor() { 
        
        Aecmw503Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Aecmw503Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Aecmw503Response} obj Optional instance to populate.
     * @return {module:model/Aecmw503Response} The populated <code>Aecmw503Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Aecmw503Response();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('errorDescription')) {
                obj['errorDescription'] = ApiClient.convertToType(data['errorDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Aecmw503Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Aecmw503Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['errorDescription'] && !(typeof data['errorDescription'] === 'string' || data['errorDescription'] instanceof String)) {
            throw new Error("Expected the field `errorDescription` to be a primitive type in the JSON string but got " + data['errorDescription']);
        }

        return true;
    }


}



/**
 * @member {module:model/Aecmw503Response.ErrorEnum} error
 */
Aecmw503Response.prototype['error'] = undefined;

/**
 * @member {module:model/Aecmw503Response.ErrorDescriptionEnum} errorDescription
 */
Aecmw503Response.prototype['errorDescription'] = undefined;





/**
 * Allowed values for the <code>error</code> property.
 * @enum {String}
 * @readonly
 */
Aecmw503Response['ErrorEnum'] = {

    /**
     * value: "service_unavailable"
     * @const
     */
    "service_unavailable": "service_unavailable"
};


/**
 * Allowed values for the <code>errorDescription</code> property.
 * @enum {String}
 * @readonly
 */
Aecmw503Response['ErrorDescriptionEnum'] = {

    /**
     * value: "Publisher service is temporarily unavailable"
     * @const
     */
    "Publisher service is temporarily unavailable": "Publisher service is temporarily unavailable"
};



export default Aecmw503Response;

