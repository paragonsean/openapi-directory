/**
 * Transport Department, Puducherry
 * Driving License (DL) and Vehicle Registration Certificate (RC) of the State, as available on Parivahan Sewa (http://parivahan.co.in/) of Ministry of Road Transport and Highways, are available on DigiLocker. Citizens can pull these documents into their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration.h
 *
 * 
 */

#ifndef OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_H
#define OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_H

#include <QJsonObject>

#include "OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance.h"
#include "OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance;
class OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle;

class OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration : public OAIObject {
public:
    OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration();
    OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration(QString json);
    ~OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance getInsurance() const;
    void setInsurance(const OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance &insurance);
    bool is_insurance_Set() const;
    bool is_insurance_Valid() const;

    OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle getVehicle() const;
    void setVehicle(const OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle &vehicle);
    bool is_vehicle_Set() const;
    bool is_vehicle_Valid() const;

    QString getFinancer() const;
    void setFinancer(const QString &financer);
    bool is_financer_Set() const;
    bool is_financer_Valid() const;

    QString getNormsDesc() const;
    void setNormsDesc(const QString &norms_desc);
    bool is_norms_desc_Set() const;
    bool is_norms_desc_Valid() const;

    QString getStatusDate() const;
    void setStatusDate(const QString &status_date);
    bool is_status_date_Set() const;
    bool is_status_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Insurance m_insurance;
    bool m_insurance_isSet;
    bool m_insurance_isValid;

    OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle m_vehicle;
    bool m_vehicle_isSet;
    bool m_vehicle_isValid;

    QString m_financer;
    bool m_financer_isSet;
    bool m_financer_isValid;

    QString m_norms_desc;
    bool m_norms_desc_isSet;
    bool m_norms_desc_isValid;

    QString m_status_date;
    bool m_status_date_isSet;
    bool m_status_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration)

#endif // OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_H
