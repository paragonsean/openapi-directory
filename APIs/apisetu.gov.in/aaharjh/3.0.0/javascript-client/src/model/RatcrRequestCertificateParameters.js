/**
 * Department of Food, Public Distribution & Consumer Affairs (PDS), Jharkhand
 * Public distribution system (PDS) is an Indian food security system. Established by the Government of India under Ministry of Consumer Affairs, Food, and Public Distribution and managed jointly with state governments in India. Jharkhand PDS Ration Card Certificates is available in Digilocker for Citizen.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RatcrRequestCertificateParameters model module.
 * @module model/RatcrRequestCertificateParameters
 * @version 3.0.0
 */
class RatcrRequestCertificateParameters {
    /**
     * Constructs a new <code>RatcrRequestCertificateParameters</code>.
     * @alias module:model/RatcrRequestCertificateParameters
     * @param DOB {String} Date of birth in DD-MM-YYYY format
     * @param fullName {String} Full name
     * @param GENDER {String} Gender - M for male, F for female and O for other
     * @param UID {String} Aadhaar number
     */
    constructor(DOB, fullName, GENDER, UID) { 
        
        RatcrRequestCertificateParameters.initialize(this, DOB, fullName, GENDER, UID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, DOB, fullName, GENDER, UID) { 
        obj['DOB'] = DOB;
        obj['FullName'] = fullName;
        obj['GENDER'] = GENDER;
        obj['UID'] = UID;
    }

    /**
     * Constructs a <code>RatcrRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RatcrRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/RatcrRequestCertificateParameters} The populated <code>RatcrRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RatcrRequestCertificateParameters();

            if (data.hasOwnProperty('DOB')) {
                obj['DOB'] = ApiClient.convertToType(data['DOB'], 'String');
            }
            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('GENDER')) {
                obj['GENDER'] = ApiClient.convertToType(data['GENDER'], 'String');
            }
            if (data.hasOwnProperty('UID')) {
                obj['UID'] = ApiClient.convertToType(data['UID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RatcrRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RatcrRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RatcrRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DOB'] && !(typeof data['DOB'] === 'string' || data['DOB'] instanceof String)) {
            throw new Error("Expected the field `DOB` to be a primitive type in the JSON string but got " + data['DOB']);
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['GENDER'] && !(typeof data['GENDER'] === 'string' || data['GENDER'] instanceof String)) {
            throw new Error("Expected the field `GENDER` to be a primitive type in the JSON string but got " + data['GENDER']);
        }
        // ensure the json data is a string
        if (data['UID'] && !(typeof data['UID'] === 'string' || data['UID'] instanceof String)) {
            throw new Error("Expected the field `UID` to be a primitive type in the JSON string but got " + data['UID']);
        }

        return true;
    }


}

RatcrRequestCertificateParameters.RequiredProperties = ["DOB", "FullName", "GENDER", "UID"];

/**
 * Date of birth in DD-MM-YYYY format
 * @member {String} DOB
 */
RatcrRequestCertificateParameters.prototype['DOB'] = undefined;

/**
 * Full name
 * @member {String} FullName
 */
RatcrRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Gender - M for male, F for female and O for other
 * @member {String} GENDER
 */
RatcrRequestCertificateParameters.prototype['GENDER'] = undefined;

/**
 * Aadhaar number
 * @member {String} UID
 */
RatcrRequestCertificateParameters.prototype['UID'] = undefined;






export default RatcrRequestCertificateParameters;

