/**
 * Income Tax Department
 * Income Tax Department, Govt of India has provided PAN Verification Records to Indian citizens via DigiLocker. You can verify the correctness of your PAN data in real-time using this facility.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPANVerificationRecordSchema_IssuedBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPANVerificationRecordSchema_IssuedBy::OAIPANVerificationRecordSchema_IssuedBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPANVerificationRecordSchema_IssuedBy::OAIPANVerificationRecordSchema_IssuedBy() {
    this->initializeModel();
}

OAIPANVerificationRecordSchema_IssuedBy::~OAIPANVerificationRecordSchema_IssuedBy() {}

void OAIPANVerificationRecordSchema_IssuedBy::initializeModel() {

    m_organization_isSet = false;
    m_organization_isValid = false;
}

void OAIPANVerificationRecordSchema_IssuedBy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPANVerificationRecordSchema_IssuedBy::fromJsonObject(QJsonObject json) {

    m_organization_isValid = ::OpenAPI::fromJsonValue(m_organization, json[QString("Organization")]);
    m_organization_isSet = !json[QString("Organization")].isNull() && m_organization_isValid;
}

QString OAIPANVerificationRecordSchema_IssuedBy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPANVerificationRecordSchema_IssuedBy::asJsonObject() const {
    QJsonObject obj;
    if (m_organization.isSet()) {
        obj.insert(QString("Organization"), ::OpenAPI::toJsonValue(m_organization));
    }
    return obj;
}

OAIPANVerificationRecordSchema_IssuedBy_Organization OAIPANVerificationRecordSchema_IssuedBy::getOrganization() const {
    return m_organization;
}
void OAIPANVerificationRecordSchema_IssuedBy::setOrganization(const OAIPANVerificationRecordSchema_IssuedBy_Organization &organization) {
    m_organization = organization;
    m_organization_isSet = true;
}

bool OAIPANVerificationRecordSchema_IssuedBy::is_organization_Set() const{
    return m_organization_isSet;
}

bool OAIPANVerificationRecordSchema_IssuedBy::is_organization_Valid() const{
    return m_organization_isValid;
}

bool OAIPANVerificationRecordSchema_IssuedBy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_organization.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPANVerificationRecordSchema_IssuedBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_organization_isValid && true;
}

} // namespace OpenAPI
