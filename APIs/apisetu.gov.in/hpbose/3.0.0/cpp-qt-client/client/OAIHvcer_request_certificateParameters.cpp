/**
 * Himachal Pradesh Board of School Education, Himachal Pradesh
 * Himachal Pradesh Board of School Education, Dharamshala (http://hpbose.org/) has made available Class X (2012-18) & Class XII (2012-18) provisional certificates, which can be pulled by students into their accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHvcer_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHvcer_request_certificateParameters::OAIHvcer_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHvcer_request_certificateParameters::OAIHvcer_request_certificateParameters() {
    this->initializeModel();
}

OAIHvcer_request_certificateParameters::~OAIHvcer_request_certificateParameters() {}

void OAIHvcer_request_certificateParameters::initializeModel() {

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_roll_isSet = false;
    m_roll_isValid = false;

    m_yop_isSet = false;
    m_yop_isValid = false;
}

void OAIHvcer_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHvcer_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("DOB")]);
    m_dob_isSet = !json[QString("DOB")].isNull() && m_dob_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("FullName")]);
    m_full_name_isSet = !json[QString("FullName")].isNull() && m_full_name_isValid;

    m_roll_isValid = ::OpenAPI::fromJsonValue(m_roll, json[QString("ROLL")]);
    m_roll_isSet = !json[QString("ROLL")].isNull() && m_roll_isValid;

    m_yop_isValid = ::OpenAPI::fromJsonValue(m_yop, json[QString("YOP")]);
    m_yop_isSet = !json[QString("YOP")].isNull() && m_yop_isValid;
}

QString OAIHvcer_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHvcer_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_dob_isSet) {
        obj.insert(QString("DOB"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("FullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_roll_isSet) {
        obj.insert(QString("ROLL"), ::OpenAPI::toJsonValue(m_roll));
    }
    if (m_yop_isSet) {
        obj.insert(QString("YOP"), ::OpenAPI::toJsonValue(m_yop));
    }
    return obj;
}

QString OAIHvcer_request_certificateParameters::getDob() const {
    return m_dob;
}
void OAIHvcer_request_certificateParameters::setDob(const QString &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAIHvcer_request_certificateParameters::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAIHvcer_request_certificateParameters::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAIHvcer_request_certificateParameters::getFullName() const {
    return m_full_name;
}
void OAIHvcer_request_certificateParameters::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIHvcer_request_certificateParameters::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIHvcer_request_certificateParameters::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIHvcer_request_certificateParameters::getRoll() const {
    return m_roll;
}
void OAIHvcer_request_certificateParameters::setRoll(const QString &roll) {
    m_roll = roll;
    m_roll_isSet = true;
}

bool OAIHvcer_request_certificateParameters::is_roll_Set() const{
    return m_roll_isSet;
}

bool OAIHvcer_request_certificateParameters::is_roll_Valid() const{
    return m_roll_isValid;
}

QString OAIHvcer_request_certificateParameters::getYop() const {
    return m_yop;
}
void OAIHvcer_request_certificateParameters::setYop(const QString &yop) {
    m_yop = yop;
    m_yop_isSet = true;
}

bool OAIHvcer_request_certificateParameters::is_yop_Set() const{
    return m_yop_isSet;
}

bool OAIHvcer_request_certificateParameters::is_yop_Valid() const{
    return m_yop_isValid;
}

bool OAIHvcer_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roll_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_yop_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHvcer_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dob_isValid && m_full_name_isValid && m_roll_isValid && m_yop_isValid && true;
}

} // namespace OpenAPI
