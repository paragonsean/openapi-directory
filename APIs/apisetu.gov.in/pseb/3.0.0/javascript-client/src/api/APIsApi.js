/**
 * Punjab School Education Board, Punjab
 * Punjab School Education Board (http://www.pseb.ac.in) has made available 2018-20 Class V, VIII, X and XII Certificate cum Detailed Marks Sheet in DigiLocker, which can be pulled by students into their accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Cemst400Response from '../model/Cemst400Response';
import Cemst401Response from '../model/Cemst401Response';
import Cemst404Response from '../model/Cemst404Response';
import Cemst500Response from '../model/Cemst500Response';
import Cemst502Response from '../model/Cemst502Response';
import Cemst503Response from '../model/Cemst503Response';
import Cemst504Response from '../model/Cemst504Response';
import CemstRequest from '../model/CemstRequest';

/**
* APIs service.
* @module api/APIsApi
* @version 3.0.0
*/
export default class APIsApi {

    /**
    * Constructs a new APIsApi. 
    * @alias module:api/APIsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cemst operation.
     * @callback module:api/APIsApi~cemstCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Class VIII Marksheet
     * API to verify Class VIII Marksheet.
     * @param {Object} opts Optional parameters
     * @param {module:model/CemstRequest} [cemstRequest] Request format
     * @param {module:api/APIsApi~cemstCallback} callback The callback function, accepting three arguments: error, data, response
     */
    cemst(opts, callback) {
      opts = opts || {};
      let postBody = opts['cemstRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cemst/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cfmst operation.
     * @callback module:api/APIsApi~cfmstCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Class V Marksheet
     * API to verify Class V Marksheet.
     * @param {Object} opts Optional parameters
     * @param {module:model/CemstRequest} [cemstRequest] Request format
     * @param {module:api/APIsApi~cfmstCallback} callback The callback function, accepting three arguments: error, data, response
     */
    cfmst(opts, callback) {
      opts = opts || {};
      let postBody = opts['cemstRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cfmst/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the hscer operation.
     * @callback module:api/APIsApi~hscerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Class XII Marksheet
     * API to verify Class XII Marksheet.
     * @param {Object} opts Optional parameters
     * @param {module:model/CemstRequest} [cemstRequest] Request format
     * @param {module:api/APIsApi~hscerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    hscer(opts, callback) {
      opts = opts || {};
      let postBody = opts['cemstRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/hscer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the micer operation.
     * @callback module:api/APIsApi~micerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Migration Certificate
     * API to verify Migration Certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/CemstRequest} [cemstRequest] Request format
     * @param {module:api/APIsApi~micerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    micer(opts, callback) {
      opts = opts || {};
      let postBody = opts['cemstRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/micer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sscer operation.
     * @callback module:api/APIsApi~sscerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Class X Marksheet
     * API to verify Class X Marksheet.
     * @param {Object} opts Optional parameters
     * @param {module:model/CemstRequest} [cemstRequest] Request format
     * @param {module:api/APIsApi~sscerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sscer(opts, callback) {
      opts = opts || {};
      let postBody = opts['cemstRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['clientId', 'apiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/sscer/certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
