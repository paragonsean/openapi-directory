/**
 * KERALA PUBLIC SERVICE COMMISSION, Kerala
 * The following issued documents can be integrated with DigiLocker and get used by candidates for service delivery - 1.One Time Verification -OTV certificate ï¿½ issued to candidates qualified for appointment for posts in Govt. Sector to produce to the concerned dept. after scrutinizing their the relevant documents to prove their qualifications, age, etc.2. Admission Tickets for appearing Online, OMR Exams, Physical Test, Interview etc. 3.Departmental Test Certificates- is issued to employees in Govt. sector
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConsentArtifactSchema_consent_permission_frequency.h
 *
 * 
 */

#ifndef OAIConsentArtifactSchema_consent_permission_frequency_H
#define OAIConsentArtifactSchema_consent_permission_frequency_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConsentArtifactSchema_consent_permission_frequency : public OAIObject {
public:
    OAIConsentArtifactSchema_consent_permission_frequency();
    OAIConsentArtifactSchema_consent_permission_frequency(QString json);
    ~OAIConsentArtifactSchema_consent_permission_frequency() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getRepeats() const;
    void setRepeats(const double &repeats);
    bool is_repeats_Set() const;
    bool is_repeats_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_repeats;
    bool m_repeats_isSet;
    bool m_repeats_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    double m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConsentArtifactSchema_consent_permission_frequency)

#endif // OAIConsentArtifactSchema_consent_permission_frequency_H
