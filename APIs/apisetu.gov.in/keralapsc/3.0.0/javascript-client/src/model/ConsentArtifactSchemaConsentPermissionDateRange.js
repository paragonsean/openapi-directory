/**
 * KERALA PUBLIC SERVICE COMMISSION, Kerala
 * The following issued documents can be integrated with DigiLocker and get used by candidates for service delivery - 1.One Time Verification -OTV certificate ï¿½ issued to candidates qualified for appointment for posts in Govt. Sector to produce to the concerned dept. after scrutinizing their the relevant documents to prove their qualifications, age, etc.2. Admission Tickets for appearing Online, OMR Exams, Physical Test, Interview etc. 3.Departmental Test Certificates- is issued to employees in Govt. sector
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConsentArtifactSchemaConsentPermissionDateRange model module.
 * @module model/ConsentArtifactSchemaConsentPermissionDateRange
 * @version 3.0.0
 */
class ConsentArtifactSchemaConsentPermissionDateRange {
    /**
     * Constructs a new <code>ConsentArtifactSchemaConsentPermissionDateRange</code>.
     * @alias module:model/ConsentArtifactSchemaConsentPermissionDateRange
     * @param from {Date} Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
     * @param to {Date} Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
     */
    constructor(from, to) { 
        
        ConsentArtifactSchemaConsentPermissionDateRange.initialize(this, from, to);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, from, to) { 
        obj['from'] = from;
        obj['to'] = to;
    }

    /**
     * Constructs a <code>ConsentArtifactSchemaConsentPermissionDateRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsentArtifactSchemaConsentPermissionDateRange} obj Optional instance to populate.
     * @return {module:model/ConsentArtifactSchemaConsentPermissionDateRange} The populated <code>ConsentArtifactSchemaConsentPermissionDateRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsentArtifactSchemaConsentPermissionDateRange();

            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Date');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsentArtifactSchemaConsentPermissionDateRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsentArtifactSchemaConsentPermissionDateRange</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConsentArtifactSchemaConsentPermissionDateRange.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ConsentArtifactSchemaConsentPermissionDateRange.RequiredProperties = ["from", "to"];

/**
 * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
 * @member {Date} from
 */
ConsentArtifactSchemaConsentPermissionDateRange.prototype['from'] = undefined;

/**
 * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
 * @member {Date} to
 */
ConsentArtifactSchemaConsentPermissionDateRange.prototype['to'] = undefined;






export default ConsentArtifactSchemaConsentPermissionDateRange;

