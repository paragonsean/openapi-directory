/*
 * Directorate of Information Technology, Government of Tripura, Tripura
 * eDistrict Tripura (http://edistrict.tripura.gov.in/) is the online service delivery portal for TripuraState Govt. Certain documents issued by it (e.g. Income, Caste Certificates etc) can be pulled into citizens' DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Chcer400Response;
import org.openapitools.client.model.Chcer401Response;
import org.openapitools.client.model.Chcer404Response;
import org.openapitools.client.model.Chcer500Response;
import org.openapitools.client.model.Chcer502Response;
import org.openapitools.client.model.Chcer503Response;
import org.openapitools.client.model.Chcer504Response;
import org.openapitools.client.model.ChcerRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApisApi
 */
@Disabled
public class ApisApiTest {

    private final ApisApi api = new ApisApi();

    /**
     * Character Certificate
     *
     * API to verify Character Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chcerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.chcer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Distance Certificate
     *
     * API to verify Distance Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dncerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.dncer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Dependency Certificate
     *
     * API to verify Dependency Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dpcerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.dpcer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Food Stuff License
     *
     * API to verify Food Stuff License.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fslcsTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.fslcs(chcerRequest);
        // TODO: test validations
    }

    /**
     * Grievance Redressal/ Registration
     *
     * API to verify Grievance Redressal/ Registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void grredTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.grred(chcerRequest);
        // TODO: test validations
    }

    /**
     * Income Certificate
     *
     * API to verify Income Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void incerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.incer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Issue of Arm Licence
     *
     * API to verify Issue of Arm Licence.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void isoalTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.isoal(chcerRequest);
        // TODO: test validations
    }

    /**
     * Land Valuation/ Holding/ Record Certificate
     *
     * API to verify Land Valuation/ Holding/ Record Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lvcerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.lvcer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Manufacturer License
     *
     * API to verify Manufacturer License.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void malcsTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.malcs(chcerRequest);
        // TODO: test validations
    }

    /**
     * Small Savings Agent License
     *
     * API to verify Small Savings Agent License.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mpkbyTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.mpkby(chcerRequest);
        // TODO: test validations
    }

    /**
     * OBC Certificate
     *
     * API to verify OBC Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void obcerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.obcer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Right to Information
     *
     * API to verify Right to Information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ritinTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.ritin(chcerRequest);
        // TODO: test validations
    }

    /**
     * Marriage Certificate
     *
     * API to verify Marriage Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rmcerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.rmcer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Residence Certificate
     *
     * API to verify Residence Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rscerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.rscer(chcerRequest);
        // TODO: test validations
    }

    /**
     * SC/ST  Certificate
     *
     * API to verify SC/ST  Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void shcerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.shcer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Surviving Member Certificate
     *
     * API to verify Surviving Member Certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void smcerTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.smcer(chcerRequest);
        // TODO: test validations
    }

    /**
     * Standardized Agency Systems (SAS) Agent License
     *
     * API to verify Standardized Agency Systems (SAS) Agent License.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sslcsTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.sslcs(chcerRequest);
        // TODO: test validations
    }

    /**
     * License/ Verification of Weights, Measures and Instruments
     *
     * API to verify License/ Verification of Weights, Measures and Instruments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vrwmiTest() throws ApiException {
        ChcerRequest chcerRequest = null;
        api.vrwmi(chcerRequest);
        // TODO: test validations
    }

}
