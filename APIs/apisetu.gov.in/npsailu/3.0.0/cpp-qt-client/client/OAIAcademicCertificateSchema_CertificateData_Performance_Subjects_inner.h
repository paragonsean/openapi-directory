/**
 * Sailu Municipal Council, Maharashtra
 * APIs provided by Sailu Municipal Council, Maharashtra.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner.h
 *
 * 
 */

#ifndef OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner_H
#define OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner : public OAIObject {
public:
    OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner();
    OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner(QString json);
    ~OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getGp() const;
    void setGp(const QString &gp);
    bool is_gp_Set() const;
    bool is_gp_Valid() const;

    QString getGpMax() const;
    void setGpMax(const QString &gp_max);
    bool is_gp_max_Set() const;
    bool is_gp_max_Valid() const;

    QString getGrade() const;
    void setGrade(const QString &grade);
    bool is_grade_Set() const;
    bool is_grade_Valid() const;

    qint32 getMarksMax() const;
    void setMarksMax(const qint32 &marks_max);
    bool is_marks_max_Set() const;
    bool is_marks_max_Valid() const;

    qint32 getMarksMaxPractical() const;
    void setMarksMaxPractical(const qint32 &marks_max_practical);
    bool is_marks_max_practical_Set() const;
    bool is_marks_max_practical_Valid() const;

    qint32 getMarksMaxTheory() const;
    void setMarksMaxTheory(const qint32 &marks_max_theory);
    bool is_marks_max_theory_Set() const;
    bool is_marks_max_theory_Valid() const;

    qint32 getMarksPractical() const;
    void setMarksPractical(const qint32 &marks_practical);
    bool is_marks_practical_Set() const;
    bool is_marks_practical_Valid() const;

    qint32 getMarksTheory() const;
    void setMarksTheory(const qint32 &marks_theory);
    bool is_marks_theory_Set() const;
    bool is_marks_theory_Valid() const;

    qint32 getMarksTotal() const;
    void setMarksTotal(const qint32 &marks_total);
    bool is_marks_total_Set() const;
    bool is_marks_total_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_gp;
    bool m_gp_isSet;
    bool m_gp_isValid;

    QString m_gp_max;
    bool m_gp_max_isSet;
    bool m_gp_max_isValid;

    QString m_grade;
    bool m_grade_isSet;
    bool m_grade_isValid;

    qint32 m_marks_max;
    bool m_marks_max_isSet;
    bool m_marks_max_isValid;

    qint32 m_marks_max_practical;
    bool m_marks_max_practical_isSet;
    bool m_marks_max_practical_isValid;

    qint32 m_marks_max_theory;
    bool m_marks_max_theory_isSet;
    bool m_marks_max_theory_isValid;

    qint32 m_marks_practical;
    bool m_marks_practical_isSet;
    bool m_marks_practical_isValid;

    qint32 m_marks_theory;
    bool m_marks_theory_isSet;
    bool m_marks_theory_isValid;

    qint32 m_marks_total;
    bool m_marks_total_isSet;
    bool m_marks_total_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner)

#endif // OAIAcademicCertificateSchema_CertificateData_Performance_Subjects_inner_H
