/**
 * State Transport Department, Telangana
 * Driving License (DL) and Vehicle Registration Certificate (RC) of the State, as available on Parivahan Sewa (http://parivahan.co.in/) of Ministry of Road Transport and Highways, are available on DigiLocker. Citizens can pull these documents into their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAcademicCertificateSchema_IssuedBy_Organization_Address.h
 *
 * 
 */

#ifndef OAIAcademicCertificateSchema_IssuedBy_Organization_Address_H
#define OAIAcademicCertificateSchema_IssuedBy_Organization_Address_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAcademicCertificateSchema_IssuedBy_Organization_Address : public OAIObject {
public:
    OAIAcademicCertificateSchema_IssuedBy_Organization_Address();
    OAIAcademicCertificateSchema_IssuedBy_Organization_Address(QString json);
    ~OAIAcademicCertificateSchema_IssuedBy_Organization_Address() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDistrict() const;
    void setDistrict(const QString &district);
    bool is_district_Set() const;
    bool is_district_Valid() const;

    QString getHouse() const;
    void setHouse(const QString &house);
    bool is_house_Set() const;
    bool is_house_Valid() const;

    QString getLandmark() const;
    void setLandmark(const QString &landmark);
    bool is_landmark_Set() const;
    bool is_landmark_Valid() const;

    QString getLine1() const;
    void setLine1(const QString &line1);
    bool is_line1_Set() const;
    bool is_line1_Valid() const;

    QString getLine2() const;
    void setLine2(const QString &line2);
    bool is_line2_Set() const;
    bool is_line2_Valid() const;

    QString getLocality() const;
    void setLocality(const QString &locality);
    bool is_locality_Set() const;
    bool is_locality_Valid() const;

    QString getPin() const;
    void setPin(const QString &pin);
    bool is_pin_Set() const;
    bool is_pin_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVtc() const;
    void setVtc(const QString &vtc);
    bool is_vtc_Set() const;
    bool is_vtc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_district;
    bool m_district_isSet;
    bool m_district_isValid;

    QString m_house;
    bool m_house_isSet;
    bool m_house_isValid;

    QString m_landmark;
    bool m_landmark_isSet;
    bool m_landmark_isValid;

    QString m_line1;
    bool m_line1_isSet;
    bool m_line1_isValid;

    QString m_line2;
    bool m_line2_isSet;
    bool m_line2_isValid;

    QString m_locality;
    bool m_locality_isSet;
    bool m_locality_isValid;

    QString m_pin;
    bool m_pin_isSet;
    bool m_pin_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_vtc;
    bool m_vtc_isSet;
    bool m_vtc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAcademicCertificateSchema_IssuedBy_Organization_Address)

#endif // OAIAcademicCertificateSchema_IssuedBy_Organization_Address_H
