/**
 * Chitkara University
 * Degree Certificates of various courses issued by Chitkara University can be downloaded in citizen's DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DgcerRequestCertificateParameters model module.
 * @module model/DgcerRequestCertificateParameters
 * @version 3.0.0
 */
class DgcerRequestCertificateParameters {
    /**
     * Constructs a new <code>DgcerRequestCertificateParameters</code>.
     * @alias module:model/DgcerRequestCertificateParameters
     * @param DEGREE {String} Degree Name
     * @param fullName {String} Full name
     * @param RROLL {String} Roll No.
     */
    constructor(DEGREE, fullName, RROLL) { 
        
        DgcerRequestCertificateParameters.initialize(this, DEGREE, fullName, RROLL);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, DEGREE, fullName, RROLL) { 
        obj['DEGREE'] = DEGREE;
        obj['FullName'] = fullName;
        obj['RROLL'] = RROLL;
    }

    /**
     * Constructs a <code>DgcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DgcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/DgcerRequestCertificateParameters} The populated <code>DgcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DgcerRequestCertificateParameters();

            if (data.hasOwnProperty('DEGREE')) {
                obj['DEGREE'] = ApiClient.convertToType(data['DEGREE'], 'String');
            }
            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('RROLL')) {
                obj['RROLL'] = ApiClient.convertToType(data['RROLL'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DgcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DgcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DgcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DEGREE'] && !(typeof data['DEGREE'] === 'string' || data['DEGREE'] instanceof String)) {
            throw new Error("Expected the field `DEGREE` to be a primitive type in the JSON string but got " + data['DEGREE']);
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['RROLL'] && !(typeof data['RROLL'] === 'string' || data['RROLL'] instanceof String)) {
            throw new Error("Expected the field `RROLL` to be a primitive type in the JSON string but got " + data['RROLL']);
        }

        return true;
    }


}

DgcerRequestCertificateParameters.RequiredProperties = ["DEGREE", "FullName", "RROLL"];

/**
 * Degree Name
 * @member {String} DEGREE
 */
DgcerRequestCertificateParameters.prototype['DEGREE'] = undefined;

/**
 * Full name
 * @member {String} FullName
 */
DgcerRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Roll No.
 * @member {String} RROLL
 */
DgcerRequestCertificateParameters.prototype['RROLL'] = undefined;






export default DgcerRequestCertificateParameters;

