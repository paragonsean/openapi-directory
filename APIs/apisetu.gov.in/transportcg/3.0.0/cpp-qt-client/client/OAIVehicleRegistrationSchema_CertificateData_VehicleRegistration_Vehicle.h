/**
 * Transport Department, Chhattisgarh
 * Driving License (DL) and Vehicle Registration Certificate (RC) of the State, as available on Parivahan Sewa (http://parivahan.co.in/) of Ministry of Road Transport and Highways, are available on DigiLocker. Citizens can pull these documents into their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle.h
 *
 * 
 */

#ifndef OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle_H
#define OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle : public OAIObject {
public:
    OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle();
    OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle(QString json);
    ~OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChasisNo() const;
    void setChasisNo(const QString &chasis_no);
    bool is_chasis_no_Set() const;
    bool is_chasis_no_Valid() const;

    OAIObject getRClass() const;
    void setRClass(const OAIObject &r_class);
    bool is_r_class_Set() const;
    bool is_r_class_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    OAIObject getCubicCapacity() const;
    void setCubicCapacity(const OAIObject &cubic_capacity);
    bool is_cubic_capacity_Set() const;
    bool is_cubic_capacity_Valid() const;

    OAIObject getCylinder() const;
    void setCylinder(const OAIObject &cylinder);
    bool is_cylinder_Set() const;
    bool is_cylinder_Valid() const;

    QString getEngineNo() const;
    void setEngineNo(const QString &engine_no);
    bool is_engine_no_Set() const;
    bool is_engine_no_Valid() const;

    OAIObject getFitTill() const;
    void setFitTill(const OAIObject &fit_till);
    bool is_fit_till_Set() const;
    bool is_fit_till_Valid() const;

    OAIObject getFuelDesc() const;
    void setFuelDesc(const OAIObject &fuel_desc);
    bool is_fuel_desc_Set() const;
    bool is_fuel_desc_Valid() const;

    OAIObject getMake() const;
    void setMake(const OAIObject &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    OAIObject getMfgDate() const;
    void setMfgDate(const OAIObject &mfg_date);
    bool is_mfg_date_Set() const;
    bool is_mfg_date_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getSeatCapacity() const;
    void setSeatCapacity(const QString &seat_capacity);
    bool is_seat_capacity_Set() const;
    bool is_seat_capacity_Valid() const;

    QString getSleeperCapacity() const;
    void setSleeperCapacity(const QString &sleeper_capacity);
    bool is_sleeper_capacity_Set() const;
    bool is_sleeper_capacity_Valid() const;

    OAIObject getStandingCapacity() const;
    void setStandingCapacity(const OAIObject &standing_capacity);
    bool is_standing_capacity_Set() const;
    bool is_standing_capacity_Valid() const;

    QString getUnladenWeight() const;
    void setUnladenWeight(const QString &unladen_weight);
    bool is_unladen_weight_Set() const;
    bool is_unladen_weight_Valid() const;

    OAIObject getWheelbase() const;
    void setWheelbase(const OAIObject &wheelbase);
    bool is_wheelbase_Set() const;
    bool is_wheelbase_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_chasis_no;
    bool m_chasis_no_isSet;
    bool m_chasis_no_isValid;

    OAIObject m_r_class;
    bool m_r_class_isSet;
    bool m_r_class_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    OAIObject m_cubic_capacity;
    bool m_cubic_capacity_isSet;
    bool m_cubic_capacity_isValid;

    OAIObject m_cylinder;
    bool m_cylinder_isSet;
    bool m_cylinder_isValid;

    QString m_engine_no;
    bool m_engine_no_isSet;
    bool m_engine_no_isValid;

    OAIObject m_fit_till;
    bool m_fit_till_isSet;
    bool m_fit_till_isValid;

    OAIObject m_fuel_desc;
    bool m_fuel_desc_isSet;
    bool m_fuel_desc_isValid;

    OAIObject m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    OAIObject m_mfg_date;
    bool m_mfg_date_isSet;
    bool m_mfg_date_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_seat_capacity;
    bool m_seat_capacity_isSet;
    bool m_seat_capacity_isValid;

    QString m_sleeper_capacity;
    bool m_sleeper_capacity_isSet;
    bool m_sleeper_capacity_isValid;

    OAIObject m_standing_capacity;
    bool m_standing_capacity_isSet;
    bool m_standing_capacity_isValid;

    QString m_unladen_weight;
    bool m_unladen_weight_isSet;
    bool m_unladen_weight_isValid;

    OAIObject m_wheelbase;
    bool m_wheelbase_isSet;
    bool m_wheelbase_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle)

#endif // OAIVehicleRegistrationSchema_CertificateData_VehicleRegistration_Vehicle_H
