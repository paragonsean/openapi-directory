/**
 * Indian Navy (INS Valsura)
 * Certificates and Marksheets of the training conducted by Indian Navy are available to the Officers/ Sailors in their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISkcer_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISkcer_request_certificateParameters::OAISkcer_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISkcer_request_certificateParameters::OAISkcer_request_certificateParameters() {
    this->initializeModel();
}

OAISkcer_request_certificateParameters::~OAISkcer_request_certificateParameters() {}

void OAISkcer_request_certificateParameters::initializeModel() {

    m_coursename_isSet = false;
    m_coursename_isValid = false;

    m_personalno_isSet = false;
    m_personalno_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;
}

void OAISkcer_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISkcer_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_coursename_isValid = ::OpenAPI::fromJsonValue(m_coursename, json[QString("coursename")]);
    m_coursename_isSet = !json[QString("coursename")].isNull() && m_coursename_isValid;

    m_personalno_isValid = ::OpenAPI::fromJsonValue(m_personalno, json[QString("personalno")]);
    m_personalno_isSet = !json[QString("personalno")].isNull() && m_personalno_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("unit")]);
    m_unit_isSet = !json[QString("unit")].isNull() && m_unit_isValid;
}

QString OAISkcer_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISkcer_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_coursename_isSet) {
        obj.insert(QString("coursename"), ::OpenAPI::toJsonValue(m_coursename));
    }
    if (m_personalno_isSet) {
        obj.insert(QString("personalno"), ::OpenAPI::toJsonValue(m_personalno));
    }
    if (m_unit_isSet) {
        obj.insert(QString("unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    return obj;
}

QString OAISkcer_request_certificateParameters::getCoursename() const {
    return m_coursename;
}
void OAISkcer_request_certificateParameters::setCoursename(const QString &coursename) {
    m_coursename = coursename;
    m_coursename_isSet = true;
}

bool OAISkcer_request_certificateParameters::is_coursename_Set() const{
    return m_coursename_isSet;
}

bool OAISkcer_request_certificateParameters::is_coursename_Valid() const{
    return m_coursename_isValid;
}

QString OAISkcer_request_certificateParameters::getPersonalno() const {
    return m_personalno;
}
void OAISkcer_request_certificateParameters::setPersonalno(const QString &personalno) {
    m_personalno = personalno;
    m_personalno_isSet = true;
}

bool OAISkcer_request_certificateParameters::is_personalno_Set() const{
    return m_personalno_isSet;
}

bool OAISkcer_request_certificateParameters::is_personalno_Valid() const{
    return m_personalno_isValid;
}

QString OAISkcer_request_certificateParameters::getUnit() const {
    return m_unit;
}
void OAISkcer_request_certificateParameters::setUnit(const QString &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAISkcer_request_certificateParameters::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAISkcer_request_certificateParameters::is_unit_Valid() const{
    return m_unit_isValid;
}

bool OAISkcer_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_coursename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personalno_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISkcer_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_coursename_isValid && m_personalno_isValid && m_unit_isValid && true;
}

} // namespace OpenAPI
