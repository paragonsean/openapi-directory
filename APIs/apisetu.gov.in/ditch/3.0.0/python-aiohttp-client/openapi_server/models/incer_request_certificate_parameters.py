# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IncerRequestCertificateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appno: str=None, certno: str=None):
        """IncerRequestCertificateParameters - a model defined in OpenAPI

        :param appno: The appno of this IncerRequestCertificateParameters.
        :param certno: The certno of this IncerRequestCertificateParameters.
        """
        self.openapi_types = {
            'appno': str,
            'certno': str
        }

        self.attribute_map = {
            'appno': 'APPNO',
            'certno': 'CERTNO'
        }

        self._appno = appno
        self._certno = certno

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IncerRequestCertificateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The incer_request_certificateParameters of this IncerRequestCertificateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appno(self):
        """Gets the appno of this IncerRequestCertificateParameters.

        Application No

        :return: The appno of this IncerRequestCertificateParameters.
        :rtype: str
        """
        return self._appno

    @appno.setter
    def appno(self, appno):
        """Sets the appno of this IncerRequestCertificateParameters.

        Application No

        :param appno: The appno of this IncerRequestCertificateParameters.
        :type appno: str
        """
        if appno is None:
            raise ValueError("Invalid value for `appno`, must not be `None`")

        self._appno = appno

    @property
    def certno(self):
        """Gets the certno of this IncerRequestCertificateParameters.

        Certificate No

        :return: The certno of this IncerRequestCertificateParameters.
        :rtype: str
        """
        return self._certno

    @certno.setter
    def certno(self, certno):
        """Sets the certno of this IncerRequestCertificateParameters.

        Certificate No

        :param certno: The certno of this IncerRequestCertificateParameters.
        :type certno: str
        """
        if certno is None:
            raise ValueError("Invalid value for `certno`, must not be `None`")

        self._certno = certno
