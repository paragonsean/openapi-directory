/**
 * Ministry of Skill Development And Entrepreneurship
 * National Council for Vocational Training (NCVT) under Ministry of Skill Development And Entrepreneurship has been entrusted with the responsibilities of prescribing standards and curricula for craftsmen training and conducting All India Trade Tests and awarding National Trade Certificates. All the ITI certificates under the purview of NCVT are available to download through Citizen's DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIticr_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIticr_request_certificateParameters::OAIIticr_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIticr_request_certificateParameters::OAIIticr_request_certificateParameters() {
    this->initializeModel();
}

OAIIticr_request_certificateParameters::~OAIIticr_request_certificateParameters() {}

void OAIIticr_request_certificateParameters::initializeModel() {

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_certno_isSet = false;
    m_certno_isValid = false;
}

void OAIIticr_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIticr_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("FullName")]);
    m_full_name_isSet = !json[QString("FullName")].isNull() && m_full_name_isValid;

    m_certno_isValid = ::OpenAPI::fromJsonValue(m_certno, json[QString("certno")]);
    m_certno_isSet = !json[QString("certno")].isNull() && m_certno_isValid;
}

QString OAIIticr_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIticr_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_full_name_isSet) {
        obj.insert(QString("FullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_certno_isSet) {
        obj.insert(QString("certno"), ::OpenAPI::toJsonValue(m_certno));
    }
    return obj;
}

QString OAIIticr_request_certificateParameters::getFullName() const {
    return m_full_name;
}
void OAIIticr_request_certificateParameters::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIIticr_request_certificateParameters::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIIticr_request_certificateParameters::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIIticr_request_certificateParameters::getCertno() const {
    return m_certno;
}
void OAIIticr_request_certificateParameters::setCertno(const QString &certno) {
    m_certno = certno;
    m_certno_isSet = true;
}

bool OAIIticr_request_certificateParameters::is_certno_Set() const{
    return m_certno_isSet;
}

bool OAIIticr_request_certificateParameters::is_certno_Valid() const{
    return m_certno_isValid;
}

bool OAIIticr_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_certno_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIticr_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_full_name_isValid && m_certno_isValid && true;
}

} // namespace OpenAPI
