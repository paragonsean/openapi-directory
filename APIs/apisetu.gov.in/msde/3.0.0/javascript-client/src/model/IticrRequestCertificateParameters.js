/**
 * Ministry of Skill Development And Entrepreneurship
 * National Council for Vocational Training (NCVT) under Ministry of Skill Development And Entrepreneurship has been entrusted with the responsibilities of prescribing standards and curricula for craftsmen training and conducting All India Trade Tests and awarding National Trade Certificates. All the ITI certificates under the purview of NCVT are available to download through Citizen's DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IticrRequestCertificateParameters model module.
 * @module model/IticrRequestCertificateParameters
 * @version 3.0.0
 */
class IticrRequestCertificateParameters {
    /**
     * Constructs a new <code>IticrRequestCertificateParameters</code>.
     * @alias module:model/IticrRequestCertificateParameters
     * @param fullName {String} Full name
     * @param certno {String} Certificate No.
     */
    constructor(fullName, certno) { 
        
        IticrRequestCertificateParameters.initialize(this, fullName, certno);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fullName, certno) { 
        obj['FullName'] = fullName;
        obj['certno'] = certno;
    }

    /**
     * Constructs a <code>IticrRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IticrRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/IticrRequestCertificateParameters} The populated <code>IticrRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IticrRequestCertificateParameters();

            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('certno')) {
                obj['certno'] = ApiClient.convertToType(data['certno'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IticrRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IticrRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IticrRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['certno'] && !(typeof data['certno'] === 'string' || data['certno'] instanceof String)) {
            throw new Error("Expected the field `certno` to be a primitive type in the JSON string but got " + data['certno']);
        }

        return true;
    }


}

IticrRequestCertificateParameters.RequiredProperties = ["FullName", "certno"];

/**
 * Full name
 * @member {String} FullName
 */
IticrRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Certificate No.
 * @member {String} certno
 */
IticrRequestCertificateParameters.prototype['certno'] = undefined;






export default IticrRequestCertificateParameters;

