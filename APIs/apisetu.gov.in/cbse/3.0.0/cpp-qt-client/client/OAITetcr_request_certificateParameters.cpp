/**
 * Central Board of Secondary Education
 * CBSE (http://www.cbse.nic.in/) is issuing marksheets, passing certificates, migration certificates etc. through DigiLocker. These are either pushed, or can be pulled by students into their DigiLocker accounts. Currently available - 2004 - 2020 [Class XII], 2004 - 2020 [Class X], 2017 (NEET Rank Letter & Marksheet), 2016 (NEET Rank Letter), 2018 December (CTET Eligibility Certificate & Marksheet).
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITetcr_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITetcr_request_certificateParameters::OAITetcr_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITetcr_request_certificateParameters::OAITetcr_request_certificateParameters() {
    this->initializeModel();
}

OAITetcr_request_certificateParameters::~OAITetcr_request_certificateParameters() {}

void OAITetcr_request_certificateParameters::initializeModel() {

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_rollno_isSet = false;
    m_rollno_isValid = false;

    m_year_month_isSet = false;
    m_year_month_isValid = false;
}

void OAITetcr_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITetcr_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("FullName")]);
    m_full_name_isSet = !json[QString("FullName")].isNull() && m_full_name_isValid;

    m_rollno_isValid = ::OpenAPI::fromJsonValue(m_rollno, json[QString("rollno")]);
    m_rollno_isSet = !json[QString("rollno")].isNull() && m_rollno_isValid;

    m_year_month_isValid = ::OpenAPI::fromJsonValue(m_year_month, json[QString("year_month")]);
    m_year_month_isSet = !json[QString("year_month")].isNull() && m_year_month_isValid;
}

QString OAITetcr_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITetcr_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_full_name_isSet) {
        obj.insert(QString("FullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_rollno_isSet) {
        obj.insert(QString("rollno"), ::OpenAPI::toJsonValue(m_rollno));
    }
    if (m_year_month_isSet) {
        obj.insert(QString("year_month"), ::OpenAPI::toJsonValue(m_year_month));
    }
    return obj;
}

QString OAITetcr_request_certificateParameters::getFullName() const {
    return m_full_name;
}
void OAITetcr_request_certificateParameters::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAITetcr_request_certificateParameters::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAITetcr_request_certificateParameters::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAITetcr_request_certificateParameters::getRollno() const {
    return m_rollno;
}
void OAITetcr_request_certificateParameters::setRollno(const QString &rollno) {
    m_rollno = rollno;
    m_rollno_isSet = true;
}

bool OAITetcr_request_certificateParameters::is_rollno_Set() const{
    return m_rollno_isSet;
}

bool OAITetcr_request_certificateParameters::is_rollno_Valid() const{
    return m_rollno_isValid;
}

QString OAITetcr_request_certificateParameters::getYearMonth() const {
    return m_year_month;
}
void OAITetcr_request_certificateParameters::setYearMonth(const QString &year_month) {
    m_year_month = year_month;
    m_year_month_isSet = true;
}

bool OAITetcr_request_certificateParameters::is_year_month_Set() const{
    return m_year_month_isSet;
}

bool OAITetcr_request_certificateParameters::is_year_month_Valid() const{
    return m_year_month_isValid;
}

bool OAITetcr_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollno_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_month_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITetcr_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_full_name_isValid && m_rollno_isValid && m_year_month_isValid && true;
}

} // namespace OpenAPI
