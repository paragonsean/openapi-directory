/**
 * Central Board of Secondary Education
 * CBSE (http://www.cbse.nic.in/) is issuing marksheets, passing certificates, migration certificates etc. through DigiLocker. These are either pushed, or can be pulled by students into their DigiLocker accounts. Currently available - 2004 - 2020 [Class XII], 2004 - 2020 [Class X], 2017 (NEET Rank Letter & Marksheet), 2016 (NEET Rank Letter), 2018 December (CTET Eligibility Certificate & Marksheet).
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HpcerRequestCertificateParameters model module.
 * @module model/HpcerRequestCertificateParameters
 * @version 3.0.0
 */
class HpcerRequestCertificateParameters {
    /**
     * Constructs a new <code>HpcerRequestCertificateParameters</code>.
     * @alias module:model/HpcerRequestCertificateParameters
     * @param fullName {String} Full name
     * @param rollno {String} Roll No
     * @param year {String} Year
     */
    constructor(fullName, rollno, year) { 
        
        HpcerRequestCertificateParameters.initialize(this, fullName, rollno, year);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fullName, rollno, year) { 
        obj['FullName'] = fullName;
        obj['rollno'] = rollno;
        obj['year'] = year;
    }

    /**
     * Constructs a <code>HpcerRequestCertificateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HpcerRequestCertificateParameters} obj Optional instance to populate.
     * @return {module:model/HpcerRequestCertificateParameters} The populated <code>HpcerRequestCertificateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HpcerRequestCertificateParameters();

            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('rollno')) {
                obj['rollno'] = ApiClient.convertToType(data['rollno'], 'String');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HpcerRequestCertificateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HpcerRequestCertificateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HpcerRequestCertificateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }
        // ensure the json data is a string
        if (data['rollno'] && !(typeof data['rollno'] === 'string' || data['rollno'] instanceof String)) {
            throw new Error("Expected the field `rollno` to be a primitive type in the JSON string but got " + data['rollno']);
        }
        // ensure the json data is a string
        if (data['year'] && !(typeof data['year'] === 'string' || data['year'] instanceof String)) {
            throw new Error("Expected the field `year` to be a primitive type in the JSON string but got " + data['year']);
        }

        return true;
    }


}

HpcerRequestCertificateParameters.RequiredProperties = ["FullName", "rollno", "year"];

/**
 * Full name
 * @member {String} FullName
 */
HpcerRequestCertificateParameters.prototype['FullName'] = undefined;

/**
 * Roll No
 * @member {String} rollno
 */
HpcerRequestCertificateParameters.prototype['rollno'] = undefined;

/**
 * Year
 * @member {String} year
 */
HpcerRequestCertificateParameters.prototype['year'] = undefined;






export default HpcerRequestCertificateParameters;

