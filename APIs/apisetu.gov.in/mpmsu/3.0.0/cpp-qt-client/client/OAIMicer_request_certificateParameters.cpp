/**
 * Madhya Pradesh Medical Science University, Jabalpur M.P., Madhya Pradesh
 * Migration certificate issued from 2018 onward can now be fetched by Citizens in their DigiLocker account.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMicer_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMicer_request_certificateParameters::OAIMicer_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMicer_request_certificateParameters::OAIMicer_request_certificateParameters() {
    this->initializeModel();
}

OAIMicer_request_certificateParameters::~OAIMicer_request_certificateParameters() {}

void OAIMicer_request_certificateParameters::initializeModel() {

    m_appno_isSet = false;
    m_appno_isValid = false;

    m_date_of_birth_isSet = false;
    m_date_of_birth_isValid = false;

    m_enrolno_isSet = false;
    m_enrolno_isValid = false;

    m_rollno_isSet = false;
    m_rollno_isValid = false;
}

void OAIMicer_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMicer_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_appno_isValid = ::OpenAPI::fromJsonValue(m_appno, json[QString("APPNO")]);
    m_appno_isSet = !json[QString("APPNO")].isNull() && m_appno_isValid;

    m_date_of_birth_isValid = ::OpenAPI::fromJsonValue(m_date_of_birth, json[QString("Date_Of_Birth")]);
    m_date_of_birth_isSet = !json[QString("Date_Of_Birth")].isNull() && m_date_of_birth_isValid;

    m_enrolno_isValid = ::OpenAPI::fromJsonValue(m_enrolno, json[QString("ENROLNO")]);
    m_enrolno_isSet = !json[QString("ENROLNO")].isNull() && m_enrolno_isValid;

    m_rollno_isValid = ::OpenAPI::fromJsonValue(m_rollno, json[QString("ROLLNO")]);
    m_rollno_isSet = !json[QString("ROLLNO")].isNull() && m_rollno_isValid;
}

QString OAIMicer_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMicer_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_appno_isSet) {
        obj.insert(QString("APPNO"), ::OpenAPI::toJsonValue(m_appno));
    }
    if (m_date_of_birth_isSet) {
        obj.insert(QString("Date_Of_Birth"), ::OpenAPI::toJsonValue(m_date_of_birth));
    }
    if (m_enrolno_isSet) {
        obj.insert(QString("ENROLNO"), ::OpenAPI::toJsonValue(m_enrolno));
    }
    if (m_rollno_isSet) {
        obj.insert(QString("ROLLNO"), ::OpenAPI::toJsonValue(m_rollno));
    }
    return obj;
}

QString OAIMicer_request_certificateParameters::getAppno() const {
    return m_appno;
}
void OAIMicer_request_certificateParameters::setAppno(const QString &appno) {
    m_appno = appno;
    m_appno_isSet = true;
}

bool OAIMicer_request_certificateParameters::is_appno_Set() const{
    return m_appno_isSet;
}

bool OAIMicer_request_certificateParameters::is_appno_Valid() const{
    return m_appno_isValid;
}

QString OAIMicer_request_certificateParameters::getDateOfBirth() const {
    return m_date_of_birth;
}
void OAIMicer_request_certificateParameters::setDateOfBirth(const QString &date_of_birth) {
    m_date_of_birth = date_of_birth;
    m_date_of_birth_isSet = true;
}

bool OAIMicer_request_certificateParameters::is_date_of_birth_Set() const{
    return m_date_of_birth_isSet;
}

bool OAIMicer_request_certificateParameters::is_date_of_birth_Valid() const{
    return m_date_of_birth_isValid;
}

QString OAIMicer_request_certificateParameters::getEnrolno() const {
    return m_enrolno;
}
void OAIMicer_request_certificateParameters::setEnrolno(const QString &enrolno) {
    m_enrolno = enrolno;
    m_enrolno_isSet = true;
}

bool OAIMicer_request_certificateParameters::is_enrolno_Set() const{
    return m_enrolno_isSet;
}

bool OAIMicer_request_certificateParameters::is_enrolno_Valid() const{
    return m_enrolno_isValid;
}

QString OAIMicer_request_certificateParameters::getRollno() const {
    return m_rollno;
}
void OAIMicer_request_certificateParameters::setRollno(const QString &rollno) {
    m_rollno = rollno;
    m_rollno_isSet = true;
}

bool OAIMicer_request_certificateParameters::is_rollno_Set() const{
    return m_rollno_isSet;
}

bool OAIMicer_request_certificateParameters::is_rollno_Valid() const{
    return m_rollno_isValid;
}

bool OAIMicer_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_appno_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrolno_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollno_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMicer_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_appno_isValid && m_date_of_birth_isValid && m_enrolno_isValid && m_rollno_isValid && true;
}

} // namespace OpenAPI
