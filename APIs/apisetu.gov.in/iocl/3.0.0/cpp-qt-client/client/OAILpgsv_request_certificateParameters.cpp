/**
 * Ministry of Petroleum and Natural Gas (IOCL)
 * eSubscription Voucher for LPG connections provided by IOCL (https://www.iocl.com/) are made available to citizens in their DigiLocker accounts.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILpgsv_request_certificateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILpgsv_request_certificateParameters::OAILpgsv_request_certificateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILpgsv_request_certificateParameters::OAILpgsv_request_certificateParameters() {
    this->initializeModel();
}

OAILpgsv_request_certificateParameters::~OAILpgsv_request_certificateParameters() {}

void OAILpgsv_request_certificateParameters::initializeModel() {

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAILpgsv_request_certificateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILpgsv_request_certificateParameters::fromJsonObject(QJsonObject json) {

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("UID")]);
    m_uid_isSet = !json[QString("UID")].isNull() && m_uid_isValid;
}

QString OAILpgsv_request_certificateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILpgsv_request_certificateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_uid_isSet) {
        obj.insert(QString("UID"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

QString OAILpgsv_request_certificateParameters::getUid() const {
    return m_uid;
}
void OAILpgsv_request_certificateParameters::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAILpgsv_request_certificateParameters::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAILpgsv_request_certificateParameters::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAILpgsv_request_certificateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILpgsv_request_certificateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_uid_isValid && true;
}

} // namespace OpenAPI
