/**
 * defaultTitle
 * defaultDescription
 *
 * The version of the OpenAPI document: 0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_response_200_predictions.h
 *
 * 
 */

#ifndef OAIInline_response_200_predictions_H
#define OAIInline_response_200_predictions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInline_response_200_predictions : public OAIObject {
public:
    OAIInline_response_200_predictions();
    OAIInline_response_200_predictions(QString json);
    ~OAIInline_response_200_predictions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getR1girl() const;
    void setR1girl(const double &r_1girl);
    bool is_r_1girl_Set() const;
    bool is_r_1girl_Valid() const;

    double getAbs() const;
    void setAbs(const double &abs);
    bool is_abs_Set() const;
    bool is_abs_Valid() const;

    double getArtificialImages() const;
    void setArtificialImages(const double &artificial_images);
    bool is_artificial_images_Set() const;
    bool is_artificial_images_Valid() const;

    double getBikini() const;
    void setBikini(const double &bikini);
    bool is_bikini_Set() const;
    bool is_bikini_Valid() const;

    double getBlackBikini() const;
    void setBlackBikini(const double &black_bikini);
    bool is_black_bikini_Set() const;
    bool is_black_bikini_Valid() const;

    double getBlackHair() const;
    void setBlackHair(const double &black_hair);
    bool is_black_hair_Set() const;
    bool is_black_hair_Valid() const;

    double getBreasts() const;
    void setBreasts(const double &breasts);
    bool is_breasts_Set() const;
    bool is_breasts_Valid() const;

    double getChoker() const;
    void setChoker(const double &choker);
    bool is_choker_Set() const;
    bool is_choker_Valid() const;

    double getCompositionOneFemale() const;
    void setCompositionOneFemale(const double &composition_one_female);
    bool is_composition_one_female_Set() const;
    bool is_composition_one_female_Valid() const;

    double getDarkSkin() const;
    void setDarkSkin(const double &dark_skin);
    bool is_dark_skin_Set() const;
    bool is_dark_skin_Valid() const;

    double getDarkSkinnedFemale() const;
    void setDarkSkinnedFemale(const double &dark_skinned_female);
    bool is_dark_skinned_female_Set() const;
    bool is_dark_skinned_female_Valid() const;

    double getEnglishCommentary() const;
    void setEnglishCommentary(const double &english_commentary);
    bool is_english_commentary_Set() const;
    bool is_english_commentary_Valid() const;

    double getForehead() const;
    void setForehead(const double &forehead);
    bool is_forehead_Set() const;
    bool is_forehead_Valid() const;

    double getJewelry() const;
    void setJewelry(const double &jewelry);
    bool is_jewelry_Set() const;
    bool is_jewelry_Valid() const;

    double getLargeBreasts() const;
    void setLargeBreasts(const double &large_breasts);
    bool is_large_breasts_Set() const;
    bool is_large_breasts_Valid() const;

    double getLips() const;
    void setLips(const double &lips);
    bool is_lips_Set() const;
    bool is_lips_Valid() const;

    double getLongHair() const;
    void setLongHair(const double &long_hair);
    bool is_long_hair_Set() const;
    bool is_long_hair_Valid() const;

    double getLookingAtViewer() const;
    void setLookingAtViewer(const double &looking_at_viewer);
    bool is_looking_at_viewer_Set() const;
    bool is_looking_at_viewer_Valid() const;

    double getMuscular() const;
    void setMuscular(const double &muscular);
    bool is_muscular_Set() const;
    bool is_muscular_Valid() const;

    double getMuscularFemale() const;
    void setMuscularFemale(const double &muscular_female);
    bool is_muscular_female_Set() const;
    bool is_muscular_female_Valid() const;

    double getNavel() const;
    void setNavel(const double &navel);
    bool is_navel_Set() const;
    bool is_navel_Valid() const;

    double getOriginal() const;
    void setOriginal(const double &original);
    bool is_original_Set() const;
    bool is_original_Valid() const;

    double getPatreonUsername() const;
    void setPatreonUsername(const double &patreon_username);
    bool is_patreon_username_Set() const;
    bool is_patreon_username_Valid() const;

    double getSolo() const;
    void setSolo(const double &solo);
    bool is_solo_Set() const;
    bool is_solo_Valid() const;

    double getSwimsuit() const;
    void setSwimsuit(const double &swimsuit);
    bool is_swimsuit_Set() const;
    bool is_swimsuit_Valid() const;

    double getThighs() const;
    void setThighs(const double &thighs);
    bool is_thighs_Set() const;
    bool is_thighs_Valid() const;

    double getToned() const;
    void setToned(const double &toned);
    bool is_toned_Set() const;
    bool is_toned_Valid() const;

    double getUnsafe() const;
    void setUnsafe(const double &unsafe);
    bool is_unsafe_Set() const;
    bool is_unsafe_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_r_1girl;
    bool m_r_1girl_isSet;
    bool m_r_1girl_isValid;

    double m_abs;
    bool m_abs_isSet;
    bool m_abs_isValid;

    double m_artificial_images;
    bool m_artificial_images_isSet;
    bool m_artificial_images_isValid;

    double m_bikini;
    bool m_bikini_isSet;
    bool m_bikini_isValid;

    double m_black_bikini;
    bool m_black_bikini_isSet;
    bool m_black_bikini_isValid;

    double m_black_hair;
    bool m_black_hair_isSet;
    bool m_black_hair_isValid;

    double m_breasts;
    bool m_breasts_isSet;
    bool m_breasts_isValid;

    double m_choker;
    bool m_choker_isSet;
    bool m_choker_isValid;

    double m_composition_one_female;
    bool m_composition_one_female_isSet;
    bool m_composition_one_female_isValid;

    double m_dark_skin;
    bool m_dark_skin_isSet;
    bool m_dark_skin_isValid;

    double m_dark_skinned_female;
    bool m_dark_skinned_female_isSet;
    bool m_dark_skinned_female_isValid;

    double m_english_commentary;
    bool m_english_commentary_isSet;
    bool m_english_commentary_isValid;

    double m_forehead;
    bool m_forehead_isSet;
    bool m_forehead_isValid;

    double m_jewelry;
    bool m_jewelry_isSet;
    bool m_jewelry_isValid;

    double m_large_breasts;
    bool m_large_breasts_isSet;
    bool m_large_breasts_isValid;

    double m_lips;
    bool m_lips_isSet;
    bool m_lips_isValid;

    double m_long_hair;
    bool m_long_hair_isSet;
    bool m_long_hair_isValid;

    double m_looking_at_viewer;
    bool m_looking_at_viewer_isSet;
    bool m_looking_at_viewer_isValid;

    double m_muscular;
    bool m_muscular_isSet;
    bool m_muscular_isValid;

    double m_muscular_female;
    bool m_muscular_female_isSet;
    bool m_muscular_female_isValid;

    double m_navel;
    bool m_navel_isSet;
    bool m_navel_isValid;

    double m_original;
    bool m_original_isSet;
    bool m_original_isValid;

    double m_patreon_username;
    bool m_patreon_username_isSet;
    bool m_patreon_username_isValid;

    double m_solo;
    bool m_solo_isSet;
    bool m_solo_isValid;

    double m_swimsuit;
    bool m_swimsuit_isSet;
    bool m_swimsuit_isValid;

    double m_thighs;
    bool m_thighs_isSet;
    bool m_thighs_isValid;

    double m_toned;
    bool m_toned_isSet;
    bool m_toned_isValid;

    double m_unsafe;
    bool m_unsafe_isSet;
    bool m_unsafe_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInline_response_200_predictions)

#endif // OAIInline_response_200_predictions_H
