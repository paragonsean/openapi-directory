/**
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskQueueEnumTaskOrder from './TaskQueueEnumTaskOrder';

/**
 * The TaskrouterV1WorkspaceTaskQueue model module.
 * @module model/TaskrouterV1WorkspaceTaskQueue
 * @version 1.55.0
 */
class TaskrouterV1WorkspaceTaskQueue {
    /**
     * Constructs a new <code>TaskrouterV1WorkspaceTaskQueue</code>.
     * @alias module:model/TaskrouterV1WorkspaceTaskQueue
     */
    constructor() { 
        
        TaskrouterV1WorkspaceTaskQueue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskrouterV1WorkspaceTaskQueue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskrouterV1WorkspaceTaskQueue} obj Optional instance to populate.
     * @return {module:model/TaskrouterV1WorkspaceTaskQueue} The populated <code>TaskrouterV1WorkspaceTaskQueue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskrouterV1WorkspaceTaskQueue();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('assignment_activity_name')) {
                obj['assignment_activity_name'] = ApiClient.convertToType(data['assignment_activity_name'], 'String');
            }
            if (data.hasOwnProperty('assignment_activity_sid')) {
                obj['assignment_activity_sid'] = ApiClient.convertToType(data['assignment_activity_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('max_reserved_workers')) {
                obj['max_reserved_workers'] = ApiClient.convertToType(data['max_reserved_workers'], 'Number');
            }
            if (data.hasOwnProperty('reservation_activity_name')) {
                obj['reservation_activity_name'] = ApiClient.convertToType(data['reservation_activity_name'], 'String');
            }
            if (data.hasOwnProperty('reservation_activity_sid')) {
                obj['reservation_activity_sid'] = ApiClient.convertToType(data['reservation_activity_sid'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('target_workers')) {
                obj['target_workers'] = ApiClient.convertToType(data['target_workers'], 'String');
            }
            if (data.hasOwnProperty('task_order')) {
                obj['task_order'] = TaskQueueEnumTaskOrder.constructFromObject(data['task_order']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('workspace_sid')) {
                obj['workspace_sid'] = ApiClient.convertToType(data['workspace_sid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskrouterV1WorkspaceTaskQueue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskrouterV1WorkspaceTaskQueue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['assignment_activity_name'] && !(typeof data['assignment_activity_name'] === 'string' || data['assignment_activity_name'] instanceof String)) {
            throw new Error("Expected the field `assignment_activity_name` to be a primitive type in the JSON string but got " + data['assignment_activity_name']);
        }
        // ensure the json data is a string
        if (data['assignment_activity_sid'] && !(typeof data['assignment_activity_sid'] === 'string' || data['assignment_activity_sid'] instanceof String)) {
            throw new Error("Expected the field `assignment_activity_sid` to be a primitive type in the JSON string but got " + data['assignment_activity_sid']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['reservation_activity_name'] && !(typeof data['reservation_activity_name'] === 'string' || data['reservation_activity_name'] instanceof String)) {
            throw new Error("Expected the field `reservation_activity_name` to be a primitive type in the JSON string but got " + data['reservation_activity_name']);
        }
        // ensure the json data is a string
        if (data['reservation_activity_sid'] && !(typeof data['reservation_activity_sid'] === 'string' || data['reservation_activity_sid'] instanceof String)) {
            throw new Error("Expected the field `reservation_activity_sid` to be a primitive type in the JSON string but got " + data['reservation_activity_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['target_workers'] && !(typeof data['target_workers'] === 'string' || data['target_workers'] instanceof String)) {
            throw new Error("Expected the field `target_workers` to be a primitive type in the JSON string but got " + data['target_workers']);
        }
        // ensure the json data is a string
        if (data['task_order'] && !(typeof data['task_order'] === 'string' || data['task_order'] instanceof String)) {
            throw new Error("Expected the field `task_order` to be a primitive type in the JSON string but got " + data['task_order']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['workspace_sid'] && !(typeof data['workspace_sid'] === 'string' || data['workspace_sid'] instanceof String)) {
            throw new Error("Expected the field `workspace_sid` to be a primitive type in the JSON string but got " + data['workspace_sid']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.
 * @member {String} account_sid
 */
TaskrouterV1WorkspaceTaskQueue.prototype['account_sid'] = undefined;

/**
 * The name of the Activity to assign Workers when a task is assigned for them.
 * @member {String} assignment_activity_name
 */
TaskrouterV1WorkspaceTaskQueue.prototype['assignment_activity_name'] = undefined;

/**
 * The SID of the Activity to assign Workers when a task is assigned for them.
 * @member {String} assignment_activity_sid
 */
TaskrouterV1WorkspaceTaskQueue.prototype['assignment_activity_sid'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_created
 */
TaskrouterV1WorkspaceTaskQueue.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_updated
 */
TaskrouterV1WorkspaceTaskQueue.prototype['date_updated'] = undefined;

/**
 * The string that you assigned to describe the resource.
 * @member {String} friendly_name
 */
TaskrouterV1WorkspaceTaskQueue.prototype['friendly_name'] = undefined;

/**
 * The URLs of related resources.
 * @member {Object} links
 */
TaskrouterV1WorkspaceTaskQueue.prototype['links'] = undefined;

/**
 * The maximum number of Workers to reserve for the assignment of a task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.
 * @member {Number} max_reserved_workers
 */
TaskrouterV1WorkspaceTaskQueue.prototype['max_reserved_workers'] = undefined;

/**
 * The name of the Activity to assign Workers once a task is reserved for them.
 * @member {String} reservation_activity_name
 */
TaskrouterV1WorkspaceTaskQueue.prototype['reservation_activity_name'] = undefined;

/**
 * The SID of the Activity to assign Workers once a task is reserved for them.
 * @member {String} reservation_activity_sid
 */
TaskrouterV1WorkspaceTaskQueue.prototype['reservation_activity_sid'] = undefined;

/**
 * The unique string that we created to identify the TaskQueue resource.
 * @member {String} sid
 */
TaskrouterV1WorkspaceTaskQueue.prototype['sid'] = undefined;

/**
 * A string describing the Worker selection criteria for any Tasks that enter the TaskQueue. For example `'\"language\" == \"spanish\"'` If no TargetWorkers parameter is provided, Tasks will wait in the TaskQueue until they are either deleted or moved to another TaskQueue. Additional examples on how to describing Worker selection criteria below. Defaults to 1==1.
 * @member {String} target_workers
 */
TaskrouterV1WorkspaceTaskQueue.prototype['target_workers'] = undefined;

/**
 * @member {module:model/TaskQueueEnumTaskOrder} task_order
 */
TaskrouterV1WorkspaceTaskQueue.prototype['task_order'] = undefined;

/**
 * The absolute URL of the TaskQueue resource.
 * @member {String} url
 */
TaskrouterV1WorkspaceTaskQueue.prototype['url'] = undefined;

/**
 * The SID of the Workspace that contains the TaskQueue.
 * @member {String} workspace_sid
 */
TaskrouterV1WorkspaceTaskQueue.prototype['workspace_sid'] = undefined;






export default TaskrouterV1WorkspaceTaskQueue;

