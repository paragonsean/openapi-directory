/**
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaskrouterV1WorkspaceWorkflow model module.
 * @module model/TaskrouterV1WorkspaceWorkflow
 * @version 1.55.0
 */
class TaskrouterV1WorkspaceWorkflow {
    /**
     * Constructs a new <code>TaskrouterV1WorkspaceWorkflow</code>.
     * @alias module:model/TaskrouterV1WorkspaceWorkflow
     */
    constructor() { 
        
        TaskrouterV1WorkspaceWorkflow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskrouterV1WorkspaceWorkflow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskrouterV1WorkspaceWorkflow} obj Optional instance to populate.
     * @return {module:model/TaskrouterV1WorkspaceWorkflow} The populated <code>TaskrouterV1WorkspaceWorkflow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskrouterV1WorkspaceWorkflow();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('assignment_callback_url')) {
                obj['assignment_callback_url'] = ApiClient.convertToType(data['assignment_callback_url'], 'String');
            }
            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ApiClient.convertToType(data['configuration'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('document_content_type')) {
                obj['document_content_type'] = ApiClient.convertToType(data['document_content_type'], 'String');
            }
            if (data.hasOwnProperty('fallback_assignment_callback_url')) {
                obj['fallback_assignment_callback_url'] = ApiClient.convertToType(data['fallback_assignment_callback_url'], 'String');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('task_reservation_timeout')) {
                obj['task_reservation_timeout'] = ApiClient.convertToType(data['task_reservation_timeout'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('workspace_sid')) {
                obj['workspace_sid'] = ApiClient.convertToType(data['workspace_sid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskrouterV1WorkspaceWorkflow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskrouterV1WorkspaceWorkflow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['assignment_callback_url'] && !(typeof data['assignment_callback_url'] === 'string' || data['assignment_callback_url'] instanceof String)) {
            throw new Error("Expected the field `assignment_callback_url` to be a primitive type in the JSON string but got " + data['assignment_callback_url']);
        }
        // ensure the json data is a string
        if (data['configuration'] && !(typeof data['configuration'] === 'string' || data['configuration'] instanceof String)) {
            throw new Error("Expected the field `configuration` to be a primitive type in the JSON string but got " + data['configuration']);
        }
        // ensure the json data is a string
        if (data['document_content_type'] && !(typeof data['document_content_type'] === 'string' || data['document_content_type'] instanceof String)) {
            throw new Error("Expected the field `document_content_type` to be a primitive type in the JSON string but got " + data['document_content_type']);
        }
        // ensure the json data is a string
        if (data['fallback_assignment_callback_url'] && !(typeof data['fallback_assignment_callback_url'] === 'string' || data['fallback_assignment_callback_url'] instanceof String)) {
            throw new Error("Expected the field `fallback_assignment_callback_url` to be a primitive type in the JSON string but got " + data['fallback_assignment_callback_url']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['workspace_sid'] && !(typeof data['workspace_sid'] === 'string' || data['workspace_sid'] instanceof String)) {
            throw new Error("Expected the field `workspace_sid` to be a primitive type in the JSON string but got " + data['workspace_sid']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.
 * @member {String} account_sid
 */
TaskrouterV1WorkspaceWorkflow.prototype['account_sid'] = undefined;

/**
 * The URL that we call when a task managed by the Workflow is assigned to a Worker. See Assignment Callback URL for more information.
 * @member {String} assignment_callback_url
 */
TaskrouterV1WorkspaceWorkflow.prototype['assignment_callback_url'] = undefined;

/**
 * A JSON string that contains the Workflow's configuration. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.
 * @member {String} configuration
 */
TaskrouterV1WorkspaceWorkflow.prototype['configuration'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_created
 */
TaskrouterV1WorkspaceWorkflow.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_updated
 */
TaskrouterV1WorkspaceWorkflow.prototype['date_updated'] = undefined;

/**
 * The MIME type of the document.
 * @member {String} document_content_type
 */
TaskrouterV1WorkspaceWorkflow.prototype['document_content_type'] = undefined;

/**
 * The URL that we call when a call to the `assignment_callback_url` fails.
 * @member {String} fallback_assignment_callback_url
 */
TaskrouterV1WorkspaceWorkflow.prototype['fallback_assignment_callback_url'] = undefined;

/**
 * The string that you assigned to describe the Workflow resource. For example, `Customer Support` or `2014 Election Campaign`.
 * @member {String} friendly_name
 */
TaskrouterV1WorkspaceWorkflow.prototype['friendly_name'] = undefined;

/**
 * The URLs of related resources.
 * @member {Object} links
 */
TaskrouterV1WorkspaceWorkflow.prototype['links'] = undefined;

/**
 * The unique string that we created to identify the Workflow resource.
 * @member {String} sid
 */
TaskrouterV1WorkspaceWorkflow.prototype['sid'] = undefined;

/**
 * How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to `86,400` (24 hours) and the default is `120`.
 * @member {Number} task_reservation_timeout
 */
TaskrouterV1WorkspaceWorkflow.prototype['task_reservation_timeout'] = undefined;

/**
 * The absolute URL of the Workflow resource.
 * @member {String} url
 */
TaskrouterV1WorkspaceWorkflow.prototype['url'] = undefined;

/**
 * The SID of the Workspace that contains the Workflow.
 * @member {String} workspace_sid
 */
TaskrouterV1WorkspaceWorkflow.prototype['workspace_sid'] = undefined;






export default TaskrouterV1WorkspaceWorkflow;

