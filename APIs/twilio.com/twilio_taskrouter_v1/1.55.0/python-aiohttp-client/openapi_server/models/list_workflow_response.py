# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_workspace_response_meta import ListWorkspaceResponseMeta
from openapi_server.models.taskrouter_v1_workspace_workflow import TaskrouterV1WorkspaceWorkflow
from openapi_server import util


class ListWorkflowResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: ListWorkspaceResponseMeta=None, workflows: List[TaskrouterV1WorkspaceWorkflow]=None):
        """ListWorkflowResponse - a model defined in OpenAPI

        :param meta: The meta of this ListWorkflowResponse.
        :param workflows: The workflows of this ListWorkflowResponse.
        """
        self.openapi_types = {
            'meta': ListWorkspaceResponseMeta,
            'workflows': List[TaskrouterV1WorkspaceWorkflow]
        }

        self.attribute_map = {
            'meta': 'meta',
            'workflows': 'workflows'
        }

        self._meta = meta
        self._workflows = workflows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListWorkflowResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListWorkflowResponse of this ListWorkflowResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this ListWorkflowResponse.


        :return: The meta of this ListWorkflowResponse.
        :rtype: ListWorkspaceResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListWorkflowResponse.


        :param meta: The meta of this ListWorkflowResponse.
        :type meta: ListWorkspaceResponseMeta
        """

        self._meta = meta

    @property
    def workflows(self):
        """Gets the workflows of this ListWorkflowResponse.


        :return: The workflows of this ListWorkflowResponse.
        :rtype: List[TaskrouterV1WorkspaceWorkflow]
        """
        return self._workflows

    @workflows.setter
    def workflows(self, workflows):
        """Sets the workflows of this ListWorkflowResponse.


        :param workflows: The workflows of this ListWorkflowResponse.
        :type workflows: List[TaskrouterV1WorkspaceWorkflow]
        """

        self._workflows = workflows
