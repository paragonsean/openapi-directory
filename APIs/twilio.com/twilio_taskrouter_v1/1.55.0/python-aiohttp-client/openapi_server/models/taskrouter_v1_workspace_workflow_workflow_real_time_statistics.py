# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, longest_task_waiting_age: int=None, longest_task_waiting_sid: str=None, tasks_by_priority: object=None, tasks_by_status: object=None, total_tasks: int=None, url: str=None, workflow_sid: str=None, workspace_sid: str=None):
        """TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics - a model defined in OpenAPI

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :param longest_task_waiting_age: The longest_task_waiting_age of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :param longest_task_waiting_sid: The longest_task_waiting_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :param tasks_by_priority: The tasks_by_priority of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :param tasks_by_status: The tasks_by_status of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :param total_tasks: The total_tasks of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :param url: The url of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :param workflow_sid: The workflow_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        """
        self.openapi_types = {
            'account_sid': str,
            'longest_task_waiting_age': int,
            'longest_task_waiting_sid': str,
            'tasks_by_priority': object,
            'tasks_by_status': object,
            'total_tasks': int,
            'url': str,
            'workflow_sid': str,
            'workspace_sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'longest_task_waiting_age': 'longest_task_waiting_age',
            'longest_task_waiting_sid': 'longest_task_waiting_sid',
            'tasks_by_priority': 'tasks_by_priority',
            'tasks_by_status': 'tasks_by_status',
            'total_tasks': 'total_tasks',
            'url': 'url',
            'workflow_sid': 'workflow_sid',
            'workspace_sid': 'workspace_sid'
        }

        self._account_sid = account_sid
        self._longest_task_waiting_age = longest_task_waiting_age
        self._longest_task_waiting_sid = longest_task_waiting_sid
        self._tasks_by_priority = tasks_by_priority
        self._tasks_by_status = tasks_by_status
        self._total_tasks = total_tasks
        self._url = url
        self._workflow_sid = workflow_sid
        self._workspace_sid = workspace_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The taskrouter.v1.workspace.workflow.workflow_real_time_statistics of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.

        :return: The account_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def longest_task_waiting_age(self):
        """Gets the longest_task_waiting_age of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The age of the longest waiting Task.

        :return: The longest_task_waiting_age of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: int
        """
        return self._longest_task_waiting_age

    @longest_task_waiting_age.setter
    def longest_task_waiting_age(self, longest_task_waiting_age):
        """Sets the longest_task_waiting_age of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The age of the longest waiting Task.

        :param longest_task_waiting_age: The longest_task_waiting_age of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type longest_task_waiting_age: int
        """

        self._longest_task_waiting_age = longest_task_waiting_age

    @property
    def longest_task_waiting_sid(self):
        """Gets the longest_task_waiting_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The SID of the longest waiting Task.

        :return: The longest_task_waiting_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: str
        """
        return self._longest_task_waiting_sid

    @longest_task_waiting_sid.setter
    def longest_task_waiting_sid(self, longest_task_waiting_sid):
        """Sets the longest_task_waiting_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The SID of the longest waiting Task.

        :param longest_task_waiting_sid: The longest_task_waiting_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type longest_task_waiting_sid: str
        """
        if longest_task_waiting_sid is not None and len(longest_task_waiting_sid) > 34:
            raise ValueError("Invalid value for `longest_task_waiting_sid`, length must be less than or equal to `34`")
        if longest_task_waiting_sid is not None and len(longest_task_waiting_sid) < 34:
            raise ValueError("Invalid value for `longest_task_waiting_sid`, length must be greater than or equal to `34`")
        if longest_task_waiting_sid is not None and not re.search(r'^WT[0-9a-fA-F]{32}$', longest_task_waiting_sid):
            raise ValueError("Invalid value for `longest_task_waiting_sid`, must be a follow pattern or equal to `/^WT[0-9a-fA-F]{32}$/`")

        self._longest_task_waiting_sid = longest_task_waiting_sid

    @property
    def tasks_by_priority(self):
        """Gets the tasks_by_priority of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The number of Tasks by priority. For example: `{\"0\": \"10\", \"99\": \"5\"}` shows 10 Tasks at priority 0 and 5 at priority 99.

        :return: The tasks_by_priority of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: object
        """
        return self._tasks_by_priority

    @tasks_by_priority.setter
    def tasks_by_priority(self, tasks_by_priority):
        """Sets the tasks_by_priority of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The number of Tasks by priority. For example: `{\"0\": \"10\", \"99\": \"5\"}` shows 10 Tasks at priority 0 and 5 at priority 99.

        :param tasks_by_priority: The tasks_by_priority of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type tasks_by_priority: object
        """

        self._tasks_by_priority = tasks_by_priority

    @property
    def tasks_by_status(self):
        """Gets the tasks_by_status of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The number of Tasks by their current status. For example: `{\"pending\": \"1\", \"reserved\": \"3\", \"assigned\": \"2\", \"completed\": \"5\"}`.

        :return: The tasks_by_status of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: object
        """
        return self._tasks_by_status

    @tasks_by_status.setter
    def tasks_by_status(self, tasks_by_status):
        """Sets the tasks_by_status of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The number of Tasks by their current status. For example: `{\"pending\": \"1\", \"reserved\": \"3\", \"assigned\": \"2\", \"completed\": \"5\"}`.

        :param tasks_by_status: The tasks_by_status of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type tasks_by_status: object
        """

        self._tasks_by_status = tasks_by_status

    @property
    def total_tasks(self):
        """Gets the total_tasks of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The total number of Tasks.

        :return: The total_tasks of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: int
        """
        return self._total_tasks

    @total_tasks.setter
    def total_tasks(self, total_tasks):
        """Sets the total_tasks of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The total number of Tasks.

        :param total_tasks: The total_tasks of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type total_tasks: int
        """

        self._total_tasks = total_tasks

    @property
    def url(self):
        """Gets the url of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The absolute URL of the Workflow statistics resource.

        :return: The url of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The absolute URL of the Workflow statistics resource.

        :param url: The url of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type url: str
        """

        self._url = url

    @property
    def workflow_sid(self):
        """Gets the workflow_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        Returns the list of Tasks that are being controlled by the Workflow with the specified SID value.

        :return: The workflow_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: str
        """
        return self._workflow_sid

    @workflow_sid.setter
    def workflow_sid(self, workflow_sid):
        """Sets the workflow_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        Returns the list of Tasks that are being controlled by the Workflow with the specified SID value.

        :param workflow_sid: The workflow_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type workflow_sid: str
        """
        if workflow_sid is not None and len(workflow_sid) > 34:
            raise ValueError("Invalid value for `workflow_sid`, length must be less than or equal to `34`")
        if workflow_sid is not None and len(workflow_sid) < 34:
            raise ValueError("Invalid value for `workflow_sid`, length must be greater than or equal to `34`")
        if workflow_sid is not None and not re.search(r'^WW[0-9a-fA-F]{32}$', workflow_sid):
            raise ValueError("Invalid value for `workflow_sid`, must be a follow pattern or equal to `/^WW[0-9a-fA-F]{32}$/`")

        self._workflow_sid = workflow_sid

    @property
    def workspace_sid(self):
        """Gets the workspace_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The SID of the Workspace that contains the Workflow.

        :return: The workspace_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :rtype: str
        """
        return self._workspace_sid

    @workspace_sid.setter
    def workspace_sid(self, workspace_sid):
        """Sets the workspace_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.

        The SID of the Workspace that contains the Workflow.

        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics.
        :type workspace_sid: str
        """
        if workspace_sid is not None and len(workspace_sid) > 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be less than or equal to `34`")
        if workspace_sid is not None and len(workspace_sid) < 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be greater than or equal to `34`")
        if workspace_sid is not None and not re.search(r'^WS[0-9a-fA-F]{32}$', workspace_sid):
            raise ValueError("Invalid value for `workspace_sid`, must be a follow pattern or equal to `/^WS[0-9a-fA-F]{32}$/`")

        self._workspace_sid = workspace_sid
