# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, task_queue_data: List[object]=None, task_queue_response_count: int=None, url: str=None, workspace_sid: str=None):
        """TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics - a model defined in OpenAPI

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :param task_queue_data: The task_queue_data of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :param task_queue_response_count: The task_queue_response_count of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :param url: The url of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        """
        self.openapi_types = {
            'account_sid': str,
            'task_queue_data': List[object],
            'task_queue_response_count': int,
            'url': str,
            'workspace_sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'task_queue_data': 'task_queue_data',
            'task_queue_response_count': 'task_queue_response_count',
            'url': 'url',
            'workspace_sid': 'workspace_sid'
        }

        self._account_sid = account_sid
        self._task_queue_data = task_queue_data
        self._task_queue_response_count = task_queue_response_count
        self._url = url
        self._workspace_sid = workspace_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The taskrouter.v1.workspace.task_queue.task_queue_bulk_real_time_statistics of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.

        :return: The account_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def task_queue_data(self):
        """Gets the task_queue_data of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The real-time statistics for each requested TaskQueue SID. `task_queue_data` returns the following attributes:  `task_queue_sid`: The SID of the TaskQueue from which these statistics were calculated.  `total_available_workers`: The total number of Workers available for Tasks in the TaskQueue.  `total_eligible_workers`: The total number of Workers eligible for Tasks in the TaskQueue, regardless of their Activity state.  `total_tasks`: The total number of Tasks.  `longest_task_waiting_age`: The age of the longest waiting Task.  `longest_task_waiting_sid`: The SID of the longest waiting Task.  `tasks_by_status`: The number of Tasks grouped by their current status.  `tasks_by_priority`: The number of Tasks grouped by priority.  `activity_statistics`: The number of current Workers grouped by Activity. 

        :return: The task_queue_data of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :rtype: List[object]
        """
        return self._task_queue_data

    @task_queue_data.setter
    def task_queue_data(self, task_queue_data):
        """Sets the task_queue_data of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The real-time statistics for each requested TaskQueue SID. `task_queue_data` returns the following attributes:  `task_queue_sid`: The SID of the TaskQueue from which these statistics were calculated.  `total_available_workers`: The total number of Workers available for Tasks in the TaskQueue.  `total_eligible_workers`: The total number of Workers eligible for Tasks in the TaskQueue, regardless of their Activity state.  `total_tasks`: The total number of Tasks.  `longest_task_waiting_age`: The age of the longest waiting Task.  `longest_task_waiting_sid`: The SID of the longest waiting Task.  `tasks_by_status`: The number of Tasks grouped by their current status.  `tasks_by_priority`: The number of Tasks grouped by priority.  `activity_statistics`: The number of current Workers grouped by Activity. 

        :param task_queue_data: The task_queue_data of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :type task_queue_data: List[object]
        """

        self._task_queue_data = task_queue_data

    @property
    def task_queue_response_count(self):
        """Gets the task_queue_response_count of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The number of TaskQueue statistics received in task_queue_data.

        :return: The task_queue_response_count of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :rtype: int
        """
        return self._task_queue_response_count

    @task_queue_response_count.setter
    def task_queue_response_count(self, task_queue_response_count):
        """Sets the task_queue_response_count of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The number of TaskQueue statistics received in task_queue_data.

        :param task_queue_response_count: The task_queue_response_count of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :type task_queue_response_count: int
        """

        self._task_queue_response_count = task_queue_response_count

    @property
    def url(self):
        """Gets the url of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The absolute URL of the TaskQueue statistics resource.

        :return: The url of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The absolute URL of the TaskQueue statistics resource.

        :param url: The url of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :type url: str
        """

        self._url = url

    @property
    def workspace_sid(self):
        """Gets the workspace_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The SID of the Workspace that contains the TaskQueue.

        :return: The workspace_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :rtype: str
        """
        return self._workspace_sid

    @workspace_sid.setter
    def workspace_sid(self, workspace_sid):
        """Sets the workspace_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.

        The SID of the Workspace that contains the TaskQueue.

        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.
        :type workspace_sid: str
        """
        if workspace_sid is not None and len(workspace_sid) > 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be less than or equal to `34`")
        if workspace_sid is not None and len(workspace_sid) < 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be greater than or equal to `34`")
        if workspace_sid is not None and not re.search(r'^WS[0-9a-fA-F]{32}$', workspace_sid):
            raise ValueError("Invalid value for `workspace_sid`, must be a follow pattern or equal to `/^WS[0-9a-fA-F]{32}$/`")

        self._workspace_sid = workspace_sid
