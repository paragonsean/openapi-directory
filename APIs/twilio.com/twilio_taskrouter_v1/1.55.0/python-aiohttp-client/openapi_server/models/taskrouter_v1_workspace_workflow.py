# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class TaskrouterV1WorkspaceWorkflow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, assignment_callback_url: str=None, configuration: str=None, date_created: datetime=None, date_updated: datetime=None, document_content_type: str=None, fallback_assignment_callback_url: str=None, friendly_name: str=None, links: object=None, sid: str=None, task_reservation_timeout: int=None, url: str=None, workspace_sid: str=None):
        """TaskrouterV1WorkspaceWorkflow - a model defined in OpenAPI

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceWorkflow.
        :param assignment_callback_url: The assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.
        :param configuration: The configuration of this TaskrouterV1WorkspaceWorkflow.
        :param date_created: The date_created of this TaskrouterV1WorkspaceWorkflow.
        :param date_updated: The date_updated of this TaskrouterV1WorkspaceWorkflow.
        :param document_content_type: The document_content_type of this TaskrouterV1WorkspaceWorkflow.
        :param fallback_assignment_callback_url: The fallback_assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.
        :param friendly_name: The friendly_name of this TaskrouterV1WorkspaceWorkflow.
        :param links: The links of this TaskrouterV1WorkspaceWorkflow.
        :param sid: The sid of this TaskrouterV1WorkspaceWorkflow.
        :param task_reservation_timeout: The task_reservation_timeout of this TaskrouterV1WorkspaceWorkflow.
        :param url: The url of this TaskrouterV1WorkspaceWorkflow.
        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceWorkflow.
        """
        self.openapi_types = {
            'account_sid': str,
            'assignment_callback_url': str,
            'configuration': str,
            'date_created': datetime,
            'date_updated': datetime,
            'document_content_type': str,
            'fallback_assignment_callback_url': str,
            'friendly_name': str,
            'links': object,
            'sid': str,
            'task_reservation_timeout': int,
            'url': str,
            'workspace_sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'assignment_callback_url': 'assignment_callback_url',
            'configuration': 'configuration',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'document_content_type': 'document_content_type',
            'fallback_assignment_callback_url': 'fallback_assignment_callback_url',
            'friendly_name': 'friendly_name',
            'links': 'links',
            'sid': 'sid',
            'task_reservation_timeout': 'task_reservation_timeout',
            'url': 'url',
            'workspace_sid': 'workspace_sid'
        }

        self._account_sid = account_sid
        self._assignment_callback_url = assignment_callback_url
        self._configuration = configuration
        self._date_created = date_created
        self._date_updated = date_updated
        self._document_content_type = document_content_type
        self._fallback_assignment_callback_url = fallback_assignment_callback_url
        self._friendly_name = friendly_name
        self._links = links
        self._sid = sid
        self._task_reservation_timeout = task_reservation_timeout
        self._url = url
        self._workspace_sid = workspace_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskrouterV1WorkspaceWorkflow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The taskrouter.v1.workspace.workflow of this TaskrouterV1WorkspaceWorkflow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this TaskrouterV1WorkspaceWorkflow.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.

        :return: The account_sid of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this TaskrouterV1WorkspaceWorkflow.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceWorkflow.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def assignment_callback_url(self):
        """Gets the assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.

        The URL that we call when a task managed by the Workflow is assigned to a Worker. See Assignment Callback URL for more information.

        :return: The assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._assignment_callback_url

    @assignment_callback_url.setter
    def assignment_callback_url(self, assignment_callback_url):
        """Sets the assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.

        The URL that we call when a task managed by the Workflow is assigned to a Worker. See Assignment Callback URL for more information.

        :param assignment_callback_url: The assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.
        :type assignment_callback_url: str
        """

        self._assignment_callback_url = assignment_callback_url

    @property
    def configuration(self):
        """Gets the configuration of this TaskrouterV1WorkspaceWorkflow.

        A JSON string that contains the Workflow's configuration. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.

        :return: The configuration of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this TaskrouterV1WorkspaceWorkflow.

        A JSON string that contains the Workflow's configuration. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.

        :param configuration: The configuration of this TaskrouterV1WorkspaceWorkflow.
        :type configuration: str
        """

        self._configuration = configuration

    @property
    def date_created(self):
        """Gets the date_created of this TaskrouterV1WorkspaceWorkflow.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this TaskrouterV1WorkspaceWorkflow.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this TaskrouterV1WorkspaceWorkflow.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this TaskrouterV1WorkspaceWorkflow.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this TaskrouterV1WorkspaceWorkflow.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this TaskrouterV1WorkspaceWorkflow.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this TaskrouterV1WorkspaceWorkflow.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this TaskrouterV1WorkspaceWorkflow.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def document_content_type(self):
        """Gets the document_content_type of this TaskrouterV1WorkspaceWorkflow.

        The MIME type of the document.

        :return: The document_content_type of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._document_content_type

    @document_content_type.setter
    def document_content_type(self, document_content_type):
        """Sets the document_content_type of this TaskrouterV1WorkspaceWorkflow.

        The MIME type of the document.

        :param document_content_type: The document_content_type of this TaskrouterV1WorkspaceWorkflow.
        :type document_content_type: str
        """

        self._document_content_type = document_content_type

    @property
    def fallback_assignment_callback_url(self):
        """Gets the fallback_assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.

        The URL that we call when a call to the `assignment_callback_url` fails.

        :return: The fallback_assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._fallback_assignment_callback_url

    @fallback_assignment_callback_url.setter
    def fallback_assignment_callback_url(self, fallback_assignment_callback_url):
        """Sets the fallback_assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.

        The URL that we call when a call to the `assignment_callback_url` fails.

        :param fallback_assignment_callback_url: The fallback_assignment_callback_url of this TaskrouterV1WorkspaceWorkflow.
        :type fallback_assignment_callback_url: str
        """

        self._fallback_assignment_callback_url = fallback_assignment_callback_url

    @property
    def friendly_name(self):
        """Gets the friendly_name of this TaskrouterV1WorkspaceWorkflow.

        The string that you assigned to describe the Workflow resource. For example, `Customer Support` or `2014 Election Campaign`.

        :return: The friendly_name of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this TaskrouterV1WorkspaceWorkflow.

        The string that you assigned to describe the Workflow resource. For example, `Customer Support` or `2014 Election Campaign`.

        :param friendly_name: The friendly_name of this TaskrouterV1WorkspaceWorkflow.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def links(self):
        """Gets the links of this TaskrouterV1WorkspaceWorkflow.

        The URLs of related resources.

        :return: The links of this TaskrouterV1WorkspaceWorkflow.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this TaskrouterV1WorkspaceWorkflow.

        The URLs of related resources.

        :param links: The links of this TaskrouterV1WorkspaceWorkflow.
        :type links: object
        """

        self._links = links

    @property
    def sid(self):
        """Gets the sid of this TaskrouterV1WorkspaceWorkflow.

        The unique string that we created to identify the Workflow resource.

        :return: The sid of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this TaskrouterV1WorkspaceWorkflow.

        The unique string that we created to identify the Workflow resource.

        :param sid: The sid of this TaskrouterV1WorkspaceWorkflow.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^WW[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^WW[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def task_reservation_timeout(self):
        """Gets the task_reservation_timeout of this TaskrouterV1WorkspaceWorkflow.

        How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to `86,400` (24 hours) and the default is `120`.

        :return: The task_reservation_timeout of this TaskrouterV1WorkspaceWorkflow.
        :rtype: int
        """
        return self._task_reservation_timeout

    @task_reservation_timeout.setter
    def task_reservation_timeout(self, task_reservation_timeout):
        """Sets the task_reservation_timeout of this TaskrouterV1WorkspaceWorkflow.

        How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to `86,400` (24 hours) and the default is `120`.

        :param task_reservation_timeout: The task_reservation_timeout of this TaskrouterV1WorkspaceWorkflow.
        :type task_reservation_timeout: int
        """

        self._task_reservation_timeout = task_reservation_timeout

    @property
    def url(self):
        """Gets the url of this TaskrouterV1WorkspaceWorkflow.

        The absolute URL of the Workflow resource.

        :return: The url of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TaskrouterV1WorkspaceWorkflow.

        The absolute URL of the Workflow resource.

        :param url: The url of this TaskrouterV1WorkspaceWorkflow.
        :type url: str
        """

        self._url = url

    @property
    def workspace_sid(self):
        """Gets the workspace_sid of this TaskrouterV1WorkspaceWorkflow.

        The SID of the Workspace that contains the Workflow.

        :return: The workspace_sid of this TaskrouterV1WorkspaceWorkflow.
        :rtype: str
        """
        return self._workspace_sid

    @workspace_sid.setter
    def workspace_sid(self, workspace_sid):
        """Sets the workspace_sid of this TaskrouterV1WorkspaceWorkflow.

        The SID of the Workspace that contains the Workflow.

        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceWorkflow.
        :type workspace_sid: str
        """
        if workspace_sid is not None and len(workspace_sid) > 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be less than or equal to `34`")
        if workspace_sid is not None and len(workspace_sid) < 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be greater than or equal to `34`")
        if workspace_sid is not None and not re.search(r'^WS[0-9a-fA-F]{32}$', workspace_sid):
            raise ValueError("Invalid value for `workspace_sid`, must be a follow pattern or equal to `/^WS[0-9a-fA-F]{32}$/`")

        self._workspace_sid = workspace_sid
