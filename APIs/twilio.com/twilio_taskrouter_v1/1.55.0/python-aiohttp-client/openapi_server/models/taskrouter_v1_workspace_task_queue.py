# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_queue_enum_task_order import TaskQueueEnumTaskOrder
import re
from openapi_server import util


class TaskrouterV1WorkspaceTaskQueue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, assignment_activity_name: str=None, assignment_activity_sid: str=None, date_created: datetime=None, date_updated: datetime=None, friendly_name: str=None, links: object=None, max_reserved_workers: int=None, reservation_activity_name: str=None, reservation_activity_sid: str=None, sid: str=None, target_workers: str=None, task_order: TaskQueueEnumTaskOrder=None, url: str=None, workspace_sid: str=None):
        """TaskrouterV1WorkspaceTaskQueue - a model defined in OpenAPI

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceTaskQueue.
        :param assignment_activity_name: The assignment_activity_name of this TaskrouterV1WorkspaceTaskQueue.
        :param assignment_activity_sid: The assignment_activity_sid of this TaskrouterV1WorkspaceTaskQueue.
        :param date_created: The date_created of this TaskrouterV1WorkspaceTaskQueue.
        :param date_updated: The date_updated of this TaskrouterV1WorkspaceTaskQueue.
        :param friendly_name: The friendly_name of this TaskrouterV1WorkspaceTaskQueue.
        :param links: The links of this TaskrouterV1WorkspaceTaskQueue.
        :param max_reserved_workers: The max_reserved_workers of this TaskrouterV1WorkspaceTaskQueue.
        :param reservation_activity_name: The reservation_activity_name of this TaskrouterV1WorkspaceTaskQueue.
        :param reservation_activity_sid: The reservation_activity_sid of this TaskrouterV1WorkspaceTaskQueue.
        :param sid: The sid of this TaskrouterV1WorkspaceTaskQueue.
        :param target_workers: The target_workers of this TaskrouterV1WorkspaceTaskQueue.
        :param task_order: The task_order of this TaskrouterV1WorkspaceTaskQueue.
        :param url: The url of this TaskrouterV1WorkspaceTaskQueue.
        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceTaskQueue.
        """
        self.openapi_types = {
            'account_sid': str,
            'assignment_activity_name': str,
            'assignment_activity_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'friendly_name': str,
            'links': object,
            'max_reserved_workers': int,
            'reservation_activity_name': str,
            'reservation_activity_sid': str,
            'sid': str,
            'target_workers': str,
            'task_order': TaskQueueEnumTaskOrder,
            'url': str,
            'workspace_sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'assignment_activity_name': 'assignment_activity_name',
            'assignment_activity_sid': 'assignment_activity_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'links': 'links',
            'max_reserved_workers': 'max_reserved_workers',
            'reservation_activity_name': 'reservation_activity_name',
            'reservation_activity_sid': 'reservation_activity_sid',
            'sid': 'sid',
            'target_workers': 'target_workers',
            'task_order': 'task_order',
            'url': 'url',
            'workspace_sid': 'workspace_sid'
        }

        self._account_sid = account_sid
        self._assignment_activity_name = assignment_activity_name
        self._assignment_activity_sid = assignment_activity_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._links = links
        self._max_reserved_workers = max_reserved_workers
        self._reservation_activity_name = reservation_activity_name
        self._reservation_activity_sid = reservation_activity_sid
        self._sid = sid
        self._target_workers = target_workers
        self._task_order = task_order
        self._url = url
        self._workspace_sid = workspace_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskrouterV1WorkspaceTaskQueue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The taskrouter.v1.workspace.task_queue of this TaskrouterV1WorkspaceTaskQueue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this TaskrouterV1WorkspaceTaskQueue.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.

        :return: The account_sid of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this TaskrouterV1WorkspaceTaskQueue.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceTaskQueue.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def assignment_activity_name(self):
        """Gets the assignment_activity_name of this TaskrouterV1WorkspaceTaskQueue.

        The name of the Activity to assign Workers when a task is assigned for them.

        :return: The assignment_activity_name of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._assignment_activity_name

    @assignment_activity_name.setter
    def assignment_activity_name(self, assignment_activity_name):
        """Sets the assignment_activity_name of this TaskrouterV1WorkspaceTaskQueue.

        The name of the Activity to assign Workers when a task is assigned for them.

        :param assignment_activity_name: The assignment_activity_name of this TaskrouterV1WorkspaceTaskQueue.
        :type assignment_activity_name: str
        """

        self._assignment_activity_name = assignment_activity_name

    @property
    def assignment_activity_sid(self):
        """Gets the assignment_activity_sid of this TaskrouterV1WorkspaceTaskQueue.

        The SID of the Activity to assign Workers when a task is assigned for them.

        :return: The assignment_activity_sid of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._assignment_activity_sid

    @assignment_activity_sid.setter
    def assignment_activity_sid(self, assignment_activity_sid):
        """Sets the assignment_activity_sid of this TaskrouterV1WorkspaceTaskQueue.

        The SID of the Activity to assign Workers when a task is assigned for them.

        :param assignment_activity_sid: The assignment_activity_sid of this TaskrouterV1WorkspaceTaskQueue.
        :type assignment_activity_sid: str
        """
        if assignment_activity_sid is not None and len(assignment_activity_sid) > 34:
            raise ValueError("Invalid value for `assignment_activity_sid`, length must be less than or equal to `34`")
        if assignment_activity_sid is not None and len(assignment_activity_sid) < 34:
            raise ValueError("Invalid value for `assignment_activity_sid`, length must be greater than or equal to `34`")
        if assignment_activity_sid is not None and not re.search(r'^WA[0-9a-fA-F]{32}$', assignment_activity_sid):
            raise ValueError("Invalid value for `assignment_activity_sid`, must be a follow pattern or equal to `/^WA[0-9a-fA-F]{32}$/`")

        self._assignment_activity_sid = assignment_activity_sid

    @property
    def date_created(self):
        """Gets the date_created of this TaskrouterV1WorkspaceTaskQueue.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this TaskrouterV1WorkspaceTaskQueue.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this TaskrouterV1WorkspaceTaskQueue.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this TaskrouterV1WorkspaceTaskQueue.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this TaskrouterV1WorkspaceTaskQueue.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this TaskrouterV1WorkspaceTaskQueue.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this TaskrouterV1WorkspaceTaskQueue.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this TaskrouterV1WorkspaceTaskQueue.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this TaskrouterV1WorkspaceTaskQueue.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def links(self):
        """Gets the links of this TaskrouterV1WorkspaceTaskQueue.

        The URLs of related resources.

        :return: The links of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this TaskrouterV1WorkspaceTaskQueue.

        The URLs of related resources.

        :param links: The links of this TaskrouterV1WorkspaceTaskQueue.
        :type links: object
        """

        self._links = links

    @property
    def max_reserved_workers(self):
        """Gets the max_reserved_workers of this TaskrouterV1WorkspaceTaskQueue.

        The maximum number of Workers to reserve for the assignment of a task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.

        :return: The max_reserved_workers of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: int
        """
        return self._max_reserved_workers

    @max_reserved_workers.setter
    def max_reserved_workers(self, max_reserved_workers):
        """Sets the max_reserved_workers of this TaskrouterV1WorkspaceTaskQueue.

        The maximum number of Workers to reserve for the assignment of a task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.

        :param max_reserved_workers: The max_reserved_workers of this TaskrouterV1WorkspaceTaskQueue.
        :type max_reserved_workers: int
        """

        self._max_reserved_workers = max_reserved_workers

    @property
    def reservation_activity_name(self):
        """Gets the reservation_activity_name of this TaskrouterV1WorkspaceTaskQueue.

        The name of the Activity to assign Workers once a task is reserved for them.

        :return: The reservation_activity_name of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._reservation_activity_name

    @reservation_activity_name.setter
    def reservation_activity_name(self, reservation_activity_name):
        """Sets the reservation_activity_name of this TaskrouterV1WorkspaceTaskQueue.

        The name of the Activity to assign Workers once a task is reserved for them.

        :param reservation_activity_name: The reservation_activity_name of this TaskrouterV1WorkspaceTaskQueue.
        :type reservation_activity_name: str
        """

        self._reservation_activity_name = reservation_activity_name

    @property
    def reservation_activity_sid(self):
        """Gets the reservation_activity_sid of this TaskrouterV1WorkspaceTaskQueue.

        The SID of the Activity to assign Workers once a task is reserved for them.

        :return: The reservation_activity_sid of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._reservation_activity_sid

    @reservation_activity_sid.setter
    def reservation_activity_sid(self, reservation_activity_sid):
        """Sets the reservation_activity_sid of this TaskrouterV1WorkspaceTaskQueue.

        The SID of the Activity to assign Workers once a task is reserved for them.

        :param reservation_activity_sid: The reservation_activity_sid of this TaskrouterV1WorkspaceTaskQueue.
        :type reservation_activity_sid: str
        """
        if reservation_activity_sid is not None and len(reservation_activity_sid) > 34:
            raise ValueError("Invalid value for `reservation_activity_sid`, length must be less than or equal to `34`")
        if reservation_activity_sid is not None and len(reservation_activity_sid) < 34:
            raise ValueError("Invalid value for `reservation_activity_sid`, length must be greater than or equal to `34`")
        if reservation_activity_sid is not None and not re.search(r'^WA[0-9a-fA-F]{32}$', reservation_activity_sid):
            raise ValueError("Invalid value for `reservation_activity_sid`, must be a follow pattern or equal to `/^WA[0-9a-fA-F]{32}$/`")

        self._reservation_activity_sid = reservation_activity_sid

    @property
    def sid(self):
        """Gets the sid of this TaskrouterV1WorkspaceTaskQueue.

        The unique string that we created to identify the TaskQueue resource.

        :return: The sid of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this TaskrouterV1WorkspaceTaskQueue.

        The unique string that we created to identify the TaskQueue resource.

        :param sid: The sid of this TaskrouterV1WorkspaceTaskQueue.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^WQ[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^WQ[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def target_workers(self):
        """Gets the target_workers of this TaskrouterV1WorkspaceTaskQueue.

        A string describing the Worker selection criteria for any Tasks that enter the TaskQueue. For example `'\"language\" == \"spanish\"'` If no TargetWorkers parameter is provided, Tasks will wait in the TaskQueue until they are either deleted or moved to another TaskQueue. Additional examples on how to describing Worker selection criteria below. Defaults to 1==1.

        :return: The target_workers of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._target_workers

    @target_workers.setter
    def target_workers(self, target_workers):
        """Sets the target_workers of this TaskrouterV1WorkspaceTaskQueue.

        A string describing the Worker selection criteria for any Tasks that enter the TaskQueue. For example `'\"language\" == \"spanish\"'` If no TargetWorkers parameter is provided, Tasks will wait in the TaskQueue until they are either deleted or moved to another TaskQueue. Additional examples on how to describing Worker selection criteria below. Defaults to 1==1.

        :param target_workers: The target_workers of this TaskrouterV1WorkspaceTaskQueue.
        :type target_workers: str
        """

        self._target_workers = target_workers

    @property
    def task_order(self):
        """Gets the task_order of this TaskrouterV1WorkspaceTaskQueue.


        :return: The task_order of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: TaskQueueEnumTaskOrder
        """
        return self._task_order

    @task_order.setter
    def task_order(self, task_order):
        """Sets the task_order of this TaskrouterV1WorkspaceTaskQueue.


        :param task_order: The task_order of this TaskrouterV1WorkspaceTaskQueue.
        :type task_order: TaskQueueEnumTaskOrder
        """

        self._task_order = task_order

    @property
    def url(self):
        """Gets the url of this TaskrouterV1WorkspaceTaskQueue.

        The absolute URL of the TaskQueue resource.

        :return: The url of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TaskrouterV1WorkspaceTaskQueue.

        The absolute URL of the TaskQueue resource.

        :param url: The url of this TaskrouterV1WorkspaceTaskQueue.
        :type url: str
        """

        self._url = url

    @property
    def workspace_sid(self):
        """Gets the workspace_sid of this TaskrouterV1WorkspaceTaskQueue.

        The SID of the Workspace that contains the TaskQueue.

        :return: The workspace_sid of this TaskrouterV1WorkspaceTaskQueue.
        :rtype: str
        """
        return self._workspace_sid

    @workspace_sid.setter
    def workspace_sid(self, workspace_sid):
        """Sets the workspace_sid of this TaskrouterV1WorkspaceTaskQueue.

        The SID of the Workspace that contains the TaskQueue.

        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceTaskQueue.
        :type workspace_sid: str
        """
        if workspace_sid is not None and len(workspace_sid) > 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be less than or equal to `34`")
        if workspace_sid is not None and len(workspace_sid) < 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be greater than or equal to `34`")
        if workspace_sid is not None and not re.search(r'^WS[0-9a-fA-F]{32}$', workspace_sid):
            raise ValueError("Invalid value for `workspace_sid`, must be a follow pattern or equal to `/^WS[0-9a-fA-F]{32}$/`")

        self._workspace_sid = workspace_sid
