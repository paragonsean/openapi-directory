# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.worker_reservation_enum_status import WorkerReservationEnumStatus
import re
from openapi_server import util


class TaskrouterV1WorkspaceWorkerWorkerReservation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, date_created: datetime=None, date_updated: datetime=None, links: object=None, reservation_status: WorkerReservationEnumStatus=None, sid: str=None, task_sid: str=None, url: str=None, worker_name: str=None, worker_sid: str=None, workspace_sid: str=None):
        """TaskrouterV1WorkspaceWorkerWorkerReservation - a model defined in OpenAPI

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param date_created: The date_created of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param date_updated: The date_updated of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param links: The links of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param reservation_status: The reservation_status of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param sid: The sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param task_sid: The task_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param url: The url of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param worker_name: The worker_name of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param worker_sid: The worker_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        """
        self.openapi_types = {
            'account_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'links': object,
            'reservation_status': WorkerReservationEnumStatus,
            'sid': str,
            'task_sid': str,
            'url': str,
            'worker_name': str,
            'worker_sid': str,
            'workspace_sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'links': 'links',
            'reservation_status': 'reservation_status',
            'sid': 'sid',
            'task_sid': 'task_sid',
            'url': 'url',
            'worker_name': 'worker_name',
            'worker_sid': 'worker_sid',
            'workspace_sid': 'workspace_sid'
        }

        self._account_sid = account_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._links = links
        self._reservation_status = reservation_status
        self._sid = sid
        self._task_sid = task_sid
        self._url = url
        self._worker_name = worker_name
        self._worker_sid = worker_sid
        self._workspace_sid = workspace_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskrouterV1WorkspaceWorkerWorkerReservation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The taskrouter.v1.workspace.worker.worker_reservation of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the WorkerReservation resource.

        :return: The account_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the WorkerReservation resource.

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def date_created(self):
        """Gets the date_created of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def links(self):
        """Gets the links of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The URLs of related resources.

        :return: The links of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The URLs of related resources.

        :param links: The links of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type links: object
        """

        self._links = links

    @property
    def reservation_status(self):
        """Gets the reservation_status of this TaskrouterV1WorkspaceWorkerWorkerReservation.


        :return: The reservation_status of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: WorkerReservationEnumStatus
        """
        return self._reservation_status

    @reservation_status.setter
    def reservation_status(self, reservation_status):
        """Sets the reservation_status of this TaskrouterV1WorkspaceWorkerWorkerReservation.


        :param reservation_status: The reservation_status of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type reservation_status: WorkerReservationEnumStatus
        """

        self._reservation_status = reservation_status

    @property
    def sid(self):
        """Gets the sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The unique string that we created to identify the WorkerReservation resource.

        :return: The sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The unique string that we created to identify the WorkerReservation resource.

        :param sid: The sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^WR[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^WR[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def task_sid(self):
        """Gets the task_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The SID of the reserved Task resource.

        :return: The task_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: str
        """
        return self._task_sid

    @task_sid.setter
    def task_sid(self, task_sid):
        """Sets the task_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The SID of the reserved Task resource.

        :param task_sid: The task_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type task_sid: str
        """
        if task_sid is not None and len(task_sid) > 34:
            raise ValueError("Invalid value for `task_sid`, length must be less than or equal to `34`")
        if task_sid is not None and len(task_sid) < 34:
            raise ValueError("Invalid value for `task_sid`, length must be greater than or equal to `34`")
        if task_sid is not None and not re.search(r'^WT[0-9a-fA-F]{32}$', task_sid):
            raise ValueError("Invalid value for `task_sid`, must be a follow pattern or equal to `/^WT[0-9a-fA-F]{32}$/`")

        self._task_sid = task_sid

    @property
    def url(self):
        """Gets the url of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The absolute URL of the WorkerReservation resource.

        :return: The url of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The absolute URL of the WorkerReservation resource.

        :param url: The url of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type url: str
        """

        self._url = url

    @property
    def worker_name(self):
        """Gets the worker_name of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The `friendly_name` of the Worker that is reserved.

        :return: The worker_name of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: str
        """
        return self._worker_name

    @worker_name.setter
    def worker_name(self, worker_name):
        """Sets the worker_name of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The `friendly_name` of the Worker that is reserved.

        :param worker_name: The worker_name of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type worker_name: str
        """

        self._worker_name = worker_name

    @property
    def worker_sid(self):
        """Gets the worker_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The SID of the reserved Worker resource.

        :return: The worker_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: str
        """
        return self._worker_sid

    @worker_sid.setter
    def worker_sid(self, worker_sid):
        """Sets the worker_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The SID of the reserved Worker resource.

        :param worker_sid: The worker_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type worker_sid: str
        """
        if worker_sid is not None and len(worker_sid) > 34:
            raise ValueError("Invalid value for `worker_sid`, length must be less than or equal to `34`")
        if worker_sid is not None and len(worker_sid) < 34:
            raise ValueError("Invalid value for `worker_sid`, length must be greater than or equal to `34`")
        if worker_sid is not None and not re.search(r'^WK[0-9a-fA-F]{32}$', worker_sid):
            raise ValueError("Invalid value for `worker_sid`, must be a follow pattern or equal to `/^WK[0-9a-fA-F]{32}$/`")

        self._worker_sid = worker_sid

    @property
    def workspace_sid(self):
        """Gets the workspace_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The SID of the Workspace that this worker is contained within.

        :return: The workspace_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :rtype: str
        """
        return self._workspace_sid

    @workspace_sid.setter
    def workspace_sid(self, workspace_sid):
        """Sets the workspace_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.

        The SID of the Workspace that this worker is contained within.

        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceWorkerWorkerReservation.
        :type workspace_sid: str
        """
        if workspace_sid is not None and len(workspace_sid) > 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be less than or equal to `34`")
        if workspace_sid is not None and len(workspace_sid) < 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be greater than or equal to `34`")
        if workspace_sid is not None and not re.search(r'^WS[0-9a-fA-F]{32}$', workspace_sid):
            raise ValueError("Invalid value for `workspace_sid`, must be a follow pattern or equal to `/^WS[0-9a-fA-F]{32}$/`")

        self._workspace_sid = workspace_sid
