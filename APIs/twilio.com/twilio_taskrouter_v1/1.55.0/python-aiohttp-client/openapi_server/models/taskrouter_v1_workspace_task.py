# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_enum_status import TaskEnumStatus
import re
from openapi_server import util


class TaskrouterV1WorkspaceTask(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, addons: str=None, age: int=None, assignment_status: TaskEnumStatus=None, attributes: str=None, date_created: datetime=None, date_updated: datetime=None, links: object=None, priority: int=None, reason: str=None, sid: str=None, task_channel_sid: str=None, task_channel_unique_name: str=None, task_queue_entered_date: datetime=None, task_queue_friendly_name: str=None, task_queue_sid: str=None, timeout: int=None, url: str=None, virtual_start_time: datetime=None, workflow_friendly_name: str=None, workflow_sid: str=None, workspace_sid: str=None):
        """TaskrouterV1WorkspaceTask - a model defined in OpenAPI

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceTask.
        :param addons: The addons of this TaskrouterV1WorkspaceTask.
        :param age: The age of this TaskrouterV1WorkspaceTask.
        :param assignment_status: The assignment_status of this TaskrouterV1WorkspaceTask.
        :param attributes: The attributes of this TaskrouterV1WorkspaceTask.
        :param date_created: The date_created of this TaskrouterV1WorkspaceTask.
        :param date_updated: The date_updated of this TaskrouterV1WorkspaceTask.
        :param links: The links of this TaskrouterV1WorkspaceTask.
        :param priority: The priority of this TaskrouterV1WorkspaceTask.
        :param reason: The reason of this TaskrouterV1WorkspaceTask.
        :param sid: The sid of this TaskrouterV1WorkspaceTask.
        :param task_channel_sid: The task_channel_sid of this TaskrouterV1WorkspaceTask.
        :param task_channel_unique_name: The task_channel_unique_name of this TaskrouterV1WorkspaceTask.
        :param task_queue_entered_date: The task_queue_entered_date of this TaskrouterV1WorkspaceTask.
        :param task_queue_friendly_name: The task_queue_friendly_name of this TaskrouterV1WorkspaceTask.
        :param task_queue_sid: The task_queue_sid of this TaskrouterV1WorkspaceTask.
        :param timeout: The timeout of this TaskrouterV1WorkspaceTask.
        :param url: The url of this TaskrouterV1WorkspaceTask.
        :param virtual_start_time: The virtual_start_time of this TaskrouterV1WorkspaceTask.
        :param workflow_friendly_name: The workflow_friendly_name of this TaskrouterV1WorkspaceTask.
        :param workflow_sid: The workflow_sid of this TaskrouterV1WorkspaceTask.
        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceTask.
        """
        self.openapi_types = {
            'account_sid': str,
            'addons': str,
            'age': int,
            'assignment_status': TaskEnumStatus,
            'attributes': str,
            'date_created': datetime,
            'date_updated': datetime,
            'links': object,
            'priority': int,
            'reason': str,
            'sid': str,
            'task_channel_sid': str,
            'task_channel_unique_name': str,
            'task_queue_entered_date': datetime,
            'task_queue_friendly_name': str,
            'task_queue_sid': str,
            'timeout': int,
            'url': str,
            'virtual_start_time': datetime,
            'workflow_friendly_name': str,
            'workflow_sid': str,
            'workspace_sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'addons': 'addons',
            'age': 'age',
            'assignment_status': 'assignment_status',
            'attributes': 'attributes',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'links': 'links',
            'priority': 'priority',
            'reason': 'reason',
            'sid': 'sid',
            'task_channel_sid': 'task_channel_sid',
            'task_channel_unique_name': 'task_channel_unique_name',
            'task_queue_entered_date': 'task_queue_entered_date',
            'task_queue_friendly_name': 'task_queue_friendly_name',
            'task_queue_sid': 'task_queue_sid',
            'timeout': 'timeout',
            'url': 'url',
            'virtual_start_time': 'virtual_start_time',
            'workflow_friendly_name': 'workflow_friendly_name',
            'workflow_sid': 'workflow_sid',
            'workspace_sid': 'workspace_sid'
        }

        self._account_sid = account_sid
        self._addons = addons
        self._age = age
        self._assignment_status = assignment_status
        self._attributes = attributes
        self._date_created = date_created
        self._date_updated = date_updated
        self._links = links
        self._priority = priority
        self._reason = reason
        self._sid = sid
        self._task_channel_sid = task_channel_sid
        self._task_channel_unique_name = task_channel_unique_name
        self._task_queue_entered_date = task_queue_entered_date
        self._task_queue_friendly_name = task_queue_friendly_name
        self._task_queue_sid = task_queue_sid
        self._timeout = timeout
        self._url = url
        self._virtual_start_time = virtual_start_time
        self._workflow_friendly_name = workflow_friendly_name
        self._workflow_sid = workflow_sid
        self._workspace_sid = workspace_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskrouterV1WorkspaceTask':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The taskrouter.v1.workspace.task of this TaskrouterV1WorkspaceTask.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this TaskrouterV1WorkspaceTask.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Task resource.

        :return: The account_sid of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this TaskrouterV1WorkspaceTask.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Task resource.

        :param account_sid: The account_sid of this TaskrouterV1WorkspaceTask.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def addons(self):
        """Gets the addons of this TaskrouterV1WorkspaceTask.

        An object that contains the [Add-on](https://www.twilio.com/docs/add-ons) data for all installed Add-ons.

        :return: The addons of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._addons

    @addons.setter
    def addons(self, addons):
        """Sets the addons of this TaskrouterV1WorkspaceTask.

        An object that contains the [Add-on](https://www.twilio.com/docs/add-ons) data for all installed Add-ons.

        :param addons: The addons of this TaskrouterV1WorkspaceTask.
        :type addons: str
        """

        self._addons = addons

    @property
    def age(self):
        """Gets the age of this TaskrouterV1WorkspaceTask.

        The number of seconds since the Task was created.

        :return: The age of this TaskrouterV1WorkspaceTask.
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age):
        """Sets the age of this TaskrouterV1WorkspaceTask.

        The number of seconds since the Task was created.

        :param age: The age of this TaskrouterV1WorkspaceTask.
        :type age: int
        """

        self._age = age

    @property
    def assignment_status(self):
        """Gets the assignment_status of this TaskrouterV1WorkspaceTask.


        :return: The assignment_status of this TaskrouterV1WorkspaceTask.
        :rtype: TaskEnumStatus
        """
        return self._assignment_status

    @assignment_status.setter
    def assignment_status(self, assignment_status):
        """Sets the assignment_status of this TaskrouterV1WorkspaceTask.


        :param assignment_status: The assignment_status of this TaskrouterV1WorkspaceTask.
        :type assignment_status: TaskEnumStatus
        """

        self._assignment_status = assignment_status

    @property
    def attributes(self):
        """Gets the attributes of this TaskrouterV1WorkspaceTask.

        The JSON string with custom attributes of the work. **Note** If this property has been assigned a value, it will only be displayed in FETCH action that returns a single resource. Otherwise, it will be null.

        :return: The attributes of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this TaskrouterV1WorkspaceTask.

        The JSON string with custom attributes of the work. **Note** If this property has been assigned a value, it will only be displayed in FETCH action that returns a single resource. Otherwise, it will be null.

        :param attributes: The attributes of this TaskrouterV1WorkspaceTask.
        :type attributes: str
        """

        self._attributes = attributes

    @property
    def date_created(self):
        """Gets the date_created of this TaskrouterV1WorkspaceTask.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this TaskrouterV1WorkspaceTask.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this TaskrouterV1WorkspaceTask.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this TaskrouterV1WorkspaceTask.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this TaskrouterV1WorkspaceTask.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this TaskrouterV1WorkspaceTask.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this TaskrouterV1WorkspaceTask.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this TaskrouterV1WorkspaceTask.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def links(self):
        """Gets the links of this TaskrouterV1WorkspaceTask.

        The URLs of related resources.

        :return: The links of this TaskrouterV1WorkspaceTask.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this TaskrouterV1WorkspaceTask.

        The URLs of related resources.

        :param links: The links of this TaskrouterV1WorkspaceTask.
        :type links: object
        """

        self._links = links

    @property
    def priority(self):
        """Gets the priority of this TaskrouterV1WorkspaceTask.

        The current priority score of the Task as assigned to a Worker by the workflow. Tasks with higher priority values will be assigned before Tasks with lower values.

        :return: The priority of this TaskrouterV1WorkspaceTask.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this TaskrouterV1WorkspaceTask.

        The current priority score of the Task as assigned to a Worker by the workflow. Tasks with higher priority values will be assigned before Tasks with lower values.

        :param priority: The priority of this TaskrouterV1WorkspaceTask.
        :type priority: int
        """

        self._priority = priority

    @property
    def reason(self):
        """Gets the reason of this TaskrouterV1WorkspaceTask.

        The reason the Task was canceled or completed, if applicable.

        :return: The reason of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this TaskrouterV1WorkspaceTask.

        The reason the Task was canceled or completed, if applicable.

        :param reason: The reason of this TaskrouterV1WorkspaceTask.
        :type reason: str
        """

        self._reason = reason

    @property
    def sid(self):
        """Gets the sid of this TaskrouterV1WorkspaceTask.

        The unique string that we created to identify the Task resource.

        :return: The sid of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this TaskrouterV1WorkspaceTask.

        The unique string that we created to identify the Task resource.

        :param sid: The sid of this TaskrouterV1WorkspaceTask.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^WT[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^WT[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def task_channel_sid(self):
        """Gets the task_channel_sid of this TaskrouterV1WorkspaceTask.

        The SID of the TaskChannel.

        :return: The task_channel_sid of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._task_channel_sid

    @task_channel_sid.setter
    def task_channel_sid(self, task_channel_sid):
        """Sets the task_channel_sid of this TaskrouterV1WorkspaceTask.

        The SID of the TaskChannel.

        :param task_channel_sid: The task_channel_sid of this TaskrouterV1WorkspaceTask.
        :type task_channel_sid: str
        """
        if task_channel_sid is not None and len(task_channel_sid) > 34:
            raise ValueError("Invalid value for `task_channel_sid`, length must be less than or equal to `34`")
        if task_channel_sid is not None and len(task_channel_sid) < 34:
            raise ValueError("Invalid value for `task_channel_sid`, length must be greater than or equal to `34`")
        if task_channel_sid is not None and not re.search(r'^TC[0-9a-fA-F]{32}$', task_channel_sid):
            raise ValueError("Invalid value for `task_channel_sid`, must be a follow pattern or equal to `/^TC[0-9a-fA-F]{32}$/`")

        self._task_channel_sid = task_channel_sid

    @property
    def task_channel_unique_name(self):
        """Gets the task_channel_unique_name of this TaskrouterV1WorkspaceTask.

        The unique name of the TaskChannel.

        :return: The task_channel_unique_name of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._task_channel_unique_name

    @task_channel_unique_name.setter
    def task_channel_unique_name(self, task_channel_unique_name):
        """Sets the task_channel_unique_name of this TaskrouterV1WorkspaceTask.

        The unique name of the TaskChannel.

        :param task_channel_unique_name: The task_channel_unique_name of this TaskrouterV1WorkspaceTask.
        :type task_channel_unique_name: str
        """

        self._task_channel_unique_name = task_channel_unique_name

    @property
    def task_queue_entered_date(self):
        """Gets the task_queue_entered_date of this TaskrouterV1WorkspaceTask.

        The date and time in GMT when the Task entered the TaskQueue, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The task_queue_entered_date of this TaskrouterV1WorkspaceTask.
        :rtype: datetime
        """
        return self._task_queue_entered_date

    @task_queue_entered_date.setter
    def task_queue_entered_date(self, task_queue_entered_date):
        """Sets the task_queue_entered_date of this TaskrouterV1WorkspaceTask.

        The date and time in GMT when the Task entered the TaskQueue, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param task_queue_entered_date: The task_queue_entered_date of this TaskrouterV1WorkspaceTask.
        :type task_queue_entered_date: datetime
        """

        self._task_queue_entered_date = task_queue_entered_date

    @property
    def task_queue_friendly_name(self):
        """Gets the task_queue_friendly_name of this TaskrouterV1WorkspaceTask.

        The friendly name of the TaskQueue.

        :return: The task_queue_friendly_name of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._task_queue_friendly_name

    @task_queue_friendly_name.setter
    def task_queue_friendly_name(self, task_queue_friendly_name):
        """Sets the task_queue_friendly_name of this TaskrouterV1WorkspaceTask.

        The friendly name of the TaskQueue.

        :param task_queue_friendly_name: The task_queue_friendly_name of this TaskrouterV1WorkspaceTask.
        :type task_queue_friendly_name: str
        """

        self._task_queue_friendly_name = task_queue_friendly_name

    @property
    def task_queue_sid(self):
        """Gets the task_queue_sid of this TaskrouterV1WorkspaceTask.

        The SID of the TaskQueue.

        :return: The task_queue_sid of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._task_queue_sid

    @task_queue_sid.setter
    def task_queue_sid(self, task_queue_sid):
        """Sets the task_queue_sid of this TaskrouterV1WorkspaceTask.

        The SID of the TaskQueue.

        :param task_queue_sid: The task_queue_sid of this TaskrouterV1WorkspaceTask.
        :type task_queue_sid: str
        """
        if task_queue_sid is not None and len(task_queue_sid) > 34:
            raise ValueError("Invalid value for `task_queue_sid`, length must be less than or equal to `34`")
        if task_queue_sid is not None and len(task_queue_sid) < 34:
            raise ValueError("Invalid value for `task_queue_sid`, length must be greater than or equal to `34`")
        if task_queue_sid is not None and not re.search(r'^WQ[0-9a-fA-F]{32}$', task_queue_sid):
            raise ValueError("Invalid value for `task_queue_sid`, must be a follow pattern or equal to `/^WQ[0-9a-fA-F]{32}$/`")

        self._task_queue_sid = task_queue_sid

    @property
    def timeout(self):
        """Gets the timeout of this TaskrouterV1WorkspaceTask.

        The amount of time in seconds that the Task can live before being assigned.

        :return: The timeout of this TaskrouterV1WorkspaceTask.
        :rtype: int
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this TaskrouterV1WorkspaceTask.

        The amount of time in seconds that the Task can live before being assigned.

        :param timeout: The timeout of this TaskrouterV1WorkspaceTask.
        :type timeout: int
        """

        self._timeout = timeout

    @property
    def url(self):
        """Gets the url of this TaskrouterV1WorkspaceTask.

        The absolute URL of the Task resource.

        :return: The url of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TaskrouterV1WorkspaceTask.

        The absolute URL of the Task resource.

        :param url: The url of this TaskrouterV1WorkspaceTask.
        :type url: str
        """

        self._url = url

    @property
    def virtual_start_time(self):
        """Gets the virtual_start_time of this TaskrouterV1WorkspaceTask.

        The date and time in GMT indicating the ordering for routing of the Task specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The virtual_start_time of this TaskrouterV1WorkspaceTask.
        :rtype: datetime
        """
        return self._virtual_start_time

    @virtual_start_time.setter
    def virtual_start_time(self, virtual_start_time):
        """Sets the virtual_start_time of this TaskrouterV1WorkspaceTask.

        The date and time in GMT indicating the ordering for routing of the Task specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param virtual_start_time: The virtual_start_time of this TaskrouterV1WorkspaceTask.
        :type virtual_start_time: datetime
        """

        self._virtual_start_time = virtual_start_time

    @property
    def workflow_friendly_name(self):
        """Gets the workflow_friendly_name of this TaskrouterV1WorkspaceTask.

        The friendly name of the Workflow that is controlling the Task.

        :return: The workflow_friendly_name of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._workflow_friendly_name

    @workflow_friendly_name.setter
    def workflow_friendly_name(self, workflow_friendly_name):
        """Sets the workflow_friendly_name of this TaskrouterV1WorkspaceTask.

        The friendly name of the Workflow that is controlling the Task.

        :param workflow_friendly_name: The workflow_friendly_name of this TaskrouterV1WorkspaceTask.
        :type workflow_friendly_name: str
        """

        self._workflow_friendly_name = workflow_friendly_name

    @property
    def workflow_sid(self):
        """Gets the workflow_sid of this TaskrouterV1WorkspaceTask.

        The SID of the Workflow that is controlling the Task.

        :return: The workflow_sid of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._workflow_sid

    @workflow_sid.setter
    def workflow_sid(self, workflow_sid):
        """Sets the workflow_sid of this TaskrouterV1WorkspaceTask.

        The SID of the Workflow that is controlling the Task.

        :param workflow_sid: The workflow_sid of this TaskrouterV1WorkspaceTask.
        :type workflow_sid: str
        """
        if workflow_sid is not None and len(workflow_sid) > 34:
            raise ValueError("Invalid value for `workflow_sid`, length must be less than or equal to `34`")
        if workflow_sid is not None and len(workflow_sid) < 34:
            raise ValueError("Invalid value for `workflow_sid`, length must be greater than or equal to `34`")
        if workflow_sid is not None and not re.search(r'^WW[0-9a-fA-F]{32}$', workflow_sid):
            raise ValueError("Invalid value for `workflow_sid`, must be a follow pattern or equal to `/^WW[0-9a-fA-F]{32}$/`")

        self._workflow_sid = workflow_sid

    @property
    def workspace_sid(self):
        """Gets the workspace_sid of this TaskrouterV1WorkspaceTask.

        The SID of the Workspace that contains the Task.

        :return: The workspace_sid of this TaskrouterV1WorkspaceTask.
        :rtype: str
        """
        return self._workspace_sid

    @workspace_sid.setter
    def workspace_sid(self, workspace_sid):
        """Sets the workspace_sid of this TaskrouterV1WorkspaceTask.

        The SID of the Workspace that contains the Task.

        :param workspace_sid: The workspace_sid of this TaskrouterV1WorkspaceTask.
        :type workspace_sid: str
        """
        if workspace_sid is not None and len(workspace_sid) > 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be less than or equal to `34`")
        if workspace_sid is not None and len(workspace_sid) < 34:
            raise ValueError("Invalid value for `workspace_sid`, length must be greater than or equal to `34`")
        if workspace_sid is not None and not re.search(r'^WS[0-9a-fA-F]{32}$', workspace_sid):
            raise ValueError("Invalid value for `workspace_sid`, must be a follow pattern or equal to `/^WS[0-9a-fA-F]{32}$/`")

        self._workspace_sid = workspace_sid
