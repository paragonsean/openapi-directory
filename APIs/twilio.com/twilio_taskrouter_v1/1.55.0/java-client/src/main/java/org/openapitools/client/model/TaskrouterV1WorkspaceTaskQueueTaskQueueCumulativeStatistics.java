/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:15.049055-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_AVG_TASK_ACCEPTANCE_TIME = "avg_task_acceptance_time";
  @SerializedName(SERIALIZED_NAME_AVG_TASK_ACCEPTANCE_TIME)
  private Integer avgTaskAcceptanceTime;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_RESERVATIONS_ACCEPTED = "reservations_accepted";
  @SerializedName(SERIALIZED_NAME_RESERVATIONS_ACCEPTED)
  private Integer reservationsAccepted;

  public static final String SERIALIZED_NAME_RESERVATIONS_CANCELED = "reservations_canceled";
  @SerializedName(SERIALIZED_NAME_RESERVATIONS_CANCELED)
  private Integer reservationsCanceled;

  public static final String SERIALIZED_NAME_RESERVATIONS_CREATED = "reservations_created";
  @SerializedName(SERIALIZED_NAME_RESERVATIONS_CREATED)
  private Integer reservationsCreated;

  public static final String SERIALIZED_NAME_RESERVATIONS_REJECTED = "reservations_rejected";
  @SerializedName(SERIALIZED_NAME_RESERVATIONS_REJECTED)
  private Integer reservationsRejected;

  public static final String SERIALIZED_NAME_RESERVATIONS_RESCINDED = "reservations_rescinded";
  @SerializedName(SERIALIZED_NAME_RESERVATIONS_RESCINDED)
  private Integer reservationsRescinded;

  public static final String SERIALIZED_NAME_RESERVATIONS_TIMED_OUT = "reservations_timed_out";
  @SerializedName(SERIALIZED_NAME_RESERVATIONS_TIMED_OUT)
  private Integer reservationsTimedOut;

  public static final String SERIALIZED_NAME_SPLIT_BY_WAIT_TIME = "split_by_wait_time";
  @SerializedName(SERIALIZED_NAME_SPLIT_BY_WAIT_TIME)
  private Object splitByWaitTime = null;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_TASK_QUEUE_SID = "task_queue_sid";
  @SerializedName(SERIALIZED_NAME_TASK_QUEUE_SID)
  private String taskQueueSid;

  public static final String SERIALIZED_NAME_TASKS_CANCELED = "tasks_canceled";
  @SerializedName(SERIALIZED_NAME_TASKS_CANCELED)
  private Integer tasksCanceled;

  public static final String SERIALIZED_NAME_TASKS_COMPLETED = "tasks_completed";
  @SerializedName(SERIALIZED_NAME_TASKS_COMPLETED)
  private Integer tasksCompleted;

  public static final String SERIALIZED_NAME_TASKS_DELETED = "tasks_deleted";
  @SerializedName(SERIALIZED_NAME_TASKS_DELETED)
  private Integer tasksDeleted;

  public static final String SERIALIZED_NAME_TASKS_ENTERED = "tasks_entered";
  @SerializedName(SERIALIZED_NAME_TASKS_ENTERED)
  private Integer tasksEntered;

  public static final String SERIALIZED_NAME_TASKS_MOVED = "tasks_moved";
  @SerializedName(SERIALIZED_NAME_TASKS_MOVED)
  private Integer tasksMoved;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WAIT_DURATION_IN_QUEUE_UNTIL_ACCEPTED = "wait_duration_in_queue_until_accepted";
  @SerializedName(SERIALIZED_NAME_WAIT_DURATION_IN_QUEUE_UNTIL_ACCEPTED)
  private Object waitDurationInQueueUntilAccepted = null;

  public static final String SERIALIZED_NAME_WAIT_DURATION_UNTIL_ACCEPTED = "wait_duration_until_accepted";
  @SerializedName(SERIALIZED_NAME_WAIT_DURATION_UNTIL_ACCEPTED)
  private Object waitDurationUntilAccepted = null;

  public static final String SERIALIZED_NAME_WAIT_DURATION_UNTIL_CANCELED = "wait_duration_until_canceled";
  @SerializedName(SERIALIZED_NAME_WAIT_DURATION_UNTIL_CANCELED)
  private Object waitDurationUntilCanceled = null;

  public static final String SERIALIZED_NAME_WORKSPACE_SID = "workspace_sid";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_SID)
  private String workspaceSid;

  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics() {
  }

  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics avgTaskAcceptanceTime(Integer avgTaskAcceptanceTime) {
    this.avgTaskAcceptanceTime = avgTaskAcceptanceTime;
    return this;
  }

  /**
   * The average time in seconds between Task creation and acceptance.
   * @return avgTaskAcceptanceTime
   */
  @javax.annotation.Nullable
  public Integer getAvgTaskAcceptanceTime() {
    return avgTaskAcceptanceTime;
  }

  public void setAvgTaskAcceptanceTime(Integer avgTaskAcceptanceTime) {
    this.avgTaskAcceptanceTime = avgTaskAcceptanceTime;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * The end of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics reservationsAccepted(Integer reservationsAccepted) {
    this.reservationsAccepted = reservationsAccepted;
    return this;
  }

  /**
   * The total number of Reservations accepted for Tasks in the TaskQueue.
   * @return reservationsAccepted
   */
  @javax.annotation.Nullable
  public Integer getReservationsAccepted() {
    return reservationsAccepted;
  }

  public void setReservationsAccepted(Integer reservationsAccepted) {
    this.reservationsAccepted = reservationsAccepted;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics reservationsCanceled(Integer reservationsCanceled) {
    this.reservationsCanceled = reservationsCanceled;
    return this;
  }

  /**
   * The total number of Reservations canceled for Tasks in the TaskQueue.
   * @return reservationsCanceled
   */
  @javax.annotation.Nullable
  public Integer getReservationsCanceled() {
    return reservationsCanceled;
  }

  public void setReservationsCanceled(Integer reservationsCanceled) {
    this.reservationsCanceled = reservationsCanceled;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics reservationsCreated(Integer reservationsCreated) {
    this.reservationsCreated = reservationsCreated;
    return this;
  }

  /**
   * The total number of Reservations created for Tasks in the TaskQueue.
   * @return reservationsCreated
   */
  @javax.annotation.Nullable
  public Integer getReservationsCreated() {
    return reservationsCreated;
  }

  public void setReservationsCreated(Integer reservationsCreated) {
    this.reservationsCreated = reservationsCreated;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics reservationsRejected(Integer reservationsRejected) {
    this.reservationsRejected = reservationsRejected;
    return this;
  }

  /**
   * The total number of Reservations rejected for Tasks in the TaskQueue.
   * @return reservationsRejected
   */
  @javax.annotation.Nullable
  public Integer getReservationsRejected() {
    return reservationsRejected;
  }

  public void setReservationsRejected(Integer reservationsRejected) {
    this.reservationsRejected = reservationsRejected;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics reservationsRescinded(Integer reservationsRescinded) {
    this.reservationsRescinded = reservationsRescinded;
    return this;
  }

  /**
   * The total number of Reservations rescinded.
   * @return reservationsRescinded
   */
  @javax.annotation.Nullable
  public Integer getReservationsRescinded() {
    return reservationsRescinded;
  }

  public void setReservationsRescinded(Integer reservationsRescinded) {
    this.reservationsRescinded = reservationsRescinded;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics reservationsTimedOut(Integer reservationsTimedOut) {
    this.reservationsTimedOut = reservationsTimedOut;
    return this;
  }

  /**
   * The total number of Reservations that timed out for Tasks in the TaskQueue.
   * @return reservationsTimedOut
   */
  @javax.annotation.Nullable
  public Integer getReservationsTimedOut() {
    return reservationsTimedOut;
  }

  public void setReservationsTimedOut(Integer reservationsTimedOut) {
    this.reservationsTimedOut = reservationsTimedOut;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics splitByWaitTime(Object splitByWaitTime) {
    this.splitByWaitTime = splitByWaitTime;
    return this;
  }

  /**
   * A list of objects that describe the number of Tasks canceled and reservations accepted above and below the thresholds specified in seconds.
   * @return splitByWaitTime
   */
  @javax.annotation.Nullable
  public Object getSplitByWaitTime() {
    return splitByWaitTime;
  }

  public void setSplitByWaitTime(Object splitByWaitTime) {
    this.splitByWaitTime = splitByWaitTime;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The beginning of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics taskQueueSid(String taskQueueSid) {
    this.taskQueueSid = taskQueueSid;
    return this;
  }

  /**
   * The SID of the TaskQueue from which these statistics were calculated.
   * @return taskQueueSid
   */
  @javax.annotation.Nullable
  public String getTaskQueueSid() {
    return taskQueueSid;
  }

  public void setTaskQueueSid(String taskQueueSid) {
    this.taskQueueSid = taskQueueSid;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics tasksCanceled(Integer tasksCanceled) {
    this.tasksCanceled = tasksCanceled;
    return this;
  }

  /**
   * The total number of Tasks canceled in the TaskQueue.
   * @return tasksCanceled
   */
  @javax.annotation.Nullable
  public Integer getTasksCanceled() {
    return tasksCanceled;
  }

  public void setTasksCanceled(Integer tasksCanceled) {
    this.tasksCanceled = tasksCanceled;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics tasksCompleted(Integer tasksCompleted) {
    this.tasksCompleted = tasksCompleted;
    return this;
  }

  /**
   * The total number of Tasks completed in the TaskQueue.
   * @return tasksCompleted
   */
  @javax.annotation.Nullable
  public Integer getTasksCompleted() {
    return tasksCompleted;
  }

  public void setTasksCompleted(Integer tasksCompleted) {
    this.tasksCompleted = tasksCompleted;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics tasksDeleted(Integer tasksDeleted) {
    this.tasksDeleted = tasksDeleted;
    return this;
  }

  /**
   * The total number of Tasks deleted in the TaskQueue.
   * @return tasksDeleted
   */
  @javax.annotation.Nullable
  public Integer getTasksDeleted() {
    return tasksDeleted;
  }

  public void setTasksDeleted(Integer tasksDeleted) {
    this.tasksDeleted = tasksDeleted;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics tasksEntered(Integer tasksEntered) {
    this.tasksEntered = tasksEntered;
    return this;
  }

  /**
   * The total number of Tasks entered into the TaskQueue.
   * @return tasksEntered
   */
  @javax.annotation.Nullable
  public Integer getTasksEntered() {
    return tasksEntered;
  }

  public void setTasksEntered(Integer tasksEntered) {
    this.tasksEntered = tasksEntered;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics tasksMoved(Integer tasksMoved) {
    this.tasksMoved = tasksMoved;
    return this;
  }

  /**
   * The total number of Tasks that were moved from one queue to another.
   * @return tasksMoved
   */
  @javax.annotation.Nullable
  public Integer getTasksMoved() {
    return tasksMoved;
  }

  public void setTasksMoved(Integer tasksMoved) {
    this.tasksMoved = tasksMoved;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the TaskQueue statistics resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics waitDurationInQueueUntilAccepted(Object waitDurationInQueueUntilAccepted) {
    this.waitDurationInQueueUntilAccepted = waitDurationInQueueUntilAccepted;
    return this;
  }

  /**
   * The relative wait duration statistics (&#x60;avg&#x60;, &#x60;min&#x60;, &#x60;max&#x60;, &#x60;total&#x60;) for Tasks accepted while in the TaskQueue. Calculation is based on the time when the Tasks entered the TaskQueue.
   * @return waitDurationInQueueUntilAccepted
   */
  @javax.annotation.Nullable
  public Object getWaitDurationInQueueUntilAccepted() {
    return waitDurationInQueueUntilAccepted;
  }

  public void setWaitDurationInQueueUntilAccepted(Object waitDurationInQueueUntilAccepted) {
    this.waitDurationInQueueUntilAccepted = waitDurationInQueueUntilAccepted;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics waitDurationUntilAccepted(Object waitDurationUntilAccepted) {
    this.waitDurationUntilAccepted = waitDurationUntilAccepted;
    return this;
  }

  /**
   * The wait duration statistics (&#x60;avg&#x60;, &#x60;min&#x60;, &#x60;max&#x60;, &#x60;total&#x60;) for Tasks accepted while in the TaskQueue. Calculation is based on the time when the Tasks were created. For transfers, the wait duration is counted from the moment ***the Task was created***, and not from when the transfer was initiated.
   * @return waitDurationUntilAccepted
   */
  @javax.annotation.Nullable
  public Object getWaitDurationUntilAccepted() {
    return waitDurationUntilAccepted;
  }

  public void setWaitDurationUntilAccepted(Object waitDurationUntilAccepted) {
    this.waitDurationUntilAccepted = waitDurationUntilAccepted;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics waitDurationUntilCanceled(Object waitDurationUntilCanceled) {
    this.waitDurationUntilCanceled = waitDurationUntilCanceled;
    return this;
  }

  /**
   * The wait duration statistics (&#x60;avg&#x60;, &#x60;min&#x60;, &#x60;max&#x60;, &#x60;total&#x60;) for Tasks canceled while in the TaskQueue.
   * @return waitDurationUntilCanceled
   */
  @javax.annotation.Nullable
  public Object getWaitDurationUntilCanceled() {
    return waitDurationUntilCanceled;
  }

  public void setWaitDurationUntilCanceled(Object waitDurationUntilCanceled) {
    this.waitDurationUntilCanceled = waitDurationUntilCanceled;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics workspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
    return this;
  }

  /**
   * The SID of the Workspace that contains the TaskQueue.
   * @return workspaceSid
   */
  @javax.annotation.Nullable
  public String getWorkspaceSid() {
    return workspaceSid;
  }

  public void setWorkspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics = (TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics) o;
    return Objects.equals(this.accountSid, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.accountSid) &&
        Objects.equals(this.avgTaskAcceptanceTime, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.avgTaskAcceptanceTime) &&
        Objects.equals(this.endTime, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.endTime) &&
        Objects.equals(this.reservationsAccepted, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.reservationsAccepted) &&
        Objects.equals(this.reservationsCanceled, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.reservationsCanceled) &&
        Objects.equals(this.reservationsCreated, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.reservationsCreated) &&
        Objects.equals(this.reservationsRejected, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.reservationsRejected) &&
        Objects.equals(this.reservationsRescinded, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.reservationsRescinded) &&
        Objects.equals(this.reservationsTimedOut, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.reservationsTimedOut) &&
        Objects.equals(this.splitByWaitTime, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.splitByWaitTime) &&
        Objects.equals(this.startTime, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.startTime) &&
        Objects.equals(this.taskQueueSid, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.taskQueueSid) &&
        Objects.equals(this.tasksCanceled, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.tasksCanceled) &&
        Objects.equals(this.tasksCompleted, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.tasksCompleted) &&
        Objects.equals(this.tasksDeleted, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.tasksDeleted) &&
        Objects.equals(this.tasksEntered, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.tasksEntered) &&
        Objects.equals(this.tasksMoved, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.tasksMoved) &&
        Objects.equals(this.url, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.url) &&
        Objects.equals(this.waitDurationInQueueUntilAccepted, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.waitDurationInQueueUntilAccepted) &&
        Objects.equals(this.waitDurationUntilAccepted, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.waitDurationUntilAccepted) &&
        Objects.equals(this.waitDurationUntilCanceled, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.waitDurationUntilCanceled) &&
        Objects.equals(this.workspaceSid, taskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.workspaceSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, avgTaskAcceptanceTime, endTime, reservationsAccepted, reservationsCanceled, reservationsCreated, reservationsRejected, reservationsRescinded, reservationsTimedOut, splitByWaitTime, startTime, taskQueueSid, tasksCanceled, tasksCompleted, tasksDeleted, tasksEntered, tasksMoved, url, waitDurationInQueueUntilAccepted, waitDurationUntilAccepted, waitDurationUntilCanceled, workspaceSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    avgTaskAcceptanceTime: ").append(toIndentedString(avgTaskAcceptanceTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    reservationsAccepted: ").append(toIndentedString(reservationsAccepted)).append("\n");
    sb.append("    reservationsCanceled: ").append(toIndentedString(reservationsCanceled)).append("\n");
    sb.append("    reservationsCreated: ").append(toIndentedString(reservationsCreated)).append("\n");
    sb.append("    reservationsRejected: ").append(toIndentedString(reservationsRejected)).append("\n");
    sb.append("    reservationsRescinded: ").append(toIndentedString(reservationsRescinded)).append("\n");
    sb.append("    reservationsTimedOut: ").append(toIndentedString(reservationsTimedOut)).append("\n");
    sb.append("    splitByWaitTime: ").append(toIndentedString(splitByWaitTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    taskQueueSid: ").append(toIndentedString(taskQueueSid)).append("\n");
    sb.append("    tasksCanceled: ").append(toIndentedString(tasksCanceled)).append("\n");
    sb.append("    tasksCompleted: ").append(toIndentedString(tasksCompleted)).append("\n");
    sb.append("    tasksDeleted: ").append(toIndentedString(tasksDeleted)).append("\n");
    sb.append("    tasksEntered: ").append(toIndentedString(tasksEntered)).append("\n");
    sb.append("    tasksMoved: ").append(toIndentedString(tasksMoved)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    waitDurationInQueueUntilAccepted: ").append(toIndentedString(waitDurationInQueueUntilAccepted)).append("\n");
    sb.append("    waitDurationUntilAccepted: ").append(toIndentedString(waitDurationUntilAccepted)).append("\n");
    sb.append("    waitDurationUntilCanceled: ").append(toIndentedString(waitDurationUntilCanceled)).append("\n");
    sb.append("    workspaceSid: ").append(toIndentedString(workspaceSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("avg_task_acceptance_time");
    openapiFields.add("end_time");
    openapiFields.add("reservations_accepted");
    openapiFields.add("reservations_canceled");
    openapiFields.add("reservations_created");
    openapiFields.add("reservations_rejected");
    openapiFields.add("reservations_rescinded");
    openapiFields.add("reservations_timed_out");
    openapiFields.add("split_by_wait_time");
    openapiFields.add("start_time");
    openapiFields.add("task_queue_sid");
    openapiFields.add("tasks_canceled");
    openapiFields.add("tasks_completed");
    openapiFields.add("tasks_deleted");
    openapiFields.add("tasks_entered");
    openapiFields.add("tasks_moved");
    openapiFields.add("url");
    openapiFields.add("wait_duration_in_queue_until_accepted");
    openapiFields.add("wait_duration_until_accepted");
    openapiFields.add("wait_duration_until_canceled");
    openapiFields.add("workspace_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics is not found in the empty JSON string", TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("task_queue_sid") != null && !jsonObj.get("task_queue_sid").isJsonNull()) && !jsonObj.get("task_queue_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_queue_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task_queue_sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("workspace_sid") != null && !jsonObj.get("workspace_sid").isJsonNull()) && !jsonObj.get("workspace_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspace_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspace_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics>() {
           @Override
           public void write(JsonWriter out, TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics
   * @throws IOException if the JSON string is invalid with respect to TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics
   */
  public static TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics.class);
  }

  /**
   * Convert an instance of TaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

