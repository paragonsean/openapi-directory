/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TaskrouterV1WorkspaceWorkflow
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:15.049055-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskrouterV1WorkspaceWorkflow {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ASSIGNMENT_CALLBACK_URL = "assignment_callback_url";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_CALLBACK_URL)
  private URI assignmentCallbackUrl;

  public static final String SERIALIZED_NAME_CONFIGURATION = "configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private String _configuration;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_DOCUMENT_CONTENT_TYPE = "document_content_type";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_CONTENT_TYPE)
  private String documentContentType;

  public static final String SERIALIZED_NAME_FALLBACK_ASSIGNMENT_CALLBACK_URL = "fallback_assignment_callback_url";
  @SerializedName(SERIALIZED_NAME_FALLBACK_ASSIGNMENT_CALLBACK_URL)
  private URI fallbackAssignmentCallbackUrl;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_TASK_RESERVATION_TIMEOUT = "task_reservation_timeout";
  @SerializedName(SERIALIZED_NAME_TASK_RESERVATION_TIMEOUT)
  private Integer taskReservationTimeout;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WORKSPACE_SID = "workspace_sid";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_SID)
  private String workspaceSid;

  public TaskrouterV1WorkspaceWorkflow() {
  }

  public TaskrouterV1WorkspaceWorkflow accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public TaskrouterV1WorkspaceWorkflow assignmentCallbackUrl(URI assignmentCallbackUrl) {
    this.assignmentCallbackUrl = assignmentCallbackUrl;
    return this;
  }

  /**
   * The URL that we call when a task managed by the Workflow is assigned to a Worker. See Assignment Callback URL for more information.
   * @return assignmentCallbackUrl
   */
  @javax.annotation.Nullable
  public URI getAssignmentCallbackUrl() {
    return assignmentCallbackUrl;
  }

  public void setAssignmentCallbackUrl(URI assignmentCallbackUrl) {
    this.assignmentCallbackUrl = assignmentCallbackUrl;
  }


  public TaskrouterV1WorkspaceWorkflow _configuration(String _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * A JSON string that contains the Workflow&#39;s configuration. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.
   * @return _configuration
   */
  @javax.annotation.Nullable
  public String getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(String _configuration) {
    this._configuration = _configuration;
  }


  public TaskrouterV1WorkspaceWorkflow dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public TaskrouterV1WorkspaceWorkflow dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public TaskrouterV1WorkspaceWorkflow documentContentType(String documentContentType) {
    this.documentContentType = documentContentType;
    return this;
  }

  /**
   * The MIME type of the document.
   * @return documentContentType
   */
  @javax.annotation.Nullable
  public String getDocumentContentType() {
    return documentContentType;
  }

  public void setDocumentContentType(String documentContentType) {
    this.documentContentType = documentContentType;
  }


  public TaskrouterV1WorkspaceWorkflow fallbackAssignmentCallbackUrl(URI fallbackAssignmentCallbackUrl) {
    this.fallbackAssignmentCallbackUrl = fallbackAssignmentCallbackUrl;
    return this;
  }

  /**
   * The URL that we call when a call to the &#x60;assignment_callback_url&#x60; fails.
   * @return fallbackAssignmentCallbackUrl
   */
  @javax.annotation.Nullable
  public URI getFallbackAssignmentCallbackUrl() {
    return fallbackAssignmentCallbackUrl;
  }

  public void setFallbackAssignmentCallbackUrl(URI fallbackAssignmentCallbackUrl) {
    this.fallbackAssignmentCallbackUrl = fallbackAssignmentCallbackUrl;
  }


  public TaskrouterV1WorkspaceWorkflow friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the Workflow resource. For example, &#x60;Customer Support&#x60; or &#x60;2014 Election Campaign&#x60;.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public TaskrouterV1WorkspaceWorkflow links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The URLs of related resources.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public TaskrouterV1WorkspaceWorkflow sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Workflow resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public TaskrouterV1WorkspaceWorkflow taskReservationTimeout(Integer taskReservationTimeout) {
    this.taskReservationTimeout = taskReservationTimeout;
    return this;
  }

  /**
   * How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to &#x60;86,400&#x60; (24 hours) and the default is &#x60;120&#x60;.
   * @return taskReservationTimeout
   */
  @javax.annotation.Nullable
  public Integer getTaskReservationTimeout() {
    return taskReservationTimeout;
  }

  public void setTaskReservationTimeout(Integer taskReservationTimeout) {
    this.taskReservationTimeout = taskReservationTimeout;
  }


  public TaskrouterV1WorkspaceWorkflow url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Workflow resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public TaskrouterV1WorkspaceWorkflow workspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
    return this;
  }

  /**
   * The SID of the Workspace that contains the Workflow.
   * @return workspaceSid
   */
  @javax.annotation.Nullable
  public String getWorkspaceSid() {
    return workspaceSid;
  }

  public void setWorkspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskrouterV1WorkspaceWorkflow taskrouterV1WorkspaceWorkflow = (TaskrouterV1WorkspaceWorkflow) o;
    return Objects.equals(this.accountSid, taskrouterV1WorkspaceWorkflow.accountSid) &&
        Objects.equals(this.assignmentCallbackUrl, taskrouterV1WorkspaceWorkflow.assignmentCallbackUrl) &&
        Objects.equals(this._configuration, taskrouterV1WorkspaceWorkflow._configuration) &&
        Objects.equals(this.dateCreated, taskrouterV1WorkspaceWorkflow.dateCreated) &&
        Objects.equals(this.dateUpdated, taskrouterV1WorkspaceWorkflow.dateUpdated) &&
        Objects.equals(this.documentContentType, taskrouterV1WorkspaceWorkflow.documentContentType) &&
        Objects.equals(this.fallbackAssignmentCallbackUrl, taskrouterV1WorkspaceWorkflow.fallbackAssignmentCallbackUrl) &&
        Objects.equals(this.friendlyName, taskrouterV1WorkspaceWorkflow.friendlyName) &&
        Objects.equals(this.links, taskrouterV1WorkspaceWorkflow.links) &&
        Objects.equals(this.sid, taskrouterV1WorkspaceWorkflow.sid) &&
        Objects.equals(this.taskReservationTimeout, taskrouterV1WorkspaceWorkflow.taskReservationTimeout) &&
        Objects.equals(this.url, taskrouterV1WorkspaceWorkflow.url) &&
        Objects.equals(this.workspaceSid, taskrouterV1WorkspaceWorkflow.workspaceSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, assignmentCallbackUrl, _configuration, dateCreated, dateUpdated, documentContentType, fallbackAssignmentCallbackUrl, friendlyName, links, sid, taskReservationTimeout, url, workspaceSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskrouterV1WorkspaceWorkflow {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    assignmentCallbackUrl: ").append(toIndentedString(assignmentCallbackUrl)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    documentContentType: ").append(toIndentedString(documentContentType)).append("\n");
    sb.append("    fallbackAssignmentCallbackUrl: ").append(toIndentedString(fallbackAssignmentCallbackUrl)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    taskReservationTimeout: ").append(toIndentedString(taskReservationTimeout)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    workspaceSid: ").append(toIndentedString(workspaceSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("assignment_callback_url");
    openapiFields.add("configuration");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("document_content_type");
    openapiFields.add("fallback_assignment_callback_url");
    openapiFields.add("friendly_name");
    openapiFields.add("links");
    openapiFields.add("sid");
    openapiFields.add("task_reservation_timeout");
    openapiFields.add("url");
    openapiFields.add("workspace_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskrouterV1WorkspaceWorkflow
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskrouterV1WorkspaceWorkflow.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskrouterV1WorkspaceWorkflow is not found in the empty JSON string", TaskrouterV1WorkspaceWorkflow.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskrouterV1WorkspaceWorkflow.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskrouterV1WorkspaceWorkflow` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("assignment_callback_url") != null && !jsonObj.get("assignment_callback_url").isJsonNull()) && !jsonObj.get("assignment_callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignment_callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assignment_callback_url").toString()));
      }
      if ((jsonObj.get("configuration") != null && !jsonObj.get("configuration").isJsonNull()) && !jsonObj.get("configuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configuration").toString()));
      }
      if ((jsonObj.get("document_content_type") != null && !jsonObj.get("document_content_type").isJsonNull()) && !jsonObj.get("document_content_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_content_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_content_type").toString()));
      }
      if ((jsonObj.get("fallback_assignment_callback_url") != null && !jsonObj.get("fallback_assignment_callback_url").isJsonNull()) && !jsonObj.get("fallback_assignment_callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fallback_assignment_callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fallback_assignment_callback_url").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("workspace_sid") != null && !jsonObj.get("workspace_sid").isJsonNull()) && !jsonObj.get("workspace_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspace_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspace_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskrouterV1WorkspaceWorkflow.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskrouterV1WorkspaceWorkflow' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskrouterV1WorkspaceWorkflow> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskrouterV1WorkspaceWorkflow.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskrouterV1WorkspaceWorkflow>() {
           @Override
           public void write(JsonWriter out, TaskrouterV1WorkspaceWorkflow value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskrouterV1WorkspaceWorkflow read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskrouterV1WorkspaceWorkflow given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskrouterV1WorkspaceWorkflow
   * @throws IOException if the JSON string is invalid with respect to TaskrouterV1WorkspaceWorkflow
   */
  public static TaskrouterV1WorkspaceWorkflow fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskrouterV1WorkspaceWorkflow.class);
  }

  /**
   * Convert an instance of TaskrouterV1WorkspaceWorkflow to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

