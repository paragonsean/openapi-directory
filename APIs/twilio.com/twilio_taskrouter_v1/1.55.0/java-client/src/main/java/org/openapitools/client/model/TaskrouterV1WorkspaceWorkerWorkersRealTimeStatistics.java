/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:15.049055-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ACTIVITY_STATISTICS = "activity_statistics";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_STATISTICS)
  private List<Object> activityStatistics;

  public static final String SERIALIZED_NAME_TOTAL_WORKERS = "total_workers";
  @SerializedName(SERIALIZED_NAME_TOTAL_WORKERS)
  private Integer totalWorkers;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WORKSPACE_SID = "workspace_sid";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_SID)
  private String workspaceSid;

  public TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics() {
  }

  public TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics activityStatistics(List<Object> activityStatistics) {
    this.activityStatistics = activityStatistics;
    return this;
  }

  public TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics addActivityStatisticsItem(Object activityStatisticsItem) {
    if (this.activityStatistics == null) {
      this.activityStatistics = new ArrayList<>();
    }
    this.activityStatistics.add(activityStatisticsItem);
    return this;
  }

  /**
   * The number of current Workers by Activity.
   * @return activityStatistics
   */
  @javax.annotation.Nullable
  public List<Object> getActivityStatistics() {
    return activityStatistics;
  }

  public void setActivityStatistics(List<Object> activityStatistics) {
    this.activityStatistics = activityStatistics;
  }


  public TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics totalWorkers(Integer totalWorkers) {
    this.totalWorkers = totalWorkers;
    return this;
  }

  /**
   * The total number of Workers.
   * @return totalWorkers
   */
  @javax.annotation.Nullable
  public Integer getTotalWorkers() {
    return totalWorkers;
  }

  public void setTotalWorkers(Integer totalWorkers) {
    this.totalWorkers = totalWorkers;
  }


  public TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Workers statistics resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics workspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
    return this;
  }

  /**
   * The SID of the Workspace that contains the Workers.
   * @return workspaceSid
   */
  @javax.annotation.Nullable
  public String getWorkspaceSid() {
    return workspaceSid;
  }

  public void setWorkspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics taskrouterV1WorkspaceWorkerWorkersRealTimeStatistics = (TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics) o;
    return Objects.equals(this.accountSid, taskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.accountSid) &&
        Objects.equals(this.activityStatistics, taskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.activityStatistics) &&
        Objects.equals(this.totalWorkers, taskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.totalWorkers) &&
        Objects.equals(this.url, taskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.url) &&
        Objects.equals(this.workspaceSid, taskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.workspaceSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, activityStatistics, totalWorkers, url, workspaceSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    activityStatistics: ").append(toIndentedString(activityStatistics)).append("\n");
    sb.append("    totalWorkers: ").append(toIndentedString(totalWorkers)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    workspaceSid: ").append(toIndentedString(workspaceSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("activity_statistics");
    openapiFields.add("total_workers");
    openapiFields.add("url");
    openapiFields.add("workspace_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics is not found in the empty JSON string", TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("activity_statistics") != null && !jsonObj.get("activity_statistics").isJsonNull() && !jsonObj.get("activity_statistics").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `activity_statistics` to be an array in the JSON string but got `%s`", jsonObj.get("activity_statistics").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("workspace_sid") != null && !jsonObj.get("workspace_sid").isJsonNull()) && !jsonObj.get("workspace_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspace_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspace_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics>() {
           @Override
           public void write(JsonWriter out, TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics
   * @throws IOException if the JSON string is invalid with respect to TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics
   */
  public static TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics.class);
  }

  /**
   * Convert an instance of TaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

