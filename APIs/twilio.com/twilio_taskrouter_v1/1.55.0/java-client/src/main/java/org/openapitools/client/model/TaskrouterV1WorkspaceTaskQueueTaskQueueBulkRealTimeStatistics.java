/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:15.049055-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_TASK_QUEUE_DATA = "task_queue_data";
  @SerializedName(SERIALIZED_NAME_TASK_QUEUE_DATA)
  private List<Object> taskQueueData;

  public static final String SERIALIZED_NAME_TASK_QUEUE_RESPONSE_COUNT = "task_queue_response_count";
  @SerializedName(SERIALIZED_NAME_TASK_QUEUE_RESPONSE_COUNT)
  private Integer taskQueueResponseCount;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WORKSPACE_SID = "workspace_sid";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_SID)
  private String workspaceSid;

  public TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics() {
  }

  public TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics taskQueueData(List<Object> taskQueueData) {
    this.taskQueueData = taskQueueData;
    return this;
  }

  public TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics addTaskQueueDataItem(Object taskQueueDataItem) {
    if (this.taskQueueData == null) {
      this.taskQueueData = new ArrayList<>();
    }
    this.taskQueueData.add(taskQueueDataItem);
    return this;
  }

  /**
   * The real-time statistics for each requested TaskQueue SID. &#x60;task_queue_data&#x60; returns the following attributes:  &#x60;task_queue_sid&#x60;: The SID of the TaskQueue from which these statistics were calculated.  &#x60;total_available_workers&#x60;: The total number of Workers available for Tasks in the TaskQueue.  &#x60;total_eligible_workers&#x60;: The total number of Workers eligible for Tasks in the TaskQueue, regardless of their Activity state.  &#x60;total_tasks&#x60;: The total number of Tasks.  &#x60;longest_task_waiting_age&#x60;: The age of the longest waiting Task.  &#x60;longest_task_waiting_sid&#x60;: The SID of the longest waiting Task.  &#x60;tasks_by_status&#x60;: The number of Tasks grouped by their current status.  &#x60;tasks_by_priority&#x60;: The number of Tasks grouped by priority.  &#x60;activity_statistics&#x60;: The number of current Workers grouped by Activity. 
   * @return taskQueueData
   */
  @javax.annotation.Nullable
  public List<Object> getTaskQueueData() {
    return taskQueueData;
  }

  public void setTaskQueueData(List<Object> taskQueueData) {
    this.taskQueueData = taskQueueData;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics taskQueueResponseCount(Integer taskQueueResponseCount) {
    this.taskQueueResponseCount = taskQueueResponseCount;
    return this;
  }

  /**
   * The number of TaskQueue statistics received in task_queue_data.
   * @return taskQueueResponseCount
   */
  @javax.annotation.Nullable
  public Integer getTaskQueueResponseCount() {
    return taskQueueResponseCount;
  }

  public void setTaskQueueResponseCount(Integer taskQueueResponseCount) {
    this.taskQueueResponseCount = taskQueueResponseCount;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the TaskQueue statistics resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics workspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
    return this;
  }

  /**
   * The SID of the Workspace that contains the TaskQueue.
   * @return workspaceSid
   */
  @javax.annotation.Nullable
  public String getWorkspaceSid() {
    return workspaceSid;
  }

  public void setWorkspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics taskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics = (TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics) o;
    return Objects.equals(this.accountSid, taskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.accountSid) &&
        Objects.equals(this.taskQueueData, taskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.taskQueueData) &&
        Objects.equals(this.taskQueueResponseCount, taskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.taskQueueResponseCount) &&
        Objects.equals(this.url, taskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.url) &&
        Objects.equals(this.workspaceSid, taskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.workspaceSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, taskQueueData, taskQueueResponseCount, url, workspaceSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    taskQueueData: ").append(toIndentedString(taskQueueData)).append("\n");
    sb.append("    taskQueueResponseCount: ").append(toIndentedString(taskQueueResponseCount)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    workspaceSid: ").append(toIndentedString(workspaceSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("task_queue_data");
    openapiFields.add("task_queue_response_count");
    openapiFields.add("url");
    openapiFields.add("workspace_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics is not found in the empty JSON string", TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("task_queue_data") != null && !jsonObj.get("task_queue_data").isJsonNull() && !jsonObj.get("task_queue_data").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_queue_data` to be an array in the JSON string but got `%s`", jsonObj.get("task_queue_data").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("workspace_sid") != null && !jsonObj.get("workspace_sid").isJsonNull()) && !jsonObj.get("workspace_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspace_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspace_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics>() {
           @Override
           public void write(JsonWriter out, TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics
   * @throws IOException if the JSON string is invalid with respect to TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics
   */
  public static TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics.class);
  }

  /**
   * Convert an instance of TaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

