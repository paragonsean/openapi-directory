/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.TaskQueueEnumTaskOrder;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TaskrouterV1WorkspaceTaskQueue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:15.049055-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskrouterV1WorkspaceTaskQueue {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ASSIGNMENT_ACTIVITY_NAME = "assignment_activity_name";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_ACTIVITY_NAME)
  private String assignmentActivityName;

  public static final String SERIALIZED_NAME_ASSIGNMENT_ACTIVITY_SID = "assignment_activity_sid";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_ACTIVITY_SID)
  private String assignmentActivitySid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_MAX_RESERVED_WORKERS = "max_reserved_workers";
  @SerializedName(SERIALIZED_NAME_MAX_RESERVED_WORKERS)
  private Integer maxReservedWorkers;

  public static final String SERIALIZED_NAME_RESERVATION_ACTIVITY_NAME = "reservation_activity_name";
  @SerializedName(SERIALIZED_NAME_RESERVATION_ACTIVITY_NAME)
  private String reservationActivityName;

  public static final String SERIALIZED_NAME_RESERVATION_ACTIVITY_SID = "reservation_activity_sid";
  @SerializedName(SERIALIZED_NAME_RESERVATION_ACTIVITY_SID)
  private String reservationActivitySid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_TARGET_WORKERS = "target_workers";
  @SerializedName(SERIALIZED_NAME_TARGET_WORKERS)
  private String targetWorkers;

  public static final String SERIALIZED_NAME_TASK_ORDER = "task_order";
  @SerializedName(SERIALIZED_NAME_TASK_ORDER)
  private TaskQueueEnumTaskOrder taskOrder;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WORKSPACE_SID = "workspace_sid";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_SID)
  private String workspaceSid;

  public TaskrouterV1WorkspaceTaskQueue() {
  }

  public TaskrouterV1WorkspaceTaskQueue accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public TaskrouterV1WorkspaceTaskQueue assignmentActivityName(String assignmentActivityName) {
    this.assignmentActivityName = assignmentActivityName;
    return this;
  }

  /**
   * The name of the Activity to assign Workers when a task is assigned for them.
   * @return assignmentActivityName
   */
  @javax.annotation.Nullable
  public String getAssignmentActivityName() {
    return assignmentActivityName;
  }

  public void setAssignmentActivityName(String assignmentActivityName) {
    this.assignmentActivityName = assignmentActivityName;
  }


  public TaskrouterV1WorkspaceTaskQueue assignmentActivitySid(String assignmentActivitySid) {
    this.assignmentActivitySid = assignmentActivitySid;
    return this;
  }

  /**
   * The SID of the Activity to assign Workers when a task is assigned for them.
   * @return assignmentActivitySid
   */
  @javax.annotation.Nullable
  public String getAssignmentActivitySid() {
    return assignmentActivitySid;
  }

  public void setAssignmentActivitySid(String assignmentActivitySid) {
    this.assignmentActivitySid = assignmentActivitySid;
  }


  public TaskrouterV1WorkspaceTaskQueue dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public TaskrouterV1WorkspaceTaskQueue dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public TaskrouterV1WorkspaceTaskQueue friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the resource.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public TaskrouterV1WorkspaceTaskQueue links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The URLs of related resources.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public TaskrouterV1WorkspaceTaskQueue maxReservedWorkers(Integer maxReservedWorkers) {
    this.maxReservedWorkers = maxReservedWorkers;
    return this;
  }

  /**
   * The maximum number of Workers to reserve for the assignment of a task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.
   * @return maxReservedWorkers
   */
  @javax.annotation.Nullable
  public Integer getMaxReservedWorkers() {
    return maxReservedWorkers;
  }

  public void setMaxReservedWorkers(Integer maxReservedWorkers) {
    this.maxReservedWorkers = maxReservedWorkers;
  }


  public TaskrouterV1WorkspaceTaskQueue reservationActivityName(String reservationActivityName) {
    this.reservationActivityName = reservationActivityName;
    return this;
  }

  /**
   * The name of the Activity to assign Workers once a task is reserved for them.
   * @return reservationActivityName
   */
  @javax.annotation.Nullable
  public String getReservationActivityName() {
    return reservationActivityName;
  }

  public void setReservationActivityName(String reservationActivityName) {
    this.reservationActivityName = reservationActivityName;
  }


  public TaskrouterV1WorkspaceTaskQueue reservationActivitySid(String reservationActivitySid) {
    this.reservationActivitySid = reservationActivitySid;
    return this;
  }

  /**
   * The SID of the Activity to assign Workers once a task is reserved for them.
   * @return reservationActivitySid
   */
  @javax.annotation.Nullable
  public String getReservationActivitySid() {
    return reservationActivitySid;
  }

  public void setReservationActivitySid(String reservationActivitySid) {
    this.reservationActivitySid = reservationActivitySid;
  }


  public TaskrouterV1WorkspaceTaskQueue sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the TaskQueue resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public TaskrouterV1WorkspaceTaskQueue targetWorkers(String targetWorkers) {
    this.targetWorkers = targetWorkers;
    return this;
  }

  /**
   * A string describing the Worker selection criteria for any Tasks that enter the TaskQueue. For example &#x60;&#39;\&quot;language\&quot; &#x3D;&#x3D; \&quot;spanish\&quot;&#39;&#x60; If no TargetWorkers parameter is provided, Tasks will wait in the TaskQueue until they are either deleted or moved to another TaskQueue. Additional examples on how to describing Worker selection criteria below. Defaults to 1&#x3D;&#x3D;1.
   * @return targetWorkers
   */
  @javax.annotation.Nullable
  public String getTargetWorkers() {
    return targetWorkers;
  }

  public void setTargetWorkers(String targetWorkers) {
    this.targetWorkers = targetWorkers;
  }


  public TaskrouterV1WorkspaceTaskQueue taskOrder(TaskQueueEnumTaskOrder taskOrder) {
    this.taskOrder = taskOrder;
    return this;
  }

  /**
   * Get taskOrder
   * @return taskOrder
   */
  @javax.annotation.Nullable
  public TaskQueueEnumTaskOrder getTaskOrder() {
    return taskOrder;
  }

  public void setTaskOrder(TaskQueueEnumTaskOrder taskOrder) {
    this.taskOrder = taskOrder;
  }


  public TaskrouterV1WorkspaceTaskQueue url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the TaskQueue resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public TaskrouterV1WorkspaceTaskQueue workspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
    return this;
  }

  /**
   * The SID of the Workspace that contains the TaskQueue.
   * @return workspaceSid
   */
  @javax.annotation.Nullable
  public String getWorkspaceSid() {
    return workspaceSid;
  }

  public void setWorkspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskrouterV1WorkspaceTaskQueue taskrouterV1WorkspaceTaskQueue = (TaskrouterV1WorkspaceTaskQueue) o;
    return Objects.equals(this.accountSid, taskrouterV1WorkspaceTaskQueue.accountSid) &&
        Objects.equals(this.assignmentActivityName, taskrouterV1WorkspaceTaskQueue.assignmentActivityName) &&
        Objects.equals(this.assignmentActivitySid, taskrouterV1WorkspaceTaskQueue.assignmentActivitySid) &&
        Objects.equals(this.dateCreated, taskrouterV1WorkspaceTaskQueue.dateCreated) &&
        Objects.equals(this.dateUpdated, taskrouterV1WorkspaceTaskQueue.dateUpdated) &&
        Objects.equals(this.friendlyName, taskrouterV1WorkspaceTaskQueue.friendlyName) &&
        Objects.equals(this.links, taskrouterV1WorkspaceTaskQueue.links) &&
        Objects.equals(this.maxReservedWorkers, taskrouterV1WorkspaceTaskQueue.maxReservedWorkers) &&
        Objects.equals(this.reservationActivityName, taskrouterV1WorkspaceTaskQueue.reservationActivityName) &&
        Objects.equals(this.reservationActivitySid, taskrouterV1WorkspaceTaskQueue.reservationActivitySid) &&
        Objects.equals(this.sid, taskrouterV1WorkspaceTaskQueue.sid) &&
        Objects.equals(this.targetWorkers, taskrouterV1WorkspaceTaskQueue.targetWorkers) &&
        Objects.equals(this.taskOrder, taskrouterV1WorkspaceTaskQueue.taskOrder) &&
        Objects.equals(this.url, taskrouterV1WorkspaceTaskQueue.url) &&
        Objects.equals(this.workspaceSid, taskrouterV1WorkspaceTaskQueue.workspaceSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, assignmentActivityName, assignmentActivitySid, dateCreated, dateUpdated, friendlyName, links, maxReservedWorkers, reservationActivityName, reservationActivitySid, sid, targetWorkers, taskOrder, url, workspaceSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskrouterV1WorkspaceTaskQueue {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    assignmentActivityName: ").append(toIndentedString(assignmentActivityName)).append("\n");
    sb.append("    assignmentActivitySid: ").append(toIndentedString(assignmentActivitySid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    maxReservedWorkers: ").append(toIndentedString(maxReservedWorkers)).append("\n");
    sb.append("    reservationActivityName: ").append(toIndentedString(reservationActivityName)).append("\n");
    sb.append("    reservationActivitySid: ").append(toIndentedString(reservationActivitySid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    targetWorkers: ").append(toIndentedString(targetWorkers)).append("\n");
    sb.append("    taskOrder: ").append(toIndentedString(taskOrder)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    workspaceSid: ").append(toIndentedString(workspaceSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("assignment_activity_name");
    openapiFields.add("assignment_activity_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("friendly_name");
    openapiFields.add("links");
    openapiFields.add("max_reserved_workers");
    openapiFields.add("reservation_activity_name");
    openapiFields.add("reservation_activity_sid");
    openapiFields.add("sid");
    openapiFields.add("target_workers");
    openapiFields.add("task_order");
    openapiFields.add("url");
    openapiFields.add("workspace_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskrouterV1WorkspaceTaskQueue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskrouterV1WorkspaceTaskQueue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskrouterV1WorkspaceTaskQueue is not found in the empty JSON string", TaskrouterV1WorkspaceTaskQueue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskrouterV1WorkspaceTaskQueue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskrouterV1WorkspaceTaskQueue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("assignment_activity_name") != null && !jsonObj.get("assignment_activity_name").isJsonNull()) && !jsonObj.get("assignment_activity_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignment_activity_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assignment_activity_name").toString()));
      }
      if ((jsonObj.get("assignment_activity_sid") != null && !jsonObj.get("assignment_activity_sid").isJsonNull()) && !jsonObj.get("assignment_activity_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignment_activity_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assignment_activity_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("reservation_activity_name") != null && !jsonObj.get("reservation_activity_name").isJsonNull()) && !jsonObj.get("reservation_activity_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reservation_activity_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reservation_activity_name").toString()));
      }
      if ((jsonObj.get("reservation_activity_sid") != null && !jsonObj.get("reservation_activity_sid").isJsonNull()) && !jsonObj.get("reservation_activity_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reservation_activity_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reservation_activity_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("target_workers") != null && !jsonObj.get("target_workers").isJsonNull()) && !jsonObj.get("target_workers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_workers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_workers").toString()));
      }
      if ((jsonObj.get("task_order") != null && !jsonObj.get("task_order").isJsonNull()) && !jsonObj.get("task_order").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_order` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task_order").toString()));
      }
      // validate the optional field `task_order`
      if (jsonObj.get("task_order") != null && !jsonObj.get("task_order").isJsonNull()) {
        TaskQueueEnumTaskOrder.validateJsonElement(jsonObj.get("task_order"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("workspace_sid") != null && !jsonObj.get("workspace_sid").isJsonNull()) && !jsonObj.get("workspace_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspace_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspace_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskrouterV1WorkspaceTaskQueue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskrouterV1WorkspaceTaskQueue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskrouterV1WorkspaceTaskQueue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskrouterV1WorkspaceTaskQueue.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskrouterV1WorkspaceTaskQueue>() {
           @Override
           public void write(JsonWriter out, TaskrouterV1WorkspaceTaskQueue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskrouterV1WorkspaceTaskQueue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskrouterV1WorkspaceTaskQueue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskrouterV1WorkspaceTaskQueue
   * @throws IOException if the JSON string is invalid with respect to TaskrouterV1WorkspaceTaskQueue
   */
  public static TaskrouterV1WorkspaceTaskQueue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskrouterV1WorkspaceTaskQueue.class);
  }

  /**
   * Convert an instance of TaskrouterV1WorkspaceTaskQueue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

