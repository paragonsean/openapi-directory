/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TaskrouterV1WorkspaceWorkerWorkerChannel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:15.049055-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskrouterV1WorkspaceWorkerWorkerChannel {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ASSIGNED_TASKS = "assigned_tasks";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_TASKS)
  private Integer assignedTasks;

  public static final String SERIALIZED_NAME_AVAILABLE = "available";
  @SerializedName(SERIALIZED_NAME_AVAILABLE)
  private Boolean available;

  public static final String SERIALIZED_NAME_AVAILABLE_CAPACITY_PERCENTAGE = "available_capacity_percentage";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_CAPACITY_PERCENTAGE)
  private Integer availableCapacityPercentage;

  public static final String SERIALIZED_NAME_CONFIGURED_CAPACITY = "configured_capacity";
  @SerializedName(SERIALIZED_NAME_CONFIGURED_CAPACITY)
  private Integer configuredCapacity;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_TASK_CHANNEL_SID = "task_channel_sid";
  @SerializedName(SERIALIZED_NAME_TASK_CHANNEL_SID)
  private String taskChannelSid;

  public static final String SERIALIZED_NAME_TASK_CHANNEL_UNIQUE_NAME = "task_channel_unique_name";
  @SerializedName(SERIALIZED_NAME_TASK_CHANNEL_UNIQUE_NAME)
  private String taskChannelUniqueName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WORKER_SID = "worker_sid";
  @SerializedName(SERIALIZED_NAME_WORKER_SID)
  private String workerSid;

  public static final String SERIALIZED_NAME_WORKSPACE_SID = "workspace_sid";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_SID)
  private String workspaceSid;

  public TaskrouterV1WorkspaceWorkerWorkerChannel() {
  }

  public TaskrouterV1WorkspaceWorkerWorkerChannel accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel assignedTasks(Integer assignedTasks) {
    this.assignedTasks = assignedTasks;
    return this;
  }

  /**
   * The total number of Tasks assigned to Worker for the TaskChannel type.
   * @return assignedTasks
   */
  @javax.annotation.Nullable
  public Integer getAssignedTasks() {
    return assignedTasks;
  }

  public void setAssignedTasks(Integer assignedTasks) {
    this.assignedTasks = assignedTasks;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel available(Boolean available) {
    this.available = available;
    return this;
  }

  /**
   * Whether the Worker should receive Tasks of the TaskChannel type.
   * @return available
   */
  @javax.annotation.Nullable
  public Boolean getAvailable() {
    return available;
  }

  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel availableCapacityPercentage(Integer availableCapacityPercentage) {
    this.availableCapacityPercentage = availableCapacityPercentage;
    return this;
  }

  /**
   * The current percentage of capacity the TaskChannel has available. Can be a number between &#x60;0&#x60; and &#x60;100&#x60;. A value of &#x60;0&#x60; indicates that TaskChannel has no capacity available and a value of &#x60;100&#x60; means the  Worker is available to receive any Tasks of this TaskChannel type.
   * @return availableCapacityPercentage
   */
  @javax.annotation.Nullable
  public Integer getAvailableCapacityPercentage() {
    return availableCapacityPercentage;
  }

  public void setAvailableCapacityPercentage(Integer availableCapacityPercentage) {
    this.availableCapacityPercentage = availableCapacityPercentage;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel configuredCapacity(Integer configuredCapacity) {
    this.configuredCapacity = configuredCapacity;
    return this;
  }

  /**
   * The current configured capacity for the WorkerChannel. TaskRouter will not create any reservations after the assigned Tasks for the Worker reaches the value.
   * @return configuredCapacity
   */
  @javax.annotation.Nullable
  public Integer getConfiguredCapacity() {
    return configuredCapacity;
  }

  public void setConfiguredCapacity(Integer configuredCapacity) {
    this.configuredCapacity = configuredCapacity;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the WorkerChannel resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel taskChannelSid(String taskChannelSid) {
    this.taskChannelSid = taskChannelSid;
    return this;
  }

  /**
   * The SID of the TaskChannel.
   * @return taskChannelSid
   */
  @javax.annotation.Nullable
  public String getTaskChannelSid() {
    return taskChannelSid;
  }

  public void setTaskChannelSid(String taskChannelSid) {
    this.taskChannelSid = taskChannelSid;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel taskChannelUniqueName(String taskChannelUniqueName) {
    this.taskChannelUniqueName = taskChannelUniqueName;
    return this;
  }

  /**
   * The unique name of the TaskChannel, such as &#x60;voice&#x60; or &#x60;sms&#x60;.
   * @return taskChannelUniqueName
   */
  @javax.annotation.Nullable
  public String getTaskChannelUniqueName() {
    return taskChannelUniqueName;
  }

  public void setTaskChannelUniqueName(String taskChannelUniqueName) {
    this.taskChannelUniqueName = taskChannelUniqueName;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the WorkerChannel resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel workerSid(String workerSid) {
    this.workerSid = workerSid;
    return this;
  }

  /**
   * The SID of the Worker that contains the WorkerChannel.
   * @return workerSid
   */
  @javax.annotation.Nullable
  public String getWorkerSid() {
    return workerSid;
  }

  public void setWorkerSid(String workerSid) {
    this.workerSid = workerSid;
  }


  public TaskrouterV1WorkspaceWorkerWorkerChannel workspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
    return this;
  }

  /**
   * The SID of the Workspace that contains the WorkerChannel.
   * @return workspaceSid
   */
  @javax.annotation.Nullable
  public String getWorkspaceSid() {
    return workspaceSid;
  }

  public void setWorkspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskrouterV1WorkspaceWorkerWorkerChannel taskrouterV1WorkspaceWorkerWorkerChannel = (TaskrouterV1WorkspaceWorkerWorkerChannel) o;
    return Objects.equals(this.accountSid, taskrouterV1WorkspaceWorkerWorkerChannel.accountSid) &&
        Objects.equals(this.assignedTasks, taskrouterV1WorkspaceWorkerWorkerChannel.assignedTasks) &&
        Objects.equals(this.available, taskrouterV1WorkspaceWorkerWorkerChannel.available) &&
        Objects.equals(this.availableCapacityPercentage, taskrouterV1WorkspaceWorkerWorkerChannel.availableCapacityPercentage) &&
        Objects.equals(this.configuredCapacity, taskrouterV1WorkspaceWorkerWorkerChannel.configuredCapacity) &&
        Objects.equals(this.dateCreated, taskrouterV1WorkspaceWorkerWorkerChannel.dateCreated) &&
        Objects.equals(this.dateUpdated, taskrouterV1WorkspaceWorkerWorkerChannel.dateUpdated) &&
        Objects.equals(this.sid, taskrouterV1WorkspaceWorkerWorkerChannel.sid) &&
        Objects.equals(this.taskChannelSid, taskrouterV1WorkspaceWorkerWorkerChannel.taskChannelSid) &&
        Objects.equals(this.taskChannelUniqueName, taskrouterV1WorkspaceWorkerWorkerChannel.taskChannelUniqueName) &&
        Objects.equals(this.url, taskrouterV1WorkspaceWorkerWorkerChannel.url) &&
        Objects.equals(this.workerSid, taskrouterV1WorkspaceWorkerWorkerChannel.workerSid) &&
        Objects.equals(this.workspaceSid, taskrouterV1WorkspaceWorkerWorkerChannel.workspaceSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, assignedTasks, available, availableCapacityPercentage, configuredCapacity, dateCreated, dateUpdated, sid, taskChannelSid, taskChannelUniqueName, url, workerSid, workspaceSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskrouterV1WorkspaceWorkerWorkerChannel {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    assignedTasks: ").append(toIndentedString(assignedTasks)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    availableCapacityPercentage: ").append(toIndentedString(availableCapacityPercentage)).append("\n");
    sb.append("    configuredCapacity: ").append(toIndentedString(configuredCapacity)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    taskChannelSid: ").append(toIndentedString(taskChannelSid)).append("\n");
    sb.append("    taskChannelUniqueName: ").append(toIndentedString(taskChannelUniqueName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    workerSid: ").append(toIndentedString(workerSid)).append("\n");
    sb.append("    workspaceSid: ").append(toIndentedString(workspaceSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("assigned_tasks");
    openapiFields.add("available");
    openapiFields.add("available_capacity_percentage");
    openapiFields.add("configured_capacity");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("sid");
    openapiFields.add("task_channel_sid");
    openapiFields.add("task_channel_unique_name");
    openapiFields.add("url");
    openapiFields.add("worker_sid");
    openapiFields.add("workspace_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskrouterV1WorkspaceWorkerWorkerChannel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskrouterV1WorkspaceWorkerWorkerChannel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskrouterV1WorkspaceWorkerWorkerChannel is not found in the empty JSON string", TaskrouterV1WorkspaceWorkerWorkerChannel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskrouterV1WorkspaceWorkerWorkerChannel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskrouterV1WorkspaceWorkerWorkerChannel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("task_channel_sid") != null && !jsonObj.get("task_channel_sid").isJsonNull()) && !jsonObj.get("task_channel_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_channel_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task_channel_sid").toString()));
      }
      if ((jsonObj.get("task_channel_unique_name") != null && !jsonObj.get("task_channel_unique_name").isJsonNull()) && !jsonObj.get("task_channel_unique_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_channel_unique_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task_channel_unique_name").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("worker_sid") != null && !jsonObj.get("worker_sid").isJsonNull()) && !jsonObj.get("worker_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `worker_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("worker_sid").toString()));
      }
      if ((jsonObj.get("workspace_sid") != null && !jsonObj.get("workspace_sid").isJsonNull()) && !jsonObj.get("workspace_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspace_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspace_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskrouterV1WorkspaceWorkerWorkerChannel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskrouterV1WorkspaceWorkerWorkerChannel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskrouterV1WorkspaceWorkerWorkerChannel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskrouterV1WorkspaceWorkerWorkerChannel.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskrouterV1WorkspaceWorkerWorkerChannel>() {
           @Override
           public void write(JsonWriter out, TaskrouterV1WorkspaceWorkerWorkerChannel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskrouterV1WorkspaceWorkerWorkerChannel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskrouterV1WorkspaceWorkerWorkerChannel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskrouterV1WorkspaceWorkerWorkerChannel
   * @throws IOException if the JSON string is invalid with respect to TaskrouterV1WorkspaceWorkerWorkerChannel
   */
  public static TaskrouterV1WorkspaceWorkerWorkerChannel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskrouterV1WorkspaceWorkerWorkerChannel.class);
  }

  /**
   * Convert an instance of TaskrouterV1WorkspaceWorkerWorkerChannel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

