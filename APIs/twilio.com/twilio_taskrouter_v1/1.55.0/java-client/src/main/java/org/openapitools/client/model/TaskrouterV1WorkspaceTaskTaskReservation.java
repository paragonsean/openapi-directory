/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.TaskReservationEnumStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TaskrouterV1WorkspaceTaskTaskReservation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:15.049055-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskrouterV1WorkspaceTaskTaskReservation {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_RESERVATION_STATUS = "reservation_status";
  @SerializedName(SERIALIZED_NAME_RESERVATION_STATUS)
  private TaskReservationEnumStatus reservationStatus;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_TASK_SID = "task_sid";
  @SerializedName(SERIALIZED_NAME_TASK_SID)
  private String taskSid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WORKER_NAME = "worker_name";
  @SerializedName(SERIALIZED_NAME_WORKER_NAME)
  private String workerName;

  public static final String SERIALIZED_NAME_WORKER_SID = "worker_sid";
  @SerializedName(SERIALIZED_NAME_WORKER_SID)
  private String workerSid;

  public static final String SERIALIZED_NAME_WORKSPACE_SID = "workspace_sid";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_SID)
  private String workspaceSid;

  public TaskrouterV1WorkspaceTaskTaskReservation() {
  }

  public TaskrouterV1WorkspaceTaskTaskReservation accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskReservation resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The URLs of related resources.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation reservationStatus(TaskReservationEnumStatus reservationStatus) {
    this.reservationStatus = reservationStatus;
    return this;
  }

  /**
   * Get reservationStatus
   * @return reservationStatus
   */
  @javax.annotation.Nullable
  public TaskReservationEnumStatus getReservationStatus() {
    return reservationStatus;
  }

  public void setReservationStatus(TaskReservationEnumStatus reservationStatus) {
    this.reservationStatus = reservationStatus;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the TaskReservation resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation taskSid(String taskSid) {
    this.taskSid = taskSid;
    return this;
  }

  /**
   * The SID of the reserved Task resource.
   * @return taskSid
   */
  @javax.annotation.Nullable
  public String getTaskSid() {
    return taskSid;
  }

  public void setTaskSid(String taskSid) {
    this.taskSid = taskSid;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the TaskReservation reservation.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation workerName(String workerName) {
    this.workerName = workerName;
    return this;
  }

  /**
   * The &#x60;friendly_name&#x60; of the Worker that is reserved.
   * @return workerName
   */
  @javax.annotation.Nullable
  public String getWorkerName() {
    return workerName;
  }

  public void setWorkerName(String workerName) {
    this.workerName = workerName;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation workerSid(String workerSid) {
    this.workerSid = workerSid;
    return this;
  }

  /**
   * The SID of the reserved Worker resource.
   * @return workerSid
   */
  @javax.annotation.Nullable
  public String getWorkerSid() {
    return workerSid;
  }

  public void setWorkerSid(String workerSid) {
    this.workerSid = workerSid;
  }


  public TaskrouterV1WorkspaceTaskTaskReservation workspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
    return this;
  }

  /**
   * The SID of the Workspace that this task is contained within.
   * @return workspaceSid
   */
  @javax.annotation.Nullable
  public String getWorkspaceSid() {
    return workspaceSid;
  }

  public void setWorkspaceSid(String workspaceSid) {
    this.workspaceSid = workspaceSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskrouterV1WorkspaceTaskTaskReservation taskrouterV1WorkspaceTaskTaskReservation = (TaskrouterV1WorkspaceTaskTaskReservation) o;
    return Objects.equals(this.accountSid, taskrouterV1WorkspaceTaskTaskReservation.accountSid) &&
        Objects.equals(this.dateCreated, taskrouterV1WorkspaceTaskTaskReservation.dateCreated) &&
        Objects.equals(this.dateUpdated, taskrouterV1WorkspaceTaskTaskReservation.dateUpdated) &&
        Objects.equals(this.links, taskrouterV1WorkspaceTaskTaskReservation.links) &&
        Objects.equals(this.reservationStatus, taskrouterV1WorkspaceTaskTaskReservation.reservationStatus) &&
        Objects.equals(this.sid, taskrouterV1WorkspaceTaskTaskReservation.sid) &&
        Objects.equals(this.taskSid, taskrouterV1WorkspaceTaskTaskReservation.taskSid) &&
        Objects.equals(this.url, taskrouterV1WorkspaceTaskTaskReservation.url) &&
        Objects.equals(this.workerName, taskrouterV1WorkspaceTaskTaskReservation.workerName) &&
        Objects.equals(this.workerSid, taskrouterV1WorkspaceTaskTaskReservation.workerSid) &&
        Objects.equals(this.workspaceSid, taskrouterV1WorkspaceTaskTaskReservation.workspaceSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, dateCreated, dateUpdated, links, reservationStatus, sid, taskSid, url, workerName, workerSid, workspaceSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskrouterV1WorkspaceTaskTaskReservation {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    reservationStatus: ").append(toIndentedString(reservationStatus)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    taskSid: ").append(toIndentedString(taskSid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    workerName: ").append(toIndentedString(workerName)).append("\n");
    sb.append("    workerSid: ").append(toIndentedString(workerSid)).append("\n");
    sb.append("    workspaceSid: ").append(toIndentedString(workspaceSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("links");
    openapiFields.add("reservation_status");
    openapiFields.add("sid");
    openapiFields.add("task_sid");
    openapiFields.add("url");
    openapiFields.add("worker_name");
    openapiFields.add("worker_sid");
    openapiFields.add("workspace_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskrouterV1WorkspaceTaskTaskReservation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskrouterV1WorkspaceTaskTaskReservation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskrouterV1WorkspaceTaskTaskReservation is not found in the empty JSON string", TaskrouterV1WorkspaceTaskTaskReservation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskrouterV1WorkspaceTaskTaskReservation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskrouterV1WorkspaceTaskTaskReservation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("reservation_status") != null && !jsonObj.get("reservation_status").isJsonNull()) && !jsonObj.get("reservation_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reservation_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reservation_status").toString()));
      }
      // validate the optional field `reservation_status`
      if (jsonObj.get("reservation_status") != null && !jsonObj.get("reservation_status").isJsonNull()) {
        TaskReservationEnumStatus.validateJsonElement(jsonObj.get("reservation_status"));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("task_sid") != null && !jsonObj.get("task_sid").isJsonNull()) && !jsonObj.get("task_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task_sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("worker_name") != null && !jsonObj.get("worker_name").isJsonNull()) && !jsonObj.get("worker_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `worker_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("worker_name").toString()));
      }
      if ((jsonObj.get("worker_sid") != null && !jsonObj.get("worker_sid").isJsonNull()) && !jsonObj.get("worker_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `worker_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("worker_sid").toString()));
      }
      if ((jsonObj.get("workspace_sid") != null && !jsonObj.get("workspace_sid").isJsonNull()) && !jsonObj.get("workspace_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workspace_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workspace_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskrouterV1WorkspaceTaskTaskReservation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskrouterV1WorkspaceTaskTaskReservation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskrouterV1WorkspaceTaskTaskReservation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskrouterV1WorkspaceTaskTaskReservation.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskrouterV1WorkspaceTaskTaskReservation>() {
           @Override
           public void write(JsonWriter out, TaskrouterV1WorkspaceTaskTaskReservation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskrouterV1WorkspaceTaskTaskReservation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskrouterV1WorkspaceTaskTaskReservation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskrouterV1WorkspaceTaskTaskReservation
   * @throws IOException if the JSON string is invalid with respect to TaskrouterV1WorkspaceTaskTaskReservation
   */
  public static TaskrouterV1WorkspaceTaskTaskReservation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskrouterV1WorkspaceTaskTaskReservation.class);
  }

  /**
   * Convert an instance of TaskrouterV1WorkspaceTaskTaskReservation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

