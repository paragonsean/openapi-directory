/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListWorkflowResponse;
import org.openapitools.client.model.TaskrouterV1WorkspaceWorkflow;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskrouterV1WorkflowApi
 */
@Disabled
public class TaskrouterV1WorkflowApiTest {

    private final TaskrouterV1WorkflowApi api = new TaskrouterV1WorkflowApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorkflowTest() throws ApiException {
        String workspaceSid = null;
        String _configuration = null;
        String friendlyName = null;
        URI assignmentCallbackUrl = null;
        URI fallbackAssignmentCallbackUrl = null;
        Integer taskReservationTimeout = null;
        TaskrouterV1WorkspaceWorkflow response = api.createWorkflow(workspaceSid, _configuration, friendlyName, assignmentCallbackUrl, fallbackAssignmentCallbackUrl, taskReservationTimeout);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWorkflowTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        api.deleteWorkflow(workspaceSid, sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchWorkflowTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        TaskrouterV1WorkspaceWorkflow response = api.fetchWorkflow(workspaceSid, sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkflowTest() throws ApiException {
        String workspaceSid = null;
        String friendlyName = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListWorkflowResponse response = api.listWorkflow(workspaceSid, friendlyName, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkflowTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        URI assignmentCallbackUrl = null;
        String _configuration = null;
        URI fallbackAssignmentCallbackUrl = null;
        String friendlyName = null;
        String reEvaluateTasks = null;
        Integer taskReservationTimeout = null;
        TaskrouterV1WorkspaceWorkflow response = api.updateWorkflow(workspaceSid, sid, assignmentCallbackUrl, _configuration, fallbackAssignmentCallbackUrl, friendlyName, reEvaluateTasks, taskReservationTimeout);
        // TODO: test validations
    }

}
