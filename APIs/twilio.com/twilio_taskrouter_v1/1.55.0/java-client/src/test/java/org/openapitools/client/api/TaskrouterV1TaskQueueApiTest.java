/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListTaskQueueResponse;
import org.openapitools.client.model.TaskQueueEnumTaskOrder;
import org.openapitools.client.model.TaskrouterV1WorkspaceTaskQueue;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskrouterV1TaskQueueApi
 */
@Disabled
public class TaskrouterV1TaskQueueApiTest {

    private final TaskrouterV1TaskQueueApi api = new TaskrouterV1TaskQueueApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTaskQueueTest() throws ApiException {
        String workspaceSid = null;
        String friendlyName = null;
        String assignmentActivitySid = null;
        Integer maxReservedWorkers = null;
        String reservationActivitySid = null;
        String targetWorkers = null;
        TaskQueueEnumTaskOrder taskOrder = null;
        TaskrouterV1WorkspaceTaskQueue response = api.createTaskQueue(workspaceSid, friendlyName, assignmentActivitySid, maxReservedWorkers, reservationActivitySid, targetWorkers, taskOrder);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTaskQueueTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        api.deleteTaskQueue(workspaceSid, sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchTaskQueueTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        TaskrouterV1WorkspaceTaskQueue response = api.fetchTaskQueue(workspaceSid, sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTaskQueueTest() throws ApiException {
        String workspaceSid = null;
        String friendlyName = null;
        String evaluateWorkerAttributes = null;
        String workerSid = null;
        String ordering = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListTaskQueueResponse response = api.listTaskQueue(workspaceSid, friendlyName, evaluateWorkerAttributes, workerSid, ordering, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTaskQueueTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        String assignmentActivitySid = null;
        String friendlyName = null;
        Integer maxReservedWorkers = null;
        String reservationActivitySid = null;
        String targetWorkers = null;
        TaskQueueEnumTaskOrder taskOrder = null;
        TaskrouterV1WorkspaceTaskQueue response = api.updateTaskQueue(workspaceSid, sid, assignmentActivitySid, friendlyName, maxReservedWorkers, reservationActivitySid, targetWorkers, taskOrder);
        // TODO: test validations
    }

}
