/*
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListWorkerResponse;
import org.openapitools.client.model.TaskrouterV1WorkspaceWorker;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskrouterV1WorkerApi
 */
@Disabled
public class TaskrouterV1WorkerApiTest {

    private final TaskrouterV1WorkerApi api = new TaskrouterV1WorkerApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorkerTest() throws ApiException {
        String workspaceSid = null;
        String friendlyName = null;
        String activitySid = null;
        String attributes = null;
        TaskrouterV1WorkspaceWorker response = api.createWorker(workspaceSid, friendlyName, activitySid, attributes);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWorkerTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        String ifMatch = null;
        api.deleteWorker(workspaceSid, sid, ifMatch);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchWorkerTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        TaskrouterV1WorkspaceWorker response = api.fetchWorker(workspaceSid, sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkerTest() throws ApiException {
        String workspaceSid = null;
        String activityName = null;
        String activitySid = null;
        String available = null;
        String friendlyName = null;
        String targetWorkersExpression = null;
        String taskQueueName = null;
        String taskQueueSid = null;
        String ordering = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListWorkerResponse response = api.listWorker(workspaceSid, activityName, activitySid, available, friendlyName, targetWorkersExpression, taskQueueName, taskQueueSid, ordering, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkerTest() throws ApiException {
        String workspaceSid = null;
        String sid = null;
        String ifMatch = null;
        String activitySid = null;
        String attributes = null;
        String friendlyName = null;
        Boolean rejectPendingReservations = null;
        TaskrouterV1WorkspaceWorker response = api.updateWorker(workspaceSid, sid, ifMatch, activitySid, attributes, friendlyName, rejectPendingReservations);
        // TODO: test validations
    }

}
