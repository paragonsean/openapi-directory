/**
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskrouter_v1_workspace_event.h
 *
 * 
 */

#ifndef OAITaskrouter_v1_workspace_event_H
#define OAITaskrouter_v1_workspace_event_H

#include <QJsonObject>

#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaskrouter_v1_workspace_event : public OAIObject {
public:
    OAITaskrouter_v1_workspace_event();
    OAITaskrouter_v1_workspace_event(QString json);
    ~OAITaskrouter_v1_workspace_event() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getActorSid() const;
    void setActorSid(const QString &actor_sid);
    bool is_actor_sid_Set() const;
    bool is_actor_sid_Valid() const;

    QString getActorType() const;
    void setActorType(const QString &actor_type);
    bool is_actor_type_Set() const;
    bool is_actor_type_Valid() const;

    QString getActorUrl() const;
    void setActorUrl(const QString &actor_url);
    bool is_actor_url_Set() const;
    bool is_actor_url_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QJsonValue getEventData() const;
    void setEventData(const QJsonValue &event_data);
    bool is_event_data_Set() const;
    bool is_event_data_Valid() const;

    QDateTime getEventDate() const;
    void setEventDate(const QDateTime &event_date);
    bool is_event_date_Set() const;
    bool is_event_date_Valid() const;

    qint64 getEventDateMs() const;
    void setEventDateMs(const qint64 &event_date_ms);
    bool is_event_date_ms_Set() const;
    bool is_event_date_ms_Valid() const;

    QString getEventType() const;
    void setEventType(const QString &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QString getResourceSid() const;
    void setResourceSid(const QString &resource_sid);
    bool is_resource_sid_Set() const;
    bool is_resource_sid_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getResourceUrl() const;
    void setResourceUrl(const QString &resource_url);
    bool is_resource_url_Set() const;
    bool is_resource_url_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSourceIpAddress() const;
    void setSourceIpAddress(const QString &source_ip_address);
    bool is_source_ip_address_Set() const;
    bool is_source_ip_address_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getWorkspaceSid() const;
    void setWorkspaceSid(const QString &workspace_sid);
    bool is_workspace_sid_Set() const;
    bool is_workspace_sid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_actor_sid;
    bool m_actor_sid_isSet;
    bool m_actor_sid_isValid;

    QString m_actor_type;
    bool m_actor_type_isSet;
    bool m_actor_type_isValid;

    QString m_actor_url;
    bool m_actor_url_isSet;
    bool m_actor_url_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QJsonValue m_event_data;
    bool m_event_data_isSet;
    bool m_event_data_isValid;

    QDateTime m_event_date;
    bool m_event_date_isSet;
    bool m_event_date_isValid;

    qint64 m_event_date_ms;
    bool m_event_date_ms_isSet;
    bool m_event_date_ms_isValid;

    QString m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QString m_resource_sid;
    bool m_resource_sid_isSet;
    bool m_resource_sid_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_resource_url;
    bool m_resource_url_isSet;
    bool m_resource_url_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_source_ip_address;
    bool m_source_ip_address_isSet;
    bool m_source_ip_address_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_workspace_sid;
    bool m_workspace_sid_isSet;
    bool m_workspace_sid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskrouter_v1_workspace_event)

#endif // OAITaskrouter_v1_workspace_event_H
