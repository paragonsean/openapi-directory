/**
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskrouter_v1_workspace.h
 *
 * 
 */

#ifndef OAITaskrouter_v1_workspace_H
#define OAITaskrouter_v1_workspace_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIWorkspace_enum_queue_order.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaskrouter_v1_workspace : public OAIObject {
public:
    OAITaskrouter_v1_workspace();
    OAITaskrouter_v1_workspace(QString json);
    ~OAITaskrouter_v1_workspace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getDefaultActivityName() const;
    void setDefaultActivityName(const QString &default_activity_name);
    bool is_default_activity_name_Set() const;
    bool is_default_activity_name_Valid() const;

    QString getDefaultActivitySid() const;
    void setDefaultActivitySid(const QString &default_activity_sid);
    bool is_default_activity_sid_Set() const;
    bool is_default_activity_sid_Valid() const;

    QString getEventCallbackUrl() const;
    void setEventCallbackUrl(const QString &event_callback_url);
    bool is_event_callback_url_Set() const;
    bool is_event_callback_url_Valid() const;

    QString getEventsFilter() const;
    void setEventsFilter(const QString &events_filter);
    bool is_events_filter_Set() const;
    bool is_events_filter_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    bool isMultiTaskEnabled() const;
    void setMultiTaskEnabled(const bool &multi_task_enabled);
    bool is_multi_task_enabled_Set() const;
    bool is_multi_task_enabled_Valid() const;

    OAIWorkspace_enum_queue_order getPrioritizeQueueOrder() const;
    void setPrioritizeQueueOrder(const OAIWorkspace_enum_queue_order &prioritize_queue_order);
    bool is_prioritize_queue_order_Set() const;
    bool is_prioritize_queue_order_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getTimeoutActivityName() const;
    void setTimeoutActivityName(const QString &timeout_activity_name);
    bool is_timeout_activity_name_Set() const;
    bool is_timeout_activity_name_Valid() const;

    QString getTimeoutActivitySid() const;
    void setTimeoutActivitySid(const QString &timeout_activity_sid);
    bool is_timeout_activity_sid_Set() const;
    bool is_timeout_activity_sid_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_default_activity_name;
    bool m_default_activity_name_isSet;
    bool m_default_activity_name_isValid;

    QString m_default_activity_sid;
    bool m_default_activity_sid_isSet;
    bool m_default_activity_sid_isValid;

    QString m_event_callback_url;
    bool m_event_callback_url_isSet;
    bool m_event_callback_url_isValid;

    QString m_events_filter;
    bool m_events_filter_isSet;
    bool m_events_filter_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    bool m_multi_task_enabled;
    bool m_multi_task_enabled_isSet;
    bool m_multi_task_enabled_isValid;

    OAIWorkspace_enum_queue_order m_prioritize_queue_order;
    bool m_prioritize_queue_order_isSet;
    bool m_prioritize_queue_order_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_timeout_activity_name;
    bool m_timeout_activity_name_isSet;
    bool m_timeout_activity_name_isValid;

    QString m_timeout_activity_sid;
    bool m_timeout_activity_sid_isSet;
    bool m_timeout_activity_sid_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskrouter_v1_workspace)

#endif // OAITaskrouter_v1_workspace_H
