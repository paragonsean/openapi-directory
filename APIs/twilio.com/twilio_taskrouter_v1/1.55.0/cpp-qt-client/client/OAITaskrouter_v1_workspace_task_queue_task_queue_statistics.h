/**
 * Twilio - Taskrouter
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskrouter_v1_workspace_task_queue_task_queue_statistics.h
 *
 * 
 */

#ifndef OAITaskrouter_v1_workspace_task_queue_task_queue_statistics_H
#define OAITaskrouter_v1_workspace_task_queue_task_queue_statistics_H

#include <QJsonObject>

#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaskrouter_v1_workspace_task_queue_task_queue_statistics : public OAIObject {
public:
    OAITaskrouter_v1_workspace_task_queue_task_queue_statistics();
    OAITaskrouter_v1_workspace_task_queue_task_queue_statistics(QString json);
    ~OAITaskrouter_v1_workspace_task_queue_task_queue_statistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QJsonValue getCumulative() const;
    void setCumulative(const QJsonValue &cumulative);
    bool is_cumulative_Set() const;
    bool is_cumulative_Valid() const;

    QJsonValue getRealtime() const;
    void setRealtime(const QJsonValue &realtime);
    bool is_realtime_Set() const;
    bool is_realtime_Valid() const;

    QString getTaskQueueSid() const;
    void setTaskQueueSid(const QString &task_queue_sid);
    bool is_task_queue_sid_Set() const;
    bool is_task_queue_sid_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getWorkspaceSid() const;
    void setWorkspaceSid(const QString &workspace_sid);
    bool is_workspace_sid_Set() const;
    bool is_workspace_sid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QJsonValue m_cumulative;
    bool m_cumulative_isSet;
    bool m_cumulative_isValid;

    QJsonValue m_realtime;
    bool m_realtime_isSet;
    bool m_realtime_isValid;

    QString m_task_queue_sid;
    bool m_task_queue_sid_isSet;
    bool m_task_queue_sid_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_workspace_sid;
    bool m_workspace_sid_isSet;
    bool m_workspace_sid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskrouter_v1_workspace_task_queue_task_queue_statistics)

#endif // OAITaskrouter_v1_workspace_task_queue_task_queue_statistics_H
