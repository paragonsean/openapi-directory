/**
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelEnumChannelType from './ChannelEnumChannelType';

/**
 * The ChatV3Channel model module.
 * @module model/ChatV3Channel
 * @version 1.55.0
 */
class ChatV3Channel {
    /**
     * Constructs a new <code>ChatV3Channel</code>.
     * @alias module:model/ChatV3Channel
     */
    constructor() { 
        
        ChatV3Channel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChatV3Channel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatV3Channel} obj Optional instance to populate.
     * @return {module:model/ChatV3Channel} The populated <code>ChatV3Channel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatV3Channel();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], 'String');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('members_count')) {
                obj['members_count'] = ApiClient.convertToType(data['members_count'], 'Number');
            }
            if (data.hasOwnProperty('messages_count')) {
                obj['messages_count'] = ApiClient.convertToType(data['messages_count'], 'Number');
            }
            if (data.hasOwnProperty('messaging_service_sid')) {
                obj['messaging_service_sid'] = ApiClient.convertToType(data['messaging_service_sid'], 'String');
            }
            if (data.hasOwnProperty('service_sid')) {
                obj['service_sid'] = ApiClient.convertToType(data['service_sid'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ChannelEnumChannelType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('unique_name')) {
                obj['unique_name'] = ApiClient.convertToType(data['unique_name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatV3Channel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatV3Channel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['attributes'] && !(typeof data['attributes'] === 'string' || data['attributes'] instanceof String)) {
            throw new Error("Expected the field `attributes` to be a primitive type in the JSON string but got " + data['attributes']);
        }
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['messaging_service_sid'] && !(typeof data['messaging_service_sid'] === 'string' || data['messaging_service_sid'] instanceof String)) {
            throw new Error("Expected the field `messaging_service_sid` to be a primitive type in the JSON string but got " + data['messaging_service_sid']);
        }
        // ensure the json data is a string
        if (data['service_sid'] && !(typeof data['service_sid'] === 'string' || data['service_sid'] instanceof String)) {
            throw new Error("Expected the field `service_sid` to be a primitive type in the JSON string but got " + data['service_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['unique_name'] && !(typeof data['unique_name'] === 'string' || data['unique_name'] instanceof String)) {
            throw new Error("Expected the field `unique_name` to be a primitive type in the JSON string but got " + data['unique_name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Channel resource.
 * @member {String} account_sid
 */
ChatV3Channel.prototype['account_sid'] = undefined;

/**
 * The JSON string that stores application-specific data. If attributes have not been set, `{}` is returned.
 * @member {String} attributes
 */
ChatV3Channel.prototype['attributes'] = undefined;

/**
 * The `identity` of the User that created the channel. If the Channel was created by using the API, the value is `system`.
 * @member {String} created_by
 */
ChatV3Channel.prototype['created_by'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
ChatV3Channel.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
ChatV3Channel.prototype['date_updated'] = undefined;

/**
 * The string that you assigned to describe the resource.
 * @member {String} friendly_name
 */
ChatV3Channel.prototype['friendly_name'] = undefined;

/**
 * The number of Members in the Channel.
 * @member {Number} members_count
 */
ChatV3Channel.prototype['members_count'] = undefined;

/**
 * The number of Messages that have been passed in the Channel.
 * @member {Number} messages_count
 */
ChatV3Channel.prototype['messages_count'] = undefined;

/**
 * The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this channel belongs to.
 * @member {String} messaging_service_sid
 */
ChatV3Channel.prototype['messaging_service_sid'] = undefined;

/**
 * The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) the Channel resource is associated with.
 * @member {String} service_sid
 */
ChatV3Channel.prototype['service_sid'] = undefined;

/**
 * The unique string that we created to identify the Channel resource.
 * @member {String} sid
 */
ChatV3Channel.prototype['sid'] = undefined;

/**
 * @member {module:model/ChannelEnumChannelType} type
 */
ChatV3Channel.prototype['type'] = undefined;

/**
 * An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.
 * @member {String} unique_name
 */
ChatV3Channel.prototype['unique_name'] = undefined;

/**
 * The absolute URL of the Channel resource.
 * @member {String} url
 */
ChatV3Channel.prototype['url'] = undefined;






export default ChatV3Channel;

