/**
 * Twilio - Media
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlayerStreamerEnumEndedReason from './PlayerStreamerEnumEndedReason';
import PlayerStreamerEnumStatus from './PlayerStreamerEnumStatus';

/**
 * The MediaV1PlayerStreamer model module.
 * @module model/MediaV1PlayerStreamer
 * @version 1.55.0
 */
class MediaV1PlayerStreamer {
    /**
     * Constructs a new <code>MediaV1PlayerStreamer</code>.
     * @alias module:model/MediaV1PlayerStreamer
     */
    constructor() { 
        
        MediaV1PlayerStreamer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MediaV1PlayerStreamer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MediaV1PlayerStreamer} obj Optional instance to populate.
     * @return {module:model/MediaV1PlayerStreamer} The populated <code>MediaV1PlayerStreamer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MediaV1PlayerStreamer();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('ended_reason')) {
                obj['ended_reason'] = PlayerStreamerEnumEndedReason.constructFromObject(data['ended_reason']);
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('max_duration')) {
                obj['max_duration'] = ApiClient.convertToType(data['max_duration'], 'Number');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = PlayerStreamerEnumStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('status_callback')) {
                obj['status_callback'] = ApiClient.convertToType(data['status_callback'], 'String');
            }
            if (data.hasOwnProperty('status_callback_method')) {
                obj['status_callback_method'] = ApiClient.convertToType(data['status_callback_method'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('video')) {
                obj['video'] = ApiClient.convertToType(data['video'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MediaV1PlayerStreamer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MediaV1PlayerStreamer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['ended_reason'] && !(typeof data['ended_reason'] === 'string' || data['ended_reason'] instanceof String)) {
            throw new Error("Expected the field `ended_reason` to be a primitive type in the JSON string but got " + data['ended_reason']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['status_callback'] && !(typeof data['status_callback'] === 'string' || data['status_callback'] instanceof String)) {
            throw new Error("Expected the field `status_callback` to be a primitive type in the JSON string but got " + data['status_callback']);
        }
        // ensure the json data is a string
        if (data['status_callback_method'] && !(typeof data['status_callback_method'] === 'string' || data['status_callback_method'] instanceof String)) {
            throw new Error("Expected the field `status_callback_method` to be a primitive type in the JSON string but got " + data['status_callback_method']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the PlayerStreamer resource.
 * @member {String} account_sid
 */
MediaV1PlayerStreamer.prototype['account_sid'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
MediaV1PlayerStreamer.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
MediaV1PlayerStreamer.prototype['date_updated'] = undefined;

/**
 * @member {module:model/PlayerStreamerEnumEndedReason} ended_reason
 */
MediaV1PlayerStreamer.prototype['ended_reason'] = undefined;

/**
 * The URLs of related resources.
 * @member {Object} links
 */
MediaV1PlayerStreamer.prototype['links'] = undefined;

/**
 * The maximum time, in seconds, that the PlayerStreamer is active (`created` or `started`) before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the PlayerStreamer, regardless of whether media is still streaming.
 * @member {Number} max_duration
 */
MediaV1PlayerStreamer.prototype['max_duration'] = undefined;

/**
 * The unique string generated to identify the PlayerStreamer resource.
 * @member {String} sid
 */
MediaV1PlayerStreamer.prototype['sid'] = undefined;

/**
 * @member {module:model/PlayerStreamerEnumStatus} status
 */
MediaV1PlayerStreamer.prototype['status'] = undefined;

/**
 * The URL to which Twilio will send asynchronous webhook requests for every PlayerStreamer event. See [Status Callbacks](/docs/live/api/status-callbacks) for more details.
 * @member {String} status_callback
 */
MediaV1PlayerStreamer.prototype['status_callback'] = undefined;

/**
 * The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
 * @member {module:model/MediaV1PlayerStreamer.StatusCallbackMethodEnum} status_callback_method
 */
MediaV1PlayerStreamer.prototype['status_callback_method'] = undefined;

/**
 * The absolute URL of the resource.
 * @member {String} url
 */
MediaV1PlayerStreamer.prototype['url'] = undefined;

/**
 * Specifies whether the PlayerStreamer is configured to stream video. Defaults to `true`.
 * @member {Boolean} video
 */
MediaV1PlayerStreamer.prototype['video'] = undefined;





/**
 * Allowed values for the <code>status_callback_method</code> property.
 * @enum {String}
 * @readonly
 */
MediaV1PlayerStreamer['StatusCallbackMethodEnum'] = {

    /**
     * value: "HEAD"
     * @const
     */
    "HEAD": "HEAD",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET",

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "PATCH"
     * @const
     */
    "PATCH": "PATCH",

    /**
     * value: "PUT"
     * @const
     */
    "PUT": "PUT",

    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE"
};



export default MediaV1PlayerStreamer;

