/**
 * Twilio - Media
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MediaRecordingEnumFormat from './MediaRecordingEnumFormat';
import MediaRecordingEnumStatus from './MediaRecordingEnumStatus';

/**
 * The MediaV1MediaRecording model module.
 * @module model/MediaV1MediaRecording
 * @version 1.55.0
 */
class MediaV1MediaRecording {
    /**
     * Constructs a new <code>MediaV1MediaRecording</code>.
     * @alias module:model/MediaV1MediaRecording
     */
    constructor() { 
        
        MediaV1MediaRecording.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MediaV1MediaRecording</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MediaV1MediaRecording} obj Optional instance to populate.
     * @return {module:model/MediaV1MediaRecording} The populated <code>MediaV1MediaRecording</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MediaV1MediaRecording();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = MediaRecordingEnumFormat.constructFromObject(data['format']);
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('media_size')) {
                obj['media_size'] = ApiClient.convertToType(data['media_size'], 'Number');
            }
            if (data.hasOwnProperty('processor_sid')) {
                obj['processor_sid'] = ApiClient.convertToType(data['processor_sid'], 'String');
            }
            if (data.hasOwnProperty('resolution')) {
                obj['resolution'] = ApiClient.convertToType(data['resolution'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('source_sid')) {
                obj['source_sid'] = ApiClient.convertToType(data['source_sid'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = MediaRecordingEnumStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('status_callback')) {
                obj['status_callback'] = ApiClient.convertToType(data['status_callback'], 'String');
            }
            if (data.hasOwnProperty('status_callback_method')) {
                obj['status_callback_method'] = ApiClient.convertToType(data['status_callback_method'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MediaV1MediaRecording</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MediaV1MediaRecording</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['processor_sid'] && !(typeof data['processor_sid'] === 'string' || data['processor_sid'] instanceof String)) {
            throw new Error("Expected the field `processor_sid` to be a primitive type in the JSON string but got " + data['processor_sid']);
        }
        // ensure the json data is a string
        if (data['resolution'] && !(typeof data['resolution'] === 'string' || data['resolution'] instanceof String)) {
            throw new Error("Expected the field `resolution` to be a primitive type in the JSON string but got " + data['resolution']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['source_sid'] && !(typeof data['source_sid'] === 'string' || data['source_sid'] instanceof String)) {
            throw new Error("Expected the field `source_sid` to be a primitive type in the JSON string but got " + data['source_sid']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['status_callback'] && !(typeof data['status_callback'] === 'string' || data['status_callback'] instanceof String)) {
            throw new Error("Expected the field `status_callback` to be a primitive type in the JSON string but got " + data['status_callback']);
        }
        // ensure the json data is a string
        if (data['status_callback_method'] && !(typeof data['status_callback_method'] === 'string' || data['status_callback_method'] instanceof String)) {
            throw new Error("Expected the field `status_callback_method` to be a primitive type in the JSON string but got " + data['status_callback_method']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the MediaRecording resource.
 * @member {String} account_sid
 */
MediaV1MediaRecording.prototype['account_sid'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
MediaV1MediaRecording.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
MediaV1MediaRecording.prototype['date_updated'] = undefined;

/**
 * The duration of the MediaRecording in seconds.
 * @member {Number} duration
 */
MediaV1MediaRecording.prototype['duration'] = undefined;

/**
 * @member {module:model/MediaRecordingEnumFormat} format
 */
MediaV1MediaRecording.prototype['format'] = undefined;

/**
 * The URLs of related resources.
 * @member {Object} links
 */
MediaV1MediaRecording.prototype['links'] = undefined;

/**
 * The size of the recording media in bytes.
 * @member {Number} media_size
 */
MediaV1MediaRecording.prototype['media_size'] = undefined;

/**
 * The SID of the MediaProcessor resource which produced the MediaRecording.
 * @member {String} processor_sid
 */
MediaV1MediaRecording.prototype['processor_sid'] = undefined;

/**
 * The dimensions of the video image in pixels expressed as columns (width) and rows (height).
 * @member {String} resolution
 */
MediaV1MediaRecording.prototype['resolution'] = undefined;

/**
 * The unique string generated to identify the MediaRecording resource.
 * @member {String} sid
 */
MediaV1MediaRecording.prototype['sid'] = undefined;

/**
 * The SID of the resource that generated the original media track(s) of the MediaRecording.
 * @member {String} source_sid
 */
MediaV1MediaRecording.prototype['source_sid'] = undefined;

/**
 * @member {module:model/MediaRecordingEnumStatus} status
 */
MediaV1MediaRecording.prototype['status'] = undefined;

/**
 * The URL to which Twilio will send asynchronous webhook requests for every MediaRecording event. See [Status Callbacks](/docs/live/api/status-callbacks) for more details.
 * @member {String} status_callback
 */
MediaV1MediaRecording.prototype['status_callback'] = undefined;

/**
 * The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
 * @member {module:model/MediaV1MediaRecording.StatusCallbackMethodEnum} status_callback_method
 */
MediaV1MediaRecording.prototype['status_callback_method'] = undefined;

/**
 * The absolute URL of the resource.
 * @member {String} url
 */
MediaV1MediaRecording.prototype['url'] = undefined;





/**
 * Allowed values for the <code>status_callback_method</code> property.
 * @enum {String}
 * @readonly
 */
MediaV1MediaRecording['StatusCallbackMethodEnum'] = {

    /**
     * value: "HEAD"
     * @const
     */
    "HEAD": "HEAD",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET",

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "PATCH"
     * @const
     */
    "PATCH": "PATCH",

    /**
     * value: "PUT"
     * @const
     */
    "PUT": "PUT",

    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE"
};



export default MediaV1MediaRecording;

