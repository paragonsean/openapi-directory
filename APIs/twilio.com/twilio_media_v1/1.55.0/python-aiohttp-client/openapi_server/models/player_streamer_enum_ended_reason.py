# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerStreamerEnumEndedReason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ENDED_MINUS_VIA_MINUS_API = 'ended-via-api'
    MAX_MINUS_DURATION_MINUS_EXCEEDED = 'max-duration-exceeded'
    STREAM_MINUS_DISCONNECTED_MINUS_BY_MINUS_SOURCE = 'stream-disconnected-by-source'
    UNEXPECTED_MINUS_FAILURE = 'unexpected-failure'

    def __init__(self):
        """PlayerStreamerEnumEndedReason - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerStreamerEnumEndedReason':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The player_streamer_enum_ended_reason of this PlayerStreamerEnumEndedReason.
        """
        return util.deserialize_model(dikt, cls)
