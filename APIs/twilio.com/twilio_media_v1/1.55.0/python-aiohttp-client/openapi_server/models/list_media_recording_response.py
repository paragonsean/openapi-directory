# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_media_processor_response_meta import ListMediaProcessorResponseMeta
from openapi_server.models.media_v1_media_recording import MediaV1MediaRecording
from openapi_server import util


class ListMediaRecordingResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_recordings: List[MediaV1MediaRecording]=None, meta: ListMediaProcessorResponseMeta=None):
        """ListMediaRecordingResponse - a model defined in OpenAPI

        :param media_recordings: The media_recordings of this ListMediaRecordingResponse.
        :param meta: The meta of this ListMediaRecordingResponse.
        """
        self.openapi_types = {
            'media_recordings': List[MediaV1MediaRecording],
            'meta': ListMediaProcessorResponseMeta
        }

        self.attribute_map = {
            'media_recordings': 'media_recordings',
            'meta': 'meta'
        }

        self._media_recordings = media_recordings
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListMediaRecordingResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListMediaRecordingResponse of this ListMediaRecordingResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_recordings(self):
        """Gets the media_recordings of this ListMediaRecordingResponse.


        :return: The media_recordings of this ListMediaRecordingResponse.
        :rtype: List[MediaV1MediaRecording]
        """
        return self._media_recordings

    @media_recordings.setter
    def media_recordings(self, media_recordings):
        """Sets the media_recordings of this ListMediaRecordingResponse.


        :param media_recordings: The media_recordings of this ListMediaRecordingResponse.
        :type media_recordings: List[MediaV1MediaRecording]
        """

        self._media_recordings = media_recordings

    @property
    def meta(self):
        """Gets the meta of this ListMediaRecordingResponse.


        :return: The meta of this ListMediaRecordingResponse.
        :rtype: ListMediaProcessorResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListMediaRecordingResponse.


        :param meta: The meta of this ListMediaRecordingResponse.
        :type meta: ListMediaProcessorResponseMeta
        """

        self._meta = meta
