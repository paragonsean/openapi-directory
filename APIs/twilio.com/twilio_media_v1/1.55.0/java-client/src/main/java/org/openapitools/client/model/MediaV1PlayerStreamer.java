/*
 * Twilio - Media
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PlayerStreamerEnumEndedReason;
import org.openapitools.client.model.PlayerStreamerEnumStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MediaV1PlayerStreamer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:20.389389-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MediaV1PlayerStreamer {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_ENDED_REASON = "ended_reason";
  @SerializedName(SERIALIZED_NAME_ENDED_REASON)
  private PlayerStreamerEnumEndedReason endedReason;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_MAX_DURATION = "max_duration";
  @SerializedName(SERIALIZED_NAME_MAX_DURATION)
  private Integer maxDuration;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private PlayerStreamerEnumStatus status;

  public static final String SERIALIZED_NAME_STATUS_CALLBACK = "status_callback";
  @SerializedName(SERIALIZED_NAME_STATUS_CALLBACK)
  private URI statusCallback;

  /**
   * The HTTP method Twilio should use to call the &#x60;status_callback&#x60; URL. Can be &#x60;POST&#x60; or &#x60;GET&#x60; and the default is &#x60;POST&#x60;.
   */
  @JsonAdapter(StatusCallbackMethodEnum.Adapter.class)
  public enum StatusCallbackMethodEnum {
    HEAD("HEAD"),
    
    GET("GET"),
    
    POST("POST"),
    
    PATCH("PATCH"),
    
    PUT("PUT"),
    
    DELETE("DELETE");

    private String value;

    StatusCallbackMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusCallbackMethodEnum fromValue(String value) {
      for (StatusCallbackMethodEnum b : StatusCallbackMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusCallbackMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusCallbackMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusCallbackMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusCallbackMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusCallbackMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS_CALLBACK_METHOD = "status_callback_method";
  @SerializedName(SERIALIZED_NAME_STATUS_CALLBACK_METHOD)
  private StatusCallbackMethodEnum statusCallbackMethod;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_VIDEO = "video";
  @SerializedName(SERIALIZED_NAME_VIDEO)
  private Boolean video;

  public MediaV1PlayerStreamer() {
  }

  public MediaV1PlayerStreamer accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the PlayerStreamer resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public MediaV1PlayerStreamer dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public MediaV1PlayerStreamer dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public MediaV1PlayerStreamer endedReason(PlayerStreamerEnumEndedReason endedReason) {
    this.endedReason = endedReason;
    return this;
  }

  /**
   * Get endedReason
   * @return endedReason
   */
  @javax.annotation.Nullable
  public PlayerStreamerEnumEndedReason getEndedReason() {
    return endedReason;
  }

  public void setEndedReason(PlayerStreamerEnumEndedReason endedReason) {
    this.endedReason = endedReason;
  }


  public MediaV1PlayerStreamer links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The URLs of related resources.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public MediaV1PlayerStreamer maxDuration(Integer maxDuration) {
    this.maxDuration = maxDuration;
    return this;
  }

  /**
   * The maximum time, in seconds, that the PlayerStreamer is active (&#x60;created&#x60; or &#x60;started&#x60;) before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the PlayerStreamer, regardless of whether media is still streaming.
   * @return maxDuration
   */
  @javax.annotation.Nullable
  public Integer getMaxDuration() {
    return maxDuration;
  }

  public void setMaxDuration(Integer maxDuration) {
    this.maxDuration = maxDuration;
  }


  public MediaV1PlayerStreamer sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string generated to identify the PlayerStreamer resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public MediaV1PlayerStreamer status(PlayerStreamerEnumStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public PlayerStreamerEnumStatus getStatus() {
    return status;
  }

  public void setStatus(PlayerStreamerEnumStatus status) {
    this.status = status;
  }


  public MediaV1PlayerStreamer statusCallback(URI statusCallback) {
    this.statusCallback = statusCallback;
    return this;
  }

  /**
   * The URL to which Twilio will send asynchronous webhook requests for every PlayerStreamer event. See [Status Callbacks](/docs/live/api/status-callbacks) for more details.
   * @return statusCallback
   */
  @javax.annotation.Nullable
  public URI getStatusCallback() {
    return statusCallback;
  }

  public void setStatusCallback(URI statusCallback) {
    this.statusCallback = statusCallback;
  }


  public MediaV1PlayerStreamer statusCallbackMethod(StatusCallbackMethodEnum statusCallbackMethod) {
    this.statusCallbackMethod = statusCallbackMethod;
    return this;
  }

  /**
   * The HTTP method Twilio should use to call the &#x60;status_callback&#x60; URL. Can be &#x60;POST&#x60; or &#x60;GET&#x60; and the default is &#x60;POST&#x60;.
   * @return statusCallbackMethod
   */
  @javax.annotation.Nullable
  public StatusCallbackMethodEnum getStatusCallbackMethod() {
    return statusCallbackMethod;
  }

  public void setStatusCallbackMethod(StatusCallbackMethodEnum statusCallbackMethod) {
    this.statusCallbackMethod = statusCallbackMethod;
  }


  public MediaV1PlayerStreamer url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public MediaV1PlayerStreamer video(Boolean video) {
    this.video = video;
    return this;
  }

  /**
   * Specifies whether the PlayerStreamer is configured to stream video. Defaults to &#x60;true&#x60;.
   * @return video
   */
  @javax.annotation.Nullable
  public Boolean getVideo() {
    return video;
  }

  public void setVideo(Boolean video) {
    this.video = video;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaV1PlayerStreamer mediaV1PlayerStreamer = (MediaV1PlayerStreamer) o;
    return Objects.equals(this.accountSid, mediaV1PlayerStreamer.accountSid) &&
        Objects.equals(this.dateCreated, mediaV1PlayerStreamer.dateCreated) &&
        Objects.equals(this.dateUpdated, mediaV1PlayerStreamer.dateUpdated) &&
        Objects.equals(this.endedReason, mediaV1PlayerStreamer.endedReason) &&
        Objects.equals(this.links, mediaV1PlayerStreamer.links) &&
        Objects.equals(this.maxDuration, mediaV1PlayerStreamer.maxDuration) &&
        Objects.equals(this.sid, mediaV1PlayerStreamer.sid) &&
        Objects.equals(this.status, mediaV1PlayerStreamer.status) &&
        Objects.equals(this.statusCallback, mediaV1PlayerStreamer.statusCallback) &&
        Objects.equals(this.statusCallbackMethod, mediaV1PlayerStreamer.statusCallbackMethod) &&
        Objects.equals(this.url, mediaV1PlayerStreamer.url) &&
        Objects.equals(this.video, mediaV1PlayerStreamer.video);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, dateCreated, dateUpdated, endedReason, links, maxDuration, sid, status, statusCallback, statusCallbackMethod, url, video);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaV1PlayerStreamer {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    endedReason: ").append(toIndentedString(endedReason)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    maxDuration: ").append(toIndentedString(maxDuration)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusCallback: ").append(toIndentedString(statusCallback)).append("\n");
    sb.append("    statusCallbackMethod: ").append(toIndentedString(statusCallbackMethod)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    video: ").append(toIndentedString(video)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("ended_reason");
    openapiFields.add("links");
    openapiFields.add("max_duration");
    openapiFields.add("sid");
    openapiFields.add("status");
    openapiFields.add("status_callback");
    openapiFields.add("status_callback_method");
    openapiFields.add("url");
    openapiFields.add("video");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MediaV1PlayerStreamer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MediaV1PlayerStreamer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MediaV1PlayerStreamer is not found in the empty JSON string", MediaV1PlayerStreamer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MediaV1PlayerStreamer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MediaV1PlayerStreamer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("ended_reason") != null && !jsonObj.get("ended_reason").isJsonNull()) && !jsonObj.get("ended_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ended_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ended_reason").toString()));
      }
      // validate the optional field `ended_reason`
      if (jsonObj.get("ended_reason") != null && !jsonObj.get("ended_reason").isJsonNull()) {
        PlayerStreamerEnumEndedReason.validateJsonElement(jsonObj.get("ended_reason"));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        PlayerStreamerEnumStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("status_callback") != null && !jsonObj.get("status_callback").isJsonNull()) && !jsonObj.get("status_callback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_callback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_callback").toString()));
      }
      if ((jsonObj.get("status_callback_method") != null && !jsonObj.get("status_callback_method").isJsonNull()) && !jsonObj.get("status_callback_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_callback_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_callback_method").toString()));
      }
      // validate the optional field `status_callback_method`
      if (jsonObj.get("status_callback_method") != null && !jsonObj.get("status_callback_method").isJsonNull()) {
        StatusCallbackMethodEnum.validateJsonElement(jsonObj.get("status_callback_method"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MediaV1PlayerStreamer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MediaV1PlayerStreamer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MediaV1PlayerStreamer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MediaV1PlayerStreamer.class));

       return (TypeAdapter<T>) new TypeAdapter<MediaV1PlayerStreamer>() {
           @Override
           public void write(JsonWriter out, MediaV1PlayerStreamer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MediaV1PlayerStreamer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MediaV1PlayerStreamer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MediaV1PlayerStreamer
   * @throws IOException if the JSON string is invalid with respect to MediaV1PlayerStreamer
   */
  public static MediaV1PlayerStreamer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MediaV1PlayerStreamer.class);
  }

  /**
   * Convert an instance of MediaV1PlayerStreamer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

