/*
 * Twilio - Media
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListMediaProcessorResponse;
import org.openapitools.client.model.MediaProcessorEnumOrder;
import org.openapitools.client.model.MediaProcessorEnumStatus;
import org.openapitools.client.model.MediaProcessorEnumUpdateStatus;
import org.openapitools.client.model.MediaV1MediaProcessor;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MediaV1MediaProcessorApi
 */
@Disabled
public class MediaV1MediaProcessorApiTest {

    private final MediaV1MediaProcessorApi api = new MediaV1MediaProcessorApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMediaProcessorTest() throws ApiException {
        String extension = null;
        String extensionContext = null;
        Object extensionEnvironment = null;
        Integer maxDuration = null;
        URI statusCallback = null;
        String statusCallbackMethod = null;
        MediaV1MediaProcessor response = api.createMediaProcessor(extension, extensionContext, extensionEnvironment, maxDuration, statusCallback, statusCallbackMethod);
        // TODO: test validations
    }

    /**
     * Returns a single MediaProcessor resource identified by a SID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchMediaProcessorTest() throws ApiException {
        String sid = null;
        MediaV1MediaProcessor response = api.fetchMediaProcessor(sid);
        // TODO: test validations
    }

    /**
     * Returns a list of MediaProcessors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMediaProcessorTest() throws ApiException {
        MediaProcessorEnumOrder order = null;
        MediaProcessorEnumStatus status = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListMediaProcessorResponse response = api.listMediaProcessor(order, status, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a MediaProcessor resource identified by a SID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMediaProcessorTest() throws ApiException {
        String sid = null;
        MediaProcessorEnumUpdateStatus status = null;
        MediaV1MediaProcessor response = api.updateMediaProcessor(sid, status);
        // TODO: test validations
    }

}
