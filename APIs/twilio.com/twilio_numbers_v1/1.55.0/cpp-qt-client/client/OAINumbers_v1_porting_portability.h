/**
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINumbers_v1_porting_portability.h
 *
 * 
 */

#ifndef OAINumbers_v1_porting_portability_H
#define OAINumbers_v1_porting_portability_H

#include <QJsonObject>

#include "OAIPorting_portability_enum_number_type.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINumbers_v1_porting_portability : public OAIObject {
public:
    OAINumbers_v1_porting_portability();
    OAINumbers_v1_porting_portability(QString json);
    ~OAINumbers_v1_porting_portability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getMessagingCarrier() const;
    void setMessagingCarrier(const QString &messaging_carrier);
    bool is_messaging_carrier_Set() const;
    bool is_messaging_carrier_Valid() const;

    QString getNotPortableReason() const;
    void setNotPortableReason(const QString &not_portable_reason);
    bool is_not_portable_reason_Set() const;
    bool is_not_portable_reason_Valid() const;

    qint32 getNotPortableReasonCode() const;
    void setNotPortableReasonCode(const qint32 &not_portable_reason_code);
    bool is_not_portable_reason_code_Set() const;
    bool is_not_portable_reason_code_Valid() const;

    OAIPorting_portability_enum_number_type getNumberType() const;
    void setNumberType(const OAIPorting_portability_enum_number_type &number_type);
    bool is_number_type_Set() const;
    bool is_number_type_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    bool isPinAndAccountNumberRequired() const;
    void setPinAndAccountNumberRequired(const bool &pin_and_account_number_required);
    bool is_pin_and_account_number_required_Set() const;
    bool is_pin_and_account_number_required_Valid() const;

    bool isPortable() const;
    void setPortable(const bool &portable);
    bool is_portable_Set() const;
    bool is_portable_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVoiceCarrier() const;
    void setVoiceCarrier(const QString &voice_carrier);
    bool is_voice_carrier_Set() const;
    bool is_voice_carrier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_messaging_carrier;
    bool m_messaging_carrier_isSet;
    bool m_messaging_carrier_isValid;

    QString m_not_portable_reason;
    bool m_not_portable_reason_isSet;
    bool m_not_portable_reason_isValid;

    qint32 m_not_portable_reason_code;
    bool m_not_portable_reason_code_isSet;
    bool m_not_portable_reason_code_isValid;

    OAIPorting_portability_enum_number_type m_number_type;
    bool m_number_type_isSet;
    bool m_number_type_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    bool m_pin_and_account_number_required;
    bool m_pin_and_account_number_required_isSet;
    bool m_pin_and_account_number_required_isValid;

    bool m_portable;
    bool m_portable_isSet;
    bool m_portable_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_voice_carrier;
    bool m_voice_carrier_isSet;
    bool m_voice_carrier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINumbers_v1_porting_portability)

#endif // OAINumbers_v1_porting_portability_H
