/**
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumbers_v1_bulk_eligibility.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumbers_v1_bulk_eligibility::OAINumbers_v1_bulk_eligibility(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumbers_v1_bulk_eligibility::OAINumbers_v1_bulk_eligibility() {
    this->initializeModel();
}

OAINumbers_v1_bulk_eligibility::~OAINumbers_v1_bulk_eligibility() {}

void OAINumbers_v1_bulk_eligibility::initializeModel() {

    m_date_completed_isSet = false;
    m_date_completed_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAINumbers_v1_bulk_eligibility::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumbers_v1_bulk_eligibility::fromJsonObject(QJsonObject json) {

    m_date_completed_isValid = ::OpenAPI::fromJsonValue(m_date_completed, json[QString("date_completed")]);
    m_date_completed_isSet = !json[QString("date_completed")].isNull() && m_date_completed_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAINumbers_v1_bulk_eligibility::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumbers_v1_bulk_eligibility::asJsonObject() const {
    QJsonObject obj;
    if (m_date_completed_isSet) {
        obj.insert(QString("date_completed"), ::OpenAPI::toJsonValue(m_date_completed));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_results.size() > 0) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QDateTime OAINumbers_v1_bulk_eligibility::getDateCompleted() const {
    return m_date_completed;
}
void OAINumbers_v1_bulk_eligibility::setDateCompleted(const QDateTime &date_completed) {
    m_date_completed = date_completed;
    m_date_completed_isSet = true;
}

bool OAINumbers_v1_bulk_eligibility::is_date_completed_Set() const{
    return m_date_completed_isSet;
}

bool OAINumbers_v1_bulk_eligibility::is_date_completed_Valid() const{
    return m_date_completed_isValid;
}

QDateTime OAINumbers_v1_bulk_eligibility::getDateCreated() const {
    return m_date_created;
}
void OAINumbers_v1_bulk_eligibility::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAINumbers_v1_bulk_eligibility::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAINumbers_v1_bulk_eligibility::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAINumbers_v1_bulk_eligibility::getFriendlyName() const {
    return m_friendly_name;
}
void OAINumbers_v1_bulk_eligibility::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAINumbers_v1_bulk_eligibility::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAINumbers_v1_bulk_eligibility::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAINumbers_v1_bulk_eligibility::getRequestId() const {
    return m_request_id;
}
void OAINumbers_v1_bulk_eligibility::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAINumbers_v1_bulk_eligibility::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAINumbers_v1_bulk_eligibility::is_request_id_Valid() const{
    return m_request_id_isValid;
}

QList<QJsonValue> OAINumbers_v1_bulk_eligibility::getResults() const {
    return m_results;
}
void OAINumbers_v1_bulk_eligibility::setResults(const QList<QJsonValue> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAINumbers_v1_bulk_eligibility::is_results_Set() const{
    return m_results_isSet;
}

bool OAINumbers_v1_bulk_eligibility::is_results_Valid() const{
    return m_results_isValid;
}

QString OAINumbers_v1_bulk_eligibility::getStatus() const {
    return m_status;
}
void OAINumbers_v1_bulk_eligibility::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAINumbers_v1_bulk_eligibility::is_status_Set() const{
    return m_status_isSet;
}

bool OAINumbers_v1_bulk_eligibility::is_status_Valid() const{
    return m_status_isValid;
}

QString OAINumbers_v1_bulk_eligibility::getUrl() const {
    return m_url;
}
void OAINumbers_v1_bulk_eligibility::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAINumbers_v1_bulk_eligibility::is_url_Set() const{
    return m_url_isSet;
}

bool OAINumbers_v1_bulk_eligibility::is_url_Valid() const{
    return m_url_isValid;
}

bool OAINumbers_v1_bulk_eligibility::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_completed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumbers_v1_bulk_eligibility::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
