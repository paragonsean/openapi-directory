/**
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PortingPortabilityEnumNumberType from './PortingPortabilityEnumNumberType';

/**
 * The NumbersV1PortingPortability model module.
 * @module model/NumbersV1PortingPortability
 * @version 1.55.0
 */
class NumbersV1PortingPortability {
    /**
     * Constructs a new <code>NumbersV1PortingPortability</code>.
     * @alias module:model/NumbersV1PortingPortability
     */
    constructor() { 
        
        NumbersV1PortingPortability.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NumbersV1PortingPortability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NumbersV1PortingPortability} obj Optional instance to populate.
     * @return {module:model/NumbersV1PortingPortability} The populated <code>NumbersV1PortingPortability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NumbersV1PortingPortability();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('messaging_carrier')) {
                obj['messaging_carrier'] = ApiClient.convertToType(data['messaging_carrier'], 'String');
            }
            if (data.hasOwnProperty('not_portable_reason')) {
                obj['not_portable_reason'] = ApiClient.convertToType(data['not_portable_reason'], 'String');
            }
            if (data.hasOwnProperty('not_portable_reason_code')) {
                obj['not_portable_reason_code'] = ApiClient.convertToType(data['not_portable_reason_code'], 'Number');
            }
            if (data.hasOwnProperty('number_type')) {
                obj['number_type'] = PortingPortabilityEnumNumberType.constructFromObject(data['number_type']);
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('pin_and_account_number_required')) {
                obj['pin_and_account_number_required'] = ApiClient.convertToType(data['pin_and_account_number_required'], 'Boolean');
            }
            if (data.hasOwnProperty('portable')) {
                obj['portable'] = ApiClient.convertToType(data['portable'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('voice_carrier')) {
                obj['voice_carrier'] = ApiClient.convertToType(data['voice_carrier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NumbersV1PortingPortability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NumbersV1PortingPortability</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['messaging_carrier'] && !(typeof data['messaging_carrier'] === 'string' || data['messaging_carrier'] instanceof String)) {
            throw new Error("Expected the field `messaging_carrier` to be a primitive type in the JSON string but got " + data['messaging_carrier']);
        }
        // ensure the json data is a string
        if (data['not_portable_reason'] && !(typeof data['not_portable_reason'] === 'string' || data['not_portable_reason'] instanceof String)) {
            throw new Error("Expected the field `not_portable_reason` to be a primitive type in the JSON string but got " + data['not_portable_reason']);
        }
        // ensure the json data is a string
        if (data['number_type'] && !(typeof data['number_type'] === 'string' || data['number_type'] instanceof String)) {
            throw new Error("Expected the field `number_type` to be a primitive type in the JSON string but got " + data['number_type']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['voice_carrier'] && !(typeof data['voice_carrier'] === 'string' || data['voice_carrier'] instanceof String)) {
            throw new Error("Expected the field `voice_carrier` to be a primitive type in the JSON string but got " + data['voice_carrier']);
        }

        return true;
    }


}



/**
 * The target account sid to which the number will be ported
 * @member {String} account_sid
 */
NumbersV1PortingPortability.prototype['account_sid'] = undefined;

/**
 * Country the phone number belongs to.
 * @member {String} country
 */
NumbersV1PortingPortability.prototype['country'] = undefined;

/**
 * Current messaging carrier of the phone number
 * @member {String} messaging_carrier
 */
NumbersV1PortingPortability.prototype['messaging_carrier'] = undefined;

/**
 * Reason why the phone number cannot be ported into Twilio, `null` otherwise.
 * @member {String} not_portable_reason
 */
NumbersV1PortingPortability.prototype['not_portable_reason'] = undefined;

/**
 * The Portability Reason Code for the phone number if it cannot be ported into Twilio, `null` otherwise. One of `22131`, `22132`, `22130`, `22133`, `22102` or `22135`.
 * @member {Number} not_portable_reason_code
 */
NumbersV1PortingPortability.prototype['not_portable_reason_code'] = undefined;

/**
 * @member {module:model/PortingPortabilityEnumNumberType} number_type
 */
NumbersV1PortingPortability.prototype['number_type'] = undefined;

/**
 * The phone number which portability is to be checked. Phone numbers are in E.164 format (e.g. +16175551212).
 * @member {String} phone_number
 */
NumbersV1PortingPortability.prototype['phone_number'] = undefined;

/**
 * Boolean flag specifying if PIN and account number is required for the phone number.
 * @member {Boolean} pin_and_account_number_required
 */
NumbersV1PortingPortability.prototype['pin_and_account_number_required'] = undefined;

/**
 * Boolean flag specifying if phone number is portable or not.
 * @member {Boolean} portable
 */
NumbersV1PortingPortability.prototype['portable'] = undefined;

/**
 * This is the url of the request that you're trying to reach out to locate the resource.
 * @member {String} url
 */
NumbersV1PortingPortability.prototype['url'] = undefined;

/**
 * Current voice carrier of the phone number
 * @member {String} voice_carrier
 */
NumbersV1PortingPortability.prototype['voice_carrier'] = undefined;






export default NumbersV1PortingPortability;

