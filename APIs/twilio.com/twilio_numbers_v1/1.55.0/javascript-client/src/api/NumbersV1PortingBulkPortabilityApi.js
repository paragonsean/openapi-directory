/**
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import NumbersV1PortingBulkPortability from '../model/NumbersV1PortingBulkPortability';

/**
* NumbersV1PortingBulkPortability service.
* @module api/NumbersV1PortingBulkPortabilityApi
* @version 1.55.0
*/
export default class NumbersV1PortingBulkPortabilityApi {

    /**
    * Constructs a new NumbersV1PortingBulkPortabilityApi. 
    * @alias module:api/NumbersV1PortingBulkPortabilityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createPortingBulkPortability operation.
     * @callback module:api/NumbersV1PortingBulkPortabilityApi~createPortingBulkPortabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumbersV1PortingBulkPortability} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Allows to check if a list of phone numbers can be ported to Twilio or not. This is done asynchronous for each phone number.
     * @param {Array.<String>} phoneNumbers The phone numbers which portability is to be checked. This should be a list of strings. Phone numbers are in E.164 format (e.g. +16175551212). .
     * @param {module:api/NumbersV1PortingBulkPortabilityApi~createPortingBulkPortabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumbersV1PortingBulkPortability}
     */
    createPortingBulkPortability(phoneNumbers, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'phoneNumbers' is set
      if (phoneNumbers === undefined || phoneNumbers === null) {
        throw new Error("Missing the required parameter 'phoneNumbers' when calling createPortingBulkPortability");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'PhoneNumbers': this.apiClient.buildCollectionParam(phoneNumbers, 'csv')
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = NumbersV1PortingBulkPortability;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Porting/Portability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchPortingBulkPortability operation.
     * @callback module:api/NumbersV1PortingBulkPortabilityApi~fetchPortingBulkPortabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumbersV1PortingBulkPortability} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a previous portability check. This should return the current status of the validation and the result for all the numbers provided, given that they have been validated (as this process is performed asynchronously).
     * @param {String} sid A 34 character string that uniquely identifies the Portability check.
     * @param {module:api/NumbersV1PortingBulkPortabilityApi~fetchPortingBulkPortabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumbersV1PortingBulkPortability}
     */
    fetchPortingBulkPortability(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchPortingBulkPortability");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumbersV1PortingBulkPortability;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Porting/Portability/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
