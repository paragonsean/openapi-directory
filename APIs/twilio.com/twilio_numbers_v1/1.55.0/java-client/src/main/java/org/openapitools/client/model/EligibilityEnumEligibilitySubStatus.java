/*
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets eligibility_enum_eligibility_sub_status
 */
@JsonAdapter(EligibilityEnumEligibilitySubStatus.Adapter.class)
public enum EligibilityEnumEligibilitySubStatus {
  
  COUNTRY_INELIGIBLE("country-ineligible"),
  
  NUMBER_FORMAT_INELIGIBLE("number-format-ineligible"),
  
  NUMBER_TYPE_INELIGIBLE("number-type-ineligible"),
  
  CARRIER_INELIGIBLE("carrier-ineligible"),
  
  ALREADY_IN_TWILIO("already-in-twilio"),
  
  INTERNAL_PROCESSING_ERROR("internal-processing-error"),
  
  INVALID_PHONE_NUMBER("invalid-phone-number"),
  
  INVALID_HOSTING_ACCOUNT_SID("invalid-hosting-account-sid"),
  
  ELIGIBLE("eligible");

  private String value;

  EligibilityEnumEligibilitySubStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EligibilityEnumEligibilitySubStatus fromValue(String value) {
    for (EligibilityEnumEligibilitySubStatus b : EligibilityEnumEligibilitySubStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EligibilityEnumEligibilitySubStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final EligibilityEnumEligibilitySubStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EligibilityEnumEligibilitySubStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EligibilityEnumEligibilitySubStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    EligibilityEnumEligibilitySubStatus.fromValue(value);
  }
}

