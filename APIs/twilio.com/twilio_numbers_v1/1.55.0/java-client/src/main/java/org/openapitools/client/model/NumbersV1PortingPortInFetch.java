/*
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NumbersV1PortingPortInFetch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:24.714574-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NumbersV1PortingPortInFetch {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_DOCUMENTS = "documents";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS)
  private List<String> documents;

  public static final String SERIALIZED_NAME_LOSING_CARRIER_INFORMATION = "losing_carrier_information";
  @SerializedName(SERIALIZED_NAME_LOSING_CARRIER_INFORMATION)
  private Object losingCarrierInformation = null;

  public static final String SERIALIZED_NAME_NOTIFICATION_EMAILS = "notification_emails";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_EMAILS)
  private List<String> notificationEmails;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phone_numbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<Object> phoneNumbers;

  public static final String SERIALIZED_NAME_PORT_IN_REQUEST_SID = "port_in_request_sid";
  @SerializedName(SERIALIZED_NAME_PORT_IN_REQUEST_SID)
  private String portInRequestSid;

  public static final String SERIALIZED_NAME_TARGET_PORT_IN_DATE = "target_port_in_date";
  @SerializedName(SERIALIZED_NAME_TARGET_PORT_IN_DATE)
  private LocalDate targetPortInDate;

  public static final String SERIALIZED_NAME_TARGET_PORT_IN_TIME_RANGE_END = "target_port_in_time_range_end";
  @SerializedName(SERIALIZED_NAME_TARGET_PORT_IN_TIME_RANGE_END)
  private String targetPortInTimeRangeEnd;

  public static final String SERIALIZED_NAME_TARGET_PORT_IN_TIME_RANGE_START = "target_port_in_time_range_start";
  @SerializedName(SERIALIZED_NAME_TARGET_PORT_IN_TIME_RANGE_START)
  private String targetPortInTimeRangeStart;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public NumbersV1PortingPortInFetch() {
  }

  public NumbersV1PortingPortInFetch accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The Account SID that the numbers will be added to after they are ported into Twilio.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public NumbersV1PortingPortInFetch documents(List<String> documents) {
    this.documents = documents;
    return this;
  }

  public NumbersV1PortingPortInFetch addDocumentsItem(String documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<>();
    }
    this.documents.add(documentsItem);
    return this;
  }

  /**
   * The list of documents SID referencing a utility bills
   * @return documents
   */
  @javax.annotation.Nullable
  public List<String> getDocuments() {
    return documents;
  }

  public void setDocuments(List<String> documents) {
    this.documents = documents;
  }


  public NumbersV1PortingPortInFetch losingCarrierInformation(Object losingCarrierInformation) {
    this.losingCarrierInformation = losingCarrierInformation;
    return this;
  }

  /**
   * The information for the losing carrier. 
   * @return losingCarrierInformation
   */
  @javax.annotation.Nullable
  public Object getLosingCarrierInformation() {
    return losingCarrierInformation;
  }

  public void setLosingCarrierInformation(Object losingCarrierInformation) {
    this.losingCarrierInformation = losingCarrierInformation;
  }


  public NumbersV1PortingPortInFetch notificationEmails(List<String> notificationEmails) {
    this.notificationEmails = notificationEmails;
    return this;
  }

  public NumbersV1PortingPortInFetch addNotificationEmailsItem(String notificationEmailsItem) {
    if (this.notificationEmails == null) {
      this.notificationEmails = new ArrayList<>();
    }
    this.notificationEmails.add(notificationEmailsItem);
    return this;
  }

  /**
   * List of emails for getting notifications about the LOA signing process. Allowed Max 10 emails.
   * @return notificationEmails
   */
  @javax.annotation.Nullable
  public List<String> getNotificationEmails() {
    return notificationEmails;
  }

  public void setNotificationEmails(List<String> notificationEmails) {
    this.notificationEmails = notificationEmails;
  }


  public NumbersV1PortingPortInFetch phoneNumbers(List<Object> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public NumbersV1PortingPortInFetch addPhoneNumbersItem(Object phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

  /**
   * The list of phone numbers to Port in. Phone numbers are in E.164 format (e.g. +16175551212).
   * @return phoneNumbers
   */
  @javax.annotation.Nullable
  public List<Object> getPhoneNumbers() {
    return phoneNumbers;
  }

  public void setPhoneNumbers(List<Object> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public NumbersV1PortingPortInFetch portInRequestSid(String portInRequestSid) {
    this.portInRequestSid = portInRequestSid;
    return this;
  }

  /**
   * The SID of the Port In request. This is a unique identifier of the port in request.
   * @return portInRequestSid
   */
  @javax.annotation.Nullable
  public String getPortInRequestSid() {
    return portInRequestSid;
  }

  public void setPortInRequestSid(String portInRequestSid) {
    this.portInRequestSid = portInRequestSid;
  }


  public NumbersV1PortingPortInFetch targetPortInDate(LocalDate targetPortInDate) {
    this.targetPortInDate = targetPortInDate;
    return this;
  }

  /**
   * Minimum number of days in the future (at least 2 days) needs to be established with the Ops team for validation.
   * @return targetPortInDate
   */
  @javax.annotation.Nullable
  public LocalDate getTargetPortInDate() {
    return targetPortInDate;
  }

  public void setTargetPortInDate(LocalDate targetPortInDate) {
    this.targetPortInDate = targetPortInDate;
  }


  public NumbersV1PortingPortInFetch targetPortInTimeRangeEnd(String targetPortInTimeRangeEnd) {
    this.targetPortInTimeRangeEnd = targetPortInTimeRangeEnd;
    return this;
  }

  /**
   * Maximum hour in the future needs to be established with the Ops team for validation.
   * @return targetPortInTimeRangeEnd
   */
  @javax.annotation.Nullable
  public String getTargetPortInTimeRangeEnd() {
    return targetPortInTimeRangeEnd;
  }

  public void setTargetPortInTimeRangeEnd(String targetPortInTimeRangeEnd) {
    this.targetPortInTimeRangeEnd = targetPortInTimeRangeEnd;
  }


  public NumbersV1PortingPortInFetch targetPortInTimeRangeStart(String targetPortInTimeRangeStart) {
    this.targetPortInTimeRangeStart = targetPortInTimeRangeStart;
    return this;
  }

  /**
   * Minimum hour in the future needs to be established with the Ops team for validation.
   * @return targetPortInTimeRangeStart
   */
  @javax.annotation.Nullable
  public String getTargetPortInTimeRangeStart() {
    return targetPortInTimeRangeStart;
  }

  public void setTargetPortInTimeRangeStart(String targetPortInTimeRangeStart) {
    this.targetPortInTimeRangeStart = targetPortInTimeRangeStart;
  }


  public NumbersV1PortingPortInFetch url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The URL of this Port In request
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NumbersV1PortingPortInFetch numbersV1PortingPortInFetch = (NumbersV1PortingPortInFetch) o;
    return Objects.equals(this.accountSid, numbersV1PortingPortInFetch.accountSid) &&
        Objects.equals(this.documents, numbersV1PortingPortInFetch.documents) &&
        Objects.equals(this.losingCarrierInformation, numbersV1PortingPortInFetch.losingCarrierInformation) &&
        Objects.equals(this.notificationEmails, numbersV1PortingPortInFetch.notificationEmails) &&
        Objects.equals(this.phoneNumbers, numbersV1PortingPortInFetch.phoneNumbers) &&
        Objects.equals(this.portInRequestSid, numbersV1PortingPortInFetch.portInRequestSid) &&
        Objects.equals(this.targetPortInDate, numbersV1PortingPortInFetch.targetPortInDate) &&
        Objects.equals(this.targetPortInTimeRangeEnd, numbersV1PortingPortInFetch.targetPortInTimeRangeEnd) &&
        Objects.equals(this.targetPortInTimeRangeStart, numbersV1PortingPortInFetch.targetPortInTimeRangeStart) &&
        Objects.equals(this.url, numbersV1PortingPortInFetch.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, documents, losingCarrierInformation, notificationEmails, phoneNumbers, portInRequestSid, targetPortInDate, targetPortInTimeRangeEnd, targetPortInTimeRangeStart, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NumbersV1PortingPortInFetch {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    losingCarrierInformation: ").append(toIndentedString(losingCarrierInformation)).append("\n");
    sb.append("    notificationEmails: ").append(toIndentedString(notificationEmails)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    portInRequestSid: ").append(toIndentedString(portInRequestSid)).append("\n");
    sb.append("    targetPortInDate: ").append(toIndentedString(targetPortInDate)).append("\n");
    sb.append("    targetPortInTimeRangeEnd: ").append(toIndentedString(targetPortInTimeRangeEnd)).append("\n");
    sb.append("    targetPortInTimeRangeStart: ").append(toIndentedString(targetPortInTimeRangeStart)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("documents");
    openapiFields.add("losing_carrier_information");
    openapiFields.add("notification_emails");
    openapiFields.add("phone_numbers");
    openapiFields.add("port_in_request_sid");
    openapiFields.add("target_port_in_date");
    openapiFields.add("target_port_in_time_range_end");
    openapiFields.add("target_port_in_time_range_start");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NumbersV1PortingPortInFetch
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NumbersV1PortingPortInFetch.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NumbersV1PortingPortInFetch is not found in the empty JSON string", NumbersV1PortingPortInFetch.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NumbersV1PortingPortInFetch.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NumbersV1PortingPortInFetch` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("documents") != null && !jsonObj.get("documents").isJsonNull() && !jsonObj.get("documents").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `documents` to be an array in the JSON string but got `%s`", jsonObj.get("documents").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("notification_emails") != null && !jsonObj.get("notification_emails").isJsonNull() && !jsonObj.get("notification_emails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `notification_emails` to be an array in the JSON string but got `%s`", jsonObj.get("notification_emails").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("phone_numbers") != null && !jsonObj.get("phone_numbers").isJsonNull() && !jsonObj.get("phone_numbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_numbers` to be an array in the JSON string but got `%s`", jsonObj.get("phone_numbers").toString()));
      }
      if ((jsonObj.get("port_in_request_sid") != null && !jsonObj.get("port_in_request_sid").isJsonNull()) && !jsonObj.get("port_in_request_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `port_in_request_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("port_in_request_sid").toString()));
      }
      if ((jsonObj.get("target_port_in_time_range_end") != null && !jsonObj.get("target_port_in_time_range_end").isJsonNull()) && !jsonObj.get("target_port_in_time_range_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_port_in_time_range_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_port_in_time_range_end").toString()));
      }
      if ((jsonObj.get("target_port_in_time_range_start") != null && !jsonObj.get("target_port_in_time_range_start").isJsonNull()) && !jsonObj.get("target_port_in_time_range_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_port_in_time_range_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_port_in_time_range_start").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NumbersV1PortingPortInFetch.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NumbersV1PortingPortInFetch' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NumbersV1PortingPortInFetch> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NumbersV1PortingPortInFetch.class));

       return (TypeAdapter<T>) new TypeAdapter<NumbersV1PortingPortInFetch>() {
           @Override
           public void write(JsonWriter out, NumbersV1PortingPortInFetch value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NumbersV1PortingPortInFetch read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NumbersV1PortingPortInFetch given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NumbersV1PortingPortInFetch
   * @throws IOException if the JSON string is invalid with respect to NumbersV1PortingPortInFetch
   */
  public static NumbersV1PortingPortInFetch fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NumbersV1PortingPortInFetch.class);
  }

  /**
   * Convert an instance of NumbersV1PortingPortInFetch to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

