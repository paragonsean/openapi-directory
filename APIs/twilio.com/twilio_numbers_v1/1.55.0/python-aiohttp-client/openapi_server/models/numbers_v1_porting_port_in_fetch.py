# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class NumbersV1PortingPortInFetch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, documents: List[str]=None, losing_carrier_information: object=None, notification_emails: List[str]=None, phone_numbers: List[object]=None, port_in_request_sid: str=None, target_port_in_date: date=None, target_port_in_time_range_end: str=None, target_port_in_time_range_start: str=None, url: str=None):
        """NumbersV1PortingPortInFetch - a model defined in OpenAPI

        :param account_sid: The account_sid of this NumbersV1PortingPortInFetch.
        :param documents: The documents of this NumbersV1PortingPortInFetch.
        :param losing_carrier_information: The losing_carrier_information of this NumbersV1PortingPortInFetch.
        :param notification_emails: The notification_emails of this NumbersV1PortingPortInFetch.
        :param phone_numbers: The phone_numbers of this NumbersV1PortingPortInFetch.
        :param port_in_request_sid: The port_in_request_sid of this NumbersV1PortingPortInFetch.
        :param target_port_in_date: The target_port_in_date of this NumbersV1PortingPortInFetch.
        :param target_port_in_time_range_end: The target_port_in_time_range_end of this NumbersV1PortingPortInFetch.
        :param target_port_in_time_range_start: The target_port_in_time_range_start of this NumbersV1PortingPortInFetch.
        :param url: The url of this NumbersV1PortingPortInFetch.
        """
        self.openapi_types = {
            'account_sid': str,
            'documents': List[str],
            'losing_carrier_information': object,
            'notification_emails': List[str],
            'phone_numbers': List[object],
            'port_in_request_sid': str,
            'target_port_in_date': date,
            'target_port_in_time_range_end': str,
            'target_port_in_time_range_start': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'documents': 'documents',
            'losing_carrier_information': 'losing_carrier_information',
            'notification_emails': 'notification_emails',
            'phone_numbers': 'phone_numbers',
            'port_in_request_sid': 'port_in_request_sid',
            'target_port_in_date': 'target_port_in_date',
            'target_port_in_time_range_end': 'target_port_in_time_range_end',
            'target_port_in_time_range_start': 'target_port_in_time_range_start',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._documents = documents
        self._losing_carrier_information = losing_carrier_information
        self._notification_emails = notification_emails
        self._phone_numbers = phone_numbers
        self._port_in_request_sid = port_in_request_sid
        self._target_port_in_date = target_port_in_date
        self._target_port_in_time_range_end = target_port_in_time_range_end
        self._target_port_in_time_range_start = target_port_in_time_range_start
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NumbersV1PortingPortInFetch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The numbers.v1.porting_port_in_fetch of this NumbersV1PortingPortInFetch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this NumbersV1PortingPortInFetch.

        The Account SID that the numbers will be added to after they are ported into Twilio.

        :return: The account_sid of this NumbersV1PortingPortInFetch.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this NumbersV1PortingPortInFetch.

        The Account SID that the numbers will be added to after they are ported into Twilio.

        :param account_sid: The account_sid of this NumbersV1PortingPortInFetch.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def documents(self):
        """Gets the documents of this NumbersV1PortingPortInFetch.

        The list of documents SID referencing a utility bills

        :return: The documents of this NumbersV1PortingPortInFetch.
        :rtype: List[str]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this NumbersV1PortingPortInFetch.

        The list of documents SID referencing a utility bills

        :param documents: The documents of this NumbersV1PortingPortInFetch.
        :type documents: List[str]
        """

        self._documents = documents

    @property
    def losing_carrier_information(self):
        """Gets the losing_carrier_information of this NumbersV1PortingPortInFetch.

        The information for the losing carrier. 

        :return: The losing_carrier_information of this NumbersV1PortingPortInFetch.
        :rtype: object
        """
        return self._losing_carrier_information

    @losing_carrier_information.setter
    def losing_carrier_information(self, losing_carrier_information):
        """Sets the losing_carrier_information of this NumbersV1PortingPortInFetch.

        The information for the losing carrier. 

        :param losing_carrier_information: The losing_carrier_information of this NumbersV1PortingPortInFetch.
        :type losing_carrier_information: object
        """

        self._losing_carrier_information = losing_carrier_information

    @property
    def notification_emails(self):
        """Gets the notification_emails of this NumbersV1PortingPortInFetch.

        List of emails for getting notifications about the LOA signing process. Allowed Max 10 emails.

        :return: The notification_emails of this NumbersV1PortingPortInFetch.
        :rtype: List[str]
        """
        return self._notification_emails

    @notification_emails.setter
    def notification_emails(self, notification_emails):
        """Sets the notification_emails of this NumbersV1PortingPortInFetch.

        List of emails for getting notifications about the LOA signing process. Allowed Max 10 emails.

        :param notification_emails: The notification_emails of this NumbersV1PortingPortInFetch.
        :type notification_emails: List[str]
        """

        self._notification_emails = notification_emails

    @property
    def phone_numbers(self):
        """Gets the phone_numbers of this NumbersV1PortingPortInFetch.

        The list of phone numbers to Port in. Phone numbers are in E.164 format (e.g. +16175551212).

        :return: The phone_numbers of this NumbersV1PortingPortInFetch.
        :rtype: List[object]
        """
        return self._phone_numbers

    @phone_numbers.setter
    def phone_numbers(self, phone_numbers):
        """Sets the phone_numbers of this NumbersV1PortingPortInFetch.

        The list of phone numbers to Port in. Phone numbers are in E.164 format (e.g. +16175551212).

        :param phone_numbers: The phone_numbers of this NumbersV1PortingPortInFetch.
        :type phone_numbers: List[object]
        """

        self._phone_numbers = phone_numbers

    @property
    def port_in_request_sid(self):
        """Gets the port_in_request_sid of this NumbersV1PortingPortInFetch.

        The SID of the Port In request. This is a unique identifier of the port in request.

        :return: The port_in_request_sid of this NumbersV1PortingPortInFetch.
        :rtype: str
        """
        return self._port_in_request_sid

    @port_in_request_sid.setter
    def port_in_request_sid(self, port_in_request_sid):
        """Sets the port_in_request_sid of this NumbersV1PortingPortInFetch.

        The SID of the Port In request. This is a unique identifier of the port in request.

        :param port_in_request_sid: The port_in_request_sid of this NumbersV1PortingPortInFetch.
        :type port_in_request_sid: str
        """
        if port_in_request_sid is not None and len(port_in_request_sid) > 34:
            raise ValueError("Invalid value for `port_in_request_sid`, length must be less than or equal to `34`")
        if port_in_request_sid is not None and len(port_in_request_sid) < 34:
            raise ValueError("Invalid value for `port_in_request_sid`, length must be greater than or equal to `34`")
        if port_in_request_sid is not None and not re.search(r'^KW[0-9a-fA-F]{32}$', port_in_request_sid):
            raise ValueError("Invalid value for `port_in_request_sid`, must be a follow pattern or equal to `/^KW[0-9a-fA-F]{32}$/`")

        self._port_in_request_sid = port_in_request_sid

    @property
    def target_port_in_date(self):
        """Gets the target_port_in_date of this NumbersV1PortingPortInFetch.

        Minimum number of days in the future (at least 2 days) needs to be established with the Ops team for validation.

        :return: The target_port_in_date of this NumbersV1PortingPortInFetch.
        :rtype: date
        """
        return self._target_port_in_date

    @target_port_in_date.setter
    def target_port_in_date(self, target_port_in_date):
        """Sets the target_port_in_date of this NumbersV1PortingPortInFetch.

        Minimum number of days in the future (at least 2 days) needs to be established with the Ops team for validation.

        :param target_port_in_date: The target_port_in_date of this NumbersV1PortingPortInFetch.
        :type target_port_in_date: date
        """

        self._target_port_in_date = target_port_in_date

    @property
    def target_port_in_time_range_end(self):
        """Gets the target_port_in_time_range_end of this NumbersV1PortingPortInFetch.

        Maximum hour in the future needs to be established with the Ops team for validation.

        :return: The target_port_in_time_range_end of this NumbersV1PortingPortInFetch.
        :rtype: str
        """
        return self._target_port_in_time_range_end

    @target_port_in_time_range_end.setter
    def target_port_in_time_range_end(self, target_port_in_time_range_end):
        """Sets the target_port_in_time_range_end of this NumbersV1PortingPortInFetch.

        Maximum hour in the future needs to be established with the Ops team for validation.

        :param target_port_in_time_range_end: The target_port_in_time_range_end of this NumbersV1PortingPortInFetch.
        :type target_port_in_time_range_end: str
        """

        self._target_port_in_time_range_end = target_port_in_time_range_end

    @property
    def target_port_in_time_range_start(self):
        """Gets the target_port_in_time_range_start of this NumbersV1PortingPortInFetch.

        Minimum hour in the future needs to be established with the Ops team for validation.

        :return: The target_port_in_time_range_start of this NumbersV1PortingPortInFetch.
        :rtype: str
        """
        return self._target_port_in_time_range_start

    @target_port_in_time_range_start.setter
    def target_port_in_time_range_start(self, target_port_in_time_range_start):
        """Sets the target_port_in_time_range_start of this NumbersV1PortingPortInFetch.

        Minimum hour in the future needs to be established with the Ops team for validation.

        :param target_port_in_time_range_start: The target_port_in_time_range_start of this NumbersV1PortingPortInFetch.
        :type target_port_in_time_range_start: str
        """

        self._target_port_in_time_range_start = target_port_in_time_range_start

    @property
    def url(self):
        """Gets the url of this NumbersV1PortingPortInFetch.

        The URL of this Port In request

        :return: The url of this NumbersV1PortingPortInFetch.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NumbersV1PortingPortInFetch.

        The URL of this Port In request

        :param url: The url of this NumbersV1PortingPortInFetch.
        :type url: str
        """

        self._url = url
