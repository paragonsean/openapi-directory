# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class NumbersV1BulkEligibility(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_completed: datetime=None, date_created: datetime=None, friendly_name: str=None, request_id: str=None, results: List[object]=None, status: str=None, url: str=None):
        """NumbersV1BulkEligibility - a model defined in OpenAPI

        :param date_completed: The date_completed of this NumbersV1BulkEligibility.
        :param date_created: The date_created of this NumbersV1BulkEligibility.
        :param friendly_name: The friendly_name of this NumbersV1BulkEligibility.
        :param request_id: The request_id of this NumbersV1BulkEligibility.
        :param results: The results of this NumbersV1BulkEligibility.
        :param status: The status of this NumbersV1BulkEligibility.
        :param url: The url of this NumbersV1BulkEligibility.
        """
        self.openapi_types = {
            'date_completed': datetime,
            'date_created': datetime,
            'friendly_name': str,
            'request_id': str,
            'results': List[object],
            'status': str,
            'url': str
        }

        self.attribute_map = {
            'date_completed': 'date_completed',
            'date_created': 'date_created',
            'friendly_name': 'friendly_name',
            'request_id': 'request_id',
            'results': 'results',
            'status': 'status',
            'url': 'url'
        }

        self._date_completed = date_completed
        self._date_created = date_created
        self._friendly_name = friendly_name
        self._request_id = request_id
        self._results = results
        self._status = status
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NumbersV1BulkEligibility':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The numbers.v1.bulk_eligibility of this NumbersV1BulkEligibility.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_completed(self):
        """Gets the date_completed of this NumbersV1BulkEligibility.


        :return: The date_completed of this NumbersV1BulkEligibility.
        :rtype: datetime
        """
        return self._date_completed

    @date_completed.setter
    def date_completed(self, date_completed):
        """Sets the date_completed of this NumbersV1BulkEligibility.


        :param date_completed: The date_completed of this NumbersV1BulkEligibility.
        :type date_completed: datetime
        """

        self._date_completed = date_completed

    @property
    def date_created(self):
        """Gets the date_created of this NumbersV1BulkEligibility.


        :return: The date_created of this NumbersV1BulkEligibility.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this NumbersV1BulkEligibility.


        :param date_created: The date_created of this NumbersV1BulkEligibility.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def friendly_name(self):
        """Gets the friendly_name of this NumbersV1BulkEligibility.

        This is the string that you assigned as a friendly name for describing the eligibility check request.

        :return: The friendly_name of this NumbersV1BulkEligibility.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this NumbersV1BulkEligibility.

        This is the string that you assigned as a friendly name for describing the eligibility check request.

        :param friendly_name: The friendly_name of this NumbersV1BulkEligibility.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def request_id(self):
        """Gets the request_id of this NumbersV1BulkEligibility.

        The SID of the bulk eligibility check that you want to know about.

        :return: The request_id of this NumbersV1BulkEligibility.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this NumbersV1BulkEligibility.

        The SID of the bulk eligibility check that you want to know about.

        :param request_id: The request_id of this NumbersV1BulkEligibility.
        :type request_id: str
        """
        if request_id is not None and len(request_id) > 34:
            raise ValueError("Invalid value for `request_id`, length must be less than or equal to `34`")
        if request_id is not None and len(request_id) < 34:
            raise ValueError("Invalid value for `request_id`, length must be greater than or equal to `34`")
        if request_id is not None and not re.search(r'^EC[0-9a-fA-F]{32}$', request_id):
            raise ValueError("Invalid value for `request_id`, must be a follow pattern or equal to `/^EC[0-9a-fA-F]{32}$/`")

        self._request_id = request_id

    @property
    def results(self):
        """Gets the results of this NumbersV1BulkEligibility.

        The result set that contains the eligibility check response for each requested number, each result has at least the following attributes:  phone_number: The requested phone number ,hosting_account_sid: The account sid where the phone number will be hosted, country: Phone number’s country, eligibility_status: Indicates the eligibility status of the PN (Eligible/Ineligible), eligibility_sub_status: Indicates the sub status of the eligibility , ineligibility_reason: Reason for number's ineligibility (if applicable), next_step: Suggested next step in the hosting process based on the eligibility status.

        :return: The results of this NumbersV1BulkEligibility.
        :rtype: List[object]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this NumbersV1BulkEligibility.

        The result set that contains the eligibility check response for each requested number, each result has at least the following attributes:  phone_number: The requested phone number ,hosting_account_sid: The account sid where the phone number will be hosted, country: Phone number’s country, eligibility_status: Indicates the eligibility status of the PN (Eligible/Ineligible), eligibility_sub_status: Indicates the sub status of the eligibility , ineligibility_reason: Reason for number's ineligibility (if applicable), next_step: Suggested next step in the hosting process based on the eligibility status.

        :param results: The results of this NumbersV1BulkEligibility.
        :type results: List[object]
        """

        self._results = results

    @property
    def status(self):
        """Gets the status of this NumbersV1BulkEligibility.

        This is the status of the bulk eligibility check request. (Example: COMPLETE, IN_PROGRESS)

        :return: The status of this NumbersV1BulkEligibility.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this NumbersV1BulkEligibility.

        This is the status of the bulk eligibility check request. (Example: COMPLETE, IN_PROGRESS)

        :param status: The status of this NumbersV1BulkEligibility.
        :type status: str
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this NumbersV1BulkEligibility.

        This is the url of the request that you're trying to reach out to locate the resource.

        :return: The url of this NumbersV1BulkEligibility.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NumbersV1BulkEligibility.

        This is the url of the request that you're trying to reach out to locate the resource.

        :param url: The url of this NumbersV1BulkEligibility.
        :type url: str
        """

        self._url = url
