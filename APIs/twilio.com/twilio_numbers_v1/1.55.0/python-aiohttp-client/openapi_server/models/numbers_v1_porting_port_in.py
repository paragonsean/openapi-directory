# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class NumbersV1PortingPortIn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port_in_request_sid: str=None, url: str=None):
        """NumbersV1PortingPortIn - a model defined in OpenAPI

        :param port_in_request_sid: The port_in_request_sid of this NumbersV1PortingPortIn.
        :param url: The url of this NumbersV1PortingPortIn.
        """
        self.openapi_types = {
            'port_in_request_sid': str,
            'url': str
        }

        self.attribute_map = {
            'port_in_request_sid': 'port_in_request_sid',
            'url': 'url'
        }

        self._port_in_request_sid = port_in_request_sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NumbersV1PortingPortIn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The numbers.v1.porting_port_in of this NumbersV1PortingPortIn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port_in_request_sid(self):
        """Gets the port_in_request_sid of this NumbersV1PortingPortIn.

        The SID of the Port In request. This is a unique identifier of the port in request.

        :return: The port_in_request_sid of this NumbersV1PortingPortIn.
        :rtype: str
        """
        return self._port_in_request_sid

    @port_in_request_sid.setter
    def port_in_request_sid(self, port_in_request_sid):
        """Sets the port_in_request_sid of this NumbersV1PortingPortIn.

        The SID of the Port In request. This is a unique identifier of the port in request.

        :param port_in_request_sid: The port_in_request_sid of this NumbersV1PortingPortIn.
        :type port_in_request_sid: str
        """
        if port_in_request_sid is not None and len(port_in_request_sid) > 34:
            raise ValueError("Invalid value for `port_in_request_sid`, length must be less than or equal to `34`")
        if port_in_request_sid is not None and len(port_in_request_sid) < 34:
            raise ValueError("Invalid value for `port_in_request_sid`, length must be greater than or equal to `34`")
        if port_in_request_sid is not None and not re.search(r'^KW[0-9a-fA-F]{32}$', port_in_request_sid):
            raise ValueError("Invalid value for `port_in_request_sid`, must be a follow pattern or equal to `/^KW[0-9a-fA-F]{32}$/`")

        self._port_in_request_sid = port_in_request_sid

    @property
    def url(self):
        """Gets the url of this NumbersV1PortingPortIn.


        :return: The url of this NumbersV1PortingPortIn.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NumbersV1PortingPortIn.


        :param url: The url of this NumbersV1PortingPortIn.
        :type url: str
        """

        self._url = url
