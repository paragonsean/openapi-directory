# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkEligibilityEnumEligibilitySubStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    COUNTRY_MINUS_INELIGIBLE = 'country-ineligible'
    NUMBER_MINUS_FORMAT_MINUS_INELIGIBLE = 'number-format-ineligible'
    NUMBER_MINUS_TYPE_MINUS_INELIGIBLE = 'number-type-ineligible'
    CARRIER_MINUS_INELIGIBLE = 'carrier-ineligible'
    ALREADY_MINUS_IN_MINUS_TWILIO = 'already-in-twilio'
    INTERNAL_MINUS_PROCESSING_MINUS_ERROR = 'internal-processing-error'
    INVALID_MINUS_PHONE_MINUS_NUMBER = 'invalid-phone-number'
    INVALID_MINUS_HOSTING_MINUS_ACCOUNT_MINUS_SID = 'invalid-hosting-account-sid'
    ELIGIBLE = 'eligible'
    ELIGIBLE_MINUS_BY_MINUS_MANUAL_MINUS_PROCESS = 'eligible-by-manual-process'

    def __init__(self):
        """BulkEligibilityEnumEligibilitySubStatus - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkEligibilityEnumEligibilitySubStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bulk_eligibility_enum_eligibility_sub_status of this BulkEligibilityEnumEligibilitySubStatus.
        """
        return util.deserialize_model(dikt, cls)
