/**
 * Twilio - Events
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventsV1EventType model module.
 * @module model/EventsV1EventType
 * @version 1.55.0
 */
class EventsV1EventType {
    /**
     * Constructs a new <code>EventsV1EventType</code>.
     * @alias module:model/EventsV1EventType
     */
    constructor() { 
        
        EventsV1EventType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventsV1EventType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventsV1EventType} obj Optional instance to populate.
     * @return {module:model/EventsV1EventType} The populated <code>EventsV1EventType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventsV1EventType();

            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('schema_id')) {
                obj['schema_id'] = ApiClient.convertToType(data['schema_id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventsV1EventType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventsV1EventType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['schema_id'] && !(typeof data['schema_id'] === 'string' || data['schema_id'] instanceof String)) {
            throw new Error("Expected the field `schema_id` to be a primitive type in the JSON string but got " + data['schema_id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The date that this Event Type was created, given in ISO 8601 format.
 * @member {Date} date_created
 */
EventsV1EventType.prototype['date_created'] = undefined;

/**
 * The date that this Event Type was updated, given in ISO 8601 format.
 * @member {Date} date_updated
 */
EventsV1EventType.prototype['date_updated'] = undefined;

/**
 * A human readable description for this Event Type.
 * @member {String} description
 */
EventsV1EventType.prototype['description'] = undefined;

/**
 * @member {Object} links
 */
EventsV1EventType.prototype['links'] = undefined;

/**
 * A string that uniquely identifies the Schema this Event Type adheres to.
 * @member {String} schema_id
 */
EventsV1EventType.prototype['schema_id'] = undefined;

/**
 * A string that uniquely identifies this Event Type.
 * @member {String} type
 */
EventsV1EventType.prototype['type'] = undefined;

/**
 * The URL of this resource.
 * @member {String} url
 */
EventsV1EventType.prototype['url'] = undefined;






export default EventsV1EventType;

