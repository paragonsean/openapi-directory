/*
 * Twilio - Events
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EventsV1Sink;
import org.openapitools.client.model.ListSinkResponse;
import org.openapitools.client.model.SinkEnumSinkType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsV1SinkApi
 */
@Disabled
public class EventsV1SinkApiTest {

    private final EventsV1SinkApi api = new EventsV1SinkApi();

    /**
     * Create a new Sink
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSinkTest() throws ApiException {
        String description = null;
        Object sinkConfiguration = null;
        SinkEnumSinkType sinkType = null;
        EventsV1Sink response = api.createSink(description, sinkConfiguration, sinkType);
        // TODO: test validations
    }

    /**
     * Delete a specific Sink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSinkTest() throws ApiException {
        String sid = null;
        api.deleteSink(sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific Sink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchSinkTest() throws ApiException {
        String sid = null;
        EventsV1Sink response = api.fetchSink(sid);
        // TODO: test validations
    }

    /**
     * Retrieve a paginated list of Sinks belonging to the account used to make the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSinkTest() throws ApiException {
        Boolean inUse = null;
        String status = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListSinkResponse response = api.listSink(inUse, status, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a specific Sink
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSinkTest() throws ApiException {
        String sid = null;
        String description = null;
        EventsV1Sink response = api.updateSink(sid, description);
        // TODO: test validations
    }

}
