/*
 * Twilio - Events
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EventsV1SubscriptionSubscribedEvent;
import org.openapitools.client.model.ListSubscribedEventResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsV1SubscribedEventApi
 */
@Disabled
public class EventsV1SubscribedEventApiTest {

    private final EventsV1SubscribedEventApi api = new EventsV1SubscribedEventApi();

    /**
     * Add an event type to a Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSubscribedEventTest() throws ApiException {
        String subscriptionSid = null;
        String type = null;
        Integer schemaVersion = null;
        EventsV1SubscriptionSubscribedEvent response = api.createSubscribedEvent(subscriptionSid, type, schemaVersion);
        // TODO: test validations
    }

    /**
     * Remove an event type from a Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSubscribedEventTest() throws ApiException {
        String subscriptionSid = null;
        String type = null;
        api.deleteSubscribedEvent(subscriptionSid, type);
        // TODO: test validations
    }

    /**
     * Read an Event for a Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchSubscribedEventTest() throws ApiException {
        String subscriptionSid = null;
        String type = null;
        EventsV1SubscriptionSubscribedEvent response = api.fetchSubscribedEvent(subscriptionSid, type);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Subscribed Event types for a Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSubscribedEventTest() throws ApiException {
        String subscriptionSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListSubscribedEventResponse response = api.listSubscribedEvent(subscriptionSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update an Event for a Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSubscribedEventTest() throws ApiException {
        String subscriptionSid = null;
        String type = null;
        Integer schemaVersion = null;
        EventsV1SubscriptionSubscribedEvent response = api.updateSubscribedEvent(subscriptionSid, type, schemaVersion);
        // TODO: test validations
    }

}
