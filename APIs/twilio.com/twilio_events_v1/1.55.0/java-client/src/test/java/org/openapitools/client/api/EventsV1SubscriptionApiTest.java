/*
 * Twilio - Events
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EventsV1Subscription;
import org.openapitools.client.model.ListSubscriptionResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsV1SubscriptionApi
 */
@Disabled
public class EventsV1SubscriptionApiTest {

    private final EventsV1SubscriptionApi api = new EventsV1SubscriptionApi();

    /**
     * Create a new Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSubscriptionTest() throws ApiException {
        String description = null;
        String sinkSid = null;
        List<Object> types = null;
        EventsV1Subscription response = api.createSubscription(description, sinkSid, types);
        // TODO: test validations
    }

    /**
     * Delete a specific Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSubscriptionTest() throws ApiException {
        String sid = null;
        api.deleteSubscription(sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchSubscriptionTest() throws ApiException {
        String sid = null;
        EventsV1Subscription response = api.fetchSubscription(sid);
        // TODO: test validations
    }

    /**
     * Retrieve a paginated list of Subscriptions belonging to the account used to make the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSubscriptionTest() throws ApiException {
        String sinkSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListSubscriptionResponse response = api.listSubscription(sinkSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a Subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSubscriptionTest() throws ApiException {
        String sid = null;
        String description = null;
        String sinkSid = null;
        EventsV1Subscription response = api.updateSubscription(sid, description, sinkSid);
        // TODO: test validations
    }

}
