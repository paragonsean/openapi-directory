# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventsV1Schema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, latest_version: int=None, latest_version_date_created: datetime=None, links: object=None, url: str=None):
        """EventsV1Schema - a model defined in OpenAPI

        :param id: The id of this EventsV1Schema.
        :param latest_version: The latest_version of this EventsV1Schema.
        :param latest_version_date_created: The latest_version_date_created of this EventsV1Schema.
        :param links: The links of this EventsV1Schema.
        :param url: The url of this EventsV1Schema.
        """
        self.openapi_types = {
            'id': str,
            'latest_version': int,
            'latest_version_date_created': datetime,
            'links': object,
            'url': str
        }

        self.attribute_map = {
            'id': 'id',
            'latest_version': 'latest_version',
            'latest_version_date_created': 'latest_version_date_created',
            'links': 'links',
            'url': 'url'
        }

        self._id = id
        self._latest_version = latest_version
        self._latest_version_date_created = latest_version_date_created
        self._links = links
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventsV1Schema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The events.v1.schema of this EventsV1Schema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this EventsV1Schema.

        The unique identifier of the schema. Each schema can have multiple versions, that share the same id.

        :return: The id of this EventsV1Schema.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EventsV1Schema.

        The unique identifier of the schema. Each schema can have multiple versions, that share the same id.

        :param id: The id of this EventsV1Schema.
        :type id: str
        """

        self._id = id

    @property
    def latest_version(self):
        """Gets the latest_version of this EventsV1Schema.

        The latest version published of this schema.

        :return: The latest_version of this EventsV1Schema.
        :rtype: int
        """
        return self._latest_version

    @latest_version.setter
    def latest_version(self, latest_version):
        """Sets the latest_version of this EventsV1Schema.

        The latest version published of this schema.

        :param latest_version: The latest_version of this EventsV1Schema.
        :type latest_version: int
        """

        self._latest_version = latest_version

    @property
    def latest_version_date_created(self):
        """Gets the latest_version_date_created of this EventsV1Schema.

        The date that the latest schema version was created, given in ISO 8601 format.

        :return: The latest_version_date_created of this EventsV1Schema.
        :rtype: datetime
        """
        return self._latest_version_date_created

    @latest_version_date_created.setter
    def latest_version_date_created(self, latest_version_date_created):
        """Sets the latest_version_date_created of this EventsV1Schema.

        The date that the latest schema version was created, given in ISO 8601 format.

        :param latest_version_date_created: The latest_version_date_created of this EventsV1Schema.
        :type latest_version_date_created: datetime
        """

        self._latest_version_date_created = latest_version_date_created

    @property
    def links(self):
        """Gets the links of this EventsV1Schema.

        Contains a dictionary of URL links to nested resources of this schema.

        :return: The links of this EventsV1Schema.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this EventsV1Schema.

        Contains a dictionary of URL links to nested resources of this schema.

        :param links: The links of this EventsV1Schema.
        :type links: object
        """

        self._links = links

    @property
    def url(self):
        """Gets the url of this EventsV1Schema.

        The URL of this resource.

        :return: The url of this EventsV1Schema.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this EventsV1Schema.

        The URL of this resource.

        :param url: The url of this EventsV1Schema.
        :type url: str
        """

        self._url = url
