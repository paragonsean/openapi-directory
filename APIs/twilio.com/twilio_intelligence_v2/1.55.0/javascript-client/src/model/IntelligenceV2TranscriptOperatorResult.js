/**
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperatorResultEnumOperatorType from './OperatorResultEnumOperatorType';

/**
 * The IntelligenceV2TranscriptOperatorResult model module.
 * @module model/IntelligenceV2TranscriptOperatorResult
 * @version 1.55.0
 */
class IntelligenceV2TranscriptOperatorResult {
    /**
     * Constructs a new <code>IntelligenceV2TranscriptOperatorResult</code>.
     * @alias module:model/IntelligenceV2TranscriptOperatorResult
     */
    constructor() { 
        
        IntelligenceV2TranscriptOperatorResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IntelligenceV2TranscriptOperatorResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntelligenceV2TranscriptOperatorResult} obj Optional instance to populate.
     * @return {module:model/IntelligenceV2TranscriptOperatorResult} The populated <code>IntelligenceV2TranscriptOperatorResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntelligenceV2TranscriptOperatorResult();

            if (data.hasOwnProperty('extract_match')) {
                obj['extract_match'] = ApiClient.convertToType(data['extract_match'], 'Boolean');
            }
            if (data.hasOwnProperty('extract_results')) {
                obj['extract_results'] = ApiClient.convertToType(data['extract_results'], Object);
            }
            if (data.hasOwnProperty('label_probabilities')) {
                obj['label_probabilities'] = ApiClient.convertToType(data['label_probabilities'], Object);
            }
            if (data.hasOwnProperty('match_probability')) {
                obj['match_probability'] = ApiClient.convertToType(data['match_probability'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('normalized_result')) {
                obj['normalized_result'] = ApiClient.convertToType(data['normalized_result'], 'String');
            }
            if (data.hasOwnProperty('operator_sid')) {
                obj['operator_sid'] = ApiClient.convertToType(data['operator_sid'], 'String');
            }
            if (data.hasOwnProperty('operator_type')) {
                obj['operator_type'] = OperatorResultEnumOperatorType.constructFromObject(data['operator_type']);
            }
            if (data.hasOwnProperty('predicted_label')) {
                obj['predicted_label'] = ApiClient.convertToType(data['predicted_label'], 'String');
            }
            if (data.hasOwnProperty('predicted_probability')) {
                obj['predicted_probability'] = ApiClient.convertToType(data['predicted_probability'], 'Number');
            }
            if (data.hasOwnProperty('text_generation_results')) {
                obj['text_generation_results'] = ApiClient.convertToType(data['text_generation_results'], Object);
            }
            if (data.hasOwnProperty('transcript_sid')) {
                obj['transcript_sid'] = ApiClient.convertToType(data['transcript_sid'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('utterance_match')) {
                obj['utterance_match'] = ApiClient.convertToType(data['utterance_match'], 'Boolean');
            }
            if (data.hasOwnProperty('utterance_results')) {
                obj['utterance_results'] = ApiClient.convertToType(data['utterance_results'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntelligenceV2TranscriptOperatorResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntelligenceV2TranscriptOperatorResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['normalized_result'] && !(typeof data['normalized_result'] === 'string' || data['normalized_result'] instanceof String)) {
            throw new Error("Expected the field `normalized_result` to be a primitive type in the JSON string but got " + data['normalized_result']);
        }
        // ensure the json data is a string
        if (data['operator_sid'] && !(typeof data['operator_sid'] === 'string' || data['operator_sid'] instanceof String)) {
            throw new Error("Expected the field `operator_sid` to be a primitive type in the JSON string but got " + data['operator_sid']);
        }
        // ensure the json data is a string
        if (data['operator_type'] && !(typeof data['operator_type'] === 'string' || data['operator_type'] instanceof String)) {
            throw new Error("Expected the field `operator_type` to be a primitive type in the JSON string but got " + data['operator_type']);
        }
        // ensure the json data is a string
        if (data['predicted_label'] && !(typeof data['predicted_label'] === 'string' || data['predicted_label'] instanceof String)) {
            throw new Error("Expected the field `predicted_label` to be a primitive type in the JSON string but got " + data['predicted_label']);
        }
        // ensure the json data is a string
        if (data['transcript_sid'] && !(typeof data['transcript_sid'] === 'string' || data['transcript_sid'] instanceof String)) {
            throw new Error("Expected the field `transcript_sid` to be a primitive type in the JSON string but got " + data['transcript_sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['utterance_results'])) {
            throw new Error("Expected the field `utterance_results` to be an array in the JSON data but got " + data['utterance_results']);
        }

        return true;
    }


}



/**
 * Boolean to tell if extract Language Understanding Processing model matches results.
 * @member {Boolean} extract_match
 */
IntelligenceV2TranscriptOperatorResult.prototype['extract_match'] = undefined;

/**
 * List of text extraction results. This might be available on classify-extract model outputs.
 * @member {Object} extract_results
 */
IntelligenceV2TranscriptOperatorResult.prototype['extract_results'] = undefined;

/**
 * The labels probabilities. This might be available on conversation classify model outputs.
 * @member {Object} label_probabilities
 */
IntelligenceV2TranscriptOperatorResult.prototype['label_probabilities'] = undefined;

/**
 * Percentage of 'matching' class needed to consider a sentence matches
 * @member {Number} match_probability
 */
IntelligenceV2TranscriptOperatorResult.prototype['match_probability'] = undefined;

/**
 * The name of the applied Language Understanding.
 * @member {String} name
 */
IntelligenceV2TranscriptOperatorResult.prototype['name'] = undefined;

/**
 * Normalized output of extraction stage which matches Label.
 * @member {String} normalized_result
 */
IntelligenceV2TranscriptOperatorResult.prototype['normalized_result'] = undefined;

/**
 * A 34 character string that identifies this Language Understanding operator sid.
 * @member {String} operator_sid
 */
IntelligenceV2TranscriptOperatorResult.prototype['operator_sid'] = undefined;

/**
 * @member {module:model/OperatorResultEnumOperatorType} operator_type
 */
IntelligenceV2TranscriptOperatorResult.prototype['operator_type'] = undefined;

/**
 * The 'matching' class. This might be available on conversation classify model outputs.
 * @member {String} predicted_label
 */
IntelligenceV2TranscriptOperatorResult.prototype['predicted_label'] = undefined;

/**
 * Percentage of 'matching' class needed to consider a sentence matches.
 * @member {Number} predicted_probability
 */
IntelligenceV2TranscriptOperatorResult.prototype['predicted_probability'] = undefined;

/**
 * Output of a text generation operator for example Conversation Sumamary.
 * @member {Object} text_generation_results
 */
IntelligenceV2TranscriptOperatorResult.prototype['text_generation_results'] = undefined;

/**
 * A 34 character string that uniquely identifies this Transcript.
 * @member {String} transcript_sid
 */
IntelligenceV2TranscriptOperatorResult.prototype['transcript_sid'] = undefined;

/**
 * The URL of this resource.
 * @member {String} url
 */
IntelligenceV2TranscriptOperatorResult.prototype['url'] = undefined;

/**
 * Boolean to tell if Utterance matches results.
 * @member {Boolean} utterance_match
 */
IntelligenceV2TranscriptOperatorResult.prototype['utterance_match'] = undefined;

/**
 * List of mapped utterance object which matches sentences.
 * @member {Array.<Object>} utterance_results
 */
IntelligenceV2TranscriptOperatorResult.prototype['utterance_results'] = undefined;






export default IntelligenceV2TranscriptOperatorResult;

