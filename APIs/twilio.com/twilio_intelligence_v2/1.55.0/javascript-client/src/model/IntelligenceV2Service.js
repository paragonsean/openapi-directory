/**
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceEnumHttpMethod from './ServiceEnumHttpMethod';

/**
 * The IntelligenceV2Service model module.
 * @module model/IntelligenceV2Service
 * @version 1.55.0
 */
class IntelligenceV2Service {
    /**
     * Constructs a new <code>IntelligenceV2Service</code>.
     * @alias module:model/IntelligenceV2Service
     */
    constructor() { 
        
        IntelligenceV2Service.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IntelligenceV2Service</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntelligenceV2Service} obj Optional instance to populate.
     * @return {module:model/IntelligenceV2Service} The populated <code>IntelligenceV2Service</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntelligenceV2Service();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('auto_redaction')) {
                obj['auto_redaction'] = ApiClient.convertToType(data['auto_redaction'], 'Boolean');
            }
            if (data.hasOwnProperty('auto_transcribe')) {
                obj['auto_transcribe'] = ApiClient.convertToType(data['auto_transcribe'], 'Boolean');
            }
            if (data.hasOwnProperty('data_logging')) {
                obj['data_logging'] = ApiClient.convertToType(data['data_logging'], 'Boolean');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('language_code')) {
                obj['language_code'] = ApiClient.convertToType(data['language_code'], 'String');
            }
            if (data.hasOwnProperty('media_redaction')) {
                obj['media_redaction'] = ApiClient.convertToType(data['media_redaction'], 'Boolean');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('unique_name')) {
                obj['unique_name'] = ApiClient.convertToType(data['unique_name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('webhook_http_method')) {
                obj['webhook_http_method'] = ServiceEnumHttpMethod.constructFromObject(data['webhook_http_method']);
            }
            if (data.hasOwnProperty('webhook_url')) {
                obj['webhook_url'] = ApiClient.convertToType(data['webhook_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntelligenceV2Service</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntelligenceV2Service</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['language_code'] && !(typeof data['language_code'] === 'string' || data['language_code'] instanceof String)) {
            throw new Error("Expected the field `language_code` to be a primitive type in the JSON string but got " + data['language_code']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['unique_name'] && !(typeof data['unique_name'] === 'string' || data['unique_name'] instanceof String)) {
            throw new Error("Expected the field `unique_name` to be a primitive type in the JSON string but got " + data['unique_name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['webhook_http_method'] && !(typeof data['webhook_http_method'] === 'string' || data['webhook_http_method'] instanceof String)) {
            throw new Error("Expected the field `webhook_http_method` to be a primitive type in the JSON string but got " + data['webhook_http_method']);
        }
        // ensure the json data is a string
        if (data['webhook_url'] && !(typeof data['webhook_url'] === 'string' || data['webhook_url'] instanceof String)) {
            throw new Error("Expected the field `webhook_url` to be a primitive type in the JSON string but got " + data['webhook_url']);
        }

        return true;
    }


}



/**
 * The unique SID identifier of the Account the Service belongs to.
 * @member {String} account_sid
 */
IntelligenceV2Service.prototype['account_sid'] = undefined;

/**
 * Instructs the Speech Recognition service to automatically redact PII from all transcripts made on this service.
 * @member {Boolean} auto_redaction
 */
IntelligenceV2Service.prototype['auto_redaction'] = undefined;

/**
 * Instructs the Speech Recognition service to automatically transcribe all recordings made on the account.
 * @member {Boolean} auto_transcribe
 */
IntelligenceV2Service.prototype['auto_transcribe'] = undefined;

/**
 * Data logging allows Twilio to improve the quality of the speech recognition & language understanding services through using customer data to refine, fine tune and evaluate machine learning models. Note: Data logging cannot be activated via API, only via www.twilio.com, as it requires additional consent.
 * @member {Boolean} data_logging
 */
IntelligenceV2Service.prototype['data_logging'] = undefined;

/**
 * The date that this Service was created, given in ISO 8601 format.
 * @member {Date} date_created
 */
IntelligenceV2Service.prototype['date_created'] = undefined;

/**
 * The date that this Service was updated, given in ISO 8601 format.
 * @member {Date} date_updated
 */
IntelligenceV2Service.prototype['date_updated'] = undefined;

/**
 * A human readable description of this resource, up to 64 characters.
 * @member {String} friendly_name
 */
IntelligenceV2Service.prototype['friendly_name'] = undefined;

/**
 * The default language code of the audio.
 * @member {String} language_code
 */
IntelligenceV2Service.prototype['language_code'] = undefined;

/**
 * Instructs the Speech Recognition service to automatically redact PII from all transcripts media made on this service. The auto_redaction flag must be enabled, results in error otherwise.
 * @member {Boolean} media_redaction
 */
IntelligenceV2Service.prototype['media_redaction'] = undefined;

/**
 * A 34 character string that uniquely identifies this Service.
 * @member {String} sid
 */
IntelligenceV2Service.prototype['sid'] = undefined;

/**
 * Provides a unique and addressable name to be assigned to this Service, assigned by the developer, to be optionally used in addition to SID.
 * @member {String} unique_name
 */
IntelligenceV2Service.prototype['unique_name'] = undefined;

/**
 * The URL of this resource.
 * @member {String} url
 */
IntelligenceV2Service.prototype['url'] = undefined;

/**
 * The version number of this Service.
 * @member {Number} version
 */
IntelligenceV2Service.prototype['version'] = undefined;

/**
 * @member {module:model/ServiceEnumHttpMethod} webhook_http_method
 */
IntelligenceV2Service.prototype['webhook_http_method'] = undefined;

/**
 * The URL Twilio will request when executing the Webhook.
 * @member {String} webhook_url
 */
IntelligenceV2Service.prototype['webhook_url'] = undefined;






export default IntelligenceV2Service;

