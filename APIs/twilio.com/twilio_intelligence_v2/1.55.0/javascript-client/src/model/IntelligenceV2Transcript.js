/**
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TranscriptEnumStatus from './TranscriptEnumStatus';

/**
 * The IntelligenceV2Transcript model module.
 * @module model/IntelligenceV2Transcript
 * @version 1.55.0
 */
class IntelligenceV2Transcript {
    /**
     * Constructs a new <code>IntelligenceV2Transcript</code>.
     * @alias module:model/IntelligenceV2Transcript
     */
    constructor() { 
        
        IntelligenceV2Transcript.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IntelligenceV2Transcript</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntelligenceV2Transcript} obj Optional instance to populate.
     * @return {module:model/IntelligenceV2Transcript} The populated <code>IntelligenceV2Transcript</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntelligenceV2Transcript();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], Object);
            }
            if (data.hasOwnProperty('customer_key')) {
                obj['customer_key'] = ApiClient.convertToType(data['customer_key'], 'String');
            }
            if (data.hasOwnProperty('data_logging')) {
                obj['data_logging'] = ApiClient.convertToType(data['data_logging'], 'Boolean');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('language_code')) {
                obj['language_code'] = ApiClient.convertToType(data['language_code'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('media_start_time')) {
                obj['media_start_time'] = ApiClient.convertToType(data['media_start_time'], 'Date');
            }
            if (data.hasOwnProperty('redaction')) {
                obj['redaction'] = ApiClient.convertToType(data['redaction'], 'Boolean');
            }
            if (data.hasOwnProperty('service_sid')) {
                obj['service_sid'] = ApiClient.convertToType(data['service_sid'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = TranscriptEnumStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntelligenceV2Transcript</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntelligenceV2Transcript</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['customer_key'] && !(typeof data['customer_key'] === 'string' || data['customer_key'] instanceof String)) {
            throw new Error("Expected the field `customer_key` to be a primitive type in the JSON string but got " + data['customer_key']);
        }
        // ensure the json data is a string
        if (data['language_code'] && !(typeof data['language_code'] === 'string' || data['language_code'] instanceof String)) {
            throw new Error("Expected the field `language_code` to be a primitive type in the JSON string but got " + data['language_code']);
        }
        // ensure the json data is a string
        if (data['service_sid'] && !(typeof data['service_sid'] === 'string' || data['service_sid'] instanceof String)) {
            throw new Error("Expected the field `service_sid` to be a primitive type in the JSON string but got " + data['service_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique SID identifier of the Account.
 * @member {String} account_sid
 */
IntelligenceV2Transcript.prototype['account_sid'] = undefined;

/**
 * Media Channel describing Transcript Source and Participant Mapping
 * @member {Object} channel
 */
IntelligenceV2Transcript.prototype['channel'] = undefined;

/**
 * @member {String} customer_key
 */
IntelligenceV2Transcript.prototype['customer_key'] = undefined;

/**
 * Data logging allows Twilio to improve the quality of the speech recognition & language understanding services through using customer data to refine, fine tune and evaluate machine learning models. Note: Data logging cannot be activated via API, only via www.twilio.com, as it requires additional consent.
 * @member {Boolean} data_logging
 */
IntelligenceV2Transcript.prototype['data_logging'] = undefined;

/**
 * The date that this Transcript was created, given in ISO 8601 format.
 * @member {Date} date_created
 */
IntelligenceV2Transcript.prototype['date_created'] = undefined;

/**
 * The date that this Transcript was updated, given in ISO 8601 format.
 * @member {Date} date_updated
 */
IntelligenceV2Transcript.prototype['date_updated'] = undefined;

/**
 * The duration of this Transcript's source
 * @member {Number} duration
 */
IntelligenceV2Transcript.prototype['duration'] = undefined;

/**
 * The default language code of the audio.
 * @member {String} language_code
 */
IntelligenceV2Transcript.prototype['language_code'] = undefined;

/**
 * @member {Object} links
 */
IntelligenceV2Transcript.prototype['links'] = undefined;

/**
 * The date that this Transcript's media was started, given in ISO 8601 format.
 * @member {Date} media_start_time
 */
IntelligenceV2Transcript.prototype['media_start_time'] = undefined;

/**
 * If the transcript has been redacted, a redacted alternative of the transcript will be available.
 * @member {Boolean} redaction
 */
IntelligenceV2Transcript.prototype['redaction'] = undefined;

/**
 * The unique SID identifier of the Service.
 * @member {String} service_sid
 */
IntelligenceV2Transcript.prototype['service_sid'] = undefined;

/**
 * A 34 character string that uniquely identifies this Transcript.
 * @member {String} sid
 */
IntelligenceV2Transcript.prototype['sid'] = undefined;

/**
 * @member {module:model/TranscriptEnumStatus} status
 */
IntelligenceV2Transcript.prototype['status'] = undefined;

/**
 * The URL of this resource.
 * @member {String} url
 */
IntelligenceV2Transcript.prototype['url'] = undefined;






export default IntelligenceV2Transcript;

