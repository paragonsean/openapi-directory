/*
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IntelligenceV2TranscriptSentence
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:01.731405-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IntelligenceV2TranscriptSentence {
  public static final String SERIALIZED_NAME_CONFIDENCE = "confidence";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE)
  private BigDecimal confidence;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private BigDecimal endTime;

  public static final String SERIALIZED_NAME_MEDIA_CHANNEL = "media_channel";
  @SerializedName(SERIALIZED_NAME_MEDIA_CHANNEL)
  private Integer mediaChannel;

  public static final String SERIALIZED_NAME_SENTENCE_INDEX = "sentence_index";
  @SerializedName(SERIALIZED_NAME_SENTENCE_INDEX)
  private Integer sentenceIndex;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private BigDecimal startTime;

  public static final String SERIALIZED_NAME_TRANSCRIPT = "transcript";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT)
  private String transcript;

  public IntelligenceV2TranscriptSentence() {
  }

  public IntelligenceV2TranscriptSentence confidence(BigDecimal confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * Get confidence
   * @return confidence
   */
  @javax.annotation.Nullable
  public BigDecimal getConfidence() {
    return confidence;
  }

  public void setConfidence(BigDecimal confidence) {
    this.confidence = confidence;
  }


  public IntelligenceV2TranscriptSentence endTime(BigDecimal endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Offset from the beginning of the transcript when this sentence ends.
   * @return endTime
   */
  @javax.annotation.Nullable
  public BigDecimal getEndTime() {
    return endTime;
  }

  public void setEndTime(BigDecimal endTime) {
    this.endTime = endTime;
  }


  public IntelligenceV2TranscriptSentence mediaChannel(Integer mediaChannel) {
    this.mediaChannel = mediaChannel;
    return this;
  }

  /**
   * The channel number.
   * @return mediaChannel
   */
  @javax.annotation.Nullable
  public Integer getMediaChannel() {
    return mediaChannel;
  }

  public void setMediaChannel(Integer mediaChannel) {
    this.mediaChannel = mediaChannel;
  }


  public IntelligenceV2TranscriptSentence sentenceIndex(Integer sentenceIndex) {
    this.sentenceIndex = sentenceIndex;
    return this;
  }

  /**
   * The index of the sentence in the transcript.
   * @return sentenceIndex
   */
  @javax.annotation.Nullable
  public Integer getSentenceIndex() {
    return sentenceIndex;
  }

  public void setSentenceIndex(Integer sentenceIndex) {
    this.sentenceIndex = sentenceIndex;
  }


  public IntelligenceV2TranscriptSentence sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies this Sentence.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public IntelligenceV2TranscriptSentence startTime(BigDecimal startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Offset from the beginning of the transcript when this sentence starts.
   * @return startTime
   */
  @javax.annotation.Nullable
  public BigDecimal getStartTime() {
    return startTime;
  }

  public void setStartTime(BigDecimal startTime) {
    this.startTime = startTime;
  }


  public IntelligenceV2TranscriptSentence transcript(String transcript) {
    this.transcript = transcript;
    return this;
  }

  /**
   * Transcript text.
   * @return transcript
   */
  @javax.annotation.Nullable
  public String getTranscript() {
    return transcript;
  }

  public void setTranscript(String transcript) {
    this.transcript = transcript;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntelligenceV2TranscriptSentence intelligenceV2TranscriptSentence = (IntelligenceV2TranscriptSentence) o;
    return Objects.equals(this.confidence, intelligenceV2TranscriptSentence.confidence) &&
        Objects.equals(this.endTime, intelligenceV2TranscriptSentence.endTime) &&
        Objects.equals(this.mediaChannel, intelligenceV2TranscriptSentence.mediaChannel) &&
        Objects.equals(this.sentenceIndex, intelligenceV2TranscriptSentence.sentenceIndex) &&
        Objects.equals(this.sid, intelligenceV2TranscriptSentence.sid) &&
        Objects.equals(this.startTime, intelligenceV2TranscriptSentence.startTime) &&
        Objects.equals(this.transcript, intelligenceV2TranscriptSentence.transcript);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidence, endTime, mediaChannel, sentenceIndex, sid, startTime, transcript);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntelligenceV2TranscriptSentence {\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    mediaChannel: ").append(toIndentedString(mediaChannel)).append("\n");
    sb.append("    sentenceIndex: ").append(toIndentedString(sentenceIndex)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    transcript: ").append(toIndentedString(transcript)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("confidence");
    openapiFields.add("end_time");
    openapiFields.add("media_channel");
    openapiFields.add("sentence_index");
    openapiFields.add("sid");
    openapiFields.add("start_time");
    openapiFields.add("transcript");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IntelligenceV2TranscriptSentence
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IntelligenceV2TranscriptSentence.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IntelligenceV2TranscriptSentence is not found in the empty JSON string", IntelligenceV2TranscriptSentence.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IntelligenceV2TranscriptSentence.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IntelligenceV2TranscriptSentence` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("transcript") != null && !jsonObj.get("transcript").isJsonNull()) && !jsonObj.get("transcript").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transcript` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transcript").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IntelligenceV2TranscriptSentence.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IntelligenceV2TranscriptSentence' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IntelligenceV2TranscriptSentence> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IntelligenceV2TranscriptSentence.class));

       return (TypeAdapter<T>) new TypeAdapter<IntelligenceV2TranscriptSentence>() {
           @Override
           public void write(JsonWriter out, IntelligenceV2TranscriptSentence value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IntelligenceV2TranscriptSentence read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IntelligenceV2TranscriptSentence given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IntelligenceV2TranscriptSentence
   * @throws IOException if the JSON string is invalid with respect to IntelligenceV2TranscriptSentence
   */
  public static IntelligenceV2TranscriptSentence fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IntelligenceV2TranscriptSentence.class);
  }

  /**
   * Convert an instance of IntelligenceV2TranscriptSentence to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

