/*
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ServiceEnumHttpMethod;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IntelligenceV2Service
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:01.731405-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IntelligenceV2Service {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_AUTO_REDACTION = "auto_redaction";
  @SerializedName(SERIALIZED_NAME_AUTO_REDACTION)
  private Boolean autoRedaction;

  public static final String SERIALIZED_NAME_AUTO_TRANSCRIBE = "auto_transcribe";
  @SerializedName(SERIALIZED_NAME_AUTO_TRANSCRIBE)
  private Boolean autoTranscribe;

  public static final String SERIALIZED_NAME_DATA_LOGGING = "data_logging";
  @SerializedName(SERIALIZED_NAME_DATA_LOGGING)
  private Boolean dataLogging;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "language_code";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_MEDIA_REDACTION = "media_redaction";
  @SerializedName(SERIALIZED_NAME_MEDIA_REDACTION)
  private Boolean mediaRedaction;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_UNIQUE_NAME = "unique_name";
  @SerializedName(SERIALIZED_NAME_UNIQUE_NAME)
  private String uniqueName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_WEBHOOK_HTTP_METHOD = "webhook_http_method";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_HTTP_METHOD)
  private ServiceEnumHttpMethod webhookHttpMethod;

  public static final String SERIALIZED_NAME_WEBHOOK_URL = "webhook_url";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_URL)
  private String webhookUrl;

  public IntelligenceV2Service() {
  }

  public IntelligenceV2Service accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The unique SID identifier of the Account the Service belongs to.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public IntelligenceV2Service autoRedaction(Boolean autoRedaction) {
    this.autoRedaction = autoRedaction;
    return this;
  }

  /**
   * Instructs the Speech Recognition service to automatically redact PII from all transcripts made on this service.
   * @return autoRedaction
   */
  @javax.annotation.Nullable
  public Boolean getAutoRedaction() {
    return autoRedaction;
  }

  public void setAutoRedaction(Boolean autoRedaction) {
    this.autoRedaction = autoRedaction;
  }


  public IntelligenceV2Service autoTranscribe(Boolean autoTranscribe) {
    this.autoTranscribe = autoTranscribe;
    return this;
  }

  /**
   * Instructs the Speech Recognition service to automatically transcribe all recordings made on the account.
   * @return autoTranscribe
   */
  @javax.annotation.Nullable
  public Boolean getAutoTranscribe() {
    return autoTranscribe;
  }

  public void setAutoTranscribe(Boolean autoTranscribe) {
    this.autoTranscribe = autoTranscribe;
  }


  public IntelligenceV2Service dataLogging(Boolean dataLogging) {
    this.dataLogging = dataLogging;
    return this;
  }

  /**
   * Data logging allows Twilio to improve the quality of the speech recognition &amp; language understanding services through using customer data to refine, fine tune and evaluate machine learning models. Note: Data logging cannot be activated via API, only via www.twilio.com, as it requires additional consent.
   * @return dataLogging
   */
  @javax.annotation.Nullable
  public Boolean getDataLogging() {
    return dataLogging;
  }

  public void setDataLogging(Boolean dataLogging) {
    this.dataLogging = dataLogging;
  }


  public IntelligenceV2Service dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date that this Service was created, given in ISO 8601 format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public IntelligenceV2Service dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date that this Service was updated, given in ISO 8601 format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public IntelligenceV2Service friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * A human readable description of this resource, up to 64 characters.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public IntelligenceV2Service languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The default language code of the audio.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public IntelligenceV2Service mediaRedaction(Boolean mediaRedaction) {
    this.mediaRedaction = mediaRedaction;
    return this;
  }

  /**
   * Instructs the Speech Recognition service to automatically redact PII from all transcripts media made on this service. The auto_redaction flag must be enabled, results in error otherwise.
   * @return mediaRedaction
   */
  @javax.annotation.Nullable
  public Boolean getMediaRedaction() {
    return mediaRedaction;
  }

  public void setMediaRedaction(Boolean mediaRedaction) {
    this.mediaRedaction = mediaRedaction;
  }


  public IntelligenceV2Service sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies this Service.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public IntelligenceV2Service uniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
    return this;
  }

  /**
   * Provides a unique and addressable name to be assigned to this Service, assigned by the developer, to be optionally used in addition to SID.
   * @return uniqueName
   */
  @javax.annotation.Nullable
  public String getUniqueName() {
    return uniqueName;
  }

  public void setUniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
  }


  public IntelligenceV2Service url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The URL of this resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public IntelligenceV2Service version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * The version number of this Service.
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  public IntelligenceV2Service webhookHttpMethod(ServiceEnumHttpMethod webhookHttpMethod) {
    this.webhookHttpMethod = webhookHttpMethod;
    return this;
  }

  /**
   * Get webhookHttpMethod
   * @return webhookHttpMethod
   */
  @javax.annotation.Nullable
  public ServiceEnumHttpMethod getWebhookHttpMethod() {
    return webhookHttpMethod;
  }

  public void setWebhookHttpMethod(ServiceEnumHttpMethod webhookHttpMethod) {
    this.webhookHttpMethod = webhookHttpMethod;
  }


  public IntelligenceV2Service webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

  /**
   * The URL Twilio will request when executing the Webhook.
   * @return webhookUrl
   */
  @javax.annotation.Nullable
  public String getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntelligenceV2Service intelligenceV2Service = (IntelligenceV2Service) o;
    return Objects.equals(this.accountSid, intelligenceV2Service.accountSid) &&
        Objects.equals(this.autoRedaction, intelligenceV2Service.autoRedaction) &&
        Objects.equals(this.autoTranscribe, intelligenceV2Service.autoTranscribe) &&
        Objects.equals(this.dataLogging, intelligenceV2Service.dataLogging) &&
        Objects.equals(this.dateCreated, intelligenceV2Service.dateCreated) &&
        Objects.equals(this.dateUpdated, intelligenceV2Service.dateUpdated) &&
        Objects.equals(this.friendlyName, intelligenceV2Service.friendlyName) &&
        Objects.equals(this.languageCode, intelligenceV2Service.languageCode) &&
        Objects.equals(this.mediaRedaction, intelligenceV2Service.mediaRedaction) &&
        Objects.equals(this.sid, intelligenceV2Service.sid) &&
        Objects.equals(this.uniqueName, intelligenceV2Service.uniqueName) &&
        Objects.equals(this.url, intelligenceV2Service.url) &&
        Objects.equals(this.version, intelligenceV2Service.version) &&
        Objects.equals(this.webhookHttpMethod, intelligenceV2Service.webhookHttpMethod) &&
        Objects.equals(this.webhookUrl, intelligenceV2Service.webhookUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, autoRedaction, autoTranscribe, dataLogging, dateCreated, dateUpdated, friendlyName, languageCode, mediaRedaction, sid, uniqueName, url, version, webhookHttpMethod, webhookUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntelligenceV2Service {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    autoRedaction: ").append(toIndentedString(autoRedaction)).append("\n");
    sb.append("    autoTranscribe: ").append(toIndentedString(autoTranscribe)).append("\n");
    sb.append("    dataLogging: ").append(toIndentedString(dataLogging)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    mediaRedaction: ").append(toIndentedString(mediaRedaction)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    uniqueName: ").append(toIndentedString(uniqueName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    webhookHttpMethod: ").append(toIndentedString(webhookHttpMethod)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("auto_redaction");
    openapiFields.add("auto_transcribe");
    openapiFields.add("data_logging");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("friendly_name");
    openapiFields.add("language_code");
    openapiFields.add("media_redaction");
    openapiFields.add("sid");
    openapiFields.add("unique_name");
    openapiFields.add("url");
    openapiFields.add("version");
    openapiFields.add("webhook_http_method");
    openapiFields.add("webhook_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IntelligenceV2Service
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IntelligenceV2Service.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IntelligenceV2Service is not found in the empty JSON string", IntelligenceV2Service.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IntelligenceV2Service.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IntelligenceV2Service` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("language_code") != null && !jsonObj.get("language_code").isJsonNull()) && !jsonObj.get("language_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language_code").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("unique_name") != null && !jsonObj.get("unique_name").isJsonNull()) && !jsonObj.get("unique_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unique_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unique_name").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("webhook_http_method") != null && !jsonObj.get("webhook_http_method").isJsonNull()) && !jsonObj.get("webhook_http_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook_http_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook_http_method").toString()));
      }
      // validate the optional field `webhook_http_method`
      if (jsonObj.get("webhook_http_method") != null && !jsonObj.get("webhook_http_method").isJsonNull()) {
        ServiceEnumHttpMethod.validateJsonElement(jsonObj.get("webhook_http_method"));
      }
      if ((jsonObj.get("webhook_url") != null && !jsonObj.get("webhook_url").isJsonNull()) && !jsonObj.get("webhook_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IntelligenceV2Service.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IntelligenceV2Service' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IntelligenceV2Service> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IntelligenceV2Service.class));

       return (TypeAdapter<T>) new TypeAdapter<IntelligenceV2Service>() {
           @Override
           public void write(JsonWriter out, IntelligenceV2Service value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IntelligenceV2Service read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IntelligenceV2Service given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IntelligenceV2Service
   * @throws IOException if the JSON string is invalid with respect to IntelligenceV2Service
   */
  public static IntelligenceV2Service fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IntelligenceV2Service.class);
  }

  /**
   * Convert an instance of IntelligenceV2Service to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

