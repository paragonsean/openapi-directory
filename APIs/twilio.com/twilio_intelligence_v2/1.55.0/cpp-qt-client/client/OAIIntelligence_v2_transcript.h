/**
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntelligence_v2_transcript.h
 *
 * 
 */

#ifndef OAIIntelligence_v2_transcript_H
#define OAIIntelligence_v2_transcript_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAITranscript_enum_status.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntelligence_v2_transcript : public OAIObject {
public:
    OAIIntelligence_v2_transcript();
    OAIIntelligence_v2_transcript(QString json);
    ~OAIIntelligence_v2_transcript() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QJsonValue getChannel() const;
    void setChannel(const QJsonValue &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getCustomerKey() const;
    void setCustomerKey(const QString &customer_key);
    bool is_customer_key_Set() const;
    bool is_customer_key_Valid() const;

    bool isDataLogging() const;
    void setDataLogging(const bool &data_logging);
    bool is_data_logging_Set() const;
    bool is_data_logging_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getLanguageCode() const;
    void setLanguageCode(const QString &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QDateTime getMediaStartTime() const;
    void setMediaStartTime(const QDateTime &media_start_time);
    bool is_media_start_time_Set() const;
    bool is_media_start_time_Valid() const;

    bool isRedaction() const;
    void setRedaction(const bool &redaction);
    bool is_redaction_Set() const;
    bool is_redaction_Valid() const;

    QString getServiceSid() const;
    void setServiceSid(const QString &service_sid);
    bool is_service_sid_Set() const;
    bool is_service_sid_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    OAITranscript_enum_status getStatus() const;
    void setStatus(const OAITranscript_enum_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QJsonValue m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_customer_key;
    bool m_customer_key_isSet;
    bool m_customer_key_isValid;

    bool m_data_logging;
    bool m_data_logging_isSet;
    bool m_data_logging_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QDateTime m_media_start_time;
    bool m_media_start_time_isSet;
    bool m_media_start_time_isValid;

    bool m_redaction;
    bool m_redaction_isSet;
    bool m_redaction_isValid;

    QString m_service_sid;
    bool m_service_sid_isSet;
    bool m_service_sid_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    OAITranscript_enum_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntelligence_v2_transcript)

#endif // OAIIntelligence_v2_transcript_H
