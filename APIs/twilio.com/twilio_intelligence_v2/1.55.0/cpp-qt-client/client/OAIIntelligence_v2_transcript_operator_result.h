/**
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntelligence_v2_transcript_operator_result.h
 *
 * 
 */

#ifndef OAIIntelligence_v2_transcript_operator_result_H
#define OAIIntelligence_v2_transcript_operator_result_H

#include <QJsonObject>

#include "OAIOperator_result_enum_operator_type.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntelligence_v2_transcript_operator_result : public OAIObject {
public:
    OAIIntelligence_v2_transcript_operator_result();
    OAIIntelligence_v2_transcript_operator_result(QString json);
    ~OAIIntelligence_v2_transcript_operator_result() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isExtractMatch() const;
    void setExtractMatch(const bool &extract_match);
    bool is_extract_match_Set() const;
    bool is_extract_match_Valid() const;

    QJsonValue getExtractResults() const;
    void setExtractResults(const QJsonValue &extract_results);
    bool is_extract_results_Set() const;
    bool is_extract_results_Valid() const;

    QJsonValue getLabelProbabilities() const;
    void setLabelProbabilities(const QJsonValue &label_probabilities);
    bool is_label_probabilities_Set() const;
    bool is_label_probabilities_Valid() const;

    double getMatchProbability() const;
    void setMatchProbability(const double &match_probability);
    bool is_match_probability_Set() const;
    bool is_match_probability_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNormalizedResult() const;
    void setNormalizedResult(const QString &normalized_result);
    bool is_normalized_result_Set() const;
    bool is_normalized_result_Valid() const;

    QString getOperatorSid() const;
    void setOperatorSid(const QString &operator_sid);
    bool is_operator_sid_Set() const;
    bool is_operator_sid_Valid() const;

    OAIOperator_result_enum_operator_type getOperatorType() const;
    void setOperatorType(const OAIOperator_result_enum_operator_type &operator_type);
    bool is_operator_type_Set() const;
    bool is_operator_type_Valid() const;

    QString getPredictedLabel() const;
    void setPredictedLabel(const QString &predicted_label);
    bool is_predicted_label_Set() const;
    bool is_predicted_label_Valid() const;

    double getPredictedProbability() const;
    void setPredictedProbability(const double &predicted_probability);
    bool is_predicted_probability_Set() const;
    bool is_predicted_probability_Valid() const;

    QJsonValue getTextGenerationResults() const;
    void setTextGenerationResults(const QJsonValue &text_generation_results);
    bool is_text_generation_results_Set() const;
    bool is_text_generation_results_Valid() const;

    QString getTranscriptSid() const;
    void setTranscriptSid(const QString &transcript_sid);
    bool is_transcript_sid_Set() const;
    bool is_transcript_sid_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    bool isUtteranceMatch() const;
    void setUtteranceMatch(const bool &utterance_match);
    bool is_utterance_match_Set() const;
    bool is_utterance_match_Valid() const;

    QList<QJsonValue> getUtteranceResults() const;
    void setUtteranceResults(const QList<QJsonValue> &utterance_results);
    bool is_utterance_results_Set() const;
    bool is_utterance_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_extract_match;
    bool m_extract_match_isSet;
    bool m_extract_match_isValid;

    QJsonValue m_extract_results;
    bool m_extract_results_isSet;
    bool m_extract_results_isValid;

    QJsonValue m_label_probabilities;
    bool m_label_probabilities_isSet;
    bool m_label_probabilities_isValid;

    double m_match_probability;
    bool m_match_probability_isSet;
    bool m_match_probability_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_normalized_result;
    bool m_normalized_result_isSet;
    bool m_normalized_result_isValid;

    QString m_operator_sid;
    bool m_operator_sid_isSet;
    bool m_operator_sid_isValid;

    OAIOperator_result_enum_operator_type m_operator_type;
    bool m_operator_type_isSet;
    bool m_operator_type_isValid;

    QString m_predicted_label;
    bool m_predicted_label_isSet;
    bool m_predicted_label_isValid;

    double m_predicted_probability;
    bool m_predicted_probability_isSet;
    bool m_predicted_probability_isValid;

    QJsonValue m_text_generation_results;
    bool m_text_generation_results_isSet;
    bool m_text_generation_results_isValid;

    QString m_transcript_sid;
    bool m_transcript_sid_isSet;
    bool m_transcript_sid_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    bool m_utterance_match;
    bool m_utterance_match_isSet;
    bool m_utterance_match_isValid;

    QList<QJsonValue> m_utterance_results;
    bool m_utterance_results_isSet;
    bool m_utterance_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntelligence_v2_transcript_operator_result)

#endif // OAIIntelligence_v2_transcript_operator_result_H
