/**
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntelligence_v2_service.h
 *
 * 
 */

#ifndef OAIIntelligence_v2_service_H
#define OAIIntelligence_v2_service_H

#include <QJsonObject>

#include "OAIService_enum_http_method.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntelligence_v2_service : public OAIObject {
public:
    OAIIntelligence_v2_service();
    OAIIntelligence_v2_service(QString json);
    ~OAIIntelligence_v2_service() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    bool isAutoRedaction() const;
    void setAutoRedaction(const bool &auto_redaction);
    bool is_auto_redaction_Set() const;
    bool is_auto_redaction_Valid() const;

    bool isAutoTranscribe() const;
    void setAutoTranscribe(const bool &auto_transcribe);
    bool is_auto_transcribe_Set() const;
    bool is_auto_transcribe_Valid() const;

    bool isDataLogging() const;
    void setDataLogging(const bool &data_logging);
    bool is_data_logging_Set() const;
    bool is_data_logging_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getLanguageCode() const;
    void setLanguageCode(const QString &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    bool isMediaRedaction() const;
    void setMediaRedaction(const bool &media_redaction);
    bool is_media_redaction_Set() const;
    bool is_media_redaction_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getUniqueName() const;
    void setUniqueName(const QString &unique_name);
    bool is_unique_name_Set() const;
    bool is_unique_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIService_enum_http_method getWebhookHttpMethod() const;
    void setWebhookHttpMethod(const OAIService_enum_http_method &webhook_http_method);
    bool is_webhook_http_method_Set() const;
    bool is_webhook_http_method_Valid() const;

    QString getWebhookUrl() const;
    void setWebhookUrl(const QString &webhook_url);
    bool is_webhook_url_Set() const;
    bool is_webhook_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    bool m_auto_redaction;
    bool m_auto_redaction_isSet;
    bool m_auto_redaction_isValid;

    bool m_auto_transcribe;
    bool m_auto_transcribe_isSet;
    bool m_auto_transcribe_isValid;

    bool m_data_logging;
    bool m_data_logging_isSet;
    bool m_data_logging_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    bool m_media_redaction;
    bool m_media_redaction_isSet;
    bool m_media_redaction_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_unique_name;
    bool m_unique_name_isSet;
    bool m_unique_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIService_enum_http_method m_webhook_http_method;
    bool m_webhook_http_method_isSet;
    bool m_webhook_http_method_isValid;

    QString m_webhook_url;
    bool m_webhook_url_isSet;
    bool m_webhook_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntelligence_v2_service)

#endif // OAIIntelligence_v2_service_H
