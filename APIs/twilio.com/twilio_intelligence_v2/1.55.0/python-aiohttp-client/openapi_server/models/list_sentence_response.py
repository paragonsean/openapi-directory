# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.intelligence_v2_transcript_sentence import IntelligenceV2TranscriptSentence
from openapi_server.models.list_service_response_meta import ListServiceResponseMeta
from openapi_server import util


class ListSentenceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: ListServiceResponseMeta=None, sentences: List[IntelligenceV2TranscriptSentence]=None):
        """ListSentenceResponse - a model defined in OpenAPI

        :param meta: The meta of this ListSentenceResponse.
        :param sentences: The sentences of this ListSentenceResponse.
        """
        self.openapi_types = {
            'meta': ListServiceResponseMeta,
            'sentences': List[IntelligenceV2TranscriptSentence]
        }

        self.attribute_map = {
            'meta': 'meta',
            'sentences': 'sentences'
        }

        self._meta = meta
        self._sentences = sentences

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSentenceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSentenceResponse of this ListSentenceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this ListSentenceResponse.


        :return: The meta of this ListSentenceResponse.
        :rtype: ListServiceResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListSentenceResponse.


        :param meta: The meta of this ListSentenceResponse.
        :type meta: ListServiceResponseMeta
        """

        self._meta = meta

    @property
    def sentences(self):
        """Gets the sentences of this ListSentenceResponse.


        :return: The sentences of this ListSentenceResponse.
        :rtype: List[IntelligenceV2TranscriptSentence]
        """
        return self._sentences

    @sentences.setter
    def sentences(self, sentences):
        """Sets the sentences of this ListSentenceResponse.


        :param sentences: The sentences of this ListSentenceResponse.
        :type sentences: List[IntelligenceV2TranscriptSentence]
        """

        self._sentences = sentences
