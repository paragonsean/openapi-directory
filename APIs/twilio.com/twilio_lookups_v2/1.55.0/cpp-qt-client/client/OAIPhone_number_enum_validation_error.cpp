/**
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPhone_number_enum_validation_error.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPhone_number_enum_validation_error::OAIPhone_number_enum_validation_error(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPhone_number_enum_validation_error::OAIPhone_number_enum_validation_error() {
    this->initializeModel();
}

OAIPhone_number_enum_validation_error::~OAIPhone_number_enum_validation_error() {}

void OAIPhone_number_enum_validation_error::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPhone_number_enum_validation_error::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPhone_number_enum_validation_error::fromJson(QString jsonString) {
    
    if ( jsonString.compare("TOO_SHORT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPhone_number_enum_validation_error::TOO_SHORT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TOO_LONG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPhone_number_enum_validation_error::TOO_LONG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVALID_BUT_POSSIBLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPhone_number_enum_validation_error::INVALID_BUT_POSSIBLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVALID_COUNTRY_CODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPhone_number_enum_validation_error::INVALID_COUNTRY_CODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVALID_LENGTH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPhone_number_enum_validation_error::INVALID_LENGTH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOT_A_NUMBER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPhone_number_enum_validation_error::NOT_A_NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPhone_number_enum_validation_error::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPhone_number_enum_validation_error::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPhone_number_enum_validation_error::TOO_SHORT:
            val = "TOO_SHORT";
            break;
        case eOAIPhone_number_enum_validation_error::TOO_LONG:
            val = "TOO_LONG";
            break;
        case eOAIPhone_number_enum_validation_error::INVALID_BUT_POSSIBLE:
            val = "INVALID_BUT_POSSIBLE";
            break;
        case eOAIPhone_number_enum_validation_error::INVALID_COUNTRY_CODE:
            val = "INVALID_COUNTRY_CODE";
            break;
        case eOAIPhone_number_enum_validation_error::INVALID_LENGTH:
            val = "INVALID_LENGTH";
            break;
        case eOAIPhone_number_enum_validation_error::NOT_A_NUMBER:
            val = "NOT_A_NUMBER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPhone_number_enum_validation_error::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPhone_number_enum_validation_error::eOAIPhone_number_enum_validation_error OAIPhone_number_enum_validation_error::getValue() const {
    return m_value;
}

void OAIPhone_number_enum_validation_error::setValue(const OAIPhone_number_enum_validation_error::eOAIPhone_number_enum_validation_error& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPhone_number_enum_validation_error::isSet() const {
    
    return m_value_isSet;
}

bool OAIPhone_number_enum_validation_error::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
