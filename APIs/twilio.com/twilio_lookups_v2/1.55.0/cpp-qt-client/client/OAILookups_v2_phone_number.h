/**
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILookups_v2_phone_number.h
 *
 * 
 */

#ifndef OAILookups_v2_phone_number_H
#define OAILookups_v2_phone_number_H

#include <QJsonObject>

#include "OAIPhone_number_enum_validation_error.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILookups_v2_phone_number : public OAIObject {
public:
    OAILookups_v2_phone_number();
    OAILookups_v2_phone_number(QString json);
    ~OAILookups_v2_phone_number() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QJsonValue getCallForwarding() const;
    void setCallForwarding(const QJsonValue &call_forwarding);
    bool is_call_forwarding_Set() const;
    bool is_call_forwarding_Valid() const;

    QJsonValue getCallerName() const;
    void setCallerName(const QJsonValue &caller_name);
    bool is_caller_name_Set() const;
    bool is_caller_name_Valid() const;

    QString getCallingCountryCode() const;
    void setCallingCountryCode(const QString &calling_country_code);
    bool is_calling_country_code_Set() const;
    bool is_calling_country_code_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QJsonValue getIdentityMatch() const;
    void setIdentityMatch(const QJsonValue &identity_match);
    bool is_identity_match_Set() const;
    bool is_identity_match_Valid() const;

    QJsonValue getLineStatus() const;
    void setLineStatus(const QJsonValue &line_status);
    bool is_line_status_Set() const;
    bool is_line_status_Valid() const;

    QJsonValue getLineTypeIntelligence() const;
    void setLineTypeIntelligence(const QJsonValue &line_type_intelligence);
    bool is_line_type_intelligence_Set() const;
    bool is_line_type_intelligence_Valid() const;

    QString getNationalFormat() const;
    void setNationalFormat(const QString &national_format);
    bool is_national_format_Set() const;
    bool is_national_format_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QJsonValue getPhoneNumberQualityScore() const;
    void setPhoneNumberQualityScore(const QJsonValue &phone_number_quality_score);
    bool is_phone_number_quality_score_Set() const;
    bool is_phone_number_quality_score_Valid() const;

    QJsonValue getReassignedNumber() const;
    void setReassignedNumber(const QJsonValue &reassigned_number);
    bool is_reassigned_number_Set() const;
    bool is_reassigned_number_Valid() const;

    QJsonValue getSimSwap() const;
    void setSimSwap(const QJsonValue &sim_swap);
    bool is_sim_swap_Set() const;
    bool is_sim_swap_Valid() const;

    QJsonValue getSmsPumpingRisk() const;
    void setSmsPumpingRisk(const QJsonValue &sms_pumping_risk);
    bool is_sms_pumping_risk_Set() const;
    bool is_sms_pumping_risk_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    bool isRValid() const;
    void setRValid(const bool &r_valid);
    bool is_r_valid_Set() const;
    bool is_r_valid_Valid() const;

    QList<OAIPhone_number_enum_validation_error> getValidationErrors() const;
    void setValidationErrors(const QList<OAIPhone_number_enum_validation_error> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QJsonValue m_call_forwarding;
    bool m_call_forwarding_isSet;
    bool m_call_forwarding_isValid;

    QJsonValue m_caller_name;
    bool m_caller_name_isSet;
    bool m_caller_name_isValid;

    QString m_calling_country_code;
    bool m_calling_country_code_isSet;
    bool m_calling_country_code_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QJsonValue m_identity_match;
    bool m_identity_match_isSet;
    bool m_identity_match_isValid;

    QJsonValue m_line_status;
    bool m_line_status_isSet;
    bool m_line_status_isValid;

    QJsonValue m_line_type_intelligence;
    bool m_line_type_intelligence_isSet;
    bool m_line_type_intelligence_isValid;

    QString m_national_format;
    bool m_national_format_isSet;
    bool m_national_format_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QJsonValue m_phone_number_quality_score;
    bool m_phone_number_quality_score_isSet;
    bool m_phone_number_quality_score_isValid;

    QJsonValue m_reassigned_number;
    bool m_reassigned_number_isSet;
    bool m_reassigned_number_isValid;

    QJsonValue m_sim_swap;
    bool m_sim_swap_isSet;
    bool m_sim_swap_isValid;

    QJsonValue m_sms_pumping_risk;
    bool m_sms_pumping_risk_isSet;
    bool m_sms_pumping_risk_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    bool m_r_valid;
    bool m_r_valid_isSet;
    bool m_r_valid_isValid;

    QList<OAIPhone_number_enum_validation_error> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILookups_v2_phone_number)

#endif // OAILookups_v2_phone_number_H
