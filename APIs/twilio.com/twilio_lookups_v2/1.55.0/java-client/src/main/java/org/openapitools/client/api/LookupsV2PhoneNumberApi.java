/*
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.LookupsV2PhoneNumber;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LookupsV2PhoneNumberApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public LookupsV2PhoneNumberApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LookupsV2PhoneNumberApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for fetchPhoneNumber
     * @param phoneNumber The phone number to lookup in E.164 or national format. Default country code is +1 (North America). (required)
     * @param fields A comma-separated list of fields to return. Possible values are validation, caller_name, sim_swap, call_forwarding, line_status, line_type_intelligence, identity_match, reassigned_number, sms_pumping_risk, phone_number_quality_score. (optional)
     * @param countryCode The [country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) used if the phone number provided is in national format. (optional)
     * @param firstName User’s first name. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param lastName User’s last name. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressLine1 User’s first address line. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressLine2 User’s second address line. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param city User’s city. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param state User’s country subdivision, such as state, province, or locality. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param postalCode User’s postal zip code. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressCountryCode User’s country, up to two characters. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param nationalId User’s national ID, such as SSN or Passport ID. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param dateOfBirth User’s date of birth, in YYYYMMDD format. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param lastVerifiedDate The date you obtained consent to call or text the end-user of the phone number or a date on which you are reasonably certain that the end-user could still be reached at that number. This query parameter is only used (optionally) for reassigned_number package requests. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchPhoneNumberCall(String phoneNumber, String fields, String countryCode, String firstName, String lastName, String addressLine1, String addressLine2, String city, String state, String postalCode, String addressCountryCode, String nationalId, String dateOfBirth, String lastVerifiedDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://lookups.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/PhoneNumbers/{PhoneNumber}"
            .replace("{" + "PhoneNumber" + "}", localVarApiClient.escapeString(phoneNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Fields", fields));
        }

        if (countryCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("CountryCode", countryCode));
        }

        if (firstName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("FirstName", firstName));
        }

        if (lastName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("LastName", lastName));
        }

        if (addressLine1 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("AddressLine1", addressLine1));
        }

        if (addressLine2 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("AddressLine2", addressLine2));
        }

        if (city != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("City", city));
        }

        if (state != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("State", state));
        }

        if (postalCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PostalCode", postalCode));
        }

        if (addressCountryCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("AddressCountryCode", addressCountryCode));
        }

        if (nationalId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("NationalId", nationalId));
        }

        if (dateOfBirth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("DateOfBirth", dateOfBirth));
        }

        if (lastVerifiedDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("LastVerifiedDate", lastVerifiedDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchPhoneNumberValidateBeforeCall(String phoneNumber, String fields, String countryCode, String firstName, String lastName, String addressLine1, String addressLine2, String city, String state, String postalCode, String addressCountryCode, String nationalId, String dateOfBirth, String lastVerifiedDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'phoneNumber' is set
        if (phoneNumber == null) {
            throw new ApiException("Missing the required parameter 'phoneNumber' when calling fetchPhoneNumber(Async)");
        }

        return fetchPhoneNumberCall(phoneNumber, fields, countryCode, firstName, lastName, addressLine1, addressLine2, city, state, postalCode, addressCountryCode, nationalId, dateOfBirth, lastVerifiedDate, _callback);

    }

    /**
     * 
     * 
     * @param phoneNumber The phone number to lookup in E.164 or national format. Default country code is +1 (North America). (required)
     * @param fields A comma-separated list of fields to return. Possible values are validation, caller_name, sim_swap, call_forwarding, line_status, line_type_intelligence, identity_match, reassigned_number, sms_pumping_risk, phone_number_quality_score. (optional)
     * @param countryCode The [country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) used if the phone number provided is in national format. (optional)
     * @param firstName User’s first name. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param lastName User’s last name. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressLine1 User’s first address line. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressLine2 User’s second address line. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param city User’s city. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param state User’s country subdivision, such as state, province, or locality. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param postalCode User’s postal zip code. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressCountryCode User’s country, up to two characters. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param nationalId User’s national ID, such as SSN or Passport ID. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param dateOfBirth User’s date of birth, in YYYYMMDD format. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param lastVerifiedDate The date you obtained consent to call or text the end-user of the phone number or a date on which you are reasonably certain that the end-user could still be reached at that number. This query parameter is only used (optionally) for reassigned_number package requests. (optional)
     * @return LookupsV2PhoneNumber
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public LookupsV2PhoneNumber fetchPhoneNumber(String phoneNumber, String fields, String countryCode, String firstName, String lastName, String addressLine1, String addressLine2, String city, String state, String postalCode, String addressCountryCode, String nationalId, String dateOfBirth, String lastVerifiedDate) throws ApiException {
        ApiResponse<LookupsV2PhoneNumber> localVarResp = fetchPhoneNumberWithHttpInfo(phoneNumber, fields, countryCode, firstName, lastName, addressLine1, addressLine2, city, state, postalCode, addressCountryCode, nationalId, dateOfBirth, lastVerifiedDate);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param phoneNumber The phone number to lookup in E.164 or national format. Default country code is +1 (North America). (required)
     * @param fields A comma-separated list of fields to return. Possible values are validation, caller_name, sim_swap, call_forwarding, line_status, line_type_intelligence, identity_match, reassigned_number, sms_pumping_risk, phone_number_quality_score. (optional)
     * @param countryCode The [country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) used if the phone number provided is in national format. (optional)
     * @param firstName User’s first name. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param lastName User’s last name. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressLine1 User’s first address line. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressLine2 User’s second address line. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param city User’s city. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param state User’s country subdivision, such as state, province, or locality. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param postalCode User’s postal zip code. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressCountryCode User’s country, up to two characters. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param nationalId User’s national ID, such as SSN or Passport ID. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param dateOfBirth User’s date of birth, in YYYYMMDD format. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param lastVerifiedDate The date you obtained consent to call or text the end-user of the phone number or a date on which you are reasonably certain that the end-user could still be reached at that number. This query parameter is only used (optionally) for reassigned_number package requests. (optional)
     * @return ApiResponse&lt;LookupsV2PhoneNumber&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<LookupsV2PhoneNumber> fetchPhoneNumberWithHttpInfo(String phoneNumber, String fields, String countryCode, String firstName, String lastName, String addressLine1, String addressLine2, String city, String state, String postalCode, String addressCountryCode, String nationalId, String dateOfBirth, String lastVerifiedDate) throws ApiException {
        okhttp3.Call localVarCall = fetchPhoneNumberValidateBeforeCall(phoneNumber, fields, countryCode, firstName, lastName, addressLine1, addressLine2, city, state, postalCode, addressCountryCode, nationalId, dateOfBirth, lastVerifiedDate, null);
        Type localVarReturnType = new TypeToken<LookupsV2PhoneNumber>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param phoneNumber The phone number to lookup in E.164 or national format. Default country code is +1 (North America). (required)
     * @param fields A comma-separated list of fields to return. Possible values are validation, caller_name, sim_swap, call_forwarding, line_status, line_type_intelligence, identity_match, reassigned_number, sms_pumping_risk, phone_number_quality_score. (optional)
     * @param countryCode The [country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) used if the phone number provided is in national format. (optional)
     * @param firstName User’s first name. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param lastName User’s last name. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressLine1 User’s first address line. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressLine2 User’s second address line. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param city User’s city. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param state User’s country subdivision, such as state, province, or locality. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param postalCode User’s postal zip code. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param addressCountryCode User’s country, up to two characters. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param nationalId User’s national ID, such as SSN or Passport ID. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param dateOfBirth User’s date of birth, in YYYYMMDD format. This query parameter is only used (optionally) for identity_match package requests. (optional)
     * @param lastVerifiedDate The date you obtained consent to call or text the end-user of the phone number or a date on which you are reasonably certain that the end-user could still be reached at that number. This query parameter is only used (optionally) for reassigned_number package requests. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchPhoneNumberAsync(String phoneNumber, String fields, String countryCode, String firstName, String lastName, String addressLine1, String addressLine2, String city, String state, String postalCode, String addressCountryCode, String nationalId, String dateOfBirth, String lastVerifiedDate, final ApiCallback<LookupsV2PhoneNumber> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchPhoneNumberValidateBeforeCall(phoneNumber, fields, countryCode, firstName, lastName, addressLine1, addressLine2, city, state, postalCode, addressCountryCode, nationalId, dateOfBirth, lastVerifiedDate, _callback);
        Type localVarReturnType = new TypeToken<LookupsV2PhoneNumber>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
