# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.phone_number_enum_validation_error import PhoneNumberEnumValidationError
from openapi_server import util


class LookupsV2PhoneNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, call_forwarding: object=None, caller_name: object=None, calling_country_code: str=None, country_code: str=None, identity_match: object=None, line_status: object=None, line_type_intelligence: object=None, national_format: str=None, phone_number: str=None, phone_number_quality_score: object=None, reassigned_number: object=None, sim_swap: object=None, sms_pumping_risk: object=None, url: str=None, valid: bool=None, validation_errors: List[PhoneNumberEnumValidationError]=None):
        """LookupsV2PhoneNumber - a model defined in OpenAPI

        :param call_forwarding: The call_forwarding of this LookupsV2PhoneNumber.
        :param caller_name: The caller_name of this LookupsV2PhoneNumber.
        :param calling_country_code: The calling_country_code of this LookupsV2PhoneNumber.
        :param country_code: The country_code of this LookupsV2PhoneNumber.
        :param identity_match: The identity_match of this LookupsV2PhoneNumber.
        :param line_status: The line_status of this LookupsV2PhoneNumber.
        :param line_type_intelligence: The line_type_intelligence of this LookupsV2PhoneNumber.
        :param national_format: The national_format of this LookupsV2PhoneNumber.
        :param phone_number: The phone_number of this LookupsV2PhoneNumber.
        :param phone_number_quality_score: The phone_number_quality_score of this LookupsV2PhoneNumber.
        :param reassigned_number: The reassigned_number of this LookupsV2PhoneNumber.
        :param sim_swap: The sim_swap of this LookupsV2PhoneNumber.
        :param sms_pumping_risk: The sms_pumping_risk of this LookupsV2PhoneNumber.
        :param url: The url of this LookupsV2PhoneNumber.
        :param valid: The valid of this LookupsV2PhoneNumber.
        :param validation_errors: The validation_errors of this LookupsV2PhoneNumber.
        """
        self.openapi_types = {
            'call_forwarding': object,
            'caller_name': object,
            'calling_country_code': str,
            'country_code': str,
            'identity_match': object,
            'line_status': object,
            'line_type_intelligence': object,
            'national_format': str,
            'phone_number': str,
            'phone_number_quality_score': object,
            'reassigned_number': object,
            'sim_swap': object,
            'sms_pumping_risk': object,
            'url': str,
            'valid': bool,
            'validation_errors': List[PhoneNumberEnumValidationError]
        }

        self.attribute_map = {
            'call_forwarding': 'call_forwarding',
            'caller_name': 'caller_name',
            'calling_country_code': 'calling_country_code',
            'country_code': 'country_code',
            'identity_match': 'identity_match',
            'line_status': 'line_status',
            'line_type_intelligence': 'line_type_intelligence',
            'national_format': 'national_format',
            'phone_number': 'phone_number',
            'phone_number_quality_score': 'phone_number_quality_score',
            'reassigned_number': 'reassigned_number',
            'sim_swap': 'sim_swap',
            'sms_pumping_risk': 'sms_pumping_risk',
            'url': 'url',
            'valid': 'valid',
            'validation_errors': 'validation_errors'
        }

        self._call_forwarding = call_forwarding
        self._caller_name = caller_name
        self._calling_country_code = calling_country_code
        self._country_code = country_code
        self._identity_match = identity_match
        self._line_status = line_status
        self._line_type_intelligence = line_type_intelligence
        self._national_format = national_format
        self._phone_number = phone_number
        self._phone_number_quality_score = phone_number_quality_score
        self._reassigned_number = reassigned_number
        self._sim_swap = sim_swap
        self._sms_pumping_risk = sms_pumping_risk
        self._url = url
        self._valid = valid
        self._validation_errors = validation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LookupsV2PhoneNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The lookups.v2.phone_number of this LookupsV2PhoneNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def call_forwarding(self):
        """Gets the call_forwarding of this LookupsV2PhoneNumber.

        An object that contains information on the unconditional call forwarding status of mobile phone number.

        :return: The call_forwarding of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._call_forwarding

    @call_forwarding.setter
    def call_forwarding(self, call_forwarding):
        """Sets the call_forwarding of this LookupsV2PhoneNumber.

        An object that contains information on the unconditional call forwarding status of mobile phone number.

        :param call_forwarding: The call_forwarding of this LookupsV2PhoneNumber.
        :type call_forwarding: object
        """

        self._call_forwarding = call_forwarding

    @property
    def caller_name(self):
        """Gets the caller_name of this LookupsV2PhoneNumber.

        An object that contains caller name information based on [CNAM](https://support.twilio.com/hc/en-us/articles/360051670533-Getting-Started-with-CNAM-Caller-ID).

        :return: The caller_name of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._caller_name

    @caller_name.setter
    def caller_name(self, caller_name):
        """Sets the caller_name of this LookupsV2PhoneNumber.

        An object that contains caller name information based on [CNAM](https://support.twilio.com/hc/en-us/articles/360051670533-Getting-Started-with-CNAM-Caller-ID).

        :param caller_name: The caller_name of this LookupsV2PhoneNumber.
        :type caller_name: object
        """

        self._caller_name = caller_name

    @property
    def calling_country_code(self):
        """Gets the calling_country_code of this LookupsV2PhoneNumber.

        International dialing prefix of the phone number defined in the E.164 standard.

        :return: The calling_country_code of this LookupsV2PhoneNumber.
        :rtype: str
        """
        return self._calling_country_code

    @calling_country_code.setter
    def calling_country_code(self, calling_country_code):
        """Sets the calling_country_code of this LookupsV2PhoneNumber.

        International dialing prefix of the phone number defined in the E.164 standard.

        :param calling_country_code: The calling_country_code of this LookupsV2PhoneNumber.
        :type calling_country_code: str
        """

        self._calling_country_code = calling_country_code

    @property
    def country_code(self):
        """Gets the country_code of this LookupsV2PhoneNumber.

        The phone number's [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).

        :return: The country_code of this LookupsV2PhoneNumber.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this LookupsV2PhoneNumber.

        The phone number's [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).

        :param country_code: The country_code of this LookupsV2PhoneNumber.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def identity_match(self):
        """Gets the identity_match of this LookupsV2PhoneNumber.

        An object that contains identity match information. The result of comparing user-provided information including name, address, date of birth, national ID, against authoritative phone-based data sources

        :return: The identity_match of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._identity_match

    @identity_match.setter
    def identity_match(self, identity_match):
        """Sets the identity_match of this LookupsV2PhoneNumber.

        An object that contains identity match information. The result of comparing user-provided information including name, address, date of birth, national ID, against authoritative phone-based data sources

        :param identity_match: The identity_match of this LookupsV2PhoneNumber.
        :type identity_match: object
        """

        self._identity_match = identity_match

    @property
    def line_status(self):
        """Gets the line_status of this LookupsV2PhoneNumber.

        An object that contains line status information for a mobile phone number.

        :return: The line_status of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._line_status

    @line_status.setter
    def line_status(self, line_status):
        """Sets the line_status of this LookupsV2PhoneNumber.

        An object that contains line status information for a mobile phone number.

        :param line_status: The line_status of this LookupsV2PhoneNumber.
        :type line_status: object
        """

        self._line_status = line_status

    @property
    def line_type_intelligence(self):
        """Gets the line_type_intelligence of this LookupsV2PhoneNumber.

        An object that contains line type information including the carrier name, mobile country code, and mobile network code.

        :return: The line_type_intelligence of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._line_type_intelligence

    @line_type_intelligence.setter
    def line_type_intelligence(self, line_type_intelligence):
        """Sets the line_type_intelligence of this LookupsV2PhoneNumber.

        An object that contains line type information including the carrier name, mobile country code, and mobile network code.

        :param line_type_intelligence: The line_type_intelligence of this LookupsV2PhoneNumber.
        :type line_type_intelligence: object
        """

        self._line_type_intelligence = line_type_intelligence

    @property
    def national_format(self):
        """Gets the national_format of this LookupsV2PhoneNumber.

        The phone number in [national format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers).

        :return: The national_format of this LookupsV2PhoneNumber.
        :rtype: str
        """
        return self._national_format

    @national_format.setter
    def national_format(self, national_format):
        """Sets the national_format of this LookupsV2PhoneNumber.

        The phone number in [national format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers).

        :param national_format: The national_format of this LookupsV2PhoneNumber.
        :type national_format: str
        """

        self._national_format = national_format

    @property
    def phone_number(self):
        """Gets the phone_number of this LookupsV2PhoneNumber.

        The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.

        :return: The phone_number of this LookupsV2PhoneNumber.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this LookupsV2PhoneNumber.

        The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.

        :param phone_number: The phone_number of this LookupsV2PhoneNumber.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def phone_number_quality_score(self):
        """Gets the phone_number_quality_score of this LookupsV2PhoneNumber.

        An object that contains information of a mobile phone number quality score. Quality score will return a risk score about the phone number.

        :return: The phone_number_quality_score of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._phone_number_quality_score

    @phone_number_quality_score.setter
    def phone_number_quality_score(self, phone_number_quality_score):
        """Sets the phone_number_quality_score of this LookupsV2PhoneNumber.

        An object that contains information of a mobile phone number quality score. Quality score will return a risk score about the phone number.

        :param phone_number_quality_score: The phone_number_quality_score of this LookupsV2PhoneNumber.
        :type phone_number_quality_score: object
        """

        self._phone_number_quality_score = phone_number_quality_score

    @property
    def reassigned_number(self):
        """Gets the reassigned_number of this LookupsV2PhoneNumber.

        An object that contains reassigned number information. Reassigned Numbers will return a phone number's reassignment status given a phone number and date

        :return: The reassigned_number of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._reassigned_number

    @reassigned_number.setter
    def reassigned_number(self, reassigned_number):
        """Sets the reassigned_number of this LookupsV2PhoneNumber.

        An object that contains reassigned number information. Reassigned Numbers will return a phone number's reassignment status given a phone number and date

        :param reassigned_number: The reassigned_number of this LookupsV2PhoneNumber.
        :type reassigned_number: object
        """

        self._reassigned_number = reassigned_number

    @property
    def sim_swap(self):
        """Gets the sim_swap of this LookupsV2PhoneNumber.

        An object that contains information on the last date the subscriber identity module (SIM) was changed for a mobile phone number.

        :return: The sim_swap of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._sim_swap

    @sim_swap.setter
    def sim_swap(self, sim_swap):
        """Sets the sim_swap of this LookupsV2PhoneNumber.

        An object that contains information on the last date the subscriber identity module (SIM) was changed for a mobile phone number.

        :param sim_swap: The sim_swap of this LookupsV2PhoneNumber.
        :type sim_swap: object
        """

        self._sim_swap = sim_swap

    @property
    def sms_pumping_risk(self):
        """Gets the sms_pumping_risk of this LookupsV2PhoneNumber.

        An object that contains information on if a phone number has been currently or previously blocked by Verify Fraud Guard for receiving malicious SMS pumping traffic as well as other signals associated with risky carriers and low conversion rates.

        :return: The sms_pumping_risk of this LookupsV2PhoneNumber.
        :rtype: object
        """
        return self._sms_pumping_risk

    @sms_pumping_risk.setter
    def sms_pumping_risk(self, sms_pumping_risk):
        """Sets the sms_pumping_risk of this LookupsV2PhoneNumber.

        An object that contains information on if a phone number has been currently or previously blocked by Verify Fraud Guard for receiving malicious SMS pumping traffic as well as other signals associated with risky carriers and low conversion rates.

        :param sms_pumping_risk: The sms_pumping_risk of this LookupsV2PhoneNumber.
        :type sms_pumping_risk: object
        """

        self._sms_pumping_risk = sms_pumping_risk

    @property
    def url(self):
        """Gets the url of this LookupsV2PhoneNumber.

        The absolute URL of the resource.

        :return: The url of this LookupsV2PhoneNumber.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this LookupsV2PhoneNumber.

        The absolute URL of the resource.

        :param url: The url of this LookupsV2PhoneNumber.
        :type url: str
        """

        self._url = url

    @property
    def valid(self):
        """Gets the valid of this LookupsV2PhoneNumber.

        Boolean which indicates if the phone number is in a valid range that can be freely assigned by a carrier to a user.

        :return: The valid of this LookupsV2PhoneNumber.
        :rtype: bool
        """
        return self._valid

    @valid.setter
    def valid(self, valid):
        """Sets the valid of this LookupsV2PhoneNumber.

        Boolean which indicates if the phone number is in a valid range that can be freely assigned by a carrier to a user.

        :param valid: The valid of this LookupsV2PhoneNumber.
        :type valid: bool
        """

        self._valid = valid

    @property
    def validation_errors(self):
        """Gets the validation_errors of this LookupsV2PhoneNumber.

        Contains reasons why a phone number is invalid. Possible values: TOO_SHORT, TOO_LONG, INVALID_BUT_POSSIBLE, INVALID_COUNTRY_CODE, INVALID_LENGTH, NOT_A_NUMBER.

        :return: The validation_errors of this LookupsV2PhoneNumber.
        :rtype: List[PhoneNumberEnumValidationError]
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this LookupsV2PhoneNumber.

        Contains reasons why a phone number is invalid. Possible values: TOO_SHORT, TOO_LONG, INVALID_BUT_POSSIBLE, INVALID_COUNTRY_CODE, INVALID_LENGTH, NOT_A_NUMBER.

        :param validation_errors: The validation_errors of this LookupsV2PhoneNumber.
        :type validation_errors: List[PhoneNumberEnumValidationError]
        """

        self._validation_errors = validation_errors
