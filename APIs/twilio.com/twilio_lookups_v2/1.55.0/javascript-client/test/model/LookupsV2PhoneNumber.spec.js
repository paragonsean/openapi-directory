/**
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioLookups);
  }
}(this, function(expect, TwilioLookups) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioLookups.LookupsV2PhoneNumber();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LookupsV2PhoneNumber', function() {
    it('should create an instance of LookupsV2PhoneNumber', function() {
      // uncomment below and update the code to test LookupsV2PhoneNumber
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be.a(TwilioLookups.LookupsV2PhoneNumber);
    });

    it('should have the property callForwarding (base name: "call_forwarding")', function() {
      // uncomment below and update the code to test the property callForwarding
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property callerName (base name: "caller_name")', function() {
      // uncomment below and update the code to test the property callerName
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property callingCountryCode (base name: "calling_country_code")', function() {
      // uncomment below and update the code to test the property callingCountryCode
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property identityMatch (base name: "identity_match")', function() {
      // uncomment below and update the code to test the property identityMatch
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property lineStatus (base name: "line_status")', function() {
      // uncomment below and update the code to test the property lineStatus
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property lineTypeIntelligence (base name: "line_type_intelligence")', function() {
      // uncomment below and update the code to test the property lineTypeIntelligence
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property nationalFormat (base name: "national_format")', function() {
      // uncomment below and update the code to test the property nationalFormat
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phone_number")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberQualityScore (base name: "phone_number_quality_score")', function() {
      // uncomment below and update the code to test the property phoneNumberQualityScore
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property reassignedNumber (base name: "reassigned_number")', function() {
      // uncomment below and update the code to test the property reassignedNumber
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property simSwap (base name: "sim_swap")', function() {
      // uncomment below and update the code to test the property simSwap
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property smsPumpingRisk (base name: "sms_pumping_risk")', function() {
      // uncomment below and update the code to test the property smsPumpingRisk
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property valid (base name: "valid")', function() {
      // uncomment below and update the code to test the property valid
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

    it('should have the property validationErrors (base name: "validation_errors")', function() {
      // uncomment below and update the code to test the property validationErrors
      //var instance = new TwilioLookups.LookupsV2PhoneNumber();
      //expect(instance).to.be();
    });

  });

}));
