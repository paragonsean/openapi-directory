/**
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LookupsV2PhoneNumber from '../model/LookupsV2PhoneNumber';

/**
* LookupsV2PhoneNumber service.
* @module api/LookupsV2PhoneNumberApi
* @version 1.55.0
*/
export default class LookupsV2PhoneNumberApi {

    /**
    * Constructs a new LookupsV2PhoneNumberApi. 
    * @alias module:api/LookupsV2PhoneNumberApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fetchPhoneNumber operation.
     * @callback module:api/LookupsV2PhoneNumberApi~fetchPhoneNumberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LookupsV2PhoneNumber} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} phoneNumber The phone number to lookup in E.164 or national format. Default country code is +1 (North America).
     * @param {Object} opts Optional parameters
     * @param {String} [fields] A comma-separated list of fields to return. Possible values are validation, caller_name, sim_swap, call_forwarding, line_status, line_type_intelligence, identity_match, reassigned_number, sms_pumping_risk, phone_number_quality_score.
     * @param {String} [countryCode] The [country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) used if the phone number provided is in national format.
     * @param {String} [firstName] User’s first name. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [lastName] User’s last name. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [addressLine1] User’s first address line. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [addressLine2] User’s second address line. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [city] User’s city. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [state] User’s country subdivision, such as state, province, or locality. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [postalCode] User’s postal zip code. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [addressCountryCode] User’s country, up to two characters. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [nationalId] User’s national ID, such as SSN or Passport ID. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [dateOfBirth] User’s date of birth, in YYYYMMDD format. This query parameter is only used (optionally) for identity_match package requests.
     * @param {String} [lastVerifiedDate] The date you obtained consent to call or text the end-user of the phone number or a date on which you are reasonably certain that the end-user could still be reached at that number. This query parameter is only used (optionally) for reassigned_number package requests.
     * @param {module:api/LookupsV2PhoneNumberApi~fetchPhoneNumberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LookupsV2PhoneNumber}
     */
    fetchPhoneNumber(phoneNumber, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'phoneNumber' is set
      if (phoneNumber === undefined || phoneNumber === null) {
        throw new Error("Missing the required parameter 'phoneNumber' when calling fetchPhoneNumber");
      }

      let pathParams = {
        'PhoneNumber': phoneNumber
      };
      let queryParams = {
        'Fields': opts['fields'],
        'CountryCode': opts['countryCode'],
        'FirstName': opts['firstName'],
        'LastName': opts['lastName'],
        'AddressLine1': opts['addressLine1'],
        'AddressLine2': opts['addressLine2'],
        'City': opts['city'],
        'State': opts['state'],
        'PostalCode': opts['postalCode'],
        'AddressCountryCode': opts['addressCountryCode'],
        'NationalId': opts['nationalId'],
        'DateOfBirth': opts['dateOfBirth'],
        'LastVerifiedDate': opts['lastVerifiedDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LookupsV2PhoneNumber;
      let basePaths = ['https://lookups.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/PhoneNumbers/{PhoneNumber}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
