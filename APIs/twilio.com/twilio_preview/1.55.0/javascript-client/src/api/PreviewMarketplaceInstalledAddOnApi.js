/**
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListMarketplaceInstalledAddOnResponse from '../model/ListMarketplaceInstalledAddOnResponse';
import PreviewMarketplaceInstalledAddOn from '../model/PreviewMarketplaceInstalledAddOn';

/**
* PreviewMarketplaceInstalledAddOn service.
* @module api/PreviewMarketplaceInstalledAddOnApi
* @version 1.55.0
*/
export default class PreviewMarketplaceInstalledAddOnApi {

    /**
    * Constructs a new PreviewMarketplaceInstalledAddOnApi. 
    * @alias module:api/PreviewMarketplaceInstalledAddOnApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createMarketplaceInstalledAddOn operation.
     * @callback module:api/PreviewMarketplaceInstalledAddOnApi~createMarketplaceInstalledAddOnCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewMarketplaceInstalledAddOn} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Install an Add-on for the Account specified.
     * @param {Boolean} acceptTermsOfService Whether the Terms of Service were accepted.
     * @param {String} availableAddOnSid The SID of the AvaliableAddOn to install.
     * @param {Object} opts Optional parameters
     * @param {Object} [configuration] The JSON object that represents the configuration of the new Add-on being installed.
     * @param {String} [uniqueName] An application-defined string that uniquely identifies the resource. This value must be unique within the Account.
     * @param {module:api/PreviewMarketplaceInstalledAddOnApi~createMarketplaceInstalledAddOnCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewMarketplaceInstalledAddOn}
     */
    createMarketplaceInstalledAddOn(acceptTermsOfService, availableAddOnSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'acceptTermsOfService' is set
      if (acceptTermsOfService === undefined || acceptTermsOfService === null) {
        throw new Error("Missing the required parameter 'acceptTermsOfService' when calling createMarketplaceInstalledAddOn");
      }
      // verify the required parameter 'availableAddOnSid' is set
      if (availableAddOnSid === undefined || availableAddOnSid === null) {
        throw new Error("Missing the required parameter 'availableAddOnSid' when calling createMarketplaceInstalledAddOn");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'AcceptTermsOfService': acceptTermsOfService,
        'AvailableAddOnSid': availableAddOnSid,
        'Configuration': opts['configuration'],
        'UniqueName': opts['uniqueName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = PreviewMarketplaceInstalledAddOn;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/marketplace/InstalledAddOns', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMarketplaceInstalledAddOn operation.
     * @callback module:api/PreviewMarketplaceInstalledAddOnApi~deleteMarketplaceInstalledAddOnCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove an Add-on installation from your account
     * @param {String} sid The SID of the InstalledAddOn resource to delete.
     * @param {module:api/PreviewMarketplaceInstalledAddOnApi~deleteMarketplaceInstalledAddOnCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteMarketplaceInstalledAddOn(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteMarketplaceInstalledAddOn");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/marketplace/InstalledAddOns/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchMarketplaceInstalledAddOn operation.
     * @callback module:api/PreviewMarketplaceInstalledAddOnApi~fetchMarketplaceInstalledAddOnCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewMarketplaceInstalledAddOn} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch an instance of an Add-on currently installed on this Account.
     * @param {String} sid The SID of the InstalledAddOn resource to fetch.
     * @param {module:api/PreviewMarketplaceInstalledAddOnApi~fetchMarketplaceInstalledAddOnCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewMarketplaceInstalledAddOn}
     */
    fetchMarketplaceInstalledAddOn(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchMarketplaceInstalledAddOn");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PreviewMarketplaceInstalledAddOn;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/marketplace/InstalledAddOns/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listMarketplaceInstalledAddOn operation.
     * @callback module:api/PreviewMarketplaceInstalledAddOnApi~listMarketplaceInstalledAddOnCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListMarketplaceInstalledAddOnResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of Add-ons currently installed on this Account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/PreviewMarketplaceInstalledAddOnApi~listMarketplaceInstalledAddOnCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListMarketplaceInstalledAddOnResponse}
     */
    listMarketplaceInstalledAddOn(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListMarketplaceInstalledAddOnResponse;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/marketplace/InstalledAddOns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMarketplaceInstalledAddOn operation.
     * @callback module:api/PreviewMarketplaceInstalledAddOnApi~updateMarketplaceInstalledAddOnCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewMarketplaceInstalledAddOn} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an Add-on installation for the Account specified.
     * @param {String} sid The SID of the InstalledAddOn resource to update.
     * @param {Object} opts Optional parameters
     * @param {Object} [configuration] Valid JSON object that conform to the configuration schema exposed by the associated AvailableAddOn resource. This is only required by Add-ons that need to be configured
     * @param {String} [uniqueName] An application-defined string that uniquely identifies the resource. This value must be unique within the Account.
     * @param {module:api/PreviewMarketplaceInstalledAddOnApi~updateMarketplaceInstalledAddOnCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewMarketplaceInstalledAddOn}
     */
    updateMarketplaceInstalledAddOn(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateMarketplaceInstalledAddOn");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Configuration': opts['configuration'],
        'UniqueName': opts['uniqueName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = PreviewMarketplaceInstalledAddOn;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/marketplace/InstalledAddOns/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
