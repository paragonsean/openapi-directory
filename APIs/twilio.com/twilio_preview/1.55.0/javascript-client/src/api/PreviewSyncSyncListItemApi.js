/**
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListSyncSyncListItemResponse from '../model/ListSyncSyncListItemResponse';
import PreviewSyncServiceSyncListSyncListItem from '../model/PreviewSyncServiceSyncListSyncListItem';
import SyncListItemEnumQueryFromBoundType from '../model/SyncListItemEnumQueryFromBoundType';
import SyncListItemEnumQueryResultOrder from '../model/SyncListItemEnumQueryResultOrder';

/**
* PreviewSyncSyncListItem service.
* @module api/PreviewSyncSyncListItemApi
* @version 1.55.0
*/
export default class PreviewSyncSyncListItemApi {

    /**
    * Constructs a new PreviewSyncSyncListItemApi. 
    * @alias module:api/PreviewSyncSyncListItemApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSyncSyncListItem operation.
     * @callback module:api/PreviewSyncSyncListItemApi~createSyncSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewSyncServiceSyncListSyncListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid 
     * @param {String} listSid 
     * @param {Object} data 
     * @param {module:api/PreviewSyncSyncListItemApi~createSyncSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewSyncServiceSyncListSyncListItem}
     */
    createSyncSyncListItem(serviceSid, listSid, data, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling createSyncSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling createSyncSyncListItem");
      }
      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling createSyncSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Data': data
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = PreviewSyncServiceSyncListSyncListItem;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSyncSyncListItem operation.
     * @callback module:api/PreviewSyncSyncListItemApi~deleteSyncSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid 
     * @param {String} listSid 
     * @param {Number} index 
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] The If-Match HTTP request header
     * @param {module:api/PreviewSyncSyncListItemApi~deleteSyncSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSyncSyncListItem(serviceSid, listSid, index, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling deleteSyncSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling deleteSyncSyncListItem");
      }
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling deleteSyncSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid,
        'Index': index
      };
      let queryParams = {
      };
      let headerParams = {
        'If-Match': opts['ifMatch']
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchSyncSyncListItem operation.
     * @callback module:api/PreviewSyncSyncListItemApi~fetchSyncSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewSyncServiceSyncListSyncListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid 
     * @param {String} listSid 
     * @param {Number} index 
     * @param {module:api/PreviewSyncSyncListItemApi~fetchSyncSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewSyncServiceSyncListSyncListItem}
     */
    fetchSyncSyncListItem(serviceSid, listSid, index, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling fetchSyncSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling fetchSyncSyncListItem");
      }
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling fetchSyncSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid,
        'Index': index
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PreviewSyncServiceSyncListSyncListItem;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listSyncSyncListItem operation.
     * @callback module:api/PreviewSyncSyncListItemApi~listSyncSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSyncSyncListItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid 
     * @param {String} listSid 
     * @param {Object} opts Optional parameters
     * @param {module:model/SyncListItemEnumQueryResultOrder} [order] 
     * @param {String} [from] 
     * @param {module:model/SyncListItemEnumQueryFromBoundType} [bounds] 
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/PreviewSyncSyncListItemApi~listSyncSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSyncSyncListItemResponse}
     */
    listSyncSyncListItem(serviceSid, listSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling listSyncSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling listSyncSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid
      };
      let queryParams = {
        'Order': opts['order'],
        'From': opts['from'],
        'Bounds': opts['bounds'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSyncSyncListItemResponse;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSyncSyncListItem operation.
     * @callback module:api/PreviewSyncSyncListItemApi~updateSyncSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewSyncServiceSyncListSyncListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid 
     * @param {String} listSid 
     * @param {Number} index 
     * @param {Object} data 
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] The If-Match HTTP request header
     * @param {module:api/PreviewSyncSyncListItemApi~updateSyncSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewSyncServiceSyncListSyncListItem}
     */
    updateSyncSyncListItem(serviceSid, listSid, index, data, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling updateSyncSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling updateSyncSyncListItem");
      }
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling updateSyncSyncListItem");
      }
      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling updateSyncSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid,
        'Index': index
      };
      let queryParams = {
      };
      let headerParams = {
        'If-Match': opts['ifMatch']
      };
      let formParams = {
        'Data': data
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = PreviewSyncServiceSyncListSyncListItem;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
