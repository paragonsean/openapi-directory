/**
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListWirelessRatePlanResponse from '../model/ListWirelessRatePlanResponse';
import PreviewWirelessRatePlan from '../model/PreviewWirelessRatePlan';

/**
* PreviewWirelessRatePlan service.
* @module api/PreviewWirelessRatePlanApi
* @version 1.55.0
*/
export default class PreviewWirelessRatePlanApi {

    /**
    * Constructs a new PreviewWirelessRatePlanApi. 
    * @alias module:api/PreviewWirelessRatePlanApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createWirelessRatePlan operation.
     * @callback module:api/PreviewWirelessRatePlanApi~createWirelessRatePlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewWirelessRatePlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [commandsEnabled] 
     * @param {Boolean} [dataEnabled] 
     * @param {Number} [dataLimit] 
     * @param {String} [dataMetering] 
     * @param {String} [friendlyName] 
     * @param {Array.<String>} [internationalRoaming] 
     * @param {Boolean} [messagingEnabled] 
     * @param {Boolean} [nationalRoamingEnabled] 
     * @param {String} [uniqueName] 
     * @param {Boolean} [voiceEnabled] 
     * @param {module:api/PreviewWirelessRatePlanApi~createWirelessRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewWirelessRatePlan}
     */
    createWirelessRatePlan(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CommandsEnabled': opts['commandsEnabled'],
        'DataEnabled': opts['dataEnabled'],
        'DataLimit': opts['dataLimit'],
        'DataMetering': opts['dataMetering'],
        'FriendlyName': opts['friendlyName'],
        'InternationalRoaming': this.apiClient.buildCollectionParam(opts['internationalRoaming'], 'csv'),
        'MessagingEnabled': opts['messagingEnabled'],
        'NationalRoamingEnabled': opts['nationalRoamingEnabled'],
        'UniqueName': opts['uniqueName'],
        'VoiceEnabled': opts['voiceEnabled']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = PreviewWirelessRatePlan;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/wireless/RatePlans', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteWirelessRatePlan operation.
     * @callback module:api/PreviewWirelessRatePlanApi~deleteWirelessRatePlanCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid 
     * @param {module:api/PreviewWirelessRatePlanApi~deleteWirelessRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteWirelessRatePlan(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteWirelessRatePlan");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/wireless/RatePlans/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchWirelessRatePlan operation.
     * @callback module:api/PreviewWirelessRatePlanApi~fetchWirelessRatePlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewWirelessRatePlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid 
     * @param {module:api/PreviewWirelessRatePlanApi~fetchWirelessRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewWirelessRatePlan}
     */
    fetchWirelessRatePlan(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchWirelessRatePlan");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PreviewWirelessRatePlan;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/wireless/RatePlans/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listWirelessRatePlan operation.
     * @callback module:api/PreviewWirelessRatePlanApi~listWirelessRatePlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListWirelessRatePlanResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/PreviewWirelessRatePlanApi~listWirelessRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListWirelessRatePlanResponse}
     */
    listWirelessRatePlan(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListWirelessRatePlanResponse;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/wireless/RatePlans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateWirelessRatePlan operation.
     * @callback module:api/PreviewWirelessRatePlanApi~updateWirelessRatePlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreviewWirelessRatePlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid 
     * @param {Object} opts Optional parameters
     * @param {String} [friendlyName] 
     * @param {String} [uniqueName] 
     * @param {module:api/PreviewWirelessRatePlanApi~updateWirelessRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreviewWirelessRatePlan}
     */
    updateWirelessRatePlan(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateWirelessRatePlan");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'FriendlyName': opts['friendlyName'],
        'UniqueName': opts['uniqueName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = PreviewWirelessRatePlan;
      let basePaths = ['https://preview.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/wireless/RatePlans/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
