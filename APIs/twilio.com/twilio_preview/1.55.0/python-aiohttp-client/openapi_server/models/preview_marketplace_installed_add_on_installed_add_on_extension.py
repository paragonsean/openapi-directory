# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class PreviewMarketplaceInstalledAddOnInstalledAddOnExtension(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, friendly_name: str=None, installed_add_on_sid: str=None, product_name: str=None, sid: str=None, unique_name: str=None, url: str=None):
        """PreviewMarketplaceInstalledAddOnInstalledAddOnExtension - a model defined in OpenAPI

        :param enabled: The enabled of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :param friendly_name: The friendly_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :param installed_add_on_sid: The installed_add_on_sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :param product_name: The product_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :param sid: The sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :param unique_name: The unique_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :param url: The url of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        """
        self.openapi_types = {
            'enabled': bool,
            'friendly_name': str,
            'installed_add_on_sid': str,
            'product_name': str,
            'sid': str,
            'unique_name': str,
            'url': str
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'friendly_name': 'friendly_name',
            'installed_add_on_sid': 'installed_add_on_sid',
            'product_name': 'product_name',
            'sid': 'sid',
            'unique_name': 'unique_name',
            'url': 'url'
        }

        self._enabled = enabled
        self._friendly_name = friendly_name
        self._installed_add_on_sid = installed_add_on_sid
        self._product_name = product_name
        self._sid = sid
        self._unique_name = unique_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviewMarketplaceInstalledAddOnInstalledAddOnExtension':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The preview.marketplace.installed_add_on.installed_add_on_extension of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        Whether the Extension will be invoked.

        :return: The enabled of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        Whether the Extension will be invoked.

        :param enabled: The enabled of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def friendly_name(self):
        """Gets the friendly_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def installed_add_on_sid(self):
        """Gets the installed_add_on_sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The SID of the InstalledAddOn resource to which this extension applies.

        :return: The installed_add_on_sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :rtype: str
        """
        return self._installed_add_on_sid

    @installed_add_on_sid.setter
    def installed_add_on_sid(self, installed_add_on_sid):
        """Sets the installed_add_on_sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The SID of the InstalledAddOn resource to which this extension applies.

        :param installed_add_on_sid: The installed_add_on_sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :type installed_add_on_sid: str
        """
        if installed_add_on_sid is not None and len(installed_add_on_sid) > 34:
            raise ValueError("Invalid value for `installed_add_on_sid`, length must be less than or equal to `34`")
        if installed_add_on_sid is not None and len(installed_add_on_sid) < 34:
            raise ValueError("Invalid value for `installed_add_on_sid`, length must be greater than or equal to `34`")
        if installed_add_on_sid is not None and not re.search(r'^XE[0-9a-fA-F]{32}$', installed_add_on_sid):
            raise ValueError("Invalid value for `installed_add_on_sid`, must be a follow pattern or equal to `/^XE[0-9a-fA-F]{32}$/`")

        self._installed_add_on_sid = installed_add_on_sid

    @property
    def product_name(self):
        """Gets the product_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The name of the Product this Extension is used within.

        :return: The product_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The name of the Product this Extension is used within.

        :param product_name: The product_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def sid(self):
        """Gets the sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The unique string that we created to identify the InstalledAddOn Extension resource.

        :return: The sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The unique string that we created to identify the InstalledAddOn Extension resource.

        :param sid: The sid of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^XF[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^XF[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def unique_name(self):
        """Gets the unique_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        An application-defined string that uniquely identifies the resource.

        :return: The unique_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :rtype: str
        """
        return self._unique_name

    @unique_name.setter
    def unique_name(self, unique_name):
        """Sets the unique_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        An application-defined string that uniquely identifies the resource.

        :param unique_name: The unique_name of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :type unique_name: str
        """

        self._unique_name = unique_name

    @property
    def url(self):
        """Gets the url of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The absolute URL of the resource.

        :return: The url of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.

        The absolute URL of the resource.

        :param url: The url of this PreviewMarketplaceInstalledAddOnInstalledAddOnExtension.
        :type url: str
        """

        self._url = url
