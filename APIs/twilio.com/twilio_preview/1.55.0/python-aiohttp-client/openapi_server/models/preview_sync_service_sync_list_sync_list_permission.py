# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class PreviewSyncServiceSyncListSyncListPermission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, identity: str=None, list_sid: str=None, manage: bool=None, read: bool=None, service_sid: str=None, url: str=None, write: bool=None):
        """PreviewSyncServiceSyncListSyncListPermission - a model defined in OpenAPI

        :param account_sid: The account_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :param identity: The identity of this PreviewSyncServiceSyncListSyncListPermission.
        :param list_sid: The list_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :param manage: The manage of this PreviewSyncServiceSyncListSyncListPermission.
        :param read: The read of this PreviewSyncServiceSyncListSyncListPermission.
        :param service_sid: The service_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :param url: The url of this PreviewSyncServiceSyncListSyncListPermission.
        :param write: The write of this PreviewSyncServiceSyncListSyncListPermission.
        """
        self.openapi_types = {
            'account_sid': str,
            'identity': str,
            'list_sid': str,
            'manage': bool,
            'read': bool,
            'service_sid': str,
            'url': str,
            'write': bool
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'identity': 'identity',
            'list_sid': 'list_sid',
            'manage': 'manage',
            'read': 'read',
            'service_sid': 'service_sid',
            'url': 'url',
            'write': 'write'
        }

        self._account_sid = account_sid
        self._identity = identity
        self._list_sid = list_sid
        self._manage = manage
        self._read = read
        self._service_sid = service_sid
        self._url = url
        self._write = write

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviewSyncServiceSyncListSyncListPermission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The preview.sync.service.sync_list.sync_list_permission of this PreviewSyncServiceSyncListSyncListPermission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this PreviewSyncServiceSyncListSyncListPermission.

        The unique SID identifier of the Twilio Account.

        :return: The account_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this PreviewSyncServiceSyncListSyncListPermission.

        The unique SID identifier of the Twilio Account.

        :param account_sid: The account_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def identity(self):
        """Gets the identity of this PreviewSyncServiceSyncListSyncListPermission.

        Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.

        :return: The identity of this PreviewSyncServiceSyncListSyncListPermission.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this PreviewSyncServiceSyncListSyncListPermission.

        Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.

        :param identity: The identity of this PreviewSyncServiceSyncListSyncListPermission.
        :type identity: str
        """

        self._identity = identity

    @property
    def list_sid(self):
        """Gets the list_sid of this PreviewSyncServiceSyncListSyncListPermission.

        The unique SID identifier of the Sync List to which the Permission applies.

        :return: The list_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :rtype: str
        """
        return self._list_sid

    @list_sid.setter
    def list_sid(self, list_sid):
        """Sets the list_sid of this PreviewSyncServiceSyncListSyncListPermission.

        The unique SID identifier of the Sync List to which the Permission applies.

        :param list_sid: The list_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :type list_sid: str
        """
        if list_sid is not None and len(list_sid) > 34:
            raise ValueError("Invalid value for `list_sid`, length must be less than or equal to `34`")
        if list_sid is not None and len(list_sid) < 34:
            raise ValueError("Invalid value for `list_sid`, length must be greater than or equal to `34`")
        if list_sid is not None and not re.search(r'^ES[0-9a-fA-F]{32}$', list_sid):
            raise ValueError("Invalid value for `list_sid`, must be a follow pattern or equal to `/^ES[0-9a-fA-F]{32}$/`")

        self._list_sid = list_sid

    @property
    def manage(self):
        """Gets the manage of this PreviewSyncServiceSyncListSyncListPermission.

        Boolean flag specifying whether the identity can delete the Sync List.

        :return: The manage of this PreviewSyncServiceSyncListSyncListPermission.
        :rtype: bool
        """
        return self._manage

    @manage.setter
    def manage(self, manage):
        """Sets the manage of this PreviewSyncServiceSyncListSyncListPermission.

        Boolean flag specifying whether the identity can delete the Sync List.

        :param manage: The manage of this PreviewSyncServiceSyncListSyncListPermission.
        :type manage: bool
        """

        self._manage = manage

    @property
    def read(self):
        """Gets the read of this PreviewSyncServiceSyncListSyncListPermission.

        Boolean flag specifying whether the identity can read the Sync List and its Items.

        :return: The read of this PreviewSyncServiceSyncListSyncListPermission.
        :rtype: bool
        """
        return self._read

    @read.setter
    def read(self, read):
        """Sets the read of this PreviewSyncServiceSyncListSyncListPermission.

        Boolean flag specifying whether the identity can read the Sync List and its Items.

        :param read: The read of this PreviewSyncServiceSyncListSyncListPermission.
        :type read: bool
        """

        self._read = read

    @property
    def service_sid(self):
        """Gets the service_sid of this PreviewSyncServiceSyncListSyncListPermission.

        The unique SID identifier of the Sync Service Instance.

        :return: The service_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this PreviewSyncServiceSyncListSyncListPermission.

        The unique SID identifier of the Sync Service Instance.

        :param service_sid: The service_sid of this PreviewSyncServiceSyncListSyncListPermission.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def url(self):
        """Gets the url of this PreviewSyncServiceSyncListSyncListPermission.

        Contains an absolute URL for this Sync List Permission.

        :return: The url of this PreviewSyncServiceSyncListSyncListPermission.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PreviewSyncServiceSyncListSyncListPermission.

        Contains an absolute URL for this Sync List Permission.

        :param url: The url of this PreviewSyncServiceSyncListSyncListPermission.
        :type url: str
        """

        self._url = url

    @property
    def write(self):
        """Gets the write of this PreviewSyncServiceSyncListSyncListPermission.

        Boolean flag specifying whether the identity can create, update and delete Items of the Sync List.

        :return: The write of this PreviewSyncServiceSyncListSyncListPermission.
        :rtype: bool
        """
        return self._write

    @write.setter
    def write(self, write):
        """Sets the write of this PreviewSyncServiceSyncListSyncListPermission.

        Boolean flag specifying whether the identity can create, update and delete Items of the Sync List.

        :param write: The write of this PreviewSyncServiceSyncListSyncListPermission.
        :type write: bool
        """

        self._write = write
