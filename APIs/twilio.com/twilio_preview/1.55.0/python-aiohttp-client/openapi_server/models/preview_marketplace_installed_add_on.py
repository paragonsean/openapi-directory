# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class PreviewMarketplaceInstalledAddOn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, configuration: object=None, date_created: datetime=None, date_updated: datetime=None, description: str=None, friendly_name: str=None, links: object=None, sid: str=None, unique_name: str=None, url: str=None):
        """PreviewMarketplaceInstalledAddOn - a model defined in OpenAPI

        :param account_sid: The account_sid of this PreviewMarketplaceInstalledAddOn.
        :param configuration: The configuration of this PreviewMarketplaceInstalledAddOn.
        :param date_created: The date_created of this PreviewMarketplaceInstalledAddOn.
        :param date_updated: The date_updated of this PreviewMarketplaceInstalledAddOn.
        :param description: The description of this PreviewMarketplaceInstalledAddOn.
        :param friendly_name: The friendly_name of this PreviewMarketplaceInstalledAddOn.
        :param links: The links of this PreviewMarketplaceInstalledAddOn.
        :param sid: The sid of this PreviewMarketplaceInstalledAddOn.
        :param unique_name: The unique_name of this PreviewMarketplaceInstalledAddOn.
        :param url: The url of this PreviewMarketplaceInstalledAddOn.
        """
        self.openapi_types = {
            'account_sid': str,
            'configuration': object,
            'date_created': datetime,
            'date_updated': datetime,
            'description': str,
            'friendly_name': str,
            'links': object,
            'sid': str,
            'unique_name': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'configuration': 'configuration',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'description': 'description',
            'friendly_name': 'friendly_name',
            'links': 'links',
            'sid': 'sid',
            'unique_name': 'unique_name',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._configuration = configuration
        self._date_created = date_created
        self._date_updated = date_updated
        self._description = description
        self._friendly_name = friendly_name
        self._links = links
        self._sid = sid
        self._unique_name = unique_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviewMarketplaceInstalledAddOn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The preview.marketplace.installed_add_on of this PreviewMarketplaceInstalledAddOn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this PreviewMarketplaceInstalledAddOn.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the InstalledAddOn resource.

        :return: The account_sid of this PreviewMarketplaceInstalledAddOn.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this PreviewMarketplaceInstalledAddOn.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the InstalledAddOn resource.

        :param account_sid: The account_sid of this PreviewMarketplaceInstalledAddOn.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def configuration(self):
        """Gets the configuration of this PreviewMarketplaceInstalledAddOn.

        The JSON object that represents the current configuration of installed Add-on.

        :return: The configuration of this PreviewMarketplaceInstalledAddOn.
        :rtype: object
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this PreviewMarketplaceInstalledAddOn.

        The JSON object that represents the current configuration of installed Add-on.

        :param configuration: The configuration of this PreviewMarketplaceInstalledAddOn.
        :type configuration: object
        """

        self._configuration = configuration

    @property
    def date_created(self):
        """Gets the date_created of this PreviewMarketplaceInstalledAddOn.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this PreviewMarketplaceInstalledAddOn.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this PreviewMarketplaceInstalledAddOn.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this PreviewMarketplaceInstalledAddOn.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this PreviewMarketplaceInstalledAddOn.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this PreviewMarketplaceInstalledAddOn.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this PreviewMarketplaceInstalledAddOn.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this PreviewMarketplaceInstalledAddOn.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def description(self):
        """Gets the description of this PreviewMarketplaceInstalledAddOn.

        A short description of the Add-on's functionality.

        :return: The description of this PreviewMarketplaceInstalledAddOn.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PreviewMarketplaceInstalledAddOn.

        A short description of the Add-on's functionality.

        :param description: The description of this PreviewMarketplaceInstalledAddOn.
        :type description: str
        """

        self._description = description

    @property
    def friendly_name(self):
        """Gets the friendly_name of this PreviewMarketplaceInstalledAddOn.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this PreviewMarketplaceInstalledAddOn.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this PreviewMarketplaceInstalledAddOn.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this PreviewMarketplaceInstalledAddOn.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def links(self):
        """Gets the links of this PreviewMarketplaceInstalledAddOn.

        The URLs of related resources.

        :return: The links of this PreviewMarketplaceInstalledAddOn.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this PreviewMarketplaceInstalledAddOn.

        The URLs of related resources.

        :param links: The links of this PreviewMarketplaceInstalledAddOn.
        :type links: object
        """

        self._links = links

    @property
    def sid(self):
        """Gets the sid of this PreviewMarketplaceInstalledAddOn.

        The unique string that we created to identify the InstalledAddOn resource. This Sid can also be found in the Console on that specific Add-ons page as the 'Available Add-on Sid'.

        :return: The sid of this PreviewMarketplaceInstalledAddOn.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this PreviewMarketplaceInstalledAddOn.

        The unique string that we created to identify the InstalledAddOn resource. This Sid can also be found in the Console on that specific Add-ons page as the 'Available Add-on Sid'.

        :param sid: The sid of this PreviewMarketplaceInstalledAddOn.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^XE[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^XE[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def unique_name(self):
        """Gets the unique_name of this PreviewMarketplaceInstalledAddOn.

        An application-defined string that uniquely identifies the resource.

        :return: The unique_name of this PreviewMarketplaceInstalledAddOn.
        :rtype: str
        """
        return self._unique_name

    @unique_name.setter
    def unique_name(self, unique_name):
        """Sets the unique_name of this PreviewMarketplaceInstalledAddOn.

        An application-defined string that uniquely identifies the resource.

        :param unique_name: The unique_name of this PreviewMarketplaceInstalledAddOn.
        :type unique_name: str
        """

        self._unique_name = unique_name

    @property
    def url(self):
        """Gets the url of this PreviewMarketplaceInstalledAddOn.

        The absolute URL of the resource.

        :return: The url of this PreviewMarketplaceInstalledAddOn.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PreviewMarketplaceInstalledAddOn.

        The absolute URL of the resource.

        :param url: The url of this PreviewMarketplaceInstalledAddOn.
        :type url: str
        """

        self._url = url
