# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class PreviewWirelessSim(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, commands_callback_method: str=None, commands_callback_url: str=None, date_created: datetime=None, date_updated: datetime=None, e_id: str=None, friendly_name: str=None, iccid: str=None, links: object=None, rate_plan_sid: str=None, sid: str=None, sms_fallback_method: str=None, sms_fallback_url: str=None, sms_method: str=None, sms_url: str=None, status: str=None, unique_name: str=None, url: str=None, voice_fallback_method: str=None, voice_fallback_url: str=None, voice_method: str=None, voice_url: str=None):
        """PreviewWirelessSim - a model defined in OpenAPI

        :param account_sid: The account_sid of this PreviewWirelessSim.
        :param commands_callback_method: The commands_callback_method of this PreviewWirelessSim.
        :param commands_callback_url: The commands_callback_url of this PreviewWirelessSim.
        :param date_created: The date_created of this PreviewWirelessSim.
        :param date_updated: The date_updated of this PreviewWirelessSim.
        :param e_id: The e_id of this PreviewWirelessSim.
        :param friendly_name: The friendly_name of this PreviewWirelessSim.
        :param iccid: The iccid of this PreviewWirelessSim.
        :param links: The links of this PreviewWirelessSim.
        :param rate_plan_sid: The rate_plan_sid of this PreviewWirelessSim.
        :param sid: The sid of this PreviewWirelessSim.
        :param sms_fallback_method: The sms_fallback_method of this PreviewWirelessSim.
        :param sms_fallback_url: The sms_fallback_url of this PreviewWirelessSim.
        :param sms_method: The sms_method of this PreviewWirelessSim.
        :param sms_url: The sms_url of this PreviewWirelessSim.
        :param status: The status of this PreviewWirelessSim.
        :param unique_name: The unique_name of this PreviewWirelessSim.
        :param url: The url of this PreviewWirelessSim.
        :param voice_fallback_method: The voice_fallback_method of this PreviewWirelessSim.
        :param voice_fallback_url: The voice_fallback_url of this PreviewWirelessSim.
        :param voice_method: The voice_method of this PreviewWirelessSim.
        :param voice_url: The voice_url of this PreviewWirelessSim.
        """
        self.openapi_types = {
            'account_sid': str,
            'commands_callback_method': str,
            'commands_callback_url': str,
            'date_created': datetime,
            'date_updated': datetime,
            'e_id': str,
            'friendly_name': str,
            'iccid': str,
            'links': object,
            'rate_plan_sid': str,
            'sid': str,
            'sms_fallback_method': str,
            'sms_fallback_url': str,
            'sms_method': str,
            'sms_url': str,
            'status': str,
            'unique_name': str,
            'url': str,
            'voice_fallback_method': str,
            'voice_fallback_url': str,
            'voice_method': str,
            'voice_url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'commands_callback_method': 'commands_callback_method',
            'commands_callback_url': 'commands_callback_url',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'e_id': 'e_id',
            'friendly_name': 'friendly_name',
            'iccid': 'iccid',
            'links': 'links',
            'rate_plan_sid': 'rate_plan_sid',
            'sid': 'sid',
            'sms_fallback_method': 'sms_fallback_method',
            'sms_fallback_url': 'sms_fallback_url',
            'sms_method': 'sms_method',
            'sms_url': 'sms_url',
            'status': 'status',
            'unique_name': 'unique_name',
            'url': 'url',
            'voice_fallback_method': 'voice_fallback_method',
            'voice_fallback_url': 'voice_fallback_url',
            'voice_method': 'voice_method',
            'voice_url': 'voice_url'
        }

        self._account_sid = account_sid
        self._commands_callback_method = commands_callback_method
        self._commands_callback_url = commands_callback_url
        self._date_created = date_created
        self._date_updated = date_updated
        self._e_id = e_id
        self._friendly_name = friendly_name
        self._iccid = iccid
        self._links = links
        self._rate_plan_sid = rate_plan_sid
        self._sid = sid
        self._sms_fallback_method = sms_fallback_method
        self._sms_fallback_url = sms_fallback_url
        self._sms_method = sms_method
        self._sms_url = sms_url
        self._status = status
        self._unique_name = unique_name
        self._url = url
        self._voice_fallback_method = voice_fallback_method
        self._voice_fallback_url = voice_fallback_url
        self._voice_method = voice_method
        self._voice_url = voice_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviewWirelessSim':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The preview.wireless.sim of this PreviewWirelessSim.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this PreviewWirelessSim.


        :return: The account_sid of this PreviewWirelessSim.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this PreviewWirelessSim.


        :param account_sid: The account_sid of this PreviewWirelessSim.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def commands_callback_method(self):
        """Gets the commands_callback_method of this PreviewWirelessSim.


        :return: The commands_callback_method of this PreviewWirelessSim.
        :rtype: str
        """
        return self._commands_callback_method

    @commands_callback_method.setter
    def commands_callback_method(self, commands_callback_method):
        """Sets the commands_callback_method of this PreviewWirelessSim.


        :param commands_callback_method: The commands_callback_method of this PreviewWirelessSim.
        :type commands_callback_method: str
        """

        self._commands_callback_method = commands_callback_method

    @property
    def commands_callback_url(self):
        """Gets the commands_callback_url of this PreviewWirelessSim.


        :return: The commands_callback_url of this PreviewWirelessSim.
        :rtype: str
        """
        return self._commands_callback_url

    @commands_callback_url.setter
    def commands_callback_url(self, commands_callback_url):
        """Sets the commands_callback_url of this PreviewWirelessSim.


        :param commands_callback_url: The commands_callback_url of this PreviewWirelessSim.
        :type commands_callback_url: str
        """

        self._commands_callback_url = commands_callback_url

    @property
    def date_created(self):
        """Gets the date_created of this PreviewWirelessSim.


        :return: The date_created of this PreviewWirelessSim.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this PreviewWirelessSim.


        :param date_created: The date_created of this PreviewWirelessSim.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this PreviewWirelessSim.


        :return: The date_updated of this PreviewWirelessSim.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this PreviewWirelessSim.


        :param date_updated: The date_updated of this PreviewWirelessSim.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def e_id(self):
        """Gets the e_id of this PreviewWirelessSim.


        :return: The e_id of this PreviewWirelessSim.
        :rtype: str
        """
        return self._e_id

    @e_id.setter
    def e_id(self, e_id):
        """Sets the e_id of this PreviewWirelessSim.


        :param e_id: The e_id of this PreviewWirelessSim.
        :type e_id: str
        """

        self._e_id = e_id

    @property
    def friendly_name(self):
        """Gets the friendly_name of this PreviewWirelessSim.


        :return: The friendly_name of this PreviewWirelessSim.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this PreviewWirelessSim.


        :param friendly_name: The friendly_name of this PreviewWirelessSim.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def iccid(self):
        """Gets the iccid of this PreviewWirelessSim.


        :return: The iccid of this PreviewWirelessSim.
        :rtype: str
        """
        return self._iccid

    @iccid.setter
    def iccid(self, iccid):
        """Sets the iccid of this PreviewWirelessSim.


        :param iccid: The iccid of this PreviewWirelessSim.
        :type iccid: str
        """

        self._iccid = iccid

    @property
    def links(self):
        """Gets the links of this PreviewWirelessSim.


        :return: The links of this PreviewWirelessSim.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this PreviewWirelessSim.


        :param links: The links of this PreviewWirelessSim.
        :type links: object
        """

        self._links = links

    @property
    def rate_plan_sid(self):
        """Gets the rate_plan_sid of this PreviewWirelessSim.


        :return: The rate_plan_sid of this PreviewWirelessSim.
        :rtype: str
        """
        return self._rate_plan_sid

    @rate_plan_sid.setter
    def rate_plan_sid(self, rate_plan_sid):
        """Sets the rate_plan_sid of this PreviewWirelessSim.


        :param rate_plan_sid: The rate_plan_sid of this PreviewWirelessSim.
        :type rate_plan_sid: str
        """
        if rate_plan_sid is not None and len(rate_plan_sid) > 34:
            raise ValueError("Invalid value for `rate_plan_sid`, length must be less than or equal to `34`")
        if rate_plan_sid is not None and len(rate_plan_sid) < 34:
            raise ValueError("Invalid value for `rate_plan_sid`, length must be greater than or equal to `34`")
        if rate_plan_sid is not None and not re.search(r'^WP[0-9a-fA-F]{32}$', rate_plan_sid):
            raise ValueError("Invalid value for `rate_plan_sid`, must be a follow pattern or equal to `/^WP[0-9a-fA-F]{32}$/`")

        self._rate_plan_sid = rate_plan_sid

    @property
    def sid(self):
        """Gets the sid of this PreviewWirelessSim.


        :return: The sid of this PreviewWirelessSim.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this PreviewWirelessSim.


        :param sid: The sid of this PreviewWirelessSim.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^DE[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^DE[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def sms_fallback_method(self):
        """Gets the sms_fallback_method of this PreviewWirelessSim.


        :return: The sms_fallback_method of this PreviewWirelessSim.
        :rtype: str
        """
        return self._sms_fallback_method

    @sms_fallback_method.setter
    def sms_fallback_method(self, sms_fallback_method):
        """Sets the sms_fallback_method of this PreviewWirelessSim.


        :param sms_fallback_method: The sms_fallback_method of this PreviewWirelessSim.
        :type sms_fallback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if sms_fallback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `sms_fallback_method` ({0}), must be one of {1}"
                .format(sms_fallback_method, allowed_values)
            )

        self._sms_fallback_method = sms_fallback_method

    @property
    def sms_fallback_url(self):
        """Gets the sms_fallback_url of this PreviewWirelessSim.


        :return: The sms_fallback_url of this PreviewWirelessSim.
        :rtype: str
        """
        return self._sms_fallback_url

    @sms_fallback_url.setter
    def sms_fallback_url(self, sms_fallback_url):
        """Sets the sms_fallback_url of this PreviewWirelessSim.


        :param sms_fallback_url: The sms_fallback_url of this PreviewWirelessSim.
        :type sms_fallback_url: str
        """

        self._sms_fallback_url = sms_fallback_url

    @property
    def sms_method(self):
        """Gets the sms_method of this PreviewWirelessSim.


        :return: The sms_method of this PreviewWirelessSim.
        :rtype: str
        """
        return self._sms_method

    @sms_method.setter
    def sms_method(self, sms_method):
        """Sets the sms_method of this PreviewWirelessSim.


        :param sms_method: The sms_method of this PreviewWirelessSim.
        :type sms_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if sms_method not in allowed_values:
            raise ValueError(
                "Invalid value for `sms_method` ({0}), must be one of {1}"
                .format(sms_method, allowed_values)
            )

        self._sms_method = sms_method

    @property
    def sms_url(self):
        """Gets the sms_url of this PreviewWirelessSim.


        :return: The sms_url of this PreviewWirelessSim.
        :rtype: str
        """
        return self._sms_url

    @sms_url.setter
    def sms_url(self, sms_url):
        """Sets the sms_url of this PreviewWirelessSim.


        :param sms_url: The sms_url of this PreviewWirelessSim.
        :type sms_url: str
        """

        self._sms_url = sms_url

    @property
    def status(self):
        """Gets the status of this PreviewWirelessSim.


        :return: The status of this PreviewWirelessSim.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PreviewWirelessSim.


        :param status: The status of this PreviewWirelessSim.
        :type status: str
        """

        self._status = status

    @property
    def unique_name(self):
        """Gets the unique_name of this PreviewWirelessSim.


        :return: The unique_name of this PreviewWirelessSim.
        :rtype: str
        """
        return self._unique_name

    @unique_name.setter
    def unique_name(self, unique_name):
        """Sets the unique_name of this PreviewWirelessSim.


        :param unique_name: The unique_name of this PreviewWirelessSim.
        :type unique_name: str
        """

        self._unique_name = unique_name

    @property
    def url(self):
        """Gets the url of this PreviewWirelessSim.


        :return: The url of this PreviewWirelessSim.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PreviewWirelessSim.


        :param url: The url of this PreviewWirelessSim.
        :type url: str
        """

        self._url = url

    @property
    def voice_fallback_method(self):
        """Gets the voice_fallback_method of this PreviewWirelessSim.


        :return: The voice_fallback_method of this PreviewWirelessSim.
        :rtype: str
        """
        return self._voice_fallback_method

    @voice_fallback_method.setter
    def voice_fallback_method(self, voice_fallback_method):
        """Sets the voice_fallback_method of this PreviewWirelessSim.


        :param voice_fallback_method: The voice_fallback_method of this PreviewWirelessSim.
        :type voice_fallback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if voice_fallback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `voice_fallback_method` ({0}), must be one of {1}"
                .format(voice_fallback_method, allowed_values)
            )

        self._voice_fallback_method = voice_fallback_method

    @property
    def voice_fallback_url(self):
        """Gets the voice_fallback_url of this PreviewWirelessSim.


        :return: The voice_fallback_url of this PreviewWirelessSim.
        :rtype: str
        """
        return self._voice_fallback_url

    @voice_fallback_url.setter
    def voice_fallback_url(self, voice_fallback_url):
        """Sets the voice_fallback_url of this PreviewWirelessSim.


        :param voice_fallback_url: The voice_fallback_url of this PreviewWirelessSim.
        :type voice_fallback_url: str
        """

        self._voice_fallback_url = voice_fallback_url

    @property
    def voice_method(self):
        """Gets the voice_method of this PreviewWirelessSim.


        :return: The voice_method of this PreviewWirelessSim.
        :rtype: str
        """
        return self._voice_method

    @voice_method.setter
    def voice_method(self, voice_method):
        """Sets the voice_method of this PreviewWirelessSim.


        :param voice_method: The voice_method of this PreviewWirelessSim.
        :type voice_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if voice_method not in allowed_values:
            raise ValueError(
                "Invalid value for `voice_method` ({0}), must be one of {1}"
                .format(voice_method, allowed_values)
            )

        self._voice_method = voice_method

    @property
    def voice_url(self):
        """Gets the voice_url of this PreviewWirelessSim.


        :return: The voice_url of this PreviewWirelessSim.
        :rtype: str
        """
        return self._voice_url

    @voice_url.setter
    def voice_url(self, voice_url):
        """Sets the voice_url of this PreviewWirelessSim.


        :param voice_url: The voice_url of this PreviewWirelessSim.
        :type voice_url: str
        """

        self._voice_url = voice_url
