# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorization_document_enum_status import AuthorizationDocumentEnumStatus
import re
from openapi_server import util


class PreviewHostedNumbersAuthorizationDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_sid: str=None, cc_emails: List[str]=None, date_created: datetime=None, date_updated: datetime=None, email: str=None, links: object=None, sid: str=None, status: AuthorizationDocumentEnumStatus=None, url: str=None):
        """PreviewHostedNumbersAuthorizationDocument - a model defined in OpenAPI

        :param address_sid: The address_sid of this PreviewHostedNumbersAuthorizationDocument.
        :param cc_emails: The cc_emails of this PreviewHostedNumbersAuthorizationDocument.
        :param date_created: The date_created of this PreviewHostedNumbersAuthorizationDocument.
        :param date_updated: The date_updated of this PreviewHostedNumbersAuthorizationDocument.
        :param email: The email of this PreviewHostedNumbersAuthorizationDocument.
        :param links: The links of this PreviewHostedNumbersAuthorizationDocument.
        :param sid: The sid of this PreviewHostedNumbersAuthorizationDocument.
        :param status: The status of this PreviewHostedNumbersAuthorizationDocument.
        :param url: The url of this PreviewHostedNumbersAuthorizationDocument.
        """
        self.openapi_types = {
            'address_sid': str,
            'cc_emails': List[str],
            'date_created': datetime,
            'date_updated': datetime,
            'email': str,
            'links': object,
            'sid': str,
            'status': AuthorizationDocumentEnumStatus,
            'url': str
        }

        self.attribute_map = {
            'address_sid': 'address_sid',
            'cc_emails': 'cc_emails',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'email': 'email',
            'links': 'links',
            'sid': 'sid',
            'status': 'status',
            'url': 'url'
        }

        self._address_sid = address_sid
        self._cc_emails = cc_emails
        self._date_created = date_created
        self._date_updated = date_updated
        self._email = email
        self._links = links
        self._sid = sid
        self._status = status
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviewHostedNumbersAuthorizationDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The preview.hosted_numbers.authorization_document of this PreviewHostedNumbersAuthorizationDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_sid(self):
        """Gets the address_sid of this PreviewHostedNumbersAuthorizationDocument.

        A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.

        :return: The address_sid of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: str
        """
        return self._address_sid

    @address_sid.setter
    def address_sid(self, address_sid):
        """Sets the address_sid of this PreviewHostedNumbersAuthorizationDocument.

        A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.

        :param address_sid: The address_sid of this PreviewHostedNumbersAuthorizationDocument.
        :type address_sid: str
        """
        if address_sid is not None and len(address_sid) > 34:
            raise ValueError("Invalid value for `address_sid`, length must be less than or equal to `34`")
        if address_sid is not None and len(address_sid) < 34:
            raise ValueError("Invalid value for `address_sid`, length must be greater than or equal to `34`")
        if address_sid is not None and not re.search(r'^AD[0-9a-fA-F]{32}$', address_sid):
            raise ValueError("Invalid value for `address_sid`, must be a follow pattern or equal to `/^AD[0-9a-fA-F]{32}$/`")

        self._address_sid = address_sid

    @property
    def cc_emails(self):
        """Gets the cc_emails of this PreviewHostedNumbersAuthorizationDocument.

        Email recipients who will be informed when an Authorization Document has been sent and signed.

        :return: The cc_emails of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: List[str]
        """
        return self._cc_emails

    @cc_emails.setter
    def cc_emails(self, cc_emails):
        """Sets the cc_emails of this PreviewHostedNumbersAuthorizationDocument.

        Email recipients who will be informed when an Authorization Document has been sent and signed.

        :param cc_emails: The cc_emails of this PreviewHostedNumbersAuthorizationDocument.
        :type cc_emails: List[str]
        """

        self._cc_emails = cc_emails

    @property
    def date_created(self):
        """Gets the date_created of this PreviewHostedNumbersAuthorizationDocument.

        The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this PreviewHostedNumbersAuthorizationDocument.

        The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this PreviewHostedNumbersAuthorizationDocument.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this PreviewHostedNumbersAuthorizationDocument.

        The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this PreviewHostedNumbersAuthorizationDocument.

        The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this PreviewHostedNumbersAuthorizationDocument.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def email(self):
        """Gets the email of this PreviewHostedNumbersAuthorizationDocument.

        Email that this AuthorizationDocument will be sent to for signing.

        :return: The email of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this PreviewHostedNumbersAuthorizationDocument.

        Email that this AuthorizationDocument will be sent to for signing.

        :param email: The email of this PreviewHostedNumbersAuthorizationDocument.
        :type email: str
        """

        self._email = email

    @property
    def links(self):
        """Gets the links of this PreviewHostedNumbersAuthorizationDocument.


        :return: The links of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this PreviewHostedNumbersAuthorizationDocument.


        :param links: The links of this PreviewHostedNumbersAuthorizationDocument.
        :type links: object
        """

        self._links = links

    @property
    def sid(self):
        """Gets the sid of this PreviewHostedNumbersAuthorizationDocument.

        A 34 character string that uniquely identifies this AuthorizationDocument.

        :return: The sid of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this PreviewHostedNumbersAuthorizationDocument.

        A 34 character string that uniquely identifies this AuthorizationDocument.

        :param sid: The sid of this PreviewHostedNumbersAuthorizationDocument.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^PX[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^PX[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this PreviewHostedNumbersAuthorizationDocument.


        :return: The status of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: AuthorizationDocumentEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PreviewHostedNumbersAuthorizationDocument.


        :param status: The status of this PreviewHostedNumbersAuthorizationDocument.
        :type status: AuthorizationDocumentEnumStatus
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this PreviewHostedNumbersAuthorizationDocument.


        :return: The url of this PreviewHostedNumbersAuthorizationDocument.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PreviewHostedNumbersAuthorizationDocument.


        :param url: The url of this PreviewHostedNumbersAuthorizationDocument.
        :type url: str
        """

        self._url = url
