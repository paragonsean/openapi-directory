# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class PreviewWirelessSimUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, commands_costs: object=None, commands_usage: object=None, data_costs: object=None, data_usage: object=None, period: object=None, sim_sid: str=None, sim_unique_name: str=None, url: str=None):
        """PreviewWirelessSimUsage - a model defined in OpenAPI

        :param account_sid: The account_sid of this PreviewWirelessSimUsage.
        :param commands_costs: The commands_costs of this PreviewWirelessSimUsage.
        :param commands_usage: The commands_usage of this PreviewWirelessSimUsage.
        :param data_costs: The data_costs of this PreviewWirelessSimUsage.
        :param data_usage: The data_usage of this PreviewWirelessSimUsage.
        :param period: The period of this PreviewWirelessSimUsage.
        :param sim_sid: The sim_sid of this PreviewWirelessSimUsage.
        :param sim_unique_name: The sim_unique_name of this PreviewWirelessSimUsage.
        :param url: The url of this PreviewWirelessSimUsage.
        """
        self.openapi_types = {
            'account_sid': str,
            'commands_costs': object,
            'commands_usage': object,
            'data_costs': object,
            'data_usage': object,
            'period': object,
            'sim_sid': str,
            'sim_unique_name': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'commands_costs': 'commands_costs',
            'commands_usage': 'commands_usage',
            'data_costs': 'data_costs',
            'data_usage': 'data_usage',
            'period': 'period',
            'sim_sid': 'sim_sid',
            'sim_unique_name': 'sim_unique_name',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._commands_costs = commands_costs
        self._commands_usage = commands_usage
        self._data_costs = data_costs
        self._data_usage = data_usage
        self._period = period
        self._sim_sid = sim_sid
        self._sim_unique_name = sim_unique_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviewWirelessSimUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The preview.wireless.sim.usage of this PreviewWirelessSimUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this PreviewWirelessSimUsage.


        :return: The account_sid of this PreviewWirelessSimUsage.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this PreviewWirelessSimUsage.


        :param account_sid: The account_sid of this PreviewWirelessSimUsage.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def commands_costs(self):
        """Gets the commands_costs of this PreviewWirelessSimUsage.


        :return: The commands_costs of this PreviewWirelessSimUsage.
        :rtype: object
        """
        return self._commands_costs

    @commands_costs.setter
    def commands_costs(self, commands_costs):
        """Sets the commands_costs of this PreviewWirelessSimUsage.


        :param commands_costs: The commands_costs of this PreviewWirelessSimUsage.
        :type commands_costs: object
        """

        self._commands_costs = commands_costs

    @property
    def commands_usage(self):
        """Gets the commands_usage of this PreviewWirelessSimUsage.


        :return: The commands_usage of this PreviewWirelessSimUsage.
        :rtype: object
        """
        return self._commands_usage

    @commands_usage.setter
    def commands_usage(self, commands_usage):
        """Sets the commands_usage of this PreviewWirelessSimUsage.


        :param commands_usage: The commands_usage of this PreviewWirelessSimUsage.
        :type commands_usage: object
        """

        self._commands_usage = commands_usage

    @property
    def data_costs(self):
        """Gets the data_costs of this PreviewWirelessSimUsage.


        :return: The data_costs of this PreviewWirelessSimUsage.
        :rtype: object
        """
        return self._data_costs

    @data_costs.setter
    def data_costs(self, data_costs):
        """Sets the data_costs of this PreviewWirelessSimUsage.


        :param data_costs: The data_costs of this PreviewWirelessSimUsage.
        :type data_costs: object
        """

        self._data_costs = data_costs

    @property
    def data_usage(self):
        """Gets the data_usage of this PreviewWirelessSimUsage.


        :return: The data_usage of this PreviewWirelessSimUsage.
        :rtype: object
        """
        return self._data_usage

    @data_usage.setter
    def data_usage(self, data_usage):
        """Sets the data_usage of this PreviewWirelessSimUsage.


        :param data_usage: The data_usage of this PreviewWirelessSimUsage.
        :type data_usage: object
        """

        self._data_usage = data_usage

    @property
    def period(self):
        """Gets the period of this PreviewWirelessSimUsage.


        :return: The period of this PreviewWirelessSimUsage.
        :rtype: object
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this PreviewWirelessSimUsage.


        :param period: The period of this PreviewWirelessSimUsage.
        :type period: object
        """

        self._period = period

    @property
    def sim_sid(self):
        """Gets the sim_sid of this PreviewWirelessSimUsage.


        :return: The sim_sid of this PreviewWirelessSimUsage.
        :rtype: str
        """
        return self._sim_sid

    @sim_sid.setter
    def sim_sid(self, sim_sid):
        """Sets the sim_sid of this PreviewWirelessSimUsage.


        :param sim_sid: The sim_sid of this PreviewWirelessSimUsage.
        :type sim_sid: str
        """
        if sim_sid is not None and len(sim_sid) > 34:
            raise ValueError("Invalid value for `sim_sid`, length must be less than or equal to `34`")
        if sim_sid is not None and len(sim_sid) < 34:
            raise ValueError("Invalid value for `sim_sid`, length must be greater than or equal to `34`")
        if sim_sid is not None and not re.search(r'^DE[0-9a-fA-F]{32}$', sim_sid):
            raise ValueError("Invalid value for `sim_sid`, must be a follow pattern or equal to `/^DE[0-9a-fA-F]{32}$/`")

        self._sim_sid = sim_sid

    @property
    def sim_unique_name(self):
        """Gets the sim_unique_name of this PreviewWirelessSimUsage.


        :return: The sim_unique_name of this PreviewWirelessSimUsage.
        :rtype: str
        """
        return self._sim_unique_name

    @sim_unique_name.setter
    def sim_unique_name(self, sim_unique_name):
        """Sets the sim_unique_name of this PreviewWirelessSimUsage.


        :param sim_unique_name: The sim_unique_name of this PreviewWirelessSimUsage.
        :type sim_unique_name: str
        """

        self._sim_unique_name = sim_unique_name

    @property
    def url(self):
        """Gets the url of this PreviewWirelessSimUsage.


        :return: The url of this PreviewWirelessSimUsage.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PreviewWirelessSimUsage.


        :param url: The url of this PreviewWirelessSimUsage.
        :type url: str
        """

        self._url = url
