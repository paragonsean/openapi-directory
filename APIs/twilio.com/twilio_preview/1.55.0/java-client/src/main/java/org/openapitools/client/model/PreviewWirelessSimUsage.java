/*
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PreviewWirelessSimUsage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:14.224665-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PreviewWirelessSimUsage {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_COMMANDS_COSTS = "commands_costs";
  @SerializedName(SERIALIZED_NAME_COMMANDS_COSTS)
  private Object commandsCosts = null;

  public static final String SERIALIZED_NAME_COMMANDS_USAGE = "commands_usage";
  @SerializedName(SERIALIZED_NAME_COMMANDS_USAGE)
  private Object commandsUsage = null;

  public static final String SERIALIZED_NAME_DATA_COSTS = "data_costs";
  @SerializedName(SERIALIZED_NAME_DATA_COSTS)
  private Object dataCosts = null;

  public static final String SERIALIZED_NAME_DATA_USAGE = "data_usage";
  @SerializedName(SERIALIZED_NAME_DATA_USAGE)
  private Object dataUsage = null;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private Object period = null;

  public static final String SERIALIZED_NAME_SIM_SID = "sim_sid";
  @SerializedName(SERIALIZED_NAME_SIM_SID)
  private String simSid;

  public static final String SERIALIZED_NAME_SIM_UNIQUE_NAME = "sim_unique_name";
  @SerializedName(SERIALIZED_NAME_SIM_UNIQUE_NAME)
  private String simUniqueName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public PreviewWirelessSimUsage() {
  }

  public PreviewWirelessSimUsage accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * Get accountSid
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public PreviewWirelessSimUsage commandsCosts(Object commandsCosts) {
    this.commandsCosts = commandsCosts;
    return this;
  }

  /**
   * Get commandsCosts
   * @return commandsCosts
   */
  @javax.annotation.Nullable
  public Object getCommandsCosts() {
    return commandsCosts;
  }

  public void setCommandsCosts(Object commandsCosts) {
    this.commandsCosts = commandsCosts;
  }


  public PreviewWirelessSimUsage commandsUsage(Object commandsUsage) {
    this.commandsUsage = commandsUsage;
    return this;
  }

  /**
   * Get commandsUsage
   * @return commandsUsage
   */
  @javax.annotation.Nullable
  public Object getCommandsUsage() {
    return commandsUsage;
  }

  public void setCommandsUsage(Object commandsUsage) {
    this.commandsUsage = commandsUsage;
  }


  public PreviewWirelessSimUsage dataCosts(Object dataCosts) {
    this.dataCosts = dataCosts;
    return this;
  }

  /**
   * Get dataCosts
   * @return dataCosts
   */
  @javax.annotation.Nullable
  public Object getDataCosts() {
    return dataCosts;
  }

  public void setDataCosts(Object dataCosts) {
    this.dataCosts = dataCosts;
  }


  public PreviewWirelessSimUsage dataUsage(Object dataUsage) {
    this.dataUsage = dataUsage;
    return this;
  }

  /**
   * Get dataUsage
   * @return dataUsage
   */
  @javax.annotation.Nullable
  public Object getDataUsage() {
    return dataUsage;
  }

  public void setDataUsage(Object dataUsage) {
    this.dataUsage = dataUsage;
  }


  public PreviewWirelessSimUsage period(Object period) {
    this.period = period;
    return this;
  }

  /**
   * Get period
   * @return period
   */
  @javax.annotation.Nullable
  public Object getPeriod() {
    return period;
  }

  public void setPeriod(Object period) {
    this.period = period;
  }


  public PreviewWirelessSimUsage simSid(String simSid) {
    this.simSid = simSid;
    return this;
  }

  /**
   * Get simSid
   * @return simSid
   */
  @javax.annotation.Nullable
  public String getSimSid() {
    return simSid;
  }

  public void setSimSid(String simSid) {
    this.simSid = simSid;
  }


  public PreviewWirelessSimUsage simUniqueName(String simUniqueName) {
    this.simUniqueName = simUniqueName;
    return this;
  }

  /**
   * Get simUniqueName
   * @return simUniqueName
   */
  @javax.annotation.Nullable
  public String getSimUniqueName() {
    return simUniqueName;
  }

  public void setSimUniqueName(String simUniqueName) {
    this.simUniqueName = simUniqueName;
  }


  public PreviewWirelessSimUsage url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PreviewWirelessSimUsage previewWirelessSimUsage = (PreviewWirelessSimUsage) o;
    return Objects.equals(this.accountSid, previewWirelessSimUsage.accountSid) &&
        Objects.equals(this.commandsCosts, previewWirelessSimUsage.commandsCosts) &&
        Objects.equals(this.commandsUsage, previewWirelessSimUsage.commandsUsage) &&
        Objects.equals(this.dataCosts, previewWirelessSimUsage.dataCosts) &&
        Objects.equals(this.dataUsage, previewWirelessSimUsage.dataUsage) &&
        Objects.equals(this.period, previewWirelessSimUsage.period) &&
        Objects.equals(this.simSid, previewWirelessSimUsage.simSid) &&
        Objects.equals(this.simUniqueName, previewWirelessSimUsage.simUniqueName) &&
        Objects.equals(this.url, previewWirelessSimUsage.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, commandsCosts, commandsUsage, dataCosts, dataUsage, period, simSid, simUniqueName, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PreviewWirelessSimUsage {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    commandsCosts: ").append(toIndentedString(commandsCosts)).append("\n");
    sb.append("    commandsUsage: ").append(toIndentedString(commandsUsage)).append("\n");
    sb.append("    dataCosts: ").append(toIndentedString(dataCosts)).append("\n");
    sb.append("    dataUsage: ").append(toIndentedString(dataUsage)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    simSid: ").append(toIndentedString(simSid)).append("\n");
    sb.append("    simUniqueName: ").append(toIndentedString(simUniqueName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("commands_costs");
    openapiFields.add("commands_usage");
    openapiFields.add("data_costs");
    openapiFields.add("data_usage");
    openapiFields.add("period");
    openapiFields.add("sim_sid");
    openapiFields.add("sim_unique_name");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PreviewWirelessSimUsage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PreviewWirelessSimUsage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PreviewWirelessSimUsage is not found in the empty JSON string", PreviewWirelessSimUsage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PreviewWirelessSimUsage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PreviewWirelessSimUsage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("sim_sid") != null && !jsonObj.get("sim_sid").isJsonNull()) && !jsonObj.get("sim_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sim_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sim_sid").toString()));
      }
      if ((jsonObj.get("sim_unique_name") != null && !jsonObj.get("sim_unique_name").isJsonNull()) && !jsonObj.get("sim_unique_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sim_unique_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sim_unique_name").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PreviewWirelessSimUsage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PreviewWirelessSimUsage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PreviewWirelessSimUsage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PreviewWirelessSimUsage.class));

       return (TypeAdapter<T>) new TypeAdapter<PreviewWirelessSimUsage>() {
           @Override
           public void write(JsonWriter out, PreviewWirelessSimUsage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PreviewWirelessSimUsage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PreviewWirelessSimUsage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PreviewWirelessSimUsage
   * @throws IOException if the JSON string is invalid with respect to PreviewWirelessSimUsage
   */
  public static PreviewWirelessSimUsage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PreviewWirelessSimUsage.class);
  }

  /**
   * Convert an instance of PreviewWirelessSimUsage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

