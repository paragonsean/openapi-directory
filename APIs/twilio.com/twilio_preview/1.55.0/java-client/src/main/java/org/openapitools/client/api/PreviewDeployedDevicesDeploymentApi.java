/*
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ListDeployedDevicesDeploymentResponse;
import org.openapitools.client.model.PreviewDeployedDevicesFleetDeployment;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PreviewDeployedDevicesDeploymentApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public PreviewDeployedDevicesDeploymentApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PreviewDeployedDevicesDeploymentApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createDeployedDevicesDeployment
     * @param fleetSid  (required)
     * @param friendlyName Provides a human readable descriptive text for this Deployment, up to 256 characters long. (optional)
     * @param syncServiceSid Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createDeployedDevicesDeploymentCall(String fleetSid, String friendlyName, String syncServiceSid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://preview.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/DeployedDevices/Fleets/{FleetSid}/Deployments"
            .replace("{" + "FleetSid" + "}", localVarApiClient.escapeString(fleetSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (friendlyName != null) {
            localVarFormParams.put("FriendlyName", friendlyName);
        }

        if (syncServiceSid != null) {
            localVarFormParams.put("SyncServiceSid", syncServiceSid);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createDeployedDevicesDeploymentValidateBeforeCall(String fleetSid, String friendlyName, String syncServiceSid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'fleetSid' is set
        if (fleetSid == null) {
            throw new ApiException("Missing the required parameter 'fleetSid' when calling createDeployedDevicesDeployment(Async)");
        }

        return createDeployedDevicesDeploymentCall(fleetSid, friendlyName, syncServiceSid, _callback);

    }

    /**
     * 
     * Create a new Deployment in the Fleet, optionally giving it a friendly name and linking to a specific Twilio Sync service instance.
     * @param fleetSid  (required)
     * @param friendlyName Provides a human readable descriptive text for this Deployment, up to 256 characters long. (optional)
     * @param syncServiceSid Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. (optional)
     * @return PreviewDeployedDevicesFleetDeployment
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public PreviewDeployedDevicesFleetDeployment createDeployedDevicesDeployment(String fleetSid, String friendlyName, String syncServiceSid) throws ApiException {
        ApiResponse<PreviewDeployedDevicesFleetDeployment> localVarResp = createDeployedDevicesDeploymentWithHttpInfo(fleetSid, friendlyName, syncServiceSid);
        return localVarResp.getData();
    }

    /**
     * 
     * Create a new Deployment in the Fleet, optionally giving it a friendly name and linking to a specific Twilio Sync service instance.
     * @param fleetSid  (required)
     * @param friendlyName Provides a human readable descriptive text for this Deployment, up to 256 characters long. (optional)
     * @param syncServiceSid Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. (optional)
     * @return ApiResponse&lt;PreviewDeployedDevicesFleetDeployment&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PreviewDeployedDevicesFleetDeployment> createDeployedDevicesDeploymentWithHttpInfo(String fleetSid, String friendlyName, String syncServiceSid) throws ApiException {
        okhttp3.Call localVarCall = createDeployedDevicesDeploymentValidateBeforeCall(fleetSid, friendlyName, syncServiceSid, null);
        Type localVarReturnType = new TypeToken<PreviewDeployedDevicesFleetDeployment>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create a new Deployment in the Fleet, optionally giving it a friendly name and linking to a specific Twilio Sync service instance.
     * @param fleetSid  (required)
     * @param friendlyName Provides a human readable descriptive text for this Deployment, up to 256 characters long. (optional)
     * @param syncServiceSid Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createDeployedDevicesDeploymentAsync(String fleetSid, String friendlyName, String syncServiceSid, final ApiCallback<PreviewDeployedDevicesFleetDeployment> _callback) throws ApiException {

        okhttp3.Call localVarCall = createDeployedDevicesDeploymentValidateBeforeCall(fleetSid, friendlyName, syncServiceSid, _callback);
        Type localVarReturnType = new TypeToken<PreviewDeployedDevicesFleetDeployment>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteDeployedDevicesDeployment
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteDeployedDevicesDeploymentCall(String fleetSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://preview.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/DeployedDevices/Fleets/{FleetSid}/Deployments/{Sid}"
            .replace("{" + "FleetSid" + "}", localVarApiClient.escapeString(fleetSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteDeployedDevicesDeploymentValidateBeforeCall(String fleetSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'fleetSid' is set
        if (fleetSid == null) {
            throw new ApiException("Missing the required parameter 'fleetSid' when calling deleteDeployedDevicesDeployment(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling deleteDeployedDevicesDeployment(Async)");
        }

        return deleteDeployedDevicesDeploymentCall(fleetSid, sid, _callback);

    }

    /**
     * 
     * Delete a specific Deployment from the Fleet, leaving associated devices effectively undeployed.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public void deleteDeployedDevicesDeployment(String fleetSid, String sid) throws ApiException {
        deleteDeployedDevicesDeploymentWithHttpInfo(fleetSid, sid);
    }

    /**
     * 
     * Delete a specific Deployment from the Fleet, leaving associated devices effectively undeployed.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteDeployedDevicesDeploymentWithHttpInfo(String fleetSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = deleteDeployedDevicesDeploymentValidateBeforeCall(fleetSid, sid, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a specific Deployment from the Fleet, leaving associated devices effectively undeployed.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteDeployedDevicesDeploymentAsync(String fleetSid, String sid, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteDeployedDevicesDeploymentValidateBeforeCall(fleetSid, sid, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchDeployedDevicesDeployment
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchDeployedDevicesDeploymentCall(String fleetSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://preview.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/DeployedDevices/Fleets/{FleetSid}/Deployments/{Sid}"
            .replace("{" + "FleetSid" + "}", localVarApiClient.escapeString(fleetSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchDeployedDevicesDeploymentValidateBeforeCall(String fleetSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'fleetSid' is set
        if (fleetSid == null) {
            throw new ApiException("Missing the required parameter 'fleetSid' when calling fetchDeployedDevicesDeployment(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling fetchDeployedDevicesDeployment(Async)");
        }

        return fetchDeployedDevicesDeploymentCall(fleetSid, sid, _callback);

    }

    /**
     * 
     * Fetch information about a specific Deployment in the Fleet.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @return PreviewDeployedDevicesFleetDeployment
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public PreviewDeployedDevicesFleetDeployment fetchDeployedDevicesDeployment(String fleetSid, String sid) throws ApiException {
        ApiResponse<PreviewDeployedDevicesFleetDeployment> localVarResp = fetchDeployedDevicesDeploymentWithHttpInfo(fleetSid, sid);
        return localVarResp.getData();
    }

    /**
     * 
     * Fetch information about a specific Deployment in the Fleet.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @return ApiResponse&lt;PreviewDeployedDevicesFleetDeployment&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PreviewDeployedDevicesFleetDeployment> fetchDeployedDevicesDeploymentWithHttpInfo(String fleetSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = fetchDeployedDevicesDeploymentValidateBeforeCall(fleetSid, sid, null);
        Type localVarReturnType = new TypeToken<PreviewDeployedDevicesFleetDeployment>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Fetch information about a specific Deployment in the Fleet.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchDeployedDevicesDeploymentAsync(String fleetSid, String sid, final ApiCallback<PreviewDeployedDevicesFleetDeployment> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchDeployedDevicesDeploymentValidateBeforeCall(fleetSid, sid, _callback);
        Type localVarReturnType = new TypeToken<PreviewDeployedDevicesFleetDeployment>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listDeployedDevicesDeployment
     * @param fleetSid  (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listDeployedDevicesDeploymentCall(String fleetSid, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://preview.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/DeployedDevices/Fleets/{FleetSid}/Deployments"
            .replace("{" + "FleetSid" + "}", localVarApiClient.escapeString(fleetSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listDeployedDevicesDeploymentValidateBeforeCall(String fleetSid, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'fleetSid' is set
        if (fleetSid == null) {
            throw new ApiException("Missing the required parameter 'fleetSid' when calling listDeployedDevicesDeployment(Async)");
        }

        return listDeployedDevicesDeploymentCall(fleetSid, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * Retrieve a list of all Deployments belonging to the Fleet.
     * @param fleetSid  (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListDeployedDevicesDeploymentResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListDeployedDevicesDeploymentResponse listDeployedDevicesDeployment(String fleetSid, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListDeployedDevicesDeploymentResponse> localVarResp = listDeployedDevicesDeploymentWithHttpInfo(fleetSid, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve a list of all Deployments belonging to the Fleet.
     * @param fleetSid  (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListDeployedDevicesDeploymentResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListDeployedDevicesDeploymentResponse> listDeployedDevicesDeploymentWithHttpInfo(String fleetSid, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listDeployedDevicesDeploymentValidateBeforeCall(fleetSid, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListDeployedDevicesDeploymentResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve a list of all Deployments belonging to the Fleet.
     * @param fleetSid  (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listDeployedDevicesDeploymentAsync(String fleetSid, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListDeployedDevicesDeploymentResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listDeployedDevicesDeploymentValidateBeforeCall(fleetSid, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListDeployedDevicesDeploymentResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateDeployedDevicesDeployment
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @param friendlyName Provides a human readable descriptive text for this Deployment, up to 64 characters long (optional)
     * @param syncServiceSid Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateDeployedDevicesDeploymentCall(String fleetSid, String sid, String friendlyName, String syncServiceSid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://preview.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/DeployedDevices/Fleets/{FleetSid}/Deployments/{Sid}"
            .replace("{" + "FleetSid" + "}", localVarApiClient.escapeString(fleetSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (friendlyName != null) {
            localVarFormParams.put("FriendlyName", friendlyName);
        }

        if (syncServiceSid != null) {
            localVarFormParams.put("SyncServiceSid", syncServiceSid);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateDeployedDevicesDeploymentValidateBeforeCall(String fleetSid, String sid, String friendlyName, String syncServiceSid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'fleetSid' is set
        if (fleetSid == null) {
            throw new ApiException("Missing the required parameter 'fleetSid' when calling updateDeployedDevicesDeployment(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling updateDeployedDevicesDeployment(Async)");
        }

        return updateDeployedDevicesDeploymentCall(fleetSid, sid, friendlyName, syncServiceSid, _callback);

    }

    /**
     * 
     * Update the given properties of a specific Deployment credential in the Fleet, giving it a friendly name or linking to a specific Twilio Sync service instance.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @param friendlyName Provides a human readable descriptive text for this Deployment, up to 64 characters long (optional)
     * @param syncServiceSid Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. (optional)
     * @return PreviewDeployedDevicesFleetDeployment
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public PreviewDeployedDevicesFleetDeployment updateDeployedDevicesDeployment(String fleetSid, String sid, String friendlyName, String syncServiceSid) throws ApiException {
        ApiResponse<PreviewDeployedDevicesFleetDeployment> localVarResp = updateDeployedDevicesDeploymentWithHttpInfo(fleetSid, sid, friendlyName, syncServiceSid);
        return localVarResp.getData();
    }

    /**
     * 
     * Update the given properties of a specific Deployment credential in the Fleet, giving it a friendly name or linking to a specific Twilio Sync service instance.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @param friendlyName Provides a human readable descriptive text for this Deployment, up to 64 characters long (optional)
     * @param syncServiceSid Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. (optional)
     * @return ApiResponse&lt;PreviewDeployedDevicesFleetDeployment&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PreviewDeployedDevicesFleetDeployment> updateDeployedDevicesDeploymentWithHttpInfo(String fleetSid, String sid, String friendlyName, String syncServiceSid) throws ApiException {
        okhttp3.Call localVarCall = updateDeployedDevicesDeploymentValidateBeforeCall(fleetSid, sid, friendlyName, syncServiceSid, null);
        Type localVarReturnType = new TypeToken<PreviewDeployedDevicesFleetDeployment>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update the given properties of a specific Deployment credential in the Fleet, giving it a friendly name or linking to a specific Twilio Sync service instance.
     * @param fleetSid  (required)
     * @param sid Provides a 34 character string that uniquely identifies the requested Deployment resource. (required)
     * @param friendlyName Provides a human readable descriptive text for this Deployment, up to 64 characters long (optional)
     * @param syncServiceSid Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateDeployedDevicesDeploymentAsync(String fleetSid, String sid, String friendlyName, String syncServiceSid, final ApiCallback<PreviewDeployedDevicesFleetDeployment> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateDeployedDevicesDeploymentValidateBeforeCall(fleetSid, sid, friendlyName, syncServiceSid, _callback);
        Type localVarReturnType = new TypeToken<PreviewDeployedDevicesFleetDeployment>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
