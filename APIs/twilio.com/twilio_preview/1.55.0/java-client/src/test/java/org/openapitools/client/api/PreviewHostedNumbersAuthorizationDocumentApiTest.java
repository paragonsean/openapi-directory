/*
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AuthorizationDocumentEnumStatus;
import org.openapitools.client.model.ListHostedNumbersAuthorizationDocumentResponse;
import org.openapitools.client.model.PreviewHostedNumbersAuthorizationDocument;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PreviewHostedNumbersAuthorizationDocumentApi
 */
@Disabled
public class PreviewHostedNumbersAuthorizationDocumentApiTest {

    private final PreviewHostedNumbersAuthorizationDocumentApi api = new PreviewHostedNumbersAuthorizationDocumentApi();

    /**
     * Create an AuthorizationDocument for authorizing the hosting of phone number capabilities on Twilio&#39;s platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createHostedNumbersAuthorizationDocumentTest() throws ApiException {
        String addressSid = null;
        String contactPhoneNumber = null;
        String contactTitle = null;
        String email = null;
        List<String> hostedNumberOrderSids = null;
        List<String> ccEmails = null;
        PreviewHostedNumbersAuthorizationDocument response = api.createHostedNumbersAuthorizationDocument(addressSid, contactPhoneNumber, contactTitle, email, hostedNumberOrderSids, ccEmails);
        // TODO: test validations
    }

    /**
     * Fetch a specific AuthorizationDocument.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchHostedNumbersAuthorizationDocumentTest() throws ApiException {
        String sid = null;
        PreviewHostedNumbersAuthorizationDocument response = api.fetchHostedNumbersAuthorizationDocument(sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of AuthorizationDocuments belonging to the account initiating the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listHostedNumbersAuthorizationDocumentTest() throws ApiException {
        String email = null;
        AuthorizationDocumentEnumStatus status = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListHostedNumbersAuthorizationDocumentResponse response = api.listHostedNumbersAuthorizationDocument(email, status, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a specific AuthorizationDocument.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateHostedNumbersAuthorizationDocumentTest() throws ApiException {
        String sid = null;
        String addressSid = null;
        List<String> ccEmails = null;
        String contactPhoneNumber = null;
        String contactTitle = null;
        String email = null;
        List<String> hostedNumberOrderSids = null;
        AuthorizationDocumentEnumStatus status = null;
        PreviewHostedNumbersAuthorizationDocument response = api.updateHostedNumbersAuthorizationDocument(sid, addressSid, ccEmails, contactPhoneNumber, contactTitle, email, hostedNumberOrderSids, status);
        // TODO: test validations
    }

}
