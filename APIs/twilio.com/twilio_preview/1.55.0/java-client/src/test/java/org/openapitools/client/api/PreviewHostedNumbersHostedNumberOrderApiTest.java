/*
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HostedNumberOrderEnumStatus;
import org.openapitools.client.model.HostedNumberOrderEnumVerificationType;
import org.openapitools.client.model.ListHostedNumbersHostedNumberOrderResponse;
import org.openapitools.client.model.PreviewHostedNumbersHostedNumberOrder;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PreviewHostedNumbersHostedNumberOrderApi
 */
@Disabled
public class PreviewHostedNumbersHostedNumberOrderApiTest {

    private final PreviewHostedNumbersHostedNumberOrderApi api = new PreviewHostedNumbersHostedNumberOrderApi();

    /**
     * Host a phone number&#39;s capability on Twilio&#39;s platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createHostedNumbersHostedNumberOrderTest() throws ApiException {
        String phoneNumber = null;
        Boolean smsCapability = null;
        String accountSid = null;
        String addressSid = null;
        List<String> ccEmails = null;
        String email = null;
        String friendlyName = null;
        String smsApplicationSid = null;
        String smsFallbackMethod = null;
        URI smsFallbackUrl = null;
        String smsMethod = null;
        URI smsUrl = null;
        String statusCallbackMethod = null;
        URI statusCallbackUrl = null;
        String uniqueName = null;
        String verificationDocumentSid = null;
        HostedNumberOrderEnumVerificationType verificationType = null;
        PreviewHostedNumbersHostedNumberOrder response = api.createHostedNumbersHostedNumberOrder(phoneNumber, smsCapability, accountSid, addressSid, ccEmails, email, friendlyName, smsApplicationSid, smsFallbackMethod, smsFallbackUrl, smsMethod, smsUrl, statusCallbackMethod, statusCallbackUrl, uniqueName, verificationDocumentSid, verificationType);
        // TODO: test validations
    }

    /**
     * Cancel the HostedNumberOrder (only available when the status is in &#x60;received&#x60;).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteHostedNumbersHostedNumberOrderTest() throws ApiException {
        String sid = null;
        api.deleteHostedNumbersHostedNumberOrder(sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific HostedNumberOrder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchHostedNumbersHostedNumberOrderTest() throws ApiException {
        String sid = null;
        PreviewHostedNumbersHostedNumberOrder response = api.fetchHostedNumbersHostedNumberOrder(sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of HostedNumberOrders belonging to the account initiating the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listHostedNumbersHostedNumberOrderTest() throws ApiException {
        HostedNumberOrderEnumStatus status = null;
        String phoneNumber = null;
        String incomingPhoneNumberSid = null;
        String friendlyName = null;
        String uniqueName = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListHostedNumbersHostedNumberOrderResponse response = api.listHostedNumbersHostedNumberOrder(status, phoneNumber, incomingPhoneNumberSid, friendlyName, uniqueName, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a specific HostedNumberOrder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateHostedNumbersHostedNumberOrderTest() throws ApiException {
        String sid = null;
        Integer callDelay = null;
        List<String> ccEmails = null;
        String email = null;
        String extension = null;
        String friendlyName = null;
        HostedNumberOrderEnumStatus status = null;
        String uniqueName = null;
        String verificationCode = null;
        String verificationDocumentSid = null;
        HostedNumberOrderEnumVerificationType verificationType = null;
        PreviewHostedNumbersHostedNumberOrder response = api.updateHostedNumbersHostedNumberOrder(sid, callDelay, ccEmails, email, extension, friendlyName, status, uniqueName, verificationCode, verificationDocumentSid, verificationType);
        // TODO: test validations
    }

}
