/*
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListMarketplaceInstalledAddOnResponse;
import org.openapitools.client.model.PreviewMarketplaceInstalledAddOn;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PreviewMarketplaceInstalledAddOnApi
 */
@Disabled
public class PreviewMarketplaceInstalledAddOnApiTest {

    private final PreviewMarketplaceInstalledAddOnApi api = new PreviewMarketplaceInstalledAddOnApi();

    /**
     * Install an Add-on for the Account specified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMarketplaceInstalledAddOnTest() throws ApiException {
        Boolean acceptTermsOfService = null;
        String availableAddOnSid = null;
        Object _configuration = null;
        String uniqueName = null;
        PreviewMarketplaceInstalledAddOn response = api.createMarketplaceInstalledAddOn(acceptTermsOfService, availableAddOnSid, _configuration, uniqueName);
        // TODO: test validations
    }

    /**
     * Remove an Add-on installation from your account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMarketplaceInstalledAddOnTest() throws ApiException {
        String sid = null;
        api.deleteMarketplaceInstalledAddOn(sid);
        // TODO: test validations
    }

    /**
     * Fetch an instance of an Add-on currently installed on this Account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchMarketplaceInstalledAddOnTest() throws ApiException {
        String sid = null;
        PreviewMarketplaceInstalledAddOn response = api.fetchMarketplaceInstalledAddOn(sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of Add-ons currently installed on this Account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMarketplaceInstalledAddOnTest() throws ApiException {
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListMarketplaceInstalledAddOnResponse response = api.listMarketplaceInstalledAddOn(pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update an Add-on installation for the Account specified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMarketplaceInstalledAddOnTest() throws ApiException {
        String sid = null;
        Object _configuration = null;
        String uniqueName = null;
        PreviewMarketplaceInstalledAddOn response = api.updateMarketplaceInstalledAddOn(sid, _configuration, uniqueName);
        // TODO: test validations
    }

}
