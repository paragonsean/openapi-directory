/*
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListDeployedDevicesKeyResponse;
import org.openapitools.client.model.PreviewDeployedDevicesFleetKey;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PreviewDeployedDevicesKeyApi
 */
@Disabled
public class PreviewDeployedDevicesKeyApiTest {

    private final PreviewDeployedDevicesKeyApi api = new PreviewDeployedDevicesKeyApi();

    /**
     * Create a new Key credential in the Fleet, optionally giving it a friendly name and assigning to a Device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDeployedDevicesKeyTest() throws ApiException {
        String fleetSid = null;
        String deviceSid = null;
        String friendlyName = null;
        PreviewDeployedDevicesFleetKey response = api.createDeployedDevicesKey(fleetSid, deviceSid, friendlyName);
        // TODO: test validations
    }

    /**
     * Delete a specific Key credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDeployedDevicesKeyTest() throws ApiException {
        String fleetSid = null;
        String sid = null;
        api.deleteDeployedDevicesKey(fleetSid, sid);
        // TODO: test validations
    }

    /**
     * Fetch information about a specific Key credential in the Fleet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchDeployedDevicesKeyTest() throws ApiException {
        String fleetSid = null;
        String sid = null;
        PreviewDeployedDevicesFleetKey response = api.fetchDeployedDevicesKey(fleetSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Keys credentials belonging to the Fleet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDeployedDevicesKeyTest() throws ApiException {
        String fleetSid = null;
        String deviceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListDeployedDevicesKeyResponse response = api.listDeployedDevicesKey(fleetSid, deviceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update the given properties of a specific Key credential in the Fleet, giving it a friendly name or assigning to a Device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDeployedDevicesKeyTest() throws ApiException {
        String fleetSid = null;
        String sid = null;
        String deviceSid = null;
        String friendlyName = null;
        PreviewDeployedDevicesFleetKey response = api.updateDeployedDevicesKey(fleetSid, sid, deviceSid, friendlyName);
        // TODO: test validations
    }

}
