/**
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPreview_marketplace_installed_add_on.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPreview_marketplace_installed_add_on::OAIPreview_marketplace_installed_add_on(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPreview_marketplace_installed_add_on::OAIPreview_marketplace_installed_add_on() {
    this->initializeModel();
}

OAIPreview_marketplace_installed_add_on::~OAIPreview_marketplace_installed_add_on() {}

void OAIPreview_marketplace_installed_add_on::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_configuration_isSet = false;
    m_configuration_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_unique_name_isSet = false;
    m_unique_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIPreview_marketplace_installed_add_on::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPreview_marketplace_installed_add_on::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_configuration_isValid = ::OpenAPI::fromJsonValue(m_configuration, json[QString("configuration")]);
    m_configuration_isSet = !json[QString("configuration")].isNull() && m_configuration_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_unique_name_isValid = ::OpenAPI::fromJsonValue(m_unique_name, json[QString("unique_name")]);
    m_unique_name_isSet = !json[QString("unique_name")].isNull() && m_unique_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIPreview_marketplace_installed_add_on::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPreview_marketplace_installed_add_on::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_configuration_isSet) {
        obj.insert(QString("configuration"), ::OpenAPI::toJsonValue(m_configuration));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_links_isSet) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_unique_name_isSet) {
        obj.insert(QString("unique_name"), ::OpenAPI::toJsonValue(m_unique_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIPreview_marketplace_installed_add_on::getAccountSid() const {
    return m_account_sid;
}
void OAIPreview_marketplace_installed_add_on::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QJsonValue OAIPreview_marketplace_installed_add_on::getConfiguration() const {
    return m_configuration;
}
void OAIPreview_marketplace_installed_add_on::setConfiguration(const QJsonValue &configuration) {
    m_configuration = configuration;
    m_configuration_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_configuration_Set() const{
    return m_configuration_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_configuration_Valid() const{
    return m_configuration_isValid;
}

QDateTime OAIPreview_marketplace_installed_add_on::getDateCreated() const {
    return m_date_created;
}
void OAIPreview_marketplace_installed_add_on::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIPreview_marketplace_installed_add_on::getDateUpdated() const {
    return m_date_updated;
}
void OAIPreview_marketplace_installed_add_on::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIPreview_marketplace_installed_add_on::getDescription() const {
    return m_description;
}
void OAIPreview_marketplace_installed_add_on::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPreview_marketplace_installed_add_on::getFriendlyName() const {
    return m_friendly_name;
}
void OAIPreview_marketplace_installed_add_on::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

OAIObject OAIPreview_marketplace_installed_add_on::getLinks() const {
    return m_links;
}
void OAIPreview_marketplace_installed_add_on::setLinks(const OAIObject &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_links_Set() const{
    return m_links_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIPreview_marketplace_installed_add_on::getSid() const {
    return m_sid;
}
void OAIPreview_marketplace_installed_add_on::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIPreview_marketplace_installed_add_on::getUniqueName() const {
    return m_unique_name;
}
void OAIPreview_marketplace_installed_add_on::setUniqueName(const QString &unique_name) {
    m_unique_name = unique_name;
    m_unique_name_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_unique_name_Set() const{
    return m_unique_name_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_unique_name_Valid() const{
    return m_unique_name_isValid;
}

QString OAIPreview_marketplace_installed_add_on::getUrl() const {
    return m_url;
}
void OAIPreview_marketplace_installed_add_on::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPreview_marketplace_installed_add_on::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIPreview_marketplace_installed_add_on::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPreview_marketplace_installed_add_on::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
