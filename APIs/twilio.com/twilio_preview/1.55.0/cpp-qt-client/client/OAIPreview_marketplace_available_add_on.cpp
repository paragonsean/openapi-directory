/**
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPreview_marketplace_available_add_on.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPreview_marketplace_available_add_on::OAIPreview_marketplace_available_add_on(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPreview_marketplace_available_add_on::OAIPreview_marketplace_available_add_on() {
    this->initializeModel();
}

OAIPreview_marketplace_available_add_on::~OAIPreview_marketplace_available_add_on() {}

void OAIPreview_marketplace_available_add_on::initializeModel() {

    m_configuration_schema_isSet = false;
    m_configuration_schema_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_pricing_type_isSet = false;
    m_pricing_type_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIPreview_marketplace_available_add_on::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPreview_marketplace_available_add_on::fromJsonObject(QJsonObject json) {

    m_configuration_schema_isValid = ::OpenAPI::fromJsonValue(m_configuration_schema, json[QString("configuration_schema")]);
    m_configuration_schema_isSet = !json[QString("configuration_schema")].isNull() && m_configuration_schema_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_pricing_type_isValid = ::OpenAPI::fromJsonValue(m_pricing_type, json[QString("pricing_type")]);
    m_pricing_type_isSet = !json[QString("pricing_type")].isNull() && m_pricing_type_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIPreview_marketplace_available_add_on::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPreview_marketplace_available_add_on::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration_schema_isSet) {
        obj.insert(QString("configuration_schema"), ::OpenAPI::toJsonValue(m_configuration_schema));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_links_isSet) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_pricing_type_isSet) {
        obj.insert(QString("pricing_type"), ::OpenAPI::toJsonValue(m_pricing_type));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QJsonValue OAIPreview_marketplace_available_add_on::getConfigurationSchema() const {
    return m_configuration_schema;
}
void OAIPreview_marketplace_available_add_on::setConfigurationSchema(const QJsonValue &configuration_schema) {
    m_configuration_schema = configuration_schema;
    m_configuration_schema_isSet = true;
}

bool OAIPreview_marketplace_available_add_on::is_configuration_schema_Set() const{
    return m_configuration_schema_isSet;
}

bool OAIPreview_marketplace_available_add_on::is_configuration_schema_Valid() const{
    return m_configuration_schema_isValid;
}

QString OAIPreview_marketplace_available_add_on::getDescription() const {
    return m_description;
}
void OAIPreview_marketplace_available_add_on::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPreview_marketplace_available_add_on::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPreview_marketplace_available_add_on::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPreview_marketplace_available_add_on::getFriendlyName() const {
    return m_friendly_name;
}
void OAIPreview_marketplace_available_add_on::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIPreview_marketplace_available_add_on::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIPreview_marketplace_available_add_on::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

OAIObject OAIPreview_marketplace_available_add_on::getLinks() const {
    return m_links;
}
void OAIPreview_marketplace_available_add_on::setLinks(const OAIObject &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIPreview_marketplace_available_add_on::is_links_Set() const{
    return m_links_isSet;
}

bool OAIPreview_marketplace_available_add_on::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIPreview_marketplace_available_add_on::getPricingType() const {
    return m_pricing_type;
}
void OAIPreview_marketplace_available_add_on::setPricingType(const QString &pricing_type) {
    m_pricing_type = pricing_type;
    m_pricing_type_isSet = true;
}

bool OAIPreview_marketplace_available_add_on::is_pricing_type_Set() const{
    return m_pricing_type_isSet;
}

bool OAIPreview_marketplace_available_add_on::is_pricing_type_Valid() const{
    return m_pricing_type_isValid;
}

QString OAIPreview_marketplace_available_add_on::getSid() const {
    return m_sid;
}
void OAIPreview_marketplace_available_add_on::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIPreview_marketplace_available_add_on::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIPreview_marketplace_available_add_on::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIPreview_marketplace_available_add_on::getUrl() const {
    return m_url;
}
void OAIPreview_marketplace_available_add_on::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIPreview_marketplace_available_add_on::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPreview_marketplace_available_add_on::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIPreview_marketplace_available_add_on::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration_schema_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPreview_marketplace_available_add_on::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
