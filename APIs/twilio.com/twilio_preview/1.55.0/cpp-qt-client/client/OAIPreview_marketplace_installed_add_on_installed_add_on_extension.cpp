/**
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPreview_marketplace_installed_add_on_installed_add_on_extension.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPreview_marketplace_installed_add_on_installed_add_on_extension::OAIPreview_marketplace_installed_add_on_installed_add_on_extension(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPreview_marketplace_installed_add_on_installed_add_on_extension::OAIPreview_marketplace_installed_add_on_installed_add_on_extension() {
    this->initializeModel();
}

OAIPreview_marketplace_installed_add_on_installed_add_on_extension::~OAIPreview_marketplace_installed_add_on_installed_add_on_extension() {}

void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_installed_add_on_sid_isSet = false;
    m_installed_add_on_sid_isValid = false;

    m_product_name_isSet = false;
    m_product_name_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_unique_name_isSet = false;
    m_unique_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_installed_add_on_sid_isValid = ::OpenAPI::fromJsonValue(m_installed_add_on_sid, json[QString("installed_add_on_sid")]);
    m_installed_add_on_sid_isSet = !json[QString("installed_add_on_sid")].isNull() && m_installed_add_on_sid_isValid;

    m_product_name_isValid = ::OpenAPI::fromJsonValue(m_product_name, json[QString("product_name")]);
    m_product_name_isSet = !json[QString("product_name")].isNull() && m_product_name_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_unique_name_isValid = ::OpenAPI::fromJsonValue(m_unique_name, json[QString("unique_name")]);
    m_unique_name_isSet = !json[QString("unique_name")].isNull() && m_unique_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIPreview_marketplace_installed_add_on_installed_add_on_extension::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPreview_marketplace_installed_add_on_installed_add_on_extension::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_installed_add_on_sid_isSet) {
        obj.insert(QString("installed_add_on_sid"), ::OpenAPI::toJsonValue(m_installed_add_on_sid));
    }
    if (m_product_name_isSet) {
        obj.insert(QString("product_name"), ::OpenAPI::toJsonValue(m_product_name));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_unique_name_isSet) {
        obj.insert(QString("unique_name"), ::OpenAPI::toJsonValue(m_unique_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::isEnabled() const {
    return m_enabled;
}
void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIPreview_marketplace_installed_add_on_installed_add_on_extension::getFriendlyName() const {
    return m_friendly_name;
}
void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIPreview_marketplace_installed_add_on_installed_add_on_extension::getInstalledAddOnSid() const {
    return m_installed_add_on_sid;
}
void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::setInstalledAddOnSid(const QString &installed_add_on_sid) {
    m_installed_add_on_sid = installed_add_on_sid;
    m_installed_add_on_sid_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_installed_add_on_sid_Set() const{
    return m_installed_add_on_sid_isSet;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_installed_add_on_sid_Valid() const{
    return m_installed_add_on_sid_isValid;
}

QString OAIPreview_marketplace_installed_add_on_installed_add_on_extension::getProductName() const {
    return m_product_name;
}
void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::setProductName(const QString &product_name) {
    m_product_name = product_name;
    m_product_name_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_product_name_Set() const{
    return m_product_name_isSet;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_product_name_Valid() const{
    return m_product_name_isValid;
}

QString OAIPreview_marketplace_installed_add_on_installed_add_on_extension::getSid() const {
    return m_sid;
}
void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIPreview_marketplace_installed_add_on_installed_add_on_extension::getUniqueName() const {
    return m_unique_name;
}
void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::setUniqueName(const QString &unique_name) {
    m_unique_name = unique_name;
    m_unique_name_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_unique_name_Set() const{
    return m_unique_name_isSet;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_unique_name_Valid() const{
    return m_unique_name_isValid;
}

QString OAIPreview_marketplace_installed_add_on_installed_add_on_extension::getUrl() const {
    return m_url;
}
void OAIPreview_marketplace_installed_add_on_installed_add_on_extension::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installed_add_on_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPreview_marketplace_installed_add_on_installed_add_on_extension::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
