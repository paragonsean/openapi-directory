/*
 * Twilio - Content
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContentV1LegacyContent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:40.147353-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContentV1LegacyContent {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LEGACY_BODY = "legacy_body";
  @SerializedName(SERIALIZED_NAME_LEGACY_BODY)
  private String legacyBody;

  public static final String SERIALIZED_NAME_LEGACY_TEMPLATE_NAME = "legacy_template_name";
  @SerializedName(SERIALIZED_NAME_LEGACY_TEMPLATE_NAME)
  private String legacyTemplateName;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_TYPES = "types";
  @SerializedName(SERIALIZED_NAME_TYPES)
  private Object types = null;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  private Object variables = null;

  public ContentV1LegacyContent() {
  }

  public ContentV1LegacyContent accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/usage/api/account) that created Content resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ContentV1LegacyContent dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ContentV1LegacyContent dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ContentV1LegacyContent friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * A string name used to describe the Content resource. Not visible to the end recipient.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public ContentV1LegacyContent language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Two-letter (ISO 639-1) language code (e.g., en) identifying the language the Content resource is in.
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public ContentV1LegacyContent legacyBody(String legacyBody) {
    this.legacyBody = legacyBody;
    return this;
  }

  /**
   * The string body field of the legacy content template associated with this Content resource
   * @return legacyBody
   */
  @javax.annotation.Nullable
  public String getLegacyBody() {
    return legacyBody;
  }

  public void setLegacyBody(String legacyBody) {
    this.legacyBody = legacyBody;
  }


  public ContentV1LegacyContent legacyTemplateName(String legacyTemplateName) {
    this.legacyTemplateName = legacyTemplateName;
    return this;
  }

  /**
   * The string name of the legacy content template associated with this Content resource, unique across all template names for its account.  Only lowercase letters, numbers and underscores are allowed
   * @return legacyTemplateName
   */
  @javax.annotation.Nullable
  public String getLegacyTemplateName() {
    return legacyTemplateName;
  }

  public void setLegacyTemplateName(String legacyTemplateName) {
    this.legacyTemplateName = legacyTemplateName;
  }


  public ContentV1LegacyContent sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that that we created to identify the Content resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ContentV1LegacyContent types(Object types) {
    this.types = types;
    return this;
  }

  /**
   * The [Content types](https://www.twilio.com/docs/content/content-types-overview) (e.g. twilio/text) for this Content resource.
   * @return types
   */
  @javax.annotation.Nullable
  public Object getTypes() {
    return types;
  }

  public void setTypes(Object types) {
    this.types = types;
  }


  public ContentV1LegacyContent url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The URL of the resource, relative to &#x60;https://content.twilio.com&#x60;.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public ContentV1LegacyContent variables(Object variables) {
    this.variables = variables;
    return this;
  }

  /**
   * Defines the default placeholder values for variables included in the Content resource. e.g. {\&quot;1\&quot;: \&quot;Customer_Name\&quot;}.
   * @return variables
   */
  @javax.annotation.Nullable
  public Object getVariables() {
    return variables;
  }

  public void setVariables(Object variables) {
    this.variables = variables;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentV1LegacyContent contentV1LegacyContent = (ContentV1LegacyContent) o;
    return Objects.equals(this.accountSid, contentV1LegacyContent.accountSid) &&
        Objects.equals(this.dateCreated, contentV1LegacyContent.dateCreated) &&
        Objects.equals(this.dateUpdated, contentV1LegacyContent.dateUpdated) &&
        Objects.equals(this.friendlyName, contentV1LegacyContent.friendlyName) &&
        Objects.equals(this.language, contentV1LegacyContent.language) &&
        Objects.equals(this.legacyBody, contentV1LegacyContent.legacyBody) &&
        Objects.equals(this.legacyTemplateName, contentV1LegacyContent.legacyTemplateName) &&
        Objects.equals(this.sid, contentV1LegacyContent.sid) &&
        Objects.equals(this.types, contentV1LegacyContent.types) &&
        Objects.equals(this.url, contentV1LegacyContent.url) &&
        Objects.equals(this.variables, contentV1LegacyContent.variables);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, dateCreated, dateUpdated, friendlyName, language, legacyBody, legacyTemplateName, sid, types, url, variables);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentV1LegacyContent {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    legacyBody: ").append(toIndentedString(legacyBody)).append("\n");
    sb.append("    legacyTemplateName: ").append(toIndentedString(legacyTemplateName)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("friendly_name");
    openapiFields.add("language");
    openapiFields.add("legacy_body");
    openapiFields.add("legacy_template_name");
    openapiFields.add("sid");
    openapiFields.add("types");
    openapiFields.add("url");
    openapiFields.add("variables");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContentV1LegacyContent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContentV1LegacyContent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContentV1LegacyContent is not found in the empty JSON string", ContentV1LegacyContent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContentV1LegacyContent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContentV1LegacyContent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if ((jsonObj.get("legacy_body") != null && !jsonObj.get("legacy_body").isJsonNull()) && !jsonObj.get("legacy_body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacy_body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacy_body").toString()));
      }
      if ((jsonObj.get("legacy_template_name") != null && !jsonObj.get("legacy_template_name").isJsonNull()) && !jsonObj.get("legacy_template_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacy_template_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacy_template_name").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContentV1LegacyContent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContentV1LegacyContent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContentV1LegacyContent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContentV1LegacyContent.class));

       return (TypeAdapter<T>) new TypeAdapter<ContentV1LegacyContent>() {
           @Override
           public void write(JsonWriter out, ContentV1LegacyContent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContentV1LegacyContent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContentV1LegacyContent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContentV1LegacyContent
   * @throws IOException if the JSON string is invalid with respect to ContentV1LegacyContent
   */
  public static ContentV1LegacyContent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContentV1LegacyContent.class);
  }

  /**
   * Convert an instance of ContentV1LegacyContent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

