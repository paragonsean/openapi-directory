/**
 * Twilio - Content
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContent_v1_content_and_approvals.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContent_v1_content_and_approvals::OAIContent_v1_content_and_approvals(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContent_v1_content_and_approvals::OAIContent_v1_content_and_approvals() {
    this->initializeModel();
}

OAIContent_v1_content_and_approvals::~OAIContent_v1_content_and_approvals() {}

void OAIContent_v1_content_and_approvals::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_approval_requests_isSet = false;
    m_approval_requests_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_types_isSet = false;
    m_types_isValid = false;

    m_variables_isSet = false;
    m_variables_isValid = false;
}

void OAIContent_v1_content_and_approvals::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContent_v1_content_and_approvals::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_approval_requests_isValid = ::OpenAPI::fromJsonValue(m_approval_requests, json[QString("approval_requests")]);
    m_approval_requests_isSet = !json[QString("approval_requests")].isNull() && m_approval_requests_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_types_isValid = ::OpenAPI::fromJsonValue(m_types, json[QString("types")]);
    m_types_isSet = !json[QString("types")].isNull() && m_types_isValid;

    m_variables_isValid = ::OpenAPI::fromJsonValue(m_variables, json[QString("variables")]);
    m_variables_isSet = !json[QString("variables")].isNull() && m_variables_isValid;
}

QString OAIContent_v1_content_and_approvals::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContent_v1_content_and_approvals::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_approval_requests_isSet) {
        obj.insert(QString("approval_requests"), ::OpenAPI::toJsonValue(m_approval_requests));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_types_isSet) {
        obj.insert(QString("types"), ::OpenAPI::toJsonValue(m_types));
    }
    if (m_variables_isSet) {
        obj.insert(QString("variables"), ::OpenAPI::toJsonValue(m_variables));
    }
    return obj;
}

QString OAIContent_v1_content_and_approvals::getAccountSid() const {
    return m_account_sid;
}
void OAIContent_v1_content_and_approvals::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIContent_v1_content_and_approvals::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QJsonValue OAIContent_v1_content_and_approvals::getApprovalRequests() const {
    return m_approval_requests;
}
void OAIContent_v1_content_and_approvals::setApprovalRequests(const QJsonValue &approval_requests) {
    m_approval_requests = approval_requests;
    m_approval_requests_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_approval_requests_Set() const{
    return m_approval_requests_isSet;
}

bool OAIContent_v1_content_and_approvals::is_approval_requests_Valid() const{
    return m_approval_requests_isValid;
}

QDateTime OAIContent_v1_content_and_approvals::getDateCreated() const {
    return m_date_created;
}
void OAIContent_v1_content_and_approvals::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIContent_v1_content_and_approvals::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIContent_v1_content_and_approvals::getDateUpdated() const {
    return m_date_updated;
}
void OAIContent_v1_content_and_approvals::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIContent_v1_content_and_approvals::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIContent_v1_content_and_approvals::getFriendlyName() const {
    return m_friendly_name;
}
void OAIContent_v1_content_and_approvals::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIContent_v1_content_and_approvals::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIContent_v1_content_and_approvals::getLanguage() const {
    return m_language;
}
void OAIContent_v1_content_and_approvals::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_language_Set() const{
    return m_language_isSet;
}

bool OAIContent_v1_content_and_approvals::is_language_Valid() const{
    return m_language_isValid;
}

QString OAIContent_v1_content_and_approvals::getSid() const {
    return m_sid;
}
void OAIContent_v1_content_and_approvals::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIContent_v1_content_and_approvals::is_sid_Valid() const{
    return m_sid_isValid;
}

QJsonValue OAIContent_v1_content_and_approvals::getTypes() const {
    return m_types;
}
void OAIContent_v1_content_and_approvals::setTypes(const QJsonValue &types) {
    m_types = types;
    m_types_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_types_Set() const{
    return m_types_isSet;
}

bool OAIContent_v1_content_and_approvals::is_types_Valid() const{
    return m_types_isValid;
}

QJsonValue OAIContent_v1_content_and_approvals::getVariables() const {
    return m_variables;
}
void OAIContent_v1_content_and_approvals::setVariables(const QJsonValue &variables) {
    m_variables = variables;
    m_variables_isSet = true;
}

bool OAIContent_v1_content_and_approvals::is_variables_Set() const{
    return m_variables_isSet;
}

bool OAIContent_v1_content_and_approvals::is_variables_Valid() const{
    return m_variables_isValid;
}

bool OAIContent_v1_content_and_approvals::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approval_requests_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_types_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_variables_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContent_v1_content_and_approvals::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
