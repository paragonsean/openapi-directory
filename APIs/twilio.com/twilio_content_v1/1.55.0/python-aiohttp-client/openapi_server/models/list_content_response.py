# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_v1_content import ContentV1Content
from openapi_server.models.list_content_response_meta import ListContentResponseMeta
from openapi_server import util


class ListContentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents: List[ContentV1Content]=None, meta: ListContentResponseMeta=None):
        """ListContentResponse - a model defined in OpenAPI

        :param contents: The contents of this ListContentResponse.
        :param meta: The meta of this ListContentResponse.
        """
        self.openapi_types = {
            'contents': List[ContentV1Content],
            'meta': ListContentResponseMeta
        }

        self.attribute_map = {
            'contents': 'contents',
            'meta': 'meta'
        }

        self._contents = contents
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListContentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListContentResponse of this ListContentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this ListContentResponse.


        :return: The contents of this ListContentResponse.
        :rtype: List[ContentV1Content]
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this ListContentResponse.


        :param contents: The contents of this ListContentResponse.
        :type contents: List[ContentV1Content]
        """

        self._contents = contents

    @property
    def meta(self):
        """Gets the meta of this ListContentResponse.


        :return: The meta of this ListContentResponse.
        :rtype: ListContentResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListContentResponse.


        :param meta: The meta of this ListContentResponse.
        :type meta: ListContentResponseMeta
        """

        self._meta = meta
