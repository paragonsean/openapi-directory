/*
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.EsimProfileEnumStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SupersimV1EsimProfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:48.972558-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SupersimV1EsimProfile {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ACTIVATION_CODE = "activation_code";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_CODE)
  private String activationCode;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_EID = "eid";
  @SerializedName(SERIALIZED_NAME_EID)
  private String eid;

  public static final String SERIALIZED_NAME_ERROR_CODE = "error_code";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private String errorCode;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "error_message";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_ICCID = "iccid";
  @SerializedName(SERIALIZED_NAME_ICCID)
  private String iccid;

  public static final String SERIALIZED_NAME_MATCHING_ID = "matching_id";
  @SerializedName(SERIALIZED_NAME_MATCHING_ID)
  private String matchingId;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_SIM_SID = "sim_sid";
  @SerializedName(SERIALIZED_NAME_SIM_SID)
  private String simSid;

  public static final String SERIALIZED_NAME_SMDP_PLUS_ADDRESS = "smdp_plus_address";
  @SerializedName(SERIALIZED_NAME_SMDP_PLUS_ADDRESS)
  private URI smdpPlusAddress;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EsimProfileEnumStatus status;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public SupersimV1EsimProfile() {
  }

  public SupersimV1EsimProfile accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the eSIM Profile resource belongs.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public SupersimV1EsimProfile activationCode(String activationCode) {
    this.activationCode = activationCode;
    return this;
  }

  /**
   * Combined machine-readable activation code for acquiring an eSIM Profile with the Activation Code download method. Can be used in a QR code to download an eSIM profile.
   * @return activationCode
   */
  @javax.annotation.Nullable
  public String getActivationCode() {
    return activationCode;
  }

  public void setActivationCode(String activationCode) {
    this.activationCode = activationCode;
  }


  public SupersimV1EsimProfile dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public SupersimV1EsimProfile dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public SupersimV1EsimProfile eid(String eid) {
    this.eid = eid;
    return this;
  }

  /**
   * Identifier of the eUICC that can claim the eSIM Profile.
   * @return eid
   */
  @javax.annotation.Nullable
  public String getEid() {
    return eid;
  }

  public void setEid(String eid) {
    this.eid = eid;
  }


  public SupersimV1EsimProfile errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Code indicating the failure if the download of the SIM Profile failed and the eSIM Profile is in &#x60;failed&#x60; state.
   * @return errorCode
   */
  @javax.annotation.Nullable
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public SupersimV1EsimProfile errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Error message describing the failure if the download of the SIM Profile failed and the eSIM Profile is in &#x60;failed&#x60; state.
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public SupersimV1EsimProfile iccid(String iccid) {
    this.iccid = iccid;
    return this;
  }

  /**
   * The [ICCID](https://en.wikipedia.org/wiki/Subscriber_identity_module#ICCID) associated with the Sim resource.
   * @return iccid
   */
  @javax.annotation.Nullable
  public String getIccid() {
    return iccid;
  }

  public void setIccid(String iccid) {
    this.iccid = iccid;
  }


  public SupersimV1EsimProfile matchingId(String matchingId) {
    this.matchingId = matchingId;
    return this;
  }

  /**
   * Unique identifier of the eSIM profile that can be used to identify and download the eSIM profile from the SM-DP+ server. Populated if &#x60;generate_matching_id&#x60; is set to &#x60;true&#x60; when creating the eSIM profile reservation.
   * @return matchingId
   */
  @javax.annotation.Nullable
  public String getMatchingId() {
    return matchingId;
  }

  public void setMatchingId(String matchingId) {
    this.matchingId = matchingId;
  }


  public SupersimV1EsimProfile sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the eSIM Profile resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public SupersimV1EsimProfile simSid(String simSid) {
    this.simSid = simSid;
    return this;
  }

  /**
   * The SID of the [Sim](https://www.twilio.com/docs/iot/supersim/api/sim-resource) resource that this eSIM Profile controls.
   * @return simSid
   */
  @javax.annotation.Nullable
  public String getSimSid() {
    return simSid;
  }

  public void setSimSid(String simSid) {
    this.simSid = simSid;
  }


  public SupersimV1EsimProfile smdpPlusAddress(URI smdpPlusAddress) {
    this.smdpPlusAddress = smdpPlusAddress;
    return this;
  }

  /**
   * Address of the SM-DP+ server from which the Profile will be downloaded. The URL will appear once the eSIM Profile reaches the status &#x60;available&#x60;.
   * @return smdpPlusAddress
   */
  @javax.annotation.Nullable
  public URI getSmdpPlusAddress() {
    return smdpPlusAddress;
  }

  public void setSmdpPlusAddress(URI smdpPlusAddress) {
    this.smdpPlusAddress = smdpPlusAddress;
  }


  public SupersimV1EsimProfile status(EsimProfileEnumStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public EsimProfileEnumStatus getStatus() {
    return status;
  }

  public void setStatus(EsimProfileEnumStatus status) {
    this.status = status;
  }


  public SupersimV1EsimProfile url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the eSIM Profile resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupersimV1EsimProfile supersimV1EsimProfile = (SupersimV1EsimProfile) o;
    return Objects.equals(this.accountSid, supersimV1EsimProfile.accountSid) &&
        Objects.equals(this.activationCode, supersimV1EsimProfile.activationCode) &&
        Objects.equals(this.dateCreated, supersimV1EsimProfile.dateCreated) &&
        Objects.equals(this.dateUpdated, supersimV1EsimProfile.dateUpdated) &&
        Objects.equals(this.eid, supersimV1EsimProfile.eid) &&
        Objects.equals(this.errorCode, supersimV1EsimProfile.errorCode) &&
        Objects.equals(this.errorMessage, supersimV1EsimProfile.errorMessage) &&
        Objects.equals(this.iccid, supersimV1EsimProfile.iccid) &&
        Objects.equals(this.matchingId, supersimV1EsimProfile.matchingId) &&
        Objects.equals(this.sid, supersimV1EsimProfile.sid) &&
        Objects.equals(this.simSid, supersimV1EsimProfile.simSid) &&
        Objects.equals(this.smdpPlusAddress, supersimV1EsimProfile.smdpPlusAddress) &&
        Objects.equals(this.status, supersimV1EsimProfile.status) &&
        Objects.equals(this.url, supersimV1EsimProfile.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, activationCode, dateCreated, dateUpdated, eid, errorCode, errorMessage, iccid, matchingId, sid, simSid, smdpPlusAddress, status, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupersimV1EsimProfile {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    activationCode: ").append(toIndentedString(activationCode)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    eid: ").append(toIndentedString(eid)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    iccid: ").append(toIndentedString(iccid)).append("\n");
    sb.append("    matchingId: ").append(toIndentedString(matchingId)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    simSid: ").append(toIndentedString(simSid)).append("\n");
    sb.append("    smdpPlusAddress: ").append(toIndentedString(smdpPlusAddress)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("activation_code");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("eid");
    openapiFields.add("error_code");
    openapiFields.add("error_message");
    openapiFields.add("iccid");
    openapiFields.add("matching_id");
    openapiFields.add("sid");
    openapiFields.add("sim_sid");
    openapiFields.add("smdp_plus_address");
    openapiFields.add("status");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SupersimV1EsimProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SupersimV1EsimProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SupersimV1EsimProfile is not found in the empty JSON string", SupersimV1EsimProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SupersimV1EsimProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SupersimV1EsimProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("activation_code") != null && !jsonObj.get("activation_code").isJsonNull()) && !jsonObj.get("activation_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activation_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activation_code").toString()));
      }
      if ((jsonObj.get("eid") != null && !jsonObj.get("eid").isJsonNull()) && !jsonObj.get("eid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eid").toString()));
      }
      if ((jsonObj.get("error_code") != null && !jsonObj.get("error_code").isJsonNull()) && !jsonObj.get("error_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_code").toString()));
      }
      if ((jsonObj.get("error_message") != null && !jsonObj.get("error_message").isJsonNull()) && !jsonObj.get("error_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_message").toString()));
      }
      if ((jsonObj.get("iccid") != null && !jsonObj.get("iccid").isJsonNull()) && !jsonObj.get("iccid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iccid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iccid").toString()));
      }
      if ((jsonObj.get("matching_id") != null && !jsonObj.get("matching_id").isJsonNull()) && !jsonObj.get("matching_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `matching_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("matching_id").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("sim_sid") != null && !jsonObj.get("sim_sid").isJsonNull()) && !jsonObj.get("sim_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sim_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sim_sid").toString()));
      }
      if ((jsonObj.get("smdp_plus_address") != null && !jsonObj.get("smdp_plus_address").isJsonNull()) && !jsonObj.get("smdp_plus_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smdp_plus_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smdp_plus_address").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        EsimProfileEnumStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SupersimV1EsimProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SupersimV1EsimProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SupersimV1EsimProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SupersimV1EsimProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<SupersimV1EsimProfile>() {
           @Override
           public void write(JsonWriter out, SupersimV1EsimProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SupersimV1EsimProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SupersimV1EsimProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SupersimV1EsimProfile
   * @throws IOException if the JSON string is invalid with respect to SupersimV1EsimProfile
   */
  public static SupersimV1EsimProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SupersimV1EsimProfile.class);
  }

  /**
   * Convert an instance of SupersimV1EsimProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

