/*
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SupersimV1UsageRecord
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:48.972558-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SupersimV1UsageRecord {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_BILLED_UNIT = "billed_unit";
  @SerializedName(SERIALIZED_NAME_BILLED_UNIT)
  private String billedUnit;

  public static final String SERIALIZED_NAME_DATA_DOWNLOAD = "data_download";
  @SerializedName(SERIALIZED_NAME_DATA_DOWNLOAD)
  private Long dataDownload;

  public static final String SERIALIZED_NAME_DATA_TOTAL = "data_total";
  @SerializedName(SERIALIZED_NAME_DATA_TOTAL)
  private Long dataTotal;

  public static final String SERIALIZED_NAME_DATA_TOTAL_BILLED = "data_total_billed";
  @SerializedName(SERIALIZED_NAME_DATA_TOTAL_BILLED)
  private BigDecimal dataTotalBilled;

  public static final String SERIALIZED_NAME_DATA_UPLOAD = "data_upload";
  @SerializedName(SERIALIZED_NAME_DATA_UPLOAD)
  private Long dataUpload;

  public static final String SERIALIZED_NAME_FLEET_SID = "fleet_sid";
  @SerializedName(SERIALIZED_NAME_FLEET_SID)
  private String fleetSid;

  public static final String SERIALIZED_NAME_ISO_COUNTRY = "iso_country";
  @SerializedName(SERIALIZED_NAME_ISO_COUNTRY)
  private String isoCountry;

  public static final String SERIALIZED_NAME_NETWORK_SID = "network_sid";
  @SerializedName(SERIALIZED_NAME_NETWORK_SID)
  private String networkSid;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private Object period = null;

  public static final String SERIALIZED_NAME_SIM_SID = "sim_sid";
  @SerializedName(SERIALIZED_NAME_SIM_SID)
  private String simSid;

  public SupersimV1UsageRecord() {
  }

  public SupersimV1UsageRecord accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that incurred the usage.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public SupersimV1UsageRecord billedUnit(String billedUnit) {
    this.billedUnit = billedUnit;
    return this;
  }

  /**
   * The currency in which the billed amounts are measured, specified in the 3 letter ISO 4127 format (e.g. &#x60;USD&#x60;, &#x60;EUR&#x60;, &#x60;JPY&#x60;). This can be null when data_toal_billed is 0 and we do not yet have billing information for the corresponding data usage. Refer to [Data Usage Processing](https://www.twilio.com/docs/iot/supersim/api/usage-record-resource#data-usage-processing) for more details.
   * @return billedUnit
   */
  @javax.annotation.Nullable
  public String getBilledUnit() {
    return billedUnit;
  }

  public void setBilledUnit(String billedUnit) {
    this.billedUnit = billedUnit;
  }


  public SupersimV1UsageRecord dataDownload(Long dataDownload) {
    this.dataDownload = dataDownload;
    return this;
  }

  /**
   * Total data downloaded in bytes, aggregated by the query parameters.
   * @return dataDownload
   */
  @javax.annotation.Nullable
  public Long getDataDownload() {
    return dataDownload;
  }

  public void setDataDownload(Long dataDownload) {
    this.dataDownload = dataDownload;
  }


  public SupersimV1UsageRecord dataTotal(Long dataTotal) {
    this.dataTotal = dataTotal;
    return this;
  }

  /**
   * Total of data_upload and data_download.
   * @return dataTotal
   */
  @javax.annotation.Nullable
  public Long getDataTotal() {
    return dataTotal;
  }

  public void setDataTotal(Long dataTotal) {
    this.dataTotal = dataTotal;
  }


  public SupersimV1UsageRecord dataTotalBilled(BigDecimal dataTotalBilled) {
    this.dataTotalBilled = dataTotalBilled;
    return this;
  }

  /**
   * Total amount in the &#x60;billed_unit&#x60; that was charged for the data uploaded or downloaded. Will return 0 for usage prior to February 1, 2022. Value may be 0 despite &#x60;data_total&#x60; being greater than 0 if the data usage is still being processed by Twilio&#39;s billing system. Refer to [Data Usage Processing](https://www.twilio.com/docs/iot/supersim/api/usage-record-resource#data-usage-processing) for more details.
   * @return dataTotalBilled
   */
  @javax.annotation.Nullable
  public BigDecimal getDataTotalBilled() {
    return dataTotalBilled;
  }

  public void setDataTotalBilled(BigDecimal dataTotalBilled) {
    this.dataTotalBilled = dataTotalBilled;
  }


  public SupersimV1UsageRecord dataUpload(Long dataUpload) {
    this.dataUpload = dataUpload;
    return this;
  }

  /**
   * Total data uploaded in bytes, aggregated by the query parameters.
   * @return dataUpload
   */
  @javax.annotation.Nullable
  public Long getDataUpload() {
    return dataUpload;
  }

  public void setDataUpload(Long dataUpload) {
    this.dataUpload = dataUpload;
  }


  public SupersimV1UsageRecord fleetSid(String fleetSid) {
    this.fleetSid = fleetSid;
    return this;
  }

  /**
   * SID of the Fleet resource the usage occurred on. Value will only be present when either a value for the &#x60;Fleet&#x60; query parameter is provided or when UsageRecords are grouped by &#x60;fleet&#x60;. Otherwise, the value will be &#x60;null&#x60;.
   * @return fleetSid
   */
  @javax.annotation.Nullable
  public String getFleetSid() {
    return fleetSid;
  }

  public void setFleetSid(String fleetSid) {
    this.fleetSid = fleetSid;
  }


  public SupersimV1UsageRecord isoCountry(String isoCountry) {
    this.isoCountry = isoCountry;
    return this;
  }

  /**
   * Alpha-2 ISO Country Code that the usage occurred in. Value will only be present when either a value for the &#x60;IsoCountry&#x60; query parameter is provided or when UsageRecords are grouped by &#x60;isoCountry&#x60;. Otherwise, the value will be &#x60;null&#x60;.
   * @return isoCountry
   */
  @javax.annotation.Nullable
  public String getIsoCountry() {
    return isoCountry;
  }

  public void setIsoCountry(String isoCountry) {
    this.isoCountry = isoCountry;
  }


  public SupersimV1UsageRecord networkSid(String networkSid) {
    this.networkSid = networkSid;
    return this;
  }

  /**
   * SID of the Network resource the usage occurred on. Value will only be present when either a value for the &#x60;Network&#x60; query parameter is provided or when UsageRecords are grouped by &#x60;network&#x60;. Otherwise, the value will be &#x60;null&#x60;.
   * @return networkSid
   */
  @javax.annotation.Nullable
  public String getNetworkSid() {
    return networkSid;
  }

  public void setNetworkSid(String networkSid) {
    this.networkSid = networkSid;
  }


  public SupersimV1UsageRecord period(Object period) {
    this.period = period;
    return this;
  }

  /**
   * The time period for which the usage is reported. The period is represented as a pair of &#x60;start_time&#x60; and &#x60;end_time&#x60; timestamps specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return period
   */
  @javax.annotation.Nullable
  public Object getPeriod() {
    return period;
  }

  public void setPeriod(Object period) {
    this.period = period;
  }


  public SupersimV1UsageRecord simSid(String simSid) {
    this.simSid = simSid;
    return this;
  }

  /**
   * SID of a Sim resource to which the UsageRecord belongs. Value will only be present when either a value for the &#x60;Sim&#x60; query parameter is provided or when UsageRecords are grouped by &#x60;sim&#x60;. Otherwise, the value will be &#x60;null&#x60;.
   * @return simSid
   */
  @javax.annotation.Nullable
  public String getSimSid() {
    return simSid;
  }

  public void setSimSid(String simSid) {
    this.simSid = simSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupersimV1UsageRecord supersimV1UsageRecord = (SupersimV1UsageRecord) o;
    return Objects.equals(this.accountSid, supersimV1UsageRecord.accountSid) &&
        Objects.equals(this.billedUnit, supersimV1UsageRecord.billedUnit) &&
        Objects.equals(this.dataDownload, supersimV1UsageRecord.dataDownload) &&
        Objects.equals(this.dataTotal, supersimV1UsageRecord.dataTotal) &&
        Objects.equals(this.dataTotalBilled, supersimV1UsageRecord.dataTotalBilled) &&
        Objects.equals(this.dataUpload, supersimV1UsageRecord.dataUpload) &&
        Objects.equals(this.fleetSid, supersimV1UsageRecord.fleetSid) &&
        Objects.equals(this.isoCountry, supersimV1UsageRecord.isoCountry) &&
        Objects.equals(this.networkSid, supersimV1UsageRecord.networkSid) &&
        Objects.equals(this.period, supersimV1UsageRecord.period) &&
        Objects.equals(this.simSid, supersimV1UsageRecord.simSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, billedUnit, dataDownload, dataTotal, dataTotalBilled, dataUpload, fleetSid, isoCountry, networkSid, period, simSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupersimV1UsageRecord {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    billedUnit: ").append(toIndentedString(billedUnit)).append("\n");
    sb.append("    dataDownload: ").append(toIndentedString(dataDownload)).append("\n");
    sb.append("    dataTotal: ").append(toIndentedString(dataTotal)).append("\n");
    sb.append("    dataTotalBilled: ").append(toIndentedString(dataTotalBilled)).append("\n");
    sb.append("    dataUpload: ").append(toIndentedString(dataUpload)).append("\n");
    sb.append("    fleetSid: ").append(toIndentedString(fleetSid)).append("\n");
    sb.append("    isoCountry: ").append(toIndentedString(isoCountry)).append("\n");
    sb.append("    networkSid: ").append(toIndentedString(networkSid)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    simSid: ").append(toIndentedString(simSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("billed_unit");
    openapiFields.add("data_download");
    openapiFields.add("data_total");
    openapiFields.add("data_total_billed");
    openapiFields.add("data_upload");
    openapiFields.add("fleet_sid");
    openapiFields.add("iso_country");
    openapiFields.add("network_sid");
    openapiFields.add("period");
    openapiFields.add("sim_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SupersimV1UsageRecord
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SupersimV1UsageRecord.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SupersimV1UsageRecord is not found in the empty JSON string", SupersimV1UsageRecord.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SupersimV1UsageRecord.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SupersimV1UsageRecord` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("billed_unit") != null && !jsonObj.get("billed_unit").isJsonNull()) && !jsonObj.get("billed_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billed_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billed_unit").toString()));
      }
      if ((jsonObj.get("fleet_sid") != null && !jsonObj.get("fleet_sid").isJsonNull()) && !jsonObj.get("fleet_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fleet_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fleet_sid").toString()));
      }
      if ((jsonObj.get("iso_country") != null && !jsonObj.get("iso_country").isJsonNull()) && !jsonObj.get("iso_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iso_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iso_country").toString()));
      }
      if ((jsonObj.get("network_sid") != null && !jsonObj.get("network_sid").isJsonNull()) && !jsonObj.get("network_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network_sid").toString()));
      }
      if ((jsonObj.get("sim_sid") != null && !jsonObj.get("sim_sid").isJsonNull()) && !jsonObj.get("sim_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sim_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sim_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SupersimV1UsageRecord.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SupersimV1UsageRecord' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SupersimV1UsageRecord> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SupersimV1UsageRecord.class));

       return (TypeAdapter<T>) new TypeAdapter<SupersimV1UsageRecord>() {
           @Override
           public void write(JsonWriter out, SupersimV1UsageRecord value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SupersimV1UsageRecord read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SupersimV1UsageRecord given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SupersimV1UsageRecord
   * @throws IOException if the JSON string is invalid with respect to SupersimV1UsageRecord
   */
  public static SupersimV1UsageRecord fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SupersimV1UsageRecord.class);
  }

  /**
   * Convert an instance of SupersimV1UsageRecord to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

