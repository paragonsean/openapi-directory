# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_esim_profile_response_meta import ListEsimProfileResponseMeta
from openapi_server.models.supersim_v1_sms_command import SupersimV1SmsCommand
from openapi_server import util


class ListSmsCommandResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: ListEsimProfileResponseMeta=None, sms_commands: List[SupersimV1SmsCommand]=None):
        """ListSmsCommandResponse - a model defined in OpenAPI

        :param meta: The meta of this ListSmsCommandResponse.
        :param sms_commands: The sms_commands of this ListSmsCommandResponse.
        """
        self.openapi_types = {
            'meta': ListEsimProfileResponseMeta,
            'sms_commands': List[SupersimV1SmsCommand]
        }

        self.attribute_map = {
            'meta': 'meta',
            'sms_commands': 'sms_commands'
        }

        self._meta = meta
        self._sms_commands = sms_commands

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSmsCommandResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSmsCommandResponse of this ListSmsCommandResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this ListSmsCommandResponse.


        :return: The meta of this ListSmsCommandResponse.
        :rtype: ListEsimProfileResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListSmsCommandResponse.


        :param meta: The meta of this ListSmsCommandResponse.
        :type meta: ListEsimProfileResponseMeta
        """

        self._meta = meta

    @property
    def sms_commands(self):
        """Gets the sms_commands of this ListSmsCommandResponse.


        :return: The sms_commands of this ListSmsCommandResponse.
        :rtype: List[SupersimV1SmsCommand]
        """
        return self._sms_commands

    @sms_commands.setter
    def sms_commands(self, sms_commands):
        """Sets the sms_commands of this ListSmsCommandResponse.


        :param sms_commands: The sms_commands of this ListSmsCommandResponse.
        :type sms_commands: List[SupersimV1SmsCommand]
        """

        self._sms_commands = sms_commands
