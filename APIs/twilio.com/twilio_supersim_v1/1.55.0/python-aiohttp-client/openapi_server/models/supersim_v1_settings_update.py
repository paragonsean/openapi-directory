# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.settings_update_enum_status import SettingsUpdateEnumStatus
import re
from openapi_server import util


class SupersimV1SettingsUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_completed: datetime=None, date_created: datetime=None, date_updated: datetime=None, iccid: str=None, packages: List[object]=None, sid: str=None, sim_sid: str=None, status: SettingsUpdateEnumStatus=None):
        """SupersimV1SettingsUpdate - a model defined in OpenAPI

        :param date_completed: The date_completed of this SupersimV1SettingsUpdate.
        :param date_created: The date_created of this SupersimV1SettingsUpdate.
        :param date_updated: The date_updated of this SupersimV1SettingsUpdate.
        :param iccid: The iccid of this SupersimV1SettingsUpdate.
        :param packages: The packages of this SupersimV1SettingsUpdate.
        :param sid: The sid of this SupersimV1SettingsUpdate.
        :param sim_sid: The sim_sid of this SupersimV1SettingsUpdate.
        :param status: The status of this SupersimV1SettingsUpdate.
        """
        self.openapi_types = {
            'date_completed': datetime,
            'date_created': datetime,
            'date_updated': datetime,
            'iccid': str,
            'packages': List[object],
            'sid': str,
            'sim_sid': str,
            'status': SettingsUpdateEnumStatus
        }

        self.attribute_map = {
            'date_completed': 'date_completed',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'iccid': 'iccid',
            'packages': 'packages',
            'sid': 'sid',
            'sim_sid': 'sim_sid',
            'status': 'status'
        }

        self._date_completed = date_completed
        self._date_created = date_created
        self._date_updated = date_updated
        self._iccid = iccid
        self._packages = packages
        self._sid = sid
        self._sim_sid = sim_sid
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SupersimV1SettingsUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The supersim.v1.settings_update of this SupersimV1SettingsUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_completed(self):
        """Gets the date_completed of this SupersimV1SettingsUpdate.

        The time, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the update successfully completed and the new settings were applied to the SIM.

        :return: The date_completed of this SupersimV1SettingsUpdate.
        :rtype: datetime
        """
        return self._date_completed

    @date_completed.setter
    def date_completed(self, date_completed):
        """Sets the date_completed of this SupersimV1SettingsUpdate.

        The time, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the update successfully completed and the new settings were applied to the SIM.

        :param date_completed: The date_completed of this SupersimV1SettingsUpdate.
        :type date_completed: datetime
        """

        self._date_completed = date_completed

    @property
    def date_created(self):
        """Gets the date_created of this SupersimV1SettingsUpdate.

        The date that this Settings Update was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this SupersimV1SettingsUpdate.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SupersimV1SettingsUpdate.

        The date that this Settings Update was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this SupersimV1SettingsUpdate.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this SupersimV1SettingsUpdate.

        The date that this Settings Update was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this SupersimV1SettingsUpdate.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this SupersimV1SettingsUpdate.

        The date that this Settings Update was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this SupersimV1SettingsUpdate.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def iccid(self):
        """Gets the iccid of this SupersimV1SettingsUpdate.

        The [ICCID](https://en.wikipedia.org/wiki/SIM_card#ICCID) associated with the SIM.

        :return: The iccid of this SupersimV1SettingsUpdate.
        :rtype: str
        """
        return self._iccid

    @iccid.setter
    def iccid(self, iccid):
        """Sets the iccid of this SupersimV1SettingsUpdate.

        The [ICCID](https://en.wikipedia.org/wiki/SIM_card#ICCID) associated with the SIM.

        :param iccid: The iccid of this SupersimV1SettingsUpdate.
        :type iccid: str
        """

        self._iccid = iccid

    @property
    def packages(self):
        """Gets the packages of this SupersimV1SettingsUpdate.

        Array containing the different Settings Packages that will be applied to the SIM after the update completes. Each object within the array indicates the name and the version of the Settings Package that will be on the SIM if the update is successful.

        :return: The packages of this SupersimV1SettingsUpdate.
        :rtype: List[object]
        """
        return self._packages

    @packages.setter
    def packages(self, packages):
        """Sets the packages of this SupersimV1SettingsUpdate.

        Array containing the different Settings Packages that will be applied to the SIM after the update completes. Each object within the array indicates the name and the version of the Settings Package that will be on the SIM if the update is successful.

        :param packages: The packages of this SupersimV1SettingsUpdate.
        :type packages: List[object]
        """

        self._packages = packages

    @property
    def sid(self):
        """Gets the sid of this SupersimV1SettingsUpdate.

        The unique identifier of this Settings Update.

        :return: The sid of this SupersimV1SettingsUpdate.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this SupersimV1SettingsUpdate.

        The unique identifier of this Settings Update.

        :param sid: The sid of this SupersimV1SettingsUpdate.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^OB[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^OB[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def sim_sid(self):
        """Gets the sim_sid of this SupersimV1SettingsUpdate.

        The SID of the Super SIM to which this Settings Update was applied.

        :return: The sim_sid of this SupersimV1SettingsUpdate.
        :rtype: str
        """
        return self._sim_sid

    @sim_sid.setter
    def sim_sid(self, sim_sid):
        """Sets the sim_sid of this SupersimV1SettingsUpdate.

        The SID of the Super SIM to which this Settings Update was applied.

        :param sim_sid: The sim_sid of this SupersimV1SettingsUpdate.
        :type sim_sid: str
        """
        if sim_sid is not None and len(sim_sid) > 34:
            raise ValueError("Invalid value for `sim_sid`, length must be less than or equal to `34`")
        if sim_sid is not None and len(sim_sid) < 34:
            raise ValueError("Invalid value for `sim_sid`, length must be greater than or equal to `34`")
        if sim_sid is not None and not re.search(r'^HS[0-9a-fA-F]{32}$', sim_sid):
            raise ValueError("Invalid value for `sim_sid`, must be a follow pattern or equal to `/^HS[0-9a-fA-F]{32}$/`")

        self._sim_sid = sim_sid

    @property
    def status(self):
        """Gets the status of this SupersimV1SettingsUpdate.


        :return: The status of this SupersimV1SettingsUpdate.
        :rtype: SettingsUpdateEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SupersimV1SettingsUpdate.


        :param status: The status of this SupersimV1SettingsUpdate.
        :type status: SettingsUpdateEnumStatus
        """

        self._status = status
