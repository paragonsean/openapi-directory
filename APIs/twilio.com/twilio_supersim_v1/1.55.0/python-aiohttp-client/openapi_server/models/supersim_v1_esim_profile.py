# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.esim_profile_enum_status import EsimProfileEnumStatus
import re
from openapi_server import util


class SupersimV1EsimProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, activation_code: str=None, date_created: datetime=None, date_updated: datetime=None, eid: str=None, error_code: str=None, error_message: str=None, iccid: str=None, matching_id: str=None, sid: str=None, sim_sid: str=None, smdp_plus_address: str=None, status: EsimProfileEnumStatus=None, url: str=None):
        """SupersimV1EsimProfile - a model defined in OpenAPI

        :param account_sid: The account_sid of this SupersimV1EsimProfile.
        :param activation_code: The activation_code of this SupersimV1EsimProfile.
        :param date_created: The date_created of this SupersimV1EsimProfile.
        :param date_updated: The date_updated of this SupersimV1EsimProfile.
        :param eid: The eid of this SupersimV1EsimProfile.
        :param error_code: The error_code of this SupersimV1EsimProfile.
        :param error_message: The error_message of this SupersimV1EsimProfile.
        :param iccid: The iccid of this SupersimV1EsimProfile.
        :param matching_id: The matching_id of this SupersimV1EsimProfile.
        :param sid: The sid of this SupersimV1EsimProfile.
        :param sim_sid: The sim_sid of this SupersimV1EsimProfile.
        :param smdp_plus_address: The smdp_plus_address of this SupersimV1EsimProfile.
        :param status: The status of this SupersimV1EsimProfile.
        :param url: The url of this SupersimV1EsimProfile.
        """
        self.openapi_types = {
            'account_sid': str,
            'activation_code': str,
            'date_created': datetime,
            'date_updated': datetime,
            'eid': str,
            'error_code': str,
            'error_message': str,
            'iccid': str,
            'matching_id': str,
            'sid': str,
            'sim_sid': str,
            'smdp_plus_address': str,
            'status': EsimProfileEnumStatus,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'activation_code': 'activation_code',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'eid': 'eid',
            'error_code': 'error_code',
            'error_message': 'error_message',
            'iccid': 'iccid',
            'matching_id': 'matching_id',
            'sid': 'sid',
            'sim_sid': 'sim_sid',
            'smdp_plus_address': 'smdp_plus_address',
            'status': 'status',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._activation_code = activation_code
        self._date_created = date_created
        self._date_updated = date_updated
        self._eid = eid
        self._error_code = error_code
        self._error_message = error_message
        self._iccid = iccid
        self._matching_id = matching_id
        self._sid = sid
        self._sim_sid = sim_sid
        self._smdp_plus_address = smdp_plus_address
        self._status = status
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SupersimV1EsimProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The supersim.v1.esim_profile of this SupersimV1EsimProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this SupersimV1EsimProfile.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the eSIM Profile resource belongs.

        :return: The account_sid of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this SupersimV1EsimProfile.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the eSIM Profile resource belongs.

        :param account_sid: The account_sid of this SupersimV1EsimProfile.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def activation_code(self):
        """Gets the activation_code of this SupersimV1EsimProfile.

        Combined machine-readable activation code for acquiring an eSIM Profile with the Activation Code download method. Can be used in a QR code to download an eSIM profile.

        :return: The activation_code of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._activation_code

    @activation_code.setter
    def activation_code(self, activation_code):
        """Sets the activation_code of this SupersimV1EsimProfile.

        Combined machine-readable activation code for acquiring an eSIM Profile with the Activation Code download method. Can be used in a QR code to download an eSIM profile.

        :param activation_code: The activation_code of this SupersimV1EsimProfile.
        :type activation_code: str
        """

        self._activation_code = activation_code

    @property
    def date_created(self):
        """Gets the date_created of this SupersimV1EsimProfile.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this SupersimV1EsimProfile.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SupersimV1EsimProfile.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this SupersimV1EsimProfile.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this SupersimV1EsimProfile.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this SupersimV1EsimProfile.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this SupersimV1EsimProfile.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this SupersimV1EsimProfile.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def eid(self):
        """Gets the eid of this SupersimV1EsimProfile.

        Identifier of the eUICC that can claim the eSIM Profile.

        :return: The eid of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._eid

    @eid.setter
    def eid(self, eid):
        """Sets the eid of this SupersimV1EsimProfile.

        Identifier of the eUICC that can claim the eSIM Profile.

        :param eid: The eid of this SupersimV1EsimProfile.
        :type eid: str
        """

        self._eid = eid

    @property
    def error_code(self):
        """Gets the error_code of this SupersimV1EsimProfile.

        Code indicating the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state.

        :return: The error_code of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this SupersimV1EsimProfile.

        Code indicating the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state.

        :param error_code: The error_code of this SupersimV1EsimProfile.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this SupersimV1EsimProfile.

        Error message describing the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state.

        :return: The error_message of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this SupersimV1EsimProfile.

        Error message describing the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state.

        :param error_message: The error_message of this SupersimV1EsimProfile.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def iccid(self):
        """Gets the iccid of this SupersimV1EsimProfile.

        The [ICCID](https://en.wikipedia.org/wiki/Subscriber_identity_module#ICCID) associated with the Sim resource.

        :return: The iccid of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._iccid

    @iccid.setter
    def iccid(self, iccid):
        """Sets the iccid of this SupersimV1EsimProfile.

        The [ICCID](https://en.wikipedia.org/wiki/Subscriber_identity_module#ICCID) associated with the Sim resource.

        :param iccid: The iccid of this SupersimV1EsimProfile.
        :type iccid: str
        """

        self._iccid = iccid

    @property
    def matching_id(self):
        """Gets the matching_id of this SupersimV1EsimProfile.

        Unique identifier of the eSIM profile that can be used to identify and download the eSIM profile from the SM-DP+ server. Populated if `generate_matching_id` is set to `true` when creating the eSIM profile reservation.

        :return: The matching_id of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._matching_id

    @matching_id.setter
    def matching_id(self, matching_id):
        """Sets the matching_id of this SupersimV1EsimProfile.

        Unique identifier of the eSIM profile that can be used to identify and download the eSIM profile from the SM-DP+ server. Populated if `generate_matching_id` is set to `true` when creating the eSIM profile reservation.

        :param matching_id: The matching_id of this SupersimV1EsimProfile.
        :type matching_id: str
        """

        self._matching_id = matching_id

    @property
    def sid(self):
        """Gets the sid of this SupersimV1EsimProfile.

        The unique string that we created to identify the eSIM Profile resource.

        :return: The sid of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this SupersimV1EsimProfile.

        The unique string that we created to identify the eSIM Profile resource.

        :param sid: The sid of this SupersimV1EsimProfile.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^HP[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^HP[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def sim_sid(self):
        """Gets the sim_sid of this SupersimV1EsimProfile.

        The SID of the [Sim](https://www.twilio.com/docs/iot/supersim/api/sim-resource) resource that this eSIM Profile controls.

        :return: The sim_sid of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._sim_sid

    @sim_sid.setter
    def sim_sid(self, sim_sid):
        """Sets the sim_sid of this SupersimV1EsimProfile.

        The SID of the [Sim](https://www.twilio.com/docs/iot/supersim/api/sim-resource) resource that this eSIM Profile controls.

        :param sim_sid: The sim_sid of this SupersimV1EsimProfile.
        :type sim_sid: str
        """
        if sim_sid is not None and len(sim_sid) > 34:
            raise ValueError("Invalid value for `sim_sid`, length must be less than or equal to `34`")
        if sim_sid is not None and len(sim_sid) < 34:
            raise ValueError("Invalid value for `sim_sid`, length must be greater than or equal to `34`")
        if sim_sid is not None and not re.search(r'^HS[0-9a-fA-F]{32}$', sim_sid):
            raise ValueError("Invalid value for `sim_sid`, must be a follow pattern or equal to `/^HS[0-9a-fA-F]{32}$/`")

        self._sim_sid = sim_sid

    @property
    def smdp_plus_address(self):
        """Gets the smdp_plus_address of this SupersimV1EsimProfile.

        Address of the SM-DP+ server from which the Profile will be downloaded. The URL will appear once the eSIM Profile reaches the status `available`.

        :return: The smdp_plus_address of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._smdp_plus_address

    @smdp_plus_address.setter
    def smdp_plus_address(self, smdp_plus_address):
        """Sets the smdp_plus_address of this SupersimV1EsimProfile.

        Address of the SM-DP+ server from which the Profile will be downloaded. The URL will appear once the eSIM Profile reaches the status `available`.

        :param smdp_plus_address: The smdp_plus_address of this SupersimV1EsimProfile.
        :type smdp_plus_address: str
        """

        self._smdp_plus_address = smdp_plus_address

    @property
    def status(self):
        """Gets the status of this SupersimV1EsimProfile.


        :return: The status of this SupersimV1EsimProfile.
        :rtype: EsimProfileEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SupersimV1EsimProfile.


        :param status: The status of this SupersimV1EsimProfile.
        :type status: EsimProfileEnumStatus
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this SupersimV1EsimProfile.

        The absolute URL of the eSIM Profile resource.

        :return: The url of this SupersimV1EsimProfile.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this SupersimV1EsimProfile.

        The absolute URL of the eSIM Profile resource.

        :param url: The url of this SupersimV1EsimProfile.
        :type url: str
        """

        self._url = url
