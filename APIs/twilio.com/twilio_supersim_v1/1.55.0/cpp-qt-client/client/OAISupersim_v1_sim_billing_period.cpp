/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupersim_v1_sim_billing_period.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupersim_v1_sim_billing_period::OAISupersim_v1_sim_billing_period(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupersim_v1_sim_billing_period::OAISupersim_v1_sim_billing_period() {
    this->initializeModel();
}

OAISupersim_v1_sim_billing_period::~OAISupersim_v1_sim_billing_period() {}

void OAISupersim_v1_sim_billing_period::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_period_type_isSet = false;
    m_period_type_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_sim_sid_isSet = false;
    m_sim_sid_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAISupersim_v1_sim_billing_period::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupersim_v1_sim_billing_period::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("end_time")]);
    m_end_time_isSet = !json[QString("end_time")].isNull() && m_end_time_isValid;

    m_period_type_isValid = ::OpenAPI::fromJsonValue(m_period_type, json[QString("period_type")]);
    m_period_type_isSet = !json[QString("period_type")].isNull() && m_period_type_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_sim_sid_isValid = ::OpenAPI::fromJsonValue(m_sim_sid, json[QString("sim_sid")]);
    m_sim_sid_isSet = !json[QString("sim_sid")].isNull() && m_sim_sid_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("start_time")]);
    m_start_time_isSet = !json[QString("start_time")].isNull() && m_start_time_isValid;
}

QString OAISupersim_v1_sim_billing_period::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupersim_v1_sim_billing_period::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("end_time"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_period_type.isSet()) {
        obj.insert(QString("period_type"), ::OpenAPI::toJsonValue(m_period_type));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_sim_sid_isSet) {
        obj.insert(QString("sim_sid"), ::OpenAPI::toJsonValue(m_sim_sid));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("start_time"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAISupersim_v1_sim_billing_period::getAccountSid() const {
    return m_account_sid;
}
void OAISupersim_v1_sim_billing_period::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAISupersim_v1_sim_billing_period::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAISupersim_v1_sim_billing_period::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QDateTime OAISupersim_v1_sim_billing_period::getDateCreated() const {
    return m_date_created;
}
void OAISupersim_v1_sim_billing_period::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAISupersim_v1_sim_billing_period::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAISupersim_v1_sim_billing_period::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAISupersim_v1_sim_billing_period::getDateUpdated() const {
    return m_date_updated;
}
void OAISupersim_v1_sim_billing_period::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAISupersim_v1_sim_billing_period::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAISupersim_v1_sim_billing_period::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QDateTime OAISupersim_v1_sim_billing_period::getEndTime() const {
    return m_end_time;
}
void OAISupersim_v1_sim_billing_period::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAISupersim_v1_sim_billing_period::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAISupersim_v1_sim_billing_period::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIBilling_period_enum_bp_type OAISupersim_v1_sim_billing_period::getPeriodType() const {
    return m_period_type;
}
void OAISupersim_v1_sim_billing_period::setPeriodType(const OAIBilling_period_enum_bp_type &period_type) {
    m_period_type = period_type;
    m_period_type_isSet = true;
}

bool OAISupersim_v1_sim_billing_period::is_period_type_Set() const{
    return m_period_type_isSet;
}

bool OAISupersim_v1_sim_billing_period::is_period_type_Valid() const{
    return m_period_type_isValid;
}

QString OAISupersim_v1_sim_billing_period::getSid() const {
    return m_sid;
}
void OAISupersim_v1_sim_billing_period::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAISupersim_v1_sim_billing_period::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAISupersim_v1_sim_billing_period::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAISupersim_v1_sim_billing_period::getSimSid() const {
    return m_sim_sid;
}
void OAISupersim_v1_sim_billing_period::setSimSid(const QString &sim_sid) {
    m_sim_sid = sim_sid;
    m_sim_sid_isSet = true;
}

bool OAISupersim_v1_sim_billing_period::is_sim_sid_Set() const{
    return m_sim_sid_isSet;
}

bool OAISupersim_v1_sim_billing_period::is_sim_sid_Valid() const{
    return m_sim_sid_isValid;
}

QDateTime OAISupersim_v1_sim_billing_period::getStartTime() const {
    return m_start_time;
}
void OAISupersim_v1_sim_billing_period::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAISupersim_v1_sim_billing_period::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAISupersim_v1_sim_billing_period::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAISupersim_v1_sim_billing_period::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sim_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupersim_v1_sim_billing_period::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
