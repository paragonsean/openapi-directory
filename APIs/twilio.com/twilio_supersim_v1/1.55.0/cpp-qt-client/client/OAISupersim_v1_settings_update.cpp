/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupersim_v1_settings_update.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupersim_v1_settings_update::OAISupersim_v1_settings_update(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupersim_v1_settings_update::OAISupersim_v1_settings_update() {
    this->initializeModel();
}

OAISupersim_v1_settings_update::~OAISupersim_v1_settings_update() {}

void OAISupersim_v1_settings_update::initializeModel() {

    m_date_completed_isSet = false;
    m_date_completed_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_iccid_isSet = false;
    m_iccid_isValid = false;

    m_packages_isSet = false;
    m_packages_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_sim_sid_isSet = false;
    m_sim_sid_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISupersim_v1_settings_update::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupersim_v1_settings_update::fromJsonObject(QJsonObject json) {

    m_date_completed_isValid = ::OpenAPI::fromJsonValue(m_date_completed, json[QString("date_completed")]);
    m_date_completed_isSet = !json[QString("date_completed")].isNull() && m_date_completed_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_iccid_isValid = ::OpenAPI::fromJsonValue(m_iccid, json[QString("iccid")]);
    m_iccid_isSet = !json[QString("iccid")].isNull() && m_iccid_isValid;

    m_packages_isValid = ::OpenAPI::fromJsonValue(m_packages, json[QString("packages")]);
    m_packages_isSet = !json[QString("packages")].isNull() && m_packages_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_sim_sid_isValid = ::OpenAPI::fromJsonValue(m_sim_sid, json[QString("sim_sid")]);
    m_sim_sid_isSet = !json[QString("sim_sid")].isNull() && m_sim_sid_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAISupersim_v1_settings_update::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupersim_v1_settings_update::asJsonObject() const {
    QJsonObject obj;
    if (m_date_completed_isSet) {
        obj.insert(QString("date_completed"), ::OpenAPI::toJsonValue(m_date_completed));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_iccid_isSet) {
        obj.insert(QString("iccid"), ::OpenAPI::toJsonValue(m_iccid));
    }
    if (m_packages.size() > 0) {
        obj.insert(QString("packages"), ::OpenAPI::toJsonValue(m_packages));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_sim_sid_isSet) {
        obj.insert(QString("sim_sid"), ::OpenAPI::toJsonValue(m_sim_sid));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAISupersim_v1_settings_update::getDateCompleted() const {
    return m_date_completed;
}
void OAISupersim_v1_settings_update::setDateCompleted(const QDateTime &date_completed) {
    m_date_completed = date_completed;
    m_date_completed_isSet = true;
}

bool OAISupersim_v1_settings_update::is_date_completed_Set() const{
    return m_date_completed_isSet;
}

bool OAISupersim_v1_settings_update::is_date_completed_Valid() const{
    return m_date_completed_isValid;
}

QDateTime OAISupersim_v1_settings_update::getDateCreated() const {
    return m_date_created;
}
void OAISupersim_v1_settings_update::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAISupersim_v1_settings_update::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAISupersim_v1_settings_update::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAISupersim_v1_settings_update::getDateUpdated() const {
    return m_date_updated;
}
void OAISupersim_v1_settings_update::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAISupersim_v1_settings_update::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAISupersim_v1_settings_update::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAISupersim_v1_settings_update::getIccid() const {
    return m_iccid;
}
void OAISupersim_v1_settings_update::setIccid(const QString &iccid) {
    m_iccid = iccid;
    m_iccid_isSet = true;
}

bool OAISupersim_v1_settings_update::is_iccid_Set() const{
    return m_iccid_isSet;
}

bool OAISupersim_v1_settings_update::is_iccid_Valid() const{
    return m_iccid_isValid;
}

QList<QJsonValue> OAISupersim_v1_settings_update::getPackages() const {
    return m_packages;
}
void OAISupersim_v1_settings_update::setPackages(const QList<QJsonValue> &packages) {
    m_packages = packages;
    m_packages_isSet = true;
}

bool OAISupersim_v1_settings_update::is_packages_Set() const{
    return m_packages_isSet;
}

bool OAISupersim_v1_settings_update::is_packages_Valid() const{
    return m_packages_isValid;
}

QString OAISupersim_v1_settings_update::getSid() const {
    return m_sid;
}
void OAISupersim_v1_settings_update::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAISupersim_v1_settings_update::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAISupersim_v1_settings_update::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAISupersim_v1_settings_update::getSimSid() const {
    return m_sim_sid;
}
void OAISupersim_v1_settings_update::setSimSid(const QString &sim_sid) {
    m_sim_sid = sim_sid;
    m_sim_sid_isSet = true;
}

bool OAISupersim_v1_settings_update::is_sim_sid_Set() const{
    return m_sim_sid_isSet;
}

bool OAISupersim_v1_settings_update::is_sim_sid_Valid() const{
    return m_sim_sid_isValid;
}

OAISettings_update_enum_status OAISupersim_v1_settings_update::getStatus() const {
    return m_status;
}
void OAISupersim_v1_settings_update::setStatus(const OAISettings_update_enum_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISupersim_v1_settings_update::is_status_Set() const{
    return m_status_isSet;
}

bool OAISupersim_v1_settings_update::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISupersim_v1_settings_update::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_completed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iccid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_packages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sim_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupersim_v1_settings_update::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
