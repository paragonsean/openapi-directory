/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISupersim_v1_fleet.h
 *
 * 
 */

#ifndef OAISupersim_v1_fleet_H
#define OAISupersim_v1_fleet_H

#include <QJsonObject>

#include "OAIFleet_enum_data_metering.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISupersim_v1_fleet : public OAIObject {
public:
    OAISupersim_v1_fleet();
    OAISupersim_v1_fleet(QString json);
    ~OAISupersim_v1_fleet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    bool isDataEnabled() const;
    void setDataEnabled(const bool &data_enabled);
    bool is_data_enabled_Set() const;
    bool is_data_enabled_Valid() const;

    qint32 getDataLimit() const;
    void setDataLimit(const qint32 &data_limit);
    bool is_data_limit_Set() const;
    bool is_data_limit_Valid() const;

    OAIFleet_enum_data_metering getDataMetering() const;
    void setDataMetering(const OAIFleet_enum_data_metering &data_metering);
    bool is_data_metering_Set() const;
    bool is_data_metering_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getIpCommandsMethod() const;
    void setIpCommandsMethod(const QString &ip_commands_method);
    bool is_ip_commands_method_Set() const;
    bool is_ip_commands_method_Valid() const;

    QString getIpCommandsUrl() const;
    void setIpCommandsUrl(const QString &ip_commands_url);
    bool is_ip_commands_url_Set() const;
    bool is_ip_commands_url_Valid() const;

    QString getNetworkAccessProfileSid() const;
    void setNetworkAccessProfileSid(const QString &network_access_profile_sid);
    bool is_network_access_profile_sid_Set() const;
    bool is_network_access_profile_sid_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    bool isSmsCommandsEnabled() const;
    void setSmsCommandsEnabled(const bool &sms_commands_enabled);
    bool is_sms_commands_enabled_Set() const;
    bool is_sms_commands_enabled_Valid() const;

    QString getSmsCommandsMethod() const;
    void setSmsCommandsMethod(const QString &sms_commands_method);
    bool is_sms_commands_method_Set() const;
    bool is_sms_commands_method_Valid() const;

    QString getSmsCommandsUrl() const;
    void setSmsCommandsUrl(const QString &sms_commands_url);
    bool is_sms_commands_url_Set() const;
    bool is_sms_commands_url_Valid() const;

    QString getUniqueName() const;
    void setUniqueName(const QString &unique_name);
    bool is_unique_name_Set() const;
    bool is_unique_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    bool m_data_enabled;
    bool m_data_enabled_isSet;
    bool m_data_enabled_isValid;

    qint32 m_data_limit;
    bool m_data_limit_isSet;
    bool m_data_limit_isValid;

    OAIFleet_enum_data_metering m_data_metering;
    bool m_data_metering_isSet;
    bool m_data_metering_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_ip_commands_method;
    bool m_ip_commands_method_isSet;
    bool m_ip_commands_method_isValid;

    QString m_ip_commands_url;
    bool m_ip_commands_url_isSet;
    bool m_ip_commands_url_isValid;

    QString m_network_access_profile_sid;
    bool m_network_access_profile_sid_isSet;
    bool m_network_access_profile_sid_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    bool m_sms_commands_enabled;
    bool m_sms_commands_enabled_isSet;
    bool m_sms_commands_enabled_isValid;

    QString m_sms_commands_method;
    bool m_sms_commands_method_isSet;
    bool m_sms_commands_method_isValid;

    QString m_sms_commands_url;
    bool m_sms_commands_url_isSet;
    bool m_sms_commands_url_isValid;

    QString m_unique_name;
    bool m_unique_name_isSet;
    bool m_unique_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISupersim_v1_fleet)

#endif // OAISupersim_v1_fleet_H
