/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSmsCommandResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSmsCommandResponse::OAIListSmsCommandResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSmsCommandResponse::OAIListSmsCommandResponse() {
    this->initializeModel();
}

OAIListSmsCommandResponse::~OAIListSmsCommandResponse() {}

void OAIListSmsCommandResponse::initializeModel() {

    m_meta_isSet = false;
    m_meta_isValid = false;

    m_sms_commands_isSet = false;
    m_sms_commands_isValid = false;
}

void OAIListSmsCommandResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSmsCommandResponse::fromJsonObject(QJsonObject json) {

    m_meta_isValid = ::OpenAPI::fromJsonValue(m_meta, json[QString("meta")]);
    m_meta_isSet = !json[QString("meta")].isNull() && m_meta_isValid;

    m_sms_commands_isValid = ::OpenAPI::fromJsonValue(m_sms_commands, json[QString("sms_commands")]);
    m_sms_commands_isSet = !json[QString("sms_commands")].isNull() && m_sms_commands_isValid;
}

QString OAIListSmsCommandResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSmsCommandResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_meta.isSet()) {
        obj.insert(QString("meta"), ::OpenAPI::toJsonValue(m_meta));
    }
    if (m_sms_commands.size() > 0) {
        obj.insert(QString("sms_commands"), ::OpenAPI::toJsonValue(m_sms_commands));
    }
    return obj;
}

OAIListEsimProfileResponse_meta OAIListSmsCommandResponse::getMeta() const {
    return m_meta;
}
void OAIListSmsCommandResponse::setMeta(const OAIListEsimProfileResponse_meta &meta) {
    m_meta = meta;
    m_meta_isSet = true;
}

bool OAIListSmsCommandResponse::is_meta_Set() const{
    return m_meta_isSet;
}

bool OAIListSmsCommandResponse::is_meta_Valid() const{
    return m_meta_isValid;
}

QList<OAISupersim_v1_sms_command> OAIListSmsCommandResponse::getSmsCommands() const {
    return m_sms_commands;
}
void OAIListSmsCommandResponse::setSmsCommands(const QList<OAISupersim_v1_sms_command> &sms_commands) {
    m_sms_commands = sms_commands;
    m_sms_commands_isSet = true;
}

bool OAIListSmsCommandResponse::is_sms_commands_Set() const{
    return m_sms_commands_isSet;
}

bool OAIListSmsCommandResponse::is_sms_commands_Valid() const{
    return m_sms_commands_isValid;
}

bool OAIListSmsCommandResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_meta.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_commands.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSmsCommandResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
