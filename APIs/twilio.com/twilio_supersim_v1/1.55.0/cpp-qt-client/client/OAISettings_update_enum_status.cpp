/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISettings_update_enum_status.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISettings_update_enum_status::OAISettings_update_enum_status(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISettings_update_enum_status::OAISettings_update_enum_status() {
    this->initializeModel();
}

OAISettings_update_enum_status::~OAISettings_update_enum_status() {}

void OAISettings_update_enum_status::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISettings_update_enum_status::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISettings_update_enum_status::fromJson(QString jsonString) {
    
    if ( jsonString.compare("scheduled", Qt::CaseInsensitive) == 0) {
        m_value = eOAISettings_update_enum_status::SCHEDULED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("in-progress", Qt::CaseInsensitive) == 0) {
        m_value = eOAISettings_update_enum_status::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("successful", Qt::CaseInsensitive) == 0) {
        m_value = eOAISettings_update_enum_status::SUCCESSFUL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAISettings_update_enum_status::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISettings_update_enum_status::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISettings_update_enum_status::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISettings_update_enum_status::SCHEDULED:
            val = "scheduled";
            break;
        case eOAISettings_update_enum_status::IN_PROGRESS:
            val = "in-progress";
            break;
        case eOAISettings_update_enum_status::SUCCESSFUL:
            val = "successful";
            break;
        case eOAISettings_update_enum_status::FAILED:
            val = "failed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISettings_update_enum_status::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISettings_update_enum_status::eOAISettings_update_enum_status OAISettings_update_enum_status::getValue() const {
    return m_value;
}

void OAISettings_update_enum_status::setValue(const OAISettings_update_enum_status::eOAISettings_update_enum_status& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISettings_update_enum_status::isSet() const {
    
    return m_value_isSet;
}

bool OAISettings_update_enum_status::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
