/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupersim_v1_esim_profile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupersim_v1_esim_profile::OAISupersim_v1_esim_profile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupersim_v1_esim_profile::OAISupersim_v1_esim_profile() {
    this->initializeModel();
}

OAISupersim_v1_esim_profile::~OAISupersim_v1_esim_profile() {}

void OAISupersim_v1_esim_profile::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_activation_code_isSet = false;
    m_activation_code_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_eid_isSet = false;
    m_eid_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_iccid_isSet = false;
    m_iccid_isValid = false;

    m_matching_id_isSet = false;
    m_matching_id_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_sim_sid_isSet = false;
    m_sim_sid_isValid = false;

    m_smdp_plus_address_isSet = false;
    m_smdp_plus_address_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAISupersim_v1_esim_profile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupersim_v1_esim_profile::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_activation_code_isValid = ::OpenAPI::fromJsonValue(m_activation_code, json[QString("activation_code")]);
    m_activation_code_isSet = !json[QString("activation_code")].isNull() && m_activation_code_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_eid_isValid = ::OpenAPI::fromJsonValue(m_eid, json[QString("eid")]);
    m_eid_isSet = !json[QString("eid")].isNull() && m_eid_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("error_code")]);
    m_error_code_isSet = !json[QString("error_code")].isNull() && m_error_code_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("error_message")]);
    m_error_message_isSet = !json[QString("error_message")].isNull() && m_error_message_isValid;

    m_iccid_isValid = ::OpenAPI::fromJsonValue(m_iccid, json[QString("iccid")]);
    m_iccid_isSet = !json[QString("iccid")].isNull() && m_iccid_isValid;

    m_matching_id_isValid = ::OpenAPI::fromJsonValue(m_matching_id, json[QString("matching_id")]);
    m_matching_id_isSet = !json[QString("matching_id")].isNull() && m_matching_id_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_sim_sid_isValid = ::OpenAPI::fromJsonValue(m_sim_sid, json[QString("sim_sid")]);
    m_sim_sid_isSet = !json[QString("sim_sid")].isNull() && m_sim_sid_isValid;

    m_smdp_plus_address_isValid = ::OpenAPI::fromJsonValue(m_smdp_plus_address, json[QString("smdp_plus_address")]);
    m_smdp_plus_address_isSet = !json[QString("smdp_plus_address")].isNull() && m_smdp_plus_address_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAISupersim_v1_esim_profile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupersim_v1_esim_profile::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_activation_code_isSet) {
        obj.insert(QString("activation_code"), ::OpenAPI::toJsonValue(m_activation_code));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_eid_isSet) {
        obj.insert(QString("eid"), ::OpenAPI::toJsonValue(m_eid));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("error_code"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("error_message"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_iccid_isSet) {
        obj.insert(QString("iccid"), ::OpenAPI::toJsonValue(m_iccid));
    }
    if (m_matching_id_isSet) {
        obj.insert(QString("matching_id"), ::OpenAPI::toJsonValue(m_matching_id));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_sim_sid_isSet) {
        obj.insert(QString("sim_sid"), ::OpenAPI::toJsonValue(m_sim_sid));
    }
    if (m_smdp_plus_address_isSet) {
        obj.insert(QString("smdp_plus_address"), ::OpenAPI::toJsonValue(m_smdp_plus_address));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAISupersim_v1_esim_profile::getAccountSid() const {
    return m_account_sid;
}
void OAISupersim_v1_esim_profile::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAISupersim_v1_esim_profile::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAISupersim_v1_esim_profile::getActivationCode() const {
    return m_activation_code;
}
void OAISupersim_v1_esim_profile::setActivationCode(const QString &activation_code) {
    m_activation_code = activation_code;
    m_activation_code_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_activation_code_Set() const{
    return m_activation_code_isSet;
}

bool OAISupersim_v1_esim_profile::is_activation_code_Valid() const{
    return m_activation_code_isValid;
}

QDateTime OAISupersim_v1_esim_profile::getDateCreated() const {
    return m_date_created;
}
void OAISupersim_v1_esim_profile::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAISupersim_v1_esim_profile::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAISupersim_v1_esim_profile::getDateUpdated() const {
    return m_date_updated;
}
void OAISupersim_v1_esim_profile::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAISupersim_v1_esim_profile::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAISupersim_v1_esim_profile::getEid() const {
    return m_eid;
}
void OAISupersim_v1_esim_profile::setEid(const QString &eid) {
    m_eid = eid;
    m_eid_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_eid_Set() const{
    return m_eid_isSet;
}

bool OAISupersim_v1_esim_profile::is_eid_Valid() const{
    return m_eid_isValid;
}

QString OAISupersim_v1_esim_profile::getErrorCode() const {
    return m_error_code;
}
void OAISupersim_v1_esim_profile::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAISupersim_v1_esim_profile::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAISupersim_v1_esim_profile::getErrorMessage() const {
    return m_error_message;
}
void OAISupersim_v1_esim_profile::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAISupersim_v1_esim_profile::is_error_message_Valid() const{
    return m_error_message_isValid;
}

QString OAISupersim_v1_esim_profile::getIccid() const {
    return m_iccid;
}
void OAISupersim_v1_esim_profile::setIccid(const QString &iccid) {
    m_iccid = iccid;
    m_iccid_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_iccid_Set() const{
    return m_iccid_isSet;
}

bool OAISupersim_v1_esim_profile::is_iccid_Valid() const{
    return m_iccid_isValid;
}

QString OAISupersim_v1_esim_profile::getMatchingId() const {
    return m_matching_id;
}
void OAISupersim_v1_esim_profile::setMatchingId(const QString &matching_id) {
    m_matching_id = matching_id;
    m_matching_id_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_matching_id_Set() const{
    return m_matching_id_isSet;
}

bool OAISupersim_v1_esim_profile::is_matching_id_Valid() const{
    return m_matching_id_isValid;
}

QString OAISupersim_v1_esim_profile::getSid() const {
    return m_sid;
}
void OAISupersim_v1_esim_profile::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAISupersim_v1_esim_profile::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAISupersim_v1_esim_profile::getSimSid() const {
    return m_sim_sid;
}
void OAISupersim_v1_esim_profile::setSimSid(const QString &sim_sid) {
    m_sim_sid = sim_sid;
    m_sim_sid_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_sim_sid_Set() const{
    return m_sim_sid_isSet;
}

bool OAISupersim_v1_esim_profile::is_sim_sid_Valid() const{
    return m_sim_sid_isValid;
}

QString OAISupersim_v1_esim_profile::getSmdpPlusAddress() const {
    return m_smdp_plus_address;
}
void OAISupersim_v1_esim_profile::setSmdpPlusAddress(const QString &smdp_plus_address) {
    m_smdp_plus_address = smdp_plus_address;
    m_smdp_plus_address_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_smdp_plus_address_Set() const{
    return m_smdp_plus_address_isSet;
}

bool OAISupersim_v1_esim_profile::is_smdp_plus_address_Valid() const{
    return m_smdp_plus_address_isValid;
}

OAIEsim_profile_enum_status OAISupersim_v1_esim_profile::getStatus() const {
    return m_status;
}
void OAISupersim_v1_esim_profile::setStatus(const OAIEsim_profile_enum_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_status_Set() const{
    return m_status_isSet;
}

bool OAISupersim_v1_esim_profile::is_status_Valid() const{
    return m_status_isValid;
}

QString OAISupersim_v1_esim_profile::getUrl() const {
    return m_url;
}
void OAISupersim_v1_esim_profile::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAISupersim_v1_esim_profile::is_url_Set() const{
    return m_url_isSet;
}

bool OAISupersim_v1_esim_profile::is_url_Valid() const{
    return m_url_isValid;
}

bool OAISupersim_v1_esim_profile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_activation_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_eid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iccid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_matching_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sim_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_smdp_plus_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupersim_v1_esim_profile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
