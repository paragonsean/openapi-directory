/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EsimProfileEnumStatus from './EsimProfileEnumStatus';

/**
 * The SupersimV1EsimProfile model module.
 * @module model/SupersimV1EsimProfile
 * @version 1.55.0
 */
class SupersimV1EsimProfile {
    /**
     * Constructs a new <code>SupersimV1EsimProfile</code>.
     * @alias module:model/SupersimV1EsimProfile
     */
    constructor() { 
        
        SupersimV1EsimProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SupersimV1EsimProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SupersimV1EsimProfile} obj Optional instance to populate.
     * @return {module:model/SupersimV1EsimProfile} The populated <code>SupersimV1EsimProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SupersimV1EsimProfile();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('activation_code')) {
                obj['activation_code'] = ApiClient.convertToType(data['activation_code'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('eid')) {
                obj['eid'] = ApiClient.convertToType(data['eid'], 'String');
            }
            if (data.hasOwnProperty('error_code')) {
                obj['error_code'] = ApiClient.convertToType(data['error_code'], 'String');
            }
            if (data.hasOwnProperty('error_message')) {
                obj['error_message'] = ApiClient.convertToType(data['error_message'], 'String');
            }
            if (data.hasOwnProperty('iccid')) {
                obj['iccid'] = ApiClient.convertToType(data['iccid'], 'String');
            }
            if (data.hasOwnProperty('matching_id')) {
                obj['matching_id'] = ApiClient.convertToType(data['matching_id'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('sim_sid')) {
                obj['sim_sid'] = ApiClient.convertToType(data['sim_sid'], 'String');
            }
            if (data.hasOwnProperty('smdp_plus_address')) {
                obj['smdp_plus_address'] = ApiClient.convertToType(data['smdp_plus_address'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EsimProfileEnumStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SupersimV1EsimProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SupersimV1EsimProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['activation_code'] && !(typeof data['activation_code'] === 'string' || data['activation_code'] instanceof String)) {
            throw new Error("Expected the field `activation_code` to be a primitive type in the JSON string but got " + data['activation_code']);
        }
        // ensure the json data is a string
        if (data['eid'] && !(typeof data['eid'] === 'string' || data['eid'] instanceof String)) {
            throw new Error("Expected the field `eid` to be a primitive type in the JSON string but got " + data['eid']);
        }
        // ensure the json data is a string
        if (data['error_code'] && !(typeof data['error_code'] === 'string' || data['error_code'] instanceof String)) {
            throw new Error("Expected the field `error_code` to be a primitive type in the JSON string but got " + data['error_code']);
        }
        // ensure the json data is a string
        if (data['error_message'] && !(typeof data['error_message'] === 'string' || data['error_message'] instanceof String)) {
            throw new Error("Expected the field `error_message` to be a primitive type in the JSON string but got " + data['error_message']);
        }
        // ensure the json data is a string
        if (data['iccid'] && !(typeof data['iccid'] === 'string' || data['iccid'] instanceof String)) {
            throw new Error("Expected the field `iccid` to be a primitive type in the JSON string but got " + data['iccid']);
        }
        // ensure the json data is a string
        if (data['matching_id'] && !(typeof data['matching_id'] === 'string' || data['matching_id'] instanceof String)) {
            throw new Error("Expected the field `matching_id` to be a primitive type in the JSON string but got " + data['matching_id']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['sim_sid'] && !(typeof data['sim_sid'] === 'string' || data['sim_sid'] instanceof String)) {
            throw new Error("Expected the field `sim_sid` to be a primitive type in the JSON string but got " + data['sim_sid']);
        }
        // ensure the json data is a string
        if (data['smdp_plus_address'] && !(typeof data['smdp_plus_address'] === 'string' || data['smdp_plus_address'] instanceof String)) {
            throw new Error("Expected the field `smdp_plus_address` to be a primitive type in the JSON string but got " + data['smdp_plus_address']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the eSIM Profile resource belongs.
 * @member {String} account_sid
 */
SupersimV1EsimProfile.prototype['account_sid'] = undefined;

/**
 * Combined machine-readable activation code for acquiring an eSIM Profile with the Activation Code download method. Can be used in a QR code to download an eSIM profile.
 * @member {String} activation_code
 */
SupersimV1EsimProfile.prototype['activation_code'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
SupersimV1EsimProfile.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
SupersimV1EsimProfile.prototype['date_updated'] = undefined;

/**
 * Identifier of the eUICC that can claim the eSIM Profile.
 * @member {String} eid
 */
SupersimV1EsimProfile.prototype['eid'] = undefined;

/**
 * Code indicating the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state.
 * @member {String} error_code
 */
SupersimV1EsimProfile.prototype['error_code'] = undefined;

/**
 * Error message describing the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state.
 * @member {String} error_message
 */
SupersimV1EsimProfile.prototype['error_message'] = undefined;

/**
 * The [ICCID](https://en.wikipedia.org/wiki/Subscriber_identity_module#ICCID) associated with the Sim resource.
 * @member {String} iccid
 */
SupersimV1EsimProfile.prototype['iccid'] = undefined;

/**
 * Unique identifier of the eSIM profile that can be used to identify and download the eSIM profile from the SM-DP+ server. Populated if `generate_matching_id` is set to `true` when creating the eSIM profile reservation.
 * @member {String} matching_id
 */
SupersimV1EsimProfile.prototype['matching_id'] = undefined;

/**
 * The unique string that we created to identify the eSIM Profile resource.
 * @member {String} sid
 */
SupersimV1EsimProfile.prototype['sid'] = undefined;

/**
 * The SID of the [Sim](https://www.twilio.com/docs/iot/supersim/api/sim-resource) resource that this eSIM Profile controls.
 * @member {String} sim_sid
 */
SupersimV1EsimProfile.prototype['sim_sid'] = undefined;

/**
 * Address of the SM-DP+ server from which the Profile will be downloaded. The URL will appear once the eSIM Profile reaches the status `available`.
 * @member {String} smdp_plus_address
 */
SupersimV1EsimProfile.prototype['smdp_plus_address'] = undefined;

/**
 * @member {module:model/EsimProfileEnumStatus} status
 */
SupersimV1EsimProfile.prototype['status'] = undefined;

/**
 * The absolute URL of the eSIM Profile resource.
 * @member {String} url
 */
SupersimV1EsimProfile.prototype['url'] = undefined;






export default SupersimV1EsimProfile;

