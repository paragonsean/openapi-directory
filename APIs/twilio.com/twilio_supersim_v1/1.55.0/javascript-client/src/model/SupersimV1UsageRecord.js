/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SupersimV1UsageRecord model module.
 * @module model/SupersimV1UsageRecord
 * @version 1.55.0
 */
class SupersimV1UsageRecord {
    /**
     * Constructs a new <code>SupersimV1UsageRecord</code>.
     * @alias module:model/SupersimV1UsageRecord
     */
    constructor() { 
        
        SupersimV1UsageRecord.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SupersimV1UsageRecord</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SupersimV1UsageRecord} obj Optional instance to populate.
     * @return {module:model/SupersimV1UsageRecord} The populated <code>SupersimV1UsageRecord</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SupersimV1UsageRecord();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('billed_unit')) {
                obj['billed_unit'] = ApiClient.convertToType(data['billed_unit'], 'String');
            }
            if (data.hasOwnProperty('data_download')) {
                obj['data_download'] = ApiClient.convertToType(data['data_download'], 'Number');
            }
            if (data.hasOwnProperty('data_total')) {
                obj['data_total'] = ApiClient.convertToType(data['data_total'], 'Number');
            }
            if (data.hasOwnProperty('data_total_billed')) {
                obj['data_total_billed'] = ApiClient.convertToType(data['data_total_billed'], 'Number');
            }
            if (data.hasOwnProperty('data_upload')) {
                obj['data_upload'] = ApiClient.convertToType(data['data_upload'], 'Number');
            }
            if (data.hasOwnProperty('fleet_sid')) {
                obj['fleet_sid'] = ApiClient.convertToType(data['fleet_sid'], 'String');
            }
            if (data.hasOwnProperty('iso_country')) {
                obj['iso_country'] = ApiClient.convertToType(data['iso_country'], 'String');
            }
            if (data.hasOwnProperty('network_sid')) {
                obj['network_sid'] = ApiClient.convertToType(data['network_sid'], 'String');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], Object);
            }
            if (data.hasOwnProperty('sim_sid')) {
                obj['sim_sid'] = ApiClient.convertToType(data['sim_sid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SupersimV1UsageRecord</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SupersimV1UsageRecord</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['billed_unit'] && !(typeof data['billed_unit'] === 'string' || data['billed_unit'] instanceof String)) {
            throw new Error("Expected the field `billed_unit` to be a primitive type in the JSON string but got " + data['billed_unit']);
        }
        // ensure the json data is a string
        if (data['fleet_sid'] && !(typeof data['fleet_sid'] === 'string' || data['fleet_sid'] instanceof String)) {
            throw new Error("Expected the field `fleet_sid` to be a primitive type in the JSON string but got " + data['fleet_sid']);
        }
        // ensure the json data is a string
        if (data['iso_country'] && !(typeof data['iso_country'] === 'string' || data['iso_country'] instanceof String)) {
            throw new Error("Expected the field `iso_country` to be a primitive type in the JSON string but got " + data['iso_country']);
        }
        // ensure the json data is a string
        if (data['network_sid'] && !(typeof data['network_sid'] === 'string' || data['network_sid'] instanceof String)) {
            throw new Error("Expected the field `network_sid` to be a primitive type in the JSON string but got " + data['network_sid']);
        }
        // ensure the json data is a string
        if (data['sim_sid'] && !(typeof data['sim_sid'] === 'string' || data['sim_sid'] instanceof String)) {
            throw new Error("Expected the field `sim_sid` to be a primitive type in the JSON string but got " + data['sim_sid']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that incurred the usage.
 * @member {String} account_sid
 */
SupersimV1UsageRecord.prototype['account_sid'] = undefined;

/**
 * The currency in which the billed amounts are measured, specified in the 3 letter ISO 4127 format (e.g. `USD`, `EUR`, `JPY`). This can be null when data_toal_billed is 0 and we do not yet have billing information for the corresponding data usage. Refer to [Data Usage Processing](https://www.twilio.com/docs/iot/supersim/api/usage-record-resource#data-usage-processing) for more details.
 * @member {String} billed_unit
 */
SupersimV1UsageRecord.prototype['billed_unit'] = undefined;

/**
 * Total data downloaded in bytes, aggregated by the query parameters.
 * @member {Number} data_download
 */
SupersimV1UsageRecord.prototype['data_download'] = undefined;

/**
 * Total of data_upload and data_download.
 * @member {Number} data_total
 */
SupersimV1UsageRecord.prototype['data_total'] = undefined;

/**
 * Total amount in the `billed_unit` that was charged for the data uploaded or downloaded. Will return 0 for usage prior to February 1, 2022. Value may be 0 despite `data_total` being greater than 0 if the data usage is still being processed by Twilio's billing system. Refer to [Data Usage Processing](https://www.twilio.com/docs/iot/supersim/api/usage-record-resource#data-usage-processing) for more details.
 * @member {Number} data_total_billed
 */
SupersimV1UsageRecord.prototype['data_total_billed'] = undefined;

/**
 * Total data uploaded in bytes, aggregated by the query parameters.
 * @member {Number} data_upload
 */
SupersimV1UsageRecord.prototype['data_upload'] = undefined;

/**
 * SID of the Fleet resource the usage occurred on. Value will only be present when either a value for the `Fleet` query parameter is provided or when UsageRecords are grouped by `fleet`. Otherwise, the value will be `null`.
 * @member {String} fleet_sid
 */
SupersimV1UsageRecord.prototype['fleet_sid'] = undefined;

/**
 * Alpha-2 ISO Country Code that the usage occurred in. Value will only be present when either a value for the `IsoCountry` query parameter is provided or when UsageRecords are grouped by `isoCountry`. Otherwise, the value will be `null`.
 * @member {String} iso_country
 */
SupersimV1UsageRecord.prototype['iso_country'] = undefined;

/**
 * SID of the Network resource the usage occurred on. Value will only be present when either a value for the `Network` query parameter is provided or when UsageRecords are grouped by `network`. Otherwise, the value will be `null`.
 * @member {String} network_sid
 */
SupersimV1UsageRecord.prototype['network_sid'] = undefined;

/**
 * The time period for which the usage is reported. The period is represented as a pair of `start_time` and `end_time` timestamps specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Object} period
 */
SupersimV1UsageRecord.prototype['period'] = undefined;

/**
 * SID of a Sim resource to which the UsageRecord belongs. Value will only be present when either a value for the `Sim` query parameter is provided or when UsageRecords are grouped by `sim`. Otherwise, the value will be `null`.
 * @member {String} sim_sid
 */
SupersimV1UsageRecord.prototype['sim_sid'] = undefined;






export default SupersimV1UsageRecord;

