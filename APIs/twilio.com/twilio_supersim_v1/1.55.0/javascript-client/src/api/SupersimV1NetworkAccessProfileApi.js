/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListNetworkAccessProfileResponse from '../model/ListNetworkAccessProfileResponse';
import SupersimV1NetworkAccessProfile from '../model/SupersimV1NetworkAccessProfile';

/**
* SupersimV1NetworkAccessProfile service.
* @module api/SupersimV1NetworkAccessProfileApi
* @version 1.55.0
*/
export default class SupersimV1NetworkAccessProfileApi {

    /**
    * Constructs a new SupersimV1NetworkAccessProfileApi. 
    * @alias module:api/SupersimV1NetworkAccessProfileApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkAccessProfile operation.
     * @callback module:api/SupersimV1NetworkAccessProfileApi~createNetworkAccessProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1NetworkAccessProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Network Access Profile
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [networks] List of Network SIDs that this Network Access Profile will allow connections to.
     * @param {String} [uniqueName] An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
     * @param {module:api/SupersimV1NetworkAccessProfileApi~createNetworkAccessProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1NetworkAccessProfile}
     */
    createNetworkAccessProfile(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Networks': this.apiClient.buildCollectionParam(opts['networks'], 'csv'),
        'UniqueName': opts['uniqueName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = SupersimV1NetworkAccessProfile;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/NetworkAccessProfiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchNetworkAccessProfile operation.
     * @callback module:api/SupersimV1NetworkAccessProfileApi~fetchNetworkAccessProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1NetworkAccessProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a Network Access Profile instance from your account.
     * @param {String} sid The SID of the Network Access Profile resource to fetch.
     * @param {module:api/SupersimV1NetworkAccessProfileApi~fetchNetworkAccessProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1NetworkAccessProfile}
     */
    fetchNetworkAccessProfile(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchNetworkAccessProfile");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SupersimV1NetworkAccessProfile;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/NetworkAccessProfiles/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listNetworkAccessProfile operation.
     * @callback module:api/SupersimV1NetworkAccessProfileApi~listNetworkAccessProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListNetworkAccessProfileResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of Network Access Profiles from your account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/SupersimV1NetworkAccessProfileApi~listNetworkAccessProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListNetworkAccessProfileResponse}
     */
    listNetworkAccessProfile(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListNetworkAccessProfileResponse;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/NetworkAccessProfiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkAccessProfile operation.
     * @callback module:api/SupersimV1NetworkAccessProfileApi~updateNetworkAccessProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1NetworkAccessProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the given properties of a Network Access Profile in your account.
     * @param {String} sid The SID of the Network Access Profile to update.
     * @param {Object} opts Optional parameters
     * @param {String} [uniqueName] The new unique name of the Network Access Profile.
     * @param {module:api/SupersimV1NetworkAccessProfileApi~updateNetworkAccessProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1NetworkAccessProfile}
     */
    updateNetworkAccessProfile(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateNetworkAccessProfile");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'UniqueName': opts['uniqueName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = SupersimV1NetworkAccessProfile;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/NetworkAccessProfiles/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
