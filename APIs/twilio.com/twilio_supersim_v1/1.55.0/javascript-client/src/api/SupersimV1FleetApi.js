/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListFleetResponse from '../model/ListFleetResponse';
import SupersimV1Fleet from '../model/SupersimV1Fleet';

/**
* SupersimV1Fleet service.
* @module api/SupersimV1FleetApi
* @version 1.55.0
*/
export default class SupersimV1FleetApi {

    /**
    * Constructs a new SupersimV1FleetApi. 
    * @alias module:api/SupersimV1FleetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createFleet operation.
     * @callback module:api/SupersimV1FleetApi~createFleetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1Fleet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Fleet
     * @param {String} networkAccessProfile The SID or unique name of the Network Access Profile that will control which cellular networks the Fleet's SIMs can connect to.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [dataEnabled] Defines whether SIMs in the Fleet are capable of using 2G/3G/4G/LTE/CAT-M data connectivity. Defaults to `true`.
     * @param {Number} [dataLimit] The total data usage (download and upload combined) in Megabytes that each Super SIM assigned to the Fleet can consume during a billing period (normally one month). Value must be between 1MB (1) and 2TB (2,000,000). Defaults to 1GB (1,000).
     * @param {module:model/String} [ipCommandsMethod] A string representing the HTTP method to use when making a request to `ip_commands_url`. Can be one of `POST` or `GET`. Defaults to `POST`.
     * @param {String} [ipCommandsUrl] The URL that will receive a webhook when a Super SIM in the Fleet is used to send an IP Command from your device to a special IP address. Your server should respond with an HTTP status code in the 200 range; any response body will be ignored.
     * @param {Boolean} [smsCommandsEnabled] Defines whether SIMs in the Fleet are capable of sending and receiving machine-to-machine SMS via Commands. Defaults to `true`.
     * @param {module:model/String} [smsCommandsMethod] A string representing the HTTP method to use when making a request to `sms_commands_url`. Can be one of `POST` or `GET`. Defaults to `POST`.
     * @param {String} [smsCommandsUrl] The URL that will receive a webhook when a Super SIM in the Fleet is used to send an SMS from your device to the SMS Commands number. Your server should respond with an HTTP status code in the 200 range; any response body will be ignored.
     * @param {String} [uniqueName] An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
     * @param {module:api/SupersimV1FleetApi~createFleetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1Fleet}
     */
    createFleet(networkAccessProfile, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkAccessProfile' is set
      if (networkAccessProfile === undefined || networkAccessProfile === null) {
        throw new Error("Missing the required parameter 'networkAccessProfile' when calling createFleet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'DataEnabled': opts['dataEnabled'],
        'DataLimit': opts['dataLimit'],
        'IpCommandsMethod': opts['ipCommandsMethod'],
        'IpCommandsUrl': opts['ipCommandsUrl'],
        'NetworkAccessProfile': networkAccessProfile,
        'SmsCommandsEnabled': opts['smsCommandsEnabled'],
        'SmsCommandsMethod': opts['smsCommandsMethod'],
        'SmsCommandsUrl': opts['smsCommandsUrl'],
        'UniqueName': opts['uniqueName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = SupersimV1Fleet;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Fleets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchFleet operation.
     * @callback module:api/SupersimV1FleetApi~fetchFleetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1Fleet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a Fleet instance from your account.
     * @param {String} sid The SID of the Fleet resource to fetch.
     * @param {module:api/SupersimV1FleetApi~fetchFleetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1Fleet}
     */
    fetchFleet(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchFleet");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SupersimV1Fleet;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Fleets/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listFleet operation.
     * @callback module:api/SupersimV1FleetApi~listFleetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListFleetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of Fleets from your account.
     * @param {Object} opts Optional parameters
     * @param {String} [networkAccessProfile] The SID or unique name of the Network Access Profile that controls which cellular networks the Fleet's SIMs can connect to.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/SupersimV1FleetApi~listFleetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListFleetResponse}
     */
    listFleet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'NetworkAccessProfile': opts['networkAccessProfile'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListFleetResponse;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Fleets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateFleet operation.
     * @callback module:api/SupersimV1FleetApi~updateFleetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1Fleet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the given properties of a Super SIM Fleet instance from your account.
     * @param {String} sid The SID of the Fleet resource to update.
     * @param {Object} opts Optional parameters
     * @param {Number} [dataLimit] The total data usage (download and upload combined) in Megabytes that each Super SIM assigned to the Fleet can consume during a billing period (normally one month). Value must be between 1MB (1) and 2TB (2,000,000). Defaults to 1GB (1,000).
     * @param {module:model/String} [ipCommandsMethod] A string representing the HTTP method to use when making a request to `ip_commands_url`. Can be one of `POST` or `GET`. Defaults to `POST`.
     * @param {String} [ipCommandsUrl] The URL that will receive a webhook when a Super SIM in the Fleet is used to send an IP Command from your device to a special IP address. Your server should respond with an HTTP status code in the 200 range; any response body will be ignored.
     * @param {String} [networkAccessProfile] The SID or unique name of the Network Access Profile that will control which cellular networks the Fleet's SIMs can connect to.
     * @param {module:model/String} [smsCommandsMethod] A string representing the HTTP method to use when making a request to `sms_commands_url`. Can be one of `POST` or `GET`. Defaults to `POST`.
     * @param {String} [smsCommandsUrl] The URL that will receive a webhook when a Super SIM in the Fleet is used to send an SMS from your device to the SMS Commands number. Your server should respond with an HTTP status code in the 200 range; any response body will be ignored.
     * @param {String} [uniqueName] An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
     * @param {module:api/SupersimV1FleetApi~updateFleetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1Fleet}
     */
    updateFleet(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateFleet");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'DataLimit': opts['dataLimit'],
        'IpCommandsMethod': opts['ipCommandsMethod'],
        'IpCommandsUrl': opts['ipCommandsUrl'],
        'NetworkAccessProfile': opts['networkAccessProfile'],
        'SmsCommandsMethod': opts['smsCommandsMethod'],
        'SmsCommandsUrl': opts['smsCommandsUrl'],
        'UniqueName': opts['uniqueName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = SupersimV1Fleet;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Fleets/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
