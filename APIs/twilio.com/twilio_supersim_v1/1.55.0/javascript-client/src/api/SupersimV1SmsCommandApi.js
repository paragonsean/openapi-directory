/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListSmsCommandResponse from '../model/ListSmsCommandResponse';
import SmsCommandEnumDirection from '../model/SmsCommandEnumDirection';
import SmsCommandEnumStatus from '../model/SmsCommandEnumStatus';
import SupersimV1SmsCommand from '../model/SupersimV1SmsCommand';

/**
* SupersimV1SmsCommand service.
* @module api/SupersimV1SmsCommandApi
* @version 1.55.0
*/
export default class SupersimV1SmsCommandApi {

    /**
    * Constructs a new SupersimV1SmsCommandApi. 
    * @alias module:api/SupersimV1SmsCommandApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSmsCommand operation.
     * @callback module:api/SupersimV1SmsCommandApi~createSmsCommandCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1SmsCommand} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send SMS Command to a Sim.
     * @param {String} payload The message body of the SMS Command.
     * @param {String} sim The `sid` or `unique_name` of the [SIM](https://www.twilio.com/docs/iot/supersim/api/sim-resource) to send the SMS Command to.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [callbackMethod] The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
     * @param {String} [callbackUrl] The URL we should call using the `callback_method` after we have sent the command.
     * @param {module:api/SupersimV1SmsCommandApi~createSmsCommandCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1SmsCommand}
     */
    createSmsCommand(payload, sim, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'payload' is set
      if (payload === undefined || payload === null) {
        throw new Error("Missing the required parameter 'payload' when calling createSmsCommand");
      }
      // verify the required parameter 'sim' is set
      if (sim === undefined || sim === null) {
        throw new Error("Missing the required parameter 'sim' when calling createSmsCommand");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CallbackMethod': opts['callbackMethod'],
        'CallbackUrl': opts['callbackUrl'],
        'Payload': payload,
        'Sim': sim
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = SupersimV1SmsCommand;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SmsCommands', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchSmsCommand operation.
     * @callback module:api/SupersimV1SmsCommandApi~fetchSmsCommandCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1SmsCommand} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch SMS Command instance from your account.
     * @param {String} sid The SID of the SMS Command resource to fetch.
     * @param {module:api/SupersimV1SmsCommandApi~fetchSmsCommandCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1SmsCommand}
     */
    fetchSmsCommand(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchSmsCommand");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SupersimV1SmsCommand;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SmsCommands/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listSmsCommand operation.
     * @callback module:api/SupersimV1SmsCommandApi~listSmsCommandCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSmsCommandResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of SMS Commands from your account.
     * @param {Object} opts Optional parameters
     * @param {String} [sim] The SID or unique name of the Sim resource that SMS Command was sent to or from.
     * @param {module:model/SmsCommandEnumStatus} [status] The status of the SMS Command. Can be: `queued`, `sent`, `delivered`, `received` or `failed`. See the [SMS Command Status Values](https://www.twilio.com/docs/iot/supersim/api/smscommand-resource#status-values) for a description of each.
     * @param {module:model/SmsCommandEnumDirection} [direction] The direction of the SMS Command. Can be `to_sim` or `from_sim`. The value of `to_sim` is synonymous with the term `mobile terminated`, and `from_sim` is synonymous with the term `mobile originated`.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/SupersimV1SmsCommandApi~listSmsCommandCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSmsCommandResponse}
     */
    listSmsCommand(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'Sim': opts['sim'],
        'Status': opts['status'],
        'Direction': opts['direction'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSmsCommandResponse;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SmsCommands', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
