/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListNetworkAccessProfileNetworkResponse from '../model/ListNetworkAccessProfileNetworkResponse';
import SupersimV1NetworkAccessProfileNetworkAccessProfileNetwork from '../model/SupersimV1NetworkAccessProfileNetworkAccessProfileNetwork';

/**
* SupersimV1NetworkAccessProfileNetwork service.
* @module api/SupersimV1NetworkAccessProfileNetworkApi
* @version 1.55.0
*/
export default class SupersimV1NetworkAccessProfileNetworkApi {

    /**
    * Constructs a new SupersimV1NetworkAccessProfileNetworkApi. 
    * @alias module:api/SupersimV1NetworkAccessProfileNetworkApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkAccessProfileNetwork operation.
     * @callback module:api/SupersimV1NetworkAccessProfileNetworkApi~createNetworkAccessProfileNetworkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1NetworkAccessProfileNetworkAccessProfileNetwork} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a Network resource to the Network Access Profile resource.
     * @param {String} networkAccessProfileSid The unique string that identifies the Network Access Profile resource.
     * @param {String} network The SID of the Network resource to be added to the Network Access Profile resource.
     * @param {module:api/SupersimV1NetworkAccessProfileNetworkApi~createNetworkAccessProfileNetworkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1NetworkAccessProfileNetworkAccessProfileNetwork}
     */
    createNetworkAccessProfileNetwork(networkAccessProfileSid, network, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkAccessProfileSid' is set
      if (networkAccessProfileSid === undefined || networkAccessProfileSid === null) {
        throw new Error("Missing the required parameter 'networkAccessProfileSid' when calling createNetworkAccessProfileNetwork");
      }
      // verify the required parameter 'network' is set
      if (network === undefined || network === null) {
        throw new Error("Missing the required parameter 'network' when calling createNetworkAccessProfileNetwork");
      }

      let pathParams = {
        'NetworkAccessProfileSid': networkAccessProfileSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Network': network
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = SupersimV1NetworkAccessProfileNetworkAccessProfileNetwork;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/NetworkAccessProfiles/{NetworkAccessProfileSid}/Networks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkAccessProfileNetwork operation.
     * @callback module:api/SupersimV1NetworkAccessProfileNetworkApi~deleteNetworkAccessProfileNetworkCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a Network resource from the Network Access Profile resource's.
     * @param {String} networkAccessProfileSid The unique string that identifies the Network Access Profile resource.
     * @param {String} sid The SID of the Network resource to be removed from the Network Access Profile resource.
     * @param {module:api/SupersimV1NetworkAccessProfileNetworkApi~deleteNetworkAccessProfileNetworkCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkAccessProfileNetwork(networkAccessProfileSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkAccessProfileSid' is set
      if (networkAccessProfileSid === undefined || networkAccessProfileSid === null) {
        throw new Error("Missing the required parameter 'networkAccessProfileSid' when calling deleteNetworkAccessProfileNetwork");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteNetworkAccessProfileNetwork");
      }

      let pathParams = {
        'NetworkAccessProfileSid': networkAccessProfileSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/NetworkAccessProfiles/{NetworkAccessProfileSid}/Networks/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchNetworkAccessProfileNetwork operation.
     * @callback module:api/SupersimV1NetworkAccessProfileNetworkApi~fetchNetworkAccessProfileNetworkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupersimV1NetworkAccessProfileNetworkAccessProfileNetwork} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a Network Access Profile resource's Network resource.
     * @param {String} networkAccessProfileSid The unique string that identifies the Network Access Profile resource.
     * @param {String} sid The SID of the Network resource to fetch.
     * @param {module:api/SupersimV1NetworkAccessProfileNetworkApi~fetchNetworkAccessProfileNetworkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupersimV1NetworkAccessProfileNetworkAccessProfileNetwork}
     */
    fetchNetworkAccessProfileNetwork(networkAccessProfileSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkAccessProfileSid' is set
      if (networkAccessProfileSid === undefined || networkAccessProfileSid === null) {
        throw new Error("Missing the required parameter 'networkAccessProfileSid' when calling fetchNetworkAccessProfileNetwork");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchNetworkAccessProfileNetwork");
      }

      let pathParams = {
        'NetworkAccessProfileSid': networkAccessProfileSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SupersimV1NetworkAccessProfileNetworkAccessProfileNetwork;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/NetworkAccessProfiles/{NetworkAccessProfileSid}/Networks/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listNetworkAccessProfileNetwork operation.
     * @callback module:api/SupersimV1NetworkAccessProfileNetworkApi~listNetworkAccessProfileNetworkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListNetworkAccessProfileNetworkResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of Network Access Profile resource's Network resource.
     * @param {String} networkAccessProfileSid The unique string that identifies the Network Access Profile resource.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/SupersimV1NetworkAccessProfileNetworkApi~listNetworkAccessProfileNetworkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListNetworkAccessProfileNetworkResponse}
     */
    listNetworkAccessProfileNetwork(networkAccessProfileSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkAccessProfileSid' is set
      if (networkAccessProfileSid === undefined || networkAccessProfileSid === null) {
        throw new Error("Missing the required parameter 'networkAccessProfileSid' when calling listNetworkAccessProfileNetwork");
      }

      let pathParams = {
        'NetworkAccessProfileSid': networkAccessProfileSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListNetworkAccessProfileNetworkResponse;
      let basePaths = ['https://supersim.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/NetworkAccessProfiles/{NetworkAccessProfileSid}/Networks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
