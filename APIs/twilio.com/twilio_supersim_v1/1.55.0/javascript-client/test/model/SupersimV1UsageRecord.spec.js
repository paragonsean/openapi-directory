/**
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioSupersim);
  }
}(this, function(expect, TwilioSupersim) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioSupersim.SupersimV1UsageRecord();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SupersimV1UsageRecord', function() {
    it('should create an instance of SupersimV1UsageRecord', function() {
      // uncomment below and update the code to test SupersimV1UsageRecord
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be.a(TwilioSupersim.SupersimV1UsageRecord);
    });

    it('should have the property accountSid (base name: "account_sid")', function() {
      // uncomment below and update the code to test the property accountSid
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property billedUnit (base name: "billed_unit")', function() {
      // uncomment below and update the code to test the property billedUnit
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property dataDownload (base name: "data_download")', function() {
      // uncomment below and update the code to test the property dataDownload
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property dataTotal (base name: "data_total")', function() {
      // uncomment below and update the code to test the property dataTotal
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property dataTotalBilled (base name: "data_total_billed")', function() {
      // uncomment below and update the code to test the property dataTotalBilled
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property dataUpload (base name: "data_upload")', function() {
      // uncomment below and update the code to test the property dataUpload
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property fleetSid (base name: "fleet_sid")', function() {
      // uncomment below and update the code to test the property fleetSid
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property isoCountry (base name: "iso_country")', function() {
      // uncomment below and update the code to test the property isoCountry
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property networkSid (base name: "network_sid")', function() {
      // uncomment below and update the code to test the property networkSid
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property period (base name: "period")', function() {
      // uncomment below and update the code to test the property period
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

    it('should have the property simSid (base name: "sim_sid")', function() {
      // uncomment below and update the code to test the property simSid
      //var instance = new TwilioSupersim.SupersimV1UsageRecord();
      //expect(instance).to.be();
    });

  });

}));
