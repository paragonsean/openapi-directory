/*
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BrandVettingEnumVettingProvider;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MessagingV1BrandRegistrationsBrandVetting
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:38.826816-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MessagingV1BrandRegistrationsBrandVetting {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_BRAND_SID = "brand_sid";
  @SerializedName(SERIALIZED_NAME_BRAND_SID)
  private String brandSid;

  public static final String SERIALIZED_NAME_BRAND_VETTING_SID = "brand_vetting_sid";
  @SerializedName(SERIALIZED_NAME_BRAND_VETTING_SID)
  private String brandVettingSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_VETTING_CLASS = "vetting_class";
  @SerializedName(SERIALIZED_NAME_VETTING_CLASS)
  private String vettingClass;

  public static final String SERIALIZED_NAME_VETTING_ID = "vetting_id";
  @SerializedName(SERIALIZED_NAME_VETTING_ID)
  private String vettingId;

  public static final String SERIALIZED_NAME_VETTING_PROVIDER = "vetting_provider";
  @SerializedName(SERIALIZED_NAME_VETTING_PROVIDER)
  private BrandVettingEnumVettingProvider vettingProvider;

  public static final String SERIALIZED_NAME_VETTING_STATUS = "vetting_status";
  @SerializedName(SERIALIZED_NAME_VETTING_STATUS)
  private String vettingStatus;

  public MessagingV1BrandRegistrationsBrandVetting() {
  }

  public MessagingV1BrandRegistrationsBrandVetting accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the vetting record.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public MessagingV1BrandRegistrationsBrandVetting brandSid(String brandSid) {
    this.brandSid = brandSid;
    return this;
  }

  /**
   * The unique string to identify Brand Registration.
   * @return brandSid
   */
  @javax.annotation.Nullable
  public String getBrandSid() {
    return brandSid;
  }

  public void setBrandSid(String brandSid) {
    this.brandSid = brandSid;
  }


  public MessagingV1BrandRegistrationsBrandVetting brandVettingSid(String brandVettingSid) {
    this.brandVettingSid = brandVettingSid;
    return this;
  }

  /**
   * The Twilio SID of the third-party vetting record.
   * @return brandVettingSid
   */
  @javax.annotation.Nullable
  public String getBrandVettingSid() {
    return brandVettingSid;
  }

  public void setBrandVettingSid(String brandVettingSid) {
    this.brandVettingSid = brandVettingSid;
  }


  public MessagingV1BrandRegistrationsBrandVetting dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public MessagingV1BrandRegistrationsBrandVetting dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public MessagingV1BrandRegistrationsBrandVetting url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Brand Vetting resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public MessagingV1BrandRegistrationsBrandVetting vettingClass(String vettingClass) {
    this.vettingClass = vettingClass;
    return this;
  }

  /**
   * The type of vetting that has been conducted. One of “STANDARD” (Aegis) or “POLITICAL” (Campaign Verify).
   * @return vettingClass
   */
  @javax.annotation.Nullable
  public String getVettingClass() {
    return vettingClass;
  }

  public void setVettingClass(String vettingClass) {
    this.vettingClass = vettingClass;
  }


  public MessagingV1BrandRegistrationsBrandVetting vettingId(String vettingId) {
    this.vettingId = vettingId;
    return this;
  }

  /**
   * The unique identifier of the vetting from the third-party provider.
   * @return vettingId
   */
  @javax.annotation.Nullable
  public String getVettingId() {
    return vettingId;
  }

  public void setVettingId(String vettingId) {
    this.vettingId = vettingId;
  }


  public MessagingV1BrandRegistrationsBrandVetting vettingProvider(BrandVettingEnumVettingProvider vettingProvider) {
    this.vettingProvider = vettingProvider;
    return this;
  }

  /**
   * Get vettingProvider
   * @return vettingProvider
   */
  @javax.annotation.Nullable
  public BrandVettingEnumVettingProvider getVettingProvider() {
    return vettingProvider;
  }

  public void setVettingProvider(BrandVettingEnumVettingProvider vettingProvider) {
    this.vettingProvider = vettingProvider;
  }


  public MessagingV1BrandRegistrationsBrandVetting vettingStatus(String vettingStatus) {
    this.vettingStatus = vettingStatus;
    return this;
  }

  /**
   * The status of the import vetting attempt. One of “PENDING,” “SUCCESS,” or “FAILED”.
   * @return vettingStatus
   */
  @javax.annotation.Nullable
  public String getVettingStatus() {
    return vettingStatus;
  }

  public void setVettingStatus(String vettingStatus) {
    this.vettingStatus = vettingStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessagingV1BrandRegistrationsBrandVetting messagingV1BrandRegistrationsBrandVetting = (MessagingV1BrandRegistrationsBrandVetting) o;
    return Objects.equals(this.accountSid, messagingV1BrandRegistrationsBrandVetting.accountSid) &&
        Objects.equals(this.brandSid, messagingV1BrandRegistrationsBrandVetting.brandSid) &&
        Objects.equals(this.brandVettingSid, messagingV1BrandRegistrationsBrandVetting.brandVettingSid) &&
        Objects.equals(this.dateCreated, messagingV1BrandRegistrationsBrandVetting.dateCreated) &&
        Objects.equals(this.dateUpdated, messagingV1BrandRegistrationsBrandVetting.dateUpdated) &&
        Objects.equals(this.url, messagingV1BrandRegistrationsBrandVetting.url) &&
        Objects.equals(this.vettingClass, messagingV1BrandRegistrationsBrandVetting.vettingClass) &&
        Objects.equals(this.vettingId, messagingV1BrandRegistrationsBrandVetting.vettingId) &&
        Objects.equals(this.vettingProvider, messagingV1BrandRegistrationsBrandVetting.vettingProvider) &&
        Objects.equals(this.vettingStatus, messagingV1BrandRegistrationsBrandVetting.vettingStatus);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, brandSid, brandVettingSid, dateCreated, dateUpdated, url, vettingClass, vettingId, vettingProvider, vettingStatus);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessagingV1BrandRegistrationsBrandVetting {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    brandSid: ").append(toIndentedString(brandSid)).append("\n");
    sb.append("    brandVettingSid: ").append(toIndentedString(brandVettingSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    vettingClass: ").append(toIndentedString(vettingClass)).append("\n");
    sb.append("    vettingId: ").append(toIndentedString(vettingId)).append("\n");
    sb.append("    vettingProvider: ").append(toIndentedString(vettingProvider)).append("\n");
    sb.append("    vettingStatus: ").append(toIndentedString(vettingStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("brand_sid");
    openapiFields.add("brand_vetting_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("url");
    openapiFields.add("vetting_class");
    openapiFields.add("vetting_id");
    openapiFields.add("vetting_provider");
    openapiFields.add("vetting_status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MessagingV1BrandRegistrationsBrandVetting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MessagingV1BrandRegistrationsBrandVetting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MessagingV1BrandRegistrationsBrandVetting is not found in the empty JSON string", MessagingV1BrandRegistrationsBrandVetting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MessagingV1BrandRegistrationsBrandVetting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MessagingV1BrandRegistrationsBrandVetting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("brand_sid") != null && !jsonObj.get("brand_sid").isJsonNull()) && !jsonObj.get("brand_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand_sid").toString()));
      }
      if ((jsonObj.get("brand_vetting_sid") != null && !jsonObj.get("brand_vetting_sid").isJsonNull()) && !jsonObj.get("brand_vetting_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand_vetting_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand_vetting_sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("vetting_class") != null && !jsonObj.get("vetting_class").isJsonNull()) && !jsonObj.get("vetting_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vetting_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vetting_class").toString()));
      }
      if ((jsonObj.get("vetting_id") != null && !jsonObj.get("vetting_id").isJsonNull()) && !jsonObj.get("vetting_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vetting_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vetting_id").toString()));
      }
      if ((jsonObj.get("vetting_provider") != null && !jsonObj.get("vetting_provider").isJsonNull()) && !jsonObj.get("vetting_provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vetting_provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vetting_provider").toString()));
      }
      // validate the optional field `vetting_provider`
      if (jsonObj.get("vetting_provider") != null && !jsonObj.get("vetting_provider").isJsonNull()) {
        BrandVettingEnumVettingProvider.validateJsonElement(jsonObj.get("vetting_provider"));
      }
      if ((jsonObj.get("vetting_status") != null && !jsonObj.get("vetting_status").isJsonNull()) && !jsonObj.get("vetting_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vetting_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vetting_status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MessagingV1BrandRegistrationsBrandVetting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MessagingV1BrandRegistrationsBrandVetting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MessagingV1BrandRegistrationsBrandVetting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MessagingV1BrandRegistrationsBrandVetting.class));

       return (TypeAdapter<T>) new TypeAdapter<MessagingV1BrandRegistrationsBrandVetting>() {
           @Override
           public void write(JsonWriter out, MessagingV1BrandRegistrationsBrandVetting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MessagingV1BrandRegistrationsBrandVetting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MessagingV1BrandRegistrationsBrandVetting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MessagingV1BrandRegistrationsBrandVetting
   * @throws IOException if the JSON string is invalid with respect to MessagingV1BrandRegistrationsBrandVetting
   */
  public static MessagingV1BrandRegistrationsBrandVetting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MessagingV1BrandRegistrationsBrandVetting.class);
  }

  /**
   * Convert an instance of MessagingV1BrandRegistrationsBrandVetting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

