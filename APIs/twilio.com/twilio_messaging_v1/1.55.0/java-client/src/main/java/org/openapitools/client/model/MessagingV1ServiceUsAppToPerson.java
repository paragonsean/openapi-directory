/*
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MessagingV1ServiceUsAppToPerson
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:38.826816-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MessagingV1ServiceUsAppToPerson {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_AGE_GATED = "age_gated";
  @SerializedName(SERIALIZED_NAME_AGE_GATED)
  private Boolean ageGated;

  public static final String SERIALIZED_NAME_BRAND_REGISTRATION_SID = "brand_registration_sid";
  @SerializedName(SERIALIZED_NAME_BRAND_REGISTRATION_SID)
  private String brandRegistrationSid;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaign_id";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private String campaignId;

  public static final String SERIALIZED_NAME_CAMPAIGN_STATUS = "campaign_status";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_STATUS)
  private String campaignStatus;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DIRECT_LENDING = "direct_lending";
  @SerializedName(SERIALIZED_NAME_DIRECT_LENDING)
  private Boolean directLending;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<Object> errors;

  public static final String SERIALIZED_NAME_HAS_EMBEDDED_LINKS = "has_embedded_links";
  @SerializedName(SERIALIZED_NAME_HAS_EMBEDDED_LINKS)
  private Boolean hasEmbeddedLinks;

  public static final String SERIALIZED_NAME_HAS_EMBEDDED_PHONE = "has_embedded_phone";
  @SerializedName(SERIALIZED_NAME_HAS_EMBEDDED_PHONE)
  private Boolean hasEmbeddedPhone;

  public static final String SERIALIZED_NAME_HELP_KEYWORDS = "help_keywords";
  @SerializedName(SERIALIZED_NAME_HELP_KEYWORDS)
  private List<String> helpKeywords;

  public static final String SERIALIZED_NAME_HELP_MESSAGE = "help_message";
  @SerializedName(SERIALIZED_NAME_HELP_MESSAGE)
  private String helpMessage;

  public static final String SERIALIZED_NAME_IS_EXTERNALLY_REGISTERED = "is_externally_registered";
  @SerializedName(SERIALIZED_NAME_IS_EXTERNALLY_REGISTERED)
  private Boolean isExternallyRegistered;

  public static final String SERIALIZED_NAME_MESSAGE_FLOW = "message_flow";
  @SerializedName(SERIALIZED_NAME_MESSAGE_FLOW)
  private String messageFlow;

  public static final String SERIALIZED_NAME_MESSAGE_SAMPLES = "message_samples";
  @SerializedName(SERIALIZED_NAME_MESSAGE_SAMPLES)
  private List<String> messageSamples;

  public static final String SERIALIZED_NAME_MESSAGING_SERVICE_SID = "messaging_service_sid";
  @SerializedName(SERIALIZED_NAME_MESSAGING_SERVICE_SID)
  private String messagingServiceSid;

  public static final String SERIALIZED_NAME_MOCK = "mock";
  @SerializedName(SERIALIZED_NAME_MOCK)
  private Boolean mock;

  public static final String SERIALIZED_NAME_OPT_IN_KEYWORDS = "opt_in_keywords";
  @SerializedName(SERIALIZED_NAME_OPT_IN_KEYWORDS)
  private List<String> optInKeywords;

  public static final String SERIALIZED_NAME_OPT_IN_MESSAGE = "opt_in_message";
  @SerializedName(SERIALIZED_NAME_OPT_IN_MESSAGE)
  private String optInMessage;

  public static final String SERIALIZED_NAME_OPT_OUT_KEYWORDS = "opt_out_keywords";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_KEYWORDS)
  private List<String> optOutKeywords;

  public static final String SERIALIZED_NAME_OPT_OUT_MESSAGE = "opt_out_message";
  @SerializedName(SERIALIZED_NAME_OPT_OUT_MESSAGE)
  private String optOutMessage;

  public static final String SERIALIZED_NAME_RATE_LIMITS = "rate_limits";
  @SerializedName(SERIALIZED_NAME_RATE_LIMITS)
  private Object rateLimits = null;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_SUBSCRIBER_OPT_IN = "subscriber_opt_in";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBER_OPT_IN)
  private Boolean subscriberOptIn;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_US_APP_TO_PERSON_USECASE = "us_app_to_person_usecase";
  @SerializedName(SERIALIZED_NAME_US_APP_TO_PERSON_USECASE)
  private String usAppToPersonUsecase;

  public MessagingV1ServiceUsAppToPerson() {
  }

  public MessagingV1ServiceUsAppToPerson accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the Campaign belongs to.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public MessagingV1ServiceUsAppToPerson ageGated(Boolean ageGated) {
    this.ageGated = ageGated;
    return this;
  }

  /**
   * A boolean that specifies whether campaign is age gated or not.
   * @return ageGated
   */
  @javax.annotation.Nullable
  public Boolean getAgeGated() {
    return ageGated;
  }

  public void setAgeGated(Boolean ageGated) {
    this.ageGated = ageGated;
  }


  public MessagingV1ServiceUsAppToPerson brandRegistrationSid(String brandRegistrationSid) {
    this.brandRegistrationSid = brandRegistrationSid;
    return this;
  }

  /**
   * The unique string to identify the A2P brand.
   * @return brandRegistrationSid
   */
  @javax.annotation.Nullable
  public String getBrandRegistrationSid() {
    return brandRegistrationSid;
  }

  public void setBrandRegistrationSid(String brandRegistrationSid) {
    this.brandRegistrationSid = brandRegistrationSid;
  }


  public MessagingV1ServiceUsAppToPerson campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

  /**
   * The Campaign Registry (TCR) Campaign ID.
   * @return campaignId
   */
  @javax.annotation.Nullable
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }


  public MessagingV1ServiceUsAppToPerson campaignStatus(String campaignStatus) {
    this.campaignStatus = campaignStatus;
    return this;
  }

  /**
   * Campaign status. Examples: IN_PROGRESS, VERIFIED, FAILED.
   * @return campaignStatus
   */
  @javax.annotation.Nullable
  public String getCampaignStatus() {
    return campaignStatus;
  }

  public void setCampaignStatus(String campaignStatus) {
    this.campaignStatus = campaignStatus;
  }


  public MessagingV1ServiceUsAppToPerson dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public MessagingV1ServiceUsAppToPerson dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public MessagingV1ServiceUsAppToPerson description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A short description of what this SMS campaign does. Min length: 40 characters. Max length: 4096 characters.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public MessagingV1ServiceUsAppToPerson directLending(Boolean directLending) {
    this.directLending = directLending;
    return this;
  }

  /**
   * A boolean that specifies whether campaign allows direct lending or not.
   * @return directLending
   */
  @javax.annotation.Nullable
  public Boolean getDirectLending() {
    return directLending;
  }

  public void setDirectLending(Boolean directLending) {
    this.directLending = directLending;
  }


  public MessagingV1ServiceUsAppToPerson errors(List<Object> errors) {
    this.errors = errors;
    return this;
  }

  public MessagingV1ServiceUsAppToPerson addErrorsItem(Object errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Details indicating why a campaign registration failed. These errors can indicate one or more fields that were incorrect or did not meet review requirements.
   * @return errors
   */
  @javax.annotation.Nullable
  public List<Object> getErrors() {
    return errors;
  }

  public void setErrors(List<Object> errors) {
    this.errors = errors;
  }


  public MessagingV1ServiceUsAppToPerson hasEmbeddedLinks(Boolean hasEmbeddedLinks) {
    this.hasEmbeddedLinks = hasEmbeddedLinks;
    return this;
  }

  /**
   * Indicate that this SMS campaign will send messages that contain links.
   * @return hasEmbeddedLinks
   */
  @javax.annotation.Nullable
  public Boolean getHasEmbeddedLinks() {
    return hasEmbeddedLinks;
  }

  public void setHasEmbeddedLinks(Boolean hasEmbeddedLinks) {
    this.hasEmbeddedLinks = hasEmbeddedLinks;
  }


  public MessagingV1ServiceUsAppToPerson hasEmbeddedPhone(Boolean hasEmbeddedPhone) {
    this.hasEmbeddedPhone = hasEmbeddedPhone;
    return this;
  }

  /**
   * Indicates that this SMS campaign will send messages that contain phone numbers.
   * @return hasEmbeddedPhone
   */
  @javax.annotation.Nullable
  public Boolean getHasEmbeddedPhone() {
    return hasEmbeddedPhone;
  }

  public void setHasEmbeddedPhone(Boolean hasEmbeddedPhone) {
    this.hasEmbeddedPhone = hasEmbeddedPhone;
  }


  public MessagingV1ServiceUsAppToPerson helpKeywords(List<String> helpKeywords) {
    this.helpKeywords = helpKeywords;
    return this;
  }

  public MessagingV1ServiceUsAppToPerson addHelpKeywordsItem(String helpKeywordsItem) {
    if (this.helpKeywords == null) {
      this.helpKeywords = new ArrayList<>();
    }
    this.helpKeywords.add(helpKeywordsItem);
    return this;
  }

  /**
   * End users should be able to text in a keyword to receive help. Those keywords must be provided as part of the campaign registration request. This field is required if managing help keywords yourself (i.e. not using Twilio&#39;s Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.
   * @return helpKeywords
   */
  @javax.annotation.Nullable
  public List<String> getHelpKeywords() {
    return helpKeywords;
  }

  public void setHelpKeywords(List<String> helpKeywords) {
    this.helpKeywords = helpKeywords;
  }


  public MessagingV1ServiceUsAppToPerson helpMessage(String helpMessage) {
    this.helpMessage = helpMessage;
    return this;
  }

  /**
   * When customers receive the help keywords from their end users, Twilio customers are expected to send back an auto-generated response; this may include the brand name and additional support contact information. This field is required if managing help keywords yourself (i.e. not using Twilio&#39;s Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.
   * @return helpMessage
   */
  @javax.annotation.Nullable
  public String getHelpMessage() {
    return helpMessage;
  }

  public void setHelpMessage(String helpMessage) {
    this.helpMessage = helpMessage;
  }


  public MessagingV1ServiceUsAppToPerson isExternallyRegistered(Boolean isExternallyRegistered) {
    this.isExternallyRegistered = isExternallyRegistered;
    return this;
  }

  /**
   * Indicates whether the campaign was registered externally or not.
   * @return isExternallyRegistered
   */
  @javax.annotation.Nullable
  public Boolean getIsExternallyRegistered() {
    return isExternallyRegistered;
  }

  public void setIsExternallyRegistered(Boolean isExternallyRegistered) {
    this.isExternallyRegistered = isExternallyRegistered;
  }


  public MessagingV1ServiceUsAppToPerson messageFlow(String messageFlow) {
    this.messageFlow = messageFlow;
    return this;
  }

  /**
   * Details around how a consumer opts-in to their campaign, therefore giving consent to receive their messages. If multiple opt-in methods can be used for the same campaign, they must all be listed. 40 character minimum. 2048 character maximum.
   * @return messageFlow
   */
  @javax.annotation.Nullable
  public String getMessageFlow() {
    return messageFlow;
  }

  public void setMessageFlow(String messageFlow) {
    this.messageFlow = messageFlow;
  }


  public MessagingV1ServiceUsAppToPerson messageSamples(List<String> messageSamples) {
    this.messageSamples = messageSamples;
    return this;
  }

  public MessagingV1ServiceUsAppToPerson addMessageSamplesItem(String messageSamplesItem) {
    if (this.messageSamples == null) {
      this.messageSamples = new ArrayList<>();
    }
    this.messageSamples.add(messageSamplesItem);
    return this;
  }

  /**
   * An array of sample message strings, min two and max five. Min length for each sample: 20 chars. Max length for each sample: 1024 chars.
   * @return messageSamples
   */
  @javax.annotation.Nullable
  public List<String> getMessageSamples() {
    return messageSamples;
  }

  public void setMessageSamples(List<String> messageSamples) {
    this.messageSamples = messageSamples;
  }


  public MessagingV1ServiceUsAppToPerson messagingServiceSid(String messagingServiceSid) {
    this.messagingServiceSid = messagingServiceSid;
    return this;
  }

  /**
   * The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) that the resource is associated with.
   * @return messagingServiceSid
   */
  @javax.annotation.Nullable
  public String getMessagingServiceSid() {
    return messagingServiceSid;
  }

  public void setMessagingServiceSid(String messagingServiceSid) {
    this.messagingServiceSid = messagingServiceSid;
  }


  public MessagingV1ServiceUsAppToPerson mock(Boolean mock) {
    this.mock = mock;
    return this;
  }

  /**
   * A boolean that specifies whether campaign is a mock or not. Mock campaigns will be automatically created if using a mock brand. Mock campaigns should only be used for testing purposes.
   * @return mock
   */
  @javax.annotation.Nullable
  public Boolean getMock() {
    return mock;
  }

  public void setMock(Boolean mock) {
    this.mock = mock;
  }


  public MessagingV1ServiceUsAppToPerson optInKeywords(List<String> optInKeywords) {
    this.optInKeywords = optInKeywords;
    return this;
  }

  public MessagingV1ServiceUsAppToPerson addOptInKeywordsItem(String optInKeywordsItem) {
    if (this.optInKeywords == null) {
      this.optInKeywords = new ArrayList<>();
    }
    this.optInKeywords.add(optInKeywordsItem);
    return this;
  }

  /**
   * If end users can text in a keyword to start receiving messages from this campaign, those keywords must be provided. This field is required if end users can text in a keyword to start receiving messages from this campaign. Values must be alphanumeric. 255 character maximum.
   * @return optInKeywords
   */
  @javax.annotation.Nullable
  public List<String> getOptInKeywords() {
    return optInKeywords;
  }

  public void setOptInKeywords(List<String> optInKeywords) {
    this.optInKeywords = optInKeywords;
  }


  public MessagingV1ServiceUsAppToPerson optInMessage(String optInMessage) {
    this.optInMessage = optInMessage;
    return this;
  }

  /**
   * If end users can text in a keyword to start receiving messages from this campaign, the auto-reply messages sent to the end users must be provided. The opt-in response should include the Brand name, confirmation of opt-in enrollment to a recurring message campaign, how to get help, and clear description of how to opt-out. This field is required if end users can text in a keyword to start receiving messages from this campaign. 20 character minimum. 320 character maximum.
   * @return optInMessage
   */
  @javax.annotation.Nullable
  public String getOptInMessage() {
    return optInMessage;
  }

  public void setOptInMessage(String optInMessage) {
    this.optInMessage = optInMessage;
  }


  public MessagingV1ServiceUsAppToPerson optOutKeywords(List<String> optOutKeywords) {
    this.optOutKeywords = optOutKeywords;
    return this;
  }

  public MessagingV1ServiceUsAppToPerson addOptOutKeywordsItem(String optOutKeywordsItem) {
    if (this.optOutKeywords == null) {
      this.optOutKeywords = new ArrayList<>();
    }
    this.optOutKeywords.add(optOutKeywordsItem);
    return this;
  }

  /**
   * End users should be able to text in a keyword to stop receiving messages from this campaign. Those keywords must be provided. This field is required if managing opt out keywords yourself (i.e. not using Twilio&#39;s Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.
   * @return optOutKeywords
   */
  @javax.annotation.Nullable
  public List<String> getOptOutKeywords() {
    return optOutKeywords;
  }

  public void setOptOutKeywords(List<String> optOutKeywords) {
    this.optOutKeywords = optOutKeywords;
  }


  public MessagingV1ServiceUsAppToPerson optOutMessage(String optOutMessage) {
    this.optOutMessage = optOutMessage;
    return this;
  }

  /**
   * Upon receiving the opt-out keywords from the end users, Twilio customers are expected to send back an auto-generated response, which must provide acknowledgment of the opt-out request and confirmation that no further messages will be sent. It is also recommended that these opt-out messages include the brand name. This field is required if managing opt out keywords yourself (i.e. not using Twilio&#39;s Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.
   * @return optOutMessage
   */
  @javax.annotation.Nullable
  public String getOptOutMessage() {
    return optOutMessage;
  }

  public void setOptOutMessage(String optOutMessage) {
    this.optOutMessage = optOutMessage;
  }


  public MessagingV1ServiceUsAppToPerson rateLimits(Object rateLimits) {
    this.rateLimits = rateLimits;
    return this;
  }

  /**
   * Rate limit and/or classification set by each carrier, Ex. AT&amp;T or T-Mobile.
   * @return rateLimits
   */
  @javax.annotation.Nullable
  public Object getRateLimits() {
    return rateLimits;
  }

  public void setRateLimits(Object rateLimits) {
    this.rateLimits = rateLimits;
  }


  public MessagingV1ServiceUsAppToPerson sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that identifies a US A2P Compliance resource &#x60;QE2c6890da8086d771620e9b13fadeba0b&#x60;.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public MessagingV1ServiceUsAppToPerson subscriberOptIn(Boolean subscriberOptIn) {
    this.subscriberOptIn = subscriberOptIn;
    return this;
  }

  /**
   * A boolean that specifies whether campaign has Subscriber Optin or not.
   * @return subscriberOptIn
   */
  @javax.annotation.Nullable
  public Boolean getSubscriberOptIn() {
    return subscriberOptIn;
  }

  public void setSubscriberOptIn(Boolean subscriberOptIn) {
    this.subscriberOptIn = subscriberOptIn;
  }


  public MessagingV1ServiceUsAppToPerson url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the US App to Person resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public MessagingV1ServiceUsAppToPerson usAppToPersonUsecase(String usAppToPersonUsecase) {
    this.usAppToPersonUsecase = usAppToPersonUsecase;
    return this;
  }

  /**
   * A2P Campaign Use Case. Examples: [ 2FA, EMERGENCY, MARKETING, SOLE_PROPRIETOR...]. SOLE_PROPRIETOR campaign use cases can only be created by SOLE_PROPRIETOR Brands, and there can only be one SOLE_PROPRIETOR campaign created per SOLE_PROPRIETOR Brand.
   * @return usAppToPersonUsecase
   */
  @javax.annotation.Nullable
  public String getUsAppToPersonUsecase() {
    return usAppToPersonUsecase;
  }

  public void setUsAppToPersonUsecase(String usAppToPersonUsecase) {
    this.usAppToPersonUsecase = usAppToPersonUsecase;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessagingV1ServiceUsAppToPerson messagingV1ServiceUsAppToPerson = (MessagingV1ServiceUsAppToPerson) o;
    return Objects.equals(this.accountSid, messagingV1ServiceUsAppToPerson.accountSid) &&
        Objects.equals(this.ageGated, messagingV1ServiceUsAppToPerson.ageGated) &&
        Objects.equals(this.brandRegistrationSid, messagingV1ServiceUsAppToPerson.brandRegistrationSid) &&
        Objects.equals(this.campaignId, messagingV1ServiceUsAppToPerson.campaignId) &&
        Objects.equals(this.campaignStatus, messagingV1ServiceUsAppToPerson.campaignStatus) &&
        Objects.equals(this.dateCreated, messagingV1ServiceUsAppToPerson.dateCreated) &&
        Objects.equals(this.dateUpdated, messagingV1ServiceUsAppToPerson.dateUpdated) &&
        Objects.equals(this.description, messagingV1ServiceUsAppToPerson.description) &&
        Objects.equals(this.directLending, messagingV1ServiceUsAppToPerson.directLending) &&
        Objects.equals(this.errors, messagingV1ServiceUsAppToPerson.errors) &&
        Objects.equals(this.hasEmbeddedLinks, messagingV1ServiceUsAppToPerson.hasEmbeddedLinks) &&
        Objects.equals(this.hasEmbeddedPhone, messagingV1ServiceUsAppToPerson.hasEmbeddedPhone) &&
        Objects.equals(this.helpKeywords, messagingV1ServiceUsAppToPerson.helpKeywords) &&
        Objects.equals(this.helpMessage, messagingV1ServiceUsAppToPerson.helpMessage) &&
        Objects.equals(this.isExternallyRegistered, messagingV1ServiceUsAppToPerson.isExternallyRegistered) &&
        Objects.equals(this.messageFlow, messagingV1ServiceUsAppToPerson.messageFlow) &&
        Objects.equals(this.messageSamples, messagingV1ServiceUsAppToPerson.messageSamples) &&
        Objects.equals(this.messagingServiceSid, messagingV1ServiceUsAppToPerson.messagingServiceSid) &&
        Objects.equals(this.mock, messagingV1ServiceUsAppToPerson.mock) &&
        Objects.equals(this.optInKeywords, messagingV1ServiceUsAppToPerson.optInKeywords) &&
        Objects.equals(this.optInMessage, messagingV1ServiceUsAppToPerson.optInMessage) &&
        Objects.equals(this.optOutKeywords, messagingV1ServiceUsAppToPerson.optOutKeywords) &&
        Objects.equals(this.optOutMessage, messagingV1ServiceUsAppToPerson.optOutMessage) &&
        Objects.equals(this.rateLimits, messagingV1ServiceUsAppToPerson.rateLimits) &&
        Objects.equals(this.sid, messagingV1ServiceUsAppToPerson.sid) &&
        Objects.equals(this.subscriberOptIn, messagingV1ServiceUsAppToPerson.subscriberOptIn) &&
        Objects.equals(this.url, messagingV1ServiceUsAppToPerson.url) &&
        Objects.equals(this.usAppToPersonUsecase, messagingV1ServiceUsAppToPerson.usAppToPersonUsecase);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, ageGated, brandRegistrationSid, campaignId, campaignStatus, dateCreated, dateUpdated, description, directLending, errors, hasEmbeddedLinks, hasEmbeddedPhone, helpKeywords, helpMessage, isExternallyRegistered, messageFlow, messageSamples, messagingServiceSid, mock, optInKeywords, optInMessage, optOutKeywords, optOutMessage, rateLimits, sid, subscriberOptIn, url, usAppToPersonUsecase);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessagingV1ServiceUsAppToPerson {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    ageGated: ").append(toIndentedString(ageGated)).append("\n");
    sb.append("    brandRegistrationSid: ").append(toIndentedString(brandRegistrationSid)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    campaignStatus: ").append(toIndentedString(campaignStatus)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    directLending: ").append(toIndentedString(directLending)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    hasEmbeddedLinks: ").append(toIndentedString(hasEmbeddedLinks)).append("\n");
    sb.append("    hasEmbeddedPhone: ").append(toIndentedString(hasEmbeddedPhone)).append("\n");
    sb.append("    helpKeywords: ").append(toIndentedString(helpKeywords)).append("\n");
    sb.append("    helpMessage: ").append(toIndentedString(helpMessage)).append("\n");
    sb.append("    isExternallyRegistered: ").append(toIndentedString(isExternallyRegistered)).append("\n");
    sb.append("    messageFlow: ").append(toIndentedString(messageFlow)).append("\n");
    sb.append("    messageSamples: ").append(toIndentedString(messageSamples)).append("\n");
    sb.append("    messagingServiceSid: ").append(toIndentedString(messagingServiceSid)).append("\n");
    sb.append("    mock: ").append(toIndentedString(mock)).append("\n");
    sb.append("    optInKeywords: ").append(toIndentedString(optInKeywords)).append("\n");
    sb.append("    optInMessage: ").append(toIndentedString(optInMessage)).append("\n");
    sb.append("    optOutKeywords: ").append(toIndentedString(optOutKeywords)).append("\n");
    sb.append("    optOutMessage: ").append(toIndentedString(optOutMessage)).append("\n");
    sb.append("    rateLimits: ").append(toIndentedString(rateLimits)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    subscriberOptIn: ").append(toIndentedString(subscriberOptIn)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    usAppToPersonUsecase: ").append(toIndentedString(usAppToPersonUsecase)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("age_gated");
    openapiFields.add("brand_registration_sid");
    openapiFields.add("campaign_id");
    openapiFields.add("campaign_status");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("description");
    openapiFields.add("direct_lending");
    openapiFields.add("errors");
    openapiFields.add("has_embedded_links");
    openapiFields.add("has_embedded_phone");
    openapiFields.add("help_keywords");
    openapiFields.add("help_message");
    openapiFields.add("is_externally_registered");
    openapiFields.add("message_flow");
    openapiFields.add("message_samples");
    openapiFields.add("messaging_service_sid");
    openapiFields.add("mock");
    openapiFields.add("opt_in_keywords");
    openapiFields.add("opt_in_message");
    openapiFields.add("opt_out_keywords");
    openapiFields.add("opt_out_message");
    openapiFields.add("rate_limits");
    openapiFields.add("sid");
    openapiFields.add("subscriber_opt_in");
    openapiFields.add("url");
    openapiFields.add("us_app_to_person_usecase");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MessagingV1ServiceUsAppToPerson
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MessagingV1ServiceUsAppToPerson.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MessagingV1ServiceUsAppToPerson is not found in the empty JSON string", MessagingV1ServiceUsAppToPerson.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MessagingV1ServiceUsAppToPerson.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MessagingV1ServiceUsAppToPerson` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("brand_registration_sid") != null && !jsonObj.get("brand_registration_sid").isJsonNull()) && !jsonObj.get("brand_registration_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand_registration_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand_registration_sid").toString()));
      }
      if ((jsonObj.get("campaign_id") != null && !jsonObj.get("campaign_id").isJsonNull()) && !jsonObj.get("campaign_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaign_id").toString()));
      }
      if ((jsonObj.get("campaign_status") != null && !jsonObj.get("campaign_status").isJsonNull()) && !jsonObj.get("campaign_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaign_status").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("errors") != null && !jsonObj.get("errors").isJsonNull() && !jsonObj.get("errors").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `errors` to be an array in the JSON string but got `%s`", jsonObj.get("errors").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("help_keywords") != null && !jsonObj.get("help_keywords").isJsonNull() && !jsonObj.get("help_keywords").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `help_keywords` to be an array in the JSON string but got `%s`", jsonObj.get("help_keywords").toString()));
      }
      if ((jsonObj.get("help_message") != null && !jsonObj.get("help_message").isJsonNull()) && !jsonObj.get("help_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `help_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("help_message").toString()));
      }
      if ((jsonObj.get("message_flow") != null && !jsonObj.get("message_flow").isJsonNull()) && !jsonObj.get("message_flow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_flow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message_flow").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("message_samples") != null && !jsonObj.get("message_samples").isJsonNull() && !jsonObj.get("message_samples").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_samples` to be an array in the JSON string but got `%s`", jsonObj.get("message_samples").toString()));
      }
      if ((jsonObj.get("messaging_service_sid") != null && !jsonObj.get("messaging_service_sid").isJsonNull()) && !jsonObj.get("messaging_service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messaging_service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messaging_service_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("opt_in_keywords") != null && !jsonObj.get("opt_in_keywords").isJsonNull() && !jsonObj.get("opt_in_keywords").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `opt_in_keywords` to be an array in the JSON string but got `%s`", jsonObj.get("opt_in_keywords").toString()));
      }
      if ((jsonObj.get("opt_in_message") != null && !jsonObj.get("opt_in_message").isJsonNull()) && !jsonObj.get("opt_in_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opt_in_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opt_in_message").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("opt_out_keywords") != null && !jsonObj.get("opt_out_keywords").isJsonNull() && !jsonObj.get("opt_out_keywords").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `opt_out_keywords` to be an array in the JSON string but got `%s`", jsonObj.get("opt_out_keywords").toString()));
      }
      if ((jsonObj.get("opt_out_message") != null && !jsonObj.get("opt_out_message").isJsonNull()) && !jsonObj.get("opt_out_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opt_out_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opt_out_message").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("us_app_to_person_usecase") != null && !jsonObj.get("us_app_to_person_usecase").isJsonNull()) && !jsonObj.get("us_app_to_person_usecase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `us_app_to_person_usecase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("us_app_to_person_usecase").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MessagingV1ServiceUsAppToPerson.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MessagingV1ServiceUsAppToPerson' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MessagingV1ServiceUsAppToPerson> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MessagingV1ServiceUsAppToPerson.class));

       return (TypeAdapter<T>) new TypeAdapter<MessagingV1ServiceUsAppToPerson>() {
           @Override
           public void write(JsonWriter out, MessagingV1ServiceUsAppToPerson value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MessagingV1ServiceUsAppToPerson read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MessagingV1ServiceUsAppToPerson given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MessagingV1ServiceUsAppToPerson
   * @throws IOException if the JSON string is invalid with respect to MessagingV1ServiceUsAppToPerson
   */
  public static MessagingV1ServiceUsAppToPerson fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MessagingV1ServiceUsAppToPerson.class);
  }

  /**
   * Convert an instance of MessagingV1ServiceUsAppToPerson to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

