/*
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ServiceEnumScanMessageContent;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MessagingV1Service
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:38.826816-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MessagingV1Service {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_AREA_CODE_GEOMATCH = "area_code_geomatch";
  @SerializedName(SERIALIZED_NAME_AREA_CODE_GEOMATCH)
  private Boolean areaCodeGeomatch;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  /**
   * The HTTP method we use to call &#x60;fallback_url&#x60;. Can be: &#x60;GET&#x60; or &#x60;POST&#x60;.
   */
  @JsonAdapter(FallbackMethodEnum.Adapter.class)
  public enum FallbackMethodEnum {
    HEAD("HEAD"),
    
    GET("GET"),
    
    POST("POST"),
    
    PATCH("PATCH"),
    
    PUT("PUT"),
    
    DELETE("DELETE");

    private String value;

    FallbackMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FallbackMethodEnum fromValue(String value) {
      for (FallbackMethodEnum b : FallbackMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FallbackMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FallbackMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FallbackMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FallbackMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FallbackMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FALLBACK_METHOD = "fallback_method";
  @SerializedName(SERIALIZED_NAME_FALLBACK_METHOD)
  private FallbackMethodEnum fallbackMethod;

  public static final String SERIALIZED_NAME_FALLBACK_TO_LONG_CODE = "fallback_to_long_code";
  @SerializedName(SERIALIZED_NAME_FALLBACK_TO_LONG_CODE)
  private Boolean fallbackToLongCode;

  public static final String SERIALIZED_NAME_FALLBACK_URL = "fallback_url";
  @SerializedName(SERIALIZED_NAME_FALLBACK_URL)
  private URI fallbackUrl;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  /**
   * The HTTP method we use to call &#x60;inbound_request_url&#x60;. Can be &#x60;GET&#x60; or &#x60;POST&#x60;.
   */
  @JsonAdapter(InboundMethodEnum.Adapter.class)
  public enum InboundMethodEnum {
    HEAD("HEAD"),
    
    GET("GET"),
    
    POST("POST"),
    
    PATCH("PATCH"),
    
    PUT("PUT"),
    
    DELETE("DELETE");

    private String value;

    InboundMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InboundMethodEnum fromValue(String value) {
      for (InboundMethodEnum b : InboundMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InboundMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InboundMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InboundMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InboundMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      InboundMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_INBOUND_METHOD = "inbound_method";
  @SerializedName(SERIALIZED_NAME_INBOUND_METHOD)
  private InboundMethodEnum inboundMethod;

  public static final String SERIALIZED_NAME_INBOUND_REQUEST_URL = "inbound_request_url";
  @SerializedName(SERIALIZED_NAME_INBOUND_REQUEST_URL)
  private URI inboundRequestUrl;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_MMS_CONVERTER = "mms_converter";
  @SerializedName(SERIALIZED_NAME_MMS_CONVERTER)
  private Boolean mmsConverter;

  public static final String SERIALIZED_NAME_SCAN_MESSAGE_CONTENT = "scan_message_content";
  @SerializedName(SERIALIZED_NAME_SCAN_MESSAGE_CONTENT)
  private ServiceEnumScanMessageContent scanMessageContent;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_SMART_ENCODING = "smart_encoding";
  @SerializedName(SERIALIZED_NAME_SMART_ENCODING)
  private Boolean smartEncoding;

  public static final String SERIALIZED_NAME_STATUS_CALLBACK = "status_callback";
  @SerializedName(SERIALIZED_NAME_STATUS_CALLBACK)
  private URI statusCallback;

  public static final String SERIALIZED_NAME_STICKY_SENDER = "sticky_sender";
  @SerializedName(SERIALIZED_NAME_STICKY_SENDER)
  private Boolean stickySender;

  public static final String SERIALIZED_NAME_SYNCHRONOUS_VALIDATION = "synchronous_validation";
  @SerializedName(SERIALIZED_NAME_SYNCHRONOUS_VALIDATION)
  private Boolean synchronousValidation;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_US_APP_TO_PERSON_REGISTERED = "us_app_to_person_registered";
  @SerializedName(SERIALIZED_NAME_US_APP_TO_PERSON_REGISTERED)
  private Boolean usAppToPersonRegistered;

  public static final String SERIALIZED_NAME_USE_INBOUND_WEBHOOK_ON_NUMBER = "use_inbound_webhook_on_number";
  @SerializedName(SERIALIZED_NAME_USE_INBOUND_WEBHOOK_ON_NUMBER)
  private Boolean useInboundWebhookOnNumber;

  public static final String SERIALIZED_NAME_USECASE = "usecase";
  @SerializedName(SERIALIZED_NAME_USECASE)
  private String usecase;

  public static final String SERIALIZED_NAME_VALIDITY_PERIOD = "validity_period";
  @SerializedName(SERIALIZED_NAME_VALIDITY_PERIOD)
  private Integer validityPeriod;

  public MessagingV1Service() {
  }

  public MessagingV1Service accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public MessagingV1Service areaCodeGeomatch(Boolean areaCodeGeomatch) {
    this.areaCodeGeomatch = areaCodeGeomatch;
    return this;
  }

  /**
   * Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/messaging/services#area-code-geomatch) on the Service Instance.
   * @return areaCodeGeomatch
   */
  @javax.annotation.Nullable
  public Boolean getAreaCodeGeomatch() {
    return areaCodeGeomatch;
  }

  public void setAreaCodeGeomatch(Boolean areaCodeGeomatch) {
    this.areaCodeGeomatch = areaCodeGeomatch;
  }


  public MessagingV1Service dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public MessagingV1Service dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public MessagingV1Service fallbackMethod(FallbackMethodEnum fallbackMethod) {
    this.fallbackMethod = fallbackMethod;
    return this;
  }

  /**
   * The HTTP method we use to call &#x60;fallback_url&#x60;. Can be: &#x60;GET&#x60; or &#x60;POST&#x60;.
   * @return fallbackMethod
   */
  @javax.annotation.Nullable
  public FallbackMethodEnum getFallbackMethod() {
    return fallbackMethod;
  }

  public void setFallbackMethod(FallbackMethodEnum fallbackMethod) {
    this.fallbackMethod = fallbackMethod;
  }


  public MessagingV1Service fallbackToLongCode(Boolean fallbackToLongCode) {
    this.fallbackToLongCode = fallbackToLongCode;
    return this;
  }

  /**
   * [OBSOLETE] Former feature used to fallback to long code sender after certain short code message failures.
   * @return fallbackToLongCode
   */
  @javax.annotation.Nullable
  public Boolean getFallbackToLongCode() {
    return fallbackToLongCode;
  }

  public void setFallbackToLongCode(Boolean fallbackToLongCode) {
    this.fallbackToLongCode = fallbackToLongCode;
  }


  public MessagingV1Service fallbackUrl(URI fallbackUrl) {
    this.fallbackUrl = fallbackUrl;
    return this;
  }

  /**
   * The URL that we call using &#x60;fallback_method&#x60; if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. If the &#x60;use_inbound_webhook_on_number&#x60; field is enabled then the webhook url defined on the phone number will override the &#x60;fallback_url&#x60; defined for the Messaging Service.
   * @return fallbackUrl
   */
  @javax.annotation.Nullable
  public URI getFallbackUrl() {
    return fallbackUrl;
  }

  public void setFallbackUrl(URI fallbackUrl) {
    this.fallbackUrl = fallbackUrl;
  }


  public MessagingV1Service friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the resource.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public MessagingV1Service inboundMethod(InboundMethodEnum inboundMethod) {
    this.inboundMethod = inboundMethod;
    return this;
  }

  /**
   * The HTTP method we use to call &#x60;inbound_request_url&#x60;. Can be &#x60;GET&#x60; or &#x60;POST&#x60;.
   * @return inboundMethod
   */
  @javax.annotation.Nullable
  public InboundMethodEnum getInboundMethod() {
    return inboundMethod;
  }

  public void setInboundMethod(InboundMethodEnum inboundMethod) {
    this.inboundMethod = inboundMethod;
  }


  public MessagingV1Service inboundRequestUrl(URI inboundRequestUrl) {
    this.inboundRequestUrl = inboundRequestUrl;
    return this;
  }

  /**
   * The URL we call using &#x60;inbound_method&#x60; when a message is received by any phone number or short code in the Service. When this property is &#x60;null&#x60;, receiving inbound messages is disabled. All messages sent to the Twilio phone number or short code will not be logged and received on the Account. If the &#x60;use_inbound_webhook_on_number&#x60; field is enabled then the webhook url defined on the phone number will override the &#x60;inbound_request_url&#x60; defined for the Messaging Service.
   * @return inboundRequestUrl
   */
  @javax.annotation.Nullable
  public URI getInboundRequestUrl() {
    return inboundRequestUrl;
  }

  public void setInboundRequestUrl(URI inboundRequestUrl) {
    this.inboundRequestUrl = inboundRequestUrl;
  }


  public MessagingV1Service links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The absolute URLs of related resources.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public MessagingV1Service mmsConverter(Boolean mmsConverter) {
    this.mmsConverter = mmsConverter;
    return this;
  }

  /**
   * Whether to enable the [MMS Converter](https://www.twilio.com/docs/messaging/services#mms-converter) for messages sent through the Service instance.
   * @return mmsConverter
   */
  @javax.annotation.Nullable
  public Boolean getMmsConverter() {
    return mmsConverter;
  }

  public void setMmsConverter(Boolean mmsConverter) {
    this.mmsConverter = mmsConverter;
  }


  public MessagingV1Service scanMessageContent(ServiceEnumScanMessageContent scanMessageContent) {
    this.scanMessageContent = scanMessageContent;
    return this;
  }

  /**
   * Get scanMessageContent
   * @return scanMessageContent
   */
  @javax.annotation.Nullable
  public ServiceEnumScanMessageContent getScanMessageContent() {
    return scanMessageContent;
  }

  public void setScanMessageContent(ServiceEnumScanMessageContent scanMessageContent) {
    this.scanMessageContent = scanMessageContent;
  }


  public MessagingV1Service sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Service resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public MessagingV1Service smartEncoding(Boolean smartEncoding) {
    this.smartEncoding = smartEncoding;
    return this;
  }

  /**
   * Whether to enable [Smart Encoding](https://www.twilio.com/docs/messaging/services#smart-encoding) for messages sent through the Service instance.
   * @return smartEncoding
   */
  @javax.annotation.Nullable
  public Boolean getSmartEncoding() {
    return smartEncoding;
  }

  public void setSmartEncoding(Boolean smartEncoding) {
    this.smartEncoding = smartEncoding;
  }


  public MessagingV1Service statusCallback(URI statusCallback) {
    this.statusCallback = statusCallback;
    return this;
  }

  /**
   * The URL we call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery.
   * @return statusCallback
   */
  @javax.annotation.Nullable
  public URI getStatusCallback() {
    return statusCallback;
  }

  public void setStatusCallback(URI statusCallback) {
    this.statusCallback = statusCallback;
  }


  public MessagingV1Service stickySender(Boolean stickySender) {
    this.stickySender = stickySender;
    return this;
  }

  /**
   * Whether to enable [Sticky Sender](https://www.twilio.com/docs/messaging/services#sticky-sender) on the Service instance.
   * @return stickySender
   */
  @javax.annotation.Nullable
  public Boolean getStickySender() {
    return stickySender;
  }

  public void setStickySender(Boolean stickySender) {
    this.stickySender = stickySender;
  }


  public MessagingV1Service synchronousValidation(Boolean synchronousValidation) {
    this.synchronousValidation = synchronousValidation;
    return this;
  }

  /**
   * Reserved.
   * @return synchronousValidation
   */
  @javax.annotation.Nullable
  public Boolean getSynchronousValidation() {
    return synchronousValidation;
  }

  public void setSynchronousValidation(Boolean synchronousValidation) {
    this.synchronousValidation = synchronousValidation;
  }


  public MessagingV1Service url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Service resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public MessagingV1Service usAppToPersonRegistered(Boolean usAppToPersonRegistered) {
    this.usAppToPersonRegistered = usAppToPersonRegistered;
    return this;
  }

  /**
   * Whether US A2P campaign is registered for this Service.
   * @return usAppToPersonRegistered
   */
  @javax.annotation.Nullable
  public Boolean getUsAppToPersonRegistered() {
    return usAppToPersonRegistered;
  }

  public void setUsAppToPersonRegistered(Boolean usAppToPersonRegistered) {
    this.usAppToPersonRegistered = usAppToPersonRegistered;
  }


  public MessagingV1Service useInboundWebhookOnNumber(Boolean useInboundWebhookOnNumber) {
    this.useInboundWebhookOnNumber = useInboundWebhookOnNumber;
    return this;
  }

  /**
   * A boolean value that indicates either the webhook url configured on the phone number will be used or &#x60;inbound_request_url&#x60;/&#x60;fallback_url&#x60; url will be called when a message is received from the phone number. If this field is enabled then the webhook url defined on the phone number will override the &#x60;inbound_request_url&#x60;/&#x60;fallback_url&#x60; defined for the Messaging Service.
   * @return useInboundWebhookOnNumber
   */
  @javax.annotation.Nullable
  public Boolean getUseInboundWebhookOnNumber() {
    return useInboundWebhookOnNumber;
  }

  public void setUseInboundWebhookOnNumber(Boolean useInboundWebhookOnNumber) {
    this.useInboundWebhookOnNumber = useInboundWebhookOnNumber;
  }


  public MessagingV1Service usecase(String usecase) {
    this.usecase = usecase;
    return this;
  }

  /**
   * A string that describes the scenario in which the Messaging Service will be used. Possible values are &#x60;notifications&#x60;, &#x60;marketing&#x60;, &#x60;verification&#x60;, &#x60;discussion&#x60;, &#x60;poll&#x60;, &#x60;undeclared&#x60;.
   * @return usecase
   */
  @javax.annotation.Nullable
  public String getUsecase() {
    return usecase;
  }

  public void setUsecase(String usecase) {
    this.usecase = usecase;
  }


  public MessagingV1Service validityPeriod(Integer validityPeriod) {
    this.validityPeriod = validityPeriod;
    return this;
  }

  /**
   * How long, in seconds, messages sent from the Service are valid. Can be an integer from &#x60;1&#x60; to &#x60;14,400&#x60;.
   * @return validityPeriod
   */
  @javax.annotation.Nullable
  public Integer getValidityPeriod() {
    return validityPeriod;
  }

  public void setValidityPeriod(Integer validityPeriod) {
    this.validityPeriod = validityPeriod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessagingV1Service messagingV1Service = (MessagingV1Service) o;
    return Objects.equals(this.accountSid, messagingV1Service.accountSid) &&
        Objects.equals(this.areaCodeGeomatch, messagingV1Service.areaCodeGeomatch) &&
        Objects.equals(this.dateCreated, messagingV1Service.dateCreated) &&
        Objects.equals(this.dateUpdated, messagingV1Service.dateUpdated) &&
        Objects.equals(this.fallbackMethod, messagingV1Service.fallbackMethod) &&
        Objects.equals(this.fallbackToLongCode, messagingV1Service.fallbackToLongCode) &&
        Objects.equals(this.fallbackUrl, messagingV1Service.fallbackUrl) &&
        Objects.equals(this.friendlyName, messagingV1Service.friendlyName) &&
        Objects.equals(this.inboundMethod, messagingV1Service.inboundMethod) &&
        Objects.equals(this.inboundRequestUrl, messagingV1Service.inboundRequestUrl) &&
        Objects.equals(this.links, messagingV1Service.links) &&
        Objects.equals(this.mmsConverter, messagingV1Service.mmsConverter) &&
        Objects.equals(this.scanMessageContent, messagingV1Service.scanMessageContent) &&
        Objects.equals(this.sid, messagingV1Service.sid) &&
        Objects.equals(this.smartEncoding, messagingV1Service.smartEncoding) &&
        Objects.equals(this.statusCallback, messagingV1Service.statusCallback) &&
        Objects.equals(this.stickySender, messagingV1Service.stickySender) &&
        Objects.equals(this.synchronousValidation, messagingV1Service.synchronousValidation) &&
        Objects.equals(this.url, messagingV1Service.url) &&
        Objects.equals(this.usAppToPersonRegistered, messagingV1Service.usAppToPersonRegistered) &&
        Objects.equals(this.useInboundWebhookOnNumber, messagingV1Service.useInboundWebhookOnNumber) &&
        Objects.equals(this.usecase, messagingV1Service.usecase) &&
        Objects.equals(this.validityPeriod, messagingV1Service.validityPeriod);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, areaCodeGeomatch, dateCreated, dateUpdated, fallbackMethod, fallbackToLongCode, fallbackUrl, friendlyName, inboundMethod, inboundRequestUrl, links, mmsConverter, scanMessageContent, sid, smartEncoding, statusCallback, stickySender, synchronousValidation, url, usAppToPersonRegistered, useInboundWebhookOnNumber, usecase, validityPeriod);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessagingV1Service {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    areaCodeGeomatch: ").append(toIndentedString(areaCodeGeomatch)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    fallbackMethod: ").append(toIndentedString(fallbackMethod)).append("\n");
    sb.append("    fallbackToLongCode: ").append(toIndentedString(fallbackToLongCode)).append("\n");
    sb.append("    fallbackUrl: ").append(toIndentedString(fallbackUrl)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    inboundMethod: ").append(toIndentedString(inboundMethod)).append("\n");
    sb.append("    inboundRequestUrl: ").append(toIndentedString(inboundRequestUrl)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    mmsConverter: ").append(toIndentedString(mmsConverter)).append("\n");
    sb.append("    scanMessageContent: ").append(toIndentedString(scanMessageContent)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    smartEncoding: ").append(toIndentedString(smartEncoding)).append("\n");
    sb.append("    statusCallback: ").append(toIndentedString(statusCallback)).append("\n");
    sb.append("    stickySender: ").append(toIndentedString(stickySender)).append("\n");
    sb.append("    synchronousValidation: ").append(toIndentedString(synchronousValidation)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    usAppToPersonRegistered: ").append(toIndentedString(usAppToPersonRegistered)).append("\n");
    sb.append("    useInboundWebhookOnNumber: ").append(toIndentedString(useInboundWebhookOnNumber)).append("\n");
    sb.append("    usecase: ").append(toIndentedString(usecase)).append("\n");
    sb.append("    validityPeriod: ").append(toIndentedString(validityPeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("area_code_geomatch");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("fallback_method");
    openapiFields.add("fallback_to_long_code");
    openapiFields.add("fallback_url");
    openapiFields.add("friendly_name");
    openapiFields.add("inbound_method");
    openapiFields.add("inbound_request_url");
    openapiFields.add("links");
    openapiFields.add("mms_converter");
    openapiFields.add("scan_message_content");
    openapiFields.add("sid");
    openapiFields.add("smart_encoding");
    openapiFields.add("status_callback");
    openapiFields.add("sticky_sender");
    openapiFields.add("synchronous_validation");
    openapiFields.add("url");
    openapiFields.add("us_app_to_person_registered");
    openapiFields.add("use_inbound_webhook_on_number");
    openapiFields.add("usecase");
    openapiFields.add("validity_period");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MessagingV1Service
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MessagingV1Service.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MessagingV1Service is not found in the empty JSON string", MessagingV1Service.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MessagingV1Service.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MessagingV1Service` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("fallback_method") != null && !jsonObj.get("fallback_method").isJsonNull()) && !jsonObj.get("fallback_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fallback_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fallback_method").toString()));
      }
      // validate the optional field `fallback_method`
      if (jsonObj.get("fallback_method") != null && !jsonObj.get("fallback_method").isJsonNull()) {
        FallbackMethodEnum.validateJsonElement(jsonObj.get("fallback_method"));
      }
      if ((jsonObj.get("fallback_url") != null && !jsonObj.get("fallback_url").isJsonNull()) && !jsonObj.get("fallback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fallback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fallback_url").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("inbound_method") != null && !jsonObj.get("inbound_method").isJsonNull()) && !jsonObj.get("inbound_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inbound_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inbound_method").toString()));
      }
      // validate the optional field `inbound_method`
      if (jsonObj.get("inbound_method") != null && !jsonObj.get("inbound_method").isJsonNull()) {
        InboundMethodEnum.validateJsonElement(jsonObj.get("inbound_method"));
      }
      if ((jsonObj.get("inbound_request_url") != null && !jsonObj.get("inbound_request_url").isJsonNull()) && !jsonObj.get("inbound_request_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inbound_request_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inbound_request_url").toString()));
      }
      if ((jsonObj.get("scan_message_content") != null && !jsonObj.get("scan_message_content").isJsonNull()) && !jsonObj.get("scan_message_content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scan_message_content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scan_message_content").toString()));
      }
      // validate the optional field `scan_message_content`
      if (jsonObj.get("scan_message_content") != null && !jsonObj.get("scan_message_content").isJsonNull()) {
        ServiceEnumScanMessageContent.validateJsonElement(jsonObj.get("scan_message_content"));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("status_callback") != null && !jsonObj.get("status_callback").isJsonNull()) && !jsonObj.get("status_callback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_callback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_callback").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("usecase") != null && !jsonObj.get("usecase").isJsonNull()) && !jsonObj.get("usecase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usecase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usecase").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MessagingV1Service.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MessagingV1Service' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MessagingV1Service> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MessagingV1Service.class));

       return (TypeAdapter<T>) new TypeAdapter<MessagingV1Service>() {
           @Override
           public void write(JsonWriter out, MessagingV1Service value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MessagingV1Service read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MessagingV1Service given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MessagingV1Service
   * @throws IOException if the JSON string is invalid with respect to MessagingV1Service
   */
  public static MessagingV1Service fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MessagingV1Service.class);
  }

  /**
   * Convert an instance of MessagingV1Service to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

