/*
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ServiceEnumScanMessageContent;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MessagingV1Service
 */
public class MessagingV1ServiceTest {
    private final MessagingV1Service model = new MessagingV1Service();

    /**
     * Model tests for MessagingV1Service
     */
    @Test
    public void testMessagingV1Service() {
        // TODO: test MessagingV1Service
    }

    /**
     * Test the property 'accountSid'
     */
    @Test
    public void accountSidTest() {
        // TODO: test accountSid
    }

    /**
     * Test the property 'areaCodeGeomatch'
     */
    @Test
    public void areaCodeGeomatchTest() {
        // TODO: test areaCodeGeomatch
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'dateUpdated'
     */
    @Test
    public void dateUpdatedTest() {
        // TODO: test dateUpdated
    }

    /**
     * Test the property 'fallbackMethod'
     */
    @Test
    public void fallbackMethodTest() {
        // TODO: test fallbackMethod
    }

    /**
     * Test the property 'fallbackToLongCode'
     */
    @Test
    public void fallbackToLongCodeTest() {
        // TODO: test fallbackToLongCode
    }

    /**
     * Test the property 'fallbackUrl'
     */
    @Test
    public void fallbackUrlTest() {
        // TODO: test fallbackUrl
    }

    /**
     * Test the property 'friendlyName'
     */
    @Test
    public void friendlyNameTest() {
        // TODO: test friendlyName
    }

    /**
     * Test the property 'inboundMethod'
     */
    @Test
    public void inboundMethodTest() {
        // TODO: test inboundMethod
    }

    /**
     * Test the property 'inboundRequestUrl'
     */
    @Test
    public void inboundRequestUrlTest() {
        // TODO: test inboundRequestUrl
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'mmsConverter'
     */
    @Test
    public void mmsConverterTest() {
        // TODO: test mmsConverter
    }

    /**
     * Test the property 'scanMessageContent'
     */
    @Test
    public void scanMessageContentTest() {
        // TODO: test scanMessageContent
    }

    /**
     * Test the property 'sid'
     */
    @Test
    public void sidTest() {
        // TODO: test sid
    }

    /**
     * Test the property 'smartEncoding'
     */
    @Test
    public void smartEncodingTest() {
        // TODO: test smartEncoding
    }

    /**
     * Test the property 'statusCallback'
     */
    @Test
    public void statusCallbackTest() {
        // TODO: test statusCallback
    }

    /**
     * Test the property 'stickySender'
     */
    @Test
    public void stickySenderTest() {
        // TODO: test stickySender
    }

    /**
     * Test the property 'synchronousValidation'
     */
    @Test
    public void synchronousValidationTest() {
        // TODO: test synchronousValidation
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'usAppToPersonRegistered'
     */
    @Test
    public void usAppToPersonRegisteredTest() {
        // TODO: test usAppToPersonRegistered
    }

    /**
     * Test the property 'useInboundWebhookOnNumber'
     */
    @Test
    public void useInboundWebhookOnNumberTest() {
        // TODO: test useInboundWebhookOnNumber
    }

    /**
     * Test the property 'usecase'
     */
    @Test
    public void usecaseTest() {
        // TODO: test usecase
    }

    /**
     * Test the property 'validityPeriod'
     */
    @Test
    public void validityPeriodTest() {
        // TODO: test validityPeriod
    }

}
