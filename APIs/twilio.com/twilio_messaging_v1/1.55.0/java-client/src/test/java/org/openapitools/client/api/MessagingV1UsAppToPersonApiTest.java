/*
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListUsAppToPersonResponse;
import org.openapitools.client.model.MessagingV1ServiceUsAppToPerson;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MessagingV1UsAppToPersonApi
 */
@Disabled
public class MessagingV1UsAppToPersonApiTest {

    private final MessagingV1UsAppToPersonApi api = new MessagingV1UsAppToPersonApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUsAppToPersonTest() throws ApiException {
        String messagingServiceSid = null;
        String brandRegistrationSid = null;
        String description = null;
        Boolean hasEmbeddedLinks = null;
        Boolean hasEmbeddedPhone = null;
        String messageFlow = null;
        List<String> messageSamples = null;
        String usAppToPersonUsecase = null;
        Boolean ageGated = null;
        Boolean directLending = null;
        List<String> helpKeywords = null;
        String helpMessage = null;
        List<String> optInKeywords = null;
        String optInMessage = null;
        List<String> optOutKeywords = null;
        String optOutMessage = null;
        Boolean subscriberOptIn = null;
        MessagingV1ServiceUsAppToPerson response = api.createUsAppToPerson(messagingServiceSid, brandRegistrationSid, description, hasEmbeddedLinks, hasEmbeddedPhone, messageFlow, messageSamples, usAppToPersonUsecase, ageGated, directLending, helpKeywords, helpMessage, optInKeywords, optInMessage, optOutKeywords, optOutMessage, subscriberOptIn);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUsAppToPersonTest() throws ApiException {
        String messagingServiceSid = null;
        String sid = null;
        api.deleteUsAppToPerson(messagingServiceSid, sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchUsAppToPersonTest() throws ApiException {
        String messagingServiceSid = null;
        String sid = null;
        MessagingV1ServiceUsAppToPerson response = api.fetchUsAppToPerson(messagingServiceSid, sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUsAppToPersonTest() throws ApiException {
        String messagingServiceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListUsAppToPersonResponse response = api.listUsAppToPerson(messagingServiceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUsAppToPersonTest() throws ApiException {
        String messagingServiceSid = null;
        String sid = null;
        Boolean ageGated = null;
        String description = null;
        Boolean directLending = null;
        Boolean hasEmbeddedLinks = null;
        Boolean hasEmbeddedPhone = null;
        String messageFlow = null;
        List<String> messageSamples = null;
        MessagingV1ServiceUsAppToPerson response = api.updateUsAppToPerson(messagingServiceSid, sid, ageGated, description, directLending, hasEmbeddedLinks, hasEmbeddedPhone, messageFlow, messageSamples);
        // TODO: test validations
    }

}
