# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessagingV1Usecase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, usecases: List[object]=None):
        """MessagingV1Usecase - a model defined in OpenAPI

        :param usecases: The usecases of this MessagingV1Usecase.
        """
        self.openapi_types = {
            'usecases': List[object]
        }

        self.attribute_map = {
            'usecases': 'usecases'
        }

        self._usecases = usecases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessagingV1Usecase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The messaging.v1.usecase of this MessagingV1Usecase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def usecases(self):
        """Gets the usecases of this MessagingV1Usecase.

        Human readable use case details (usecase, description and purpose) of Messaging Service Use Cases.

        :return: The usecases of this MessagingV1Usecase.
        :rtype: List[object]
        """
        return self._usecases

    @usecases.setter
    def usecases(self, usecases):
        """Sets the usecases of this MessagingV1Usecase.

        Human readable use case details (usecase, description and purpose) of Messaging Service Use Cases.

        :param usecases: The usecases of this MessagingV1Usecase.
        :type usecases: List[object]
        """

        self._usecases = usecases
