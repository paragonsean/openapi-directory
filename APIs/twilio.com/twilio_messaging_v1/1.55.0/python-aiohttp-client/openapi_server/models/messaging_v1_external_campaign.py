# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class MessagingV1ExternalCampaign(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, campaign_id: str=None, date_created: datetime=None, messaging_service_sid: str=None, sid: str=None):
        """MessagingV1ExternalCampaign - a model defined in OpenAPI

        :param account_sid: The account_sid of this MessagingV1ExternalCampaign.
        :param campaign_id: The campaign_id of this MessagingV1ExternalCampaign.
        :param date_created: The date_created of this MessagingV1ExternalCampaign.
        :param messaging_service_sid: The messaging_service_sid of this MessagingV1ExternalCampaign.
        :param sid: The sid of this MessagingV1ExternalCampaign.
        """
        self.openapi_types = {
            'account_sid': str,
            'campaign_id': str,
            'date_created': datetime,
            'messaging_service_sid': str,
            'sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'campaign_id': 'campaign_id',
            'date_created': 'date_created',
            'messaging_service_sid': 'messaging_service_sid',
            'sid': 'sid'
        }

        self._account_sid = account_sid
        self._campaign_id = campaign_id
        self._date_created = date_created
        self._messaging_service_sid = messaging_service_sid
        self._sid = sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessagingV1ExternalCampaign':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The messaging.v1.external_campaign of this MessagingV1ExternalCampaign.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this MessagingV1ExternalCampaign.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the Campaign belongs to.

        :return: The account_sid of this MessagingV1ExternalCampaign.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this MessagingV1ExternalCampaign.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the Campaign belongs to.

        :param account_sid: The account_sid of this MessagingV1ExternalCampaign.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def campaign_id(self):
        """Gets the campaign_id of this MessagingV1ExternalCampaign.

        ID of the preregistered campaign.

        :return: The campaign_id of this MessagingV1ExternalCampaign.
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this MessagingV1ExternalCampaign.

        ID of the preregistered campaign.

        :param campaign_id: The campaign_id of this MessagingV1ExternalCampaign.
        :type campaign_id: str
        """

        self._campaign_id = campaign_id

    @property
    def date_created(self):
        """Gets the date_created of this MessagingV1ExternalCampaign.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this MessagingV1ExternalCampaign.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this MessagingV1ExternalCampaign.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this MessagingV1ExternalCampaign.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def messaging_service_sid(self):
        """Gets the messaging_service_sid of this MessagingV1ExternalCampaign.

        The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) that the resource is associated with.

        :return: The messaging_service_sid of this MessagingV1ExternalCampaign.
        :rtype: str
        """
        return self._messaging_service_sid

    @messaging_service_sid.setter
    def messaging_service_sid(self, messaging_service_sid):
        """Sets the messaging_service_sid of this MessagingV1ExternalCampaign.

        The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) that the resource is associated with.

        :param messaging_service_sid: The messaging_service_sid of this MessagingV1ExternalCampaign.
        :type messaging_service_sid: str
        """
        if messaging_service_sid is not None and len(messaging_service_sid) > 34:
            raise ValueError("Invalid value for `messaging_service_sid`, length must be less than or equal to `34`")
        if messaging_service_sid is not None and len(messaging_service_sid) < 34:
            raise ValueError("Invalid value for `messaging_service_sid`, length must be greater than or equal to `34`")
        if messaging_service_sid is not None and not re.search(r'^MG[0-9a-fA-F]{32}$', messaging_service_sid):
            raise ValueError("Invalid value for `messaging_service_sid`, must be a follow pattern or equal to `/^MG[0-9a-fA-F]{32}$/`")

        self._messaging_service_sid = messaging_service_sid

    @property
    def sid(self):
        """Gets the sid of this MessagingV1ExternalCampaign.

        The unique string that identifies a US A2P Compliance resource `QE2c6890da8086d771620e9b13fadeba0b`.

        :return: The sid of this MessagingV1ExternalCampaign.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this MessagingV1ExternalCampaign.

        The unique string that identifies a US A2P Compliance resource `QE2c6890da8086d771620e9b13fadeba0b`.

        :param sid: The sid of this MessagingV1ExternalCampaign.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^QE[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^QE[0-9a-fA-F]{32}$/`")

        self._sid = sid
