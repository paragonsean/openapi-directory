/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MessagingV1DomainConfig from '../model/MessagingV1DomainConfig';

/**
* MessagingV1DomainConfig service.
* @module api/MessagingV1DomainConfigApi
* @version 1.55.0
*/
export default class MessagingV1DomainConfigApi {

    /**
    * Constructs a new MessagingV1DomainConfigApi. 
    * @alias module:api/MessagingV1DomainConfigApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fetchDomainConfig operation.
     * @callback module:api/MessagingV1DomainConfigApi~fetchDomainConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessagingV1DomainConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} domainSid Unique string used to identify the domain that this config should be associated with.
     * @param {module:api/MessagingV1DomainConfigApi~fetchDomainConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MessagingV1DomainConfig}
     */
    fetchDomainConfig(domainSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling fetchDomainConfig");
      }

      let pathParams = {
        'DomainSid': domainSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MessagingV1DomainConfig;
      let basePaths = ['https://messaging.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/LinkShortening/Domains/{DomainSid}/Config', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDomainConfig operation.
     * @callback module:api/MessagingV1DomainConfigApi~updateDomainConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessagingV1DomainConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} domainSid Unique string used to identify the domain that this config should be associated with.
     * @param {Object} opts Optional parameters
     * @param {String} [callbackUrl] URL to receive click events to your webhook whenever the recipients click on the shortened links
     * @param {Boolean} [continueOnFailure] Boolean field to set customer delivery preference when there is a failure in linkShortening service
     * @param {Boolean} [disableHttps] Customer's choice to send links with/without \\\"https://\\\" attached to shortened url. If true, messages will not be sent with https:// at the beginning of the url. If false, messages will be sent with https:// at the beginning of the url. False is the default behavior if it is not specified.
     * @param {String} [fallbackUrl] Any requests we receive to this domain that do not match an existing shortened message will be redirected to the fallback url. These will likely be either expired messages, random misdirected traffic, or intentional scraping.
     * @param {module:api/MessagingV1DomainConfigApi~updateDomainConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MessagingV1DomainConfig}
     */
    updateDomainConfig(domainSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling updateDomainConfig");
      }

      let pathParams = {
        'DomainSid': domainSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CallbackUrl': opts['callbackUrl'],
        'ContinueOnFailure': opts['continueOnFailure'],
        'DisableHttps': opts['disableHttps'],
        'FallbackUrl': opts['fallbackUrl']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = MessagingV1DomainConfig;
      let basePaths = ['https://messaging.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/LinkShortening/Domains/{DomainSid}/Config', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
