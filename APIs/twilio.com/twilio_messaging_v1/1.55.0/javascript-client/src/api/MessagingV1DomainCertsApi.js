/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MessagingV1DomainCertV4 from '../model/MessagingV1DomainCertV4';

/**
* MessagingV1DomainCerts service.
* @module api/MessagingV1DomainCertsApi
* @version 1.55.0
*/
export default class MessagingV1DomainCertsApi {

    /**
    * Constructs a new MessagingV1DomainCertsApi. 
    * @alias module:api/MessagingV1DomainCertsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteDomainCertV4 operation.
     * @callback module:api/MessagingV1DomainCertsApi~deleteDomainCertV4Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} domainSid Unique string used to identify the domain that this certificate should be associated with.
     * @param {module:api/MessagingV1DomainCertsApi~deleteDomainCertV4Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteDomainCertV4(domainSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling deleteDomainCertV4");
      }

      let pathParams = {
        'DomainSid': domainSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://messaging.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/LinkShortening/Domains/{DomainSid}/Certificate', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchDomainCertV4 operation.
     * @callback module:api/MessagingV1DomainCertsApi~fetchDomainCertV4Callback
     * @param {String} error Error message, if any.
     * @param {module:model/MessagingV1DomainCertV4} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} domainSid Unique string used to identify the domain that this certificate should be associated with.
     * @param {module:api/MessagingV1DomainCertsApi~fetchDomainCertV4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MessagingV1DomainCertV4}
     */
    fetchDomainCertV4(domainSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling fetchDomainCertV4");
      }

      let pathParams = {
        'DomainSid': domainSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MessagingV1DomainCertV4;
      let basePaths = ['https://messaging.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/LinkShortening/Domains/{DomainSid}/Certificate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDomainCertV4 operation.
     * @callback module:api/MessagingV1DomainCertsApi~updateDomainCertV4Callback
     * @param {String} error Error message, if any.
     * @param {module:model/MessagingV1DomainCertV4} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} domainSid Unique string used to identify the domain that this certificate should be associated with.
     * @param {String} tlsCert Contains the full TLS certificate and private for this domain in PEM format: https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail. Twilio uses this information to process HTTPS traffic sent to your domain.
     * @param {module:api/MessagingV1DomainCertsApi~updateDomainCertV4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MessagingV1DomainCertV4}
     */
    updateDomainCertV4(domainSid, tlsCert, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling updateDomainCertV4");
      }
      // verify the required parameter 'tlsCert' is set
      if (tlsCert === undefined || tlsCert === null) {
        throw new Error("Missing the required parameter 'tlsCert' when calling updateDomainCertV4");
      }

      let pathParams = {
        'DomainSid': domainSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'TlsCert': tlsCert
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = MessagingV1DomainCertV4;
      let basePaths = ['https://messaging.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/LinkShortening/Domains/{DomainSid}/Certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
