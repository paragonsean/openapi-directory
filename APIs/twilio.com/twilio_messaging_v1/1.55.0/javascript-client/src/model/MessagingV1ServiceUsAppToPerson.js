/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MessagingV1ServiceUsAppToPerson model module.
 * @module model/MessagingV1ServiceUsAppToPerson
 * @version 1.55.0
 */
class MessagingV1ServiceUsAppToPerson {
    /**
     * Constructs a new <code>MessagingV1ServiceUsAppToPerson</code>.
     * @alias module:model/MessagingV1ServiceUsAppToPerson
     */
    constructor() { 
        
        MessagingV1ServiceUsAppToPerson.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessagingV1ServiceUsAppToPerson</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessagingV1ServiceUsAppToPerson} obj Optional instance to populate.
     * @return {module:model/MessagingV1ServiceUsAppToPerson} The populated <code>MessagingV1ServiceUsAppToPerson</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessagingV1ServiceUsAppToPerson();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('age_gated')) {
                obj['age_gated'] = ApiClient.convertToType(data['age_gated'], 'Boolean');
            }
            if (data.hasOwnProperty('brand_registration_sid')) {
                obj['brand_registration_sid'] = ApiClient.convertToType(data['brand_registration_sid'], 'String');
            }
            if (data.hasOwnProperty('campaign_id')) {
                obj['campaign_id'] = ApiClient.convertToType(data['campaign_id'], 'String');
            }
            if (data.hasOwnProperty('campaign_status')) {
                obj['campaign_status'] = ApiClient.convertToType(data['campaign_status'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('direct_lending')) {
                obj['direct_lending'] = ApiClient.convertToType(data['direct_lending'], 'Boolean');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [Object]);
            }
            if (data.hasOwnProperty('has_embedded_links')) {
                obj['has_embedded_links'] = ApiClient.convertToType(data['has_embedded_links'], 'Boolean');
            }
            if (data.hasOwnProperty('has_embedded_phone')) {
                obj['has_embedded_phone'] = ApiClient.convertToType(data['has_embedded_phone'], 'Boolean');
            }
            if (data.hasOwnProperty('help_keywords')) {
                obj['help_keywords'] = ApiClient.convertToType(data['help_keywords'], ['String']);
            }
            if (data.hasOwnProperty('help_message')) {
                obj['help_message'] = ApiClient.convertToType(data['help_message'], 'String');
            }
            if (data.hasOwnProperty('is_externally_registered')) {
                obj['is_externally_registered'] = ApiClient.convertToType(data['is_externally_registered'], 'Boolean');
            }
            if (data.hasOwnProperty('message_flow')) {
                obj['message_flow'] = ApiClient.convertToType(data['message_flow'], 'String');
            }
            if (data.hasOwnProperty('message_samples')) {
                obj['message_samples'] = ApiClient.convertToType(data['message_samples'], ['String']);
            }
            if (data.hasOwnProperty('messaging_service_sid')) {
                obj['messaging_service_sid'] = ApiClient.convertToType(data['messaging_service_sid'], 'String');
            }
            if (data.hasOwnProperty('mock')) {
                obj['mock'] = ApiClient.convertToType(data['mock'], 'Boolean');
            }
            if (data.hasOwnProperty('opt_in_keywords')) {
                obj['opt_in_keywords'] = ApiClient.convertToType(data['opt_in_keywords'], ['String']);
            }
            if (data.hasOwnProperty('opt_in_message')) {
                obj['opt_in_message'] = ApiClient.convertToType(data['opt_in_message'], 'String');
            }
            if (data.hasOwnProperty('opt_out_keywords')) {
                obj['opt_out_keywords'] = ApiClient.convertToType(data['opt_out_keywords'], ['String']);
            }
            if (data.hasOwnProperty('opt_out_message')) {
                obj['opt_out_message'] = ApiClient.convertToType(data['opt_out_message'], 'String');
            }
            if (data.hasOwnProperty('rate_limits')) {
                obj['rate_limits'] = ApiClient.convertToType(data['rate_limits'], Object);
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('subscriber_opt_in')) {
                obj['subscriber_opt_in'] = ApiClient.convertToType(data['subscriber_opt_in'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('us_app_to_person_usecase')) {
                obj['us_app_to_person_usecase'] = ApiClient.convertToType(data['us_app_to_person_usecase'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessagingV1ServiceUsAppToPerson</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessagingV1ServiceUsAppToPerson</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['brand_registration_sid'] && !(typeof data['brand_registration_sid'] === 'string' || data['brand_registration_sid'] instanceof String)) {
            throw new Error("Expected the field `brand_registration_sid` to be a primitive type in the JSON string but got " + data['brand_registration_sid']);
        }
        // ensure the json data is a string
        if (data['campaign_id'] && !(typeof data['campaign_id'] === 'string' || data['campaign_id'] instanceof String)) {
            throw new Error("Expected the field `campaign_id` to be a primitive type in the JSON string but got " + data['campaign_id']);
        }
        // ensure the json data is a string
        if (data['campaign_status'] && !(typeof data['campaign_status'] === 'string' || data['campaign_status'] instanceof String)) {
            throw new Error("Expected the field `campaign_status` to be a primitive type in the JSON string but got " + data['campaign_status']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['errors'])) {
            throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['help_keywords'])) {
            throw new Error("Expected the field `help_keywords` to be an array in the JSON data but got " + data['help_keywords']);
        }
        // ensure the json data is a string
        if (data['help_message'] && !(typeof data['help_message'] === 'string' || data['help_message'] instanceof String)) {
            throw new Error("Expected the field `help_message` to be a primitive type in the JSON string but got " + data['help_message']);
        }
        // ensure the json data is a string
        if (data['message_flow'] && !(typeof data['message_flow'] === 'string' || data['message_flow'] instanceof String)) {
            throw new Error("Expected the field `message_flow` to be a primitive type in the JSON string but got " + data['message_flow']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['message_samples'])) {
            throw new Error("Expected the field `message_samples` to be an array in the JSON data but got " + data['message_samples']);
        }
        // ensure the json data is a string
        if (data['messaging_service_sid'] && !(typeof data['messaging_service_sid'] === 'string' || data['messaging_service_sid'] instanceof String)) {
            throw new Error("Expected the field `messaging_service_sid` to be a primitive type in the JSON string but got " + data['messaging_service_sid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['opt_in_keywords'])) {
            throw new Error("Expected the field `opt_in_keywords` to be an array in the JSON data but got " + data['opt_in_keywords']);
        }
        // ensure the json data is a string
        if (data['opt_in_message'] && !(typeof data['opt_in_message'] === 'string' || data['opt_in_message'] instanceof String)) {
            throw new Error("Expected the field `opt_in_message` to be a primitive type in the JSON string but got " + data['opt_in_message']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['opt_out_keywords'])) {
            throw new Error("Expected the field `opt_out_keywords` to be an array in the JSON data but got " + data['opt_out_keywords']);
        }
        // ensure the json data is a string
        if (data['opt_out_message'] && !(typeof data['opt_out_message'] === 'string' || data['opt_out_message'] instanceof String)) {
            throw new Error("Expected the field `opt_out_message` to be a primitive type in the JSON string but got " + data['opt_out_message']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['us_app_to_person_usecase'] && !(typeof data['us_app_to_person_usecase'] === 'string' || data['us_app_to_person_usecase'] instanceof String)) {
            throw new Error("Expected the field `us_app_to_person_usecase` to be a primitive type in the JSON string but got " + data['us_app_to_person_usecase']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the Campaign belongs to.
 * @member {String} account_sid
 */
MessagingV1ServiceUsAppToPerson.prototype['account_sid'] = undefined;

/**
 * A boolean that specifies whether campaign is age gated or not.
 * @member {Boolean} age_gated
 */
MessagingV1ServiceUsAppToPerson.prototype['age_gated'] = undefined;

/**
 * The unique string to identify the A2P brand.
 * @member {String} brand_registration_sid
 */
MessagingV1ServiceUsAppToPerson.prototype['brand_registration_sid'] = undefined;

/**
 * The Campaign Registry (TCR) Campaign ID.
 * @member {String} campaign_id
 */
MessagingV1ServiceUsAppToPerson.prototype['campaign_id'] = undefined;

/**
 * Campaign status. Examples: IN_PROGRESS, VERIFIED, FAILED.
 * @member {String} campaign_status
 */
MessagingV1ServiceUsAppToPerson.prototype['campaign_status'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
MessagingV1ServiceUsAppToPerson.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
MessagingV1ServiceUsAppToPerson.prototype['date_updated'] = undefined;

/**
 * A short description of what this SMS campaign does. Min length: 40 characters. Max length: 4096 characters.
 * @member {String} description
 */
MessagingV1ServiceUsAppToPerson.prototype['description'] = undefined;

/**
 * A boolean that specifies whether campaign allows direct lending or not.
 * @member {Boolean} direct_lending
 */
MessagingV1ServiceUsAppToPerson.prototype['direct_lending'] = undefined;

/**
 * Details indicating why a campaign registration failed. These errors can indicate one or more fields that were incorrect or did not meet review requirements.
 * @member {Array.<Object>} errors
 */
MessagingV1ServiceUsAppToPerson.prototype['errors'] = undefined;

/**
 * Indicate that this SMS campaign will send messages that contain links.
 * @member {Boolean} has_embedded_links
 */
MessagingV1ServiceUsAppToPerson.prototype['has_embedded_links'] = undefined;

/**
 * Indicates that this SMS campaign will send messages that contain phone numbers.
 * @member {Boolean} has_embedded_phone
 */
MessagingV1ServiceUsAppToPerson.prototype['has_embedded_phone'] = undefined;

/**
 * End users should be able to text in a keyword to receive help. Those keywords must be provided as part of the campaign registration request. This field is required if managing help keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.
 * @member {Array.<String>} help_keywords
 */
MessagingV1ServiceUsAppToPerson.prototype['help_keywords'] = undefined;

/**
 * When customers receive the help keywords from their end users, Twilio customers are expected to send back an auto-generated response; this may include the brand name and additional support contact information. This field is required if managing help keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.
 * @member {String} help_message
 */
MessagingV1ServiceUsAppToPerson.prototype['help_message'] = undefined;

/**
 * Indicates whether the campaign was registered externally or not.
 * @member {Boolean} is_externally_registered
 */
MessagingV1ServiceUsAppToPerson.prototype['is_externally_registered'] = undefined;

/**
 * Details around how a consumer opts-in to their campaign, therefore giving consent to receive their messages. If multiple opt-in methods can be used for the same campaign, they must all be listed. 40 character minimum. 2048 character maximum.
 * @member {String} message_flow
 */
MessagingV1ServiceUsAppToPerson.prototype['message_flow'] = undefined;

/**
 * An array of sample message strings, min two and max five. Min length for each sample: 20 chars. Max length for each sample: 1024 chars.
 * @member {Array.<String>} message_samples
 */
MessagingV1ServiceUsAppToPerson.prototype['message_samples'] = undefined;

/**
 * The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) that the resource is associated with.
 * @member {String} messaging_service_sid
 */
MessagingV1ServiceUsAppToPerson.prototype['messaging_service_sid'] = undefined;

/**
 * A boolean that specifies whether campaign is a mock or not. Mock campaigns will be automatically created if using a mock brand. Mock campaigns should only be used for testing purposes.
 * @member {Boolean} mock
 */
MessagingV1ServiceUsAppToPerson.prototype['mock'] = undefined;

/**
 * If end users can text in a keyword to start receiving messages from this campaign, those keywords must be provided. This field is required if end users can text in a keyword to start receiving messages from this campaign. Values must be alphanumeric. 255 character maximum.
 * @member {Array.<String>} opt_in_keywords
 */
MessagingV1ServiceUsAppToPerson.prototype['opt_in_keywords'] = undefined;

/**
 * If end users can text in a keyword to start receiving messages from this campaign, the auto-reply messages sent to the end users must be provided. The opt-in response should include the Brand name, confirmation of opt-in enrollment to a recurring message campaign, how to get help, and clear description of how to opt-out. This field is required if end users can text in a keyword to start receiving messages from this campaign. 20 character minimum. 320 character maximum.
 * @member {String} opt_in_message
 */
MessagingV1ServiceUsAppToPerson.prototype['opt_in_message'] = undefined;

/**
 * End users should be able to text in a keyword to stop receiving messages from this campaign. Those keywords must be provided. This field is required if managing opt out keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.
 * @member {Array.<String>} opt_out_keywords
 */
MessagingV1ServiceUsAppToPerson.prototype['opt_out_keywords'] = undefined;

/**
 * Upon receiving the opt-out keywords from the end users, Twilio customers are expected to send back an auto-generated response, which must provide acknowledgment of the opt-out request and confirmation that no further messages will be sent. It is also recommended that these opt-out messages include the brand name. This field is required if managing opt out keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.
 * @member {String} opt_out_message
 */
MessagingV1ServiceUsAppToPerson.prototype['opt_out_message'] = undefined;

/**
 * Rate limit and/or classification set by each carrier, Ex. AT&T or T-Mobile.
 * @member {Object} rate_limits
 */
MessagingV1ServiceUsAppToPerson.prototype['rate_limits'] = undefined;

/**
 * The unique string that identifies a US A2P Compliance resource `QE2c6890da8086d771620e9b13fadeba0b`.
 * @member {String} sid
 */
MessagingV1ServiceUsAppToPerson.prototype['sid'] = undefined;

/**
 * A boolean that specifies whether campaign has Subscriber Optin or not.
 * @member {Boolean} subscriber_opt_in
 */
MessagingV1ServiceUsAppToPerson.prototype['subscriber_opt_in'] = undefined;

/**
 * The absolute URL of the US App to Person resource.
 * @member {String} url
 */
MessagingV1ServiceUsAppToPerson.prototype['url'] = undefined;

/**
 * A2P Campaign Use Case. Examples: [ 2FA, EMERGENCY, MARKETING, SOLE_PROPRIETOR...]. SOLE_PROPRIETOR campaign use cases can only be created by SOLE_PROPRIETOR Brands, and there can only be one SOLE_PROPRIETOR campaign created per SOLE_PROPRIETOR Brand.
 * @member {String} us_app_to_person_usecase
 */
MessagingV1ServiceUsAppToPerson.prototype['us_app_to_person_usecase'] = undefined;






export default MessagingV1ServiceUsAppToPerson;

