/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BrandVettingEnumVettingProvider from './BrandVettingEnumVettingProvider';

/**
 * The MessagingV1BrandRegistrationsBrandVetting model module.
 * @module model/MessagingV1BrandRegistrationsBrandVetting
 * @version 1.55.0
 */
class MessagingV1BrandRegistrationsBrandVetting {
    /**
     * Constructs a new <code>MessagingV1BrandRegistrationsBrandVetting</code>.
     * @alias module:model/MessagingV1BrandRegistrationsBrandVetting
     */
    constructor() { 
        
        MessagingV1BrandRegistrationsBrandVetting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessagingV1BrandRegistrationsBrandVetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessagingV1BrandRegistrationsBrandVetting} obj Optional instance to populate.
     * @return {module:model/MessagingV1BrandRegistrationsBrandVetting} The populated <code>MessagingV1BrandRegistrationsBrandVetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessagingV1BrandRegistrationsBrandVetting();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('brand_sid')) {
                obj['brand_sid'] = ApiClient.convertToType(data['brand_sid'], 'String');
            }
            if (data.hasOwnProperty('brand_vetting_sid')) {
                obj['brand_vetting_sid'] = ApiClient.convertToType(data['brand_vetting_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('vetting_class')) {
                obj['vetting_class'] = ApiClient.convertToType(data['vetting_class'], 'String');
            }
            if (data.hasOwnProperty('vetting_id')) {
                obj['vetting_id'] = ApiClient.convertToType(data['vetting_id'], 'String');
            }
            if (data.hasOwnProperty('vetting_provider')) {
                obj['vetting_provider'] = BrandVettingEnumVettingProvider.constructFromObject(data['vetting_provider']);
            }
            if (data.hasOwnProperty('vetting_status')) {
                obj['vetting_status'] = ApiClient.convertToType(data['vetting_status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessagingV1BrandRegistrationsBrandVetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessagingV1BrandRegistrationsBrandVetting</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['brand_sid'] && !(typeof data['brand_sid'] === 'string' || data['brand_sid'] instanceof String)) {
            throw new Error("Expected the field `brand_sid` to be a primitive type in the JSON string but got " + data['brand_sid']);
        }
        // ensure the json data is a string
        if (data['brand_vetting_sid'] && !(typeof data['brand_vetting_sid'] === 'string' || data['brand_vetting_sid'] instanceof String)) {
            throw new Error("Expected the field `brand_vetting_sid` to be a primitive type in the JSON string but got " + data['brand_vetting_sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['vetting_class'] && !(typeof data['vetting_class'] === 'string' || data['vetting_class'] instanceof String)) {
            throw new Error("Expected the field `vetting_class` to be a primitive type in the JSON string but got " + data['vetting_class']);
        }
        // ensure the json data is a string
        if (data['vetting_id'] && !(typeof data['vetting_id'] === 'string' || data['vetting_id'] instanceof String)) {
            throw new Error("Expected the field `vetting_id` to be a primitive type in the JSON string but got " + data['vetting_id']);
        }
        // ensure the json data is a string
        if (data['vetting_provider'] && !(typeof data['vetting_provider'] === 'string' || data['vetting_provider'] instanceof String)) {
            throw new Error("Expected the field `vetting_provider` to be a primitive type in the JSON string but got " + data['vetting_provider']);
        }
        // ensure the json data is a string
        if (data['vetting_status'] && !(typeof data['vetting_status'] === 'string' || data['vetting_status'] instanceof String)) {
            throw new Error("Expected the field `vetting_status` to be a primitive type in the JSON string but got " + data['vetting_status']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the vetting record.
 * @member {String} account_sid
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['account_sid'] = undefined;

/**
 * The unique string to identify Brand Registration.
 * @member {String} brand_sid
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['brand_sid'] = undefined;

/**
 * The Twilio SID of the third-party vetting record.
 * @member {String} brand_vetting_sid
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['brand_vetting_sid'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['date_updated'] = undefined;

/**
 * The absolute URL of the Brand Vetting resource.
 * @member {String} url
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['url'] = undefined;

/**
 * The type of vetting that has been conducted. One of “STANDARD” (Aegis) or “POLITICAL” (Campaign Verify).
 * @member {String} vetting_class
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['vetting_class'] = undefined;

/**
 * The unique identifier of the vetting from the third-party provider.
 * @member {String} vetting_id
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['vetting_id'] = undefined;

/**
 * @member {module:model/BrandVettingEnumVettingProvider} vetting_provider
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['vetting_provider'] = undefined;

/**
 * The status of the import vetting attempt. One of “PENDING,” “SUCCESS,” or “FAILED”.
 * @member {String} vetting_status
 */
MessagingV1BrandRegistrationsBrandVetting.prototype['vetting_status'] = undefined;






export default MessagingV1BrandRegistrationsBrandVetting;

