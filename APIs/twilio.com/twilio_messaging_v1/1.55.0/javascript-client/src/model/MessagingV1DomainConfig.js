/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MessagingV1DomainConfig model module.
 * @module model/MessagingV1DomainConfig
 * @version 1.55.0
 */
class MessagingV1DomainConfig {
    /**
     * Constructs a new <code>MessagingV1DomainConfig</code>.
     * @alias module:model/MessagingV1DomainConfig
     */
    constructor() { 
        
        MessagingV1DomainConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessagingV1DomainConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessagingV1DomainConfig} obj Optional instance to populate.
     * @return {module:model/MessagingV1DomainConfig} The populated <code>MessagingV1DomainConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessagingV1DomainConfig();

            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
            if (data.hasOwnProperty('config_sid')) {
                obj['config_sid'] = ApiClient.convertToType(data['config_sid'], 'String');
            }
            if (data.hasOwnProperty('continue_on_failure')) {
                obj['continue_on_failure'] = ApiClient.convertToType(data['continue_on_failure'], 'Boolean');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('disable_https')) {
                obj['disable_https'] = ApiClient.convertToType(data['disable_https'], 'Boolean');
            }
            if (data.hasOwnProperty('domain_sid')) {
                obj['domain_sid'] = ApiClient.convertToType(data['domain_sid'], 'String');
            }
            if (data.hasOwnProperty('fallback_url')) {
                obj['fallback_url'] = ApiClient.convertToType(data['fallback_url'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessagingV1DomainConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessagingV1DomainConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
            throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
        }
        // ensure the json data is a string
        if (data['config_sid'] && !(typeof data['config_sid'] === 'string' || data['config_sid'] instanceof String)) {
            throw new Error("Expected the field `config_sid` to be a primitive type in the JSON string but got " + data['config_sid']);
        }
        // ensure the json data is a string
        if (data['domain_sid'] && !(typeof data['domain_sid'] === 'string' || data['domain_sid'] instanceof String)) {
            throw new Error("Expected the field `domain_sid` to be a primitive type in the JSON string but got " + data['domain_sid']);
        }
        // ensure the json data is a string
        if (data['fallback_url'] && !(typeof data['fallback_url'] === 'string' || data['fallback_url'] instanceof String)) {
            throw new Error("Expected the field `fallback_url` to be a primitive type in the JSON string but got " + data['fallback_url']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * URL to receive click events to your webhook whenever the recipients click on the shortened links.
 * @member {String} callback_url
 */
MessagingV1DomainConfig.prototype['callback_url'] = undefined;

/**
 * The unique string that we created to identify the Domain config (prefix ZK).
 * @member {String} config_sid
 */
MessagingV1DomainConfig.prototype['config_sid'] = undefined;

/**
 * Boolean field to set customer delivery preference when there is a failure in linkShortening service
 * @member {Boolean} continue_on_failure
 */
MessagingV1DomainConfig.prototype['continue_on_failure'] = undefined;

/**
 * Date this Domain Config was created.
 * @member {Date} date_created
 */
MessagingV1DomainConfig.prototype['date_created'] = undefined;

/**
 * Date that this Domain Config was last updated.
 * @member {Date} date_updated
 */
MessagingV1DomainConfig.prototype['date_updated'] = undefined;

/**
 * Customer's choice to send links with/without \"https://\" attached to shortened url. If true, messages will not be sent with https:// at the beginning of the url. If false, messages will be sent with https:// at the beginning of the url. False is the default behavior if it is not specified.
 * @member {Boolean} disable_https
 */
MessagingV1DomainConfig.prototype['disable_https'] = undefined;

/**
 * The unique string that we created to identify the Domain resource.
 * @member {String} domain_sid
 */
MessagingV1DomainConfig.prototype['domain_sid'] = undefined;

/**
 * Any requests we receive to this domain that do not match an existing shortened message will be redirected to the fallback url. These will likely be either expired messages, random misdirected traffic, or intentional scraping.
 * @member {String} fallback_url
 */
MessagingV1DomainConfig.prototype['fallback_url'] = undefined;

/**
 * @member {String} url
 */
MessagingV1DomainConfig.prototype['url'] = undefined;






export default MessagingV1DomainConfig;

