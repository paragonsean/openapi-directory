/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioMessaging);
  }
}(this, function(expect, TwilioMessaging) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MessagingV1ServiceUsAppToPerson', function() {
    it('should create an instance of MessagingV1ServiceUsAppToPerson', function() {
      // uncomment below and update the code to test MessagingV1ServiceUsAppToPerson
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be.a(TwilioMessaging.MessagingV1ServiceUsAppToPerson);
    });

    it('should have the property accountSid (base name: "account_sid")', function() {
      // uncomment below and update the code to test the property accountSid
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property ageGated (base name: "age_gated")', function() {
      // uncomment below and update the code to test the property ageGated
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property brandRegistrationSid (base name: "brand_registration_sid")', function() {
      // uncomment below and update the code to test the property brandRegistrationSid
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property campaignId (base name: "campaign_id")', function() {
      // uncomment below and update the code to test the property campaignId
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property campaignStatus (base name: "campaign_status")', function() {
      // uncomment below and update the code to test the property campaignStatus
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "date_created")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property dateUpdated (base name: "date_updated")', function() {
      // uncomment below and update the code to test the property dateUpdated
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property directLending (base name: "direct_lending")', function() {
      // uncomment below and update the code to test the property directLending
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property errors (base name: "errors")', function() {
      // uncomment below and update the code to test the property errors
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property hasEmbeddedLinks (base name: "has_embedded_links")', function() {
      // uncomment below and update the code to test the property hasEmbeddedLinks
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property hasEmbeddedPhone (base name: "has_embedded_phone")', function() {
      // uncomment below and update the code to test the property hasEmbeddedPhone
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property helpKeywords (base name: "help_keywords")', function() {
      // uncomment below and update the code to test the property helpKeywords
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property helpMessage (base name: "help_message")', function() {
      // uncomment below and update the code to test the property helpMessage
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property isExternallyRegistered (base name: "is_externally_registered")', function() {
      // uncomment below and update the code to test the property isExternallyRegistered
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property messageFlow (base name: "message_flow")', function() {
      // uncomment below and update the code to test the property messageFlow
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property messageSamples (base name: "message_samples")', function() {
      // uncomment below and update the code to test the property messageSamples
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property messagingServiceSid (base name: "messaging_service_sid")', function() {
      // uncomment below and update the code to test the property messagingServiceSid
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property mock (base name: "mock")', function() {
      // uncomment below and update the code to test the property mock
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property optInKeywords (base name: "opt_in_keywords")', function() {
      // uncomment below and update the code to test the property optInKeywords
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property optInMessage (base name: "opt_in_message")', function() {
      // uncomment below and update the code to test the property optInMessage
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property optOutKeywords (base name: "opt_out_keywords")', function() {
      // uncomment below and update the code to test the property optOutKeywords
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property optOutMessage (base name: "opt_out_message")', function() {
      // uncomment below and update the code to test the property optOutMessage
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property rateLimits (base name: "rate_limits")', function() {
      // uncomment below and update the code to test the property rateLimits
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property sid (base name: "sid")', function() {
      // uncomment below and update the code to test the property sid
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property subscriberOptIn (base name: "subscriber_opt_in")', function() {
      // uncomment below and update the code to test the property subscriberOptIn
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

    it('should have the property usAppToPersonUsecase (base name: "us_app_to_person_usecase")', function() {
      // uncomment below and update the code to test the property usAppToPersonUsecase
      //var instance = new TwilioMessaging.MessagingV1ServiceUsAppToPerson();
      //expect(instance).to.be();
    });

  });

}));
