/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessaging_v1_brand_registrations_brand_vetting.h
 *
 * 
 */

#ifndef OAIMessaging_v1_brand_registrations_brand_vetting_H
#define OAIMessaging_v1_brand_registrations_brand_vetting_H

#include <QJsonObject>

#include "OAIBrand_vetting_enum_vetting_provider.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMessaging_v1_brand_registrations_brand_vetting : public OAIObject {
public:
    OAIMessaging_v1_brand_registrations_brand_vetting();
    OAIMessaging_v1_brand_registrations_brand_vetting(QString json);
    ~OAIMessaging_v1_brand_registrations_brand_vetting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getBrandSid() const;
    void setBrandSid(const QString &brand_sid);
    bool is_brand_sid_Set() const;
    bool is_brand_sid_Valid() const;

    QString getBrandVettingSid() const;
    void setBrandVettingSid(const QString &brand_vetting_sid);
    bool is_brand_vetting_sid_Set() const;
    bool is_brand_vetting_sid_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVettingClass() const;
    void setVettingClass(const QString &vetting_class);
    bool is_vetting_class_Set() const;
    bool is_vetting_class_Valid() const;

    QString getVettingId() const;
    void setVettingId(const QString &vetting_id);
    bool is_vetting_id_Set() const;
    bool is_vetting_id_Valid() const;

    OAIBrand_vetting_enum_vetting_provider getVettingProvider() const;
    void setVettingProvider(const OAIBrand_vetting_enum_vetting_provider &vetting_provider);
    bool is_vetting_provider_Set() const;
    bool is_vetting_provider_Valid() const;

    QString getVettingStatus() const;
    void setVettingStatus(const QString &vetting_status);
    bool is_vetting_status_Set() const;
    bool is_vetting_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_brand_sid;
    bool m_brand_sid_isSet;
    bool m_brand_sid_isValid;

    QString m_brand_vetting_sid;
    bool m_brand_vetting_sid_isSet;
    bool m_brand_vetting_sid_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_vetting_class;
    bool m_vetting_class_isSet;
    bool m_vetting_class_isValid;

    QString m_vetting_id;
    bool m_vetting_id_isSet;
    bool m_vetting_id_isValid;

    OAIBrand_vetting_enum_vetting_provider m_vetting_provider;
    bool m_vetting_provider_isSet;
    bool m_vetting_provider_isValid;

    QString m_vetting_status;
    bool m_vetting_status_isSet;
    bool m_vetting_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessaging_v1_brand_registrations_brand_vetting)

#endif // OAIMessaging_v1_brand_registrations_brand_vetting_H
