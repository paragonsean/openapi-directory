/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessaging_v1_service_us_app_to_person.h
 *
 * 
 */

#ifndef OAIMessaging_v1_service_us_app_to_person_H
#define OAIMessaging_v1_service_us_app_to_person_H

#include <QJsonObject>

#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMessaging_v1_service_us_app_to_person : public OAIObject {
public:
    OAIMessaging_v1_service_us_app_to_person();
    OAIMessaging_v1_service_us_app_to_person(QString json);
    ~OAIMessaging_v1_service_us_app_to_person() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    bool isAgeGated() const;
    void setAgeGated(const bool &age_gated);
    bool is_age_gated_Set() const;
    bool is_age_gated_Valid() const;

    QString getBrandRegistrationSid() const;
    void setBrandRegistrationSid(const QString &brand_registration_sid);
    bool is_brand_registration_sid_Set() const;
    bool is_brand_registration_sid_Valid() const;

    QString getCampaignId() const;
    void setCampaignId(const QString &campaign_id);
    bool is_campaign_id_Set() const;
    bool is_campaign_id_Valid() const;

    QString getCampaignStatus() const;
    void setCampaignStatus(const QString &campaign_status);
    bool is_campaign_status_Set() const;
    bool is_campaign_status_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isDirectLending() const;
    void setDirectLending(const bool &direct_lending);
    bool is_direct_lending_Set() const;
    bool is_direct_lending_Valid() const;

    QList<QJsonValue> getErrors() const;
    void setErrors(const QList<QJsonValue> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    bool isHasEmbeddedLinks() const;
    void setHasEmbeddedLinks(const bool &has_embedded_links);
    bool is_has_embedded_links_Set() const;
    bool is_has_embedded_links_Valid() const;

    bool isHasEmbeddedPhone() const;
    void setHasEmbeddedPhone(const bool &has_embedded_phone);
    bool is_has_embedded_phone_Set() const;
    bool is_has_embedded_phone_Valid() const;

    QList<QString> getHelpKeywords() const;
    void setHelpKeywords(const QList<QString> &help_keywords);
    bool is_help_keywords_Set() const;
    bool is_help_keywords_Valid() const;

    QString getHelpMessage() const;
    void setHelpMessage(const QString &help_message);
    bool is_help_message_Set() const;
    bool is_help_message_Valid() const;

    bool isIsExternallyRegistered() const;
    void setIsExternallyRegistered(const bool &is_externally_registered);
    bool is_is_externally_registered_Set() const;
    bool is_is_externally_registered_Valid() const;

    QString getMessageFlow() const;
    void setMessageFlow(const QString &message_flow);
    bool is_message_flow_Set() const;
    bool is_message_flow_Valid() const;

    QList<QString> getMessageSamples() const;
    void setMessageSamples(const QList<QString> &message_samples);
    bool is_message_samples_Set() const;
    bool is_message_samples_Valid() const;

    QString getMessagingServiceSid() const;
    void setMessagingServiceSid(const QString &messaging_service_sid);
    bool is_messaging_service_sid_Set() const;
    bool is_messaging_service_sid_Valid() const;

    bool isMock() const;
    void setMock(const bool &mock);
    bool is_mock_Set() const;
    bool is_mock_Valid() const;

    QList<QString> getOptInKeywords() const;
    void setOptInKeywords(const QList<QString> &opt_in_keywords);
    bool is_opt_in_keywords_Set() const;
    bool is_opt_in_keywords_Valid() const;

    QString getOptInMessage() const;
    void setOptInMessage(const QString &opt_in_message);
    bool is_opt_in_message_Set() const;
    bool is_opt_in_message_Valid() const;

    QList<QString> getOptOutKeywords() const;
    void setOptOutKeywords(const QList<QString> &opt_out_keywords);
    bool is_opt_out_keywords_Set() const;
    bool is_opt_out_keywords_Valid() const;

    QString getOptOutMessage() const;
    void setOptOutMessage(const QString &opt_out_message);
    bool is_opt_out_message_Set() const;
    bool is_opt_out_message_Valid() const;

    QJsonValue getRateLimits() const;
    void setRateLimits(const QJsonValue &rate_limits);
    bool is_rate_limits_Set() const;
    bool is_rate_limits_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    bool isSubscriberOptIn() const;
    void setSubscriberOptIn(const bool &subscriber_opt_in);
    bool is_subscriber_opt_in_Set() const;
    bool is_subscriber_opt_in_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUsAppToPersonUsecase() const;
    void setUsAppToPersonUsecase(const QString &us_app_to_person_usecase);
    bool is_us_app_to_person_usecase_Set() const;
    bool is_us_app_to_person_usecase_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    bool m_age_gated;
    bool m_age_gated_isSet;
    bool m_age_gated_isValid;

    QString m_brand_registration_sid;
    bool m_brand_registration_sid_isSet;
    bool m_brand_registration_sid_isValid;

    QString m_campaign_id;
    bool m_campaign_id_isSet;
    bool m_campaign_id_isValid;

    QString m_campaign_status;
    bool m_campaign_status_isSet;
    bool m_campaign_status_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_direct_lending;
    bool m_direct_lending_isSet;
    bool m_direct_lending_isValid;

    QList<QJsonValue> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    bool m_has_embedded_links;
    bool m_has_embedded_links_isSet;
    bool m_has_embedded_links_isValid;

    bool m_has_embedded_phone;
    bool m_has_embedded_phone_isSet;
    bool m_has_embedded_phone_isValid;

    QList<QString> m_help_keywords;
    bool m_help_keywords_isSet;
    bool m_help_keywords_isValid;

    QString m_help_message;
    bool m_help_message_isSet;
    bool m_help_message_isValid;

    bool m_is_externally_registered;
    bool m_is_externally_registered_isSet;
    bool m_is_externally_registered_isValid;

    QString m_message_flow;
    bool m_message_flow_isSet;
    bool m_message_flow_isValid;

    QList<QString> m_message_samples;
    bool m_message_samples_isSet;
    bool m_message_samples_isValid;

    QString m_messaging_service_sid;
    bool m_messaging_service_sid_isSet;
    bool m_messaging_service_sid_isValid;

    bool m_mock;
    bool m_mock_isSet;
    bool m_mock_isValid;

    QList<QString> m_opt_in_keywords;
    bool m_opt_in_keywords_isSet;
    bool m_opt_in_keywords_isValid;

    QString m_opt_in_message;
    bool m_opt_in_message_isSet;
    bool m_opt_in_message_isValid;

    QList<QString> m_opt_out_keywords;
    bool m_opt_out_keywords_isSet;
    bool m_opt_out_keywords_isValid;

    QString m_opt_out_message;
    bool m_opt_out_message_isSet;
    bool m_opt_out_message_isValid;

    QJsonValue m_rate_limits;
    bool m_rate_limits_isSet;
    bool m_rate_limits_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    bool m_subscriber_opt_in;
    bool m_subscriber_opt_in_isSet;
    bool m_subscriber_opt_in_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_us_app_to_person_usecase;
    bool m_us_app_to_person_usecase_isSet;
    bool m_us_app_to_person_usecase_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessaging_v1_service_us_app_to_person)

#endif // OAIMessaging_v1_service_us_app_to_person_H
