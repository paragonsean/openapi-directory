/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessaging_v1_usecase.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessaging_v1_usecase::OAIMessaging_v1_usecase(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessaging_v1_usecase::OAIMessaging_v1_usecase() {
    this->initializeModel();
}

OAIMessaging_v1_usecase::~OAIMessaging_v1_usecase() {}

void OAIMessaging_v1_usecase::initializeModel() {

    m_usecases_isSet = false;
    m_usecases_isValid = false;
}

void OAIMessaging_v1_usecase::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessaging_v1_usecase::fromJsonObject(QJsonObject json) {

    m_usecases_isValid = ::OpenAPI::fromJsonValue(m_usecases, json[QString("usecases")]);
    m_usecases_isSet = !json[QString("usecases")].isNull() && m_usecases_isValid;
}

QString OAIMessaging_v1_usecase::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessaging_v1_usecase::asJsonObject() const {
    QJsonObject obj;
    if (m_usecases.size() > 0) {
        obj.insert(QString("usecases"), ::OpenAPI::toJsonValue(m_usecases));
    }
    return obj;
}

QList<QJsonValue> OAIMessaging_v1_usecase::getUsecases() const {
    return m_usecases;
}
void OAIMessaging_v1_usecase::setUsecases(const QList<QJsonValue> &usecases) {
    m_usecases = usecases;
    m_usecases_isSet = true;
}

bool OAIMessaging_v1_usecase::is_usecases_Set() const{
    return m_usecases_isSet;
}

bool OAIMessaging_v1_usecase::is_usecases_Valid() const{
    return m_usecases_isValid;
}

bool OAIMessaging_v1_usecase::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_usecases.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessaging_v1_usecase::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
