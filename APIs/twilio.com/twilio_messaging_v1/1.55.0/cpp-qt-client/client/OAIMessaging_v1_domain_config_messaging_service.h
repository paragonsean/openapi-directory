/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessaging_v1_domain_config_messaging_service.h
 *
 * 
 */

#ifndef OAIMessaging_v1_domain_config_messaging_service_H
#define OAIMessaging_v1_domain_config_messaging_service_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMessaging_v1_domain_config_messaging_service : public OAIObject {
public:
    OAIMessaging_v1_domain_config_messaging_service();
    OAIMessaging_v1_domain_config_messaging_service(QString json);
    ~OAIMessaging_v1_domain_config_messaging_service() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallbackUrl() const;
    void setCallbackUrl(const QString &callback_url);
    bool is_callback_url_Set() const;
    bool is_callback_url_Valid() const;

    QString getConfigSid() const;
    void setConfigSid(const QString &config_sid);
    bool is_config_sid_Set() const;
    bool is_config_sid_Valid() const;

    bool isContinueOnFailure() const;
    void setContinueOnFailure(const bool &continue_on_failure);
    bool is_continue_on_failure_Set() const;
    bool is_continue_on_failure_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getDomainSid() const;
    void setDomainSid(const QString &domain_sid);
    bool is_domain_sid_Set() const;
    bool is_domain_sid_Valid() const;

    QString getFallbackUrl() const;
    void setFallbackUrl(const QString &fallback_url);
    bool is_fallback_url_Set() const;
    bool is_fallback_url_Valid() const;

    QString getMessagingServiceSid() const;
    void setMessagingServiceSid(const QString &messaging_service_sid);
    bool is_messaging_service_sid_Set() const;
    bool is_messaging_service_sid_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_callback_url;
    bool m_callback_url_isSet;
    bool m_callback_url_isValid;

    QString m_config_sid;
    bool m_config_sid_isSet;
    bool m_config_sid_isValid;

    bool m_continue_on_failure;
    bool m_continue_on_failure_isSet;
    bool m_continue_on_failure_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_domain_sid;
    bool m_domain_sid_isSet;
    bool m_domain_sid_isValid;

    QString m_fallback_url;
    bool m_fallback_url_isSet;
    bool m_fallback_url_isValid;

    QString m_messaging_service_sid;
    bool m_messaging_service_sid_isSet;
    bool m_messaging_service_sid_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessaging_v1_domain_config_messaging_service)

#endif // OAIMessaging_v1_domain_config_messaging_service_H
