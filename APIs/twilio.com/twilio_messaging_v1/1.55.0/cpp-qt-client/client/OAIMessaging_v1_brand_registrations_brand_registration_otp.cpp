/**
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessaging_v1_brand_registrations_brand_registration_otp.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessaging_v1_brand_registrations_brand_registration_otp::OAIMessaging_v1_brand_registrations_brand_registration_otp(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessaging_v1_brand_registrations_brand_registration_otp::OAIMessaging_v1_brand_registrations_brand_registration_otp() {
    this->initializeModel();
}

OAIMessaging_v1_brand_registrations_brand_registration_otp::~OAIMessaging_v1_brand_registrations_brand_registration_otp() {}

void OAIMessaging_v1_brand_registrations_brand_registration_otp::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_brand_registration_sid_isSet = false;
    m_brand_registration_sid_isValid = false;
}

void OAIMessaging_v1_brand_registrations_brand_registration_otp::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessaging_v1_brand_registrations_brand_registration_otp::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_brand_registration_sid_isValid = ::OpenAPI::fromJsonValue(m_brand_registration_sid, json[QString("brand_registration_sid")]);
    m_brand_registration_sid_isSet = !json[QString("brand_registration_sid")].isNull() && m_brand_registration_sid_isValid;
}

QString OAIMessaging_v1_brand_registrations_brand_registration_otp::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessaging_v1_brand_registrations_brand_registration_otp::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_brand_registration_sid_isSet) {
        obj.insert(QString("brand_registration_sid"), ::OpenAPI::toJsonValue(m_brand_registration_sid));
    }
    return obj;
}

QString OAIMessaging_v1_brand_registrations_brand_registration_otp::getAccountSid() const {
    return m_account_sid;
}
void OAIMessaging_v1_brand_registrations_brand_registration_otp::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIMessaging_v1_brand_registrations_brand_registration_otp::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIMessaging_v1_brand_registrations_brand_registration_otp::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIMessaging_v1_brand_registrations_brand_registration_otp::getBrandRegistrationSid() const {
    return m_brand_registration_sid;
}
void OAIMessaging_v1_brand_registrations_brand_registration_otp::setBrandRegistrationSid(const QString &brand_registration_sid) {
    m_brand_registration_sid = brand_registration_sid;
    m_brand_registration_sid_isSet = true;
}

bool OAIMessaging_v1_brand_registrations_brand_registration_otp::is_brand_registration_sid_Set() const{
    return m_brand_registration_sid_isSet;
}

bool OAIMessaging_v1_brand_registrations_brand_registration_otp::is_brand_registration_sid_Valid() const{
    return m_brand_registration_sid_isValid;
}

bool OAIMessaging_v1_brand_registrations_brand_registration_otp::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand_registration_sid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessaging_v1_brand_registrations_brand_registration_otp::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
