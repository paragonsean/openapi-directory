# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class VoiceV1ArchivedCall(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: date=None, sid: str=None, url: str=None):
        """VoiceV1ArchivedCall - a model defined in OpenAPI

        :param _date: The _date of this VoiceV1ArchivedCall.
        :param sid: The sid of this VoiceV1ArchivedCall.
        :param url: The url of this VoiceV1ArchivedCall.
        """
        self.openapi_types = {
            '_date': date,
            'sid': str,
            'url': str
        }

        self.attribute_map = {
            '_date': 'date',
            'sid': 'sid',
            'url': 'url'
        }

        self.__date = _date
        self._sid = sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VoiceV1ArchivedCall':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The voice.v1.archived_call of this VoiceV1ArchivedCall.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this VoiceV1ArchivedCall.

        The date

        :return: The _date of this VoiceV1ArchivedCall.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this VoiceV1ArchivedCall.

        The date

        :param _date: The _date of this VoiceV1ArchivedCall.
        :type _date: date
        """

        self.__date = _date

    @property
    def sid(self):
        """Gets the sid of this VoiceV1ArchivedCall.

        The call sid

        :return: The sid of this VoiceV1ArchivedCall.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VoiceV1ArchivedCall.

        The call sid

        :param sid: The sid of this VoiceV1ArchivedCall.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^CA[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^CA[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this VoiceV1ArchivedCall.

        The absolute URL of the resource.

        :return: The url of this VoiceV1ArchivedCall.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VoiceV1ArchivedCall.

        The absolute URL of the resource.

        :param url: The url of this VoiceV1ArchivedCall.
        :type url: str
        """

        self._url = url
