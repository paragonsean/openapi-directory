# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class VoiceV1ByocTrunk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, cnam_lookup_enabled: bool=None, connection_policy_sid: str=None, date_created: datetime=None, date_updated: datetime=None, friendly_name: str=None, from_domain_sid: str=None, sid: str=None, status_callback_method: str=None, status_callback_url: str=None, url: str=None, voice_fallback_method: str=None, voice_fallback_url: str=None, voice_method: str=None, voice_url: str=None):
        """VoiceV1ByocTrunk - a model defined in OpenAPI

        :param account_sid: The account_sid of this VoiceV1ByocTrunk.
        :param cnam_lookup_enabled: The cnam_lookup_enabled of this VoiceV1ByocTrunk.
        :param connection_policy_sid: The connection_policy_sid of this VoiceV1ByocTrunk.
        :param date_created: The date_created of this VoiceV1ByocTrunk.
        :param date_updated: The date_updated of this VoiceV1ByocTrunk.
        :param friendly_name: The friendly_name of this VoiceV1ByocTrunk.
        :param from_domain_sid: The from_domain_sid of this VoiceV1ByocTrunk.
        :param sid: The sid of this VoiceV1ByocTrunk.
        :param status_callback_method: The status_callback_method of this VoiceV1ByocTrunk.
        :param status_callback_url: The status_callback_url of this VoiceV1ByocTrunk.
        :param url: The url of this VoiceV1ByocTrunk.
        :param voice_fallback_method: The voice_fallback_method of this VoiceV1ByocTrunk.
        :param voice_fallback_url: The voice_fallback_url of this VoiceV1ByocTrunk.
        :param voice_method: The voice_method of this VoiceV1ByocTrunk.
        :param voice_url: The voice_url of this VoiceV1ByocTrunk.
        """
        self.openapi_types = {
            'account_sid': str,
            'cnam_lookup_enabled': bool,
            'connection_policy_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'friendly_name': str,
            'from_domain_sid': str,
            'sid': str,
            'status_callback_method': str,
            'status_callback_url': str,
            'url': str,
            'voice_fallback_method': str,
            'voice_fallback_url': str,
            'voice_method': str,
            'voice_url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'cnam_lookup_enabled': 'cnam_lookup_enabled',
            'connection_policy_sid': 'connection_policy_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'from_domain_sid': 'from_domain_sid',
            'sid': 'sid',
            'status_callback_method': 'status_callback_method',
            'status_callback_url': 'status_callback_url',
            'url': 'url',
            'voice_fallback_method': 'voice_fallback_method',
            'voice_fallback_url': 'voice_fallback_url',
            'voice_method': 'voice_method',
            'voice_url': 'voice_url'
        }

        self._account_sid = account_sid
        self._cnam_lookup_enabled = cnam_lookup_enabled
        self._connection_policy_sid = connection_policy_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._from_domain_sid = from_domain_sid
        self._sid = sid
        self._status_callback_method = status_callback_method
        self._status_callback_url = status_callback_url
        self._url = url
        self._voice_fallback_method = voice_fallback_method
        self._voice_fallback_url = voice_fallback_url
        self._voice_method = voice_method
        self._voice_url = voice_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VoiceV1ByocTrunk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The voice.v1.byoc_trunk of this VoiceV1ByocTrunk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VoiceV1ByocTrunk.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the BYOC Trunk resource.

        :return: The account_sid of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VoiceV1ByocTrunk.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the BYOC Trunk resource.

        :param account_sid: The account_sid of this VoiceV1ByocTrunk.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def cnam_lookup_enabled(self):
        """Gets the cnam_lookup_enabled of this VoiceV1ByocTrunk.

        Whether Caller ID Name (CNAM) lookup is enabled for the trunk. If enabled, all inbound calls to the BYOC Trunk from the United States and Canada automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM Lookups](https://www.twilio.com/docs/sip-trunking#CNAM) for more information.

        :return: The cnam_lookup_enabled of this VoiceV1ByocTrunk.
        :rtype: bool
        """
        return self._cnam_lookup_enabled

    @cnam_lookup_enabled.setter
    def cnam_lookup_enabled(self, cnam_lookup_enabled):
        """Sets the cnam_lookup_enabled of this VoiceV1ByocTrunk.

        Whether Caller ID Name (CNAM) lookup is enabled for the trunk. If enabled, all inbound calls to the BYOC Trunk from the United States and Canada automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM Lookups](https://www.twilio.com/docs/sip-trunking#CNAM) for more information.

        :param cnam_lookup_enabled: The cnam_lookup_enabled of this VoiceV1ByocTrunk.
        :type cnam_lookup_enabled: bool
        """

        self._cnam_lookup_enabled = cnam_lookup_enabled

    @property
    def connection_policy_sid(self):
        """Gets the connection_policy_sid of this VoiceV1ByocTrunk.

        The SID of the Connection Policy that Twilio will use when routing traffic to your communications infrastructure.

        :return: The connection_policy_sid of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._connection_policy_sid

    @connection_policy_sid.setter
    def connection_policy_sid(self, connection_policy_sid):
        """Sets the connection_policy_sid of this VoiceV1ByocTrunk.

        The SID of the Connection Policy that Twilio will use when routing traffic to your communications infrastructure.

        :param connection_policy_sid: The connection_policy_sid of this VoiceV1ByocTrunk.
        :type connection_policy_sid: str
        """
        if connection_policy_sid is not None and len(connection_policy_sid) > 34:
            raise ValueError("Invalid value for `connection_policy_sid`, length must be less than or equal to `34`")
        if connection_policy_sid is not None and len(connection_policy_sid) < 34:
            raise ValueError("Invalid value for `connection_policy_sid`, length must be greater than or equal to `34`")
        if connection_policy_sid is not None and not re.search(r'^NY[0-9a-fA-F]{32}$', connection_policy_sid):
            raise ValueError("Invalid value for `connection_policy_sid`, must be a follow pattern or equal to `/^NY[0-9a-fA-F]{32}$/`")

        self._connection_policy_sid = connection_policy_sid

    @property
    def date_created(self):
        """Gets the date_created of this VoiceV1ByocTrunk.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this VoiceV1ByocTrunk.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VoiceV1ByocTrunk.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this VoiceV1ByocTrunk.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VoiceV1ByocTrunk.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this VoiceV1ByocTrunk.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VoiceV1ByocTrunk.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this VoiceV1ByocTrunk.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this VoiceV1ByocTrunk.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this VoiceV1ByocTrunk.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this VoiceV1ByocTrunk.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def from_domain_sid(self):
        """Gets the from_domain_sid of this VoiceV1ByocTrunk.

        The SID of the SIP Domain that should be used in the `From` header of originating calls sent to your SIP infrastructure. If your SIP infrastructure allows users to \"call back\" an incoming call, configure this with a [SIP Domain](https://www.twilio.com/docs/voice/api/sending-sip) to ensure proper routing. If not configured, the from domain will default to \"sip.twilio.com\".

        :return: The from_domain_sid of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._from_domain_sid

    @from_domain_sid.setter
    def from_domain_sid(self, from_domain_sid):
        """Sets the from_domain_sid of this VoiceV1ByocTrunk.

        The SID of the SIP Domain that should be used in the `From` header of originating calls sent to your SIP infrastructure. If your SIP infrastructure allows users to \"call back\" an incoming call, configure this with a [SIP Domain](https://www.twilio.com/docs/voice/api/sending-sip) to ensure proper routing. If not configured, the from domain will default to \"sip.twilio.com\".

        :param from_domain_sid: The from_domain_sid of this VoiceV1ByocTrunk.
        :type from_domain_sid: str
        """
        if from_domain_sid is not None and len(from_domain_sid) > 34:
            raise ValueError("Invalid value for `from_domain_sid`, length must be less than or equal to `34`")
        if from_domain_sid is not None and len(from_domain_sid) < 34:
            raise ValueError("Invalid value for `from_domain_sid`, length must be greater than or equal to `34`")
        if from_domain_sid is not None and not re.search(r'^SD[0-9a-fA-F]{32}$', from_domain_sid):
            raise ValueError("Invalid value for `from_domain_sid`, must be a follow pattern or equal to `/^SD[0-9a-fA-F]{32}$/`")

        self._from_domain_sid = from_domain_sid

    @property
    def sid(self):
        """Gets the sid of this VoiceV1ByocTrunk.

        The unique string that that we created to identify the BYOC Trunk resource.

        :return: The sid of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VoiceV1ByocTrunk.

        The unique string that that we created to identify the BYOC Trunk resource.

        :param sid: The sid of this VoiceV1ByocTrunk.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^BY[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^BY[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status_callback_method(self):
        """Gets the status_callback_method of this VoiceV1ByocTrunk.

        The HTTP method we use to call `status_callback_url`. Either `GET` or `POST`.

        :return: The status_callback_method of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._status_callback_method

    @status_callback_method.setter
    def status_callback_method(self, status_callback_method):
        """Sets the status_callback_method of this VoiceV1ByocTrunk.

        The HTTP method we use to call `status_callback_url`. Either `GET` or `POST`.

        :param status_callback_method: The status_callback_method of this VoiceV1ByocTrunk.
        :type status_callback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if status_callback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `status_callback_method` ({0}), must be one of {1}"
                .format(status_callback_method, allowed_values)
            )

        self._status_callback_method = status_callback_method

    @property
    def status_callback_url(self):
        """Gets the status_callback_url of this VoiceV1ByocTrunk.

        The URL that we call to pass status parameters (such as call ended) to your application.

        :return: The status_callback_url of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._status_callback_url

    @status_callback_url.setter
    def status_callback_url(self, status_callback_url):
        """Sets the status_callback_url of this VoiceV1ByocTrunk.

        The URL that we call to pass status parameters (such as call ended) to your application.

        :param status_callback_url: The status_callback_url of this VoiceV1ByocTrunk.
        :type status_callback_url: str
        """

        self._status_callback_url = status_callback_url

    @property
    def url(self):
        """Gets the url of this VoiceV1ByocTrunk.

        The absolute URL of the resource.

        :return: The url of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VoiceV1ByocTrunk.

        The absolute URL of the resource.

        :param url: The url of this VoiceV1ByocTrunk.
        :type url: str
        """

        self._url = url

    @property
    def voice_fallback_method(self):
        """Gets the voice_fallback_method of this VoiceV1ByocTrunk.

        The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.

        :return: The voice_fallback_method of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._voice_fallback_method

    @voice_fallback_method.setter
    def voice_fallback_method(self, voice_fallback_method):
        """Sets the voice_fallback_method of this VoiceV1ByocTrunk.

        The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.

        :param voice_fallback_method: The voice_fallback_method of this VoiceV1ByocTrunk.
        :type voice_fallback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if voice_fallback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `voice_fallback_method` ({0}), must be one of {1}"
                .format(voice_fallback_method, allowed_values)
            )

        self._voice_fallback_method = voice_fallback_method

    @property
    def voice_fallback_url(self):
        """Gets the voice_fallback_url of this VoiceV1ByocTrunk.

        The URL that we call when an error occurs while retrieving or executing the TwiML requested from `voice_url`.

        :return: The voice_fallback_url of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._voice_fallback_url

    @voice_fallback_url.setter
    def voice_fallback_url(self, voice_fallback_url):
        """Sets the voice_fallback_url of this VoiceV1ByocTrunk.

        The URL that we call when an error occurs while retrieving or executing the TwiML requested from `voice_url`.

        :param voice_fallback_url: The voice_fallback_url of this VoiceV1ByocTrunk.
        :type voice_fallback_url: str
        """

        self._voice_fallback_url = voice_fallback_url

    @property
    def voice_method(self):
        """Gets the voice_method of this VoiceV1ByocTrunk.

        The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.

        :return: The voice_method of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._voice_method

    @voice_method.setter
    def voice_method(self, voice_method):
        """Sets the voice_method of this VoiceV1ByocTrunk.

        The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.

        :param voice_method: The voice_method of this VoiceV1ByocTrunk.
        :type voice_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if voice_method not in allowed_values:
            raise ValueError(
                "Invalid value for `voice_method` ({0}), must be one of {1}"
                .format(voice_method, allowed_values)
            )

        self._voice_method = voice_method

    @property
    def voice_url(self):
        """Gets the voice_url of this VoiceV1ByocTrunk.

        The URL we call using the `voice_method` when the BYOC Trunk receives a call.

        :return: The voice_url of this VoiceV1ByocTrunk.
        :rtype: str
        """
        return self._voice_url

    @voice_url.setter
    def voice_url(self, voice_url):
        """Sets the voice_url of this VoiceV1ByocTrunk.

        The URL we call using the `voice_method` when the BYOC Trunk receives a call.

        :param voice_url: The voice_url of this VoiceV1ByocTrunk.
        :type voice_url: str
        """

        self._voice_url = voice_url
