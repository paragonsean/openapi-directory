# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class VoiceV1ConnectionPolicyConnectionPolicyTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, connection_policy_sid: str=None, date_created: datetime=None, date_updated: datetime=None, enabled: bool=None, friendly_name: str=None, priority: int=None, sid: str=None, target: str=None, url: str=None, weight: int=None):
        """VoiceV1ConnectionPolicyConnectionPolicyTarget - a model defined in OpenAPI

        :param account_sid: The account_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param connection_policy_sid: The connection_policy_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param date_created: The date_created of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param date_updated: The date_updated of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param enabled: The enabled of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param friendly_name: The friendly_name of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param priority: The priority of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param sid: The sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param target: The target of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param url: The url of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :param weight: The weight of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        """
        self.openapi_types = {
            'account_sid': str,
            'connection_policy_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'enabled': bool,
            'friendly_name': str,
            'priority': int,
            'sid': str,
            'target': str,
            'url': str,
            'weight': int
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'connection_policy_sid': 'connection_policy_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'enabled': 'enabled',
            'friendly_name': 'friendly_name',
            'priority': 'priority',
            'sid': 'sid',
            'target': 'target',
            'url': 'url',
            'weight': 'weight'
        }

        self._account_sid = account_sid
        self._connection_policy_sid = connection_policy_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._enabled = enabled
        self._friendly_name = friendly_name
        self._priority = priority
        self._sid = sid
        self._target = target
        self._url = url
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VoiceV1ConnectionPolicyConnectionPolicyTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The voice.v1.connection_policy.connection_policy_target of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Target resource.

        :return: The account_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Target resource.

        :param account_sid: The account_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def connection_policy_sid(self):
        """Gets the connection_policy_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The SID of the Connection Policy that owns the Target.

        :return: The connection_policy_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: str
        """
        return self._connection_policy_sid

    @connection_policy_sid.setter
    def connection_policy_sid(self, connection_policy_sid):
        """Sets the connection_policy_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The SID of the Connection Policy that owns the Target.

        :param connection_policy_sid: The connection_policy_sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type connection_policy_sid: str
        """
        if connection_policy_sid is not None and len(connection_policy_sid) > 34:
            raise ValueError("Invalid value for `connection_policy_sid`, length must be less than or equal to `34`")
        if connection_policy_sid is not None and len(connection_policy_sid) < 34:
            raise ValueError("Invalid value for `connection_policy_sid`, length must be greater than or equal to `34`")
        if connection_policy_sid is not None and not re.search(r'^NY[0-9a-fA-F]{32}$', connection_policy_sid):
            raise ValueError("Invalid value for `connection_policy_sid`, must be a follow pattern or equal to `/^NY[0-9a-fA-F]{32}$/`")

        self._connection_policy_sid = connection_policy_sid

    @property
    def date_created(self):
        """Gets the date_created of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def enabled(self):
        """Gets the enabled of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        Whether the target is enabled. The default is `true`.

        :return: The enabled of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        Whether the target is enabled. The default is `true`.

        :param enabled: The enabled of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def friendly_name(self):
        """Gets the friendly_name of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def priority(self):
        """Gets the priority of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The relative importance of the target. Can be an integer from 0 to 65535, inclusive, and the default is 10. The lowest number represents the most important target.

        :return: The priority of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The relative importance of the target. Can be an integer from 0 to 65535, inclusive, and the default is 10. The lowest number represents the most important target.

        :param priority: The priority of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type priority: int
        """

        self._priority = priority

    @property
    def sid(self):
        """Gets the sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The unique string that we created to identify the Target resource.

        :return: The sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The unique string that we created to identify the Target resource.

        :param sid: The sid of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^NE[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^NE[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def target(self):
        """Gets the target of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The SIP address you want Twilio to route your calls to. This must be a `sip:` schema. `sips` is NOT supported.

        :return: The target of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The SIP address you want Twilio to route your calls to. This must be a `sip:` schema. `sips` is NOT supported.

        :param target: The target of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type target: str
        """

        self._target = target

    @property
    def url(self):
        """Gets the url of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The absolute URL of the resource.

        :return: The url of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The absolute URL of the resource.

        :param url: The url of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type url: str
        """

        self._url = url

    @property
    def weight(self):
        """Gets the weight of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The value that determines the relative share of the load the Target should receive compared to other Targets with the same priority. Can be an integer from 1 to 65535, inclusive, and the default is 10. Targets with higher values receive more load than those with lower ones with the same priority.

        :return: The weight of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this VoiceV1ConnectionPolicyConnectionPolicyTarget.

        The value that determines the relative share of the load the Target should receive compared to other Targets with the same priority. Can be an integer from 1 to 65535, inclusive, and the default is 10. Targets with higher values receive more load than those with lower ones with the same priority.

        :param weight: The weight of this VoiceV1ConnectionPolicyConnectionPolicyTarget.
        :type weight: int
        """

        self._weight = weight
