# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class VoiceV1SourceIpMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_created: datetime=None, date_updated: datetime=None, ip_record_sid: str=None, sid: str=None, sip_domain_sid: str=None, url: str=None):
        """VoiceV1SourceIpMapping - a model defined in OpenAPI

        :param date_created: The date_created of this VoiceV1SourceIpMapping.
        :param date_updated: The date_updated of this VoiceV1SourceIpMapping.
        :param ip_record_sid: The ip_record_sid of this VoiceV1SourceIpMapping.
        :param sid: The sid of this VoiceV1SourceIpMapping.
        :param sip_domain_sid: The sip_domain_sid of this VoiceV1SourceIpMapping.
        :param url: The url of this VoiceV1SourceIpMapping.
        """
        self.openapi_types = {
            'date_created': datetime,
            'date_updated': datetime,
            'ip_record_sid': str,
            'sid': str,
            'sip_domain_sid': str,
            'url': str
        }

        self.attribute_map = {
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'ip_record_sid': 'ip_record_sid',
            'sid': 'sid',
            'sip_domain_sid': 'sip_domain_sid',
            'url': 'url'
        }

        self._date_created = date_created
        self._date_updated = date_updated
        self._ip_record_sid = ip_record_sid
        self._sid = sid
        self._sip_domain_sid = sip_domain_sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VoiceV1SourceIpMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The voice.v1.source_ip_mapping of this VoiceV1SourceIpMapping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_created(self):
        """Gets the date_created of this VoiceV1SourceIpMapping.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this VoiceV1SourceIpMapping.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VoiceV1SourceIpMapping.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this VoiceV1SourceIpMapping.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VoiceV1SourceIpMapping.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this VoiceV1SourceIpMapping.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VoiceV1SourceIpMapping.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this VoiceV1SourceIpMapping.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def ip_record_sid(self):
        """Gets the ip_record_sid of this VoiceV1SourceIpMapping.

        The Twilio-provided string that uniquely identifies the IP Record resource to map from.

        :return: The ip_record_sid of this VoiceV1SourceIpMapping.
        :rtype: str
        """
        return self._ip_record_sid

    @ip_record_sid.setter
    def ip_record_sid(self, ip_record_sid):
        """Sets the ip_record_sid of this VoiceV1SourceIpMapping.

        The Twilio-provided string that uniquely identifies the IP Record resource to map from.

        :param ip_record_sid: The ip_record_sid of this VoiceV1SourceIpMapping.
        :type ip_record_sid: str
        """
        if ip_record_sid is not None and len(ip_record_sid) > 34:
            raise ValueError("Invalid value for `ip_record_sid`, length must be less than or equal to `34`")
        if ip_record_sid is not None and len(ip_record_sid) < 34:
            raise ValueError("Invalid value for `ip_record_sid`, length must be greater than or equal to `34`")
        if ip_record_sid is not None and not re.search(r'^IL[0-9a-fA-F]{32}$', ip_record_sid):
            raise ValueError("Invalid value for `ip_record_sid`, must be a follow pattern or equal to `/^IL[0-9a-fA-F]{32}$/`")

        self._ip_record_sid = ip_record_sid

    @property
    def sid(self):
        """Gets the sid of this VoiceV1SourceIpMapping.

        The unique string that we created to identify the IP Record resource.

        :return: The sid of this VoiceV1SourceIpMapping.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VoiceV1SourceIpMapping.

        The unique string that we created to identify the IP Record resource.

        :param sid: The sid of this VoiceV1SourceIpMapping.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^IB[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^IB[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def sip_domain_sid(self):
        """Gets the sip_domain_sid of this VoiceV1SourceIpMapping.

        The SID of the SIP Domain that the IP Record is mapped to.

        :return: The sip_domain_sid of this VoiceV1SourceIpMapping.
        :rtype: str
        """
        return self._sip_domain_sid

    @sip_domain_sid.setter
    def sip_domain_sid(self, sip_domain_sid):
        """Sets the sip_domain_sid of this VoiceV1SourceIpMapping.

        The SID of the SIP Domain that the IP Record is mapped to.

        :param sip_domain_sid: The sip_domain_sid of this VoiceV1SourceIpMapping.
        :type sip_domain_sid: str
        """
        if sip_domain_sid is not None and len(sip_domain_sid) > 34:
            raise ValueError("Invalid value for `sip_domain_sid`, length must be less than or equal to `34`")
        if sip_domain_sid is not None and len(sip_domain_sid) < 34:
            raise ValueError("Invalid value for `sip_domain_sid`, length must be greater than or equal to `34`")
        if sip_domain_sid is not None and not re.search(r'^SD[0-9a-fA-F]{32}$', sip_domain_sid):
            raise ValueError("Invalid value for `sip_domain_sid`, must be a follow pattern or equal to `/^SD[0-9a-fA-F]{32}$/`")

        self._sip_domain_sid = sip_domain_sid

    @property
    def url(self):
        """Gets the url of this VoiceV1SourceIpMapping.

        The absolute URL of the resource.

        :return: The url of this VoiceV1SourceIpMapping.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VoiceV1SourceIpMapping.

        The absolute URL of the resource.

        :param url: The url of this VoiceV1SourceIpMapping.
        :type url: str
        """

        self._url = url
