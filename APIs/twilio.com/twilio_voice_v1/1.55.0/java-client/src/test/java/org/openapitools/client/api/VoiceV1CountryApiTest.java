/*
 * Twilio - Voice
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListDialingPermissionsCountryResponse;
import org.openapitools.client.model.VoiceV1DialingPermissionsDialingPermissionsCountryInstance;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VoiceV1CountryApi
 */
@Disabled
public class VoiceV1CountryApiTest {

    private final VoiceV1CountryApi api = new VoiceV1CountryApi();

    /**
     * Retrieve voice dialing country permissions identified by the given ISO country code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchDialingPermissionsCountryTest() throws ApiException {
        String isoCode = null;
        VoiceV1DialingPermissionsDialingPermissionsCountryInstance response = api.fetchDialingPermissionsCountry(isoCode);
        // TODO: test validations
    }

    /**
     * Retrieve all voice dialing country permissions for this account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDialingPermissionsCountryTest() throws ApiException {
        String isoCode = null;
        String continent = null;
        String countryCode = null;
        Boolean lowRiskNumbersEnabled = null;
        Boolean highRiskSpecialNumbersEnabled = null;
        Boolean highRiskTollfraudNumbersEnabled = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListDialingPermissionsCountryResponse response = api.listDialingPermissionsCountry(isoCode, continent, countryCode, lowRiskNumbersEnabled, highRiskSpecialNumbersEnabled, highRiskTollfraudNumbersEnabled, pageSize, page, pageToken);
        // TODO: test validations
    }

}
