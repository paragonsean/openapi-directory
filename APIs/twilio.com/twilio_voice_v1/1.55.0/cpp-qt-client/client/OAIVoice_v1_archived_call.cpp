/**
 * Twilio - Voice
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoice_v1_archived_call.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoice_v1_archived_call::OAIVoice_v1_archived_call(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoice_v1_archived_call::OAIVoice_v1_archived_call() {
    this->initializeModel();
}

OAIVoice_v1_archived_call::~OAIVoice_v1_archived_call() {}

void OAIVoice_v1_archived_call::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIVoice_v1_archived_call::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoice_v1_archived_call::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIVoice_v1_archived_call::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoice_v1_archived_call::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QDate OAIVoice_v1_archived_call::getDate() const {
    return m_date;
}
void OAIVoice_v1_archived_call::setDate(const QDate &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIVoice_v1_archived_call::is_date_Set() const{
    return m_date_isSet;
}

bool OAIVoice_v1_archived_call::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIVoice_v1_archived_call::getSid() const {
    return m_sid;
}
void OAIVoice_v1_archived_call::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIVoice_v1_archived_call::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIVoice_v1_archived_call::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIVoice_v1_archived_call::getUrl() const {
    return m_url;
}
void OAIVoice_v1_archived_call::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIVoice_v1_archived_call::is_url_Set() const{
    return m_url_isSet;
}

bool OAIVoice_v1_archived_call::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIVoice_v1_archived_call::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoice_v1_archived_call::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
