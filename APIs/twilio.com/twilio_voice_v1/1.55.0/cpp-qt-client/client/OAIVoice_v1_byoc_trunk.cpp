/**
 * Twilio - Voice
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoice_v1_byoc_trunk.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoice_v1_byoc_trunk::OAIVoice_v1_byoc_trunk(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoice_v1_byoc_trunk::OAIVoice_v1_byoc_trunk() {
    this->initializeModel();
}

OAIVoice_v1_byoc_trunk::~OAIVoice_v1_byoc_trunk() {}

void OAIVoice_v1_byoc_trunk::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_cnam_lookup_enabled_isSet = false;
    m_cnam_lookup_enabled_isValid = false;

    m_connection_policy_sid_isSet = false;
    m_connection_policy_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_from_domain_sid_isSet = false;
    m_from_domain_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_status_callback_method_isSet = false;
    m_status_callback_method_isValid = false;

    m_status_callback_url_isSet = false;
    m_status_callback_url_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_voice_fallback_method_isSet = false;
    m_voice_fallback_method_isValid = false;

    m_voice_fallback_url_isSet = false;
    m_voice_fallback_url_isValid = false;

    m_voice_method_isSet = false;
    m_voice_method_isValid = false;

    m_voice_url_isSet = false;
    m_voice_url_isValid = false;
}

void OAIVoice_v1_byoc_trunk::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoice_v1_byoc_trunk::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_cnam_lookup_enabled_isValid = ::OpenAPI::fromJsonValue(m_cnam_lookup_enabled, json[QString("cnam_lookup_enabled")]);
    m_cnam_lookup_enabled_isSet = !json[QString("cnam_lookup_enabled")].isNull() && m_cnam_lookup_enabled_isValid;

    m_connection_policy_sid_isValid = ::OpenAPI::fromJsonValue(m_connection_policy_sid, json[QString("connection_policy_sid")]);
    m_connection_policy_sid_isSet = !json[QString("connection_policy_sid")].isNull() && m_connection_policy_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_from_domain_sid_isValid = ::OpenAPI::fromJsonValue(m_from_domain_sid, json[QString("from_domain_sid")]);
    m_from_domain_sid_isSet = !json[QString("from_domain_sid")].isNull() && m_from_domain_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_status_callback_method_isValid = ::OpenAPI::fromJsonValue(m_status_callback_method, json[QString("status_callback_method")]);
    m_status_callback_method_isSet = !json[QString("status_callback_method")].isNull() && m_status_callback_method_isValid;

    m_status_callback_url_isValid = ::OpenAPI::fromJsonValue(m_status_callback_url, json[QString("status_callback_url")]);
    m_status_callback_url_isSet = !json[QString("status_callback_url")].isNull() && m_status_callback_url_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_voice_fallback_method_isValid = ::OpenAPI::fromJsonValue(m_voice_fallback_method, json[QString("voice_fallback_method")]);
    m_voice_fallback_method_isSet = !json[QString("voice_fallback_method")].isNull() && m_voice_fallback_method_isValid;

    m_voice_fallback_url_isValid = ::OpenAPI::fromJsonValue(m_voice_fallback_url, json[QString("voice_fallback_url")]);
    m_voice_fallback_url_isSet = !json[QString("voice_fallback_url")].isNull() && m_voice_fallback_url_isValid;

    m_voice_method_isValid = ::OpenAPI::fromJsonValue(m_voice_method, json[QString("voice_method")]);
    m_voice_method_isSet = !json[QString("voice_method")].isNull() && m_voice_method_isValid;

    m_voice_url_isValid = ::OpenAPI::fromJsonValue(m_voice_url, json[QString("voice_url")]);
    m_voice_url_isSet = !json[QString("voice_url")].isNull() && m_voice_url_isValid;
}

QString OAIVoice_v1_byoc_trunk::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoice_v1_byoc_trunk::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_cnam_lookup_enabled_isSet) {
        obj.insert(QString("cnam_lookup_enabled"), ::OpenAPI::toJsonValue(m_cnam_lookup_enabled));
    }
    if (m_connection_policy_sid_isSet) {
        obj.insert(QString("connection_policy_sid"), ::OpenAPI::toJsonValue(m_connection_policy_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_from_domain_sid_isSet) {
        obj.insert(QString("from_domain_sid"), ::OpenAPI::toJsonValue(m_from_domain_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_status_callback_method_isSet) {
        obj.insert(QString("status_callback_method"), ::OpenAPI::toJsonValue(m_status_callback_method));
    }
    if (m_status_callback_url_isSet) {
        obj.insert(QString("status_callback_url"), ::OpenAPI::toJsonValue(m_status_callback_url));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_voice_fallback_method_isSet) {
        obj.insert(QString("voice_fallback_method"), ::OpenAPI::toJsonValue(m_voice_fallback_method));
    }
    if (m_voice_fallback_url_isSet) {
        obj.insert(QString("voice_fallback_url"), ::OpenAPI::toJsonValue(m_voice_fallback_url));
    }
    if (m_voice_method_isSet) {
        obj.insert(QString("voice_method"), ::OpenAPI::toJsonValue(m_voice_method));
    }
    if (m_voice_url_isSet) {
        obj.insert(QString("voice_url"), ::OpenAPI::toJsonValue(m_voice_url));
    }
    return obj;
}

QString OAIVoice_v1_byoc_trunk::getAccountSid() const {
    return m_account_sid;
}
void OAIVoice_v1_byoc_trunk::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

bool OAIVoice_v1_byoc_trunk::isCnamLookupEnabled() const {
    return m_cnam_lookup_enabled;
}
void OAIVoice_v1_byoc_trunk::setCnamLookupEnabled(const bool &cnam_lookup_enabled) {
    m_cnam_lookup_enabled = cnam_lookup_enabled;
    m_cnam_lookup_enabled_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_cnam_lookup_enabled_Set() const{
    return m_cnam_lookup_enabled_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_cnam_lookup_enabled_Valid() const{
    return m_cnam_lookup_enabled_isValid;
}

QString OAIVoice_v1_byoc_trunk::getConnectionPolicySid() const {
    return m_connection_policy_sid;
}
void OAIVoice_v1_byoc_trunk::setConnectionPolicySid(const QString &connection_policy_sid) {
    m_connection_policy_sid = connection_policy_sid;
    m_connection_policy_sid_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_connection_policy_sid_Set() const{
    return m_connection_policy_sid_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_connection_policy_sid_Valid() const{
    return m_connection_policy_sid_isValid;
}

QDateTime OAIVoice_v1_byoc_trunk::getDateCreated() const {
    return m_date_created;
}
void OAIVoice_v1_byoc_trunk::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIVoice_v1_byoc_trunk::getDateUpdated() const {
    return m_date_updated;
}
void OAIVoice_v1_byoc_trunk::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIVoice_v1_byoc_trunk::getFriendlyName() const {
    return m_friendly_name;
}
void OAIVoice_v1_byoc_trunk::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIVoice_v1_byoc_trunk::getFromDomainSid() const {
    return m_from_domain_sid;
}
void OAIVoice_v1_byoc_trunk::setFromDomainSid(const QString &from_domain_sid) {
    m_from_domain_sid = from_domain_sid;
    m_from_domain_sid_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_from_domain_sid_Set() const{
    return m_from_domain_sid_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_from_domain_sid_Valid() const{
    return m_from_domain_sid_isValid;
}

QString OAIVoice_v1_byoc_trunk::getSid() const {
    return m_sid;
}
void OAIVoice_v1_byoc_trunk::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIVoice_v1_byoc_trunk::getStatusCallbackMethod() const {
    return m_status_callback_method;
}
void OAIVoice_v1_byoc_trunk::setStatusCallbackMethod(const QString &status_callback_method) {
    m_status_callback_method = status_callback_method;
    m_status_callback_method_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_status_callback_method_Set() const{
    return m_status_callback_method_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_status_callback_method_Valid() const{
    return m_status_callback_method_isValid;
}

QString OAIVoice_v1_byoc_trunk::getStatusCallbackUrl() const {
    return m_status_callback_url;
}
void OAIVoice_v1_byoc_trunk::setStatusCallbackUrl(const QString &status_callback_url) {
    m_status_callback_url = status_callback_url;
    m_status_callback_url_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_status_callback_url_Set() const{
    return m_status_callback_url_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_status_callback_url_Valid() const{
    return m_status_callback_url_isValid;
}

QString OAIVoice_v1_byoc_trunk::getUrl() const {
    return m_url;
}
void OAIVoice_v1_byoc_trunk::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_url_Set() const{
    return m_url_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIVoice_v1_byoc_trunk::getVoiceFallbackMethod() const {
    return m_voice_fallback_method;
}
void OAIVoice_v1_byoc_trunk::setVoiceFallbackMethod(const QString &voice_fallback_method) {
    m_voice_fallback_method = voice_fallback_method;
    m_voice_fallback_method_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_voice_fallback_method_Set() const{
    return m_voice_fallback_method_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_voice_fallback_method_Valid() const{
    return m_voice_fallback_method_isValid;
}

QString OAIVoice_v1_byoc_trunk::getVoiceFallbackUrl() const {
    return m_voice_fallback_url;
}
void OAIVoice_v1_byoc_trunk::setVoiceFallbackUrl(const QString &voice_fallback_url) {
    m_voice_fallback_url = voice_fallback_url;
    m_voice_fallback_url_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_voice_fallback_url_Set() const{
    return m_voice_fallback_url_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_voice_fallback_url_Valid() const{
    return m_voice_fallback_url_isValid;
}

QString OAIVoice_v1_byoc_trunk::getVoiceMethod() const {
    return m_voice_method;
}
void OAIVoice_v1_byoc_trunk::setVoiceMethod(const QString &voice_method) {
    m_voice_method = voice_method;
    m_voice_method_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_voice_method_Set() const{
    return m_voice_method_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_voice_method_Valid() const{
    return m_voice_method_isValid;
}

QString OAIVoice_v1_byoc_trunk::getVoiceUrl() const {
    return m_voice_url;
}
void OAIVoice_v1_byoc_trunk::setVoiceUrl(const QString &voice_url) {
    m_voice_url = voice_url;
    m_voice_url_isSet = true;
}

bool OAIVoice_v1_byoc_trunk::is_voice_url_Set() const{
    return m_voice_url_isSet;
}

bool OAIVoice_v1_byoc_trunk::is_voice_url_Valid() const{
    return m_voice_url_isValid;
}

bool OAIVoice_v1_byoc_trunk::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cnam_lookup_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connection_policy_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_domain_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_callback_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_callback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_fallback_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_fallback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoice_v1_byoc_trunk::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
