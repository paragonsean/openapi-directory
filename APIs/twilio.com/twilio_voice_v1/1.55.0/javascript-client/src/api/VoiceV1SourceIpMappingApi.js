/**
 * Twilio - Voice
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListSourceIpMappingResponse from '../model/ListSourceIpMappingResponse';
import VoiceV1SourceIpMapping from '../model/VoiceV1SourceIpMapping';

/**
* VoiceV1SourceIpMapping service.
* @module api/VoiceV1SourceIpMappingApi
* @version 1.55.0
*/
export default class VoiceV1SourceIpMappingApi {

    /**
    * Constructs a new VoiceV1SourceIpMappingApi. 
    * @alias module:api/VoiceV1SourceIpMappingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSourceIpMapping operation.
     * @callback module:api/VoiceV1SourceIpMappingApi~createSourceIpMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceV1SourceIpMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} ipRecordSid The Twilio-provided string that uniquely identifies the IP Record resource to map from.
     * @param {String} sipDomainSid The SID of the SIP Domain that the IP Record should be mapped to.
     * @param {module:api/VoiceV1SourceIpMappingApi~createSourceIpMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceV1SourceIpMapping}
     */
    createSourceIpMapping(ipRecordSid, sipDomainSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ipRecordSid' is set
      if (ipRecordSid === undefined || ipRecordSid === null) {
        throw new Error("Missing the required parameter 'ipRecordSid' when calling createSourceIpMapping");
      }
      // verify the required parameter 'sipDomainSid' is set
      if (sipDomainSid === undefined || sipDomainSid === null) {
        throw new Error("Missing the required parameter 'sipDomainSid' when calling createSourceIpMapping");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'IpRecordSid': ipRecordSid,
        'SipDomainSid': sipDomainSid
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VoiceV1SourceIpMapping;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SourceIpMappings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSourceIpMapping operation.
     * @callback module:api/VoiceV1SourceIpMappingApi~deleteSourceIpMappingCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The Twilio-provided string that uniquely identifies the IP Record resource to delete.
     * @param {module:api/VoiceV1SourceIpMappingApi~deleteSourceIpMappingCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSourceIpMapping(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteSourceIpMapping");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SourceIpMappings/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchSourceIpMapping operation.
     * @callback module:api/VoiceV1SourceIpMappingApi~fetchSourceIpMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceV1SourceIpMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The Twilio-provided string that uniquely identifies the IP Record resource to fetch.
     * @param {module:api/VoiceV1SourceIpMappingApi~fetchSourceIpMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceV1SourceIpMapping}
     */
    fetchSourceIpMapping(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchSourceIpMapping");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VoiceV1SourceIpMapping;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SourceIpMappings/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listSourceIpMapping operation.
     * @callback module:api/VoiceV1SourceIpMappingApi~listSourceIpMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSourceIpMappingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/VoiceV1SourceIpMappingApi~listSourceIpMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSourceIpMappingResponse}
     */
    listSourceIpMapping(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSourceIpMappingResponse;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SourceIpMappings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSourceIpMapping operation.
     * @callback module:api/VoiceV1SourceIpMappingApi~updateSourceIpMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceV1SourceIpMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The Twilio-provided string that uniquely identifies the IP Record resource to update.
     * @param {String} sipDomainSid The SID of the SIP Domain that the IP Record should be mapped to.
     * @param {module:api/VoiceV1SourceIpMappingApi~updateSourceIpMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceV1SourceIpMapping}
     */
    updateSourceIpMapping(sid, sipDomainSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateSourceIpMapping");
      }
      // verify the required parameter 'sipDomainSid' is set
      if (sipDomainSid === undefined || sipDomainSid === null) {
        throw new Error("Missing the required parameter 'sipDomainSid' when calling updateSourceIpMapping");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'SipDomainSid': sipDomainSid
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VoiceV1SourceIpMapping;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SourceIpMappings/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
