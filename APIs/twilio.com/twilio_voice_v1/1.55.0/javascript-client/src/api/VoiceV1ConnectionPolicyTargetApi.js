/**
 * Twilio - Voice
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListConnectionPolicyTargetResponse from '../model/ListConnectionPolicyTargetResponse';
import VoiceV1ConnectionPolicyConnectionPolicyTarget from '../model/VoiceV1ConnectionPolicyConnectionPolicyTarget';

/**
* VoiceV1ConnectionPolicyTarget service.
* @module api/VoiceV1ConnectionPolicyTargetApi
* @version 1.55.0
*/
export default class VoiceV1ConnectionPolicyTargetApi {

    /**
    * Constructs a new VoiceV1ConnectionPolicyTargetApi. 
    * @alias module:api/VoiceV1ConnectionPolicyTargetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createConnectionPolicyTarget operation.
     * @callback module:api/VoiceV1ConnectionPolicyTargetApi~createConnectionPolicyTargetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceV1ConnectionPolicyConnectionPolicyTarget} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} connectionPolicySid The SID of the Connection Policy that owns the Target.
     * @param {String} target The SIP address you want Twilio to route your calls to. This must be a `sip:` schema. `sips` is NOT supported.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [enabled] Whether the Target is enabled. The default is `true`.
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It is not unique and can be up to 255 characters long.
     * @param {Number} [priority] The relative importance of the target. Can be an integer from 0 to 65535, inclusive, and the default is 10. The lowest number represents the most important target.
     * @param {Number} [weight] The value that determines the relative share of the load the Target should receive compared to other Targets with the same priority. Can be an integer from 1 to 65535, inclusive, and the default is 10. Targets with higher values receive more load than those with lower ones with the same priority.
     * @param {module:api/VoiceV1ConnectionPolicyTargetApi~createConnectionPolicyTargetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceV1ConnectionPolicyConnectionPolicyTarget}
     */
    createConnectionPolicyTarget(connectionPolicySid, target, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'connectionPolicySid' is set
      if (connectionPolicySid === undefined || connectionPolicySid === null) {
        throw new Error("Missing the required parameter 'connectionPolicySid' when calling createConnectionPolicyTarget");
      }
      // verify the required parameter 'target' is set
      if (target === undefined || target === null) {
        throw new Error("Missing the required parameter 'target' when calling createConnectionPolicyTarget");
      }

      let pathParams = {
        'ConnectionPolicySid': connectionPolicySid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Enabled': opts['enabled'],
        'FriendlyName': opts['friendlyName'],
        'Priority': opts['priority'],
        'Target': target,
        'Weight': opts['weight']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VoiceV1ConnectionPolicyConnectionPolicyTarget;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/ConnectionPolicies/{ConnectionPolicySid}/Targets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteConnectionPolicyTarget operation.
     * @callback module:api/VoiceV1ConnectionPolicyTargetApi~deleteConnectionPolicyTargetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} connectionPolicySid The SID of the Connection Policy that owns the Target.
     * @param {String} sid The unique string that we created to identify the Target resource to delete.
     * @param {module:api/VoiceV1ConnectionPolicyTargetApi~deleteConnectionPolicyTargetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteConnectionPolicyTarget(connectionPolicySid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'connectionPolicySid' is set
      if (connectionPolicySid === undefined || connectionPolicySid === null) {
        throw new Error("Missing the required parameter 'connectionPolicySid' when calling deleteConnectionPolicyTarget");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteConnectionPolicyTarget");
      }

      let pathParams = {
        'ConnectionPolicySid': connectionPolicySid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/ConnectionPolicies/{ConnectionPolicySid}/Targets/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchConnectionPolicyTarget operation.
     * @callback module:api/VoiceV1ConnectionPolicyTargetApi~fetchConnectionPolicyTargetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceV1ConnectionPolicyConnectionPolicyTarget} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} connectionPolicySid The SID of the Connection Policy that owns the Target.
     * @param {String} sid The unique string that we created to identify the Target resource to fetch.
     * @param {module:api/VoiceV1ConnectionPolicyTargetApi~fetchConnectionPolicyTargetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceV1ConnectionPolicyConnectionPolicyTarget}
     */
    fetchConnectionPolicyTarget(connectionPolicySid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'connectionPolicySid' is set
      if (connectionPolicySid === undefined || connectionPolicySid === null) {
        throw new Error("Missing the required parameter 'connectionPolicySid' when calling fetchConnectionPolicyTarget");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchConnectionPolicyTarget");
      }

      let pathParams = {
        'ConnectionPolicySid': connectionPolicySid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VoiceV1ConnectionPolicyConnectionPolicyTarget;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/ConnectionPolicies/{ConnectionPolicySid}/Targets/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listConnectionPolicyTarget operation.
     * @callback module:api/VoiceV1ConnectionPolicyTargetApi~listConnectionPolicyTargetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListConnectionPolicyTargetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} connectionPolicySid The SID of the Connection Policy from which to read the Targets.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/VoiceV1ConnectionPolicyTargetApi~listConnectionPolicyTargetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListConnectionPolicyTargetResponse}
     */
    listConnectionPolicyTarget(connectionPolicySid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'connectionPolicySid' is set
      if (connectionPolicySid === undefined || connectionPolicySid === null) {
        throw new Error("Missing the required parameter 'connectionPolicySid' when calling listConnectionPolicyTarget");
      }

      let pathParams = {
        'ConnectionPolicySid': connectionPolicySid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListConnectionPolicyTargetResponse;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/ConnectionPolicies/{ConnectionPolicySid}/Targets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateConnectionPolicyTarget operation.
     * @callback module:api/VoiceV1ConnectionPolicyTargetApi~updateConnectionPolicyTargetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceV1ConnectionPolicyConnectionPolicyTarget} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} connectionPolicySid The SID of the Connection Policy that owns the Target.
     * @param {String} sid The unique string that we created to identify the Target resource to update.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [enabled] Whether the Target is enabled.
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It is not unique and can be up to 255 characters long.
     * @param {Number} [priority] The relative importance of the target. Can be an integer from 0 to 65535, inclusive. The lowest number represents the most important target.
     * @param {String} [target] The SIP address you want Twilio to route your calls to. This must be a `sip:` schema. `sips` is NOT supported.
     * @param {Number} [weight] The value that determines the relative share of the load the Target should receive compared to other Targets with the same priority. Can be an integer from 1 to 65535, inclusive. Targets with higher values receive more load than those with lower ones with the same priority.
     * @param {module:api/VoiceV1ConnectionPolicyTargetApi~updateConnectionPolicyTargetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceV1ConnectionPolicyConnectionPolicyTarget}
     */
    updateConnectionPolicyTarget(connectionPolicySid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'connectionPolicySid' is set
      if (connectionPolicySid === undefined || connectionPolicySid === null) {
        throw new Error("Missing the required parameter 'connectionPolicySid' when calling updateConnectionPolicyTarget");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateConnectionPolicyTarget");
      }

      let pathParams = {
        'ConnectionPolicySid': connectionPolicySid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Enabled': opts['enabled'],
        'FriendlyName': opts['friendlyName'],
        'Priority': opts['priority'],
        'Target': opts['target'],
        'Weight': opts['weight']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VoiceV1ConnectionPolicyConnectionPolicyTarget;
      let basePaths = ['https://voice.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/ConnectionPolicies/{ConnectionPolicySid}/Targets/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
