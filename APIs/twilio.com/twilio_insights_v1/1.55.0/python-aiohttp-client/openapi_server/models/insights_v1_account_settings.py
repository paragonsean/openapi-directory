# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class InsightsV1AccountSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, advanced_features: bool=None, url: str=None, voice_trace: bool=None):
        """InsightsV1AccountSettings - a model defined in OpenAPI

        :param account_sid: The account_sid of this InsightsV1AccountSettings.
        :param advanced_features: The advanced_features of this InsightsV1AccountSettings.
        :param url: The url of this InsightsV1AccountSettings.
        :param voice_trace: The voice_trace of this InsightsV1AccountSettings.
        """
        self.openapi_types = {
            'account_sid': str,
            'advanced_features': bool,
            'url': str,
            'voice_trace': bool
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'advanced_features': 'advanced_features',
            'url': 'url',
            'voice_trace': 'voice_trace'
        }

        self._account_sid = account_sid
        self._advanced_features = advanced_features
        self._url = url
        self._voice_trace = voice_trace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsightsV1AccountSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The insights.v1.account_settings of this InsightsV1AccountSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this InsightsV1AccountSettings.

        The unique SID identifier of the Account.

        :return: The account_sid of this InsightsV1AccountSettings.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this InsightsV1AccountSettings.

        The unique SID identifier of the Account.

        :param account_sid: The account_sid of this InsightsV1AccountSettings.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def advanced_features(self):
        """Gets the advanced_features of this InsightsV1AccountSettings.

        A boolean flag indicating whether Advanced Features for Voice Insights are enabled.

        :return: The advanced_features of this InsightsV1AccountSettings.
        :rtype: bool
        """
        return self._advanced_features

    @advanced_features.setter
    def advanced_features(self, advanced_features):
        """Sets the advanced_features of this InsightsV1AccountSettings.

        A boolean flag indicating whether Advanced Features for Voice Insights are enabled.

        :param advanced_features: The advanced_features of this InsightsV1AccountSettings.
        :type advanced_features: bool
        """

        self._advanced_features = advanced_features

    @property
    def url(self):
        """Gets the url of this InsightsV1AccountSettings.

        The URL of this resource.

        :return: The url of this InsightsV1AccountSettings.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InsightsV1AccountSettings.

        The URL of this resource.

        :param url: The url of this InsightsV1AccountSettings.
        :type url: str
        """

        self._url = url

    @property
    def voice_trace(self):
        """Gets the voice_trace of this InsightsV1AccountSettings.

        A boolean flag indicating whether Voice Trace is enabled.

        :return: The voice_trace of this InsightsV1AccountSettings.
        :rtype: bool
        """
        return self._voice_trace

    @voice_trace.setter
    def voice_trace(self, voice_trace):
        """Sets the voice_trace of this InsightsV1AccountSettings.

        A boolean flag indicating whether Voice Trace is enabled.

        :param voice_trace: The voice_trace of this InsightsV1AccountSettings.
        :type voice_trace: bool
        """

        self._voice_trace = voice_trace
