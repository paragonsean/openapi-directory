# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnnotationEnumConnectivityIssue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    UNKNOWN_CONNECTIVITY_ISSUE = 'unknown_connectivity_issue'
    NO_CONNECTIVITY_ISSUE = 'no_connectivity_issue'
    INVALID_NUMBER = 'invalid_number'
    CALLER_ID = 'caller_id'
    DROPPED_CALL = 'dropped_call'
    NUMBER_REACHABILITY = 'number_reachability'

    def __init__(self):
        """AnnotationEnumConnectivityIssue - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationEnumConnectivityIssue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The annotation_enum_connectivity_issue of this AnnotationEnumConnectivityIssue.
        """
        return util.deserialize_model(dikt, cls)
