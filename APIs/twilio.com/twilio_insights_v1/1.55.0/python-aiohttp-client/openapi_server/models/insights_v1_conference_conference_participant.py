# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conference_participant_enum_call_direction import ConferenceParticipantEnumCallDirection
from openapi_server.models.conference_participant_enum_call_status import ConferenceParticipantEnumCallStatus
from openapi_server.models.conference_participant_enum_call_type import ConferenceParticipantEnumCallType
from openapi_server.models.conference_participant_enum_jitter_buffer_size import ConferenceParticipantEnumJitterBufferSize
from openapi_server.models.conference_participant_enum_processing_state import ConferenceParticipantEnumProcessingState
from openapi_server.models.conference_participant_enum_region import ConferenceParticipantEnumRegion
import re
from openapi_server import util


class InsightsV1ConferenceConferenceParticipant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, call_direction: ConferenceParticipantEnumCallDirection=None, call_sid: str=None, call_status: ConferenceParticipantEnumCallStatus=None, call_type: ConferenceParticipantEnumCallType=None, coached_participants: List[str]=None, conference_region: ConferenceParticipantEnumRegion=None, conference_sid: str=None, country_code: str=None, duration_seconds: int=None, events: object=None, _from: str=None, is_coach: bool=None, is_moderator: bool=None, jitter_buffer_size: ConferenceParticipantEnumJitterBufferSize=None, join_time: datetime=None, label: str=None, leave_time: datetime=None, metrics: object=None, outbound_queue_length: int=None, outbound_time_in_queue: int=None, participant_region: ConferenceParticipantEnumRegion=None, participant_sid: str=None, processing_state: ConferenceParticipantEnumProcessingState=None, properties: object=None, to: str=None, url: str=None):
        """InsightsV1ConferenceConferenceParticipant - a model defined in OpenAPI

        :param account_sid: The account_sid of this InsightsV1ConferenceConferenceParticipant.
        :param call_direction: The call_direction of this InsightsV1ConferenceConferenceParticipant.
        :param call_sid: The call_sid of this InsightsV1ConferenceConferenceParticipant.
        :param call_status: The call_status of this InsightsV1ConferenceConferenceParticipant.
        :param call_type: The call_type of this InsightsV1ConferenceConferenceParticipant.
        :param coached_participants: The coached_participants of this InsightsV1ConferenceConferenceParticipant.
        :param conference_region: The conference_region of this InsightsV1ConferenceConferenceParticipant.
        :param conference_sid: The conference_sid of this InsightsV1ConferenceConferenceParticipant.
        :param country_code: The country_code of this InsightsV1ConferenceConferenceParticipant.
        :param duration_seconds: The duration_seconds of this InsightsV1ConferenceConferenceParticipant.
        :param events: The events of this InsightsV1ConferenceConferenceParticipant.
        :param _from: The _from of this InsightsV1ConferenceConferenceParticipant.
        :param is_coach: The is_coach of this InsightsV1ConferenceConferenceParticipant.
        :param is_moderator: The is_moderator of this InsightsV1ConferenceConferenceParticipant.
        :param jitter_buffer_size: The jitter_buffer_size of this InsightsV1ConferenceConferenceParticipant.
        :param join_time: The join_time of this InsightsV1ConferenceConferenceParticipant.
        :param label: The label of this InsightsV1ConferenceConferenceParticipant.
        :param leave_time: The leave_time of this InsightsV1ConferenceConferenceParticipant.
        :param metrics: The metrics of this InsightsV1ConferenceConferenceParticipant.
        :param outbound_queue_length: The outbound_queue_length of this InsightsV1ConferenceConferenceParticipant.
        :param outbound_time_in_queue: The outbound_time_in_queue of this InsightsV1ConferenceConferenceParticipant.
        :param participant_region: The participant_region of this InsightsV1ConferenceConferenceParticipant.
        :param participant_sid: The participant_sid of this InsightsV1ConferenceConferenceParticipant.
        :param processing_state: The processing_state of this InsightsV1ConferenceConferenceParticipant.
        :param properties: The properties of this InsightsV1ConferenceConferenceParticipant.
        :param to: The to of this InsightsV1ConferenceConferenceParticipant.
        :param url: The url of this InsightsV1ConferenceConferenceParticipant.
        """
        self.openapi_types = {
            'account_sid': str,
            'call_direction': ConferenceParticipantEnumCallDirection,
            'call_sid': str,
            'call_status': ConferenceParticipantEnumCallStatus,
            'call_type': ConferenceParticipantEnumCallType,
            'coached_participants': List[str],
            'conference_region': ConferenceParticipantEnumRegion,
            'conference_sid': str,
            'country_code': str,
            'duration_seconds': int,
            'events': object,
            '_from': str,
            'is_coach': bool,
            'is_moderator': bool,
            'jitter_buffer_size': ConferenceParticipantEnumJitterBufferSize,
            'join_time': datetime,
            'label': str,
            'leave_time': datetime,
            'metrics': object,
            'outbound_queue_length': int,
            'outbound_time_in_queue': int,
            'participant_region': ConferenceParticipantEnumRegion,
            'participant_sid': str,
            'processing_state': ConferenceParticipantEnumProcessingState,
            'properties': object,
            'to': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'call_direction': 'call_direction',
            'call_sid': 'call_sid',
            'call_status': 'call_status',
            'call_type': 'call_type',
            'coached_participants': 'coached_participants',
            'conference_region': 'conference_region',
            'conference_sid': 'conference_sid',
            'country_code': 'country_code',
            'duration_seconds': 'duration_seconds',
            'events': 'events',
            '_from': 'from',
            'is_coach': 'is_coach',
            'is_moderator': 'is_moderator',
            'jitter_buffer_size': 'jitter_buffer_size',
            'join_time': 'join_time',
            'label': 'label',
            'leave_time': 'leave_time',
            'metrics': 'metrics',
            'outbound_queue_length': 'outbound_queue_length',
            'outbound_time_in_queue': 'outbound_time_in_queue',
            'participant_region': 'participant_region',
            'participant_sid': 'participant_sid',
            'processing_state': 'processing_state',
            'properties': 'properties',
            'to': 'to',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._call_direction = call_direction
        self._call_sid = call_sid
        self._call_status = call_status
        self._call_type = call_type
        self._coached_participants = coached_participants
        self._conference_region = conference_region
        self._conference_sid = conference_sid
        self._country_code = country_code
        self._duration_seconds = duration_seconds
        self._events = events
        self.__from = _from
        self._is_coach = is_coach
        self._is_moderator = is_moderator
        self._jitter_buffer_size = jitter_buffer_size
        self._join_time = join_time
        self._label = label
        self._leave_time = leave_time
        self._metrics = metrics
        self._outbound_queue_length = outbound_queue_length
        self._outbound_time_in_queue = outbound_time_in_queue
        self._participant_region = participant_region
        self._participant_sid = participant_sid
        self._processing_state = processing_state
        self._properties = properties
        self._to = to
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsightsV1ConferenceConferenceParticipant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The insights.v1.conference.conference_participant of this InsightsV1ConferenceConferenceParticipant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this InsightsV1ConferenceConferenceParticipant.

        The unique SID identifier of the Account.

        :return: The account_sid of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this InsightsV1ConferenceConferenceParticipant.

        The unique SID identifier of the Account.

        :param account_sid: The account_sid of this InsightsV1ConferenceConferenceParticipant.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def call_direction(self):
        """Gets the call_direction of this InsightsV1ConferenceConferenceParticipant.


        :return: The call_direction of this InsightsV1ConferenceConferenceParticipant.
        :rtype: ConferenceParticipantEnumCallDirection
        """
        return self._call_direction

    @call_direction.setter
    def call_direction(self, call_direction):
        """Sets the call_direction of this InsightsV1ConferenceConferenceParticipant.


        :param call_direction: The call_direction of this InsightsV1ConferenceConferenceParticipant.
        :type call_direction: ConferenceParticipantEnumCallDirection
        """

        self._call_direction = call_direction

    @property
    def call_sid(self):
        """Gets the call_sid of this InsightsV1ConferenceConferenceParticipant.

        Unique SID identifier of the call that generated the Participant resource.

        :return: The call_sid of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self._call_sid

    @call_sid.setter
    def call_sid(self, call_sid):
        """Sets the call_sid of this InsightsV1ConferenceConferenceParticipant.

        Unique SID identifier of the call that generated the Participant resource.

        :param call_sid: The call_sid of this InsightsV1ConferenceConferenceParticipant.
        :type call_sid: str
        """
        if call_sid is not None and len(call_sid) > 34:
            raise ValueError("Invalid value for `call_sid`, length must be less than or equal to `34`")
        if call_sid is not None and len(call_sid) < 34:
            raise ValueError("Invalid value for `call_sid`, length must be greater than or equal to `34`")
        if call_sid is not None and not re.search(r'^CA[0-9a-fA-F]{32}$', call_sid):
            raise ValueError("Invalid value for `call_sid`, must be a follow pattern or equal to `/^CA[0-9a-fA-F]{32}$/`")

        self._call_sid = call_sid

    @property
    def call_status(self):
        """Gets the call_status of this InsightsV1ConferenceConferenceParticipant.


        :return: The call_status of this InsightsV1ConferenceConferenceParticipant.
        :rtype: ConferenceParticipantEnumCallStatus
        """
        return self._call_status

    @call_status.setter
    def call_status(self, call_status):
        """Sets the call_status of this InsightsV1ConferenceConferenceParticipant.


        :param call_status: The call_status of this InsightsV1ConferenceConferenceParticipant.
        :type call_status: ConferenceParticipantEnumCallStatus
        """

        self._call_status = call_status

    @property
    def call_type(self):
        """Gets the call_type of this InsightsV1ConferenceConferenceParticipant.


        :return: The call_type of this InsightsV1ConferenceConferenceParticipant.
        :rtype: ConferenceParticipantEnumCallType
        """
        return self._call_type

    @call_type.setter
    def call_type(self, call_type):
        """Sets the call_type of this InsightsV1ConferenceConferenceParticipant.


        :param call_type: The call_type of this InsightsV1ConferenceConferenceParticipant.
        :type call_type: ConferenceParticipantEnumCallType
        """

        self._call_type = call_type

    @property
    def coached_participants(self):
        """Gets the coached_participants of this InsightsV1ConferenceConferenceParticipant.

        Call SIDs coached by this participant.

        :return: The coached_participants of this InsightsV1ConferenceConferenceParticipant.
        :rtype: List[str]
        """
        return self._coached_participants

    @coached_participants.setter
    def coached_participants(self, coached_participants):
        """Sets the coached_participants of this InsightsV1ConferenceConferenceParticipant.

        Call SIDs coached by this participant.

        :param coached_participants: The coached_participants of this InsightsV1ConferenceConferenceParticipant.
        :type coached_participants: List[str]
        """

        self._coached_participants = coached_participants

    @property
    def conference_region(self):
        """Gets the conference_region of this InsightsV1ConferenceConferenceParticipant.


        :return: The conference_region of this InsightsV1ConferenceConferenceParticipant.
        :rtype: ConferenceParticipantEnumRegion
        """
        return self._conference_region

    @conference_region.setter
    def conference_region(self, conference_region):
        """Sets the conference_region of this InsightsV1ConferenceConferenceParticipant.


        :param conference_region: The conference_region of this InsightsV1ConferenceConferenceParticipant.
        :type conference_region: ConferenceParticipantEnumRegion
        """

        self._conference_region = conference_region

    @property
    def conference_sid(self):
        """Gets the conference_sid of this InsightsV1ConferenceConferenceParticipant.

        The unique SID identifier of the Conference.

        :return: The conference_sid of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self._conference_sid

    @conference_sid.setter
    def conference_sid(self, conference_sid):
        """Sets the conference_sid of this InsightsV1ConferenceConferenceParticipant.

        The unique SID identifier of the Conference.

        :param conference_sid: The conference_sid of this InsightsV1ConferenceConferenceParticipant.
        :type conference_sid: str
        """
        if conference_sid is not None and len(conference_sid) > 34:
            raise ValueError("Invalid value for `conference_sid`, length must be less than or equal to `34`")
        if conference_sid is not None and len(conference_sid) < 34:
            raise ValueError("Invalid value for `conference_sid`, length must be greater than or equal to `34`")
        if conference_sid is not None and not re.search(r'^CF[0-9a-fA-F]{32}$', conference_sid):
            raise ValueError("Invalid value for `conference_sid`, must be a follow pattern or equal to `/^CF[0-9a-fA-F]{32}$/`")

        self._conference_sid = conference_sid

    @property
    def country_code(self):
        """Gets the country_code of this InsightsV1ConferenceConferenceParticipant.

        ISO alpha-2 country code of the participant based on caller ID or called number.

        :return: The country_code of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this InsightsV1ConferenceConferenceParticipant.

        ISO alpha-2 country code of the participant based on caller ID or called number.

        :param country_code: The country_code of this InsightsV1ConferenceConferenceParticipant.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def duration_seconds(self):
        """Gets the duration_seconds of this InsightsV1ConferenceConferenceParticipant.

        Participant durations in seconds.

        :return: The duration_seconds of this InsightsV1ConferenceConferenceParticipant.
        :rtype: int
        """
        return self._duration_seconds

    @duration_seconds.setter
    def duration_seconds(self, duration_seconds):
        """Sets the duration_seconds of this InsightsV1ConferenceConferenceParticipant.

        Participant durations in seconds.

        :param duration_seconds: The duration_seconds of this InsightsV1ConferenceConferenceParticipant.
        :type duration_seconds: int
        """

        self._duration_seconds = duration_seconds

    @property
    def events(self):
        """Gets the events of this InsightsV1ConferenceConferenceParticipant.

        Object containing information of actions taken by participants. Contains a dictionary of URL links to nested resources of this Conference Participant.

        :return: The events of this InsightsV1ConferenceConferenceParticipant.
        :rtype: object
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this InsightsV1ConferenceConferenceParticipant.

        Object containing information of actions taken by participants. Contains a dictionary of URL links to nested resources of this Conference Participant.

        :param events: The events of this InsightsV1ConferenceConferenceParticipant.
        :type events: object
        """

        self._events = events

    @property
    def _from(self):
        """Gets the _from of this InsightsV1ConferenceConferenceParticipant.

        Caller ID of the calling party.

        :return: The _from of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this InsightsV1ConferenceConferenceParticipant.

        Caller ID of the calling party.

        :param _from: The _from of this InsightsV1ConferenceConferenceParticipant.
        :type _from: str
        """

        self.__from = _from

    @property
    def is_coach(self):
        """Gets the is_coach of this InsightsV1ConferenceConferenceParticipant.

        Boolean. Indicated whether participant was a coach.

        :return: The is_coach of this InsightsV1ConferenceConferenceParticipant.
        :rtype: bool
        """
        return self._is_coach

    @is_coach.setter
    def is_coach(self, is_coach):
        """Sets the is_coach of this InsightsV1ConferenceConferenceParticipant.

        Boolean. Indicated whether participant was a coach.

        :param is_coach: The is_coach of this InsightsV1ConferenceConferenceParticipant.
        :type is_coach: bool
        """

        self._is_coach = is_coach

    @property
    def is_moderator(self):
        """Gets the is_moderator of this InsightsV1ConferenceConferenceParticipant.

        Boolean. Indicates whether participant had startConferenceOnEnter=true or endConferenceOnExit=true.

        :return: The is_moderator of this InsightsV1ConferenceConferenceParticipant.
        :rtype: bool
        """
        return self._is_moderator

    @is_moderator.setter
    def is_moderator(self, is_moderator):
        """Sets the is_moderator of this InsightsV1ConferenceConferenceParticipant.

        Boolean. Indicates whether participant had startConferenceOnEnter=true or endConferenceOnExit=true.

        :param is_moderator: The is_moderator of this InsightsV1ConferenceConferenceParticipant.
        :type is_moderator: bool
        """

        self._is_moderator = is_moderator

    @property
    def jitter_buffer_size(self):
        """Gets the jitter_buffer_size of this InsightsV1ConferenceConferenceParticipant.


        :return: The jitter_buffer_size of this InsightsV1ConferenceConferenceParticipant.
        :rtype: ConferenceParticipantEnumJitterBufferSize
        """
        return self._jitter_buffer_size

    @jitter_buffer_size.setter
    def jitter_buffer_size(self, jitter_buffer_size):
        """Sets the jitter_buffer_size of this InsightsV1ConferenceConferenceParticipant.


        :param jitter_buffer_size: The jitter_buffer_size of this InsightsV1ConferenceConferenceParticipant.
        :type jitter_buffer_size: ConferenceParticipantEnumJitterBufferSize
        """

        self._jitter_buffer_size = jitter_buffer_size

    @property
    def join_time(self):
        """Gets the join_time of this InsightsV1ConferenceConferenceParticipant.

        ISO 8601 timestamp of participant join event.

        :return: The join_time of this InsightsV1ConferenceConferenceParticipant.
        :rtype: datetime
        """
        return self._join_time

    @join_time.setter
    def join_time(self, join_time):
        """Sets the join_time of this InsightsV1ConferenceConferenceParticipant.

        ISO 8601 timestamp of participant join event.

        :param join_time: The join_time of this InsightsV1ConferenceConferenceParticipant.
        :type join_time: datetime
        """

        self._join_time = join_time

    @property
    def label(self):
        """Gets the label of this InsightsV1ConferenceConferenceParticipant.

        The user-specified label of this participant.

        :return: The label of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this InsightsV1ConferenceConferenceParticipant.

        The user-specified label of this participant.

        :param label: The label of this InsightsV1ConferenceConferenceParticipant.
        :type label: str
        """

        self._label = label

    @property
    def leave_time(self):
        """Gets the leave_time of this InsightsV1ConferenceConferenceParticipant.

        ISO 8601 timestamp of participant leave event.

        :return: The leave_time of this InsightsV1ConferenceConferenceParticipant.
        :rtype: datetime
        """
        return self._leave_time

    @leave_time.setter
    def leave_time(self, leave_time):
        """Sets the leave_time of this InsightsV1ConferenceConferenceParticipant.

        ISO 8601 timestamp of participant leave event.

        :param leave_time: The leave_time of this InsightsV1ConferenceConferenceParticipant.
        :type leave_time: datetime
        """

        self._leave_time = leave_time

    @property
    def metrics(self):
        """Gets the metrics of this InsightsV1ConferenceConferenceParticipant.

        Object. Contains participant call quality metrics.

        :return: The metrics of this InsightsV1ConferenceConferenceParticipant.
        :rtype: object
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this InsightsV1ConferenceConferenceParticipant.

        Object. Contains participant call quality metrics.

        :param metrics: The metrics of this InsightsV1ConferenceConferenceParticipant.
        :type metrics: object
        """

        self._metrics = metrics

    @property
    def outbound_queue_length(self):
        """Gets the outbound_queue_length of this InsightsV1ConferenceConferenceParticipant.

        Add Participant API only. Estimated time in queue at call creation.

        :return: The outbound_queue_length of this InsightsV1ConferenceConferenceParticipant.
        :rtype: int
        """
        return self._outbound_queue_length

    @outbound_queue_length.setter
    def outbound_queue_length(self, outbound_queue_length):
        """Sets the outbound_queue_length of this InsightsV1ConferenceConferenceParticipant.

        Add Participant API only. Estimated time in queue at call creation.

        :param outbound_queue_length: The outbound_queue_length of this InsightsV1ConferenceConferenceParticipant.
        :type outbound_queue_length: int
        """

        self._outbound_queue_length = outbound_queue_length

    @property
    def outbound_time_in_queue(self):
        """Gets the outbound_time_in_queue of this InsightsV1ConferenceConferenceParticipant.

        Add Participant API only. Actual time in queue in seconds.

        :return: The outbound_time_in_queue of this InsightsV1ConferenceConferenceParticipant.
        :rtype: int
        """
        return self._outbound_time_in_queue

    @outbound_time_in_queue.setter
    def outbound_time_in_queue(self, outbound_time_in_queue):
        """Sets the outbound_time_in_queue of this InsightsV1ConferenceConferenceParticipant.

        Add Participant API only. Actual time in queue in seconds.

        :param outbound_time_in_queue: The outbound_time_in_queue of this InsightsV1ConferenceConferenceParticipant.
        :type outbound_time_in_queue: int
        """

        self._outbound_time_in_queue = outbound_time_in_queue

    @property
    def participant_region(self):
        """Gets the participant_region of this InsightsV1ConferenceConferenceParticipant.


        :return: The participant_region of this InsightsV1ConferenceConferenceParticipant.
        :rtype: ConferenceParticipantEnumRegion
        """
        return self._participant_region

    @participant_region.setter
    def participant_region(self, participant_region):
        """Sets the participant_region of this InsightsV1ConferenceConferenceParticipant.


        :param participant_region: The participant_region of this InsightsV1ConferenceConferenceParticipant.
        :type participant_region: ConferenceParticipantEnumRegion
        """

        self._participant_region = participant_region

    @property
    def participant_sid(self):
        """Gets the participant_sid of this InsightsV1ConferenceConferenceParticipant.

        SID for this participant.

        :return: The participant_sid of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self._participant_sid

    @participant_sid.setter
    def participant_sid(self, participant_sid):
        """Sets the participant_sid of this InsightsV1ConferenceConferenceParticipant.

        SID for this participant.

        :param participant_sid: The participant_sid of this InsightsV1ConferenceConferenceParticipant.
        :type participant_sid: str
        """
        if participant_sid is not None and len(participant_sid) > 34:
            raise ValueError("Invalid value for `participant_sid`, length must be less than or equal to `34`")
        if participant_sid is not None and len(participant_sid) < 34:
            raise ValueError("Invalid value for `participant_sid`, length must be greater than or equal to `34`")
        if participant_sid is not None and not re.search(r'^CP[0-9a-fA-F]{32}$', participant_sid):
            raise ValueError("Invalid value for `participant_sid`, must be a follow pattern or equal to `/^CP[0-9a-fA-F]{32}$/`")

        self._participant_sid = participant_sid

    @property
    def processing_state(self):
        """Gets the processing_state of this InsightsV1ConferenceConferenceParticipant.


        :return: The processing_state of this InsightsV1ConferenceConferenceParticipant.
        :rtype: ConferenceParticipantEnumProcessingState
        """
        return self._processing_state

    @processing_state.setter
    def processing_state(self, processing_state):
        """Sets the processing_state of this InsightsV1ConferenceConferenceParticipant.


        :param processing_state: The processing_state of this InsightsV1ConferenceConferenceParticipant.
        :type processing_state: ConferenceParticipantEnumProcessingState
        """

        self._processing_state = processing_state

    @property
    def properties(self):
        """Gets the properties of this InsightsV1ConferenceConferenceParticipant.

        Participant properties and metadata.

        :return: The properties of this InsightsV1ConferenceConferenceParticipant.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this InsightsV1ConferenceConferenceParticipant.

        Participant properties and metadata.

        :param properties: The properties of this InsightsV1ConferenceConferenceParticipant.
        :type properties: object
        """

        self._properties = properties

    @property
    def to(self):
        """Gets the to of this InsightsV1ConferenceConferenceParticipant.

        Called party.

        :return: The to of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this InsightsV1ConferenceConferenceParticipant.

        Called party.

        :param to: The to of this InsightsV1ConferenceConferenceParticipant.
        :type to: str
        """

        self._to = to

    @property
    def url(self):
        """Gets the url of this InsightsV1ConferenceConferenceParticipant.

        The URL of this resource.

        :return: The url of this InsightsV1ConferenceConferenceParticipant.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InsightsV1ConferenceConferenceParticipant.

        The URL of this resource.

        :param url: The url of this InsightsV1ConferenceConferenceParticipant.
        :type url: str
        """

        self._url = url
