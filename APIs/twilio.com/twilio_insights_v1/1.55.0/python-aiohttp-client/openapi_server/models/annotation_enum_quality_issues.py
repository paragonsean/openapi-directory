# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnnotationEnumQualityIssues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    UNKNOWN_QUALITY_ISSUE = 'unknown_quality_issue'
    NO_QUALITY_ISSUE = 'no_quality_issue'
    LOW_VOLUME = 'low_volume'
    CHOPPY_ROBOTIC = 'choppy_robotic'
    ECHO = 'echo'
    DTMF = 'dtmf'
    LATENCY = 'latency'
    OWA = 'owa'
    STATIC_NOISE = 'static_noise'

    def __init__(self):
        """AnnotationEnumQualityIssues - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationEnumQualityIssues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The annotation_enum_quality_issues of this AnnotationEnumQualityIssues.
        """
        return util.deserialize_model(dikt, cls)
