# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_enum_level import EventEnumLevel
from openapi_server.models.event_enum_twilio_edge import EventEnumTwilioEdge
import re
from openapi_server import util


class InsightsV1CallEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, call_sid: str=None, carrier_edge: object=None, client_edge: object=None, edge: EventEnumTwilioEdge=None, group: str=None, level: EventEnumLevel=None, name: str=None, sdk_edge: object=None, sip_edge: object=None, timestamp: str=None):
        """InsightsV1CallEvent - a model defined in OpenAPI

        :param account_sid: The account_sid of this InsightsV1CallEvent.
        :param call_sid: The call_sid of this InsightsV1CallEvent.
        :param carrier_edge: The carrier_edge of this InsightsV1CallEvent.
        :param client_edge: The client_edge of this InsightsV1CallEvent.
        :param edge: The edge of this InsightsV1CallEvent.
        :param group: The group of this InsightsV1CallEvent.
        :param level: The level of this InsightsV1CallEvent.
        :param name: The name of this InsightsV1CallEvent.
        :param sdk_edge: The sdk_edge of this InsightsV1CallEvent.
        :param sip_edge: The sip_edge of this InsightsV1CallEvent.
        :param timestamp: The timestamp of this InsightsV1CallEvent.
        """
        self.openapi_types = {
            'account_sid': str,
            'call_sid': str,
            'carrier_edge': object,
            'client_edge': object,
            'edge': EventEnumTwilioEdge,
            'group': str,
            'level': EventEnumLevel,
            'name': str,
            'sdk_edge': object,
            'sip_edge': object,
            'timestamp': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'call_sid': 'call_sid',
            'carrier_edge': 'carrier_edge',
            'client_edge': 'client_edge',
            'edge': 'edge',
            'group': 'group',
            'level': 'level',
            'name': 'name',
            'sdk_edge': 'sdk_edge',
            'sip_edge': 'sip_edge',
            'timestamp': 'timestamp'
        }

        self._account_sid = account_sid
        self._call_sid = call_sid
        self._carrier_edge = carrier_edge
        self._client_edge = client_edge
        self._edge = edge
        self._group = group
        self._level = level
        self._name = name
        self._sdk_edge = sdk_edge
        self._sip_edge = sip_edge
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsightsV1CallEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The insights.v1.call.event of this InsightsV1CallEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this InsightsV1CallEvent.

        The unique SID identifier of the Account.

        :return: The account_sid of this InsightsV1CallEvent.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this InsightsV1CallEvent.

        The unique SID identifier of the Account.

        :param account_sid: The account_sid of this InsightsV1CallEvent.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def call_sid(self):
        """Gets the call_sid of this InsightsV1CallEvent.

        The unique SID identifier of the Call.

        :return: The call_sid of this InsightsV1CallEvent.
        :rtype: str
        """
        return self._call_sid

    @call_sid.setter
    def call_sid(self, call_sid):
        """Sets the call_sid of this InsightsV1CallEvent.

        The unique SID identifier of the Call.

        :param call_sid: The call_sid of this InsightsV1CallEvent.
        :type call_sid: str
        """
        if call_sid is not None and len(call_sid) > 34:
            raise ValueError("Invalid value for `call_sid`, length must be less than or equal to `34`")
        if call_sid is not None and len(call_sid) < 34:
            raise ValueError("Invalid value for `call_sid`, length must be greater than or equal to `34`")
        if call_sid is not None and not re.search(r'^CA[0-9a-fA-F]{32}$', call_sid):
            raise ValueError("Invalid value for `call_sid`, must be a follow pattern or equal to `/^CA[0-9a-fA-F]{32}$/`")

        self._call_sid = call_sid

    @property
    def carrier_edge(self):
        """Gets the carrier_edge of this InsightsV1CallEvent.

        Represents the connection between Twilio and our immediate carrier partners. The events here describe the call lifecycle as reported by Twilio's carrier media gateways.

        :return: The carrier_edge of this InsightsV1CallEvent.
        :rtype: object
        """
        return self._carrier_edge

    @carrier_edge.setter
    def carrier_edge(self, carrier_edge):
        """Sets the carrier_edge of this InsightsV1CallEvent.

        Represents the connection between Twilio and our immediate carrier partners. The events here describe the call lifecycle as reported by Twilio's carrier media gateways.

        :param carrier_edge: The carrier_edge of this InsightsV1CallEvent.
        :type carrier_edge: object
        """

        self._carrier_edge = carrier_edge

    @property
    def client_edge(self):
        """Gets the client_edge of this InsightsV1CallEvent.

        Represents the Twilio media gateway for Client calls. The events here describe the call lifecycle as reported by Twilio's Voice SDK media gateways.

        :return: The client_edge of this InsightsV1CallEvent.
        :rtype: object
        """
        return self._client_edge

    @client_edge.setter
    def client_edge(self, client_edge):
        """Sets the client_edge of this InsightsV1CallEvent.

        Represents the Twilio media gateway for Client calls. The events here describe the call lifecycle as reported by Twilio's Voice SDK media gateways.

        :param client_edge: The client_edge of this InsightsV1CallEvent.
        :type client_edge: object
        """

        self._client_edge = client_edge

    @property
    def edge(self):
        """Gets the edge of this InsightsV1CallEvent.


        :return: The edge of this InsightsV1CallEvent.
        :rtype: EventEnumTwilioEdge
        """
        return self._edge

    @edge.setter
    def edge(self, edge):
        """Sets the edge of this InsightsV1CallEvent.


        :param edge: The edge of this InsightsV1CallEvent.
        :type edge: EventEnumTwilioEdge
        """

        self._edge = edge

    @property
    def group(self):
        """Gets the group of this InsightsV1CallEvent.

        Event group.

        :return: The group of this InsightsV1CallEvent.
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this InsightsV1CallEvent.

        Event group.

        :param group: The group of this InsightsV1CallEvent.
        :type group: str
        """

        self._group = group

    @property
    def level(self):
        """Gets the level of this InsightsV1CallEvent.


        :return: The level of this InsightsV1CallEvent.
        :rtype: EventEnumLevel
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this InsightsV1CallEvent.


        :param level: The level of this InsightsV1CallEvent.
        :type level: EventEnumLevel
        """

        self._level = level

    @property
    def name(self):
        """Gets the name of this InsightsV1CallEvent.

        Event name.

        :return: The name of this InsightsV1CallEvent.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InsightsV1CallEvent.

        Event name.

        :param name: The name of this InsightsV1CallEvent.
        :type name: str
        """

        self._name = name

    @property
    def sdk_edge(self):
        """Gets the sdk_edge of this InsightsV1CallEvent.

        Represents the Voice SDK running locally in the browser or in the Android/iOS application. The events here are emitted by the Voice SDK in response to certain call progress events, network changes, or call quality conditions.

        :return: The sdk_edge of this InsightsV1CallEvent.
        :rtype: object
        """
        return self._sdk_edge

    @sdk_edge.setter
    def sdk_edge(self, sdk_edge):
        """Sets the sdk_edge of this InsightsV1CallEvent.

        Represents the Voice SDK running locally in the browser or in the Android/iOS application. The events here are emitted by the Voice SDK in response to certain call progress events, network changes, or call quality conditions.

        :param sdk_edge: The sdk_edge of this InsightsV1CallEvent.
        :type sdk_edge: object
        """

        self._sdk_edge = sdk_edge

    @property
    def sip_edge(self):
        """Gets the sip_edge of this InsightsV1CallEvent.

        Represents the Twilio media gateway for SIP interface and SIP trunking calls. The events here describe the call lifecycle as reported by Twilio's public media gateways.

        :return: The sip_edge of this InsightsV1CallEvent.
        :rtype: object
        """
        return self._sip_edge

    @sip_edge.setter
    def sip_edge(self, sip_edge):
        """Sets the sip_edge of this InsightsV1CallEvent.

        Represents the Twilio media gateway for SIP interface and SIP trunking calls. The events here describe the call lifecycle as reported by Twilio's public media gateways.

        :param sip_edge: The sip_edge of this InsightsV1CallEvent.
        :type sip_edge: object
        """

        self._sip_edge = sip_edge

    @property
    def timestamp(self):
        """Gets the timestamp of this InsightsV1CallEvent.

        Event time.

        :return: The timestamp of this InsightsV1CallEvent.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this InsightsV1CallEvent.

        Event time.

        :param timestamp: The timestamp of this InsightsV1CallEvent.
        :type timestamp: str
        """

        self._timestamp = timestamp
