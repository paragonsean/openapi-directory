# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.insights_v1_call_event import InsightsV1CallEvent
from openapi_server.models.list_conference_response_meta import ListConferenceResponseMeta
from openapi_server import util


class ListEventResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, events: List[InsightsV1CallEvent]=None, meta: ListConferenceResponseMeta=None):
        """ListEventResponse - a model defined in OpenAPI

        :param events: The events of this ListEventResponse.
        :param meta: The meta of this ListEventResponse.
        """
        self.openapi_types = {
            'events': List[InsightsV1CallEvent],
            'meta': ListConferenceResponseMeta
        }

        self.attribute_map = {
            'events': 'events',
            'meta': 'meta'
        }

        self._events = events
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListEventResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListEventResponse of this ListEventResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def events(self):
        """Gets the events of this ListEventResponse.


        :return: The events of this ListEventResponse.
        :rtype: List[InsightsV1CallEvent]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this ListEventResponse.


        :param events: The events of this ListEventResponse.
        :type events: List[InsightsV1CallEvent]
        """

        self._events = events

    @property
    def meta(self):
        """Gets the meta of this ListEventResponse.


        :return: The meta of this ListEventResponse.
        :rtype: ListConferenceResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListEventResponse.


        :param meta: The meta of this ListEventResponse.
        :type meta: ListConferenceResponseMeta
        """

        self._meta = meta
