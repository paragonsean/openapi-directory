# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.insights_v1_conference_conference_participant import InsightsV1ConferenceConferenceParticipant
from openapi_server.models.list_conference_response_meta import ListConferenceResponseMeta
from openapi_server import util


class ListConferenceParticipantResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: ListConferenceResponseMeta=None, participants: List[InsightsV1ConferenceConferenceParticipant]=None):
        """ListConferenceParticipantResponse - a model defined in OpenAPI

        :param meta: The meta of this ListConferenceParticipantResponse.
        :param participants: The participants of this ListConferenceParticipantResponse.
        """
        self.openapi_types = {
            'meta': ListConferenceResponseMeta,
            'participants': List[InsightsV1ConferenceConferenceParticipant]
        }

        self.attribute_map = {
            'meta': 'meta',
            'participants': 'participants'
        }

        self._meta = meta
        self._participants = participants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListConferenceParticipantResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListConferenceParticipantResponse of this ListConferenceParticipantResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this ListConferenceParticipantResponse.


        :return: The meta of this ListConferenceParticipantResponse.
        :rtype: ListConferenceResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListConferenceParticipantResponse.


        :param meta: The meta of this ListConferenceParticipantResponse.
        :type meta: ListConferenceResponseMeta
        """

        self._meta = meta

    @property
    def participants(self):
        """Gets the participants of this ListConferenceParticipantResponse.


        :return: The participants of this ListConferenceParticipantResponse.
        :rtype: List[InsightsV1ConferenceConferenceParticipant]
        """
        return self._participants

    @participants.setter
    def participants(self, participants):
        """Sets the participants of this ListConferenceParticipantResponse.


        :param participants: The participants of this ListConferenceParticipantResponse.
        :type participants: List[InsightsV1ConferenceConferenceParticipant]
        """

        self._participants = participants
