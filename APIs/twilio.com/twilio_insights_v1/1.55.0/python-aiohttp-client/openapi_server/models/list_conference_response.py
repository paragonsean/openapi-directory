# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.insights_v1_conference import InsightsV1Conference
from openapi_server.models.list_conference_response_meta import ListConferenceResponseMeta
from openapi_server import util


class ListConferenceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conferences: List[InsightsV1Conference]=None, meta: ListConferenceResponseMeta=None):
        """ListConferenceResponse - a model defined in OpenAPI

        :param conferences: The conferences of this ListConferenceResponse.
        :param meta: The meta of this ListConferenceResponse.
        """
        self.openapi_types = {
            'conferences': List[InsightsV1Conference],
            'meta': ListConferenceResponseMeta
        }

        self.attribute_map = {
            'conferences': 'conferences',
            'meta': 'meta'
        }

        self._conferences = conferences
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListConferenceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListConferenceResponse of this ListConferenceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conferences(self):
        """Gets the conferences of this ListConferenceResponse.


        :return: The conferences of this ListConferenceResponse.
        :rtype: List[InsightsV1Conference]
        """
        return self._conferences

    @conferences.setter
    def conferences(self, conferences):
        """Sets the conferences of this ListConferenceResponse.


        :param conferences: The conferences of this ListConferenceResponse.
        :type conferences: List[InsightsV1Conference]
        """

        self._conferences = conferences

    @property
    def meta(self):
        """Gets the meta of this ListConferenceResponse.


        :return: The meta of this ListConferenceResponse.
        :rtype: ListConferenceResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListConferenceResponse.


        :param meta: The meta of this ListConferenceResponse.
        :type meta: ListConferenceResponseMeta
        """

        self._meta = meta
