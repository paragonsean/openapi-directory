# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video_room_summary_enum_codec import VideoRoomSummaryEnumCodec
from openapi_server.models.video_room_summary_enum_created_method import VideoRoomSummaryEnumCreatedMethod
from openapi_server.models.video_room_summary_enum_edge_location import VideoRoomSummaryEnumEdgeLocation
from openapi_server.models.video_room_summary_enum_end_reason import VideoRoomSummaryEnumEndReason
from openapi_server.models.video_room_summary_enum_processing_state import VideoRoomSummaryEnumProcessingState
from openapi_server.models.video_room_summary_enum_room_status import VideoRoomSummaryEnumRoomStatus
from openapi_server.models.video_room_summary_enum_room_type import VideoRoomSummaryEnumRoomType
from openapi_server.models.video_room_summary_enum_twilio_realm import VideoRoomSummaryEnumTwilioRealm
import re
from openapi_server import util


class InsightsV1VideoRoomSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, codecs: List[VideoRoomSummaryEnumCodec]=None, concurrent_participants: int=None, create_time: datetime=None, created_method: VideoRoomSummaryEnumCreatedMethod=None, duration_sec: int=None, edge_location: VideoRoomSummaryEnumEdgeLocation=None, end_reason: VideoRoomSummaryEnumEndReason=None, end_time: datetime=None, links: object=None, max_concurrent_participants: int=None, max_participants: int=None, media_region: VideoRoomSummaryEnumTwilioRealm=None, processing_state: VideoRoomSummaryEnumProcessingState=None, recording_enabled: bool=None, room_name: str=None, room_sid: str=None, room_status: VideoRoomSummaryEnumRoomStatus=None, room_type: VideoRoomSummaryEnumRoomType=None, status_callback: str=None, status_callback_method: str=None, total_participant_duration_sec: int=None, total_recording_duration_sec: int=None, unique_participant_identities: int=None, unique_participants: int=None, url: str=None):
        """InsightsV1VideoRoomSummary - a model defined in OpenAPI

        :param account_sid: The account_sid of this InsightsV1VideoRoomSummary.
        :param codecs: The codecs of this InsightsV1VideoRoomSummary.
        :param concurrent_participants: The concurrent_participants of this InsightsV1VideoRoomSummary.
        :param create_time: The create_time of this InsightsV1VideoRoomSummary.
        :param created_method: The created_method of this InsightsV1VideoRoomSummary.
        :param duration_sec: The duration_sec of this InsightsV1VideoRoomSummary.
        :param edge_location: The edge_location of this InsightsV1VideoRoomSummary.
        :param end_reason: The end_reason of this InsightsV1VideoRoomSummary.
        :param end_time: The end_time of this InsightsV1VideoRoomSummary.
        :param links: The links of this InsightsV1VideoRoomSummary.
        :param max_concurrent_participants: The max_concurrent_participants of this InsightsV1VideoRoomSummary.
        :param max_participants: The max_participants of this InsightsV1VideoRoomSummary.
        :param media_region: The media_region of this InsightsV1VideoRoomSummary.
        :param processing_state: The processing_state of this InsightsV1VideoRoomSummary.
        :param recording_enabled: The recording_enabled of this InsightsV1VideoRoomSummary.
        :param room_name: The room_name of this InsightsV1VideoRoomSummary.
        :param room_sid: The room_sid of this InsightsV1VideoRoomSummary.
        :param room_status: The room_status of this InsightsV1VideoRoomSummary.
        :param room_type: The room_type of this InsightsV1VideoRoomSummary.
        :param status_callback: The status_callback of this InsightsV1VideoRoomSummary.
        :param status_callback_method: The status_callback_method of this InsightsV1VideoRoomSummary.
        :param total_participant_duration_sec: The total_participant_duration_sec of this InsightsV1VideoRoomSummary.
        :param total_recording_duration_sec: The total_recording_duration_sec of this InsightsV1VideoRoomSummary.
        :param unique_participant_identities: The unique_participant_identities of this InsightsV1VideoRoomSummary.
        :param unique_participants: The unique_participants of this InsightsV1VideoRoomSummary.
        :param url: The url of this InsightsV1VideoRoomSummary.
        """
        self.openapi_types = {
            'account_sid': str,
            'codecs': List[VideoRoomSummaryEnumCodec],
            'concurrent_participants': int,
            'create_time': datetime,
            'created_method': VideoRoomSummaryEnumCreatedMethod,
            'duration_sec': int,
            'edge_location': VideoRoomSummaryEnumEdgeLocation,
            'end_reason': VideoRoomSummaryEnumEndReason,
            'end_time': datetime,
            'links': object,
            'max_concurrent_participants': int,
            'max_participants': int,
            'media_region': VideoRoomSummaryEnumTwilioRealm,
            'processing_state': VideoRoomSummaryEnumProcessingState,
            'recording_enabled': bool,
            'room_name': str,
            'room_sid': str,
            'room_status': VideoRoomSummaryEnumRoomStatus,
            'room_type': VideoRoomSummaryEnumRoomType,
            'status_callback': str,
            'status_callback_method': str,
            'total_participant_duration_sec': int,
            'total_recording_duration_sec': int,
            'unique_participant_identities': int,
            'unique_participants': int,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'codecs': 'codecs',
            'concurrent_participants': 'concurrent_participants',
            'create_time': 'create_time',
            'created_method': 'created_method',
            'duration_sec': 'duration_sec',
            'edge_location': 'edge_location',
            'end_reason': 'end_reason',
            'end_time': 'end_time',
            'links': 'links',
            'max_concurrent_participants': 'max_concurrent_participants',
            'max_participants': 'max_participants',
            'media_region': 'media_region',
            'processing_state': 'processing_state',
            'recording_enabled': 'recording_enabled',
            'room_name': 'room_name',
            'room_sid': 'room_sid',
            'room_status': 'room_status',
            'room_type': 'room_type',
            'status_callback': 'status_callback',
            'status_callback_method': 'status_callback_method',
            'total_participant_duration_sec': 'total_participant_duration_sec',
            'total_recording_duration_sec': 'total_recording_duration_sec',
            'unique_participant_identities': 'unique_participant_identities',
            'unique_participants': 'unique_participants',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._codecs = codecs
        self._concurrent_participants = concurrent_participants
        self._create_time = create_time
        self._created_method = created_method
        self._duration_sec = duration_sec
        self._edge_location = edge_location
        self._end_reason = end_reason
        self._end_time = end_time
        self._links = links
        self._max_concurrent_participants = max_concurrent_participants
        self._max_participants = max_participants
        self._media_region = media_region
        self._processing_state = processing_state
        self._recording_enabled = recording_enabled
        self._room_name = room_name
        self._room_sid = room_sid
        self._room_status = room_status
        self._room_type = room_type
        self._status_callback = status_callback
        self._status_callback_method = status_callback_method
        self._total_participant_duration_sec = total_participant_duration_sec
        self._total_recording_duration_sec = total_recording_duration_sec
        self._unique_participant_identities = unique_participant_identities
        self._unique_participants = unique_participants
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsightsV1VideoRoomSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The insights.v1.video_room_summary of this InsightsV1VideoRoomSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this InsightsV1VideoRoomSummary.

        Account SID associated with this room.

        :return: The account_sid of this InsightsV1VideoRoomSummary.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this InsightsV1VideoRoomSummary.

        Account SID associated with this room.

        :param account_sid: The account_sid of this InsightsV1VideoRoomSummary.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def codecs(self):
        """Gets the codecs of this InsightsV1VideoRoomSummary.

        Codecs used by participants in the room. Can be `VP8`, `H264`, or `VP9`.

        :return: The codecs of this InsightsV1VideoRoomSummary.
        :rtype: List[VideoRoomSummaryEnumCodec]
        """
        return self._codecs

    @codecs.setter
    def codecs(self, codecs):
        """Sets the codecs of this InsightsV1VideoRoomSummary.

        Codecs used by participants in the room. Can be `VP8`, `H264`, or `VP9`.

        :param codecs: The codecs of this InsightsV1VideoRoomSummary.
        :type codecs: List[VideoRoomSummaryEnumCodec]
        """

        self._codecs = codecs

    @property
    def concurrent_participants(self):
        """Gets the concurrent_participants of this InsightsV1VideoRoomSummary.

        Actual number of concurrent participants.

        :return: The concurrent_participants of this InsightsV1VideoRoomSummary.
        :rtype: int
        """
        return self._concurrent_participants

    @concurrent_participants.setter
    def concurrent_participants(self, concurrent_participants):
        """Sets the concurrent_participants of this InsightsV1VideoRoomSummary.

        Actual number of concurrent participants.

        :param concurrent_participants: The concurrent_participants of this InsightsV1VideoRoomSummary.
        :type concurrent_participants: int
        """

        self._concurrent_participants = concurrent_participants

    @property
    def create_time(self):
        """Gets the create_time of this InsightsV1VideoRoomSummary.

        Creation time of the room.

        :return: The create_time of this InsightsV1VideoRoomSummary.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this InsightsV1VideoRoomSummary.

        Creation time of the room.

        :param create_time: The create_time of this InsightsV1VideoRoomSummary.
        :type create_time: datetime
        """

        self._create_time = create_time

    @property
    def created_method(self):
        """Gets the created_method of this InsightsV1VideoRoomSummary.


        :return: The created_method of this InsightsV1VideoRoomSummary.
        :rtype: VideoRoomSummaryEnumCreatedMethod
        """
        return self._created_method

    @created_method.setter
    def created_method(self, created_method):
        """Sets the created_method of this InsightsV1VideoRoomSummary.


        :param created_method: The created_method of this InsightsV1VideoRoomSummary.
        :type created_method: VideoRoomSummaryEnumCreatedMethod
        """

        self._created_method = created_method

    @property
    def duration_sec(self):
        """Gets the duration_sec of this InsightsV1VideoRoomSummary.

        Total room duration from create time to end time.

        :return: The duration_sec of this InsightsV1VideoRoomSummary.
        :rtype: int
        """
        return self._duration_sec

    @duration_sec.setter
    def duration_sec(self, duration_sec):
        """Sets the duration_sec of this InsightsV1VideoRoomSummary.

        Total room duration from create time to end time.

        :param duration_sec: The duration_sec of this InsightsV1VideoRoomSummary.
        :type duration_sec: int
        """

        self._duration_sec = duration_sec

    @property
    def edge_location(self):
        """Gets the edge_location of this InsightsV1VideoRoomSummary.


        :return: The edge_location of this InsightsV1VideoRoomSummary.
        :rtype: VideoRoomSummaryEnumEdgeLocation
        """
        return self._edge_location

    @edge_location.setter
    def edge_location(self, edge_location):
        """Sets the edge_location of this InsightsV1VideoRoomSummary.


        :param edge_location: The edge_location of this InsightsV1VideoRoomSummary.
        :type edge_location: VideoRoomSummaryEnumEdgeLocation
        """

        self._edge_location = edge_location

    @property
    def end_reason(self):
        """Gets the end_reason of this InsightsV1VideoRoomSummary.


        :return: The end_reason of this InsightsV1VideoRoomSummary.
        :rtype: VideoRoomSummaryEnumEndReason
        """
        return self._end_reason

    @end_reason.setter
    def end_reason(self, end_reason):
        """Sets the end_reason of this InsightsV1VideoRoomSummary.


        :param end_reason: The end_reason of this InsightsV1VideoRoomSummary.
        :type end_reason: VideoRoomSummaryEnumEndReason
        """

        self._end_reason = end_reason

    @property
    def end_time(self):
        """Gets the end_time of this InsightsV1VideoRoomSummary.

        End time for the room.

        :return: The end_time of this InsightsV1VideoRoomSummary.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this InsightsV1VideoRoomSummary.

        End time for the room.

        :param end_time: The end_time of this InsightsV1VideoRoomSummary.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def links(self):
        """Gets the links of this InsightsV1VideoRoomSummary.

        Room subresources.

        :return: The links of this InsightsV1VideoRoomSummary.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this InsightsV1VideoRoomSummary.

        Room subresources.

        :param links: The links of this InsightsV1VideoRoomSummary.
        :type links: object
        """

        self._links = links

    @property
    def max_concurrent_participants(self):
        """Gets the max_concurrent_participants of this InsightsV1VideoRoomSummary.

        Maximum number of participants allowed in the room at the same time allowed by the application settings.

        :return: The max_concurrent_participants of this InsightsV1VideoRoomSummary.
        :rtype: int
        """
        return self._max_concurrent_participants

    @max_concurrent_participants.setter
    def max_concurrent_participants(self, max_concurrent_participants):
        """Sets the max_concurrent_participants of this InsightsV1VideoRoomSummary.

        Maximum number of participants allowed in the room at the same time allowed by the application settings.

        :param max_concurrent_participants: The max_concurrent_participants of this InsightsV1VideoRoomSummary.
        :type max_concurrent_participants: int
        """

        self._max_concurrent_participants = max_concurrent_participants

    @property
    def max_participants(self):
        """Gets the max_participants of this InsightsV1VideoRoomSummary.

        Max number of total participants allowed by the application settings.

        :return: The max_participants of this InsightsV1VideoRoomSummary.
        :rtype: int
        """
        return self._max_participants

    @max_participants.setter
    def max_participants(self, max_participants):
        """Sets the max_participants of this InsightsV1VideoRoomSummary.

        Max number of total participants allowed by the application settings.

        :param max_participants: The max_participants of this InsightsV1VideoRoomSummary.
        :type max_participants: int
        """

        self._max_participants = max_participants

    @property
    def media_region(self):
        """Gets the media_region of this InsightsV1VideoRoomSummary.


        :return: The media_region of this InsightsV1VideoRoomSummary.
        :rtype: VideoRoomSummaryEnumTwilioRealm
        """
        return self._media_region

    @media_region.setter
    def media_region(self, media_region):
        """Sets the media_region of this InsightsV1VideoRoomSummary.


        :param media_region: The media_region of this InsightsV1VideoRoomSummary.
        :type media_region: VideoRoomSummaryEnumTwilioRealm
        """

        self._media_region = media_region

    @property
    def processing_state(self):
        """Gets the processing_state of this InsightsV1VideoRoomSummary.


        :return: The processing_state of this InsightsV1VideoRoomSummary.
        :rtype: VideoRoomSummaryEnumProcessingState
        """
        return self._processing_state

    @processing_state.setter
    def processing_state(self, processing_state):
        """Sets the processing_state of this InsightsV1VideoRoomSummary.


        :param processing_state: The processing_state of this InsightsV1VideoRoomSummary.
        :type processing_state: VideoRoomSummaryEnumProcessingState
        """

        self._processing_state = processing_state

    @property
    def recording_enabled(self):
        """Gets the recording_enabled of this InsightsV1VideoRoomSummary.

        Boolean indicating if recording is enabled for the room.

        :return: The recording_enabled of this InsightsV1VideoRoomSummary.
        :rtype: bool
        """
        return self._recording_enabled

    @recording_enabled.setter
    def recording_enabled(self, recording_enabled):
        """Sets the recording_enabled of this InsightsV1VideoRoomSummary.

        Boolean indicating if recording is enabled for the room.

        :param recording_enabled: The recording_enabled of this InsightsV1VideoRoomSummary.
        :type recording_enabled: bool
        """

        self._recording_enabled = recording_enabled

    @property
    def room_name(self):
        """Gets the room_name of this InsightsV1VideoRoomSummary.

        Room friendly name.

        :return: The room_name of this InsightsV1VideoRoomSummary.
        :rtype: str
        """
        return self._room_name

    @room_name.setter
    def room_name(self, room_name):
        """Sets the room_name of this InsightsV1VideoRoomSummary.

        Room friendly name.

        :param room_name: The room_name of this InsightsV1VideoRoomSummary.
        :type room_name: str
        """

        self._room_name = room_name

    @property
    def room_sid(self):
        """Gets the room_sid of this InsightsV1VideoRoomSummary.

        Unique identifier for the room.

        :return: The room_sid of this InsightsV1VideoRoomSummary.
        :rtype: str
        """
        return self._room_sid

    @room_sid.setter
    def room_sid(self, room_sid):
        """Sets the room_sid of this InsightsV1VideoRoomSummary.

        Unique identifier for the room.

        :param room_sid: The room_sid of this InsightsV1VideoRoomSummary.
        :type room_sid: str
        """
        if room_sid is not None and len(room_sid) > 34:
            raise ValueError("Invalid value for `room_sid`, length must be less than or equal to `34`")
        if room_sid is not None and len(room_sid) < 34:
            raise ValueError("Invalid value for `room_sid`, length must be greater than or equal to `34`")
        if room_sid is not None and not re.search(r'^RM[0-9a-fA-F]{32}$', room_sid):
            raise ValueError("Invalid value for `room_sid`, must be a follow pattern or equal to `/^RM[0-9a-fA-F]{32}$/`")

        self._room_sid = room_sid

    @property
    def room_status(self):
        """Gets the room_status of this InsightsV1VideoRoomSummary.


        :return: The room_status of this InsightsV1VideoRoomSummary.
        :rtype: VideoRoomSummaryEnumRoomStatus
        """
        return self._room_status

    @room_status.setter
    def room_status(self, room_status):
        """Sets the room_status of this InsightsV1VideoRoomSummary.


        :param room_status: The room_status of this InsightsV1VideoRoomSummary.
        :type room_status: VideoRoomSummaryEnumRoomStatus
        """

        self._room_status = room_status

    @property
    def room_type(self):
        """Gets the room_type of this InsightsV1VideoRoomSummary.


        :return: The room_type of this InsightsV1VideoRoomSummary.
        :rtype: VideoRoomSummaryEnumRoomType
        """
        return self._room_type

    @room_type.setter
    def room_type(self, room_type):
        """Sets the room_type of this InsightsV1VideoRoomSummary.


        :param room_type: The room_type of this InsightsV1VideoRoomSummary.
        :type room_type: VideoRoomSummaryEnumRoomType
        """

        self._room_type = room_type

    @property
    def status_callback(self):
        """Gets the status_callback of this InsightsV1VideoRoomSummary.

        Webhook provided for status callbacks.

        :return: The status_callback of this InsightsV1VideoRoomSummary.
        :rtype: str
        """
        return self._status_callback

    @status_callback.setter
    def status_callback(self, status_callback):
        """Sets the status_callback of this InsightsV1VideoRoomSummary.

        Webhook provided for status callbacks.

        :param status_callback: The status_callback of this InsightsV1VideoRoomSummary.
        :type status_callback: str
        """

        self._status_callback = status_callback

    @property
    def status_callback_method(self):
        """Gets the status_callback_method of this InsightsV1VideoRoomSummary.

        HTTP method provided for status callback URL.

        :return: The status_callback_method of this InsightsV1VideoRoomSummary.
        :rtype: str
        """
        return self._status_callback_method

    @status_callback_method.setter
    def status_callback_method(self, status_callback_method):
        """Sets the status_callback_method of this InsightsV1VideoRoomSummary.

        HTTP method provided for status callback URL.

        :param status_callback_method: The status_callback_method of this InsightsV1VideoRoomSummary.
        :type status_callback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if status_callback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `status_callback_method` ({0}), must be one of {1}"
                .format(status_callback_method, allowed_values)
            )

        self._status_callback_method = status_callback_method

    @property
    def total_participant_duration_sec(self):
        """Gets the total_participant_duration_sec of this InsightsV1VideoRoomSummary.

        Combined amount of participant time in the room.

        :return: The total_participant_duration_sec of this InsightsV1VideoRoomSummary.
        :rtype: int
        """
        return self._total_participant_duration_sec

    @total_participant_duration_sec.setter
    def total_participant_duration_sec(self, total_participant_duration_sec):
        """Sets the total_participant_duration_sec of this InsightsV1VideoRoomSummary.

        Combined amount of participant time in the room.

        :param total_participant_duration_sec: The total_participant_duration_sec of this InsightsV1VideoRoomSummary.
        :type total_participant_duration_sec: int
        """

        self._total_participant_duration_sec = total_participant_duration_sec

    @property
    def total_recording_duration_sec(self):
        """Gets the total_recording_duration_sec of this InsightsV1VideoRoomSummary.

        Combined amount of recorded seconds for participants in the room.

        :return: The total_recording_duration_sec of this InsightsV1VideoRoomSummary.
        :rtype: int
        """
        return self._total_recording_duration_sec

    @total_recording_duration_sec.setter
    def total_recording_duration_sec(self, total_recording_duration_sec):
        """Sets the total_recording_duration_sec of this InsightsV1VideoRoomSummary.

        Combined amount of recorded seconds for participants in the room.

        :param total_recording_duration_sec: The total_recording_duration_sec of this InsightsV1VideoRoomSummary.
        :type total_recording_duration_sec: int
        """

        self._total_recording_duration_sec = total_recording_duration_sec

    @property
    def unique_participant_identities(self):
        """Gets the unique_participant_identities of this InsightsV1VideoRoomSummary.

        Unique number of participant identities.

        :return: The unique_participant_identities of this InsightsV1VideoRoomSummary.
        :rtype: int
        """
        return self._unique_participant_identities

    @unique_participant_identities.setter
    def unique_participant_identities(self, unique_participant_identities):
        """Sets the unique_participant_identities of this InsightsV1VideoRoomSummary.

        Unique number of participant identities.

        :param unique_participant_identities: The unique_participant_identities of this InsightsV1VideoRoomSummary.
        :type unique_participant_identities: int
        """

        self._unique_participant_identities = unique_participant_identities

    @property
    def unique_participants(self):
        """Gets the unique_participants of this InsightsV1VideoRoomSummary.

        Number of participants. May include duplicate identities for participants who left and rejoined.

        :return: The unique_participants of this InsightsV1VideoRoomSummary.
        :rtype: int
        """
        return self._unique_participants

    @unique_participants.setter
    def unique_participants(self, unique_participants):
        """Sets the unique_participants of this InsightsV1VideoRoomSummary.

        Number of participants. May include duplicate identities for participants who left and rejoined.

        :param unique_participants: The unique_participants of this InsightsV1VideoRoomSummary.
        :type unique_participants: int
        """

        self._unique_participants = unique_participants

    @property
    def url(self):
        """Gets the url of this InsightsV1VideoRoomSummary.

        URL for the room resource.

        :return: The url of this InsightsV1VideoRoomSummary.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InsightsV1VideoRoomSummary.

        URL for the room resource.

        :param url: The url of this InsightsV1VideoRoomSummary.
        :type url: str
        """

        self._url = url
