/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInsights_v1_video_room_summary.h
 *
 * 
 */

#ifndef OAIInsights_v1_video_room_summary_H
#define OAIInsights_v1_video_room_summary_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIVideo_room_summary_enum_codec.h"
#include "OAIVideo_room_summary_enum_created_method.h"
#include "OAIVideo_room_summary_enum_edge_location.h"
#include "OAIVideo_room_summary_enum_end_reason.h"
#include "OAIVideo_room_summary_enum_processing_state.h"
#include "OAIVideo_room_summary_enum_room_status.h"
#include "OAIVideo_room_summary_enum_room_type.h"
#include "OAIVideo_room_summary_enum_twilio_realm.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInsights_v1_video_room_summary : public OAIObject {
public:
    OAIInsights_v1_video_room_summary();
    OAIInsights_v1_video_room_summary(QString json);
    ~OAIInsights_v1_video_room_summary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QList<OAIVideo_room_summary_enum_codec> getCodecs() const;
    void setCodecs(const QList<OAIVideo_room_summary_enum_codec> &codecs);
    bool is_codecs_Set() const;
    bool is_codecs_Valid() const;

    qint32 getConcurrentParticipants() const;
    void setConcurrentParticipants(const qint32 &concurrent_participants);
    bool is_concurrent_participants_Set() const;
    bool is_concurrent_participants_Valid() const;

    QDateTime getCreateTime() const;
    void setCreateTime(const QDateTime &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAIVideo_room_summary_enum_created_method getCreatedMethod() const;
    void setCreatedMethod(const OAIVideo_room_summary_enum_created_method &created_method);
    bool is_created_method_Set() const;
    bool is_created_method_Valid() const;

    qint64 getDurationSec() const;
    void setDurationSec(const qint64 &duration_sec);
    bool is_duration_sec_Set() const;
    bool is_duration_sec_Valid() const;

    OAIVideo_room_summary_enum_edge_location getEdgeLocation() const;
    void setEdgeLocation(const OAIVideo_room_summary_enum_edge_location &edge_location);
    bool is_edge_location_Set() const;
    bool is_edge_location_Valid() const;

    OAIVideo_room_summary_enum_end_reason getEndReason() const;
    void setEndReason(const OAIVideo_room_summary_enum_end_reason &end_reason);
    bool is_end_reason_Set() const;
    bool is_end_reason_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    qint32 getMaxConcurrentParticipants() const;
    void setMaxConcurrentParticipants(const qint32 &max_concurrent_participants);
    bool is_max_concurrent_participants_Set() const;
    bool is_max_concurrent_participants_Valid() const;

    qint32 getMaxParticipants() const;
    void setMaxParticipants(const qint32 &max_participants);
    bool is_max_participants_Set() const;
    bool is_max_participants_Valid() const;

    OAIVideo_room_summary_enum_twilio_realm getMediaRegion() const;
    void setMediaRegion(const OAIVideo_room_summary_enum_twilio_realm &media_region);
    bool is_media_region_Set() const;
    bool is_media_region_Valid() const;

    OAIVideo_room_summary_enum_processing_state getProcessingState() const;
    void setProcessingState(const OAIVideo_room_summary_enum_processing_state &processing_state);
    bool is_processing_state_Set() const;
    bool is_processing_state_Valid() const;

    bool isRecordingEnabled() const;
    void setRecordingEnabled(const bool &recording_enabled);
    bool is_recording_enabled_Set() const;
    bool is_recording_enabled_Valid() const;

    QString getRoomName() const;
    void setRoomName(const QString &room_name);
    bool is_room_name_Set() const;
    bool is_room_name_Valid() const;

    QString getRoomSid() const;
    void setRoomSid(const QString &room_sid);
    bool is_room_sid_Set() const;
    bool is_room_sid_Valid() const;

    OAIVideo_room_summary_enum_room_status getRoomStatus() const;
    void setRoomStatus(const OAIVideo_room_summary_enum_room_status &room_status);
    bool is_room_status_Set() const;
    bool is_room_status_Valid() const;

    OAIVideo_room_summary_enum_room_type getRoomType() const;
    void setRoomType(const OAIVideo_room_summary_enum_room_type &room_type);
    bool is_room_type_Set() const;
    bool is_room_type_Valid() const;

    QString getStatusCallback() const;
    void setStatusCallback(const QString &status_callback);
    bool is_status_callback_Set() const;
    bool is_status_callback_Valid() const;

    QString getStatusCallbackMethod() const;
    void setStatusCallbackMethod(const QString &status_callback_method);
    bool is_status_callback_method_Set() const;
    bool is_status_callback_method_Valid() const;

    qint64 getTotalParticipantDurationSec() const;
    void setTotalParticipantDurationSec(const qint64 &total_participant_duration_sec);
    bool is_total_participant_duration_sec_Set() const;
    bool is_total_participant_duration_sec_Valid() const;

    qint64 getTotalRecordingDurationSec() const;
    void setTotalRecordingDurationSec(const qint64 &total_recording_duration_sec);
    bool is_total_recording_duration_sec_Set() const;
    bool is_total_recording_duration_sec_Valid() const;

    qint32 getUniqueParticipantIdentities() const;
    void setUniqueParticipantIdentities(const qint32 &unique_participant_identities);
    bool is_unique_participant_identities_Set() const;
    bool is_unique_participant_identities_Valid() const;

    qint32 getUniqueParticipants() const;
    void setUniqueParticipants(const qint32 &unique_participants);
    bool is_unique_participants_Set() const;
    bool is_unique_participants_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QList<OAIVideo_room_summary_enum_codec> m_codecs;
    bool m_codecs_isSet;
    bool m_codecs_isValid;

    qint32 m_concurrent_participants;
    bool m_concurrent_participants_isSet;
    bool m_concurrent_participants_isValid;

    QDateTime m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAIVideo_room_summary_enum_created_method m_created_method;
    bool m_created_method_isSet;
    bool m_created_method_isValid;

    qint64 m_duration_sec;
    bool m_duration_sec_isSet;
    bool m_duration_sec_isValid;

    OAIVideo_room_summary_enum_edge_location m_edge_location;
    bool m_edge_location_isSet;
    bool m_edge_location_isValid;

    OAIVideo_room_summary_enum_end_reason m_end_reason;
    bool m_end_reason_isSet;
    bool m_end_reason_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    qint32 m_max_concurrent_participants;
    bool m_max_concurrent_participants_isSet;
    bool m_max_concurrent_participants_isValid;

    qint32 m_max_participants;
    bool m_max_participants_isSet;
    bool m_max_participants_isValid;

    OAIVideo_room_summary_enum_twilio_realm m_media_region;
    bool m_media_region_isSet;
    bool m_media_region_isValid;

    OAIVideo_room_summary_enum_processing_state m_processing_state;
    bool m_processing_state_isSet;
    bool m_processing_state_isValid;

    bool m_recording_enabled;
    bool m_recording_enabled_isSet;
    bool m_recording_enabled_isValid;

    QString m_room_name;
    bool m_room_name_isSet;
    bool m_room_name_isValid;

    QString m_room_sid;
    bool m_room_sid_isSet;
    bool m_room_sid_isValid;

    OAIVideo_room_summary_enum_room_status m_room_status;
    bool m_room_status_isSet;
    bool m_room_status_isValid;

    OAIVideo_room_summary_enum_room_type m_room_type;
    bool m_room_type_isSet;
    bool m_room_type_isValid;

    QString m_status_callback;
    bool m_status_callback_isSet;
    bool m_status_callback_isValid;

    QString m_status_callback_method;
    bool m_status_callback_method_isSet;
    bool m_status_callback_method_isValid;

    qint64 m_total_participant_duration_sec;
    bool m_total_participant_duration_sec_isSet;
    bool m_total_participant_duration_sec_isValid;

    qint64 m_total_recording_duration_sec;
    bool m_total_recording_duration_sec_isSet;
    bool m_total_recording_duration_sec_isValid;

    qint32 m_unique_participant_identities;
    bool m_unique_participant_identities_isSet;
    bool m_unique_participant_identities_isValid;

    qint32 m_unique_participants;
    bool m_unique_participants_isSet;
    bool m_unique_participants_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInsights_v1_video_room_summary)

#endif // OAIInsights_v1_video_room_summary_H
