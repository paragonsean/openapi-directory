/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInsights_v1_call_annotation.h
 *
 * 
 */

#ifndef OAIInsights_v1_call_annotation_H
#define OAIInsights_v1_call_annotation_H

#include <QJsonObject>

#include "OAIAnnotation_enum_answered_by.h"
#include "OAIAnnotation_enum_connectivity_issue.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInsights_v1_call_annotation : public OAIObject {
public:
    OAIInsights_v1_call_annotation();
    OAIInsights_v1_call_annotation(QString json);
    ~OAIInsights_v1_call_annotation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    OAIAnnotation_enum_answered_by getAnsweredBy() const;
    void setAnsweredBy(const OAIAnnotation_enum_answered_by &answered_by);
    bool is_answered_by_Set() const;
    bool is_answered_by_Valid() const;

    qint32 getCallScore() const;
    void setCallScore(const qint32 &call_score);
    bool is_call_score_Set() const;
    bool is_call_score_Valid() const;

    QString getCallSid() const;
    void setCallSid(const QString &call_sid);
    bool is_call_sid_Set() const;
    bool is_call_sid_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    OAIAnnotation_enum_connectivity_issue getConnectivityIssue() const;
    void setConnectivityIssue(const OAIAnnotation_enum_connectivity_issue &connectivity_issue);
    bool is_connectivity_issue_Set() const;
    bool is_connectivity_issue_Valid() const;

    QString getIncident() const;
    void setIncident(const QString &incident);
    bool is_incident_Set() const;
    bool is_incident_Valid() const;

    QList<QString> getQualityIssues() const;
    void setQualityIssues(const QList<QString> &quality_issues);
    bool is_quality_issues_Set() const;
    bool is_quality_issues_Valid() const;

    bool isSpam() const;
    void setSpam(const bool &spam);
    bool is_spam_Set() const;
    bool is_spam_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    OAIAnnotation_enum_answered_by m_answered_by;
    bool m_answered_by_isSet;
    bool m_answered_by_isValid;

    qint32 m_call_score;
    bool m_call_score_isSet;
    bool m_call_score_isValid;

    QString m_call_sid;
    bool m_call_sid_isSet;
    bool m_call_sid_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    OAIAnnotation_enum_connectivity_issue m_connectivity_issue;
    bool m_connectivity_issue_isSet;
    bool m_connectivity_issue_isValid;

    QString m_incident;
    bool m_incident_isSet;
    bool m_incident_isValid;

    QList<QString> m_quality_issues;
    bool m_quality_issues_isSet;
    bool m_quality_issues_isValid;

    bool m_spam;
    bool m_spam_isSet;
    bool m_spam_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInsights_v1_call_annotation)

#endif // OAIInsights_v1_call_annotation_H
