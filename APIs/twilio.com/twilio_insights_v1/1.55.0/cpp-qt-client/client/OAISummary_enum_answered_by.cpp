/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISummary_enum_answered_by.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISummary_enum_answered_by::OAISummary_enum_answered_by(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISummary_enum_answered_by::OAISummary_enum_answered_by() {
    this->initializeModel();
}

OAISummary_enum_answered_by::~OAISummary_enum_answered_by() {}

void OAISummary_enum_answered_by::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISummary_enum_answered_by::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISummary_enum_answered_by::fromJson(QString jsonString) {
    
    if ( jsonString.compare("unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_answered_by::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("machine_start", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_answered_by::MACHINE_START;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("machine_end_beep", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_answered_by::MACHINE_END_BEEP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("machine_end_silence", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_answered_by::MACHINE_END_SILENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("machine_end_other", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_answered_by::MACHINE_END_OTHER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("human", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_answered_by::HUMAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("fax", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_answered_by::FAX;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISummary_enum_answered_by::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISummary_enum_answered_by::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISummary_enum_answered_by::UNKNOWN:
            val = "unknown";
            break;
        case eOAISummary_enum_answered_by::MACHINE_START:
            val = "machine_start";
            break;
        case eOAISummary_enum_answered_by::MACHINE_END_BEEP:
            val = "machine_end_beep";
            break;
        case eOAISummary_enum_answered_by::MACHINE_END_SILENCE:
            val = "machine_end_silence";
            break;
        case eOAISummary_enum_answered_by::MACHINE_END_OTHER:
            val = "machine_end_other";
            break;
        case eOAISummary_enum_answered_by::HUMAN:
            val = "human";
            break;
        case eOAISummary_enum_answered_by::FAX:
            val = "fax";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISummary_enum_answered_by::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISummary_enum_answered_by::eOAISummary_enum_answered_by OAISummary_enum_answered_by::getValue() const {
    return m_value;
}

void OAISummary_enum_answered_by::setValue(const OAISummary_enum_answered_by::eOAISummary_enum_answered_by& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISummary_enum_answered_by::isSet() const {
    
    return m_value_isSet;
}

bool OAISummary_enum_answered_by::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
