/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInsights_v1_conference_conference_participant.h
 *
 * 
 */

#ifndef OAIInsights_v1_conference_conference_participant_H
#define OAIInsights_v1_conference_conference_participant_H

#include <QJsonObject>

#include "OAIConference_participant_enum_call_direction.h"
#include "OAIConference_participant_enum_call_status.h"
#include "OAIConference_participant_enum_call_type.h"
#include "OAIConference_participant_enum_jitter_buffer_size.h"
#include "OAIConference_participant_enum_processing_state.h"
#include "OAIConference_participant_enum_region.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInsights_v1_conference_conference_participant : public OAIObject {
public:
    OAIInsights_v1_conference_conference_participant();
    OAIInsights_v1_conference_conference_participant(QString json);
    ~OAIInsights_v1_conference_conference_participant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    OAIConference_participant_enum_call_direction getCallDirection() const;
    void setCallDirection(const OAIConference_participant_enum_call_direction &call_direction);
    bool is_call_direction_Set() const;
    bool is_call_direction_Valid() const;

    QString getCallSid() const;
    void setCallSid(const QString &call_sid);
    bool is_call_sid_Set() const;
    bool is_call_sid_Valid() const;

    OAIConference_participant_enum_call_status getCallStatus() const;
    void setCallStatus(const OAIConference_participant_enum_call_status &call_status);
    bool is_call_status_Set() const;
    bool is_call_status_Valid() const;

    OAIConference_participant_enum_call_type getCallType() const;
    void setCallType(const OAIConference_participant_enum_call_type &call_type);
    bool is_call_type_Set() const;
    bool is_call_type_Valid() const;

    QList<QString> getCoachedParticipants() const;
    void setCoachedParticipants(const QList<QString> &coached_participants);
    bool is_coached_participants_Set() const;
    bool is_coached_participants_Valid() const;

    OAIConference_participant_enum_region getConferenceRegion() const;
    void setConferenceRegion(const OAIConference_participant_enum_region &conference_region);
    bool is_conference_region_Set() const;
    bool is_conference_region_Valid() const;

    QString getConferenceSid() const;
    void setConferenceSid(const QString &conference_sid);
    bool is_conference_sid_Set() const;
    bool is_conference_sid_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    qint32 getDurationSeconds() const;
    void setDurationSeconds(const qint32 &duration_seconds);
    bool is_duration_seconds_Set() const;
    bool is_duration_seconds_Valid() const;

    QJsonValue getEvents() const;
    void setEvents(const QJsonValue &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    bool isIsCoach() const;
    void setIsCoach(const bool &is_coach);
    bool is_is_coach_Set() const;
    bool is_is_coach_Valid() const;

    bool isIsModerator() const;
    void setIsModerator(const bool &is_moderator);
    bool is_is_moderator_Set() const;
    bool is_is_moderator_Valid() const;

    OAIConference_participant_enum_jitter_buffer_size getJitterBufferSize() const;
    void setJitterBufferSize(const OAIConference_participant_enum_jitter_buffer_size &jitter_buffer_size);
    bool is_jitter_buffer_size_Set() const;
    bool is_jitter_buffer_size_Valid() const;

    QDateTime getJoinTime() const;
    void setJoinTime(const QDateTime &join_time);
    bool is_join_time_Set() const;
    bool is_join_time_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QDateTime getLeaveTime() const;
    void setLeaveTime(const QDateTime &leave_time);
    bool is_leave_time_Set() const;
    bool is_leave_time_Valid() const;

    QJsonValue getMetrics() const;
    void setMetrics(const QJsonValue &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    qint32 getOutboundQueueLength() const;
    void setOutboundQueueLength(const qint32 &outbound_queue_length);
    bool is_outbound_queue_length_Set() const;
    bool is_outbound_queue_length_Valid() const;

    qint32 getOutboundTimeInQueue() const;
    void setOutboundTimeInQueue(const qint32 &outbound_time_in_queue);
    bool is_outbound_time_in_queue_Set() const;
    bool is_outbound_time_in_queue_Valid() const;

    OAIConference_participant_enum_region getParticipantRegion() const;
    void setParticipantRegion(const OAIConference_participant_enum_region &participant_region);
    bool is_participant_region_Set() const;
    bool is_participant_region_Valid() const;

    QString getParticipantSid() const;
    void setParticipantSid(const QString &participant_sid);
    bool is_participant_sid_Set() const;
    bool is_participant_sid_Valid() const;

    OAIConference_participant_enum_processing_state getProcessingState() const;
    void setProcessingState(const OAIConference_participant_enum_processing_state &processing_state);
    bool is_processing_state_Set() const;
    bool is_processing_state_Valid() const;

    QJsonValue getProperties() const;
    void setProperties(const QJsonValue &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    OAIConference_participant_enum_call_direction m_call_direction;
    bool m_call_direction_isSet;
    bool m_call_direction_isValid;

    QString m_call_sid;
    bool m_call_sid_isSet;
    bool m_call_sid_isValid;

    OAIConference_participant_enum_call_status m_call_status;
    bool m_call_status_isSet;
    bool m_call_status_isValid;

    OAIConference_participant_enum_call_type m_call_type;
    bool m_call_type_isSet;
    bool m_call_type_isValid;

    QList<QString> m_coached_participants;
    bool m_coached_participants_isSet;
    bool m_coached_participants_isValid;

    OAIConference_participant_enum_region m_conference_region;
    bool m_conference_region_isSet;
    bool m_conference_region_isValid;

    QString m_conference_sid;
    bool m_conference_sid_isSet;
    bool m_conference_sid_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    qint32 m_duration_seconds;
    bool m_duration_seconds_isSet;
    bool m_duration_seconds_isValid;

    QJsonValue m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    bool m_is_coach;
    bool m_is_coach_isSet;
    bool m_is_coach_isValid;

    bool m_is_moderator;
    bool m_is_moderator_isSet;
    bool m_is_moderator_isValid;

    OAIConference_participant_enum_jitter_buffer_size m_jitter_buffer_size;
    bool m_jitter_buffer_size_isSet;
    bool m_jitter_buffer_size_isValid;

    QDateTime m_join_time;
    bool m_join_time_isSet;
    bool m_join_time_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QDateTime m_leave_time;
    bool m_leave_time_isSet;
    bool m_leave_time_isValid;

    QJsonValue m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    qint32 m_outbound_queue_length;
    bool m_outbound_queue_length_isSet;
    bool m_outbound_queue_length_isValid;

    qint32 m_outbound_time_in_queue;
    bool m_outbound_time_in_queue_isSet;
    bool m_outbound_time_in_queue_isValid;

    OAIConference_participant_enum_region m_participant_region;
    bool m_participant_region_isSet;
    bool m_participant_region_isValid;

    QString m_participant_sid;
    bool m_participant_sid_isSet;
    bool m_participant_sid_isValid;

    OAIConference_participant_enum_processing_state m_processing_state;
    bool m_processing_state_isSet;
    bool m_processing_state_isValid;

    QJsonValue m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInsights_v1_conference_conference_participant)

#endif // OAIInsights_v1_conference_conference_participant_H
