/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInsights_v1_video_room_summary_video_participant_summary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInsights_v1_video_room_summary_video_participant_summary::OAIInsights_v1_video_room_summary_video_participant_summary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInsights_v1_video_room_summary_video_participant_summary::OAIInsights_v1_video_room_summary_video_participant_summary() {
    this->initializeModel();
}

OAIInsights_v1_video_room_summary_video_participant_summary::~OAIInsights_v1_video_room_summary_video_participant_summary() {}

void OAIInsights_v1_video_room_summary_video_participant_summary::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_codecs_isSet = false;
    m_codecs_isValid = false;

    m_duration_sec_isSet = false;
    m_duration_sec_isValid = false;

    m_edge_location_isSet = false;
    m_edge_location_isValid = false;

    m_end_reason_isSet = false;
    m_end_reason_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_code_url_isSet = false;
    m_error_code_url_isValid = false;

    m_join_time_isSet = false;
    m_join_time_isValid = false;

    m_leave_time_isSet = false;
    m_leave_time_isValid = false;

    m_media_region_isSet = false;
    m_media_region_isValid = false;

    m_participant_identity_isSet = false;
    m_participant_identity_isValid = false;

    m_participant_sid_isSet = false;
    m_participant_sid_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_publisher_info_isSet = false;
    m_publisher_info_isValid = false;

    m_room_sid_isSet = false;
    m_room_sid_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIInsights_v1_video_room_summary_video_participant_summary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInsights_v1_video_room_summary_video_participant_summary::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_codecs_isValid = ::OpenAPI::fromJsonValue(m_codecs, json[QString("codecs")]);
    m_codecs_isSet = !json[QString("codecs")].isNull() && m_codecs_isValid;

    m_duration_sec_isValid = ::OpenAPI::fromJsonValue(m_duration_sec, json[QString("duration_sec")]);
    m_duration_sec_isSet = !json[QString("duration_sec")].isNull() && m_duration_sec_isValid;

    m_edge_location_isValid = ::OpenAPI::fromJsonValue(m_edge_location, json[QString("edge_location")]);
    m_edge_location_isSet = !json[QString("edge_location")].isNull() && m_edge_location_isValid;

    m_end_reason_isValid = ::OpenAPI::fromJsonValue(m_end_reason, json[QString("end_reason")]);
    m_end_reason_isSet = !json[QString("end_reason")].isNull() && m_end_reason_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("error_code")]);
    m_error_code_isSet = !json[QString("error_code")].isNull() && m_error_code_isValid;

    m_error_code_url_isValid = ::OpenAPI::fromJsonValue(m_error_code_url, json[QString("error_code_url")]);
    m_error_code_url_isSet = !json[QString("error_code_url")].isNull() && m_error_code_url_isValid;

    m_join_time_isValid = ::OpenAPI::fromJsonValue(m_join_time, json[QString("join_time")]);
    m_join_time_isSet = !json[QString("join_time")].isNull() && m_join_time_isValid;

    m_leave_time_isValid = ::OpenAPI::fromJsonValue(m_leave_time, json[QString("leave_time")]);
    m_leave_time_isSet = !json[QString("leave_time")].isNull() && m_leave_time_isValid;

    m_media_region_isValid = ::OpenAPI::fromJsonValue(m_media_region, json[QString("media_region")]);
    m_media_region_isSet = !json[QString("media_region")].isNull() && m_media_region_isValid;

    m_participant_identity_isValid = ::OpenAPI::fromJsonValue(m_participant_identity, json[QString("participant_identity")]);
    m_participant_identity_isSet = !json[QString("participant_identity")].isNull() && m_participant_identity_isValid;

    m_participant_sid_isValid = ::OpenAPI::fromJsonValue(m_participant_sid, json[QString("participant_sid")]);
    m_participant_sid_isSet = !json[QString("participant_sid")].isNull() && m_participant_sid_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_publisher_info_isValid = ::OpenAPI::fromJsonValue(m_publisher_info, json[QString("publisher_info")]);
    m_publisher_info_isSet = !json[QString("publisher_info")].isNull() && m_publisher_info_isValid;

    m_room_sid_isValid = ::OpenAPI::fromJsonValue(m_room_sid, json[QString("room_sid")]);
    m_room_sid_isSet = !json[QString("room_sid")].isNull() && m_room_sid_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIInsights_v1_video_room_summary_video_participant_summary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInsights_v1_video_room_summary_video_participant_summary::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_codecs.size() > 0) {
        obj.insert(QString("codecs"), ::OpenAPI::toJsonValue(m_codecs));
    }
    if (m_duration_sec_isSet) {
        obj.insert(QString("duration_sec"), ::OpenAPI::toJsonValue(m_duration_sec));
    }
    if (m_edge_location.isSet()) {
        obj.insert(QString("edge_location"), ::OpenAPI::toJsonValue(m_edge_location));
    }
    if (m_end_reason_isSet) {
        obj.insert(QString("end_reason"), ::OpenAPI::toJsonValue(m_end_reason));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("error_code"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_code_url_isSet) {
        obj.insert(QString("error_code_url"), ::OpenAPI::toJsonValue(m_error_code_url));
    }
    if (m_join_time_isSet) {
        obj.insert(QString("join_time"), ::OpenAPI::toJsonValue(m_join_time));
    }
    if (m_leave_time_isSet) {
        obj.insert(QString("leave_time"), ::OpenAPI::toJsonValue(m_leave_time));
    }
    if (m_media_region.isSet()) {
        obj.insert(QString("media_region"), ::OpenAPI::toJsonValue(m_media_region));
    }
    if (m_participant_identity_isSet) {
        obj.insert(QString("participant_identity"), ::OpenAPI::toJsonValue(m_participant_identity));
    }
    if (m_participant_sid_isSet) {
        obj.insert(QString("participant_sid"), ::OpenAPI::toJsonValue(m_participant_sid));
    }
    if (m_properties_isSet) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_publisher_info_isSet) {
        obj.insert(QString("publisher_info"), ::OpenAPI::toJsonValue(m_publisher_info));
    }
    if (m_room_sid_isSet) {
        obj.insert(QString("room_sid"), ::OpenAPI::toJsonValue(m_room_sid));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIInsights_v1_video_room_summary_video_participant_summary::getAccountSid() const {
    return m_account_sid;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QList<OAIVideo_participant_summary_enum_codec> OAIInsights_v1_video_room_summary_video_participant_summary::getCodecs() const {
    return m_codecs;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setCodecs(const QList<OAIVideo_participant_summary_enum_codec> &codecs) {
    m_codecs = codecs;
    m_codecs_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_codecs_Set() const{
    return m_codecs_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_codecs_Valid() const{
    return m_codecs_isValid;
}

qint64 OAIInsights_v1_video_room_summary_video_participant_summary::getDurationSec() const {
    return m_duration_sec;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setDurationSec(const qint64 &duration_sec) {
    m_duration_sec = duration_sec;
    m_duration_sec_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_duration_sec_Set() const{
    return m_duration_sec_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_duration_sec_Valid() const{
    return m_duration_sec_isValid;
}

OAIVideo_participant_summary_enum_edge_location OAIInsights_v1_video_room_summary_video_participant_summary::getEdgeLocation() const {
    return m_edge_location;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setEdgeLocation(const OAIVideo_participant_summary_enum_edge_location &edge_location) {
    m_edge_location = edge_location;
    m_edge_location_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_edge_location_Set() const{
    return m_edge_location_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_edge_location_Valid() const{
    return m_edge_location_isValid;
}

QString OAIInsights_v1_video_room_summary_video_participant_summary::getEndReason() const {
    return m_end_reason;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setEndReason(const QString &end_reason) {
    m_end_reason = end_reason;
    m_end_reason_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_end_reason_Set() const{
    return m_end_reason_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_end_reason_Valid() const{
    return m_end_reason_isValid;
}

qint32 OAIInsights_v1_video_room_summary_video_participant_summary::getErrorCode() const {
    return m_error_code;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setErrorCode(const qint32 &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIInsights_v1_video_room_summary_video_participant_summary::getErrorCodeUrl() const {
    return m_error_code_url;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setErrorCodeUrl(const QString &error_code_url) {
    m_error_code_url = error_code_url;
    m_error_code_url_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_error_code_url_Set() const{
    return m_error_code_url_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_error_code_url_Valid() const{
    return m_error_code_url_isValid;
}

QDateTime OAIInsights_v1_video_room_summary_video_participant_summary::getJoinTime() const {
    return m_join_time;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setJoinTime(const QDateTime &join_time) {
    m_join_time = join_time;
    m_join_time_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_join_time_Set() const{
    return m_join_time_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_join_time_Valid() const{
    return m_join_time_isValid;
}

QDateTime OAIInsights_v1_video_room_summary_video_participant_summary::getLeaveTime() const {
    return m_leave_time;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setLeaveTime(const QDateTime &leave_time) {
    m_leave_time = leave_time;
    m_leave_time_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_leave_time_Set() const{
    return m_leave_time_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_leave_time_Valid() const{
    return m_leave_time_isValid;
}

OAIVideo_participant_summary_enum_twilio_realm OAIInsights_v1_video_room_summary_video_participant_summary::getMediaRegion() const {
    return m_media_region;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setMediaRegion(const OAIVideo_participant_summary_enum_twilio_realm &media_region) {
    m_media_region = media_region;
    m_media_region_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_media_region_Set() const{
    return m_media_region_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_media_region_Valid() const{
    return m_media_region_isValid;
}

QString OAIInsights_v1_video_room_summary_video_participant_summary::getParticipantIdentity() const {
    return m_participant_identity;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setParticipantIdentity(const QString &participant_identity) {
    m_participant_identity = participant_identity;
    m_participant_identity_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_participant_identity_Set() const{
    return m_participant_identity_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_participant_identity_Valid() const{
    return m_participant_identity_isValid;
}

QString OAIInsights_v1_video_room_summary_video_participant_summary::getParticipantSid() const {
    return m_participant_sid;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setParticipantSid(const QString &participant_sid) {
    m_participant_sid = participant_sid;
    m_participant_sid_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_participant_sid_Set() const{
    return m_participant_sid_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_participant_sid_Valid() const{
    return m_participant_sid_isValid;
}

QJsonValue OAIInsights_v1_video_room_summary_video_participant_summary::getProperties() const {
    return m_properties;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setProperties(const QJsonValue &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_properties_Valid() const{
    return m_properties_isValid;
}

QJsonValue OAIInsights_v1_video_room_summary_video_participant_summary::getPublisherInfo() const {
    return m_publisher_info;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setPublisherInfo(const QJsonValue &publisher_info) {
    m_publisher_info = publisher_info;
    m_publisher_info_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_publisher_info_Set() const{
    return m_publisher_info_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_publisher_info_Valid() const{
    return m_publisher_info_isValid;
}

QString OAIInsights_v1_video_room_summary_video_participant_summary::getRoomSid() const {
    return m_room_sid;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setRoomSid(const QString &room_sid) {
    m_room_sid = room_sid;
    m_room_sid_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_room_sid_Set() const{
    return m_room_sid_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_room_sid_Valid() const{
    return m_room_sid_isValid;
}

OAIVideo_participant_summary_enum_room_status OAIInsights_v1_video_room_summary_video_participant_summary::getStatus() const {
    return m_status;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setStatus(const OAIVideo_participant_summary_enum_room_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIInsights_v1_video_room_summary_video_participant_summary::getUrl() const {
    return m_url;
}
void OAIInsights_v1_video_room_summary_video_participant_summary::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_url_Set() const{
    return m_url_isSet;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_codecs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_sec_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edge_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_join_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_leave_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_region.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_participant_identity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_participant_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInsights_v1_video_room_summary_video_participant_summary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
