/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISummary_enum_call_type.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISummary_enum_call_type::OAISummary_enum_call_type(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISummary_enum_call_type::OAISummary_enum_call_type() {
    this->initializeModel();
}

OAISummary_enum_call_type::~OAISummary_enum_call_type() {}

void OAISummary_enum_call_type::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISummary_enum_call_type::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISummary_enum_call_type::fromJson(QString jsonString) {
    
    if ( jsonString.compare("carrier", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_call_type::CARRIER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sip", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_call_type::SIP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_call_type::TRUNKING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("client", Qt::CaseInsensitive) == 0) {
        m_value = eOAISummary_enum_call_type::CLIENT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISummary_enum_call_type::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISummary_enum_call_type::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISummary_enum_call_type::CARRIER:
            val = "carrier";
            break;
        case eOAISummary_enum_call_type::SIP:
            val = "sip";
            break;
        case eOAISummary_enum_call_type::TRUNKING:
            val = "trunking";
            break;
        case eOAISummary_enum_call_type::CLIENT:
            val = "client";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISummary_enum_call_type::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISummary_enum_call_type::eOAISummary_enum_call_type OAISummary_enum_call_type::getValue() const {
    return m_value;
}

void OAISummary_enum_call_type::setValue(const OAISummary_enum_call_type::eOAISummary_enum_call_type& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISummary_enum_call_type::isSet() const {
    
    return m_value_isSet;
}

bool OAISummary_enum_call_type::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
