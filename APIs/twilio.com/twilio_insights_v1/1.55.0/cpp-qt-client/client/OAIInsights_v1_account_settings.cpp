/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInsights_v1_account_settings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInsights_v1_account_settings::OAIInsights_v1_account_settings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInsights_v1_account_settings::OAIInsights_v1_account_settings() {
    this->initializeModel();
}

OAIInsights_v1_account_settings::~OAIInsights_v1_account_settings() {}

void OAIInsights_v1_account_settings::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_advanced_features_isSet = false;
    m_advanced_features_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_voice_trace_isSet = false;
    m_voice_trace_isValid = false;
}

void OAIInsights_v1_account_settings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInsights_v1_account_settings::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_advanced_features_isValid = ::OpenAPI::fromJsonValue(m_advanced_features, json[QString("advanced_features")]);
    m_advanced_features_isSet = !json[QString("advanced_features")].isNull() && m_advanced_features_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_voice_trace_isValid = ::OpenAPI::fromJsonValue(m_voice_trace, json[QString("voice_trace")]);
    m_voice_trace_isSet = !json[QString("voice_trace")].isNull() && m_voice_trace_isValid;
}

QString OAIInsights_v1_account_settings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInsights_v1_account_settings::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_advanced_features_isSet) {
        obj.insert(QString("advanced_features"), ::OpenAPI::toJsonValue(m_advanced_features));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_voice_trace_isSet) {
        obj.insert(QString("voice_trace"), ::OpenAPI::toJsonValue(m_voice_trace));
    }
    return obj;
}

QString OAIInsights_v1_account_settings::getAccountSid() const {
    return m_account_sid;
}
void OAIInsights_v1_account_settings::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIInsights_v1_account_settings::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIInsights_v1_account_settings::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

bool OAIInsights_v1_account_settings::isAdvancedFeatures() const {
    return m_advanced_features;
}
void OAIInsights_v1_account_settings::setAdvancedFeatures(const bool &advanced_features) {
    m_advanced_features = advanced_features;
    m_advanced_features_isSet = true;
}

bool OAIInsights_v1_account_settings::is_advanced_features_Set() const{
    return m_advanced_features_isSet;
}

bool OAIInsights_v1_account_settings::is_advanced_features_Valid() const{
    return m_advanced_features_isValid;
}

QString OAIInsights_v1_account_settings::getUrl() const {
    return m_url;
}
void OAIInsights_v1_account_settings::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIInsights_v1_account_settings::is_url_Set() const{
    return m_url_isSet;
}

bool OAIInsights_v1_account_settings::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIInsights_v1_account_settings::isVoiceTrace() const {
    return m_voice_trace;
}
void OAIInsights_v1_account_settings::setVoiceTrace(const bool &voice_trace) {
    m_voice_trace = voice_trace;
    m_voice_trace_isSet = true;
}

bool OAIInsights_v1_account_settings::is_voice_trace_Set() const{
    return m_voice_trace_isSet;
}

bool OAIInsights_v1_account_settings::is_voice_trace_Valid() const{
    return m_voice_trace_isValid;
}

bool OAIInsights_v1_account_settings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advanced_features_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_trace_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInsights_v1_account_settings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
