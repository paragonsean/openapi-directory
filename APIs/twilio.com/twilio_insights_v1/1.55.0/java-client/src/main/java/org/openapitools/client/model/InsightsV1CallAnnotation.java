/*
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnnotationEnumAnsweredBy;
import org.openapitools.client.model.AnnotationEnumConnectivityIssue;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InsightsV1CallAnnotation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:42.474945-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InsightsV1CallAnnotation {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ANSWERED_BY = "answered_by";
  @SerializedName(SERIALIZED_NAME_ANSWERED_BY)
  private AnnotationEnumAnsweredBy answeredBy;

  public static final String SERIALIZED_NAME_CALL_SCORE = "call_score";
  @SerializedName(SERIALIZED_NAME_CALL_SCORE)
  private Integer callScore;

  public static final String SERIALIZED_NAME_CALL_SID = "call_sid";
  @SerializedName(SERIALIZED_NAME_CALL_SID)
  private String callSid;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CONNECTIVITY_ISSUE = "connectivity_issue";
  @SerializedName(SERIALIZED_NAME_CONNECTIVITY_ISSUE)
  private AnnotationEnumConnectivityIssue connectivityIssue;

  public static final String SERIALIZED_NAME_INCIDENT = "incident";
  @SerializedName(SERIALIZED_NAME_INCIDENT)
  private String incident;

  public static final String SERIALIZED_NAME_QUALITY_ISSUES = "quality_issues";
  @SerializedName(SERIALIZED_NAME_QUALITY_ISSUES)
  private List<String> qualityIssues;

  public static final String SERIALIZED_NAME_SPAM = "spam";
  @SerializedName(SERIALIZED_NAME_SPAM)
  private Boolean spam;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public InsightsV1CallAnnotation() {
  }

  public InsightsV1CallAnnotation accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The unique SID identifier of the Account.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public InsightsV1CallAnnotation answeredBy(AnnotationEnumAnsweredBy answeredBy) {
    this.answeredBy = answeredBy;
    return this;
  }

  /**
   * Get answeredBy
   * @return answeredBy
   */
  @javax.annotation.Nullable
  public AnnotationEnumAnsweredBy getAnsweredBy() {
    return answeredBy;
  }

  public void setAnsweredBy(AnnotationEnumAnsweredBy answeredBy) {
    this.answeredBy = answeredBy;
  }


  public InsightsV1CallAnnotation callScore(Integer callScore) {
    this.callScore = callScore;
    return this;
  }

  /**
   * Specifies the Call Score, if available. This is of type integer. Use a range of 1-5 to indicate the call experience score, with the following mapping as a reference for rating the call [5: Excellent, 4: Good, 3 : Fair, 2 : Poor, 1: Bad].
   * @return callScore
   */
  @javax.annotation.Nullable
  public Integer getCallScore() {
    return callScore;
  }

  public void setCallScore(Integer callScore) {
    this.callScore = callScore;
  }


  public InsightsV1CallAnnotation callSid(String callSid) {
    this.callSid = callSid;
    return this;
  }

  /**
   * The unique SID identifier of the Call.
   * @return callSid
   */
  @javax.annotation.Nullable
  public String getCallSid() {
    return callSid;
  }

  public void setCallSid(String callSid) {
    this.callSid = callSid;
  }


  public InsightsV1CallAnnotation comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Specifies any comments pertaining to the call. Twilio does not treat this field as PII, so no PII should be included in comments.
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public InsightsV1CallAnnotation connectivityIssue(AnnotationEnumConnectivityIssue connectivityIssue) {
    this.connectivityIssue = connectivityIssue;
    return this;
  }

  /**
   * Get connectivityIssue
   * @return connectivityIssue
   */
  @javax.annotation.Nullable
  public AnnotationEnumConnectivityIssue getConnectivityIssue() {
    return connectivityIssue;
  }

  public void setConnectivityIssue(AnnotationEnumConnectivityIssue connectivityIssue) {
    this.connectivityIssue = connectivityIssue;
  }


  public InsightsV1CallAnnotation incident(String incident) {
    this.incident = incident;
    return this;
  }

  /**
   * Incident or support ticket associated with this call. The &#x60;incident&#x60; property is of type string with a maximum character limit of 100. Twilio does not treat this field as PII, so no PII should be included in &#x60;incident&#x60;.
   * @return incident
   */
  @javax.annotation.Nullable
  public String getIncident() {
    return incident;
  }

  public void setIncident(String incident) {
    this.incident = incident;
  }


  public InsightsV1CallAnnotation qualityIssues(List<String> qualityIssues) {
    this.qualityIssues = qualityIssues;
    return this;
  }

  public InsightsV1CallAnnotation addQualityIssuesItem(String qualityIssuesItem) {
    if (this.qualityIssues == null) {
      this.qualityIssues = new ArrayList<>();
    }
    this.qualityIssues.add(qualityIssuesItem);
    return this;
  }

  /**
   * Specifies if the call had any subjective quality issues. Possible values are one or more of &#x60;no_quality_issue&#x60;, &#x60;low_volume&#x60;, &#x60;choppy_robotic&#x60;, &#x60;echo&#x60;, &#x60;dtmf&#x60;, &#x60;latency&#x60;, &#x60;owa&#x60;, or &#x60;static_noise&#x60;.
   * @return qualityIssues
   */
  @javax.annotation.Nullable
  public List<String> getQualityIssues() {
    return qualityIssues;
  }

  public void setQualityIssues(List<String> qualityIssues) {
    this.qualityIssues = qualityIssues;
  }


  public InsightsV1CallAnnotation spam(Boolean spam) {
    this.spam = spam;
    return this;
  }

  /**
   * Specifies if the call was a spam call. Use this to provide feedback on whether calls placed from your account were marked as spam, or if inbound calls received by your account were unwanted spam. Is of type Boolean: true, false. Use true if the call was a spam call.
   * @return spam
   */
  @javax.annotation.Nullable
  public Boolean getSpam() {
    return spam;
  }

  public void setSpam(Boolean spam) {
    this.spam = spam;
  }


  public InsightsV1CallAnnotation url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsightsV1CallAnnotation insightsV1CallAnnotation = (InsightsV1CallAnnotation) o;
    return Objects.equals(this.accountSid, insightsV1CallAnnotation.accountSid) &&
        Objects.equals(this.answeredBy, insightsV1CallAnnotation.answeredBy) &&
        Objects.equals(this.callScore, insightsV1CallAnnotation.callScore) &&
        Objects.equals(this.callSid, insightsV1CallAnnotation.callSid) &&
        Objects.equals(this.comment, insightsV1CallAnnotation.comment) &&
        Objects.equals(this.connectivityIssue, insightsV1CallAnnotation.connectivityIssue) &&
        Objects.equals(this.incident, insightsV1CallAnnotation.incident) &&
        Objects.equals(this.qualityIssues, insightsV1CallAnnotation.qualityIssues) &&
        Objects.equals(this.spam, insightsV1CallAnnotation.spam) &&
        Objects.equals(this.url, insightsV1CallAnnotation.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, answeredBy, callScore, callSid, comment, connectivityIssue, incident, qualityIssues, spam, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsightsV1CallAnnotation {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    answeredBy: ").append(toIndentedString(answeredBy)).append("\n");
    sb.append("    callScore: ").append(toIndentedString(callScore)).append("\n");
    sb.append("    callSid: ").append(toIndentedString(callSid)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    connectivityIssue: ").append(toIndentedString(connectivityIssue)).append("\n");
    sb.append("    incident: ").append(toIndentedString(incident)).append("\n");
    sb.append("    qualityIssues: ").append(toIndentedString(qualityIssues)).append("\n");
    sb.append("    spam: ").append(toIndentedString(spam)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("answered_by");
    openapiFields.add("call_score");
    openapiFields.add("call_sid");
    openapiFields.add("comment");
    openapiFields.add("connectivity_issue");
    openapiFields.add("incident");
    openapiFields.add("quality_issues");
    openapiFields.add("spam");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InsightsV1CallAnnotation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InsightsV1CallAnnotation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InsightsV1CallAnnotation is not found in the empty JSON string", InsightsV1CallAnnotation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InsightsV1CallAnnotation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InsightsV1CallAnnotation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("answered_by") != null && !jsonObj.get("answered_by").isJsonNull()) && !jsonObj.get("answered_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `answered_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("answered_by").toString()));
      }
      // validate the optional field `answered_by`
      if (jsonObj.get("answered_by") != null && !jsonObj.get("answered_by").isJsonNull()) {
        AnnotationEnumAnsweredBy.validateJsonElement(jsonObj.get("answered_by"));
      }
      if ((jsonObj.get("call_sid") != null && !jsonObj.get("call_sid").isJsonNull()) && !jsonObj.get("call_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_sid").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("connectivity_issue") != null && !jsonObj.get("connectivity_issue").isJsonNull()) && !jsonObj.get("connectivity_issue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectivity_issue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectivity_issue").toString()));
      }
      // validate the optional field `connectivity_issue`
      if (jsonObj.get("connectivity_issue") != null && !jsonObj.get("connectivity_issue").isJsonNull()) {
        AnnotationEnumConnectivityIssue.validateJsonElement(jsonObj.get("connectivity_issue"));
      }
      if ((jsonObj.get("incident") != null && !jsonObj.get("incident").isJsonNull()) && !jsonObj.get("incident").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incident` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incident").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("quality_issues") != null && !jsonObj.get("quality_issues").isJsonNull() && !jsonObj.get("quality_issues").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `quality_issues` to be an array in the JSON string but got `%s`", jsonObj.get("quality_issues").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InsightsV1CallAnnotation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InsightsV1CallAnnotation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InsightsV1CallAnnotation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InsightsV1CallAnnotation.class));

       return (TypeAdapter<T>) new TypeAdapter<InsightsV1CallAnnotation>() {
           @Override
           public void write(JsonWriter out, InsightsV1CallAnnotation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InsightsV1CallAnnotation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InsightsV1CallAnnotation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InsightsV1CallAnnotation
   * @throws IOException if the JSON string is invalid with respect to InsightsV1CallAnnotation
   */
  public static InsightsV1CallAnnotation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InsightsV1CallAnnotation.class);
  }

  /**
   * Convert an instance of InsightsV1CallAnnotation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

