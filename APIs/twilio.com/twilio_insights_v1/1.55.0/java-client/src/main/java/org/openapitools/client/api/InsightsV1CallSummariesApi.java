/*
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CallSummariesEnumAnsweredBy;
import org.openapitools.client.model.CallSummariesEnumProcessingStateRequest;
import org.openapitools.client.model.CallSummariesEnumSortBy;
import org.openapitools.client.model.ListCallSummariesResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InsightsV1CallSummariesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public InsightsV1CallSummariesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public InsightsV1CallSummariesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for listCallSummaries
     * @param from A calling party. Could be an E.164 number, a SIP URI, or a Twilio Client registered name. (optional)
     * @param to A called party. Could be an E.164 number, a SIP URI, or a Twilio Client registered name. (optional)
     * @param fromCarrier An origination carrier. (optional)
     * @param toCarrier A destination carrier. (optional)
     * @param fromCountryCode A source country code based on phone number in From. (optional)
     * @param toCountryCode A destination country code. Based on phone number in To. (optional)
     * @param branded A boolean flag indicating whether or not the calls were branded using Twilio Branded Calls. (optional)
     * @param verifiedCaller A boolean flag indicating whether or not the caller was verified using SHAKEN/STIR. (optional)
     * @param hasTag A boolean flag indicating the presence of one or more [Voice Insights Call Tags](https://www.twilio.com/docs/voice/voice-insights/api/call/details-call-tags). (optional)
     * @param startTime A Start time of the calls. xm (x minutes), xh (x hours), xd (x days), 1w, 30m, 3d, 4w or datetime-ISO. Defaults to 4h. (optional)
     * @param endTime An End Time of the calls. xm (x minutes), xh (x hours), xd (x days), 1w, 30m, 3d, 4w or datetime-ISO. Defaults to 0m. (optional)
     * @param callType A Call Type of the calls. One of &#x60;carrier&#x60;, &#x60;sip&#x60;, &#x60;trunking&#x60; or &#x60;client&#x60;. (optional)
     * @param callState A Call State of the calls. One of &#x60;ringing&#x60;, &#x60;completed&#x60;, &#x60;busy&#x60;, &#x60;fail&#x60;, &#x60;noanswer&#x60;, &#x60;canceled&#x60;, &#x60;answered&#x60;, &#x60;undialed&#x60;. (optional)
     * @param direction A Direction of the calls. One of &#x60;outbound_api&#x60;, &#x60;outbound_dial&#x60;, &#x60;inbound&#x60;, &#x60;trunking_originating&#x60;, &#x60;trunking_terminating&#x60;. (optional)
     * @param processingState A Processing State of the Call Summaries. One of &#x60;completed&#x60;, &#x60;partial&#x60; or &#x60;all&#x60;. (optional)
     * @param sortBy A Sort By criterion for the returned list of Call Summaries. One of &#x60;start_time&#x60; or &#x60;end_time&#x60;. (optional)
     * @param subaccount A unique SID identifier of a Subaccount. (optional)
     * @param abnormalSession A boolean flag indicating an abnormal session where the last SIP response was not 200 OK. (optional)
     * @param answeredBy An Answered By value for the calls based on &#x60;Answering Machine Detection (AMD)&#x60;. One of &#x60;unknown&#x60;, &#x60;machine_start&#x60;, &#x60;machine_end_beep&#x60;, &#x60;machine_end_silence&#x60;, &#x60;machine_end_other&#x60;, &#x60;human&#x60; or &#x60;fax&#x60;. (optional)
     * @param answeredByAnnotation Either machine or human. (optional)
     * @param connectivityIssueAnnotation A Connectivity Issue with the calls. One of &#x60;no_connectivity_issue&#x60;, &#x60;invalid_number&#x60;, &#x60;caller_id&#x60;, &#x60;dropped_call&#x60;, or &#x60;number_reachability&#x60;. (optional)
     * @param qualityIssueAnnotation A subjective Quality Issue with the calls. One of &#x60;no_quality_issue&#x60;, &#x60;low_volume&#x60;, &#x60;choppy_robotic&#x60;, &#x60;echo&#x60;, &#x60;dtmf&#x60;, &#x60;latency&#x60;, &#x60;owa&#x60;, &#x60;static_noise&#x60;. (optional)
     * @param spamAnnotation A boolean flag indicating spam calls. (optional)
     * @param callScoreAnnotation A Call Score of the calls. Use a range of 1-5 to indicate the call experience score, with the following mapping as a reference for the rated call [5: Excellent, 4: Good, 3 : Fair, 2 : Poor, 1: Bad]. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listCallSummariesCall(String from, String to, String fromCarrier, String toCarrier, String fromCountryCode, String toCountryCode, Boolean branded, Boolean verifiedCaller, Boolean hasTag, String startTime, String endTime, String callType, String callState, String direction, CallSummariesEnumProcessingStateRequest processingState, CallSummariesEnumSortBy sortBy, String subaccount, Boolean abnormalSession, CallSummariesEnumAnsweredBy answeredBy, String answeredByAnnotation, String connectivityIssueAnnotation, String qualityIssueAnnotation, Boolean spamAnnotation, String callScoreAnnotation, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://insights.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Voice/Summaries";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (from != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("From", from));
        }

        if (to != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("To", to));
        }

        if (fromCarrier != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("FromCarrier", fromCarrier));
        }

        if (toCarrier != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ToCarrier", toCarrier));
        }

        if (fromCountryCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("FromCountryCode", fromCountryCode));
        }

        if (toCountryCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ToCountryCode", toCountryCode));
        }

        if (branded != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Branded", branded));
        }

        if (verifiedCaller != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("VerifiedCaller", verifiedCaller));
        }

        if (hasTag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("HasTag", hasTag));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("StartTime", startTime));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("EndTime", endTime));
        }

        if (callType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("CallType", callType));
        }

        if (callState != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("CallState", callState));
        }

        if (direction != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Direction", direction));
        }

        if (processingState != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ProcessingState", processingState));
        }

        if (sortBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("SortBy", sortBy));
        }

        if (subaccount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Subaccount", subaccount));
        }

        if (abnormalSession != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("AbnormalSession", abnormalSession));
        }

        if (answeredBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("AnsweredBy", answeredBy));
        }

        if (answeredByAnnotation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("AnsweredByAnnotation", answeredByAnnotation));
        }

        if (connectivityIssueAnnotation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ConnectivityIssueAnnotation", connectivityIssueAnnotation));
        }

        if (qualityIssueAnnotation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("QualityIssueAnnotation", qualityIssueAnnotation));
        }

        if (spamAnnotation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("SpamAnnotation", spamAnnotation));
        }

        if (callScoreAnnotation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("CallScoreAnnotation", callScoreAnnotation));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listCallSummariesValidateBeforeCall(String from, String to, String fromCarrier, String toCarrier, String fromCountryCode, String toCountryCode, Boolean branded, Boolean verifiedCaller, Boolean hasTag, String startTime, String endTime, String callType, String callState, String direction, CallSummariesEnumProcessingStateRequest processingState, CallSummariesEnumSortBy sortBy, String subaccount, Boolean abnormalSession, CallSummariesEnumAnsweredBy answeredBy, String answeredByAnnotation, String connectivityIssueAnnotation, String qualityIssueAnnotation, Boolean spamAnnotation, String callScoreAnnotation, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        return listCallSummariesCall(from, to, fromCarrier, toCarrier, fromCountryCode, toCountryCode, branded, verifiedCaller, hasTag, startTime, endTime, callType, callState, direction, processingState, sortBy, subaccount, abnormalSession, answeredBy, answeredByAnnotation, connectivityIssueAnnotation, qualityIssueAnnotation, spamAnnotation, callScoreAnnotation, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * Get a list of Call Summaries.
     * @param from A calling party. Could be an E.164 number, a SIP URI, or a Twilio Client registered name. (optional)
     * @param to A called party. Could be an E.164 number, a SIP URI, or a Twilio Client registered name. (optional)
     * @param fromCarrier An origination carrier. (optional)
     * @param toCarrier A destination carrier. (optional)
     * @param fromCountryCode A source country code based on phone number in From. (optional)
     * @param toCountryCode A destination country code. Based on phone number in To. (optional)
     * @param branded A boolean flag indicating whether or not the calls were branded using Twilio Branded Calls. (optional)
     * @param verifiedCaller A boolean flag indicating whether or not the caller was verified using SHAKEN/STIR. (optional)
     * @param hasTag A boolean flag indicating the presence of one or more [Voice Insights Call Tags](https://www.twilio.com/docs/voice/voice-insights/api/call/details-call-tags). (optional)
     * @param startTime A Start time of the calls. xm (x minutes), xh (x hours), xd (x days), 1w, 30m, 3d, 4w or datetime-ISO. Defaults to 4h. (optional)
     * @param endTime An End Time of the calls. xm (x minutes), xh (x hours), xd (x days), 1w, 30m, 3d, 4w or datetime-ISO. Defaults to 0m. (optional)
     * @param callType A Call Type of the calls. One of &#x60;carrier&#x60;, &#x60;sip&#x60;, &#x60;trunking&#x60; or &#x60;client&#x60;. (optional)
     * @param callState A Call State of the calls. One of &#x60;ringing&#x60;, &#x60;completed&#x60;, &#x60;busy&#x60;, &#x60;fail&#x60;, &#x60;noanswer&#x60;, &#x60;canceled&#x60;, &#x60;answered&#x60;, &#x60;undialed&#x60;. (optional)
     * @param direction A Direction of the calls. One of &#x60;outbound_api&#x60;, &#x60;outbound_dial&#x60;, &#x60;inbound&#x60;, &#x60;trunking_originating&#x60;, &#x60;trunking_terminating&#x60;. (optional)
     * @param processingState A Processing State of the Call Summaries. One of &#x60;completed&#x60;, &#x60;partial&#x60; or &#x60;all&#x60;. (optional)
     * @param sortBy A Sort By criterion for the returned list of Call Summaries. One of &#x60;start_time&#x60; or &#x60;end_time&#x60;. (optional)
     * @param subaccount A unique SID identifier of a Subaccount. (optional)
     * @param abnormalSession A boolean flag indicating an abnormal session where the last SIP response was not 200 OK. (optional)
     * @param answeredBy An Answered By value for the calls based on &#x60;Answering Machine Detection (AMD)&#x60;. One of &#x60;unknown&#x60;, &#x60;machine_start&#x60;, &#x60;machine_end_beep&#x60;, &#x60;machine_end_silence&#x60;, &#x60;machine_end_other&#x60;, &#x60;human&#x60; or &#x60;fax&#x60;. (optional)
     * @param answeredByAnnotation Either machine or human. (optional)
     * @param connectivityIssueAnnotation A Connectivity Issue with the calls. One of &#x60;no_connectivity_issue&#x60;, &#x60;invalid_number&#x60;, &#x60;caller_id&#x60;, &#x60;dropped_call&#x60;, or &#x60;number_reachability&#x60;. (optional)
     * @param qualityIssueAnnotation A subjective Quality Issue with the calls. One of &#x60;no_quality_issue&#x60;, &#x60;low_volume&#x60;, &#x60;choppy_robotic&#x60;, &#x60;echo&#x60;, &#x60;dtmf&#x60;, &#x60;latency&#x60;, &#x60;owa&#x60;, &#x60;static_noise&#x60;. (optional)
     * @param spamAnnotation A boolean flag indicating spam calls. (optional)
     * @param callScoreAnnotation A Call Score of the calls. Use a range of 1-5 to indicate the call experience score, with the following mapping as a reference for the rated call [5: Excellent, 4: Good, 3 : Fair, 2 : Poor, 1: Bad]. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListCallSummariesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListCallSummariesResponse listCallSummaries(String from, String to, String fromCarrier, String toCarrier, String fromCountryCode, String toCountryCode, Boolean branded, Boolean verifiedCaller, Boolean hasTag, String startTime, String endTime, String callType, String callState, String direction, CallSummariesEnumProcessingStateRequest processingState, CallSummariesEnumSortBy sortBy, String subaccount, Boolean abnormalSession, CallSummariesEnumAnsweredBy answeredBy, String answeredByAnnotation, String connectivityIssueAnnotation, String qualityIssueAnnotation, Boolean spamAnnotation, String callScoreAnnotation, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListCallSummariesResponse> localVarResp = listCallSummariesWithHttpInfo(from, to, fromCarrier, toCarrier, fromCountryCode, toCountryCode, branded, verifiedCaller, hasTag, startTime, endTime, callType, callState, direction, processingState, sortBy, subaccount, abnormalSession, answeredBy, answeredByAnnotation, connectivityIssueAnnotation, qualityIssueAnnotation, spamAnnotation, callScoreAnnotation, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Get a list of Call Summaries.
     * @param from A calling party. Could be an E.164 number, a SIP URI, or a Twilio Client registered name. (optional)
     * @param to A called party. Could be an E.164 number, a SIP URI, or a Twilio Client registered name. (optional)
     * @param fromCarrier An origination carrier. (optional)
     * @param toCarrier A destination carrier. (optional)
     * @param fromCountryCode A source country code based on phone number in From. (optional)
     * @param toCountryCode A destination country code. Based on phone number in To. (optional)
     * @param branded A boolean flag indicating whether or not the calls were branded using Twilio Branded Calls. (optional)
     * @param verifiedCaller A boolean flag indicating whether or not the caller was verified using SHAKEN/STIR. (optional)
     * @param hasTag A boolean flag indicating the presence of one or more [Voice Insights Call Tags](https://www.twilio.com/docs/voice/voice-insights/api/call/details-call-tags). (optional)
     * @param startTime A Start time of the calls. xm (x minutes), xh (x hours), xd (x days), 1w, 30m, 3d, 4w or datetime-ISO. Defaults to 4h. (optional)
     * @param endTime An End Time of the calls. xm (x minutes), xh (x hours), xd (x days), 1w, 30m, 3d, 4w or datetime-ISO. Defaults to 0m. (optional)
     * @param callType A Call Type of the calls. One of &#x60;carrier&#x60;, &#x60;sip&#x60;, &#x60;trunking&#x60; or &#x60;client&#x60;. (optional)
     * @param callState A Call State of the calls. One of &#x60;ringing&#x60;, &#x60;completed&#x60;, &#x60;busy&#x60;, &#x60;fail&#x60;, &#x60;noanswer&#x60;, &#x60;canceled&#x60;, &#x60;answered&#x60;, &#x60;undialed&#x60;. (optional)
     * @param direction A Direction of the calls. One of &#x60;outbound_api&#x60;, &#x60;outbound_dial&#x60;, &#x60;inbound&#x60;, &#x60;trunking_originating&#x60;, &#x60;trunking_terminating&#x60;. (optional)
     * @param processingState A Processing State of the Call Summaries. One of &#x60;completed&#x60;, &#x60;partial&#x60; or &#x60;all&#x60;. (optional)
     * @param sortBy A Sort By criterion for the returned list of Call Summaries. One of &#x60;start_time&#x60; or &#x60;end_time&#x60;. (optional)
     * @param subaccount A unique SID identifier of a Subaccount. (optional)
     * @param abnormalSession A boolean flag indicating an abnormal session where the last SIP response was not 200 OK. (optional)
     * @param answeredBy An Answered By value for the calls based on &#x60;Answering Machine Detection (AMD)&#x60;. One of &#x60;unknown&#x60;, &#x60;machine_start&#x60;, &#x60;machine_end_beep&#x60;, &#x60;machine_end_silence&#x60;, &#x60;machine_end_other&#x60;, &#x60;human&#x60; or &#x60;fax&#x60;. (optional)
     * @param answeredByAnnotation Either machine or human. (optional)
     * @param connectivityIssueAnnotation A Connectivity Issue with the calls. One of &#x60;no_connectivity_issue&#x60;, &#x60;invalid_number&#x60;, &#x60;caller_id&#x60;, &#x60;dropped_call&#x60;, or &#x60;number_reachability&#x60;. (optional)
     * @param qualityIssueAnnotation A subjective Quality Issue with the calls. One of &#x60;no_quality_issue&#x60;, &#x60;low_volume&#x60;, &#x60;choppy_robotic&#x60;, &#x60;echo&#x60;, &#x60;dtmf&#x60;, &#x60;latency&#x60;, &#x60;owa&#x60;, &#x60;static_noise&#x60;. (optional)
     * @param spamAnnotation A boolean flag indicating spam calls. (optional)
     * @param callScoreAnnotation A Call Score of the calls. Use a range of 1-5 to indicate the call experience score, with the following mapping as a reference for the rated call [5: Excellent, 4: Good, 3 : Fair, 2 : Poor, 1: Bad]. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListCallSummariesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListCallSummariesResponse> listCallSummariesWithHttpInfo(String from, String to, String fromCarrier, String toCarrier, String fromCountryCode, String toCountryCode, Boolean branded, Boolean verifiedCaller, Boolean hasTag, String startTime, String endTime, String callType, String callState, String direction, CallSummariesEnumProcessingStateRequest processingState, CallSummariesEnumSortBy sortBy, String subaccount, Boolean abnormalSession, CallSummariesEnumAnsweredBy answeredBy, String answeredByAnnotation, String connectivityIssueAnnotation, String qualityIssueAnnotation, Boolean spamAnnotation, String callScoreAnnotation, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listCallSummariesValidateBeforeCall(from, to, fromCarrier, toCarrier, fromCountryCode, toCountryCode, branded, verifiedCaller, hasTag, startTime, endTime, callType, callState, direction, processingState, sortBy, subaccount, abnormalSession, answeredBy, answeredByAnnotation, connectivityIssueAnnotation, qualityIssueAnnotation, spamAnnotation, callScoreAnnotation, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListCallSummariesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get a list of Call Summaries.
     * @param from A calling party. Could be an E.164 number, a SIP URI, or a Twilio Client registered name. (optional)
     * @param to A called party. Could be an E.164 number, a SIP URI, or a Twilio Client registered name. (optional)
     * @param fromCarrier An origination carrier. (optional)
     * @param toCarrier A destination carrier. (optional)
     * @param fromCountryCode A source country code based on phone number in From. (optional)
     * @param toCountryCode A destination country code. Based on phone number in To. (optional)
     * @param branded A boolean flag indicating whether or not the calls were branded using Twilio Branded Calls. (optional)
     * @param verifiedCaller A boolean flag indicating whether or not the caller was verified using SHAKEN/STIR. (optional)
     * @param hasTag A boolean flag indicating the presence of one or more [Voice Insights Call Tags](https://www.twilio.com/docs/voice/voice-insights/api/call/details-call-tags). (optional)
     * @param startTime A Start time of the calls. xm (x minutes), xh (x hours), xd (x days), 1w, 30m, 3d, 4w or datetime-ISO. Defaults to 4h. (optional)
     * @param endTime An End Time of the calls. xm (x minutes), xh (x hours), xd (x days), 1w, 30m, 3d, 4w or datetime-ISO. Defaults to 0m. (optional)
     * @param callType A Call Type of the calls. One of &#x60;carrier&#x60;, &#x60;sip&#x60;, &#x60;trunking&#x60; or &#x60;client&#x60;. (optional)
     * @param callState A Call State of the calls. One of &#x60;ringing&#x60;, &#x60;completed&#x60;, &#x60;busy&#x60;, &#x60;fail&#x60;, &#x60;noanswer&#x60;, &#x60;canceled&#x60;, &#x60;answered&#x60;, &#x60;undialed&#x60;. (optional)
     * @param direction A Direction of the calls. One of &#x60;outbound_api&#x60;, &#x60;outbound_dial&#x60;, &#x60;inbound&#x60;, &#x60;trunking_originating&#x60;, &#x60;trunking_terminating&#x60;. (optional)
     * @param processingState A Processing State of the Call Summaries. One of &#x60;completed&#x60;, &#x60;partial&#x60; or &#x60;all&#x60;. (optional)
     * @param sortBy A Sort By criterion for the returned list of Call Summaries. One of &#x60;start_time&#x60; or &#x60;end_time&#x60;. (optional)
     * @param subaccount A unique SID identifier of a Subaccount. (optional)
     * @param abnormalSession A boolean flag indicating an abnormal session where the last SIP response was not 200 OK. (optional)
     * @param answeredBy An Answered By value for the calls based on &#x60;Answering Machine Detection (AMD)&#x60;. One of &#x60;unknown&#x60;, &#x60;machine_start&#x60;, &#x60;machine_end_beep&#x60;, &#x60;machine_end_silence&#x60;, &#x60;machine_end_other&#x60;, &#x60;human&#x60; or &#x60;fax&#x60;. (optional)
     * @param answeredByAnnotation Either machine or human. (optional)
     * @param connectivityIssueAnnotation A Connectivity Issue with the calls. One of &#x60;no_connectivity_issue&#x60;, &#x60;invalid_number&#x60;, &#x60;caller_id&#x60;, &#x60;dropped_call&#x60;, or &#x60;number_reachability&#x60;. (optional)
     * @param qualityIssueAnnotation A subjective Quality Issue with the calls. One of &#x60;no_quality_issue&#x60;, &#x60;low_volume&#x60;, &#x60;choppy_robotic&#x60;, &#x60;echo&#x60;, &#x60;dtmf&#x60;, &#x60;latency&#x60;, &#x60;owa&#x60;, &#x60;static_noise&#x60;. (optional)
     * @param spamAnnotation A boolean flag indicating spam calls. (optional)
     * @param callScoreAnnotation A Call Score of the calls. Use a range of 1-5 to indicate the call experience score, with the following mapping as a reference for the rated call [5: Excellent, 4: Good, 3 : Fair, 2 : Poor, 1: Bad]. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listCallSummariesAsync(String from, String to, String fromCarrier, String toCarrier, String fromCountryCode, String toCountryCode, Boolean branded, Boolean verifiedCaller, Boolean hasTag, String startTime, String endTime, String callType, String callState, String direction, CallSummariesEnumProcessingStateRequest processingState, CallSummariesEnumSortBy sortBy, String subaccount, Boolean abnormalSession, CallSummariesEnumAnsweredBy answeredBy, String answeredByAnnotation, String connectivityIssueAnnotation, String qualityIssueAnnotation, Boolean spamAnnotation, String callScoreAnnotation, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListCallSummariesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listCallSummariesValidateBeforeCall(from, to, fromCarrier, toCarrier, fromCountryCode, toCountryCode, branded, verifiedCaller, hasTag, startTime, endTime, callType, callState, direction, processingState, sortBy, subaccount, abnormalSession, answeredBy, answeredByAnnotation, connectivityIssueAnnotation, qualityIssueAnnotation, spamAnnotation, callScoreAnnotation, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListCallSummariesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
