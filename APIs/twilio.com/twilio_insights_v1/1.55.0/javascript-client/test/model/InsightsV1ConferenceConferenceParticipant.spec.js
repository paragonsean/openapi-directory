/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioInsights);
  }
}(this, function(expect, TwilioInsights) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InsightsV1ConferenceConferenceParticipant', function() {
    it('should create an instance of InsightsV1ConferenceConferenceParticipant', function() {
      // uncomment below and update the code to test InsightsV1ConferenceConferenceParticipant
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be.a(TwilioInsights.InsightsV1ConferenceConferenceParticipant);
    });

    it('should have the property accountSid (base name: "account_sid")', function() {
      // uncomment below and update the code to test the property accountSid
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property callDirection (base name: "call_direction")', function() {
      // uncomment below and update the code to test the property callDirection
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property callSid (base name: "call_sid")', function() {
      // uncomment below and update the code to test the property callSid
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property callStatus (base name: "call_status")', function() {
      // uncomment below and update the code to test the property callStatus
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property callType (base name: "call_type")', function() {
      // uncomment below and update the code to test the property callType
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property coachedParticipants (base name: "coached_participants")', function() {
      // uncomment below and update the code to test the property coachedParticipants
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property conferenceRegion (base name: "conference_region")', function() {
      // uncomment below and update the code to test the property conferenceRegion
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property conferenceSid (base name: "conference_sid")', function() {
      // uncomment below and update the code to test the property conferenceSid
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property durationSeconds (base name: "duration_seconds")', function() {
      // uncomment below and update the code to test the property durationSeconds
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property events (base name: "events")', function() {
      // uncomment below and update the code to test the property events
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property from (base name: "from")', function() {
      // uncomment below and update the code to test the property from
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property isCoach (base name: "is_coach")', function() {
      // uncomment below and update the code to test the property isCoach
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property isModerator (base name: "is_moderator")', function() {
      // uncomment below and update the code to test the property isModerator
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property jitterBufferSize (base name: "jitter_buffer_size")', function() {
      // uncomment below and update the code to test the property jitterBufferSize
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property joinTime (base name: "join_time")', function() {
      // uncomment below and update the code to test the property joinTime
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property leaveTime (base name: "leave_time")', function() {
      // uncomment below and update the code to test the property leaveTime
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property metrics (base name: "metrics")', function() {
      // uncomment below and update the code to test the property metrics
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property outboundQueueLength (base name: "outbound_queue_length")', function() {
      // uncomment below and update the code to test the property outboundQueueLength
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property outboundTimeInQueue (base name: "outbound_time_in_queue")', function() {
      // uncomment below and update the code to test the property outboundTimeInQueue
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property participantRegion (base name: "participant_region")', function() {
      // uncomment below and update the code to test the property participantRegion
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property participantSid (base name: "participant_sid")', function() {
      // uncomment below and update the code to test the property participantSid
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property processingState (base name: "processing_state")', function() {
      // uncomment below and update the code to test the property processingState
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property to (base name: "to")', function() {
      // uncomment below and update the code to test the property to
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TwilioInsights.InsightsV1ConferenceConferenceParticipant();
      //expect(instance).to.be();
    });

  });

}));
