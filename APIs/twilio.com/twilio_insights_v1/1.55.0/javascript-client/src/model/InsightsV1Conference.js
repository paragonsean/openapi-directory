/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConferenceEnumConferenceEndReason from './ConferenceEnumConferenceEndReason';
import ConferenceEnumConferenceStatus from './ConferenceEnumConferenceStatus';
import ConferenceEnumProcessingState from './ConferenceEnumProcessingState';
import ConferenceEnumRegion from './ConferenceEnumRegion';
import ConferenceEnumTag from './ConferenceEnumTag';

/**
 * The InsightsV1Conference model module.
 * @module model/InsightsV1Conference
 * @version 1.55.0
 */
class InsightsV1Conference {
    /**
     * Constructs a new <code>InsightsV1Conference</code>.
     * @alias module:model/InsightsV1Conference
     */
    constructor() { 
        
        InsightsV1Conference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsightsV1Conference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsightsV1Conference} obj Optional instance to populate.
     * @return {module:model/InsightsV1Conference} The populated <code>InsightsV1Conference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsightsV1Conference();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('conference_sid')) {
                obj['conference_sid'] = ApiClient.convertToType(data['conference_sid'], 'String');
            }
            if (data.hasOwnProperty('connect_duration_seconds')) {
                obj['connect_duration_seconds'] = ApiClient.convertToType(data['connect_duration_seconds'], 'Number');
            }
            if (data.hasOwnProperty('create_time')) {
                obj['create_time'] = ApiClient.convertToType(data['create_time'], 'Date');
            }
            if (data.hasOwnProperty('detected_issues')) {
                obj['detected_issues'] = ApiClient.convertToType(data['detected_issues'], Object);
            }
            if (data.hasOwnProperty('duration_seconds')) {
                obj['duration_seconds'] = ApiClient.convertToType(data['duration_seconds'], 'Number');
            }
            if (data.hasOwnProperty('end_reason')) {
                obj['end_reason'] = ConferenceEnumConferenceEndReason.constructFromObject(data['end_reason']);
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'Date');
            }
            if (data.hasOwnProperty('ended_by')) {
                obj['ended_by'] = ApiClient.convertToType(data['ended_by'], 'String');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('max_concurrent_participants')) {
                obj['max_concurrent_participants'] = ApiClient.convertToType(data['max_concurrent_participants'], 'Number');
            }
            if (data.hasOwnProperty('max_participants')) {
                obj['max_participants'] = ApiClient.convertToType(data['max_participants'], 'Number');
            }
            if (data.hasOwnProperty('mixer_region')) {
                obj['mixer_region'] = ConferenceEnumRegion.constructFromObject(data['mixer_region']);
            }
            if (data.hasOwnProperty('mixer_region_requested')) {
                obj['mixer_region_requested'] = ConferenceEnumRegion.constructFromObject(data['mixer_region_requested']);
            }
            if (data.hasOwnProperty('processing_state')) {
                obj['processing_state'] = ConferenceEnumProcessingState.constructFromObject(data['processing_state']);
            }
            if (data.hasOwnProperty('recording_enabled')) {
                obj['recording_enabled'] = ApiClient.convertToType(data['recording_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ConferenceEnumConferenceStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('tag_info')) {
                obj['tag_info'] = ApiClient.convertToType(data['tag_info'], Object);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [ConferenceEnumTag]);
            }
            if (data.hasOwnProperty('unique_participants')) {
                obj['unique_participants'] = ApiClient.convertToType(data['unique_participants'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsightsV1Conference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsightsV1Conference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['conference_sid'] && !(typeof data['conference_sid'] === 'string' || data['conference_sid'] instanceof String)) {
            throw new Error("Expected the field `conference_sid` to be a primitive type in the JSON string but got " + data['conference_sid']);
        }
        // ensure the json data is a string
        if (data['end_reason'] && !(typeof data['end_reason'] === 'string' || data['end_reason'] instanceof String)) {
            throw new Error("Expected the field `end_reason` to be a primitive type in the JSON string but got " + data['end_reason']);
        }
        // ensure the json data is a string
        if (data['ended_by'] && !(typeof data['ended_by'] === 'string' || data['ended_by'] instanceof String)) {
            throw new Error("Expected the field `ended_by` to be a primitive type in the JSON string but got " + data['ended_by']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['mixer_region'] && !(typeof data['mixer_region'] === 'string' || data['mixer_region'] instanceof String)) {
            throw new Error("Expected the field `mixer_region` to be a primitive type in the JSON string but got " + data['mixer_region']);
        }
        // ensure the json data is a string
        if (data['mixer_region_requested'] && !(typeof data['mixer_region_requested'] === 'string' || data['mixer_region_requested'] instanceof String)) {
            throw new Error("Expected the field `mixer_region_requested` to be a primitive type in the JSON string but got " + data['mixer_region_requested']);
        }
        // ensure the json data is a string
        if (data['processing_state'] && !(typeof data['processing_state'] === 'string' || data['processing_state'] instanceof String)) {
            throw new Error("Expected the field `processing_state` to be a primitive type in the JSON string but got " + data['processing_state']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique SID identifier of the Account.
 * @member {String} account_sid
 */
InsightsV1Conference.prototype['account_sid'] = undefined;

/**
 * The unique SID identifier of the Conference.
 * @member {String} conference_sid
 */
InsightsV1Conference.prototype['conference_sid'] = undefined;

/**
 * Duration of the between conference start event and conference end event in seconds.
 * @member {Number} connect_duration_seconds
 */
InsightsV1Conference.prototype['connect_duration_seconds'] = undefined;

/**
 * Conference creation date and time in ISO 8601 format.
 * @member {Date} create_time
 */
InsightsV1Conference.prototype['create_time'] = undefined;

/**
 * Potential issues detected by Twilio during the conference.
 * @member {Object} detected_issues
 */
InsightsV1Conference.prototype['detected_issues'] = undefined;

/**
 * Conference duration in seconds.
 * @member {Number} duration_seconds
 */
InsightsV1Conference.prototype['duration_seconds'] = undefined;

/**
 * @member {module:model/ConferenceEnumConferenceEndReason} end_reason
 */
InsightsV1Conference.prototype['end_reason'] = undefined;

/**
 * Conference end date and time in ISO 8601 format.
 * @member {Date} end_time
 */
InsightsV1Conference.prototype['end_time'] = undefined;

/**
 * Call SID of the participant whose actions ended the conference.
 * @member {String} ended_by
 */
InsightsV1Conference.prototype['ended_by'] = undefined;

/**
 * Custom label for the conference resource, up to 64 characters.
 * @member {String} friendly_name
 */
InsightsV1Conference.prototype['friendly_name'] = undefined;

/**
 * Contains a dictionary of URL links to nested resources of this Conference.
 * @member {Object} links
 */
InsightsV1Conference.prototype['links'] = undefined;

/**
 * Actual maximum number of concurrent participants in the conference.
 * @member {Number} max_concurrent_participants
 */
InsightsV1Conference.prototype['max_concurrent_participants'] = undefined;

/**
 * Maximum number of concurrent participants as specified by the configuration.
 * @member {Number} max_participants
 */
InsightsV1Conference.prototype['max_participants'] = undefined;

/**
 * @member {module:model/ConferenceEnumRegion} mixer_region
 */
InsightsV1Conference.prototype['mixer_region'] = undefined;

/**
 * @member {module:model/ConferenceEnumRegion} mixer_region_requested
 */
InsightsV1Conference.prototype['mixer_region_requested'] = undefined;

/**
 * @member {module:model/ConferenceEnumProcessingState} processing_state
 */
InsightsV1Conference.prototype['processing_state'] = undefined;

/**
 * Boolean. Indicates whether recording was enabled at the conference mixer.
 * @member {Boolean} recording_enabled
 */
InsightsV1Conference.prototype['recording_enabled'] = undefined;

/**
 * Timestamp in ISO 8601 format when the conference started. Conferences do not start until at least two participants join, at least one of whom has startConferenceOnEnter=true.
 * @member {Date} start_time
 */
InsightsV1Conference.prototype['start_time'] = undefined;

/**
 * @member {module:model/ConferenceEnumConferenceStatus} status
 */
InsightsV1Conference.prototype['status'] = undefined;

/**
 * Object. Contains details about conference tags including severity.
 * @member {Object} tag_info
 */
InsightsV1Conference.prototype['tag_info'] = undefined;

/**
 * Tags for detected conference conditions and participant behaviors which may be of interest.
 * @member {Array.<module:model/ConferenceEnumTag>} tags
 */
InsightsV1Conference.prototype['tags'] = undefined;

/**
 * Unique conference participants based on caller ID.
 * @member {Number} unique_participants
 */
InsightsV1Conference.prototype['unique_participants'] = undefined;

/**
 * The URL of this resource.
 * @member {String} url
 */
InsightsV1Conference.prototype['url'] = undefined;






export default InsightsV1Conference;

