/**
 * Twilio - Insights
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConferenceParticipantEnumCallDirection from './ConferenceParticipantEnumCallDirection';
import ConferenceParticipantEnumCallStatus from './ConferenceParticipantEnumCallStatus';
import ConferenceParticipantEnumCallType from './ConferenceParticipantEnumCallType';
import ConferenceParticipantEnumJitterBufferSize from './ConferenceParticipantEnumJitterBufferSize';
import ConferenceParticipantEnumProcessingState from './ConferenceParticipantEnumProcessingState';
import ConferenceParticipantEnumRegion from './ConferenceParticipantEnumRegion';

/**
 * The InsightsV1ConferenceConferenceParticipant model module.
 * @module model/InsightsV1ConferenceConferenceParticipant
 * @version 1.55.0
 */
class InsightsV1ConferenceConferenceParticipant {
    /**
     * Constructs a new <code>InsightsV1ConferenceConferenceParticipant</code>.
     * @alias module:model/InsightsV1ConferenceConferenceParticipant
     */
    constructor() { 
        
        InsightsV1ConferenceConferenceParticipant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsightsV1ConferenceConferenceParticipant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsightsV1ConferenceConferenceParticipant} obj Optional instance to populate.
     * @return {module:model/InsightsV1ConferenceConferenceParticipant} The populated <code>InsightsV1ConferenceConferenceParticipant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsightsV1ConferenceConferenceParticipant();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('call_direction')) {
                obj['call_direction'] = ConferenceParticipantEnumCallDirection.constructFromObject(data['call_direction']);
            }
            if (data.hasOwnProperty('call_sid')) {
                obj['call_sid'] = ApiClient.convertToType(data['call_sid'], 'String');
            }
            if (data.hasOwnProperty('call_status')) {
                obj['call_status'] = ConferenceParticipantEnumCallStatus.constructFromObject(data['call_status']);
            }
            if (data.hasOwnProperty('call_type')) {
                obj['call_type'] = ConferenceParticipantEnumCallType.constructFromObject(data['call_type']);
            }
            if (data.hasOwnProperty('coached_participants')) {
                obj['coached_participants'] = ApiClient.convertToType(data['coached_participants'], ['String']);
            }
            if (data.hasOwnProperty('conference_region')) {
                obj['conference_region'] = ConferenceParticipantEnumRegion.constructFromObject(data['conference_region']);
            }
            if (data.hasOwnProperty('conference_sid')) {
                obj['conference_sid'] = ApiClient.convertToType(data['conference_sid'], 'String');
            }
            if (data.hasOwnProperty('country_code')) {
                obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
            }
            if (data.hasOwnProperty('duration_seconds')) {
                obj['duration_seconds'] = ApiClient.convertToType(data['duration_seconds'], 'Number');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], Object);
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('is_coach')) {
                obj['is_coach'] = ApiClient.convertToType(data['is_coach'], 'Boolean');
            }
            if (data.hasOwnProperty('is_moderator')) {
                obj['is_moderator'] = ApiClient.convertToType(data['is_moderator'], 'Boolean');
            }
            if (data.hasOwnProperty('jitter_buffer_size')) {
                obj['jitter_buffer_size'] = ConferenceParticipantEnumJitterBufferSize.constructFromObject(data['jitter_buffer_size']);
            }
            if (data.hasOwnProperty('join_time')) {
                obj['join_time'] = ApiClient.convertToType(data['join_time'], 'Date');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('leave_time')) {
                obj['leave_time'] = ApiClient.convertToType(data['leave_time'], 'Date');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], Object);
            }
            if (data.hasOwnProperty('outbound_queue_length')) {
                obj['outbound_queue_length'] = ApiClient.convertToType(data['outbound_queue_length'], 'Number');
            }
            if (data.hasOwnProperty('outbound_time_in_queue')) {
                obj['outbound_time_in_queue'] = ApiClient.convertToType(data['outbound_time_in_queue'], 'Number');
            }
            if (data.hasOwnProperty('participant_region')) {
                obj['participant_region'] = ConferenceParticipantEnumRegion.constructFromObject(data['participant_region']);
            }
            if (data.hasOwnProperty('participant_sid')) {
                obj['participant_sid'] = ApiClient.convertToType(data['participant_sid'], 'String');
            }
            if (data.hasOwnProperty('processing_state')) {
                obj['processing_state'] = ConferenceParticipantEnumProcessingState.constructFromObject(data['processing_state']);
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], Object);
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsightsV1ConferenceConferenceParticipant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsightsV1ConferenceConferenceParticipant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['call_direction'] && !(typeof data['call_direction'] === 'string' || data['call_direction'] instanceof String)) {
            throw new Error("Expected the field `call_direction` to be a primitive type in the JSON string but got " + data['call_direction']);
        }
        // ensure the json data is a string
        if (data['call_sid'] && !(typeof data['call_sid'] === 'string' || data['call_sid'] instanceof String)) {
            throw new Error("Expected the field `call_sid` to be a primitive type in the JSON string but got " + data['call_sid']);
        }
        // ensure the json data is a string
        if (data['call_status'] && !(typeof data['call_status'] === 'string' || data['call_status'] instanceof String)) {
            throw new Error("Expected the field `call_status` to be a primitive type in the JSON string but got " + data['call_status']);
        }
        // ensure the json data is a string
        if (data['call_type'] && !(typeof data['call_type'] === 'string' || data['call_type'] instanceof String)) {
            throw new Error("Expected the field `call_type` to be a primitive type in the JSON string but got " + data['call_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['coached_participants'])) {
            throw new Error("Expected the field `coached_participants` to be an array in the JSON data but got " + data['coached_participants']);
        }
        // ensure the json data is a string
        if (data['conference_region'] && !(typeof data['conference_region'] === 'string' || data['conference_region'] instanceof String)) {
            throw new Error("Expected the field `conference_region` to be a primitive type in the JSON string but got " + data['conference_region']);
        }
        // ensure the json data is a string
        if (data['conference_sid'] && !(typeof data['conference_sid'] === 'string' || data['conference_sid'] instanceof String)) {
            throw new Error("Expected the field `conference_sid` to be a primitive type in the JSON string but got " + data['conference_sid']);
        }
        // ensure the json data is a string
        if (data['country_code'] && !(typeof data['country_code'] === 'string' || data['country_code'] instanceof String)) {
            throw new Error("Expected the field `country_code` to be a primitive type in the JSON string but got " + data['country_code']);
        }
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['jitter_buffer_size'] && !(typeof data['jitter_buffer_size'] === 'string' || data['jitter_buffer_size'] instanceof String)) {
            throw new Error("Expected the field `jitter_buffer_size` to be a primitive type in the JSON string but got " + data['jitter_buffer_size']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['participant_region'] && !(typeof data['participant_region'] === 'string' || data['participant_region'] instanceof String)) {
            throw new Error("Expected the field `participant_region` to be a primitive type in the JSON string but got " + data['participant_region']);
        }
        // ensure the json data is a string
        if (data['participant_sid'] && !(typeof data['participant_sid'] === 'string' || data['participant_sid'] instanceof String)) {
            throw new Error("Expected the field `participant_sid` to be a primitive type in the JSON string but got " + data['participant_sid']);
        }
        // ensure the json data is a string
        if (data['processing_state'] && !(typeof data['processing_state'] === 'string' || data['processing_state'] instanceof String)) {
            throw new Error("Expected the field `processing_state` to be a primitive type in the JSON string but got " + data['processing_state']);
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique SID identifier of the Account.
 * @member {String} account_sid
 */
InsightsV1ConferenceConferenceParticipant.prototype['account_sid'] = undefined;

/**
 * @member {module:model/ConferenceParticipantEnumCallDirection} call_direction
 */
InsightsV1ConferenceConferenceParticipant.prototype['call_direction'] = undefined;

/**
 * Unique SID identifier of the call that generated the Participant resource.
 * @member {String} call_sid
 */
InsightsV1ConferenceConferenceParticipant.prototype['call_sid'] = undefined;

/**
 * @member {module:model/ConferenceParticipantEnumCallStatus} call_status
 */
InsightsV1ConferenceConferenceParticipant.prototype['call_status'] = undefined;

/**
 * @member {module:model/ConferenceParticipantEnumCallType} call_type
 */
InsightsV1ConferenceConferenceParticipant.prototype['call_type'] = undefined;

/**
 * Call SIDs coached by this participant.
 * @member {Array.<String>} coached_participants
 */
InsightsV1ConferenceConferenceParticipant.prototype['coached_participants'] = undefined;

/**
 * @member {module:model/ConferenceParticipantEnumRegion} conference_region
 */
InsightsV1ConferenceConferenceParticipant.prototype['conference_region'] = undefined;

/**
 * The unique SID identifier of the Conference.
 * @member {String} conference_sid
 */
InsightsV1ConferenceConferenceParticipant.prototype['conference_sid'] = undefined;

/**
 * ISO alpha-2 country code of the participant based on caller ID or called number.
 * @member {String} country_code
 */
InsightsV1ConferenceConferenceParticipant.prototype['country_code'] = undefined;

/**
 * Participant durations in seconds.
 * @member {Number} duration_seconds
 */
InsightsV1ConferenceConferenceParticipant.prototype['duration_seconds'] = undefined;

/**
 * Object containing information of actions taken by participants. Contains a dictionary of URL links to nested resources of this Conference Participant.
 * @member {Object} events
 */
InsightsV1ConferenceConferenceParticipant.prototype['events'] = undefined;

/**
 * Caller ID of the calling party.
 * @member {String} from
 */
InsightsV1ConferenceConferenceParticipant.prototype['from'] = undefined;

/**
 * Boolean. Indicated whether participant was a coach.
 * @member {Boolean} is_coach
 */
InsightsV1ConferenceConferenceParticipant.prototype['is_coach'] = undefined;

/**
 * Boolean. Indicates whether participant had startConferenceOnEnter=true or endConferenceOnExit=true.
 * @member {Boolean} is_moderator
 */
InsightsV1ConferenceConferenceParticipant.prototype['is_moderator'] = undefined;

/**
 * @member {module:model/ConferenceParticipantEnumJitterBufferSize} jitter_buffer_size
 */
InsightsV1ConferenceConferenceParticipant.prototype['jitter_buffer_size'] = undefined;

/**
 * ISO 8601 timestamp of participant join event.
 * @member {Date} join_time
 */
InsightsV1ConferenceConferenceParticipant.prototype['join_time'] = undefined;

/**
 * The user-specified label of this participant.
 * @member {String} label
 */
InsightsV1ConferenceConferenceParticipant.prototype['label'] = undefined;

/**
 * ISO 8601 timestamp of participant leave event.
 * @member {Date} leave_time
 */
InsightsV1ConferenceConferenceParticipant.prototype['leave_time'] = undefined;

/**
 * Object. Contains participant call quality metrics.
 * @member {Object} metrics
 */
InsightsV1ConferenceConferenceParticipant.prototype['metrics'] = undefined;

/**
 * Add Participant API only. Estimated time in queue at call creation.
 * @member {Number} outbound_queue_length
 */
InsightsV1ConferenceConferenceParticipant.prototype['outbound_queue_length'] = undefined;

/**
 * Add Participant API only. Actual time in queue in seconds.
 * @member {Number} outbound_time_in_queue
 */
InsightsV1ConferenceConferenceParticipant.prototype['outbound_time_in_queue'] = undefined;

/**
 * @member {module:model/ConferenceParticipantEnumRegion} participant_region
 */
InsightsV1ConferenceConferenceParticipant.prototype['participant_region'] = undefined;

/**
 * SID for this participant.
 * @member {String} participant_sid
 */
InsightsV1ConferenceConferenceParticipant.prototype['participant_sid'] = undefined;

/**
 * @member {module:model/ConferenceParticipantEnumProcessingState} processing_state
 */
InsightsV1ConferenceConferenceParticipant.prototype['processing_state'] = undefined;

/**
 * Participant properties and metadata.
 * @member {Object} properties
 */
InsightsV1ConferenceConferenceParticipant.prototype['properties'] = undefined;

/**
 * Called party.
 * @member {String} to
 */
InsightsV1ConferenceConferenceParticipant.prototype['to'] = undefined;

/**
 * The URL of this resource.
 * @member {String} url
 */
InsightsV1ConferenceConferenceParticipant.prototype['url'] = undefined;






export default InsightsV1ConferenceConferenceParticipant;

