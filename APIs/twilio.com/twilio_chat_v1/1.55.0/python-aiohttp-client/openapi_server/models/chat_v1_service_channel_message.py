# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ChatV1ServiceChannelMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, attributes: str=None, body: str=None, channel_sid: str=None, date_created: datetime=None, date_updated: datetime=None, _from: str=None, index: int=None, service_sid: str=None, sid: str=None, to: str=None, url: str=None, was_edited: bool=None):
        """ChatV1ServiceChannelMessage - a model defined in OpenAPI

        :param account_sid: The account_sid of this ChatV1ServiceChannelMessage.
        :param attributes: The attributes of this ChatV1ServiceChannelMessage.
        :param body: The body of this ChatV1ServiceChannelMessage.
        :param channel_sid: The channel_sid of this ChatV1ServiceChannelMessage.
        :param date_created: The date_created of this ChatV1ServiceChannelMessage.
        :param date_updated: The date_updated of this ChatV1ServiceChannelMessage.
        :param _from: The _from of this ChatV1ServiceChannelMessage.
        :param index: The index of this ChatV1ServiceChannelMessage.
        :param service_sid: The service_sid of this ChatV1ServiceChannelMessage.
        :param sid: The sid of this ChatV1ServiceChannelMessage.
        :param to: The to of this ChatV1ServiceChannelMessage.
        :param url: The url of this ChatV1ServiceChannelMessage.
        :param was_edited: The was_edited of this ChatV1ServiceChannelMessage.
        """
        self.openapi_types = {
            'account_sid': str,
            'attributes': str,
            'body': str,
            'channel_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            '_from': str,
            'index': int,
            'service_sid': str,
            'sid': str,
            'to': str,
            'url': str,
            'was_edited': bool
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'attributes': 'attributes',
            'body': 'body',
            'channel_sid': 'channel_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            '_from': 'from',
            'index': 'index',
            'service_sid': 'service_sid',
            'sid': 'sid',
            'to': 'to',
            'url': 'url',
            'was_edited': 'was_edited'
        }

        self._account_sid = account_sid
        self._attributes = attributes
        self._body = body
        self._channel_sid = channel_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self.__from = _from
        self._index = index
        self._service_sid = service_sid
        self._sid = sid
        self._to = to
        self._url = url
        self._was_edited = was_edited

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChatV1ServiceChannelMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The chat.v1.service.channel.message of this ChatV1ServiceChannelMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ChatV1ServiceChannelMessage.

        The SID of the [Account](https://www.twilio.com/docs/api/rest/account) that created the Message resource.

        :return: The account_sid of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ChatV1ServiceChannelMessage.

        The SID of the [Account](https://www.twilio.com/docs/api/rest/account) that created the Message resource.

        :param account_sid: The account_sid of this ChatV1ServiceChannelMessage.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def attributes(self):
        """Gets the attributes of this ChatV1ServiceChannelMessage.

        The JSON string that stores application-specific data. **Note** If this property has been assigned a value, it's only  displayed in a FETCH action that returns a single resource; otherwise, it's null. If the attributes have not been set, `{}` is returned.

        :return: The attributes of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ChatV1ServiceChannelMessage.

        The JSON string that stores application-specific data. **Note** If this property has been assigned a value, it's only  displayed in a FETCH action that returns a single resource; otherwise, it's null. If the attributes have not been set, `{}` is returned.

        :param attributes: The attributes of this ChatV1ServiceChannelMessage.
        :type attributes: str
        """

        self._attributes = attributes

    @property
    def body(self):
        """Gets the body of this ChatV1ServiceChannelMessage.

        The content of the message.

        :return: The body of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this ChatV1ServiceChannelMessage.

        The content of the message.

        :param body: The body of this ChatV1ServiceChannelMessage.
        :type body: str
        """

        self._body = body

    @property
    def channel_sid(self):
        """Gets the channel_sid of this ChatV1ServiceChannelMessage.

        The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the Message resource belongs to.

        :return: The channel_sid of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self._channel_sid

    @channel_sid.setter
    def channel_sid(self, channel_sid):
        """Sets the channel_sid of this ChatV1ServiceChannelMessage.

        The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the Message resource belongs to.

        :param channel_sid: The channel_sid of this ChatV1ServiceChannelMessage.
        :type channel_sid: str
        """
        if channel_sid is not None and len(channel_sid) > 34:
            raise ValueError("Invalid value for `channel_sid`, length must be less than or equal to `34`")
        if channel_sid is not None and len(channel_sid) < 34:
            raise ValueError("Invalid value for `channel_sid`, length must be greater than or equal to `34`")
        if channel_sid is not None and not re.search(r'^CH[0-9a-fA-F]{32}$', channel_sid):
            raise ValueError("Invalid value for `channel_sid`, must be a follow pattern or equal to `/^CH[0-9a-fA-F]{32}$/`")

        self._channel_sid = channel_sid

    @property
    def date_created(self):
        """Gets the date_created of this ChatV1ServiceChannelMessage.

        The date and time in GMT when the resource was created specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this ChatV1ServiceChannelMessage.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ChatV1ServiceChannelMessage.

        The date and time in GMT when the resource was created specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this ChatV1ServiceChannelMessage.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ChatV1ServiceChannelMessage.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this ChatV1ServiceChannelMessage.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ChatV1ServiceChannelMessage.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this ChatV1ServiceChannelMessage.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def _from(self):
        """Gets the _from of this ChatV1ServiceChannelMessage.

        The [identity](https://www.twilio.com/docs/api/chat/guides/identity) of the message's author. The default value is `system`.

        :return: The _from of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this ChatV1ServiceChannelMessage.

        The [identity](https://www.twilio.com/docs/api/chat/guides/identity) of the message's author. The default value is `system`.

        :param _from: The _from of this ChatV1ServiceChannelMessage.
        :type _from: str
        """

        self.__from = _from

    @property
    def index(self):
        """Gets the index of this ChatV1ServiceChannelMessage.

        The index of the message within the [Channel](https://www.twilio.com/docs/chat/api/channels).

        :return: The index of this ChatV1ServiceChannelMessage.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this ChatV1ServiceChannelMessage.

        The index of the message within the [Channel](https://www.twilio.com/docs/chat/api/channels).

        :param index: The index of this ChatV1ServiceChannelMessage.
        :type index: int
        """

        self._index = index

    @property
    def service_sid(self):
        """Gets the service_sid of this ChatV1ServiceChannelMessage.

        The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) the resource is associated with.

        :return: The service_sid of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this ChatV1ServiceChannelMessage.

        The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) the resource is associated with.

        :param service_sid: The service_sid of this ChatV1ServiceChannelMessage.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def sid(self):
        """Gets the sid of this ChatV1ServiceChannelMessage.

        The unique string that we created to identify the Message resource.

        :return: The sid of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ChatV1ServiceChannelMessage.

        The unique string that we created to identify the Message resource.

        :param sid: The sid of this ChatV1ServiceChannelMessage.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^IM[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^IM[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def to(self):
        """Gets the to of this ChatV1ServiceChannelMessage.

        The SID of the [Channel](https://www.twilio.com/docs/chat/api/channels) that the message was sent to.

        :return: The to of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this ChatV1ServiceChannelMessage.

        The SID of the [Channel](https://www.twilio.com/docs/chat/api/channels) that the message was sent to.

        :param to: The to of this ChatV1ServiceChannelMessage.
        :type to: str
        """
        if to is not None and len(to) > 34:
            raise ValueError("Invalid value for `to`, length must be less than or equal to `34`")
        if to is not None and len(to) < 34:
            raise ValueError("Invalid value for `to`, length must be greater than or equal to `34`")
        if to is not None and not re.search(r'^CH[0-9a-fA-F]{32}$', to):
            raise ValueError("Invalid value for `to`, must be a follow pattern or equal to `/^CH[0-9a-fA-F]{32}$/`")

        self._to = to

    @property
    def url(self):
        """Gets the url of this ChatV1ServiceChannelMessage.

        The absolute URL of the Message resource.

        :return: The url of this ChatV1ServiceChannelMessage.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ChatV1ServiceChannelMessage.

        The absolute URL of the Message resource.

        :param url: The url of this ChatV1ServiceChannelMessage.
        :type url: str
        """

        self._url = url

    @property
    def was_edited(self):
        """Gets the was_edited of this ChatV1ServiceChannelMessage.

        Whether the message has been edited since it was created.

        :return: The was_edited of this ChatV1ServiceChannelMessage.
        :rtype: bool
        """
        return self._was_edited

    @was_edited.setter
    def was_edited(self, was_edited):
        """Sets the was_edited of this ChatV1ServiceChannelMessage.

        Whether the message has been edited since it was created.

        :param was_edited: The was_edited of this ChatV1ServiceChannelMessage.
        :type was_edited: bool
        """

        self._was_edited = was_edited
