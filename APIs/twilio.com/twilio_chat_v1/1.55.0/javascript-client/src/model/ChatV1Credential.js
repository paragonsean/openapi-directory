/**
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredentialEnumPushService from './CredentialEnumPushService';

/**
 * The ChatV1Credential model module.
 * @module model/ChatV1Credential
 * @version 1.55.0
 */
class ChatV1Credential {
    /**
     * Constructs a new <code>ChatV1Credential</code>.
     * @alias module:model/ChatV1Credential
     */
    constructor() { 
        
        ChatV1Credential.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChatV1Credential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatV1Credential} obj Optional instance to populate.
     * @return {module:model/ChatV1Credential} The populated <code>ChatV1Credential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatV1Credential();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('sandbox')) {
                obj['sandbox'] = ApiClient.convertToType(data['sandbox'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = CredentialEnumPushService.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatV1Credential</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatV1Credential</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['sandbox'] && !(typeof data['sandbox'] === 'string' || data['sandbox'] instanceof String)) {
            throw new Error("Expected the field `sandbox` to be a primitive type in the JSON string but got " + data['sandbox']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/api/rest/account) that created the Credential resource.
 * @member {String} account_sid
 */
ChatV1Credential.prototype['account_sid'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_created
 */
ChatV1Credential.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_updated
 */
ChatV1Credential.prototype['date_updated'] = undefined;

/**
 * The string that you assigned to describe the resource.
 * @member {String} friendly_name
 */
ChatV1Credential.prototype['friendly_name'] = undefined;

/**
 * [APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.
 * @member {String} sandbox
 */
ChatV1Credential.prototype['sandbox'] = undefined;

/**
 * The unique string that we created to identify the Credential resource.
 * @member {String} sid
 */
ChatV1Credential.prototype['sid'] = undefined;

/**
 * @member {module:model/CredentialEnumPushService} type
 */
ChatV1Credential.prototype['type'] = undefined;

/**
 * The absolute URL of the Credential resource.
 * @member {String} url
 */
ChatV1Credential.prototype['url'] = undefined;






export default ChatV1Credential;

