/**
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChatV1ServiceChannelMessage model module.
 * @module model/ChatV1ServiceChannelMessage
 * @version 1.55.0
 */
class ChatV1ServiceChannelMessage {
    /**
     * Constructs a new <code>ChatV1ServiceChannelMessage</code>.
     * @alias module:model/ChatV1ServiceChannelMessage
     */
    constructor() { 
        
        ChatV1ServiceChannelMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChatV1ServiceChannelMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatV1ServiceChannelMessage} obj Optional instance to populate.
     * @return {module:model/ChatV1ServiceChannelMessage} The populated <code>ChatV1ServiceChannelMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatV1ServiceChannelMessage();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('channel_sid')) {
                obj['channel_sid'] = ApiClient.convertToType(data['channel_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('service_sid')) {
                obj['service_sid'] = ApiClient.convertToType(data['service_sid'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('was_edited')) {
                obj['was_edited'] = ApiClient.convertToType(data['was_edited'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatV1ServiceChannelMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatV1ServiceChannelMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['attributes'] && !(typeof data['attributes'] === 'string' || data['attributes'] instanceof String)) {
            throw new Error("Expected the field `attributes` to be a primitive type in the JSON string but got " + data['attributes']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['channel_sid'] && !(typeof data['channel_sid'] === 'string' || data['channel_sid'] instanceof String)) {
            throw new Error("Expected the field `channel_sid` to be a primitive type in the JSON string but got " + data['channel_sid']);
        }
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['service_sid'] && !(typeof data['service_sid'] === 'string' || data['service_sid'] instanceof String)) {
            throw new Error("Expected the field `service_sid` to be a primitive type in the JSON string but got " + data['service_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/api/rest/account) that created the Message resource.
 * @member {String} account_sid
 */
ChatV1ServiceChannelMessage.prototype['account_sid'] = undefined;

/**
 * The JSON string that stores application-specific data. **Note** If this property has been assigned a value, it's only  displayed in a FETCH action that returns a single resource; otherwise, it's null. If the attributes have not been set, `{}` is returned.
 * @member {String} attributes
 */
ChatV1ServiceChannelMessage.prototype['attributes'] = undefined;

/**
 * The content of the message.
 * @member {String} body
 */
ChatV1ServiceChannelMessage.prototype['body'] = undefined;

/**
 * The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the Message resource belongs to.
 * @member {String} channel_sid
 */
ChatV1ServiceChannelMessage.prototype['channel_sid'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_created
 */
ChatV1ServiceChannelMessage.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_updated
 */
ChatV1ServiceChannelMessage.prototype['date_updated'] = undefined;

/**
 * The [identity](https://www.twilio.com/docs/api/chat/guides/identity) of the message's author. The default value is `system`.
 * @member {String} from
 */
ChatV1ServiceChannelMessage.prototype['from'] = undefined;

/**
 * The index of the message within the [Channel](https://www.twilio.com/docs/chat/api/channels).
 * @member {Number} index
 */
ChatV1ServiceChannelMessage.prototype['index'] = undefined;

/**
 * The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) the resource is associated with.
 * @member {String} service_sid
 */
ChatV1ServiceChannelMessage.prototype['service_sid'] = undefined;

/**
 * The unique string that we created to identify the Message resource.
 * @member {String} sid
 */
ChatV1ServiceChannelMessage.prototype['sid'] = undefined;

/**
 * The SID of the [Channel](https://www.twilio.com/docs/chat/api/channels) that the message was sent to.
 * @member {String} to
 */
ChatV1ServiceChannelMessage.prototype['to'] = undefined;

/**
 * The absolute URL of the Message resource.
 * @member {String} url
 */
ChatV1ServiceChannelMessage.prototype['url'] = undefined;

/**
 * Whether the message has been edited since it was created.
 * @member {Boolean} was_edited
 */
ChatV1ServiceChannelMessage.prototype['was_edited'] = undefined;






export default ChatV1ServiceChannelMessage;

