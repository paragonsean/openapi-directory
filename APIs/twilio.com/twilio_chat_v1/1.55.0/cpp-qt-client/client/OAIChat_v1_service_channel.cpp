/**
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChat_v1_service_channel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChat_v1_service_channel::OAIChat_v1_service_channel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChat_v1_service_channel::OAIChat_v1_service_channel() {
    this->initializeModel();
}

OAIChat_v1_service_channel::~OAIChat_v1_service_channel() {}

void OAIChat_v1_service_channel::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_members_count_isSet = false;
    m_members_count_isValid = false;

    m_messages_count_isSet = false;
    m_messages_count_isValid = false;

    m_service_sid_isSet = false;
    m_service_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_unique_name_isSet = false;
    m_unique_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIChat_v1_service_channel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChat_v1_service_channel::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_members_count_isValid = ::OpenAPI::fromJsonValue(m_members_count, json[QString("members_count")]);
    m_members_count_isSet = !json[QString("members_count")].isNull() && m_members_count_isValid;

    m_messages_count_isValid = ::OpenAPI::fromJsonValue(m_messages_count, json[QString("messages_count")]);
    m_messages_count_isSet = !json[QString("messages_count")].isNull() && m_messages_count_isValid;

    m_service_sid_isValid = ::OpenAPI::fromJsonValue(m_service_sid, json[QString("service_sid")]);
    m_service_sid_isSet = !json[QString("service_sid")].isNull() && m_service_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_unique_name_isValid = ::OpenAPI::fromJsonValue(m_unique_name, json[QString("unique_name")]);
    m_unique_name_isSet = !json[QString("unique_name")].isNull() && m_unique_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIChat_v1_service_channel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChat_v1_service_channel::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_attributes_isSet) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_links_isSet) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_members_count_isSet) {
        obj.insert(QString("members_count"), ::OpenAPI::toJsonValue(m_members_count));
    }
    if (m_messages_count_isSet) {
        obj.insert(QString("messages_count"), ::OpenAPI::toJsonValue(m_messages_count));
    }
    if (m_service_sid_isSet) {
        obj.insert(QString("service_sid"), ::OpenAPI::toJsonValue(m_service_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_unique_name_isSet) {
        obj.insert(QString("unique_name"), ::OpenAPI::toJsonValue(m_unique_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIChat_v1_service_channel::getAccountSid() const {
    return m_account_sid;
}
void OAIChat_v1_service_channel::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIChat_v1_service_channel::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIChat_v1_service_channel::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIChat_v1_service_channel::getAttributes() const {
    return m_attributes;
}
void OAIChat_v1_service_channel::setAttributes(const QString &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIChat_v1_service_channel::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIChat_v1_service_channel::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIChat_v1_service_channel::getCreatedBy() const {
    return m_created_by;
}
void OAIChat_v1_service_channel::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIChat_v1_service_channel::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIChat_v1_service_channel::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIChat_v1_service_channel::getDateCreated() const {
    return m_date_created;
}
void OAIChat_v1_service_channel::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIChat_v1_service_channel::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIChat_v1_service_channel::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIChat_v1_service_channel::getDateUpdated() const {
    return m_date_updated;
}
void OAIChat_v1_service_channel::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIChat_v1_service_channel::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIChat_v1_service_channel::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIChat_v1_service_channel::getFriendlyName() const {
    return m_friendly_name;
}
void OAIChat_v1_service_channel::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIChat_v1_service_channel::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIChat_v1_service_channel::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

OAIObject OAIChat_v1_service_channel::getLinks() const {
    return m_links;
}
void OAIChat_v1_service_channel::setLinks(const OAIObject &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIChat_v1_service_channel::is_links_Set() const{
    return m_links_isSet;
}

bool OAIChat_v1_service_channel::is_links_Valid() const{
    return m_links_isValid;
}

qint32 OAIChat_v1_service_channel::getMembersCount() const {
    return m_members_count;
}
void OAIChat_v1_service_channel::setMembersCount(const qint32 &members_count) {
    m_members_count = members_count;
    m_members_count_isSet = true;
}

bool OAIChat_v1_service_channel::is_members_count_Set() const{
    return m_members_count_isSet;
}

bool OAIChat_v1_service_channel::is_members_count_Valid() const{
    return m_members_count_isValid;
}

qint32 OAIChat_v1_service_channel::getMessagesCount() const {
    return m_messages_count;
}
void OAIChat_v1_service_channel::setMessagesCount(const qint32 &messages_count) {
    m_messages_count = messages_count;
    m_messages_count_isSet = true;
}

bool OAIChat_v1_service_channel::is_messages_count_Set() const{
    return m_messages_count_isSet;
}

bool OAIChat_v1_service_channel::is_messages_count_Valid() const{
    return m_messages_count_isValid;
}

QString OAIChat_v1_service_channel::getServiceSid() const {
    return m_service_sid;
}
void OAIChat_v1_service_channel::setServiceSid(const QString &service_sid) {
    m_service_sid = service_sid;
    m_service_sid_isSet = true;
}

bool OAIChat_v1_service_channel::is_service_sid_Set() const{
    return m_service_sid_isSet;
}

bool OAIChat_v1_service_channel::is_service_sid_Valid() const{
    return m_service_sid_isValid;
}

QString OAIChat_v1_service_channel::getSid() const {
    return m_sid;
}
void OAIChat_v1_service_channel::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIChat_v1_service_channel::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIChat_v1_service_channel::is_sid_Valid() const{
    return m_sid_isValid;
}

OAIChannel_enum_channel_type OAIChat_v1_service_channel::getType() const {
    return m_type;
}
void OAIChat_v1_service_channel::setType(const OAIChannel_enum_channel_type &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIChat_v1_service_channel::is_type_Set() const{
    return m_type_isSet;
}

bool OAIChat_v1_service_channel::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIChat_v1_service_channel::getUniqueName() const {
    return m_unique_name;
}
void OAIChat_v1_service_channel::setUniqueName(const QString &unique_name) {
    m_unique_name = unique_name;
    m_unique_name_isSet = true;
}

bool OAIChat_v1_service_channel::is_unique_name_Set() const{
    return m_unique_name_isSet;
}

bool OAIChat_v1_service_channel::is_unique_name_Valid() const{
    return m_unique_name_isValid;
}

QString OAIChat_v1_service_channel::getUrl() const {
    return m_url;
}
void OAIChat_v1_service_channel::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIChat_v1_service_channel::is_url_Set() const{
    return m_url_isSet;
}

bool OAIChat_v1_service_channel::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIChat_v1_service_channel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_members_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_messages_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChat_v1_service_channel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
