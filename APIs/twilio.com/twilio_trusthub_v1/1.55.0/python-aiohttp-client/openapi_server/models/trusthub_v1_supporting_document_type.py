# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class TrusthubV1SupportingDocumentType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: List[object]=None, friendly_name: str=None, machine_name: str=None, sid: str=None, url: str=None):
        """TrusthubV1SupportingDocumentType - a model defined in OpenAPI

        :param fields: The fields of this TrusthubV1SupportingDocumentType.
        :param friendly_name: The friendly_name of this TrusthubV1SupportingDocumentType.
        :param machine_name: The machine_name of this TrusthubV1SupportingDocumentType.
        :param sid: The sid of this TrusthubV1SupportingDocumentType.
        :param url: The url of this TrusthubV1SupportingDocumentType.
        """
        self.openapi_types = {
            'fields': List[object],
            'friendly_name': str,
            'machine_name': str,
            'sid': str,
            'url': str
        }

        self.attribute_map = {
            'fields': 'fields',
            'friendly_name': 'friendly_name',
            'machine_name': 'machine_name',
            'sid': 'sid',
            'url': 'url'
        }

        self._fields = fields
        self._friendly_name = friendly_name
        self._machine_name = machine_name
        self._sid = sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrusthubV1SupportingDocumentType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The trusthub.v1.supporting_document_type of this TrusthubV1SupportingDocumentType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this TrusthubV1SupportingDocumentType.

        The required information for creating a Supporting Document. The required fields will change as regulatory needs change and will differ for businesses and individuals.

        :return: The fields of this TrusthubV1SupportingDocumentType.
        :rtype: List[object]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this TrusthubV1SupportingDocumentType.

        The required information for creating a Supporting Document. The required fields will change as regulatory needs change and will differ for businesses and individuals.

        :param fields: The fields of this TrusthubV1SupportingDocumentType.
        :type fields: List[object]
        """

        self._fields = fields

    @property
    def friendly_name(self):
        """Gets the friendly_name of this TrusthubV1SupportingDocumentType.

        A human-readable description of the Supporting Document Type resource.

        :return: The friendly_name of this TrusthubV1SupportingDocumentType.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this TrusthubV1SupportingDocumentType.

        A human-readable description of the Supporting Document Type resource.

        :param friendly_name: The friendly_name of this TrusthubV1SupportingDocumentType.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def machine_name(self):
        """Gets the machine_name of this TrusthubV1SupportingDocumentType.

        The machine-readable description of the Supporting Document Type resource.

        :return: The machine_name of this TrusthubV1SupportingDocumentType.
        :rtype: str
        """
        return self._machine_name

    @machine_name.setter
    def machine_name(self, machine_name):
        """Sets the machine_name of this TrusthubV1SupportingDocumentType.

        The machine-readable description of the Supporting Document Type resource.

        :param machine_name: The machine_name of this TrusthubV1SupportingDocumentType.
        :type machine_name: str
        """

        self._machine_name = machine_name

    @property
    def sid(self):
        """Gets the sid of this TrusthubV1SupportingDocumentType.

        The unique string that identifies the Supporting Document Type resource.

        :return: The sid of this TrusthubV1SupportingDocumentType.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this TrusthubV1SupportingDocumentType.

        The unique string that identifies the Supporting Document Type resource.

        :param sid: The sid of this TrusthubV1SupportingDocumentType.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^OY[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^OY[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this TrusthubV1SupportingDocumentType.

        The absolute URL of the Supporting Document Type resource.

        :return: The url of this TrusthubV1SupportingDocumentType.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TrusthubV1SupportingDocumentType.

        The absolute URL of the Supporting Document Type resource.

        :param url: The url of this TrusthubV1SupportingDocumentType.
        :type url: str
        """

        self._url = url
