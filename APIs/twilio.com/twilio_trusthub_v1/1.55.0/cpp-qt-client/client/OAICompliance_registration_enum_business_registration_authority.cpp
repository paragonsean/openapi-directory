/**
 * Twilio - Trusthub
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompliance_registration_enum_business_registration_authority.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompliance_registration_enum_business_registration_authority::OAICompliance_registration_enum_business_registration_authority(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompliance_registration_enum_business_registration_authority::OAICompliance_registration_enum_business_registration_authority() {
    this->initializeModel();
}

OAICompliance_registration_enum_business_registration_authority::~OAICompliance_registration_enum_business_registration_authority() {}

void OAICompliance_registration_enum_business_registration_authority::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICompliance_registration_enum_business_registration_authority::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICompliance_registration_enum_business_registration_authority::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UK:CRN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompliance_registration_enum_business_registration_authority::UK_CRN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US:EIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompliance_registration_enum_business_registration_authority::US_EIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CA:CBN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompliance_registration_enum_business_registration_authority::CA_CBN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AU:ACN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompliance_registration_enum_business_registration_authority::AU_ACN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Other", Qt::CaseInsensitive) == 0) {
        m_value = eOAICompliance_registration_enum_business_registration_authority::OTHER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICompliance_registration_enum_business_registration_authority::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICompliance_registration_enum_business_registration_authority::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICompliance_registration_enum_business_registration_authority::UK_CRN:
            val = "UK:CRN";
            break;
        case eOAICompliance_registration_enum_business_registration_authority::US_EIN:
            val = "US:EIN";
            break;
        case eOAICompliance_registration_enum_business_registration_authority::CA_CBN:
            val = "CA:CBN";
            break;
        case eOAICompliance_registration_enum_business_registration_authority::AU_ACN:
            val = "AU:ACN";
            break;
        case eOAICompliance_registration_enum_business_registration_authority::OTHER:
            val = "Other";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICompliance_registration_enum_business_registration_authority::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICompliance_registration_enum_business_registration_authority::eOAICompliance_registration_enum_business_registration_authority OAICompliance_registration_enum_business_registration_authority::getValue() const {
    return m_value;
}

void OAICompliance_registration_enum_business_registration_authority::setValue(const OAICompliance_registration_enum_business_registration_authority::eOAICompliance_registration_enum_business_registration_authority& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICompliance_registration_enum_business_registration_authority::isSet() const {
    
    return m_value_isSet;
}

bool OAICompliance_registration_enum_business_registration_authority::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
