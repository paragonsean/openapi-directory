/*
 * Twilio - Trusthub
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ComplianceRegistrationEnumBusinessIdentityType;
import org.openapitools.client.model.ComplianceRegistrationEnumBusinessRegistrationAuthority;
import org.openapitools.client.model.ComplianceRegistrationEnumEndUserType;
import org.openapitools.client.model.ComplianceRegistrationEnumPhoneNumberType;
import org.openapitools.client.model.TrusthubV1ComplianceRegistration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TrusthubV1ComplianceRegistrationInquiriesApi
 */
@Disabled
public class TrusthubV1ComplianceRegistrationInquiriesApiTest {

    private final TrusthubV1ComplianceRegistrationInquiriesApi api = new TrusthubV1ComplianceRegistrationInquiriesApi();

    /**
     * Create a new Compliance Registration Inquiry for the authenticated account. This is necessary to start a new embedded session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createComplianceRegistrationTest() throws ApiException {
        ComplianceRegistrationEnumEndUserType endUserType = null;
        ComplianceRegistrationEnumPhoneNumberType phoneNumberType = null;
        Boolean acceptedNotificationReceipt = null;
        String addressCity = null;
        String addressCountryCode = null;
        String addressPostalCode = null;
        String addressStreet = null;
        String addressStreetSecondary = null;
        String addressSubdivision = null;
        String authorizedRepresentative1DateOfBirth = null;
        String authorizedRepresentative1Email = null;
        String authorizedRepresentative1FirstName = null;
        String authorizedRepresentative1LastName = null;
        String authorizedRepresentative1Phone = null;
        ComplianceRegistrationEnumBusinessIdentityType businessIdentityType = null;
        String businessLegalName = null;
        ComplianceRegistrationEnumBusinessRegistrationAuthority businessRegistrationAuthority = null;
        String businessRegistrationNumber = null;
        String businessWebsiteUrl = null;
        String dateOfBirth = null;
        String emergencyAddressCity = null;
        String emergencyAddressCountryCode = null;
        String emergencyAddressPostalCode = null;
        String emergencyAddressStreet = null;
        String emergencyAddressStreetSecondary = null;
        String emergencyAddressSubdivision = null;
        String _file = null;
        String fileName = null;
        String firstName = null;
        String friendlyName = null;
        String individualEmail = null;
        String individualPhone = null;
        Boolean isIsvEmbed = null;
        String lastName = null;
        String notificationEmail = null;
        Boolean useAddressAsEmergencyAddress = null;
        TrusthubV1ComplianceRegistration response = api.createComplianceRegistration(endUserType, phoneNumberType, acceptedNotificationReceipt, addressCity, addressCountryCode, addressPostalCode, addressStreet, addressStreetSecondary, addressSubdivision, authorizedRepresentative1DateOfBirth, authorizedRepresentative1Email, authorizedRepresentative1FirstName, authorizedRepresentative1LastName, authorizedRepresentative1Phone, businessIdentityType, businessLegalName, businessRegistrationAuthority, businessRegistrationNumber, businessWebsiteUrl, dateOfBirth, emergencyAddressCity, emergencyAddressCountryCode, emergencyAddressPostalCode, emergencyAddressStreet, emergencyAddressStreetSecondary, emergencyAddressSubdivision, _file, fileName, firstName, friendlyName, individualEmail, individualPhone, isIsvEmbed, lastName, notificationEmail, useAddressAsEmergencyAddress);
        // TODO: test validations
    }

}
