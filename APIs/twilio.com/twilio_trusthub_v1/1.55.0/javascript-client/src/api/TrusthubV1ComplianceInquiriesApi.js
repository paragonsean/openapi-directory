/**
 * Twilio - Trusthub
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TrusthubV1ComplianceInquiry from '../model/TrusthubV1ComplianceInquiry';

/**
* TrusthubV1ComplianceInquiries service.
* @module api/TrusthubV1ComplianceInquiriesApi
* @version 1.55.0
*/
export default class TrusthubV1ComplianceInquiriesApi {

    /**
    * Constructs a new TrusthubV1ComplianceInquiriesApi. 
    * @alias module:api/TrusthubV1ComplianceInquiriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createComplianceInquiry operation.
     * @callback module:api/TrusthubV1ComplianceInquiriesApi~createComplianceInquiryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrusthubV1ComplianceInquiry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Compliance Inquiry for the authenticated account. This is necessary to start a new embedded session.
     * @param {String} primaryProfileSid The unique SID identifier of the Primary Customer Profile that should be used as a parent. Only necessary when creating a secondary Customer Profile.
     * @param {Object} opts Optional parameters
     * @param {String} [notificationEmail] The email address that approval status updates will be sent to. If not specified, the email address associated with your primary customer profile will be used.
     * @param {module:api/TrusthubV1ComplianceInquiriesApi~createComplianceInquiryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrusthubV1ComplianceInquiry}
     */
    createComplianceInquiry(primaryProfileSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'primaryProfileSid' is set
      if (primaryProfileSid === undefined || primaryProfileSid === null) {
        throw new Error("Missing the required parameter 'primaryProfileSid' when calling createComplianceInquiry");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'NotificationEmail': opts['notificationEmail'],
        'PrimaryProfileSid': primaryProfileSid
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = TrusthubV1ComplianceInquiry;
      let basePaths = ['https://trusthub.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/ComplianceInquiries/Customers/Initialize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateComplianceInquiry operation.
     * @callback module:api/TrusthubV1ComplianceInquiriesApi~updateComplianceInquiryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrusthubV1ComplianceInquiry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resume a specific Compliance Inquiry that has expired, or re-open a rejected Compliance Inquiry for editing.
     * @param {String} customerId The unique CustomerId matching the Customer Profile/Compliance Inquiry that should be resumed or resubmitted. This value will have been returned by the initial Compliance Inquiry creation call.
     * @param {String} primaryProfileSid The unique SID identifier of the Primary Customer Profile that should be used as a parent. Only necessary when creating a secondary Customer Profile.
     * @param {module:api/TrusthubV1ComplianceInquiriesApi~updateComplianceInquiryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrusthubV1ComplianceInquiry}
     */
    updateComplianceInquiry(customerId, primaryProfileSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'customerId' is set
      if (customerId === undefined || customerId === null) {
        throw new Error("Missing the required parameter 'customerId' when calling updateComplianceInquiry");
      }
      // verify the required parameter 'primaryProfileSid' is set
      if (primaryProfileSid === undefined || primaryProfileSid === null) {
        throw new Error("Missing the required parameter 'primaryProfileSid' when calling updateComplianceInquiry");
      }

      let pathParams = {
        'CustomerId': customerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'PrimaryProfileSid': primaryProfileSid
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = TrusthubV1ComplianceInquiry;
      let basePaths = ['https://trusthub.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/ComplianceInquiries/Customers/{CustomerId}/Initialize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
