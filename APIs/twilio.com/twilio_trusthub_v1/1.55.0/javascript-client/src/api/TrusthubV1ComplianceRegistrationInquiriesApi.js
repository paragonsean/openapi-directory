/**
 * Twilio - Trusthub
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ComplianceRegistrationEnumBusinessIdentityType from '../model/ComplianceRegistrationEnumBusinessIdentityType';
import ComplianceRegistrationEnumBusinessRegistrationAuthority from '../model/ComplianceRegistrationEnumBusinessRegistrationAuthority';
import ComplianceRegistrationEnumEndUserType from '../model/ComplianceRegistrationEnumEndUserType';
import ComplianceRegistrationEnumPhoneNumberType from '../model/ComplianceRegistrationEnumPhoneNumberType';
import TrusthubV1ComplianceRegistration from '../model/TrusthubV1ComplianceRegistration';

/**
* TrusthubV1ComplianceRegistrationInquiries service.
* @module api/TrusthubV1ComplianceRegistrationInquiriesApi
* @version 1.55.0
*/
export default class TrusthubV1ComplianceRegistrationInquiriesApi {

    /**
    * Constructs a new TrusthubV1ComplianceRegistrationInquiriesApi. 
    * @alias module:api/TrusthubV1ComplianceRegistrationInquiriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createComplianceRegistration operation.
     * @callback module:api/TrusthubV1ComplianceRegistrationInquiriesApi~createComplianceRegistrationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrusthubV1ComplianceRegistration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Compliance Registration Inquiry for the authenticated account. This is necessary to start a new embedded session.
     * @param {module:model/ComplianceRegistrationEnumEndUserType} endUserType 
     * @param {module:model/ComplianceRegistrationEnumPhoneNumberType} phoneNumberType 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [acceptedNotificationReceipt] The email address to receive the notification about the verification result.
     * @param {String} [addressCity] City of the business
     * @param {String} [addressCountryCode] Country code of the business
     * @param {String} [addressPostalCode] Postal code of the business
     * @param {String} [addressStreet] Street address of the business
     * @param {String} [addressStreetSecondary] Street address of the business
     * @param {String} [addressSubdivision] State or province of the business
     * @param {String} [authorizedRepresentative1DateOfBirth] Birthdate of the authorized representative
     * @param {String} [authorizedRepresentative1Email] Email address of the authorized representative
     * @param {String} [authorizedRepresentative1FirstName] First name of the authorized representative
     * @param {String} [authorizedRepresentative1LastName] Last name of the authorized representative
     * @param {String} [authorizedRepresentative1Phone] Phone number of the authorized representative
     * @param {module:model/ComplianceRegistrationEnumBusinessIdentityType} [businessIdentityType] 
     * @param {String} [businessLegalName] he name of the business or organization using the Tollfree number.
     * @param {module:model/ComplianceRegistrationEnumBusinessRegistrationAuthority} [businessRegistrationAuthority] 
     * @param {String} [businessRegistrationNumber] Business registration number of the business
     * @param {String} [businessWebsiteUrl] The URL of the business website
     * @param {String} [dateOfBirth] The date of birth of the Individual User.
     * @param {String} [emergencyAddressCity] City of the business
     * @param {String} [emergencyAddressCountryCode] Country code of the business
     * @param {String} [emergencyAddressPostalCode] Postal code of the business
     * @param {String} [emergencyAddressStreet] Street address of the business
     * @param {String} [emergencyAddressStreetSecondary] Street address of the business
     * @param {String} [emergencyAddressSubdivision] State or province of the business
     * @param {String} [file] The verification document to upload
     * @param {String} [fileName] The name of the verification document to upload
     * @param {String} [firstName] The first name of the Individual User.
     * @param {String} [friendlyName] Friendly name for your business information
     * @param {String} [individualEmail] The email address of the Individual User.
     * @param {String} [individualPhone] The phone number of the Individual User.
     * @param {Boolean} [isIsvEmbed] Indicates if the inquiry is being started from an ISV embedded component.
     * @param {String} [lastName] The last name of the Individual User.
     * @param {String} [notificationEmail] he email address to receive the notification about the verification result.
     * @param {Boolean} [useAddressAsEmergencyAddress] Use the business address as the emergency address
     * @param {module:api/TrusthubV1ComplianceRegistrationInquiriesApi~createComplianceRegistrationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrusthubV1ComplianceRegistration}
     */
    createComplianceRegistration(endUserType, phoneNumberType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'endUserType' is set
      if (endUserType === undefined || endUserType === null) {
        throw new Error("Missing the required parameter 'endUserType' when calling createComplianceRegistration");
      }
      // verify the required parameter 'phoneNumberType' is set
      if (phoneNumberType === undefined || phoneNumberType === null) {
        throw new Error("Missing the required parameter 'phoneNumberType' when calling createComplianceRegistration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'AcceptedNotificationReceipt': opts['acceptedNotificationReceipt'],
        'AddressCity': opts['addressCity'],
        'AddressCountryCode': opts['addressCountryCode'],
        'AddressPostalCode': opts['addressPostalCode'],
        'AddressStreet': opts['addressStreet'],
        'AddressStreetSecondary': opts['addressStreetSecondary'],
        'AddressSubdivision': opts['addressSubdivision'],
        'AuthorizedRepresentative1DateOfBirth': opts['authorizedRepresentative1DateOfBirth'],
        'AuthorizedRepresentative1Email': opts['authorizedRepresentative1Email'],
        'AuthorizedRepresentative1FirstName': opts['authorizedRepresentative1FirstName'],
        'AuthorizedRepresentative1LastName': opts['authorizedRepresentative1LastName'],
        'AuthorizedRepresentative1Phone': opts['authorizedRepresentative1Phone'],
        'BusinessIdentityType': opts['businessIdentityType'],
        'BusinessLegalName': opts['businessLegalName'],
        'BusinessRegistrationAuthority': opts['businessRegistrationAuthority'],
        'BusinessRegistrationNumber': opts['businessRegistrationNumber'],
        'BusinessWebsiteUrl': opts['businessWebsiteUrl'],
        'DateOfBirth': opts['dateOfBirth'],
        'EmergencyAddressCity': opts['emergencyAddressCity'],
        'EmergencyAddressCountryCode': opts['emergencyAddressCountryCode'],
        'EmergencyAddressPostalCode': opts['emergencyAddressPostalCode'],
        'EmergencyAddressStreet': opts['emergencyAddressStreet'],
        'EmergencyAddressStreetSecondary': opts['emergencyAddressStreetSecondary'],
        'EmergencyAddressSubdivision': opts['emergencyAddressSubdivision'],
        'EndUserType': endUserType,
        'File': opts['file'],
        'FileName': opts['fileName'],
        'FirstName': opts['firstName'],
        'FriendlyName': opts['friendlyName'],
        'IndividualEmail': opts['individualEmail'],
        'IndividualPhone': opts['individualPhone'],
        'IsIsvEmbed': opts['isIsvEmbed'],
        'LastName': opts['lastName'],
        'NotificationEmail': opts['notificationEmail'],
        'PhoneNumberType': phoneNumberType,
        'UseAddressAsEmergencyAddress': opts['useAddressAsEmergencyAddress']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = TrusthubV1ComplianceRegistration;
      let basePaths = ['https://trusthub.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/ComplianceInquiries/Registration/RegulatoryCompliance/GB/Initialize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
