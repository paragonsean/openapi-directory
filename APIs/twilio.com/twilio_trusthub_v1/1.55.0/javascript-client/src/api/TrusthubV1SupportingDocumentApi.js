/**
 * Twilio - Trusthub
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListSupportingDocumentResponse from '../model/ListSupportingDocumentResponse';
import TrusthubV1SupportingDocument from '../model/TrusthubV1SupportingDocument';

/**
* TrusthubV1SupportingDocument service.
* @module api/TrusthubV1SupportingDocumentApi
* @version 1.55.0
*/
export default class TrusthubV1SupportingDocumentApi {

    /**
    * Constructs a new TrusthubV1SupportingDocumentApi. 
    * @alias module:api/TrusthubV1SupportingDocumentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSupportingDocument operation.
     * @callback module:api/TrusthubV1SupportingDocumentApi~createSupportingDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrusthubV1SupportingDocument} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Supporting Document.
     * @param {String} friendlyName The string that you assigned to describe the resource.
     * @param {String} type The type of the Supporting Document.
     * @param {Object} opts Optional parameters
     * @param {Object} [attributes] The set of parameters that are the attributes of the Supporting Documents resource which are derived Supporting Document Types.
     * @param {module:api/TrusthubV1SupportingDocumentApi~createSupportingDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrusthubV1SupportingDocument}
     */
    createSupportingDocument(friendlyName, type, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'friendlyName' is set
      if (friendlyName === undefined || friendlyName === null) {
        throw new Error("Missing the required parameter 'friendlyName' when calling createSupportingDocument");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling createSupportingDocument");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Attributes': opts['attributes'],
        'FriendlyName': friendlyName,
        'Type': type
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = TrusthubV1SupportingDocument;
      let basePaths = ['https://trusthub.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SupportingDocuments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSupportingDocument operation.
     * @callback module:api/TrusthubV1SupportingDocumentApi~deleteSupportingDocumentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a specific Supporting Document.
     * @param {String} sid The unique string created by Twilio to identify the Supporting Document resource.
     * @param {module:api/TrusthubV1SupportingDocumentApi~deleteSupportingDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSupportingDocument(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteSupportingDocument");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://trusthub.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SupportingDocuments/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchSupportingDocument operation.
     * @callback module:api/TrusthubV1SupportingDocumentApi~fetchSupportingDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrusthubV1SupportingDocument} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch specific Supporting Document Instance.
     * @param {String} sid The unique string created by Twilio to identify the Supporting Document resource.
     * @param {module:api/TrusthubV1SupportingDocumentApi~fetchSupportingDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrusthubV1SupportingDocument}
     */
    fetchSupportingDocument(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchSupportingDocument");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TrusthubV1SupportingDocument;
      let basePaths = ['https://trusthub.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SupportingDocuments/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listSupportingDocument operation.
     * @callback module:api/TrusthubV1SupportingDocumentApi~listSupportingDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSupportingDocumentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of all Supporting Document for an account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/TrusthubV1SupportingDocumentApi~listSupportingDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSupportingDocumentResponse}
     */
    listSupportingDocument(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSupportingDocumentResponse;
      let basePaths = ['https://trusthub.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SupportingDocuments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSupportingDocument operation.
     * @callback module:api/TrusthubV1SupportingDocumentApi~updateSupportingDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrusthubV1SupportingDocument} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an existing Supporting Document.
     * @param {String} sid The unique string created by Twilio to identify the Supporting Document resource.
     * @param {Object} opts Optional parameters
     * @param {Object} [attributes] The set of parameters that are the attributes of the Supporting Document resource which are derived Supporting Document Types.
     * @param {String} [friendlyName] The string that you assigned to describe the resource.
     * @param {module:api/TrusthubV1SupportingDocumentApi~updateSupportingDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrusthubV1SupportingDocument}
     */
    updateSupportingDocument(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateSupportingDocument");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Attributes': opts['attributes'],
        'FriendlyName': opts['friendlyName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = TrusthubV1SupportingDocument;
      let basePaths = ['https://trusthub.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/SupportingDocuments/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
