# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_trunking_country_response_meta import ListTrunkingCountryResponseMeta
from openapi_server.models.pricing_v2_voice_voice_country import PricingV2VoiceVoiceCountry
from openapi_server import util


class ListVoiceCountryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, countries: List[PricingV2VoiceVoiceCountry]=None, meta: ListTrunkingCountryResponseMeta=None):
        """ListVoiceCountryResponse - a model defined in OpenAPI

        :param countries: The countries of this ListVoiceCountryResponse.
        :param meta: The meta of this ListVoiceCountryResponse.
        """
        self.openapi_types = {
            'countries': List[PricingV2VoiceVoiceCountry],
            'meta': ListTrunkingCountryResponseMeta
        }

        self.attribute_map = {
            'countries': 'countries',
            'meta': 'meta'
        }

        self._countries = countries
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListVoiceCountryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListVoiceCountryResponse of this ListVoiceCountryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def countries(self):
        """Gets the countries of this ListVoiceCountryResponse.


        :return: The countries of this ListVoiceCountryResponse.
        :rtype: List[PricingV2VoiceVoiceCountry]
        """
        return self._countries

    @countries.setter
    def countries(self, countries):
        """Sets the countries of this ListVoiceCountryResponse.


        :param countries: The countries of this ListVoiceCountryResponse.
        :type countries: List[PricingV2VoiceVoiceCountry]
        """

        self._countries = countries

    @property
    def meta(self):
        """Gets the meta of this ListVoiceCountryResponse.


        :return: The meta of this ListVoiceCountryResponse.
        :rtype: ListTrunkingCountryResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListVoiceCountryResponse.


        :param meta: The meta of this ListVoiceCountryResponse.
        :type meta: ListTrunkingCountryResponseMeta
        """

        self._meta = meta
