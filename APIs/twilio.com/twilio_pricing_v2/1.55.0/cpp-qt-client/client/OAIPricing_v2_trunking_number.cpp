/**
 * Twilio - Pricing
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPricing_v2_trunking_number.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPricing_v2_trunking_number::OAIPricing_v2_trunking_number(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPricing_v2_trunking_number::OAIPricing_v2_trunking_number() {
    this->initializeModel();
}

OAIPricing_v2_trunking_number::~OAIPricing_v2_trunking_number() {}

void OAIPricing_v2_trunking_number::initializeModel() {

    m_country_isSet = false;
    m_country_isValid = false;

    m_destination_number_isSet = false;
    m_destination_number_isValid = false;

    m_iso_country_isSet = false;
    m_iso_country_isValid = false;

    m_originating_call_price_isSet = false;
    m_originating_call_price_isValid = false;

    m_origination_number_isSet = false;
    m_origination_number_isValid = false;

    m_price_unit_isSet = false;
    m_price_unit_isValid = false;

    m_terminating_prefix_prices_isSet = false;
    m_terminating_prefix_prices_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIPricing_v2_trunking_number::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPricing_v2_trunking_number::fromJsonObject(QJsonObject json) {

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_destination_number_isValid = ::OpenAPI::fromJsonValue(m_destination_number, json[QString("destination_number")]);
    m_destination_number_isSet = !json[QString("destination_number")].isNull() && m_destination_number_isValid;

    m_iso_country_isValid = ::OpenAPI::fromJsonValue(m_iso_country, json[QString("iso_country")]);
    m_iso_country_isSet = !json[QString("iso_country")].isNull() && m_iso_country_isValid;

    m_originating_call_price_isValid = ::OpenAPI::fromJsonValue(m_originating_call_price, json[QString("originating_call_price")]);
    m_originating_call_price_isSet = !json[QString("originating_call_price")].isNull() && m_originating_call_price_isValid;

    m_origination_number_isValid = ::OpenAPI::fromJsonValue(m_origination_number, json[QString("origination_number")]);
    m_origination_number_isSet = !json[QString("origination_number")].isNull() && m_origination_number_isValid;

    m_price_unit_isValid = ::OpenAPI::fromJsonValue(m_price_unit, json[QString("price_unit")]);
    m_price_unit_isSet = !json[QString("price_unit")].isNull() && m_price_unit_isValid;

    m_terminating_prefix_prices_isValid = ::OpenAPI::fromJsonValue(m_terminating_prefix_prices, json[QString("terminating_prefix_prices")]);
    m_terminating_prefix_prices_isSet = !json[QString("terminating_prefix_prices")].isNull() && m_terminating_prefix_prices_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIPricing_v2_trunking_number::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPricing_v2_trunking_number::asJsonObject() const {
    QJsonObject obj;
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_destination_number_isSet) {
        obj.insert(QString("destination_number"), ::OpenAPI::toJsonValue(m_destination_number));
    }
    if (m_iso_country_isSet) {
        obj.insert(QString("iso_country"), ::OpenAPI::toJsonValue(m_iso_country));
    }
    if (m_originating_call_price.isSet()) {
        obj.insert(QString("originating_call_price"), ::OpenAPI::toJsonValue(m_originating_call_price));
    }
    if (m_origination_number_isSet) {
        obj.insert(QString("origination_number"), ::OpenAPI::toJsonValue(m_origination_number));
    }
    if (m_price_unit_isSet) {
        obj.insert(QString("price_unit"), ::OpenAPI::toJsonValue(m_price_unit));
    }
    if (m_terminating_prefix_prices.size() > 0) {
        obj.insert(QString("terminating_prefix_prices"), ::OpenAPI::toJsonValue(m_terminating_prefix_prices));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIPricing_v2_trunking_number::getCountry() const {
    return m_country;
}
void OAIPricing_v2_trunking_number::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIPricing_v2_trunking_number::is_country_Set() const{
    return m_country_isSet;
}

bool OAIPricing_v2_trunking_number::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIPricing_v2_trunking_number::getDestinationNumber() const {
    return m_destination_number;
}
void OAIPricing_v2_trunking_number::setDestinationNumber(const QString &destination_number) {
    m_destination_number = destination_number;
    m_destination_number_isSet = true;
}

bool OAIPricing_v2_trunking_number::is_destination_number_Set() const{
    return m_destination_number_isSet;
}

bool OAIPricing_v2_trunking_number::is_destination_number_Valid() const{
    return m_destination_number_isValid;
}

QString OAIPricing_v2_trunking_number::getIsoCountry() const {
    return m_iso_country;
}
void OAIPricing_v2_trunking_number::setIsoCountry(const QString &iso_country) {
    m_iso_country = iso_country;
    m_iso_country_isSet = true;
}

bool OAIPricing_v2_trunking_number::is_iso_country_Set() const{
    return m_iso_country_isSet;
}

bool OAIPricing_v2_trunking_number::is_iso_country_Valid() const{
    return m_iso_country_isValid;
}

OAIPricing_v2_trunking_number_originating_call_price OAIPricing_v2_trunking_number::getOriginatingCallPrice() const {
    return m_originating_call_price;
}
void OAIPricing_v2_trunking_number::setOriginatingCallPrice(const OAIPricing_v2_trunking_number_originating_call_price &originating_call_price) {
    m_originating_call_price = originating_call_price;
    m_originating_call_price_isSet = true;
}

bool OAIPricing_v2_trunking_number::is_originating_call_price_Set() const{
    return m_originating_call_price_isSet;
}

bool OAIPricing_v2_trunking_number::is_originating_call_price_Valid() const{
    return m_originating_call_price_isValid;
}

QString OAIPricing_v2_trunking_number::getOriginationNumber() const {
    return m_origination_number;
}
void OAIPricing_v2_trunking_number::setOriginationNumber(const QString &origination_number) {
    m_origination_number = origination_number;
    m_origination_number_isSet = true;
}

bool OAIPricing_v2_trunking_number::is_origination_number_Set() const{
    return m_origination_number_isSet;
}

bool OAIPricing_v2_trunking_number::is_origination_number_Valid() const{
    return m_origination_number_isValid;
}

QString OAIPricing_v2_trunking_number::getPriceUnit() const {
    return m_price_unit;
}
void OAIPricing_v2_trunking_number::setPriceUnit(const QString &price_unit) {
    m_price_unit = price_unit;
    m_price_unit_isSet = true;
}

bool OAIPricing_v2_trunking_number::is_price_unit_Set() const{
    return m_price_unit_isSet;
}

bool OAIPricing_v2_trunking_number::is_price_unit_Valid() const{
    return m_price_unit_isValid;
}

QList<OAIPricing_v2_trunking_country_instance_terminating_prefix_prices_inner> OAIPricing_v2_trunking_number::getTerminatingPrefixPrices() const {
    return m_terminating_prefix_prices;
}
void OAIPricing_v2_trunking_number::setTerminatingPrefixPrices(const QList<OAIPricing_v2_trunking_country_instance_terminating_prefix_prices_inner> &terminating_prefix_prices) {
    m_terminating_prefix_prices = terminating_prefix_prices;
    m_terminating_prefix_prices_isSet = true;
}

bool OAIPricing_v2_trunking_number::is_terminating_prefix_prices_Set() const{
    return m_terminating_prefix_prices_isSet;
}

bool OAIPricing_v2_trunking_number::is_terminating_prefix_prices_Valid() const{
    return m_terminating_prefix_prices_isValid;
}

QString OAIPricing_v2_trunking_number::getUrl() const {
    return m_url;
}
void OAIPricing_v2_trunking_number::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIPricing_v2_trunking_number::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPricing_v2_trunking_number::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIPricing_v2_trunking_number::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originating_call_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_origination_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_terminating_prefix_prices.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPricing_v2_trunking_number::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
