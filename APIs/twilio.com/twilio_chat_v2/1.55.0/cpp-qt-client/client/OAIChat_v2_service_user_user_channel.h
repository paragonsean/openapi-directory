/**
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChat_v2_service_user_user_channel.h
 *
 * 
 */

#ifndef OAIChat_v2_service_user_user_channel_H
#define OAIChat_v2_service_user_user_channel_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIUser_channel_enum_channel_status.h"
#include "OAIUser_channel_enum_notification_level.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChat_v2_service_user_user_channel : public OAIObject {
public:
    OAIChat_v2_service_user_user_channel();
    OAIChat_v2_service_user_user_channel(QString json);
    ~OAIChat_v2_service_user_user_channel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getChannelSid() const;
    void setChannelSid(const QString &channel_sid);
    bool is_channel_sid_Set() const;
    bool is_channel_sid_Valid() const;

    qint32 getLastConsumedMessageIndex() const;
    void setLastConsumedMessageIndex(const qint32 &last_consumed_message_index);
    bool is_last_consumed_message_index_Set() const;
    bool is_last_consumed_message_index_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getMemberSid() const;
    void setMemberSid(const QString &member_sid);
    bool is_member_sid_Set() const;
    bool is_member_sid_Valid() const;

    OAIUser_channel_enum_notification_level getNotificationLevel() const;
    void setNotificationLevel(const OAIUser_channel_enum_notification_level &notification_level);
    bool is_notification_level_Set() const;
    bool is_notification_level_Valid() const;

    QString getServiceSid() const;
    void setServiceSid(const QString &service_sid);
    bool is_service_sid_Set() const;
    bool is_service_sid_Valid() const;

    OAIUser_channel_enum_channel_status getStatus() const;
    void setStatus(const OAIUser_channel_enum_channel_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getUnreadMessagesCount() const;
    void setUnreadMessagesCount(const qint32 &unread_messages_count);
    bool is_unread_messages_count_Set() const;
    bool is_unread_messages_count_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUserSid() const;
    void setUserSid(const QString &user_sid);
    bool is_user_sid_Set() const;
    bool is_user_sid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_channel_sid;
    bool m_channel_sid_isSet;
    bool m_channel_sid_isValid;

    qint32 m_last_consumed_message_index;
    bool m_last_consumed_message_index_isSet;
    bool m_last_consumed_message_index_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_member_sid;
    bool m_member_sid_isSet;
    bool m_member_sid_isValid;

    OAIUser_channel_enum_notification_level m_notification_level;
    bool m_notification_level_isSet;
    bool m_notification_level_isValid;

    QString m_service_sid;
    bool m_service_sid_isSet;
    bool m_service_sid_isValid;

    OAIUser_channel_enum_channel_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_unread_messages_count;
    bool m_unread_messages_count_isSet;
    bool m_unread_messages_count_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_user_sid;
    bool m_user_sid_isSet;
    bool m_user_sid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChat_v2_service_user_user_channel)

#endif // OAIChat_v2_service_user_user_channel_H
