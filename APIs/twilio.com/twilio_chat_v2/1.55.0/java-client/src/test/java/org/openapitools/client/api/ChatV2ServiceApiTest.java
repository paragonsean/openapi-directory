/*
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ChatV2Service;
import org.openapitools.client.model.ListServiceResponse;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChatV2ServiceApi
 */
@Disabled
public class ChatV2ServiceApiTest {

    private final ChatV2ServiceApi api = new ChatV2ServiceApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServiceTest() throws ApiException {
        String friendlyName = null;
        ChatV2Service response = api.createService(friendlyName);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteServiceTest() throws ApiException {
        String sid = null;
        api.deleteService(sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchServiceTest() throws ApiException {
        String sid = null;
        ChatV2Service response = api.fetchService(sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServiceTest() throws ApiException {
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListServiceResponse response = api.listService(pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateServiceTest() throws ApiException {
        String sid = null;
        Integer consumptionReportInterval = null;
        String defaultChannelCreatorRoleSid = null;
        String defaultChannelRoleSid = null;
        String defaultServiceRoleSid = null;
        String friendlyName = null;
        Integer limitsChannelMembers = null;
        Integer limitsUserChannels = null;
        String mediaCompatibilityMessage = null;
        Boolean notificationsAddedToChannelEnabled = null;
        String notificationsAddedToChannelSound = null;
        String notificationsAddedToChannelTemplate = null;
        Boolean notificationsInvitedToChannelEnabled = null;
        String notificationsInvitedToChannelSound = null;
        String notificationsInvitedToChannelTemplate = null;
        Boolean notificationsLogEnabled = null;
        Boolean notificationsNewMessageBadgeCountEnabled = null;
        Boolean notificationsNewMessageEnabled = null;
        String notificationsNewMessageSound = null;
        String notificationsNewMessageTemplate = null;
        Boolean notificationsRemovedFromChannelEnabled = null;
        String notificationsRemovedFromChannelSound = null;
        String notificationsRemovedFromChannelTemplate = null;
        Integer postWebhookRetryCount = null;
        URI postWebhookUrl = null;
        Integer preWebhookRetryCount = null;
        URI preWebhookUrl = null;
        Boolean reachabilityEnabled = null;
        Boolean readStatusEnabled = null;
        Integer typingIndicatorTimeout = null;
        List<String> webhookFilters = null;
        String webhookMethod = null;
        ChatV2Service response = api.updateService(sid, consumptionReportInterval, defaultChannelCreatorRoleSid, defaultChannelRoleSid, defaultServiceRoleSid, friendlyName, limitsChannelMembers, limitsUserChannels, mediaCompatibilityMessage, notificationsAddedToChannelEnabled, notificationsAddedToChannelSound, notificationsAddedToChannelTemplate, notificationsInvitedToChannelEnabled, notificationsInvitedToChannelSound, notificationsInvitedToChannelTemplate, notificationsLogEnabled, notificationsNewMessageBadgeCountEnabled, notificationsNewMessageEnabled, notificationsNewMessageSound, notificationsNewMessageTemplate, notificationsRemovedFromChannelEnabled, notificationsRemovedFromChannelSound, notificationsRemovedFromChannelTemplate, postWebhookRetryCount, postWebhookUrl, preWebhookRetryCount, preWebhookUrl, reachabilityEnabled, readStatusEnabled, typingIndicatorTimeout, webhookFilters, webhookMethod);
        // TODO: test validations
    }

}
