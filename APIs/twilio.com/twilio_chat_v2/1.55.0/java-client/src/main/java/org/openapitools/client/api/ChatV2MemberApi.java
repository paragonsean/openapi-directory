/*
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ChatV2ServiceChannelMember;
import org.openapitools.client.model.ListMemberResponse;
import org.openapitools.client.model.MemberEnumWebhookEnabledType;
import java.time.OffsetDateTime;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChatV2MemberApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ChatV2MemberApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ChatV2MemberApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createMember
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the Member resource under. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the new Member resource belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param identity The &#x60;identity&#x60; value that uniquely identifies the new resource&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/chat/rest/service-resource). See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more info. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes A valid JSON string that contains application-specific data. (optional)
     * @param dateCreated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service.  Note that this parameter should only be used when a Member is being recreated from a backup/separate source. (optional)
     * @param dateUpdated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. The default value is &#x60;null&#x60;. Note that this parameter should only be used when a Member is being recreated from a backup/separate source and where a Member was previously updated. (optional)
     * @param lastConsumedMessageIndex The index of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) in the [Channel](https://www.twilio.com/docs/chat/channels) that the Member has read. This parameter should only be used when recreating a Member from a backup/separate source. (optional)
     * @param lastConsumptionTimestamp The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) read event for the Member within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param roleSid The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/rest/service-resource). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createMemberCall(String serviceSid, String channelSid, String identity, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://chat.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "ChannelSid" + "}", localVarApiClient.escapeString(channelSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (attributes != null) {
            localVarFormParams.put("Attributes", attributes);
        }

        if (dateCreated != null) {
            localVarFormParams.put("DateCreated", dateCreated);
        }

        if (dateUpdated != null) {
            localVarFormParams.put("DateUpdated", dateUpdated);
        }

        if (identity != null) {
            localVarFormParams.put("Identity", identity);
        }

        if (lastConsumedMessageIndex != null) {
            localVarFormParams.put("LastConsumedMessageIndex", lastConsumedMessageIndex);
        }

        if (lastConsumptionTimestamp != null) {
            localVarFormParams.put("LastConsumptionTimestamp", lastConsumptionTimestamp);
        }

        if (roleSid != null) {
            localVarFormParams.put("RoleSid", roleSid);
        }

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createMemberValidateBeforeCall(String serviceSid, String channelSid, String identity, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling createMember(Async)");
        }

        // verify the required parameter 'channelSid' is set
        if (channelSid == null) {
            throw new ApiException("Missing the required parameter 'channelSid' when calling createMember(Async)");
        }

        // verify the required parameter 'identity' is set
        if (identity == null) {
            throw new ApiException("Missing the required parameter 'identity' when calling createMember(Async)");
        }

        return createMemberCall(serviceSid, channelSid, identity, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, lastConsumedMessageIndex, lastConsumptionTimestamp, roleSid, _callback);

    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the Member resource under. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the new Member resource belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param identity The &#x60;identity&#x60; value that uniquely identifies the new resource&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/chat/rest/service-resource). See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more info. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes A valid JSON string that contains application-specific data. (optional)
     * @param dateCreated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service.  Note that this parameter should only be used when a Member is being recreated from a backup/separate source. (optional)
     * @param dateUpdated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. The default value is &#x60;null&#x60;. Note that this parameter should only be used when a Member is being recreated from a backup/separate source and where a Member was previously updated. (optional)
     * @param lastConsumedMessageIndex The index of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) in the [Channel](https://www.twilio.com/docs/chat/channels) that the Member has read. This parameter should only be used when recreating a Member from a backup/separate source. (optional)
     * @param lastConsumptionTimestamp The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) read event for the Member within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param roleSid The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/rest/service-resource). (optional)
     * @return ChatV2ServiceChannelMember
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ChatV2ServiceChannelMember createMember(String serviceSid, String channelSid, String identity, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid) throws ApiException {
        ApiResponse<ChatV2ServiceChannelMember> localVarResp = createMemberWithHttpInfo(serviceSid, channelSid, identity, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, lastConsumedMessageIndex, lastConsumptionTimestamp, roleSid);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the Member resource under. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the new Member resource belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param identity The &#x60;identity&#x60; value that uniquely identifies the new resource&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/chat/rest/service-resource). See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more info. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes A valid JSON string that contains application-specific data. (optional)
     * @param dateCreated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service.  Note that this parameter should only be used when a Member is being recreated from a backup/separate source. (optional)
     * @param dateUpdated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. The default value is &#x60;null&#x60;. Note that this parameter should only be used when a Member is being recreated from a backup/separate source and where a Member was previously updated. (optional)
     * @param lastConsumedMessageIndex The index of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) in the [Channel](https://www.twilio.com/docs/chat/channels) that the Member has read. This parameter should only be used when recreating a Member from a backup/separate source. (optional)
     * @param lastConsumptionTimestamp The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) read event for the Member within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param roleSid The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/rest/service-resource). (optional)
     * @return ApiResponse&lt;ChatV2ServiceChannelMember&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ChatV2ServiceChannelMember> createMemberWithHttpInfo(String serviceSid, String channelSid, String identity, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid) throws ApiException {
        okhttp3.Call localVarCall = createMemberValidateBeforeCall(serviceSid, channelSid, identity, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, lastConsumedMessageIndex, lastConsumptionTimestamp, roleSid, null);
        Type localVarReturnType = new TypeToken<ChatV2ServiceChannelMember>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the Member resource under. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the new Member resource belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param identity The &#x60;identity&#x60; value that uniquely identifies the new resource&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/chat/rest/service-resource). See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more info. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes A valid JSON string that contains application-specific data. (optional)
     * @param dateCreated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service.  Note that this parameter should only be used when a Member is being recreated from a backup/separate source. (optional)
     * @param dateUpdated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. The default value is &#x60;null&#x60;. Note that this parameter should only be used when a Member is being recreated from a backup/separate source and where a Member was previously updated. (optional)
     * @param lastConsumedMessageIndex The index of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) in the [Channel](https://www.twilio.com/docs/chat/channels) that the Member has read. This parameter should only be used when recreating a Member from a backup/separate source. (optional)
     * @param lastConsumptionTimestamp The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) read event for the Member within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param roleSid The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/rest/service-resource). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createMemberAsync(String serviceSid, String channelSid, String identity, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid, final ApiCallback<ChatV2ServiceChannelMember> _callback) throws ApiException {

        okhttp3.Call localVarCall = createMemberValidateBeforeCall(serviceSid, channelSid, identity, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, lastConsumedMessageIndex, lastConsumptionTimestamp, roleSid, _callback);
        Type localVarReturnType = new TypeToken<ChatV2ServiceChannelMember>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteMember
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the Member resource from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to delete belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to delete. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteMemberCall(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://chat.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "ChannelSid" + "}", localVarApiClient.escapeString(channelSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteMemberValidateBeforeCall(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling deleteMember(Async)");
        }

        // verify the required parameter 'channelSid' is set
        if (channelSid == null) {
            throw new ApiException("Missing the required parameter 'channelSid' when calling deleteMember(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling deleteMember(Async)");
        }

        return deleteMemberCall(serviceSid, channelSid, sid, xTwilioWebhookEnabled, _callback);

    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the Member resource from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to delete belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to delete. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public void deleteMember(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled) throws ApiException {
        deleteMemberWithHttpInfo(serviceSid, channelSid, sid, xTwilioWebhookEnabled);
    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the Member resource from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to delete belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to delete. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteMemberWithHttpInfo(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled) throws ApiException {
        okhttp3.Call localVarCall = deleteMemberValidateBeforeCall(serviceSid, channelSid, sid, xTwilioWebhookEnabled, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the Member resource from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to delete belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to delete. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteMemberAsync(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteMemberValidateBeforeCall(serviceSid, channelSid, sid, xTwilioWebhookEnabled, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMember
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the Member resource from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to fetch belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to fetch. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMemberCall(String serviceSid, String channelSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://chat.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "ChannelSid" + "}", localVarApiClient.escapeString(channelSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMemberValidateBeforeCall(String serviceSid, String channelSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling fetchMember(Async)");
        }

        // verify the required parameter 'channelSid' is set
        if (channelSid == null) {
            throw new ApiException("Missing the required parameter 'channelSid' when calling fetchMember(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling fetchMember(Async)");
        }

        return fetchMemberCall(serviceSid, channelSid, sid, _callback);

    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the Member resource from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to fetch belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to fetch. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @return ChatV2ServiceChannelMember
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ChatV2ServiceChannelMember fetchMember(String serviceSid, String channelSid, String sid) throws ApiException {
        ApiResponse<ChatV2ServiceChannelMember> localVarResp = fetchMemberWithHttpInfo(serviceSid, channelSid, sid);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the Member resource from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to fetch belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to fetch. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @return ApiResponse&lt;ChatV2ServiceChannelMember&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ChatV2ServiceChannelMember> fetchMemberWithHttpInfo(String serviceSid, String channelSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = fetchMemberValidateBeforeCall(serviceSid, channelSid, sid, null);
        Type localVarReturnType = new TypeToken<ChatV2ServiceChannelMember>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the Member resource from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to fetch belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to fetch. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMemberAsync(String serviceSid, String channelSid, String sid, final ApiCallback<ChatV2ServiceChannelMember> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMemberValidateBeforeCall(serviceSid, channelSid, sid, _callback);
        Type localVarReturnType = new TypeToken<ChatV2ServiceChannelMember>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listMember
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the Member resources from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resources to read belong to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param identity The [User](https://www.twilio.com/docs/chat/rest/user-resource)&#39;s &#x60;identity&#x60; value of the Member resources to read. See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more details. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listMemberCall(String serviceSid, String channelSid, List<String> identity, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://chat.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "ChannelSid" + "}", localVarApiClient.escapeString(channelSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (identity != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "Identity", identity));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listMemberValidateBeforeCall(String serviceSid, String channelSid, List<String> identity, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling listMember(Async)");
        }

        // verify the required parameter 'channelSid' is set
        if (channelSid == null) {
            throw new ApiException("Missing the required parameter 'channelSid' when calling listMember(Async)");
        }

        return listMemberCall(serviceSid, channelSid, identity, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the Member resources from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resources to read belong to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param identity The [User](https://www.twilio.com/docs/chat/rest/user-resource)&#39;s &#x60;identity&#x60; value of the Member resources to read. See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more details. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListMemberResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListMemberResponse listMember(String serviceSid, String channelSid, List<String> identity, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListMemberResponse> localVarResp = listMemberWithHttpInfo(serviceSid, channelSid, identity, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the Member resources from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resources to read belong to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param identity The [User](https://www.twilio.com/docs/chat/rest/user-resource)&#39;s &#x60;identity&#x60; value of the Member resources to read. See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more details. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListMemberResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListMemberResponse> listMemberWithHttpInfo(String serviceSid, String channelSid, List<String> identity, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listMemberValidateBeforeCall(serviceSid, channelSid, identity, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListMemberResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the Member resources from. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resources to read belong to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param identity The [User](https://www.twilio.com/docs/chat/rest/user-resource)&#39;s &#x60;identity&#x60; value of the Member resources to read. See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more details. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listMemberAsync(String serviceSid, String channelSid, List<String> identity, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListMemberResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listMemberValidateBeforeCall(serviceSid, channelSid, identity, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListMemberResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateMember
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to update the Member resource in. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to update belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to update. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes A valid JSON string that contains application-specific data. (optional)
     * @param dateCreated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service.  Note that this parameter should only be used when a Member is being recreated from a backup/separate source. (optional)
     * @param dateUpdated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. (optional)
     * @param lastConsumedMessageIndex The index of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) that the Member has read within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param lastConsumptionTimestamp The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) read event for the Member within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param roleSid The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/rest/service-resource). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateMemberCall(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://chat.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "ChannelSid" + "}", localVarApiClient.escapeString(channelSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (attributes != null) {
            localVarFormParams.put("Attributes", attributes);
        }

        if (dateCreated != null) {
            localVarFormParams.put("DateCreated", dateCreated);
        }

        if (dateUpdated != null) {
            localVarFormParams.put("DateUpdated", dateUpdated);
        }

        if (lastConsumedMessageIndex != null) {
            localVarFormParams.put("LastConsumedMessageIndex", lastConsumedMessageIndex);
        }

        if (lastConsumptionTimestamp != null) {
            localVarFormParams.put("LastConsumptionTimestamp", lastConsumptionTimestamp);
        }

        if (roleSid != null) {
            localVarFormParams.put("RoleSid", roleSid);
        }

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateMemberValidateBeforeCall(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling updateMember(Async)");
        }

        // verify the required parameter 'channelSid' is set
        if (channelSid == null) {
            throw new ApiException("Missing the required parameter 'channelSid' when calling updateMember(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling updateMember(Async)");
        }

        return updateMemberCall(serviceSid, channelSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, lastConsumedMessageIndex, lastConsumptionTimestamp, roleSid, _callback);

    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to update the Member resource in. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to update belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to update. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes A valid JSON string that contains application-specific data. (optional)
     * @param dateCreated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service.  Note that this parameter should only be used when a Member is being recreated from a backup/separate source. (optional)
     * @param dateUpdated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. (optional)
     * @param lastConsumedMessageIndex The index of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) that the Member has read within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param lastConsumptionTimestamp The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) read event for the Member within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param roleSid The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/rest/service-resource). (optional)
     * @return ChatV2ServiceChannelMember
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ChatV2ServiceChannelMember updateMember(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid) throws ApiException {
        ApiResponse<ChatV2ServiceChannelMember> localVarResp = updateMemberWithHttpInfo(serviceSid, channelSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, lastConsumedMessageIndex, lastConsumptionTimestamp, roleSid);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to update the Member resource in. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to update belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to update. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes A valid JSON string that contains application-specific data. (optional)
     * @param dateCreated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service.  Note that this parameter should only be used when a Member is being recreated from a backup/separate source. (optional)
     * @param dateUpdated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. (optional)
     * @param lastConsumedMessageIndex The index of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) that the Member has read within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param lastConsumptionTimestamp The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) read event for the Member within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param roleSid The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/rest/service-resource). (optional)
     * @return ApiResponse&lt;ChatV2ServiceChannelMember&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ChatV2ServiceChannelMember> updateMemberWithHttpInfo(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid) throws ApiException {
        okhttp3.Call localVarCall = updateMemberValidateBeforeCall(serviceSid, channelSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, lastConsumedMessageIndex, lastConsumptionTimestamp, roleSid, null);
        Type localVarReturnType = new TypeToken<ChatV2ServiceChannelMember>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to update the Member resource in. (required)
     * @param channelSid The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Member resource to update belongs to. This value can be the Channel resource&#39;s &#x60;sid&#x60; or &#x60;unique_name&#x60;. (required)
     * @param sid The SID of the Member resource to update. This value can be either the Member&#39;s &#x60;sid&#x60; or its &#x60;identity&#x60; value. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes A valid JSON string that contains application-specific data. (optional)
     * @param dateCreated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service.  Note that this parameter should only be used when a Member is being recreated from a backup/separate source. (optional)
     * @param dateUpdated The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. (optional)
     * @param lastConsumedMessageIndex The index of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) that the Member has read within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param lastConsumptionTimestamp The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the last [Message](https://www.twilio.com/docs/chat/rest/message-resource) read event for the Member within the [Channel](https://www.twilio.com/docs/chat/channels). (optional)
     * @param roleSid The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/rest/service-resource). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateMemberAsync(String serviceSid, String channelSid, String sid, MemberEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, Integer lastConsumedMessageIndex, OffsetDateTime lastConsumptionTimestamp, String roleSid, final ApiCallback<ChatV2ServiceChannelMember> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateMemberValidateBeforeCall(serviceSid, channelSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, lastConsumedMessageIndex, lastConsumptionTimestamp, roleSid, _callback);
        Type localVarReturnType = new TypeToken<ChatV2ServiceChannelMember>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
