/*
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ChatV2ServiceChannelMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:34.757951-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ChatV2ServiceChannelMessage {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private String attributes;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_CHANNEL_SID = "channel_sid";
  @SerializedName(SERIALIZED_NAME_CHANNEL_SID)
  private String channelSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "last_updated_by";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private String lastUpdatedBy;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private Object media = null;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private String to;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WAS_EDITED = "was_edited";
  @SerializedName(SERIALIZED_NAME_WAS_EDITED)
  private Boolean wasEdited;

  public ChatV2ServiceChannelMessage() {
  }

  public ChatV2ServiceChannelMessage accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ChatV2ServiceChannelMessage attributes(String attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * The JSON string that stores application-specific data. If attributes have not been set, &#x60;{}&#x60; is returned.
   * @return attributes
   */
  @javax.annotation.Nullable
  public String getAttributes() {
    return attributes;
  }

  public void setAttributes(String attributes) {
    this.attributes = attributes;
  }


  public ChatV2ServiceChannelMessage body(String body) {
    this.body = body;
    return this;
  }

  /**
   * The content of the message.
   * @return body
   */
  @javax.annotation.Nullable
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  public ChatV2ServiceChannelMessage channelSid(String channelSid) {
    this.channelSid = channelSid;
    return this;
  }

  /**
   * The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Message resource belongs to.
   * @return channelSid
   */
  @javax.annotation.Nullable
  public String getChannelSid() {
    return channelSid;
  }

  public void setChannelSid(String channelSid) {
    this.channelSid = channelSid;
  }


  public ChatV2ServiceChannelMessage dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ChatV2ServiceChannelMessage dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ChatV2ServiceChannelMessage from(String from) {
    this.from = from;
    return this;
  }

  /**
   * The [Identity](https://www.twilio.com/docs/chat/identity) of the message&#39;s author. The default value is &#x60;system&#x60;.
   * @return from
   */
  @javax.annotation.Nullable
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }


  public ChatV2ServiceChannelMessage index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * The index of the message within the [Channel](https://www.twilio.com/docs/chat/channels). Indices may skip numbers, but will always be in order of when the message was received.
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public ChatV2ServiceChannelMessage lastUpdatedBy(String lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * The [Identity](https://www.twilio.com/docs/chat/identity) of the User who last updated the Message, if applicable.
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public String getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(String lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  public ChatV2ServiceChannelMessage media(Object media) {
    this.media = media;
    return this;
  }

  /**
   * An object that describes the Message&#39;s media, if the message contains media. The object contains these fields: &#x60;content_type&#x60; with the MIME type of the media, &#x60;filename&#x60; with the name of the media, &#x60;sid&#x60; with the SID of the Media resource, and &#x60;size&#x60; with the media object&#39;s file size in bytes. If the Message has no media, this value is &#x60;null&#x60;.
   * @return media
   */
  @javax.annotation.Nullable
  public Object getMedia() {
    return media;
  }

  public void setMedia(Object media) {
    this.media = media;
  }


  public ChatV2ServiceChannelMessage serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) the Message resource is associated with.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public ChatV2ServiceChannelMessage sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Message resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ChatV2ServiceChannelMessage to(String to) {
    this.to = to;
    return this;
  }

  /**
   * The SID of the [Channel](https://www.twilio.com/docs/chat/channels) that the message was sent to.
   * @return to
   */
  @javax.annotation.Nullable
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }


  public ChatV2ServiceChannelMessage type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The Message type. Can be: &#x60;text&#x60; or &#x60;media&#x60;.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public ChatV2ServiceChannelMessage url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Message resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public ChatV2ServiceChannelMessage wasEdited(Boolean wasEdited) {
    this.wasEdited = wasEdited;
    return this;
  }

  /**
   * Whether the message has been edited since it was created.
   * @return wasEdited
   */
  @javax.annotation.Nullable
  public Boolean getWasEdited() {
    return wasEdited;
  }

  public void setWasEdited(Boolean wasEdited) {
    this.wasEdited = wasEdited;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatV2ServiceChannelMessage chatV2ServiceChannelMessage = (ChatV2ServiceChannelMessage) o;
    return Objects.equals(this.accountSid, chatV2ServiceChannelMessage.accountSid) &&
        Objects.equals(this.attributes, chatV2ServiceChannelMessage.attributes) &&
        Objects.equals(this.body, chatV2ServiceChannelMessage.body) &&
        Objects.equals(this.channelSid, chatV2ServiceChannelMessage.channelSid) &&
        Objects.equals(this.dateCreated, chatV2ServiceChannelMessage.dateCreated) &&
        Objects.equals(this.dateUpdated, chatV2ServiceChannelMessage.dateUpdated) &&
        Objects.equals(this.from, chatV2ServiceChannelMessage.from) &&
        Objects.equals(this.index, chatV2ServiceChannelMessage.index) &&
        Objects.equals(this.lastUpdatedBy, chatV2ServiceChannelMessage.lastUpdatedBy) &&
        Objects.equals(this.media, chatV2ServiceChannelMessage.media) &&
        Objects.equals(this.serviceSid, chatV2ServiceChannelMessage.serviceSid) &&
        Objects.equals(this.sid, chatV2ServiceChannelMessage.sid) &&
        Objects.equals(this.to, chatV2ServiceChannelMessage.to) &&
        Objects.equals(this.type, chatV2ServiceChannelMessage.type) &&
        Objects.equals(this.url, chatV2ServiceChannelMessage.url) &&
        Objects.equals(this.wasEdited, chatV2ServiceChannelMessage.wasEdited);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, attributes, body, channelSid, dateCreated, dateUpdated, from, index, lastUpdatedBy, media, serviceSid, sid, to, type, url, wasEdited);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatV2ServiceChannelMessage {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    channelSid: ").append(toIndentedString(channelSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    wasEdited: ").append(toIndentedString(wasEdited)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("attributes");
    openapiFields.add("body");
    openapiFields.add("channel_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("from");
    openapiFields.add("index");
    openapiFields.add("last_updated_by");
    openapiFields.add("media");
    openapiFields.add("service_sid");
    openapiFields.add("sid");
    openapiFields.add("to");
    openapiFields.add("type");
    openapiFields.add("url");
    openapiFields.add("was_edited");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChatV2ServiceChannelMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChatV2ServiceChannelMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChatV2ServiceChannelMessage is not found in the empty JSON string", ChatV2ServiceChannelMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ChatV2ServiceChannelMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChatV2ServiceChannelMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) && !jsonObj.get("attributes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
      }
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if ((jsonObj.get("channel_sid") != null && !jsonObj.get("channel_sid").isJsonNull()) && !jsonObj.get("channel_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel_sid").toString()));
      }
      if ((jsonObj.get("from") != null && !jsonObj.get("from").isJsonNull()) && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if ((jsonObj.get("last_updated_by") != null && !jsonObj.get("last_updated_by").isJsonNull()) && !jsonObj.get("last_updated_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_updated_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_updated_by").toString()));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) && !jsonObj.get("to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChatV2ServiceChannelMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChatV2ServiceChannelMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChatV2ServiceChannelMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChatV2ServiceChannelMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ChatV2ServiceChannelMessage>() {
           @Override
           public void write(JsonWriter out, ChatV2ServiceChannelMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChatV2ServiceChannelMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ChatV2ServiceChannelMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChatV2ServiceChannelMessage
   * @throws IOException if the JSON string is invalid with respect to ChatV2ServiceChannelMessage
   */
  public static ChatV2ServiceChannelMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChatV2ServiceChannelMessage.class);
  }

  /**
   * Convert an instance of ChatV2ServiceChannelMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

