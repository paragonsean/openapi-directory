/*
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BindingEnumBindingType;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ChatV2ServiceBinding
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:34.757951-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ChatV2ServiceBinding {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_BINDING_TYPE = "binding_type";
  @SerializedName(SERIALIZED_NAME_BINDING_TYPE)
  private BindingEnumBindingType bindingType;

  public static final String SERIALIZED_NAME_CREDENTIAL_SID = "credential_sid";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_SID)
  private String credentialSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_IDENTITY = "identity";
  @SerializedName(SERIALIZED_NAME_IDENTITY)
  private String identity;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_MESSAGE_TYPES = "message_types";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TYPES)
  private List<String> messageTypes;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public ChatV2ServiceBinding() {
  }

  public ChatV2ServiceBinding accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Binding resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ChatV2ServiceBinding bindingType(BindingEnumBindingType bindingType) {
    this.bindingType = bindingType;
    return this;
  }

  /**
   * Get bindingType
   * @return bindingType
   */
  @javax.annotation.Nullable
  public BindingEnumBindingType getBindingType() {
    return bindingType;
  }

  public void setBindingType(BindingEnumBindingType bindingType) {
    this.bindingType = bindingType;
  }


  public ChatV2ServiceBinding credentialSid(String credentialSid) {
    this.credentialSid = credentialSid;
    return this;
  }

  /**
   * The SID of the [Credential](https://www.twilio.com/docs/chat/rest/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.
   * @return credentialSid
   */
  @javax.annotation.Nullable
  public String getCredentialSid() {
    return credentialSid;
  }

  public void setCredentialSid(String credentialSid) {
    this.credentialSid = credentialSid;
  }


  public ChatV2ServiceBinding dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ChatV2ServiceBinding dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ChatV2ServiceBinding endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * The unique endpoint identifier for the Binding. The format of this value depends on the &#x60;binding_type&#x60;.
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public ChatV2ServiceBinding identity(String identity) {
    this.identity = identity;
    return this;
  }

  /**
   * The application-defined string that uniquely identifies the resource&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/chat/rest/service-resource). See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more info.
   * @return identity
   */
  @javax.annotation.Nullable
  public String getIdentity() {
    return identity;
  }

  public void setIdentity(String identity) {
    this.identity = identity;
  }


  public ChatV2ServiceBinding links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The absolute URLs of the Binding&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource).
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public ChatV2ServiceBinding messageTypes(List<String> messageTypes) {
    this.messageTypes = messageTypes;
    return this;
  }

  public ChatV2ServiceBinding addMessageTypesItem(String messageTypesItem) {
    if (this.messageTypes == null) {
      this.messageTypes = new ArrayList<>();
    }
    this.messageTypes.add(messageTypesItem);
    return this;
  }

  /**
   * The [Programmable Chat message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.
   * @return messageTypes
   */
  @javax.annotation.Nullable
  public List<String> getMessageTypes() {
    return messageTypes;
  }

  public void setMessageTypes(List<String> messageTypes) {
    this.messageTypes = messageTypes;
  }


  public ChatV2ServiceBinding serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) the Binding resource is associated with.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public ChatV2ServiceBinding sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Binding resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ChatV2ServiceBinding url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Binding resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatV2ServiceBinding chatV2ServiceBinding = (ChatV2ServiceBinding) o;
    return Objects.equals(this.accountSid, chatV2ServiceBinding.accountSid) &&
        Objects.equals(this.bindingType, chatV2ServiceBinding.bindingType) &&
        Objects.equals(this.credentialSid, chatV2ServiceBinding.credentialSid) &&
        Objects.equals(this.dateCreated, chatV2ServiceBinding.dateCreated) &&
        Objects.equals(this.dateUpdated, chatV2ServiceBinding.dateUpdated) &&
        Objects.equals(this.endpoint, chatV2ServiceBinding.endpoint) &&
        Objects.equals(this.identity, chatV2ServiceBinding.identity) &&
        Objects.equals(this.links, chatV2ServiceBinding.links) &&
        Objects.equals(this.messageTypes, chatV2ServiceBinding.messageTypes) &&
        Objects.equals(this.serviceSid, chatV2ServiceBinding.serviceSid) &&
        Objects.equals(this.sid, chatV2ServiceBinding.sid) &&
        Objects.equals(this.url, chatV2ServiceBinding.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, bindingType, credentialSid, dateCreated, dateUpdated, endpoint, identity, links, messageTypes, serviceSid, sid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatV2ServiceBinding {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    bindingType: ").append(toIndentedString(bindingType)).append("\n");
    sb.append("    credentialSid: ").append(toIndentedString(credentialSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    messageTypes: ").append(toIndentedString(messageTypes)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("binding_type");
    openapiFields.add("credential_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("endpoint");
    openapiFields.add("identity");
    openapiFields.add("links");
    openapiFields.add("message_types");
    openapiFields.add("service_sid");
    openapiFields.add("sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChatV2ServiceBinding
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChatV2ServiceBinding.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChatV2ServiceBinding is not found in the empty JSON string", ChatV2ServiceBinding.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ChatV2ServiceBinding.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChatV2ServiceBinding` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("binding_type") != null && !jsonObj.get("binding_type").isJsonNull()) && !jsonObj.get("binding_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `binding_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("binding_type").toString()));
      }
      // validate the optional field `binding_type`
      if (jsonObj.get("binding_type") != null && !jsonObj.get("binding_type").isJsonNull()) {
        BindingEnumBindingType.validateJsonElement(jsonObj.get("binding_type"));
      }
      if ((jsonObj.get("credential_sid") != null && !jsonObj.get("credential_sid").isJsonNull()) && !jsonObj.get("credential_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credential_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credential_sid").toString()));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      if ((jsonObj.get("identity") != null && !jsonObj.get("identity").isJsonNull()) && !jsonObj.get("identity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("message_types") != null && !jsonObj.get("message_types").isJsonNull() && !jsonObj.get("message_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_types` to be an array in the JSON string but got `%s`", jsonObj.get("message_types").toString()));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChatV2ServiceBinding.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChatV2ServiceBinding' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChatV2ServiceBinding> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChatV2ServiceBinding.class));

       return (TypeAdapter<T>) new TypeAdapter<ChatV2ServiceBinding>() {
           @Override
           public void write(JsonWriter out, ChatV2ServiceBinding value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChatV2ServiceBinding read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ChatV2ServiceBinding given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChatV2ServiceBinding
   * @throws IOException if the JSON string is invalid with respect to ChatV2ServiceBinding
   */
  public static ChatV2ServiceBinding fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChatV2ServiceBinding.class);
  }

  /**
   * Convert an instance of ChatV2ServiceBinding to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

