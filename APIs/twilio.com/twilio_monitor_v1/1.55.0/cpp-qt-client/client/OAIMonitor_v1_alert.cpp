/**
 * Twilio - Monitor
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMonitor_v1_alert.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMonitor_v1_alert::OAIMonitor_v1_alert(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMonitor_v1_alert::OAIMonitor_v1_alert() {
    this->initializeModel();
}

OAIMonitor_v1_alert::~OAIMonitor_v1_alert() {}

void OAIMonitor_v1_alert::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_alert_text_isSet = false;
    m_alert_text_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_generated_isSet = false;
    m_date_generated_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_log_level_isSet = false;
    m_log_level_isValid = false;

    m_more_info_isSet = false;
    m_more_info_isValid = false;

    m_request_method_isSet = false;
    m_request_method_isValid = false;

    m_request_url_isSet = false;
    m_request_url_isValid = false;

    m_resource_sid_isSet = false;
    m_resource_sid_isValid = false;

    m_service_sid_isSet = false;
    m_service_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIMonitor_v1_alert::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMonitor_v1_alert::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_alert_text_isValid = ::OpenAPI::fromJsonValue(m_alert_text, json[QString("alert_text")]);
    m_alert_text_isSet = !json[QString("alert_text")].isNull() && m_alert_text_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("api_version")]);
    m_api_version_isSet = !json[QString("api_version")].isNull() && m_api_version_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_generated_isValid = ::OpenAPI::fromJsonValue(m_date_generated, json[QString("date_generated")]);
    m_date_generated_isSet = !json[QString("date_generated")].isNull() && m_date_generated_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("error_code")]);
    m_error_code_isSet = !json[QString("error_code")].isNull() && m_error_code_isValid;

    m_log_level_isValid = ::OpenAPI::fromJsonValue(m_log_level, json[QString("log_level")]);
    m_log_level_isSet = !json[QString("log_level")].isNull() && m_log_level_isValid;

    m_more_info_isValid = ::OpenAPI::fromJsonValue(m_more_info, json[QString("more_info")]);
    m_more_info_isSet = !json[QString("more_info")].isNull() && m_more_info_isValid;

    m_request_method_isValid = ::OpenAPI::fromJsonValue(m_request_method, json[QString("request_method")]);
    m_request_method_isSet = !json[QString("request_method")].isNull() && m_request_method_isValid;

    m_request_url_isValid = ::OpenAPI::fromJsonValue(m_request_url, json[QString("request_url")]);
    m_request_url_isSet = !json[QString("request_url")].isNull() && m_request_url_isValid;

    m_resource_sid_isValid = ::OpenAPI::fromJsonValue(m_resource_sid, json[QString("resource_sid")]);
    m_resource_sid_isSet = !json[QString("resource_sid")].isNull() && m_resource_sid_isValid;

    m_service_sid_isValid = ::OpenAPI::fromJsonValue(m_service_sid, json[QString("service_sid")]);
    m_service_sid_isSet = !json[QString("service_sid")].isNull() && m_service_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIMonitor_v1_alert::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMonitor_v1_alert::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_alert_text_isSet) {
        obj.insert(QString("alert_text"), ::OpenAPI::toJsonValue(m_alert_text));
    }
    if (m_api_version_isSet) {
        obj.insert(QString("api_version"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_generated_isSet) {
        obj.insert(QString("date_generated"), ::OpenAPI::toJsonValue(m_date_generated));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("error_code"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_log_level_isSet) {
        obj.insert(QString("log_level"), ::OpenAPI::toJsonValue(m_log_level));
    }
    if (m_more_info_isSet) {
        obj.insert(QString("more_info"), ::OpenAPI::toJsonValue(m_more_info));
    }
    if (m_request_method_isSet) {
        obj.insert(QString("request_method"), ::OpenAPI::toJsonValue(m_request_method));
    }
    if (m_request_url_isSet) {
        obj.insert(QString("request_url"), ::OpenAPI::toJsonValue(m_request_url));
    }
    if (m_resource_sid_isSet) {
        obj.insert(QString("resource_sid"), ::OpenAPI::toJsonValue(m_resource_sid));
    }
    if (m_service_sid_isSet) {
        obj.insert(QString("service_sid"), ::OpenAPI::toJsonValue(m_service_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIMonitor_v1_alert::getAccountSid() const {
    return m_account_sid;
}
void OAIMonitor_v1_alert::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIMonitor_v1_alert::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIMonitor_v1_alert::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIMonitor_v1_alert::getAlertText() const {
    return m_alert_text;
}
void OAIMonitor_v1_alert::setAlertText(const QString &alert_text) {
    m_alert_text = alert_text;
    m_alert_text_isSet = true;
}

bool OAIMonitor_v1_alert::is_alert_text_Set() const{
    return m_alert_text_isSet;
}

bool OAIMonitor_v1_alert::is_alert_text_Valid() const{
    return m_alert_text_isValid;
}

QString OAIMonitor_v1_alert::getApiVersion() const {
    return m_api_version;
}
void OAIMonitor_v1_alert::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIMonitor_v1_alert::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIMonitor_v1_alert::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QDateTime OAIMonitor_v1_alert::getDateCreated() const {
    return m_date_created;
}
void OAIMonitor_v1_alert::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIMonitor_v1_alert::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIMonitor_v1_alert::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIMonitor_v1_alert::getDateGenerated() const {
    return m_date_generated;
}
void OAIMonitor_v1_alert::setDateGenerated(const QDateTime &date_generated) {
    m_date_generated = date_generated;
    m_date_generated_isSet = true;
}

bool OAIMonitor_v1_alert::is_date_generated_Set() const{
    return m_date_generated_isSet;
}

bool OAIMonitor_v1_alert::is_date_generated_Valid() const{
    return m_date_generated_isValid;
}

QDateTime OAIMonitor_v1_alert::getDateUpdated() const {
    return m_date_updated;
}
void OAIMonitor_v1_alert::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIMonitor_v1_alert::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIMonitor_v1_alert::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIMonitor_v1_alert::getErrorCode() const {
    return m_error_code;
}
void OAIMonitor_v1_alert::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIMonitor_v1_alert::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIMonitor_v1_alert::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIMonitor_v1_alert::getLogLevel() const {
    return m_log_level;
}
void OAIMonitor_v1_alert::setLogLevel(const QString &log_level) {
    m_log_level = log_level;
    m_log_level_isSet = true;
}

bool OAIMonitor_v1_alert::is_log_level_Set() const{
    return m_log_level_isSet;
}

bool OAIMonitor_v1_alert::is_log_level_Valid() const{
    return m_log_level_isValid;
}

QString OAIMonitor_v1_alert::getMoreInfo() const {
    return m_more_info;
}
void OAIMonitor_v1_alert::setMoreInfo(const QString &more_info) {
    m_more_info = more_info;
    m_more_info_isSet = true;
}

bool OAIMonitor_v1_alert::is_more_info_Set() const{
    return m_more_info_isSet;
}

bool OAIMonitor_v1_alert::is_more_info_Valid() const{
    return m_more_info_isValid;
}

QString OAIMonitor_v1_alert::getRequestMethod() const {
    return m_request_method;
}
void OAIMonitor_v1_alert::setRequestMethod(const QString &request_method) {
    m_request_method = request_method;
    m_request_method_isSet = true;
}

bool OAIMonitor_v1_alert::is_request_method_Set() const{
    return m_request_method_isSet;
}

bool OAIMonitor_v1_alert::is_request_method_Valid() const{
    return m_request_method_isValid;
}

QString OAIMonitor_v1_alert::getRequestUrl() const {
    return m_request_url;
}
void OAIMonitor_v1_alert::setRequestUrl(const QString &request_url) {
    m_request_url = request_url;
    m_request_url_isSet = true;
}

bool OAIMonitor_v1_alert::is_request_url_Set() const{
    return m_request_url_isSet;
}

bool OAIMonitor_v1_alert::is_request_url_Valid() const{
    return m_request_url_isValid;
}

QString OAIMonitor_v1_alert::getResourceSid() const {
    return m_resource_sid;
}
void OAIMonitor_v1_alert::setResourceSid(const QString &resource_sid) {
    m_resource_sid = resource_sid;
    m_resource_sid_isSet = true;
}

bool OAIMonitor_v1_alert::is_resource_sid_Set() const{
    return m_resource_sid_isSet;
}

bool OAIMonitor_v1_alert::is_resource_sid_Valid() const{
    return m_resource_sid_isValid;
}

QString OAIMonitor_v1_alert::getServiceSid() const {
    return m_service_sid;
}
void OAIMonitor_v1_alert::setServiceSid(const QString &service_sid) {
    m_service_sid = service_sid;
    m_service_sid_isSet = true;
}

bool OAIMonitor_v1_alert::is_service_sid_Set() const{
    return m_service_sid_isSet;
}

bool OAIMonitor_v1_alert::is_service_sid_Valid() const{
    return m_service_sid_isValid;
}

QString OAIMonitor_v1_alert::getSid() const {
    return m_sid;
}
void OAIMonitor_v1_alert::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIMonitor_v1_alert::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIMonitor_v1_alert::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIMonitor_v1_alert::getUrl() const {
    return m_url;
}
void OAIMonitor_v1_alert::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIMonitor_v1_alert::is_url_Set() const{
    return m_url_isSet;
}

bool OAIMonitor_v1_alert::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIMonitor_v1_alert::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alert_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_generated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_more_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMonitor_v1_alert::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
