/**
 * Twilio - Monitor
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MonitorV1Event model module.
 * @module model/MonitorV1Event
 * @version 1.55.0
 */
class MonitorV1Event {
    /**
     * Constructs a new <code>MonitorV1Event</code>.
     * @alias module:model/MonitorV1Event
     */
    constructor() { 
        
        MonitorV1Event.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MonitorV1Event</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonitorV1Event} obj Optional instance to populate.
     * @return {module:model/MonitorV1Event} The populated <code>MonitorV1Event</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonitorV1Event();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('actor_sid')) {
                obj['actor_sid'] = ApiClient.convertToType(data['actor_sid'], 'String');
            }
            if (data.hasOwnProperty('actor_type')) {
                obj['actor_type'] = ApiClient.convertToType(data['actor_type'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('event_data')) {
                obj['event_data'] = ApiClient.convertToType(data['event_data'], Object);
            }
            if (data.hasOwnProperty('event_date')) {
                obj['event_date'] = ApiClient.convertToType(data['event_date'], 'Date');
            }
            if (data.hasOwnProperty('event_type')) {
                obj['event_type'] = ApiClient.convertToType(data['event_type'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('resource_sid')) {
                obj['resource_sid'] = ApiClient.convertToType(data['resource_sid'], 'String');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('source_ip_address')) {
                obj['source_ip_address'] = ApiClient.convertToType(data['source_ip_address'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonitorV1Event</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonitorV1Event</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['actor_sid'] && !(typeof data['actor_sid'] === 'string' || data['actor_sid'] instanceof String)) {
            throw new Error("Expected the field `actor_sid` to be a primitive type in the JSON string but got " + data['actor_sid']);
        }
        // ensure the json data is a string
        if (data['actor_type'] && !(typeof data['actor_type'] === 'string' || data['actor_type'] instanceof String)) {
            throw new Error("Expected the field `actor_type` to be a primitive type in the JSON string but got " + data['actor_type']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['event_type'] && !(typeof data['event_type'] === 'string' || data['event_type'] instanceof String)) {
            throw new Error("Expected the field `event_type` to be a primitive type in the JSON string but got " + data['event_type']);
        }
        // ensure the json data is a string
        if (data['resource_sid'] && !(typeof data['resource_sid'] === 'string' || data['resource_sid'] instanceof String)) {
            throw new Error("Expected the field `resource_sid` to be a primitive type in the JSON string but got " + data['resource_sid']);
        }
        // ensure the json data is a string
        if (data['resource_type'] && !(typeof data['resource_type'] === 'string' || data['resource_type'] instanceof String)) {
            throw new Error("Expected the field `resource_type` to be a primitive type in the JSON string but got " + data['resource_type']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['source_ip_address'] && !(typeof data['source_ip_address'] === 'string' || data['source_ip_address'] instanceof String)) {
            throw new Error("Expected the field `source_ip_address` to be a primitive type in the JSON string but got " + data['source_ip_address']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Event resource.
 * @member {String} account_sid
 */
MonitorV1Event.prototype['account_sid'] = undefined;

/**
 * The SID of the actor that caused the event, if available. Can be `null`.
 * @member {String} actor_sid
 */
MonitorV1Event.prototype['actor_sid'] = undefined;

/**
 * The type of actor that caused the event. Can be: `user` for a change made by a logged-in user in the Twilio Console, `account` for an event caused by an API request by an authenticating Account, `twilio-admin` for an event caused by a Twilio employee, and so on.
 * @member {String} actor_type
 */
MonitorV1Event.prototype['actor_type'] = undefined;

/**
 * A description of the event. Can be `null`.
 * @member {String} description
 */
MonitorV1Event.prototype['description'] = undefined;

/**
 * An object with additional data about the event. The  contents depend on `event_type`. For example, event-types of the form `RESOURCE.updated`, this value contains a `resource_properties` dictionary that describes the previous and updated properties of the resource.
 * @member {Object} event_data
 */
MonitorV1Event.prototype['event_data'] = undefined;

/**
 * The date and time in GMT when the event was recorded specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} event_date
 */
MonitorV1Event.prototype['event_date'] = undefined;

/**
 * The event's type. Event-types are typically in the form: `RESOURCE_TYPE.ACTION`, where `RESOURCE_TYPE` is the type of resource that was affected and `ACTION` is what happened to it. For example, `phone-number.created`. For a full list of all event-types, see the [Monitor Event Types](https://www.twilio.com/docs/usage/monitor-events#event-types).
 * @member {String} event_type
 */
MonitorV1Event.prototype['event_type'] = undefined;

/**
 * The absolute URLs of related resources.
 * @member {Object} links
 */
MonitorV1Event.prototype['links'] = undefined;

/**
 * The SID of the resource that was affected.
 * @member {String} resource_sid
 */
MonitorV1Event.prototype['resource_sid'] = undefined;

/**
 * The type of resource that was affected. For a full list of all resource-types, see the [Monitor Event Types](https://www.twilio.com/docs/usage/monitor-events#event-types).
 * @member {String} resource_type
 */
MonitorV1Event.prototype['resource_type'] = undefined;

/**
 * The unique string that we created to identify the Event resource.
 * @member {String} sid
 */
MonitorV1Event.prototype['sid'] = undefined;

/**
 * The originating system or interface that caused the event.  Can be: `web` for events caused by user action in the Twilio Console, `api` for events caused by a request to our API, or   `twilio` for events caused by an automated or internal Twilio system.
 * @member {String} source
 */
MonitorV1Event.prototype['source'] = undefined;

/**
 * The IP address of the source, if the source is outside the Twilio cloud. This value is `null` for events with `source` of `twilio`
 * @member {String} source_ip_address
 */
MonitorV1Event.prototype['source_ip_address'] = undefined;

/**
 * The absolute URL of the resource that was affected. Can be `null`.
 * @member {String} url
 */
MonitorV1Event.prototype['url'] = undefined;






export default MonitorV1Event;

