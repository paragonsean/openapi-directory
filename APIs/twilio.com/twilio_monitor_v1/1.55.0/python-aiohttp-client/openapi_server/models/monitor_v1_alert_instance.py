# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class MonitorV1AlertInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, alert_text: str=None, api_version: str=None, date_created: datetime=None, date_generated: datetime=None, date_updated: datetime=None, error_code: str=None, log_level: str=None, more_info: str=None, request_headers: str=None, request_method: str=None, request_url: str=None, request_variables: str=None, resource_sid: str=None, response_body: str=None, response_headers: str=None, service_sid: str=None, sid: str=None, url: str=None):
        """MonitorV1AlertInstance - a model defined in OpenAPI

        :param account_sid: The account_sid of this MonitorV1AlertInstance.
        :param alert_text: The alert_text of this MonitorV1AlertInstance.
        :param api_version: The api_version of this MonitorV1AlertInstance.
        :param date_created: The date_created of this MonitorV1AlertInstance.
        :param date_generated: The date_generated of this MonitorV1AlertInstance.
        :param date_updated: The date_updated of this MonitorV1AlertInstance.
        :param error_code: The error_code of this MonitorV1AlertInstance.
        :param log_level: The log_level of this MonitorV1AlertInstance.
        :param more_info: The more_info of this MonitorV1AlertInstance.
        :param request_headers: The request_headers of this MonitorV1AlertInstance.
        :param request_method: The request_method of this MonitorV1AlertInstance.
        :param request_url: The request_url of this MonitorV1AlertInstance.
        :param request_variables: The request_variables of this MonitorV1AlertInstance.
        :param resource_sid: The resource_sid of this MonitorV1AlertInstance.
        :param response_body: The response_body of this MonitorV1AlertInstance.
        :param response_headers: The response_headers of this MonitorV1AlertInstance.
        :param service_sid: The service_sid of this MonitorV1AlertInstance.
        :param sid: The sid of this MonitorV1AlertInstance.
        :param url: The url of this MonitorV1AlertInstance.
        """
        self.openapi_types = {
            'account_sid': str,
            'alert_text': str,
            'api_version': str,
            'date_created': datetime,
            'date_generated': datetime,
            'date_updated': datetime,
            'error_code': str,
            'log_level': str,
            'more_info': str,
            'request_headers': str,
            'request_method': str,
            'request_url': str,
            'request_variables': str,
            'resource_sid': str,
            'response_body': str,
            'response_headers': str,
            'service_sid': str,
            'sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'alert_text': 'alert_text',
            'api_version': 'api_version',
            'date_created': 'date_created',
            'date_generated': 'date_generated',
            'date_updated': 'date_updated',
            'error_code': 'error_code',
            'log_level': 'log_level',
            'more_info': 'more_info',
            'request_headers': 'request_headers',
            'request_method': 'request_method',
            'request_url': 'request_url',
            'request_variables': 'request_variables',
            'resource_sid': 'resource_sid',
            'response_body': 'response_body',
            'response_headers': 'response_headers',
            'service_sid': 'service_sid',
            'sid': 'sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._alert_text = alert_text
        self._api_version = api_version
        self._date_created = date_created
        self._date_generated = date_generated
        self._date_updated = date_updated
        self._error_code = error_code
        self._log_level = log_level
        self._more_info = more_info
        self._request_headers = request_headers
        self._request_method = request_method
        self._request_url = request_url
        self._request_variables = request_variables
        self._resource_sid = resource_sid
        self._response_body = response_body
        self._response_headers = response_headers
        self._service_sid = service_sid
        self._sid = sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitorV1AlertInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The monitor.v1.alert-instance of this MonitorV1AlertInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this MonitorV1AlertInstance.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Alert resource.

        :return: The account_sid of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this MonitorV1AlertInstance.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Alert resource.

        :param account_sid: The account_sid of this MonitorV1AlertInstance.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def alert_text(self):
        """Gets the alert_text of this MonitorV1AlertInstance.

        The text of the alert.

        :return: The alert_text of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._alert_text

    @alert_text.setter
    def alert_text(self, alert_text):
        """Sets the alert_text of this MonitorV1AlertInstance.

        The text of the alert.

        :param alert_text: The alert_text of this MonitorV1AlertInstance.
        :type alert_text: str
        """

        self._alert_text = alert_text

    @property
    def api_version(self):
        """Gets the api_version of this MonitorV1AlertInstance.

        The API version used when the alert was generated.  Can be empty for events that don't have a specific API version.

        :return: The api_version of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this MonitorV1AlertInstance.

        The API version used when the alert was generated.  Can be empty for events that don't have a specific API version.

        :param api_version: The api_version of this MonitorV1AlertInstance.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def date_created(self):
        """Gets the date_created of this MonitorV1AlertInstance.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this MonitorV1AlertInstance.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this MonitorV1AlertInstance.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this MonitorV1AlertInstance.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_generated(self):
        """Gets the date_generated of this MonitorV1AlertInstance.

        The date and time in GMT when the alert was generated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.  Due to buffering, this can be different than `date_created`.

        :return: The date_generated of this MonitorV1AlertInstance.
        :rtype: datetime
        """
        return self._date_generated

    @date_generated.setter
    def date_generated(self, date_generated):
        """Sets the date_generated of this MonitorV1AlertInstance.

        The date and time in GMT when the alert was generated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.  Due to buffering, this can be different than `date_created`.

        :param date_generated: The date_generated of this MonitorV1AlertInstance.
        :type date_generated: datetime
        """

        self._date_generated = date_generated

    @property
    def date_updated(self):
        """Gets the date_updated of this MonitorV1AlertInstance.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this MonitorV1AlertInstance.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this MonitorV1AlertInstance.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this MonitorV1AlertInstance.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def error_code(self):
        """Gets the error_code of this MonitorV1AlertInstance.

        The error code for the condition that generated the alert. See the [Error Dictionary](https://www.twilio.com/docs/api/errors) for possible causes and solutions to the error.

        :return: The error_code of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this MonitorV1AlertInstance.

        The error code for the condition that generated the alert. See the [Error Dictionary](https://www.twilio.com/docs/api/errors) for possible causes and solutions to the error.

        :param error_code: The error_code of this MonitorV1AlertInstance.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def log_level(self):
        """Gets the log_level of this MonitorV1AlertInstance.

        The log level.  Can be: `error`, `warning`, `notice`, or `debug`.

        :return: The log_level of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._log_level

    @log_level.setter
    def log_level(self, log_level):
        """Sets the log_level of this MonitorV1AlertInstance.

        The log level.  Can be: `error`, `warning`, `notice`, or `debug`.

        :param log_level: The log_level of this MonitorV1AlertInstance.
        :type log_level: str
        """

        self._log_level = log_level

    @property
    def more_info(self):
        """Gets the more_info of this MonitorV1AlertInstance.

        The URL of the page in our [Error Dictionary](https://www.twilio.com/docs/api/errors) with more information about the error condition.

        :return: The more_info of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._more_info

    @more_info.setter
    def more_info(self, more_info):
        """Sets the more_info of this MonitorV1AlertInstance.

        The URL of the page in our [Error Dictionary](https://www.twilio.com/docs/api/errors) with more information about the error condition.

        :param more_info: The more_info of this MonitorV1AlertInstance.
        :type more_info: str
        """

        self._more_info = more_info

    @property
    def request_headers(self):
        """Gets the request_headers of this MonitorV1AlertInstance.

        The request headers of the request that generated the alert. This value is only returned when a single Alert resource is fetched.

        :return: The request_headers of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._request_headers

    @request_headers.setter
    def request_headers(self, request_headers):
        """Sets the request_headers of this MonitorV1AlertInstance.

        The request headers of the request that generated the alert. This value is only returned when a single Alert resource is fetched.

        :param request_headers: The request_headers of this MonitorV1AlertInstance.
        :type request_headers: str
        """

        self._request_headers = request_headers

    @property
    def request_method(self):
        """Gets the request_method of this MonitorV1AlertInstance.

        The method used by the request that generated the alert. If the alert was generated by a request we made to your server, this is the method we used. If the alert was generated by a request from your application to our API, this is the method your application used.

        :return: The request_method of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._request_method

    @request_method.setter
    def request_method(self, request_method):
        """Sets the request_method of this MonitorV1AlertInstance.

        The method used by the request that generated the alert. If the alert was generated by a request we made to your server, this is the method we used. If the alert was generated by a request from your application to our API, this is the method your application used.

        :param request_method: The request_method of this MonitorV1AlertInstance.
        :type request_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if request_method not in allowed_values:
            raise ValueError(
                "Invalid value for `request_method` ({0}), must be one of {1}"
                .format(request_method, allowed_values)
            )

        self._request_method = request_method

    @property
    def request_url(self):
        """Gets the request_url of this MonitorV1AlertInstance.

        The URL of the request that generated the alert. If the alert was generated by a request we made to your server, this is the URL on your server that generated the alert. If the alert was generated by a request from your application to our API, this is the URL of the resource requested.

        :return: The request_url of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._request_url

    @request_url.setter
    def request_url(self, request_url):
        """Sets the request_url of this MonitorV1AlertInstance.

        The URL of the request that generated the alert. If the alert was generated by a request we made to your server, this is the URL on your server that generated the alert. If the alert was generated by a request from your application to our API, this is the URL of the resource requested.

        :param request_url: The request_url of this MonitorV1AlertInstance.
        :type request_url: str
        """

        self._request_url = request_url

    @property
    def request_variables(self):
        """Gets the request_variables of this MonitorV1AlertInstance.

        The variables passed in the request that generated the alert. This value is only returned when a single Alert resource is fetched.

        :return: The request_variables of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._request_variables

    @request_variables.setter
    def request_variables(self, request_variables):
        """Sets the request_variables of this MonitorV1AlertInstance.

        The variables passed in the request that generated the alert. This value is only returned when a single Alert resource is fetched.

        :param request_variables: The request_variables of this MonitorV1AlertInstance.
        :type request_variables: str
        """

        self._request_variables = request_variables

    @property
    def resource_sid(self):
        """Gets the resource_sid of this MonitorV1AlertInstance.

        The SID of the resource for which the alert was generated.  For instance, if your server failed to respond to an HTTP request during the flow of a particular call, this value would be the SID of the server.  This value is empty if the alert was not generated for a particular resource.

        :return: The resource_sid of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._resource_sid

    @resource_sid.setter
    def resource_sid(self, resource_sid):
        """Sets the resource_sid of this MonitorV1AlertInstance.

        The SID of the resource for which the alert was generated.  For instance, if your server failed to respond to an HTTP request during the flow of a particular call, this value would be the SID of the server.  This value is empty if the alert was not generated for a particular resource.

        :param resource_sid: The resource_sid of this MonitorV1AlertInstance.
        :type resource_sid: str
        """
        if resource_sid is not None and len(resource_sid) > 34:
            raise ValueError("Invalid value for `resource_sid`, length must be less than or equal to `34`")
        if resource_sid is not None and len(resource_sid) < 34:
            raise ValueError("Invalid value for `resource_sid`, length must be greater than or equal to `34`")
        if resource_sid is not None and not re.search(r'^[a-zA-Z]{2}[0-9a-fA-F]{32}$', resource_sid):
            raise ValueError("Invalid value for `resource_sid`, must be a follow pattern or equal to `/^[a-zA-Z]{2}[0-9a-fA-F]{32}$/`")

        self._resource_sid = resource_sid

    @property
    def response_body(self):
        """Gets the response_body of this MonitorV1AlertInstance.

        The response body of the request that generated the alert. This value is only returned when a single Alert resource is fetched.

        :return: The response_body of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._response_body

    @response_body.setter
    def response_body(self, response_body):
        """Sets the response_body of this MonitorV1AlertInstance.

        The response body of the request that generated the alert. This value is only returned when a single Alert resource is fetched.

        :param response_body: The response_body of this MonitorV1AlertInstance.
        :type response_body: str
        """

        self._response_body = response_body

    @property
    def response_headers(self):
        """Gets the response_headers of this MonitorV1AlertInstance.

        The response headers of the request that generated the alert. This value is only returned when a single Alert resource is fetched.

        :return: The response_headers of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._response_headers

    @response_headers.setter
    def response_headers(self, response_headers):
        """Sets the response_headers of this MonitorV1AlertInstance.

        The response headers of the request that generated the alert. This value is only returned when a single Alert resource is fetched.

        :param response_headers: The response_headers of this MonitorV1AlertInstance.
        :type response_headers: str
        """

        self._response_headers = response_headers

    @property
    def service_sid(self):
        """Gets the service_sid of this MonitorV1AlertInstance.

        The SID of the service or resource that generated the alert. Can be `null`.

        :return: The service_sid of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this MonitorV1AlertInstance.

        The SID of the service or resource that generated the alert. Can be `null`.

        :param service_sid: The service_sid of this MonitorV1AlertInstance.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^[a-zA-Z]{2}[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^[a-zA-Z]{2}[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def sid(self):
        """Gets the sid of this MonitorV1AlertInstance.

        The unique string that we created to identify the Alert resource.

        :return: The sid of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this MonitorV1AlertInstance.

        The unique string that we created to identify the Alert resource.

        :param sid: The sid of this MonitorV1AlertInstance.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^NO[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^NO[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this MonitorV1AlertInstance.

        The absolute URL of the Alert resource.

        :return: The url of this MonitorV1AlertInstance.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this MonitorV1AlertInstance.

        The absolute URL of the Alert resource.

        :param url: The url of this MonitorV1AlertInstance.
        :type url: str
        """

        self._url = url
