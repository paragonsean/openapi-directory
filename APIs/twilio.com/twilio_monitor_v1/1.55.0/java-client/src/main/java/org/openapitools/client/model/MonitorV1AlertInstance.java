/*
 * Twilio - Monitor
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MonitorV1AlertInstance
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:54.280585-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MonitorV1AlertInstance {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ALERT_TEXT = "alert_text";
  @SerializedName(SERIALIZED_NAME_ALERT_TEXT)
  private String alertText;

  public static final String SERIALIZED_NAME_API_VERSION = "api_version";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_GENERATED = "date_generated";
  @SerializedName(SERIALIZED_NAME_DATE_GENERATED)
  private OffsetDateTime dateGenerated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_ERROR_CODE = "error_code";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private String errorCode;

  public static final String SERIALIZED_NAME_LOG_LEVEL = "log_level";
  @SerializedName(SERIALIZED_NAME_LOG_LEVEL)
  private String logLevel;

  public static final String SERIALIZED_NAME_MORE_INFO = "more_info";
  @SerializedName(SERIALIZED_NAME_MORE_INFO)
  private String moreInfo;

  public static final String SERIALIZED_NAME_REQUEST_HEADERS = "request_headers";
  @SerializedName(SERIALIZED_NAME_REQUEST_HEADERS)
  private String requestHeaders;

  /**
   * The method used by the request that generated the alert. If the alert was generated by a request we made to your server, this is the method we used. If the alert was generated by a request from your application to our API, this is the method your application used.
   */
  @JsonAdapter(RequestMethodEnum.Adapter.class)
  public enum RequestMethodEnum {
    HEAD("HEAD"),
    
    GET("GET"),
    
    POST("POST"),
    
    PATCH("PATCH"),
    
    PUT("PUT"),
    
    DELETE("DELETE");

    private String value;

    RequestMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RequestMethodEnum fromValue(String value) {
      for (RequestMethodEnum b : RequestMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RequestMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RequestMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RequestMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RequestMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RequestMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REQUEST_METHOD = "request_method";
  @SerializedName(SERIALIZED_NAME_REQUEST_METHOD)
  private RequestMethodEnum requestMethod;

  public static final String SERIALIZED_NAME_REQUEST_URL = "request_url";
  @SerializedName(SERIALIZED_NAME_REQUEST_URL)
  private String requestUrl;

  public static final String SERIALIZED_NAME_REQUEST_VARIABLES = "request_variables";
  @SerializedName(SERIALIZED_NAME_REQUEST_VARIABLES)
  private String requestVariables;

  public static final String SERIALIZED_NAME_RESOURCE_SID = "resource_sid";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SID)
  private String resourceSid;

  public static final String SERIALIZED_NAME_RESPONSE_BODY = "response_body";
  @SerializedName(SERIALIZED_NAME_RESPONSE_BODY)
  private String responseBody;

  public static final String SERIALIZED_NAME_RESPONSE_HEADERS = "response_headers";
  @SerializedName(SERIALIZED_NAME_RESPONSE_HEADERS)
  private String responseHeaders;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public MonitorV1AlertInstance() {
  }

  public MonitorV1AlertInstance accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Alert resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public MonitorV1AlertInstance alertText(String alertText) {
    this.alertText = alertText;
    return this;
  }

  /**
   * The text of the alert.
   * @return alertText
   */
  @javax.annotation.Nullable
  public String getAlertText() {
    return alertText;
  }

  public void setAlertText(String alertText) {
    this.alertText = alertText;
  }


  public MonitorV1AlertInstance apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * The API version used when the alert was generated.  Can be empty for events that don&#39;t have a specific API version.
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public MonitorV1AlertInstance dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public MonitorV1AlertInstance dateGenerated(OffsetDateTime dateGenerated) {
    this.dateGenerated = dateGenerated;
    return this;
  }

  /**
   * The date and time in GMT when the alert was generated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.  Due to buffering, this can be different than &#x60;date_created&#x60;.
   * @return dateGenerated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateGenerated() {
    return dateGenerated;
  }

  public void setDateGenerated(OffsetDateTime dateGenerated) {
    this.dateGenerated = dateGenerated;
  }


  public MonitorV1AlertInstance dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public MonitorV1AlertInstance errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * The error code for the condition that generated the alert. See the [Error Dictionary](https://www.twilio.com/docs/api/errors) for possible causes and solutions to the error.
   * @return errorCode
   */
  @javax.annotation.Nullable
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public MonitorV1AlertInstance logLevel(String logLevel) {
    this.logLevel = logLevel;
    return this;
  }

  /**
   * The log level.  Can be: &#x60;error&#x60;, &#x60;warning&#x60;, &#x60;notice&#x60;, or &#x60;debug&#x60;.
   * @return logLevel
   */
  @javax.annotation.Nullable
  public String getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(String logLevel) {
    this.logLevel = logLevel;
  }


  public MonitorV1AlertInstance moreInfo(String moreInfo) {
    this.moreInfo = moreInfo;
    return this;
  }

  /**
   * The URL of the page in our [Error Dictionary](https://www.twilio.com/docs/api/errors) with more information about the error condition.
   * @return moreInfo
   */
  @javax.annotation.Nullable
  public String getMoreInfo() {
    return moreInfo;
  }

  public void setMoreInfo(String moreInfo) {
    this.moreInfo = moreInfo;
  }


  public MonitorV1AlertInstance requestHeaders(String requestHeaders) {
    this.requestHeaders = requestHeaders;
    return this;
  }

  /**
   * The request headers of the request that generated the alert. This value is only returned when a single Alert resource is fetched.
   * @return requestHeaders
   */
  @javax.annotation.Nullable
  public String getRequestHeaders() {
    return requestHeaders;
  }

  public void setRequestHeaders(String requestHeaders) {
    this.requestHeaders = requestHeaders;
  }


  public MonitorV1AlertInstance requestMethod(RequestMethodEnum requestMethod) {
    this.requestMethod = requestMethod;
    return this;
  }

  /**
   * The method used by the request that generated the alert. If the alert was generated by a request we made to your server, this is the method we used. If the alert was generated by a request from your application to our API, this is the method your application used.
   * @return requestMethod
   */
  @javax.annotation.Nullable
  public RequestMethodEnum getRequestMethod() {
    return requestMethod;
  }

  public void setRequestMethod(RequestMethodEnum requestMethod) {
    this.requestMethod = requestMethod;
  }


  public MonitorV1AlertInstance requestUrl(String requestUrl) {
    this.requestUrl = requestUrl;
    return this;
  }

  /**
   * The URL of the request that generated the alert. If the alert was generated by a request we made to your server, this is the URL on your server that generated the alert. If the alert was generated by a request from your application to our API, this is the URL of the resource requested.
   * @return requestUrl
   */
  @javax.annotation.Nullable
  public String getRequestUrl() {
    return requestUrl;
  }

  public void setRequestUrl(String requestUrl) {
    this.requestUrl = requestUrl;
  }


  public MonitorV1AlertInstance requestVariables(String requestVariables) {
    this.requestVariables = requestVariables;
    return this;
  }

  /**
   * The variables passed in the request that generated the alert. This value is only returned when a single Alert resource is fetched.
   * @return requestVariables
   */
  @javax.annotation.Nullable
  public String getRequestVariables() {
    return requestVariables;
  }

  public void setRequestVariables(String requestVariables) {
    this.requestVariables = requestVariables;
  }


  public MonitorV1AlertInstance resourceSid(String resourceSid) {
    this.resourceSid = resourceSid;
    return this;
  }

  /**
   * The SID of the resource for which the alert was generated.  For instance, if your server failed to respond to an HTTP request during the flow of a particular call, this value would be the SID of the server.  This value is empty if the alert was not generated for a particular resource.
   * @return resourceSid
   */
  @javax.annotation.Nullable
  public String getResourceSid() {
    return resourceSid;
  }

  public void setResourceSid(String resourceSid) {
    this.resourceSid = resourceSid;
  }


  public MonitorV1AlertInstance responseBody(String responseBody) {
    this.responseBody = responseBody;
    return this;
  }

  /**
   * The response body of the request that generated the alert. This value is only returned when a single Alert resource is fetched.
   * @return responseBody
   */
  @javax.annotation.Nullable
  public String getResponseBody() {
    return responseBody;
  }

  public void setResponseBody(String responseBody) {
    this.responseBody = responseBody;
  }


  public MonitorV1AlertInstance responseHeaders(String responseHeaders) {
    this.responseHeaders = responseHeaders;
    return this;
  }

  /**
   * The response headers of the request that generated the alert. This value is only returned when a single Alert resource is fetched.
   * @return responseHeaders
   */
  @javax.annotation.Nullable
  public String getResponseHeaders() {
    return responseHeaders;
  }

  public void setResponseHeaders(String responseHeaders) {
    this.responseHeaders = responseHeaders;
  }


  public MonitorV1AlertInstance serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the service or resource that generated the alert. Can be &#x60;null&#x60;.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public MonitorV1AlertInstance sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Alert resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public MonitorV1AlertInstance url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Alert resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitorV1AlertInstance monitorV1AlertInstance = (MonitorV1AlertInstance) o;
    return Objects.equals(this.accountSid, monitorV1AlertInstance.accountSid) &&
        Objects.equals(this.alertText, monitorV1AlertInstance.alertText) &&
        Objects.equals(this.apiVersion, monitorV1AlertInstance.apiVersion) &&
        Objects.equals(this.dateCreated, monitorV1AlertInstance.dateCreated) &&
        Objects.equals(this.dateGenerated, monitorV1AlertInstance.dateGenerated) &&
        Objects.equals(this.dateUpdated, monitorV1AlertInstance.dateUpdated) &&
        Objects.equals(this.errorCode, monitorV1AlertInstance.errorCode) &&
        Objects.equals(this.logLevel, monitorV1AlertInstance.logLevel) &&
        Objects.equals(this.moreInfo, monitorV1AlertInstance.moreInfo) &&
        Objects.equals(this.requestHeaders, monitorV1AlertInstance.requestHeaders) &&
        Objects.equals(this.requestMethod, monitorV1AlertInstance.requestMethod) &&
        Objects.equals(this.requestUrl, monitorV1AlertInstance.requestUrl) &&
        Objects.equals(this.requestVariables, monitorV1AlertInstance.requestVariables) &&
        Objects.equals(this.resourceSid, monitorV1AlertInstance.resourceSid) &&
        Objects.equals(this.responseBody, monitorV1AlertInstance.responseBody) &&
        Objects.equals(this.responseHeaders, monitorV1AlertInstance.responseHeaders) &&
        Objects.equals(this.serviceSid, monitorV1AlertInstance.serviceSid) &&
        Objects.equals(this.sid, monitorV1AlertInstance.sid) &&
        Objects.equals(this.url, monitorV1AlertInstance.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, alertText, apiVersion, dateCreated, dateGenerated, dateUpdated, errorCode, logLevel, moreInfo, requestHeaders, requestMethod, requestUrl, requestVariables, resourceSid, responseBody, responseHeaders, serviceSid, sid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitorV1AlertInstance {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    alertText: ").append(toIndentedString(alertText)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateGenerated: ").append(toIndentedString(dateGenerated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    moreInfo: ").append(toIndentedString(moreInfo)).append("\n");
    sb.append("    requestHeaders: ").append(toIndentedString(requestHeaders)).append("\n");
    sb.append("    requestMethod: ").append(toIndentedString(requestMethod)).append("\n");
    sb.append("    requestUrl: ").append(toIndentedString(requestUrl)).append("\n");
    sb.append("    requestVariables: ").append(toIndentedString(requestVariables)).append("\n");
    sb.append("    resourceSid: ").append(toIndentedString(resourceSid)).append("\n");
    sb.append("    responseBody: ").append(toIndentedString(responseBody)).append("\n");
    sb.append("    responseHeaders: ").append(toIndentedString(responseHeaders)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("alert_text");
    openapiFields.add("api_version");
    openapiFields.add("date_created");
    openapiFields.add("date_generated");
    openapiFields.add("date_updated");
    openapiFields.add("error_code");
    openapiFields.add("log_level");
    openapiFields.add("more_info");
    openapiFields.add("request_headers");
    openapiFields.add("request_method");
    openapiFields.add("request_url");
    openapiFields.add("request_variables");
    openapiFields.add("resource_sid");
    openapiFields.add("response_body");
    openapiFields.add("response_headers");
    openapiFields.add("service_sid");
    openapiFields.add("sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MonitorV1AlertInstance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MonitorV1AlertInstance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MonitorV1AlertInstance is not found in the empty JSON string", MonitorV1AlertInstance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MonitorV1AlertInstance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MonitorV1AlertInstance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("alert_text") != null && !jsonObj.get("alert_text").isJsonNull()) && !jsonObj.get("alert_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alert_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alert_text").toString()));
      }
      if ((jsonObj.get("api_version") != null && !jsonObj.get("api_version").isJsonNull()) && !jsonObj.get("api_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_version").toString()));
      }
      if ((jsonObj.get("error_code") != null && !jsonObj.get("error_code").isJsonNull()) && !jsonObj.get("error_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_code").toString()));
      }
      if ((jsonObj.get("log_level") != null && !jsonObj.get("log_level").isJsonNull()) && !jsonObj.get("log_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `log_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("log_level").toString()));
      }
      if ((jsonObj.get("more_info") != null && !jsonObj.get("more_info").isJsonNull()) && !jsonObj.get("more_info").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `more_info` to be a primitive type in the JSON string but got `%s`", jsonObj.get("more_info").toString()));
      }
      if ((jsonObj.get("request_headers") != null && !jsonObj.get("request_headers").isJsonNull()) && !jsonObj.get("request_headers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_headers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_headers").toString()));
      }
      if ((jsonObj.get("request_method") != null && !jsonObj.get("request_method").isJsonNull()) && !jsonObj.get("request_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_method").toString()));
      }
      // validate the optional field `request_method`
      if (jsonObj.get("request_method") != null && !jsonObj.get("request_method").isJsonNull()) {
        RequestMethodEnum.validateJsonElement(jsonObj.get("request_method"));
      }
      if ((jsonObj.get("request_url") != null && !jsonObj.get("request_url").isJsonNull()) && !jsonObj.get("request_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_url").toString()));
      }
      if ((jsonObj.get("request_variables") != null && !jsonObj.get("request_variables").isJsonNull()) && !jsonObj.get("request_variables").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_variables` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_variables").toString()));
      }
      if ((jsonObj.get("resource_sid") != null && !jsonObj.get("resource_sid").isJsonNull()) && !jsonObj.get("resource_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_sid").toString()));
      }
      if ((jsonObj.get("response_body") != null && !jsonObj.get("response_body").isJsonNull()) && !jsonObj.get("response_body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `response_body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("response_body").toString()));
      }
      if ((jsonObj.get("response_headers") != null && !jsonObj.get("response_headers").isJsonNull()) && !jsonObj.get("response_headers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `response_headers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("response_headers").toString()));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MonitorV1AlertInstance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MonitorV1AlertInstance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MonitorV1AlertInstance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MonitorV1AlertInstance.class));

       return (TypeAdapter<T>) new TypeAdapter<MonitorV1AlertInstance>() {
           @Override
           public void write(JsonWriter out, MonitorV1AlertInstance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MonitorV1AlertInstance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MonitorV1AlertInstance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MonitorV1AlertInstance
   * @throws IOException if the JSON string is invalid with respect to MonitorV1AlertInstance
   */
  public static MonitorV1AlertInstance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MonitorV1AlertInstance.class);
  }

  /**
   * Convert an instance of MonitorV1AlertInstance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

