/**
 * Twilio - Autopilot
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AutopilotV1AssistantFieldTypeFieldValue from '../model/AutopilotV1AssistantFieldTypeFieldValue';
import ListFieldValueResponse from '../model/ListFieldValueResponse';

/**
* AutopilotV1FieldValue service.
* @module api/AutopilotV1FieldValueApi
* @version 1.53.0
*/
export default class AutopilotV1FieldValueApi {

    /**
    * Constructs a new AutopilotV1FieldValueApi. 
    * @alias module:api/AutopilotV1FieldValueApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createFieldValue operation.
     * @callback module:api/AutopilotV1FieldValueApi~createFieldValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutopilotV1AssistantFieldTypeFieldValue} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the new resource.
     * @param {String} fieldTypeSid The SID of the Field Type associated with the Field Value.
     * @param {String} language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: `en-US`
     * @param {String} value The Field Value data.
     * @param {Object} opts Optional parameters
     * @param {String} [synonymOf] The string value that indicates which word the field value is a synonym of.
     * @param {module:api/AutopilotV1FieldValueApi~createFieldValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutopilotV1AssistantFieldTypeFieldValue}
     */
    createFieldValue(assistantSid, fieldTypeSid, language, value, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assistantSid' is set
      if (assistantSid === undefined || assistantSid === null) {
        throw new Error("Missing the required parameter 'assistantSid' when calling createFieldValue");
      }
      // verify the required parameter 'fieldTypeSid' is set
      if (fieldTypeSid === undefined || fieldTypeSid === null) {
        throw new Error("Missing the required parameter 'fieldTypeSid' when calling createFieldValue");
      }
      // verify the required parameter 'language' is set
      if (language === undefined || language === null) {
        throw new Error("Missing the required parameter 'language' when calling createFieldValue");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling createFieldValue");
      }

      let pathParams = {
        'AssistantSid': assistantSid,
        'FieldTypeSid': fieldTypeSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Language': language,
        'SynonymOf': opts['synonymOf'],
        'Value': value
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = AutopilotV1AssistantFieldTypeFieldValue;
      let basePaths = ['https://autopilot.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteFieldValue operation.
     * @callback module:api/AutopilotV1FieldValueApi~deleteFieldValueCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to delete.
     * @param {String} fieldTypeSid The SID of the Field Type associated with the Field Value to delete.
     * @param {String} sid The Twilio-provided string that uniquely identifies the FieldValue resource to delete.
     * @param {module:api/AutopilotV1FieldValueApi~deleteFieldValueCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteFieldValue(assistantSid, fieldTypeSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assistantSid' is set
      if (assistantSid === undefined || assistantSid === null) {
        throw new Error("Missing the required parameter 'assistantSid' when calling deleteFieldValue");
      }
      // verify the required parameter 'fieldTypeSid' is set
      if (fieldTypeSid === undefined || fieldTypeSid === null) {
        throw new Error("Missing the required parameter 'fieldTypeSid' when calling deleteFieldValue");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteFieldValue");
      }

      let pathParams = {
        'AssistantSid': assistantSid,
        'FieldTypeSid': fieldTypeSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://autopilot.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchFieldValue operation.
     * @callback module:api/AutopilotV1FieldValueApi~fetchFieldValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutopilotV1AssistantFieldTypeFieldValue} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resource to fetch.
     * @param {String} fieldTypeSid The SID of the Field Type associated with the Field Value to fetch.
     * @param {String} sid The Twilio-provided string that uniquely identifies the FieldValue resource to fetch.
     * @param {module:api/AutopilotV1FieldValueApi~fetchFieldValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutopilotV1AssistantFieldTypeFieldValue}
     */
    fetchFieldValue(assistantSid, fieldTypeSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assistantSid' is set
      if (assistantSid === undefined || assistantSid === null) {
        throw new Error("Missing the required parameter 'assistantSid' when calling fetchFieldValue");
      }
      // verify the required parameter 'fieldTypeSid' is set
      if (fieldTypeSid === undefined || fieldTypeSid === null) {
        throw new Error("Missing the required parameter 'fieldTypeSid' when calling fetchFieldValue");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchFieldValue");
      }

      let pathParams = {
        'AssistantSid': assistantSid,
        'FieldTypeSid': fieldTypeSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AutopilotV1AssistantFieldTypeFieldValue;
      let basePaths = ['https://autopilot.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listFieldValue operation.
     * @callback module:api/AutopilotV1FieldValueApi~listFieldValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListFieldValueResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to read.
     * @param {String} fieldTypeSid The SID of the Field Type associated with the Field Value to read.
     * @param {Object} opts Optional parameters
     * @param {String} [language] The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: `en-US`
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/AutopilotV1FieldValueApi~listFieldValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListFieldValueResponse}
     */
    listFieldValue(assistantSid, fieldTypeSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assistantSid' is set
      if (assistantSid === undefined || assistantSid === null) {
        throw new Error("Missing the required parameter 'assistantSid' when calling listFieldValue");
      }
      // verify the required parameter 'fieldTypeSid' is set
      if (fieldTypeSid === undefined || fieldTypeSid === null) {
        throw new Error("Missing the required parameter 'fieldTypeSid' when calling listFieldValue");
      }

      let pathParams = {
        'AssistantSid': assistantSid,
        'FieldTypeSid': fieldTypeSid
      };
      let queryParams = {
        'Language': opts['language'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListFieldValueResponse;
      let basePaths = ['https://autopilot.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
