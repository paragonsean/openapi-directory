/**
 * Twilio - Autopilot
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioAutopilot);
  }
}(this, function(expect, TwilioAutopilot) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioAutopilot.AutopilotV1FieldTypeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AutopilotV1FieldTypeApi', function() {
    describe('createFieldType', function() {
      it('should call createFieldType successfully', function(done) {
        //uncomment below and update the code to test createFieldType
        //instance.createFieldType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFieldType', function() {
      it('should call deleteFieldType successfully', function(done) {
        //uncomment below and update the code to test deleteFieldType
        //instance.deleteFieldType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchFieldType', function() {
      it('should call fetchFieldType successfully', function(done) {
        //uncomment below and update the code to test fetchFieldType
        //instance.fetchFieldType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFieldType', function() {
      it('should call listFieldType successfully', function(done) {
        //uncomment below and update the code to test listFieldType
        //instance.listFieldType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFieldType', function() {
      it('should call updateFieldType successfully', function(done) {
        //uncomment below and update the code to test updateFieldType
        //instance.updateFieldType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
