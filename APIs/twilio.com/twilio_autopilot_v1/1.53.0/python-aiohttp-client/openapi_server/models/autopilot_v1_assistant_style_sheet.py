# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class AutopilotV1AssistantStyleSheet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, assistant_sid: str=None, data: object=None, url: str=None):
        """AutopilotV1AssistantStyleSheet - a model defined in OpenAPI

        :param account_sid: The account_sid of this AutopilotV1AssistantStyleSheet.
        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantStyleSheet.
        :param data: The data of this AutopilotV1AssistantStyleSheet.
        :param url: The url of this AutopilotV1AssistantStyleSheet.
        """
        self.openapi_types = {
            'account_sid': str,
            'assistant_sid': str,
            'data': object,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'assistant_sid': 'assistant_sid',
            'data': 'data',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._assistant_sid = assistant_sid
        self._data = data
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutopilotV1AssistantStyleSheet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The autopilot.v1.assistant.style_sheet of this AutopilotV1AssistantStyleSheet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this AutopilotV1AssistantStyleSheet.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the StyleSheet resource.

        :return: The account_sid of this AutopilotV1AssistantStyleSheet.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this AutopilotV1AssistantStyleSheet.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the StyleSheet resource.

        :param account_sid: The account_sid of this AutopilotV1AssistantStyleSheet.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def assistant_sid(self):
        """Gets the assistant_sid of this AutopilotV1AssistantStyleSheet.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the resource.

        :return: The assistant_sid of this AutopilotV1AssistantStyleSheet.
        :rtype: str
        """
        return self._assistant_sid

    @assistant_sid.setter
    def assistant_sid(self, assistant_sid):
        """Sets the assistant_sid of this AutopilotV1AssistantStyleSheet.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the resource.

        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantStyleSheet.
        :type assistant_sid: str
        """
        if assistant_sid is not None and len(assistant_sid) > 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be less than or equal to `34`")
        if assistant_sid is not None and len(assistant_sid) < 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be greater than or equal to `34`")
        if assistant_sid is not None and not re.search(r'^UA[0-9a-fA-F]{32}$', assistant_sid):
            raise ValueError("Invalid value for `assistant_sid`, must be a follow pattern or equal to `/^UA[0-9a-fA-F]{32}$/`")

        self._assistant_sid = assistant_sid

    @property
    def data(self):
        """Gets the data of this AutopilotV1AssistantStyleSheet.

        The JSON string that describes the style sheet object.

        :return: The data of this AutopilotV1AssistantStyleSheet.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this AutopilotV1AssistantStyleSheet.

        The JSON string that describes the style sheet object.

        :param data: The data of this AutopilotV1AssistantStyleSheet.
        :type data: object
        """

        self._data = data

    @property
    def url(self):
        """Gets the url of this AutopilotV1AssistantStyleSheet.

        The absolute URL of the StyleSheet resource.

        :return: The url of this AutopilotV1AssistantStyleSheet.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AutopilotV1AssistantStyleSheet.

        The absolute URL of the StyleSheet resource.

        :param url: The url of this AutopilotV1AssistantStyleSheet.
        :type url: str
        """

        self._url = url
