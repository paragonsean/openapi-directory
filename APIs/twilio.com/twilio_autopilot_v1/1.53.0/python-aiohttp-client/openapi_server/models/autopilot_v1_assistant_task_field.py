# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class AutopilotV1AssistantTaskField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, assistant_sid: str=None, date_created: datetime=None, date_updated: datetime=None, field_type: str=None, sid: str=None, task_sid: str=None, unique_name: str=None, url: str=None):
        """AutopilotV1AssistantTaskField - a model defined in OpenAPI

        :param account_sid: The account_sid of this AutopilotV1AssistantTaskField.
        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantTaskField.
        :param date_created: The date_created of this AutopilotV1AssistantTaskField.
        :param date_updated: The date_updated of this AutopilotV1AssistantTaskField.
        :param field_type: The field_type of this AutopilotV1AssistantTaskField.
        :param sid: The sid of this AutopilotV1AssistantTaskField.
        :param task_sid: The task_sid of this AutopilotV1AssistantTaskField.
        :param unique_name: The unique_name of this AutopilotV1AssistantTaskField.
        :param url: The url of this AutopilotV1AssistantTaskField.
        """
        self.openapi_types = {
            'account_sid': str,
            'assistant_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'field_type': str,
            'sid': str,
            'task_sid': str,
            'unique_name': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'assistant_sid': 'assistant_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'field_type': 'field_type',
            'sid': 'sid',
            'task_sid': 'task_sid',
            'unique_name': 'unique_name',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._assistant_sid = assistant_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._field_type = field_type
        self._sid = sid
        self._task_sid = task_sid
        self._unique_name = unique_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutopilotV1AssistantTaskField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The autopilot.v1.assistant.task.field of this AutopilotV1AssistantTaskField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this AutopilotV1AssistantTaskField.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Field resource.

        :return: The account_sid of this AutopilotV1AssistantTaskField.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this AutopilotV1AssistantTaskField.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Field resource.

        :param account_sid: The account_sid of this AutopilotV1AssistantTaskField.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def assistant_sid(self):
        """Gets the assistant_sid of this AutopilotV1AssistantTaskField.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the Task associated with the resource.

        :return: The assistant_sid of this AutopilotV1AssistantTaskField.
        :rtype: str
        """
        return self._assistant_sid

    @assistant_sid.setter
    def assistant_sid(self, assistant_sid):
        """Sets the assistant_sid of this AutopilotV1AssistantTaskField.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the Task associated with the resource.

        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantTaskField.
        :type assistant_sid: str
        """
        if assistant_sid is not None and len(assistant_sid) > 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be less than or equal to `34`")
        if assistant_sid is not None and len(assistant_sid) < 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be greater than or equal to `34`")
        if assistant_sid is not None and not re.search(r'^UA[0-9a-fA-F]{32}$', assistant_sid):
            raise ValueError("Invalid value for `assistant_sid`, must be a follow pattern or equal to `/^UA[0-9a-fA-F]{32}$/`")

        self._assistant_sid = assistant_sid

    @property
    def date_created(self):
        """Gets the date_created of this AutopilotV1AssistantTaskField.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this AutopilotV1AssistantTaskField.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this AutopilotV1AssistantTaskField.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this AutopilotV1AssistantTaskField.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this AutopilotV1AssistantTaskField.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this AutopilotV1AssistantTaskField.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this AutopilotV1AssistantTaskField.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this AutopilotV1AssistantTaskField.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def field_type(self):
        """Gets the field_type of this AutopilotV1AssistantTaskField.

        The Field Type of the field. Can be: a [Built-in Field Type](https://www.twilio.com/docs/autopilot/built-in-field-types), the unique_name, or the SID of a custom Field Type.

        :return: The field_type of this AutopilotV1AssistantTaskField.
        :rtype: str
        """
        return self._field_type

    @field_type.setter
    def field_type(self, field_type):
        """Sets the field_type of this AutopilotV1AssistantTaskField.

        The Field Type of the field. Can be: a [Built-in Field Type](https://www.twilio.com/docs/autopilot/built-in-field-types), the unique_name, or the SID of a custom Field Type.

        :param field_type: The field_type of this AutopilotV1AssistantTaskField.
        :type field_type: str
        """

        self._field_type = field_type

    @property
    def sid(self):
        """Gets the sid of this AutopilotV1AssistantTaskField.

        The unique string that we created to identify the Field resource.

        :return: The sid of this AutopilotV1AssistantTaskField.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this AutopilotV1AssistantTaskField.

        The unique string that we created to identify the Field resource.

        :param sid: The sid of this AutopilotV1AssistantTaskField.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^UE[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^UE[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def task_sid(self):
        """Gets the task_sid of this AutopilotV1AssistantTaskField.

        The SID of the [Task](https://www.twilio.com/docs/autopilot/api/task) resource associated with this Field.

        :return: The task_sid of this AutopilotV1AssistantTaskField.
        :rtype: str
        """
        return self._task_sid

    @task_sid.setter
    def task_sid(self, task_sid):
        """Sets the task_sid of this AutopilotV1AssistantTaskField.

        The SID of the [Task](https://www.twilio.com/docs/autopilot/api/task) resource associated with this Field.

        :param task_sid: The task_sid of this AutopilotV1AssistantTaskField.
        :type task_sid: str
        """
        if task_sid is not None and len(task_sid) > 34:
            raise ValueError("Invalid value for `task_sid`, length must be less than or equal to `34`")
        if task_sid is not None and len(task_sid) < 34:
            raise ValueError("Invalid value for `task_sid`, length must be greater than or equal to `34`")
        if task_sid is not None and not re.search(r'^UD[0-9a-fA-F]{32}$', task_sid):
            raise ValueError("Invalid value for `task_sid`, must be a follow pattern or equal to `/^UD[0-9a-fA-F]{32}$/`")

        self._task_sid = task_sid

    @property
    def unique_name(self):
        """Gets the unique_name of this AutopilotV1AssistantTaskField.

        An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.

        :return: The unique_name of this AutopilotV1AssistantTaskField.
        :rtype: str
        """
        return self._unique_name

    @unique_name.setter
    def unique_name(self, unique_name):
        """Sets the unique_name of this AutopilotV1AssistantTaskField.

        An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.

        :param unique_name: The unique_name of this AutopilotV1AssistantTaskField.
        :type unique_name: str
        """

        self._unique_name = unique_name

    @property
    def url(self):
        """Gets the url of this AutopilotV1AssistantTaskField.

        The absolute URL of the Field resource.

        :return: The url of this AutopilotV1AssistantTaskField.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AutopilotV1AssistantTaskField.

        The absolute URL of the Field resource.

        :param url: The url of this AutopilotV1AssistantTaskField.
        :type url: str
        """

        self._url = url
