# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class AutopilotV1AssistantWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, assistant_sid: str=None, date_created: datetime=None, date_updated: datetime=None, events: str=None, sid: str=None, unique_name: str=None, url: str=None, webhook_method: str=None, webhook_url: str=None):
        """AutopilotV1AssistantWebhook - a model defined in OpenAPI

        :param account_sid: The account_sid of this AutopilotV1AssistantWebhook.
        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantWebhook.
        :param date_created: The date_created of this AutopilotV1AssistantWebhook.
        :param date_updated: The date_updated of this AutopilotV1AssistantWebhook.
        :param events: The events of this AutopilotV1AssistantWebhook.
        :param sid: The sid of this AutopilotV1AssistantWebhook.
        :param unique_name: The unique_name of this AutopilotV1AssistantWebhook.
        :param url: The url of this AutopilotV1AssistantWebhook.
        :param webhook_method: The webhook_method of this AutopilotV1AssistantWebhook.
        :param webhook_url: The webhook_url of this AutopilotV1AssistantWebhook.
        """
        self.openapi_types = {
            'account_sid': str,
            'assistant_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'events': str,
            'sid': str,
            'unique_name': str,
            'url': str,
            'webhook_method': str,
            'webhook_url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'assistant_sid': 'assistant_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'events': 'events',
            'sid': 'sid',
            'unique_name': 'unique_name',
            'url': 'url',
            'webhook_method': 'webhook_method',
            'webhook_url': 'webhook_url'
        }

        self._account_sid = account_sid
        self._assistant_sid = assistant_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._events = events
        self._sid = sid
        self._unique_name = unique_name
        self._url = url
        self._webhook_method = webhook_method
        self._webhook_url = webhook_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutopilotV1AssistantWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The autopilot.v1.assistant.webhook of this AutopilotV1AssistantWebhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this AutopilotV1AssistantWebhook.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Webhook resource.

        :return: The account_sid of this AutopilotV1AssistantWebhook.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this AutopilotV1AssistantWebhook.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Webhook resource.

        :param account_sid: The account_sid of this AutopilotV1AssistantWebhook.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def assistant_sid(self):
        """Gets the assistant_sid of this AutopilotV1AssistantWebhook.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the resource.

        :return: The assistant_sid of this AutopilotV1AssistantWebhook.
        :rtype: str
        """
        return self._assistant_sid

    @assistant_sid.setter
    def assistant_sid(self, assistant_sid):
        """Sets the assistant_sid of this AutopilotV1AssistantWebhook.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the resource.

        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantWebhook.
        :type assistant_sid: str
        """
        if assistant_sid is not None and len(assistant_sid) > 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be less than or equal to `34`")
        if assistant_sid is not None and len(assistant_sid) < 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be greater than or equal to `34`")
        if assistant_sid is not None and not re.search(r'^UA[0-9a-fA-F]{32}$', assistant_sid):
            raise ValueError("Invalid value for `assistant_sid`, must be a follow pattern or equal to `/^UA[0-9a-fA-F]{32}$/`")

        self._assistant_sid = assistant_sid

    @property
    def date_created(self):
        """Gets the date_created of this AutopilotV1AssistantWebhook.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this AutopilotV1AssistantWebhook.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this AutopilotV1AssistantWebhook.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this AutopilotV1AssistantWebhook.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this AutopilotV1AssistantWebhook.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this AutopilotV1AssistantWebhook.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this AutopilotV1AssistantWebhook.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this AutopilotV1AssistantWebhook.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def events(self):
        """Gets the events of this AutopilotV1AssistantWebhook.

        The list of space-separated events that this Webhook is subscribed to.

        :return: The events of this AutopilotV1AssistantWebhook.
        :rtype: str
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this AutopilotV1AssistantWebhook.

        The list of space-separated events that this Webhook is subscribed to.

        :param events: The events of this AutopilotV1AssistantWebhook.
        :type events: str
        """

        self._events = events

    @property
    def sid(self):
        """Gets the sid of this AutopilotV1AssistantWebhook.

        The unique string that we created to identify the Webhook resource.

        :return: The sid of this AutopilotV1AssistantWebhook.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this AutopilotV1AssistantWebhook.

        The unique string that we created to identify the Webhook resource.

        :param sid: The sid of this AutopilotV1AssistantWebhook.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^UM[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^UM[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def unique_name(self):
        """Gets the unique_name of this AutopilotV1AssistantWebhook.

        An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.

        :return: The unique_name of this AutopilotV1AssistantWebhook.
        :rtype: str
        """
        return self._unique_name

    @unique_name.setter
    def unique_name(self, unique_name):
        """Sets the unique_name of this AutopilotV1AssistantWebhook.

        An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.

        :param unique_name: The unique_name of this AutopilotV1AssistantWebhook.
        :type unique_name: str
        """

        self._unique_name = unique_name

    @property
    def url(self):
        """Gets the url of this AutopilotV1AssistantWebhook.

        The absolute URL of the Webhook resource.

        :return: The url of this AutopilotV1AssistantWebhook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AutopilotV1AssistantWebhook.

        The absolute URL of the Webhook resource.

        :param url: The url of this AutopilotV1AssistantWebhook.
        :type url: str
        """

        self._url = url

    @property
    def webhook_method(self):
        """Gets the webhook_method of this AutopilotV1AssistantWebhook.

        The method used when calling the webhook's URL.

        :return: The webhook_method of this AutopilotV1AssistantWebhook.
        :rtype: str
        """
        return self._webhook_method

    @webhook_method.setter
    def webhook_method(self, webhook_method):
        """Sets the webhook_method of this AutopilotV1AssistantWebhook.

        The method used when calling the webhook's URL.

        :param webhook_method: The webhook_method of this AutopilotV1AssistantWebhook.
        :type webhook_method: str
        """

        self._webhook_method = webhook_method

    @property
    def webhook_url(self):
        """Gets the webhook_url of this AutopilotV1AssistantWebhook.

        The URL associated with this Webhook.

        :return: The webhook_url of this AutopilotV1AssistantWebhook.
        :rtype: str
        """
        return self._webhook_url

    @webhook_url.setter
    def webhook_url(self, webhook_url):
        """Sets the webhook_url of this AutopilotV1AssistantWebhook.

        The URL associated with this Webhook.

        :param webhook_url: The webhook_url of this AutopilotV1AssistantWebhook.
        :type webhook_url: str
        """

        self._webhook_url = webhook_url
