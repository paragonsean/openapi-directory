# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class AutopilotV1AssistantTaskTaskStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, assistant_sid: str=None, fields_count: int=None, samples_count: int=None, task_sid: str=None, url: str=None):
        """AutopilotV1AssistantTaskTaskStatistics - a model defined in OpenAPI

        :param account_sid: The account_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :param fields_count: The fields_count of this AutopilotV1AssistantTaskTaskStatistics.
        :param samples_count: The samples_count of this AutopilotV1AssistantTaskTaskStatistics.
        :param task_sid: The task_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :param url: The url of this AutopilotV1AssistantTaskTaskStatistics.
        """
        self.openapi_types = {
            'account_sid': str,
            'assistant_sid': str,
            'fields_count': int,
            'samples_count': int,
            'task_sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'assistant_sid': 'assistant_sid',
            'fields_count': 'fields_count',
            'samples_count': 'samples_count',
            'task_sid': 'task_sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._assistant_sid = assistant_sid
        self._fields_count = fields_count
        self._samples_count = samples_count
        self._task_sid = task_sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutopilotV1AssistantTaskTaskStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The autopilot.v1.assistant.task.task_statistics of this AutopilotV1AssistantTaskTaskStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this AutopilotV1AssistantTaskTaskStatistics.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskStatistics resource.

        :return: The account_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this AutopilotV1AssistantTaskTaskStatistics.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskStatistics resource.

        :param account_sid: The account_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def assistant_sid(self):
        """Gets the assistant_sid of this AutopilotV1AssistantTaskTaskStatistics.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the Task associated with the resource.

        :return: The assistant_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :rtype: str
        """
        return self._assistant_sid

    @assistant_sid.setter
    def assistant_sid(self, assistant_sid):
        """Sets the assistant_sid of this AutopilotV1AssistantTaskTaskStatistics.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the Task associated with the resource.

        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :type assistant_sid: str
        """
        if assistant_sid is not None and len(assistant_sid) > 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be less than or equal to `34`")
        if assistant_sid is not None and len(assistant_sid) < 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be greater than or equal to `34`")
        if assistant_sid is not None and not re.search(r'^UA[0-9a-fA-F]{32}$', assistant_sid):
            raise ValueError("Invalid value for `assistant_sid`, must be a follow pattern or equal to `/^UA[0-9a-fA-F]{32}$/`")

        self._assistant_sid = assistant_sid

    @property
    def fields_count(self):
        """Gets the fields_count of this AutopilotV1AssistantTaskTaskStatistics.

        The total number of [Fields](https://www.twilio.com/docs/autopilot/api/task-field) associated with the Task.

        :return: The fields_count of this AutopilotV1AssistantTaskTaskStatistics.
        :rtype: int
        """
        return self._fields_count

    @fields_count.setter
    def fields_count(self, fields_count):
        """Sets the fields_count of this AutopilotV1AssistantTaskTaskStatistics.

        The total number of [Fields](https://www.twilio.com/docs/autopilot/api/task-field) associated with the Task.

        :param fields_count: The fields_count of this AutopilotV1AssistantTaskTaskStatistics.
        :type fields_count: int
        """

        self._fields_count = fields_count

    @property
    def samples_count(self):
        """Gets the samples_count of this AutopilotV1AssistantTaskTaskStatistics.

        The total number of [Samples](https://www.twilio.com/docs/autopilot/api/task-sample) associated with the Task.

        :return: The samples_count of this AutopilotV1AssistantTaskTaskStatistics.
        :rtype: int
        """
        return self._samples_count

    @samples_count.setter
    def samples_count(self, samples_count):
        """Sets the samples_count of this AutopilotV1AssistantTaskTaskStatistics.

        The total number of [Samples](https://www.twilio.com/docs/autopilot/api/task-sample) associated with the Task.

        :param samples_count: The samples_count of this AutopilotV1AssistantTaskTaskStatistics.
        :type samples_count: int
        """

        self._samples_count = samples_count

    @property
    def task_sid(self):
        """Gets the task_sid of this AutopilotV1AssistantTaskTaskStatistics.

        The SID of the [Task](https://www.twilio.com/docs/autopilot/api/task) for which the statistics were collected.

        :return: The task_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :rtype: str
        """
        return self._task_sid

    @task_sid.setter
    def task_sid(self, task_sid):
        """Sets the task_sid of this AutopilotV1AssistantTaskTaskStatistics.

        The SID of the [Task](https://www.twilio.com/docs/autopilot/api/task) for which the statistics were collected.

        :param task_sid: The task_sid of this AutopilotV1AssistantTaskTaskStatistics.
        :type task_sid: str
        """
        if task_sid is not None and len(task_sid) > 34:
            raise ValueError("Invalid value for `task_sid`, length must be less than or equal to `34`")
        if task_sid is not None and len(task_sid) < 34:
            raise ValueError("Invalid value for `task_sid`, length must be greater than or equal to `34`")
        if task_sid is not None and not re.search(r'^UD[0-9a-fA-F]{32}$', task_sid):
            raise ValueError("Invalid value for `task_sid`, must be a follow pattern or equal to `/^UD[0-9a-fA-F]{32}$/`")

        self._task_sid = task_sid

    @property
    def url(self):
        """Gets the url of this AutopilotV1AssistantTaskTaskStatistics.

        The absolute URL of the TaskStatistics resource.

        :return: The url of this AutopilotV1AssistantTaskTaskStatistics.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AutopilotV1AssistantTaskTaskStatistics.

        The absolute URL of the TaskStatistics resource.

        :param url: The url of this AutopilotV1AssistantTaskTaskStatistics.
        :type url: str
        """

        self._url = url
