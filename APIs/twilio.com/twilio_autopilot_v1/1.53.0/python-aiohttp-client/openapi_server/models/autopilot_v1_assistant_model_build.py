# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_build_enum_status import ModelBuildEnumStatus
import re
from openapi_server import util


class AutopilotV1AssistantModelBuild(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, assistant_sid: str=None, build_duration: int=None, date_created: datetime=None, date_updated: datetime=None, error_code: int=None, sid: str=None, status: ModelBuildEnumStatus=None, unique_name: str=None, url: str=None):
        """AutopilotV1AssistantModelBuild - a model defined in OpenAPI

        :param account_sid: The account_sid of this AutopilotV1AssistantModelBuild.
        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantModelBuild.
        :param build_duration: The build_duration of this AutopilotV1AssistantModelBuild.
        :param date_created: The date_created of this AutopilotV1AssistantModelBuild.
        :param date_updated: The date_updated of this AutopilotV1AssistantModelBuild.
        :param error_code: The error_code of this AutopilotV1AssistantModelBuild.
        :param sid: The sid of this AutopilotV1AssistantModelBuild.
        :param status: The status of this AutopilotV1AssistantModelBuild.
        :param unique_name: The unique_name of this AutopilotV1AssistantModelBuild.
        :param url: The url of this AutopilotV1AssistantModelBuild.
        """
        self.openapi_types = {
            'account_sid': str,
            'assistant_sid': str,
            'build_duration': int,
            'date_created': datetime,
            'date_updated': datetime,
            'error_code': int,
            'sid': str,
            'status': ModelBuildEnumStatus,
            'unique_name': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'assistant_sid': 'assistant_sid',
            'build_duration': 'build_duration',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'error_code': 'error_code',
            'sid': 'sid',
            'status': 'status',
            'unique_name': 'unique_name',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._assistant_sid = assistant_sid
        self._build_duration = build_duration
        self._date_created = date_created
        self._date_updated = date_updated
        self._error_code = error_code
        self._sid = sid
        self._status = status
        self._unique_name = unique_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutopilotV1AssistantModelBuild':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The autopilot.v1.assistant.model_build of this AutopilotV1AssistantModelBuild.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this AutopilotV1AssistantModelBuild.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ModelBuild resource.

        :return: The account_sid of this AutopilotV1AssistantModelBuild.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this AutopilotV1AssistantModelBuild.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ModelBuild resource.

        :param account_sid: The account_sid of this AutopilotV1AssistantModelBuild.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def assistant_sid(self):
        """Gets the assistant_sid of this AutopilotV1AssistantModelBuild.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the resource.

        :return: The assistant_sid of this AutopilotV1AssistantModelBuild.
        :rtype: str
        """
        return self._assistant_sid

    @assistant_sid.setter
    def assistant_sid(self, assistant_sid):
        """Sets the assistant_sid of this AutopilotV1AssistantModelBuild.

        The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the resource.

        :param assistant_sid: The assistant_sid of this AutopilotV1AssistantModelBuild.
        :type assistant_sid: str
        """
        if assistant_sid is not None and len(assistant_sid) > 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be less than or equal to `34`")
        if assistant_sid is not None and len(assistant_sid) < 34:
            raise ValueError("Invalid value for `assistant_sid`, length must be greater than or equal to `34`")
        if assistant_sid is not None and not re.search(r'^UA[0-9a-fA-F]{32}$', assistant_sid):
            raise ValueError("Invalid value for `assistant_sid`, must be a follow pattern or equal to `/^UA[0-9a-fA-F]{32}$/`")

        self._assistant_sid = assistant_sid

    @property
    def build_duration(self):
        """Gets the build_duration of this AutopilotV1AssistantModelBuild.

        The time in seconds it took to build the model.

        :return: The build_duration of this AutopilotV1AssistantModelBuild.
        :rtype: int
        """
        return self._build_duration

    @build_duration.setter
    def build_duration(self, build_duration):
        """Sets the build_duration of this AutopilotV1AssistantModelBuild.

        The time in seconds it took to build the model.

        :param build_duration: The build_duration of this AutopilotV1AssistantModelBuild.
        :type build_duration: int
        """

        self._build_duration = build_duration

    @property
    def date_created(self):
        """Gets the date_created of this AutopilotV1AssistantModelBuild.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this AutopilotV1AssistantModelBuild.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this AutopilotV1AssistantModelBuild.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this AutopilotV1AssistantModelBuild.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this AutopilotV1AssistantModelBuild.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this AutopilotV1AssistantModelBuild.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this AutopilotV1AssistantModelBuild.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this AutopilotV1AssistantModelBuild.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def error_code(self):
        """Gets the error_code of this AutopilotV1AssistantModelBuild.

        If the `status` for the model build is `failed`, this value is a code to more information about the failure. This value will be null for all other statuses. See [error code dictionary](https://www.twilio.com/docs/api/errors) for a description of the error.

        :return: The error_code of this AutopilotV1AssistantModelBuild.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this AutopilotV1AssistantModelBuild.

        If the `status` for the model build is `failed`, this value is a code to more information about the failure. This value will be null for all other statuses. See [error code dictionary](https://www.twilio.com/docs/api/errors) for a description of the error.

        :param error_code: The error_code of this AutopilotV1AssistantModelBuild.
        :type error_code: int
        """

        self._error_code = error_code

    @property
    def sid(self):
        """Gets the sid of this AutopilotV1AssistantModelBuild.

        The unique string that we created to identify the ModelBuild resource.

        :return: The sid of this AutopilotV1AssistantModelBuild.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this AutopilotV1AssistantModelBuild.

        The unique string that we created to identify the ModelBuild resource.

        :param sid: The sid of this AutopilotV1AssistantModelBuild.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^UG[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^UG[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this AutopilotV1AssistantModelBuild.


        :return: The status of this AutopilotV1AssistantModelBuild.
        :rtype: ModelBuildEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AutopilotV1AssistantModelBuild.


        :param status: The status of this AutopilotV1AssistantModelBuild.
        :type status: ModelBuildEnumStatus
        """

        self._status = status

    @property
    def unique_name(self):
        """Gets the unique_name of this AutopilotV1AssistantModelBuild.

        An application-defined string that uniquely identifies the resource. It can be used as an alternative to the `sid` in the URL path to address the resource.

        :return: The unique_name of this AutopilotV1AssistantModelBuild.
        :rtype: str
        """
        return self._unique_name

    @unique_name.setter
    def unique_name(self, unique_name):
        """Sets the unique_name of this AutopilotV1AssistantModelBuild.

        An application-defined string that uniquely identifies the resource. It can be used as an alternative to the `sid` in the URL path to address the resource.

        :param unique_name: The unique_name of this AutopilotV1AssistantModelBuild.
        :type unique_name: str
        """

        self._unique_name = unique_name

    @property
    def url(self):
        """Gets the url of this AutopilotV1AssistantModelBuild.

        The absolute URL of the ModelBuild resource.

        :return: The url of this AutopilotV1AssistantModelBuild.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AutopilotV1AssistantModelBuild.

        The absolute URL of the ModelBuild resource.

        :param url: The url of this AutopilotV1AssistantModelBuild.
        :type url: str
        """

        self._url = url
