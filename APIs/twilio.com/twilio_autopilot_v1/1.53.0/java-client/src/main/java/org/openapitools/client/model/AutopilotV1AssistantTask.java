/*
 * Twilio - Autopilot
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AutopilotV1AssistantTask
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:05.212530-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutopilotV1AssistantTask {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ACTIONS_URL = "actions_url";
  @SerializedName(SERIALIZED_NAME_ACTIONS_URL)
  private URI actionsUrl;

  public static final String SERIALIZED_NAME_ASSISTANT_SID = "assistant_sid";
  @SerializedName(SERIALIZED_NAME_ASSISTANT_SID)
  private String assistantSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_UNIQUE_NAME = "unique_name";
  @SerializedName(SERIALIZED_NAME_UNIQUE_NAME)
  private String uniqueName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public AutopilotV1AssistantTask() {
  }

  public AutopilotV1AssistantTask accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Task resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public AutopilotV1AssistantTask actionsUrl(URI actionsUrl) {
    this.actionsUrl = actionsUrl;
    return this;
  }

  /**
   * The URL from which the Assistant can fetch actions.
   * @return actionsUrl
   */
  @javax.annotation.Nullable
  public URI getActionsUrl() {
    return actionsUrl;
  }

  public void setActionsUrl(URI actionsUrl) {
    this.actionsUrl = actionsUrl;
  }


  public AutopilotV1AssistantTask assistantSid(String assistantSid) {
    this.assistantSid = assistantSid;
    return this;
  }

  /**
   * The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the resource.
   * @return assistantSid
   */
  @javax.annotation.Nullable
  public String getAssistantSid() {
    return assistantSid;
  }

  public void setAssistantSid(String assistantSid) {
    this.assistantSid = assistantSid;
  }


  public AutopilotV1AssistantTask dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public AutopilotV1AssistantTask dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public AutopilotV1AssistantTask friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the resource. It is not unique and can be up to 255 characters long.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public AutopilotV1AssistantTask links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * A list of the URLs of related resources.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public AutopilotV1AssistantTask sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Task resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public AutopilotV1AssistantTask uniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
    return this;
  }

  /**
   * An application-defined string that uniquely identifies the resource. It can be used in place of the resource&#39;s &#x60;sid&#x60; in the URL to address the resource.
   * @return uniqueName
   */
  @javax.annotation.Nullable
  public String getUniqueName() {
    return uniqueName;
  }

  public void setUniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
  }


  public AutopilotV1AssistantTask url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Task resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutopilotV1AssistantTask autopilotV1AssistantTask = (AutopilotV1AssistantTask) o;
    return Objects.equals(this.accountSid, autopilotV1AssistantTask.accountSid) &&
        Objects.equals(this.actionsUrl, autopilotV1AssistantTask.actionsUrl) &&
        Objects.equals(this.assistantSid, autopilotV1AssistantTask.assistantSid) &&
        Objects.equals(this.dateCreated, autopilotV1AssistantTask.dateCreated) &&
        Objects.equals(this.dateUpdated, autopilotV1AssistantTask.dateUpdated) &&
        Objects.equals(this.friendlyName, autopilotV1AssistantTask.friendlyName) &&
        Objects.equals(this.links, autopilotV1AssistantTask.links) &&
        Objects.equals(this.sid, autopilotV1AssistantTask.sid) &&
        Objects.equals(this.uniqueName, autopilotV1AssistantTask.uniqueName) &&
        Objects.equals(this.url, autopilotV1AssistantTask.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, actionsUrl, assistantSid, dateCreated, dateUpdated, friendlyName, links, sid, uniqueName, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutopilotV1AssistantTask {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    actionsUrl: ").append(toIndentedString(actionsUrl)).append("\n");
    sb.append("    assistantSid: ").append(toIndentedString(assistantSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    uniqueName: ").append(toIndentedString(uniqueName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("actions_url");
    openapiFields.add("assistant_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("friendly_name");
    openapiFields.add("links");
    openapiFields.add("sid");
    openapiFields.add("unique_name");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutopilotV1AssistantTask
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutopilotV1AssistantTask.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutopilotV1AssistantTask is not found in the empty JSON string", AutopilotV1AssistantTask.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutopilotV1AssistantTask.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutopilotV1AssistantTask` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("actions_url") != null && !jsonObj.get("actions_url").isJsonNull()) && !jsonObj.get("actions_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `actions_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("actions_url").toString()));
      }
      if ((jsonObj.get("assistant_sid") != null && !jsonObj.get("assistant_sid").isJsonNull()) && !jsonObj.get("assistant_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assistant_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assistant_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("unique_name") != null && !jsonObj.get("unique_name").isJsonNull()) && !jsonObj.get("unique_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unique_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unique_name").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutopilotV1AssistantTask.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutopilotV1AssistantTask' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutopilotV1AssistantTask> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutopilotV1AssistantTask.class));

       return (TypeAdapter<T>) new TypeAdapter<AutopilotV1AssistantTask>() {
           @Override
           public void write(JsonWriter out, AutopilotV1AssistantTask value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutopilotV1AssistantTask read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutopilotV1AssistantTask given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutopilotV1AssistantTask
   * @throws IOException if the JSON string is invalid with respect to AutopilotV1AssistantTask
   */
  public static AutopilotV1AssistantTask fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutopilotV1AssistantTask.class);
  }

  /**
   * Convert an instance of AutopilotV1AssistantTask to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

