/*
 * Twilio - Autopilot
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AutopilotV1AssistantFieldTypeFieldValue;
import org.openapitools.client.model.ListFieldValueResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AutopilotV1FieldValueApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AutopilotV1FieldValueApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AutopilotV1FieldValueApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createFieldValue
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the new resource. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value. (required)
     * @param language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: &#x60;en-US&#x60; (required)
     * @param value The Field Value data. (required)
     * @param synonymOf The string value that indicates which word the field value is a synonym of. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createFieldValueCall(String assistantSid, String fieldTypeSid, String language, String value, String synonymOf, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://autopilot.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues"
            .replace("{" + "AssistantSid" + "}", localVarApiClient.escapeString(assistantSid.toString()))
            .replace("{" + "FieldTypeSid" + "}", localVarApiClient.escapeString(fieldTypeSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (language != null) {
            localVarFormParams.put("Language", language);
        }

        if (synonymOf != null) {
            localVarFormParams.put("SynonymOf", synonymOf);
        }

        if (value != null) {
            localVarFormParams.put("Value", value);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createFieldValueValidateBeforeCall(String assistantSid, String fieldTypeSid, String language, String value, String synonymOf, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'assistantSid' is set
        if (assistantSid == null) {
            throw new ApiException("Missing the required parameter 'assistantSid' when calling createFieldValue(Async)");
        }

        // verify the required parameter 'fieldTypeSid' is set
        if (fieldTypeSid == null) {
            throw new ApiException("Missing the required parameter 'fieldTypeSid' when calling createFieldValue(Async)");
        }

        // verify the required parameter 'language' is set
        if (language == null) {
            throw new ApiException("Missing the required parameter 'language' when calling createFieldValue(Async)");
        }

        // verify the required parameter 'value' is set
        if (value == null) {
            throw new ApiException("Missing the required parameter 'value' when calling createFieldValue(Async)");
        }

        return createFieldValueCall(assistantSid, fieldTypeSid, language, value, synonymOf, _callback);

    }

    /**
     * 
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the new resource. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value. (required)
     * @param language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: &#x60;en-US&#x60; (required)
     * @param value The Field Value data. (required)
     * @param synonymOf The string value that indicates which word the field value is a synonym of. (optional)
     * @return AutopilotV1AssistantFieldTypeFieldValue
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public AutopilotV1AssistantFieldTypeFieldValue createFieldValue(String assistantSid, String fieldTypeSid, String language, String value, String synonymOf) throws ApiException {
        ApiResponse<AutopilotV1AssistantFieldTypeFieldValue> localVarResp = createFieldValueWithHttpInfo(assistantSid, fieldTypeSid, language, value, synonymOf);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the new resource. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value. (required)
     * @param language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: &#x60;en-US&#x60; (required)
     * @param value The Field Value data. (required)
     * @param synonymOf The string value that indicates which word the field value is a synonym of. (optional)
     * @return ApiResponse&lt;AutopilotV1AssistantFieldTypeFieldValue&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AutopilotV1AssistantFieldTypeFieldValue> createFieldValueWithHttpInfo(String assistantSid, String fieldTypeSid, String language, String value, String synonymOf) throws ApiException {
        okhttp3.Call localVarCall = createFieldValueValidateBeforeCall(assistantSid, fieldTypeSid, language, value, synonymOf, null);
        Type localVarReturnType = new TypeToken<AutopilotV1AssistantFieldTypeFieldValue>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the new resource. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value. (required)
     * @param language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: &#x60;en-US&#x60; (required)
     * @param value The Field Value data. (required)
     * @param synonymOf The string value that indicates which word the field value is a synonym of. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createFieldValueAsync(String assistantSid, String fieldTypeSid, String language, String value, String synonymOf, final ApiCallback<AutopilotV1AssistantFieldTypeFieldValue> _callback) throws ApiException {

        okhttp3.Call localVarCall = createFieldValueValidateBeforeCall(assistantSid, fieldTypeSid, language, value, synonymOf, _callback);
        Type localVarReturnType = new TypeToken<AutopilotV1AssistantFieldTypeFieldValue>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteFieldValue
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to delete. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to delete. (required)
     * @param sid The Twilio-provided string that uniquely identifies the FieldValue resource to delete. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteFieldValueCall(String assistantSid, String fieldTypeSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://autopilot.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}"
            .replace("{" + "AssistantSid" + "}", localVarApiClient.escapeString(assistantSid.toString()))
            .replace("{" + "FieldTypeSid" + "}", localVarApiClient.escapeString(fieldTypeSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteFieldValueValidateBeforeCall(String assistantSid, String fieldTypeSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'assistantSid' is set
        if (assistantSid == null) {
            throw new ApiException("Missing the required parameter 'assistantSid' when calling deleteFieldValue(Async)");
        }

        // verify the required parameter 'fieldTypeSid' is set
        if (fieldTypeSid == null) {
            throw new ApiException("Missing the required parameter 'fieldTypeSid' when calling deleteFieldValue(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling deleteFieldValue(Async)");
        }

        return deleteFieldValueCall(assistantSid, fieldTypeSid, sid, _callback);

    }

    /**
     * 
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to delete. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to delete. (required)
     * @param sid The Twilio-provided string that uniquely identifies the FieldValue resource to delete. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public void deleteFieldValue(String assistantSid, String fieldTypeSid, String sid) throws ApiException {
        deleteFieldValueWithHttpInfo(assistantSid, fieldTypeSid, sid);
    }

    /**
     * 
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to delete. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to delete. (required)
     * @param sid The Twilio-provided string that uniquely identifies the FieldValue resource to delete. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteFieldValueWithHttpInfo(String assistantSid, String fieldTypeSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = deleteFieldValueValidateBeforeCall(assistantSid, fieldTypeSid, sid, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to delete. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to delete. (required)
     * @param sid The Twilio-provided string that uniquely identifies the FieldValue resource to delete. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteFieldValueAsync(String assistantSid, String fieldTypeSid, String sid, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteFieldValueValidateBeforeCall(assistantSid, fieldTypeSid, sid, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchFieldValue
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resource to fetch. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to fetch. (required)
     * @param sid The Twilio-provided string that uniquely identifies the FieldValue resource to fetch. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchFieldValueCall(String assistantSid, String fieldTypeSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://autopilot.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}"
            .replace("{" + "AssistantSid" + "}", localVarApiClient.escapeString(assistantSid.toString()))
            .replace("{" + "FieldTypeSid" + "}", localVarApiClient.escapeString(fieldTypeSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchFieldValueValidateBeforeCall(String assistantSid, String fieldTypeSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'assistantSid' is set
        if (assistantSid == null) {
            throw new ApiException("Missing the required parameter 'assistantSid' when calling fetchFieldValue(Async)");
        }

        // verify the required parameter 'fieldTypeSid' is set
        if (fieldTypeSid == null) {
            throw new ApiException("Missing the required parameter 'fieldTypeSid' when calling fetchFieldValue(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling fetchFieldValue(Async)");
        }

        return fetchFieldValueCall(assistantSid, fieldTypeSid, sid, _callback);

    }

    /**
     * 
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resource to fetch. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to fetch. (required)
     * @param sid The Twilio-provided string that uniquely identifies the FieldValue resource to fetch. (required)
     * @return AutopilotV1AssistantFieldTypeFieldValue
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public AutopilotV1AssistantFieldTypeFieldValue fetchFieldValue(String assistantSid, String fieldTypeSid, String sid) throws ApiException {
        ApiResponse<AutopilotV1AssistantFieldTypeFieldValue> localVarResp = fetchFieldValueWithHttpInfo(assistantSid, fieldTypeSid, sid);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resource to fetch. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to fetch. (required)
     * @param sid The Twilio-provided string that uniquely identifies the FieldValue resource to fetch. (required)
     * @return ApiResponse&lt;AutopilotV1AssistantFieldTypeFieldValue&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AutopilotV1AssistantFieldTypeFieldValue> fetchFieldValueWithHttpInfo(String assistantSid, String fieldTypeSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = fetchFieldValueValidateBeforeCall(assistantSid, fieldTypeSid, sid, null);
        Type localVarReturnType = new TypeToken<AutopilotV1AssistantFieldTypeFieldValue>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resource to fetch. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to fetch. (required)
     * @param sid The Twilio-provided string that uniquely identifies the FieldValue resource to fetch. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchFieldValueAsync(String assistantSid, String fieldTypeSid, String sid, final ApiCallback<AutopilotV1AssistantFieldTypeFieldValue> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchFieldValueValidateBeforeCall(assistantSid, fieldTypeSid, sid, _callback);
        Type localVarReturnType = new TypeToken<AutopilotV1AssistantFieldTypeFieldValue>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listFieldValue
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to read. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to read. (required)
     * @param language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: &#x60;en-US&#x60; (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listFieldValueCall(String assistantSid, String fieldTypeSid, String language, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://autopilot.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues"
            .replace("{" + "AssistantSid" + "}", localVarApiClient.escapeString(assistantSid.toString()))
            .replace("{" + "FieldTypeSid" + "}", localVarApiClient.escapeString(fieldTypeSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Language", language));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listFieldValueValidateBeforeCall(String assistantSid, String fieldTypeSid, String language, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'assistantSid' is set
        if (assistantSid == null) {
            throw new ApiException("Missing the required parameter 'assistantSid' when calling listFieldValue(Async)");
        }

        // verify the required parameter 'fieldTypeSid' is set
        if (fieldTypeSid == null) {
            throw new ApiException("Missing the required parameter 'fieldTypeSid' when calling listFieldValue(Async)");
        }

        return listFieldValueCall(assistantSid, fieldTypeSid, language, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to read. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to read. (required)
     * @param language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: &#x60;en-US&#x60; (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListFieldValueResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListFieldValueResponse listFieldValue(String assistantSid, String fieldTypeSid, String language, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListFieldValueResponse> localVarResp = listFieldValueWithHttpInfo(assistantSid, fieldTypeSid, language, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to read. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to read. (required)
     * @param language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: &#x60;en-US&#x60; (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListFieldValueResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListFieldValueResponse> listFieldValueWithHttpInfo(String assistantSid, String fieldTypeSid, String language, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listFieldValueValidateBeforeCall(assistantSid, fieldTypeSid, language, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListFieldValueResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param assistantSid The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the resources to read. (required)
     * @param fieldTypeSid The SID of the Field Type associated with the Field Value to read. (required)
     * @param language The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: &#x60;en-US&#x60; (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listFieldValueAsync(String assistantSid, String fieldTypeSid, String language, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListFieldValueResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listFieldValueValidateBeforeCall(assistantSid, fieldTypeSid, language, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListFieldValueResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
