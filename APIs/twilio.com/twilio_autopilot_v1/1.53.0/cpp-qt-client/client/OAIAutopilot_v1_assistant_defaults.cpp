/**
 * Twilio - Autopilot
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutopilot_v1_assistant_defaults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutopilot_v1_assistant_defaults::OAIAutopilot_v1_assistant_defaults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutopilot_v1_assistant_defaults::OAIAutopilot_v1_assistant_defaults() {
    this->initializeModel();
}

OAIAutopilot_v1_assistant_defaults::~OAIAutopilot_v1_assistant_defaults() {}

void OAIAutopilot_v1_assistant_defaults::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_assistant_sid_isSet = false;
    m_assistant_sid_isValid = false;

    m_data_isSet = false;
    m_data_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIAutopilot_v1_assistant_defaults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutopilot_v1_assistant_defaults::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_assistant_sid_isValid = ::OpenAPI::fromJsonValue(m_assistant_sid, json[QString("assistant_sid")]);
    m_assistant_sid_isSet = !json[QString("assistant_sid")].isNull() && m_assistant_sid_isValid;

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIAutopilot_v1_assistant_defaults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutopilot_v1_assistant_defaults::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_assistant_sid_isSet) {
        obj.insert(QString("assistant_sid"), ::OpenAPI::toJsonValue(m_assistant_sid));
    }
    if (m_data_isSet) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIAutopilot_v1_assistant_defaults::getAccountSid() const {
    return m_account_sid;
}
void OAIAutopilot_v1_assistant_defaults::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIAutopilot_v1_assistant_defaults::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIAutopilot_v1_assistant_defaults::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIAutopilot_v1_assistant_defaults::getAssistantSid() const {
    return m_assistant_sid;
}
void OAIAutopilot_v1_assistant_defaults::setAssistantSid(const QString &assistant_sid) {
    m_assistant_sid = assistant_sid;
    m_assistant_sid_isSet = true;
}

bool OAIAutopilot_v1_assistant_defaults::is_assistant_sid_Set() const{
    return m_assistant_sid_isSet;
}

bool OAIAutopilot_v1_assistant_defaults::is_assistant_sid_Valid() const{
    return m_assistant_sid_isValid;
}

QJsonValue OAIAutopilot_v1_assistant_defaults::getData() const {
    return m_data;
}
void OAIAutopilot_v1_assistant_defaults::setData(const QJsonValue &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIAutopilot_v1_assistant_defaults::is_data_Set() const{
    return m_data_isSet;
}

bool OAIAutopilot_v1_assistant_defaults::is_data_Valid() const{
    return m_data_isValid;
}

QString OAIAutopilot_v1_assistant_defaults::getUrl() const {
    return m_url;
}
void OAIAutopilot_v1_assistant_defaults::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAutopilot_v1_assistant_defaults::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAutopilot_v1_assistant_defaults::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIAutopilot_v1_assistant_defaults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assistant_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutopilot_v1_assistant_defaults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
