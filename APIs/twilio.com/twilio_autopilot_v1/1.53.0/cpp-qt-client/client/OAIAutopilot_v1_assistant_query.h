/**
 * Twilio - Autopilot
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutopilot_v1_assistant_query.h
 *
 * 
 */

#ifndef OAIAutopilot_v1_assistant_query_H
#define OAIAutopilot_v1_assistant_query_H

#include <QJsonObject>

#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutopilot_v1_assistant_query : public OAIObject {
public:
    OAIAutopilot_v1_assistant_query();
    OAIAutopilot_v1_assistant_query(QString json);
    ~OAIAutopilot_v1_assistant_query() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getAssistantSid() const;
    void setAssistantSid(const QString &assistant_sid);
    bool is_assistant_sid_Set() const;
    bool is_assistant_sid_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getDialogueSid() const;
    void setDialogueSid(const QString &dialogue_sid);
    bool is_dialogue_sid_Set() const;
    bool is_dialogue_sid_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getModelBuildSid() const;
    void setModelBuildSid(const QString &model_build_sid);
    bool is_model_build_sid_Set() const;
    bool is_model_build_sid_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QJsonValue getResults() const;
    void setResults(const QJsonValue &results);
    bool is_results_Set() const;
    bool is_results_Valid() const;

    QString getSampleSid() const;
    void setSampleSid(const QString &sample_sid);
    bool is_sample_sid_Set() const;
    bool is_sample_sid_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getSourceChannel() const;
    void setSourceChannel(const QString &source_channel);
    bool is_source_channel_Set() const;
    bool is_source_channel_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_assistant_sid;
    bool m_assistant_sid_isSet;
    bool m_assistant_sid_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_dialogue_sid;
    bool m_dialogue_sid_isSet;
    bool m_dialogue_sid_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_model_build_sid;
    bool m_model_build_sid_isSet;
    bool m_model_build_sid_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QJsonValue m_results;
    bool m_results_isSet;
    bool m_results_isValid;

    QString m_sample_sid;
    bool m_sample_sid_isSet;
    bool m_sample_sid_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_source_channel;
    bool m_source_channel_isSet;
    bool m_source_channel_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutopilot_v1_assistant_query)

#endif // OAIAutopilot_v1_assistant_query_H
