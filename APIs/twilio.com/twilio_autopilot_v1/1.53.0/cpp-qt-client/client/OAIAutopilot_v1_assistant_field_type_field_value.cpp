/**
 * Twilio - Autopilot
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutopilot_v1_assistant_field_type_field_value.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutopilot_v1_assistant_field_type_field_value::OAIAutopilot_v1_assistant_field_type_field_value(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutopilot_v1_assistant_field_type_field_value::OAIAutopilot_v1_assistant_field_type_field_value() {
    this->initializeModel();
}

OAIAutopilot_v1_assistant_field_type_field_value::~OAIAutopilot_v1_assistant_field_type_field_value() {}

void OAIAutopilot_v1_assistant_field_type_field_value::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_assistant_sid_isSet = false;
    m_assistant_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_field_type_sid_isSet = false;
    m_field_type_sid_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_synonym_of_isSet = false;
    m_synonym_of_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIAutopilot_v1_assistant_field_type_field_value::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutopilot_v1_assistant_field_type_field_value::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_assistant_sid_isValid = ::OpenAPI::fromJsonValue(m_assistant_sid, json[QString("assistant_sid")]);
    m_assistant_sid_isSet = !json[QString("assistant_sid")].isNull() && m_assistant_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_field_type_sid_isValid = ::OpenAPI::fromJsonValue(m_field_type_sid, json[QString("field_type_sid")]);
    m_field_type_sid_isSet = !json[QString("field_type_sid")].isNull() && m_field_type_sid_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_synonym_of_isValid = ::OpenAPI::fromJsonValue(m_synonym_of, json[QString("synonym_of")]);
    m_synonym_of_isSet = !json[QString("synonym_of")].isNull() && m_synonym_of_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutopilot_v1_assistant_field_type_field_value::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_assistant_sid_isSet) {
        obj.insert(QString("assistant_sid"), ::OpenAPI::toJsonValue(m_assistant_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_field_type_sid_isSet) {
        obj.insert(QString("field_type_sid"), ::OpenAPI::toJsonValue(m_field_type_sid));
    }
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_synonym_of_isSet) {
        obj.insert(QString("synonym_of"), ::OpenAPI::toJsonValue(m_synonym_of));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::getAccountSid() const {
    return m_account_sid;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::getAssistantSid() const {
    return m_assistant_sid;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setAssistantSid(const QString &assistant_sid) {
    m_assistant_sid = assistant_sid;
    m_assistant_sid_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_assistant_sid_Set() const{
    return m_assistant_sid_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_assistant_sid_Valid() const{
    return m_assistant_sid_isValid;
}

QDateTime OAIAutopilot_v1_assistant_field_type_field_value::getDateCreated() const {
    return m_date_created;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIAutopilot_v1_assistant_field_type_field_value::getDateUpdated() const {
    return m_date_updated;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::getFieldTypeSid() const {
    return m_field_type_sid;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setFieldTypeSid(const QString &field_type_sid) {
    m_field_type_sid = field_type_sid;
    m_field_type_sid_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_field_type_sid_Set() const{
    return m_field_type_sid_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_field_type_sid_Valid() const{
    return m_field_type_sid_isValid;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::getLanguage() const {
    return m_language;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_language_Set() const{
    return m_language_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_language_Valid() const{
    return m_language_isValid;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::getSid() const {
    return m_sid;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::getSynonymOf() const {
    return m_synonym_of;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setSynonymOf(const QString &synonym_of) {
    m_synonym_of = synonym_of;
    m_synonym_of_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_synonym_of_Set() const{
    return m_synonym_of_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_synonym_of_Valid() const{
    return m_synonym_of_isValid;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::getUrl() const {
    return m_url;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIAutopilot_v1_assistant_field_type_field_value::getValue() const {
    return m_value;
}
void OAIAutopilot_v1_assistant_field_type_field_value::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_value_Set() const{
    return m_value_isSet;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assistant_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_type_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_synonym_of_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutopilot_v1_assistant_field_type_field_value::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
