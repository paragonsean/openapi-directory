# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_enum_status import ConfigurationEnumStatus
import re
from openapi_server import util


class FlexV1Configuration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, agent_conv_end_methods: object=None, attributes: object=None, call_recording_enabled: bool=None, call_recording_webhook_url: str=None, channel_configs: List[object]=None, chat_service_instance_sid: str=None, citrix_voice_vdi: object=None, crm_attributes: object=None, crm_callback_url: str=None, crm_enabled: bool=None, crm_fallback_url: str=None, crm_type: str=None, date_created: datetime=None, date_updated: datetime=None, debugger_integration: object=None, flex_insights_drilldown: bool=None, flex_insights_hr: object=None, flex_instance_sid: str=None, flex_service_instance_sid: str=None, flex_ui_status_report: object=None, flex_url: str=None, integrations: List[object]=None, markdown: object=None, messaging_service_instance_sid: str=None, notifications: object=None, offline_config: object=None, outbound_call_flows: object=None, plugin_service_attributes: object=None, plugin_service_enabled: bool=None, public_attributes: object=None, queue_stats_configuration: object=None, runtime_domain: str=None, serverless_service_sids: List[str]=None, service_version: str=None, status: ConfigurationEnumStatus=None, taskrouter_offline_activity_sid: str=None, taskrouter_skills: List[object]=None, taskrouter_target_taskqueue_sid: str=None, taskrouter_target_workflow_sid: str=None, taskrouter_taskqueues: List[object]=None, taskrouter_worker_attributes: object=None, taskrouter_worker_channels: object=None, taskrouter_workspace_sid: str=None, ui_attributes: object=None, ui_dependencies: object=None, ui_language: str=None, ui_version: str=None, url: str=None):
        """FlexV1Configuration - a model defined in OpenAPI

        :param account_sid: The account_sid of this FlexV1Configuration.
        :param agent_conv_end_methods: The agent_conv_end_methods of this FlexV1Configuration.
        :param attributes: The attributes of this FlexV1Configuration.
        :param call_recording_enabled: The call_recording_enabled of this FlexV1Configuration.
        :param call_recording_webhook_url: The call_recording_webhook_url of this FlexV1Configuration.
        :param channel_configs: The channel_configs of this FlexV1Configuration.
        :param chat_service_instance_sid: The chat_service_instance_sid of this FlexV1Configuration.
        :param citrix_voice_vdi: The citrix_voice_vdi of this FlexV1Configuration.
        :param crm_attributes: The crm_attributes of this FlexV1Configuration.
        :param crm_callback_url: The crm_callback_url of this FlexV1Configuration.
        :param crm_enabled: The crm_enabled of this FlexV1Configuration.
        :param crm_fallback_url: The crm_fallback_url of this FlexV1Configuration.
        :param crm_type: The crm_type of this FlexV1Configuration.
        :param date_created: The date_created of this FlexV1Configuration.
        :param date_updated: The date_updated of this FlexV1Configuration.
        :param debugger_integration: The debugger_integration of this FlexV1Configuration.
        :param flex_insights_drilldown: The flex_insights_drilldown of this FlexV1Configuration.
        :param flex_insights_hr: The flex_insights_hr of this FlexV1Configuration.
        :param flex_instance_sid: The flex_instance_sid of this FlexV1Configuration.
        :param flex_service_instance_sid: The flex_service_instance_sid of this FlexV1Configuration.
        :param flex_ui_status_report: The flex_ui_status_report of this FlexV1Configuration.
        :param flex_url: The flex_url of this FlexV1Configuration.
        :param integrations: The integrations of this FlexV1Configuration.
        :param markdown: The markdown of this FlexV1Configuration.
        :param messaging_service_instance_sid: The messaging_service_instance_sid of this FlexV1Configuration.
        :param notifications: The notifications of this FlexV1Configuration.
        :param offline_config: The offline_config of this FlexV1Configuration.
        :param outbound_call_flows: The outbound_call_flows of this FlexV1Configuration.
        :param plugin_service_attributes: The plugin_service_attributes of this FlexV1Configuration.
        :param plugin_service_enabled: The plugin_service_enabled of this FlexV1Configuration.
        :param public_attributes: The public_attributes of this FlexV1Configuration.
        :param queue_stats_configuration: The queue_stats_configuration of this FlexV1Configuration.
        :param runtime_domain: The runtime_domain of this FlexV1Configuration.
        :param serverless_service_sids: The serverless_service_sids of this FlexV1Configuration.
        :param service_version: The service_version of this FlexV1Configuration.
        :param status: The status of this FlexV1Configuration.
        :param taskrouter_offline_activity_sid: The taskrouter_offline_activity_sid of this FlexV1Configuration.
        :param taskrouter_skills: The taskrouter_skills of this FlexV1Configuration.
        :param taskrouter_target_taskqueue_sid: The taskrouter_target_taskqueue_sid of this FlexV1Configuration.
        :param taskrouter_target_workflow_sid: The taskrouter_target_workflow_sid of this FlexV1Configuration.
        :param taskrouter_taskqueues: The taskrouter_taskqueues of this FlexV1Configuration.
        :param taskrouter_worker_attributes: The taskrouter_worker_attributes of this FlexV1Configuration.
        :param taskrouter_worker_channels: The taskrouter_worker_channels of this FlexV1Configuration.
        :param taskrouter_workspace_sid: The taskrouter_workspace_sid of this FlexV1Configuration.
        :param ui_attributes: The ui_attributes of this FlexV1Configuration.
        :param ui_dependencies: The ui_dependencies of this FlexV1Configuration.
        :param ui_language: The ui_language of this FlexV1Configuration.
        :param ui_version: The ui_version of this FlexV1Configuration.
        :param url: The url of this FlexV1Configuration.
        """
        self.openapi_types = {
            'account_sid': str,
            'agent_conv_end_methods': object,
            'attributes': object,
            'call_recording_enabled': bool,
            'call_recording_webhook_url': str,
            'channel_configs': List[object],
            'chat_service_instance_sid': str,
            'citrix_voice_vdi': object,
            'crm_attributes': object,
            'crm_callback_url': str,
            'crm_enabled': bool,
            'crm_fallback_url': str,
            'crm_type': str,
            'date_created': datetime,
            'date_updated': datetime,
            'debugger_integration': object,
            'flex_insights_drilldown': bool,
            'flex_insights_hr': object,
            'flex_instance_sid': str,
            'flex_service_instance_sid': str,
            'flex_ui_status_report': object,
            'flex_url': str,
            'integrations': List[object],
            'markdown': object,
            'messaging_service_instance_sid': str,
            'notifications': object,
            'offline_config': object,
            'outbound_call_flows': object,
            'plugin_service_attributes': object,
            'plugin_service_enabled': bool,
            'public_attributes': object,
            'queue_stats_configuration': object,
            'runtime_domain': str,
            'serverless_service_sids': List[str],
            'service_version': str,
            'status': ConfigurationEnumStatus,
            'taskrouter_offline_activity_sid': str,
            'taskrouter_skills': List[object],
            'taskrouter_target_taskqueue_sid': str,
            'taskrouter_target_workflow_sid': str,
            'taskrouter_taskqueues': List[object],
            'taskrouter_worker_attributes': object,
            'taskrouter_worker_channels': object,
            'taskrouter_workspace_sid': str,
            'ui_attributes': object,
            'ui_dependencies': object,
            'ui_language': str,
            'ui_version': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'agent_conv_end_methods': 'agent_conv_end_methods',
            'attributes': 'attributes',
            'call_recording_enabled': 'call_recording_enabled',
            'call_recording_webhook_url': 'call_recording_webhook_url',
            'channel_configs': 'channel_configs',
            'chat_service_instance_sid': 'chat_service_instance_sid',
            'citrix_voice_vdi': 'citrix_voice_vdi',
            'crm_attributes': 'crm_attributes',
            'crm_callback_url': 'crm_callback_url',
            'crm_enabled': 'crm_enabled',
            'crm_fallback_url': 'crm_fallback_url',
            'crm_type': 'crm_type',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'debugger_integration': 'debugger_integration',
            'flex_insights_drilldown': 'flex_insights_drilldown',
            'flex_insights_hr': 'flex_insights_hr',
            'flex_instance_sid': 'flex_instance_sid',
            'flex_service_instance_sid': 'flex_service_instance_sid',
            'flex_ui_status_report': 'flex_ui_status_report',
            'flex_url': 'flex_url',
            'integrations': 'integrations',
            'markdown': 'markdown',
            'messaging_service_instance_sid': 'messaging_service_instance_sid',
            'notifications': 'notifications',
            'offline_config': 'offline_config',
            'outbound_call_flows': 'outbound_call_flows',
            'plugin_service_attributes': 'plugin_service_attributes',
            'plugin_service_enabled': 'plugin_service_enabled',
            'public_attributes': 'public_attributes',
            'queue_stats_configuration': 'queue_stats_configuration',
            'runtime_domain': 'runtime_domain',
            'serverless_service_sids': 'serverless_service_sids',
            'service_version': 'service_version',
            'status': 'status',
            'taskrouter_offline_activity_sid': 'taskrouter_offline_activity_sid',
            'taskrouter_skills': 'taskrouter_skills',
            'taskrouter_target_taskqueue_sid': 'taskrouter_target_taskqueue_sid',
            'taskrouter_target_workflow_sid': 'taskrouter_target_workflow_sid',
            'taskrouter_taskqueues': 'taskrouter_taskqueues',
            'taskrouter_worker_attributes': 'taskrouter_worker_attributes',
            'taskrouter_worker_channels': 'taskrouter_worker_channels',
            'taskrouter_workspace_sid': 'taskrouter_workspace_sid',
            'ui_attributes': 'ui_attributes',
            'ui_dependencies': 'ui_dependencies',
            'ui_language': 'ui_language',
            'ui_version': 'ui_version',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._agent_conv_end_methods = agent_conv_end_methods
        self._attributes = attributes
        self._call_recording_enabled = call_recording_enabled
        self._call_recording_webhook_url = call_recording_webhook_url
        self._channel_configs = channel_configs
        self._chat_service_instance_sid = chat_service_instance_sid
        self._citrix_voice_vdi = citrix_voice_vdi
        self._crm_attributes = crm_attributes
        self._crm_callback_url = crm_callback_url
        self._crm_enabled = crm_enabled
        self._crm_fallback_url = crm_fallback_url
        self._crm_type = crm_type
        self._date_created = date_created
        self._date_updated = date_updated
        self._debugger_integration = debugger_integration
        self._flex_insights_drilldown = flex_insights_drilldown
        self._flex_insights_hr = flex_insights_hr
        self._flex_instance_sid = flex_instance_sid
        self._flex_service_instance_sid = flex_service_instance_sid
        self._flex_ui_status_report = flex_ui_status_report
        self._flex_url = flex_url
        self._integrations = integrations
        self._markdown = markdown
        self._messaging_service_instance_sid = messaging_service_instance_sid
        self._notifications = notifications
        self._offline_config = offline_config
        self._outbound_call_flows = outbound_call_flows
        self._plugin_service_attributes = plugin_service_attributes
        self._plugin_service_enabled = plugin_service_enabled
        self._public_attributes = public_attributes
        self._queue_stats_configuration = queue_stats_configuration
        self._runtime_domain = runtime_domain
        self._serverless_service_sids = serverless_service_sids
        self._service_version = service_version
        self._status = status
        self._taskrouter_offline_activity_sid = taskrouter_offline_activity_sid
        self._taskrouter_skills = taskrouter_skills
        self._taskrouter_target_taskqueue_sid = taskrouter_target_taskqueue_sid
        self._taskrouter_target_workflow_sid = taskrouter_target_workflow_sid
        self._taskrouter_taskqueues = taskrouter_taskqueues
        self._taskrouter_worker_attributes = taskrouter_worker_attributes
        self._taskrouter_worker_channels = taskrouter_worker_channels
        self._taskrouter_workspace_sid = taskrouter_workspace_sid
        self._ui_attributes = ui_attributes
        self._ui_dependencies = ui_dependencies
        self._ui_language = ui_language
        self._ui_version = ui_version
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlexV1Configuration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The flex.v1.configuration of this FlexV1Configuration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this FlexV1Configuration.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Configuration resource.

        :return: The account_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this FlexV1Configuration.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Configuration resource.

        :param account_sid: The account_sid of this FlexV1Configuration.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def agent_conv_end_methods(self):
        """Gets the agent_conv_end_methods of this FlexV1Configuration.

        Agent conversation end methods.

        :return: The agent_conv_end_methods of this FlexV1Configuration.
        :rtype: object
        """
        return self._agent_conv_end_methods

    @agent_conv_end_methods.setter
    def agent_conv_end_methods(self, agent_conv_end_methods):
        """Sets the agent_conv_end_methods of this FlexV1Configuration.

        Agent conversation end methods.

        :param agent_conv_end_methods: The agent_conv_end_methods of this FlexV1Configuration.
        :type agent_conv_end_methods: object
        """

        self._agent_conv_end_methods = agent_conv_end_methods

    @property
    def attributes(self):
        """Gets the attributes of this FlexV1Configuration.

        An object that contains application-specific data.

        :return: The attributes of this FlexV1Configuration.
        :rtype: object
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this FlexV1Configuration.

        An object that contains application-specific data.

        :param attributes: The attributes of this FlexV1Configuration.
        :type attributes: object
        """

        self._attributes = attributes

    @property
    def call_recording_enabled(self):
        """Gets the call_recording_enabled of this FlexV1Configuration.

        Whether call recording is enabled.

        :return: The call_recording_enabled of this FlexV1Configuration.
        :rtype: bool
        """
        return self._call_recording_enabled

    @call_recording_enabled.setter
    def call_recording_enabled(self, call_recording_enabled):
        """Sets the call_recording_enabled of this FlexV1Configuration.

        Whether call recording is enabled.

        :param call_recording_enabled: The call_recording_enabled of this FlexV1Configuration.
        :type call_recording_enabled: bool
        """

        self._call_recording_enabled = call_recording_enabled

    @property
    def call_recording_webhook_url(self):
        """Gets the call_recording_webhook_url of this FlexV1Configuration.

        The call recording webhook URL.

        :return: The call_recording_webhook_url of this FlexV1Configuration.
        :rtype: str
        """
        return self._call_recording_webhook_url

    @call_recording_webhook_url.setter
    def call_recording_webhook_url(self, call_recording_webhook_url):
        """Sets the call_recording_webhook_url of this FlexV1Configuration.

        The call recording webhook URL.

        :param call_recording_webhook_url: The call_recording_webhook_url of this FlexV1Configuration.
        :type call_recording_webhook_url: str
        """

        self._call_recording_webhook_url = call_recording_webhook_url

    @property
    def channel_configs(self):
        """Gets the channel_configs of this FlexV1Configuration.

        Settings for different limits for Flex Conversations channels attachments.

        :return: The channel_configs of this FlexV1Configuration.
        :rtype: List[object]
        """
        return self._channel_configs

    @channel_configs.setter
    def channel_configs(self, channel_configs):
        """Sets the channel_configs of this FlexV1Configuration.

        Settings for different limits for Flex Conversations channels attachments.

        :param channel_configs: The channel_configs of this FlexV1Configuration.
        :type channel_configs: List[object]
        """

        self._channel_configs = channel_configs

    @property
    def chat_service_instance_sid(self):
        """Gets the chat_service_instance_sid of this FlexV1Configuration.

        The SID of the chat service this user belongs to.

        :return: The chat_service_instance_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._chat_service_instance_sid

    @chat_service_instance_sid.setter
    def chat_service_instance_sid(self, chat_service_instance_sid):
        """Sets the chat_service_instance_sid of this FlexV1Configuration.

        The SID of the chat service this user belongs to.

        :param chat_service_instance_sid: The chat_service_instance_sid of this FlexV1Configuration.
        :type chat_service_instance_sid: str
        """
        if chat_service_instance_sid is not None and len(chat_service_instance_sid) > 34:
            raise ValueError("Invalid value for `chat_service_instance_sid`, length must be less than or equal to `34`")
        if chat_service_instance_sid is not None and len(chat_service_instance_sid) < 34:
            raise ValueError("Invalid value for `chat_service_instance_sid`, length must be greater than or equal to `34`")
        if chat_service_instance_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_service_instance_sid):
            raise ValueError("Invalid value for `chat_service_instance_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_service_instance_sid = chat_service_instance_sid

    @property
    def citrix_voice_vdi(self):
        """Gets the citrix_voice_vdi of this FlexV1Configuration.

        Citrix voice vdi configuration and settings.

        :return: The citrix_voice_vdi of this FlexV1Configuration.
        :rtype: object
        """
        return self._citrix_voice_vdi

    @citrix_voice_vdi.setter
    def citrix_voice_vdi(self, citrix_voice_vdi):
        """Sets the citrix_voice_vdi of this FlexV1Configuration.

        Citrix voice vdi configuration and settings.

        :param citrix_voice_vdi: The citrix_voice_vdi of this FlexV1Configuration.
        :type citrix_voice_vdi: object
        """

        self._citrix_voice_vdi = citrix_voice_vdi

    @property
    def crm_attributes(self):
        """Gets the crm_attributes of this FlexV1Configuration.

        An object that contains the CRM attributes.

        :return: The crm_attributes of this FlexV1Configuration.
        :rtype: object
        """
        return self._crm_attributes

    @crm_attributes.setter
    def crm_attributes(self, crm_attributes):
        """Sets the crm_attributes of this FlexV1Configuration.

        An object that contains the CRM attributes.

        :param crm_attributes: The crm_attributes of this FlexV1Configuration.
        :type crm_attributes: object
        """

        self._crm_attributes = crm_attributes

    @property
    def crm_callback_url(self):
        """Gets the crm_callback_url of this FlexV1Configuration.

        The CRM Callback URL.

        :return: The crm_callback_url of this FlexV1Configuration.
        :rtype: str
        """
        return self._crm_callback_url

    @crm_callback_url.setter
    def crm_callback_url(self, crm_callback_url):
        """Sets the crm_callback_url of this FlexV1Configuration.

        The CRM Callback URL.

        :param crm_callback_url: The crm_callback_url of this FlexV1Configuration.
        :type crm_callback_url: str
        """

        self._crm_callback_url = crm_callback_url

    @property
    def crm_enabled(self):
        """Gets the crm_enabled of this FlexV1Configuration.

        Whether CRM is present for Flex.

        :return: The crm_enabled of this FlexV1Configuration.
        :rtype: bool
        """
        return self._crm_enabled

    @crm_enabled.setter
    def crm_enabled(self, crm_enabled):
        """Sets the crm_enabled of this FlexV1Configuration.

        Whether CRM is present for Flex.

        :param crm_enabled: The crm_enabled of this FlexV1Configuration.
        :type crm_enabled: bool
        """

        self._crm_enabled = crm_enabled

    @property
    def crm_fallback_url(self):
        """Gets the crm_fallback_url of this FlexV1Configuration.

        The CRM Fallback URL.

        :return: The crm_fallback_url of this FlexV1Configuration.
        :rtype: str
        """
        return self._crm_fallback_url

    @crm_fallback_url.setter
    def crm_fallback_url(self, crm_fallback_url):
        """Sets the crm_fallback_url of this FlexV1Configuration.

        The CRM Fallback URL.

        :param crm_fallback_url: The crm_fallback_url of this FlexV1Configuration.
        :type crm_fallback_url: str
        """

        self._crm_fallback_url = crm_fallback_url

    @property
    def crm_type(self):
        """Gets the crm_type of this FlexV1Configuration.

        The CRM type.

        :return: The crm_type of this FlexV1Configuration.
        :rtype: str
        """
        return self._crm_type

    @crm_type.setter
    def crm_type(self, crm_type):
        """Sets the crm_type of this FlexV1Configuration.

        The CRM type.

        :param crm_type: The crm_type of this FlexV1Configuration.
        :type crm_type: str
        """

        self._crm_type = crm_type

    @property
    def date_created(self):
        """Gets the date_created of this FlexV1Configuration.

        The date and time in GMT when the Configuration resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this FlexV1Configuration.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this FlexV1Configuration.

        The date and time in GMT when the Configuration resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this FlexV1Configuration.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this FlexV1Configuration.

        The date and time in GMT when the Configuration resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this FlexV1Configuration.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this FlexV1Configuration.

        The date and time in GMT when the Configuration resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this FlexV1Configuration.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def debugger_integration(self):
        """Gets the debugger_integration of this FlexV1Configuration.

        Configurable parameters for Debugger Integration.

        :return: The debugger_integration of this FlexV1Configuration.
        :rtype: object
        """
        return self._debugger_integration

    @debugger_integration.setter
    def debugger_integration(self, debugger_integration):
        """Sets the debugger_integration of this FlexV1Configuration.

        Configurable parameters for Debugger Integration.

        :param debugger_integration: The debugger_integration of this FlexV1Configuration.
        :type debugger_integration: object
        """

        self._debugger_integration = debugger_integration

    @property
    def flex_insights_drilldown(self):
        """Gets the flex_insights_drilldown of this FlexV1Configuration.

        Setting this to true will redirect Flex UI to the URL set in flex_url

        :return: The flex_insights_drilldown of this FlexV1Configuration.
        :rtype: bool
        """
        return self._flex_insights_drilldown

    @flex_insights_drilldown.setter
    def flex_insights_drilldown(self, flex_insights_drilldown):
        """Sets the flex_insights_drilldown of this FlexV1Configuration.

        Setting this to true will redirect Flex UI to the URL set in flex_url

        :param flex_insights_drilldown: The flex_insights_drilldown of this FlexV1Configuration.
        :type flex_insights_drilldown: bool
        """

        self._flex_insights_drilldown = flex_insights_drilldown

    @property
    def flex_insights_hr(self):
        """Gets the flex_insights_hr of this FlexV1Configuration.

        Object with enabled/disabled flag with list of workspaces.

        :return: The flex_insights_hr of this FlexV1Configuration.
        :rtype: object
        """
        return self._flex_insights_hr

    @flex_insights_hr.setter
    def flex_insights_hr(self, flex_insights_hr):
        """Sets the flex_insights_hr of this FlexV1Configuration.

        Object with enabled/disabled flag with list of workspaces.

        :param flex_insights_hr: The flex_insights_hr of this FlexV1Configuration.
        :type flex_insights_hr: object
        """

        self._flex_insights_hr = flex_insights_hr

    @property
    def flex_instance_sid(self):
        """Gets the flex_instance_sid of this FlexV1Configuration.

        The SID of the Flex instance.

        :return: The flex_instance_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._flex_instance_sid

    @flex_instance_sid.setter
    def flex_instance_sid(self, flex_instance_sid):
        """Sets the flex_instance_sid of this FlexV1Configuration.

        The SID of the Flex instance.

        :param flex_instance_sid: The flex_instance_sid of this FlexV1Configuration.
        :type flex_instance_sid: str
        """
        if flex_instance_sid is not None and len(flex_instance_sid) > 34:
            raise ValueError("Invalid value for `flex_instance_sid`, length must be less than or equal to `34`")
        if flex_instance_sid is not None and len(flex_instance_sid) < 34:
            raise ValueError("Invalid value for `flex_instance_sid`, length must be greater than or equal to `34`")
        if flex_instance_sid is not None and not re.search(r'^GO[0-9a-fA-F]{32}$', flex_instance_sid):
            raise ValueError("Invalid value for `flex_instance_sid`, must be a follow pattern or equal to `/^GO[0-9a-fA-F]{32}$/`")

        self._flex_instance_sid = flex_instance_sid

    @property
    def flex_service_instance_sid(self):
        """Gets the flex_service_instance_sid of this FlexV1Configuration.

        The SID of the Flex service instance.

        :return: The flex_service_instance_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._flex_service_instance_sid

    @flex_service_instance_sid.setter
    def flex_service_instance_sid(self, flex_service_instance_sid):
        """Sets the flex_service_instance_sid of this FlexV1Configuration.

        The SID of the Flex service instance.

        :param flex_service_instance_sid: The flex_service_instance_sid of this FlexV1Configuration.
        :type flex_service_instance_sid: str
        """
        if flex_service_instance_sid is not None and len(flex_service_instance_sid) > 34:
            raise ValueError("Invalid value for `flex_service_instance_sid`, length must be less than or equal to `34`")
        if flex_service_instance_sid is not None and len(flex_service_instance_sid) < 34:
            raise ValueError("Invalid value for `flex_service_instance_sid`, length must be greater than or equal to `34`")
        if flex_service_instance_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', flex_service_instance_sid):
            raise ValueError("Invalid value for `flex_service_instance_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._flex_service_instance_sid = flex_service_instance_sid

    @property
    def flex_ui_status_report(self):
        """Gets the flex_ui_status_report of this FlexV1Configuration.

        Configurable parameters for Flex UI Status report.

        :return: The flex_ui_status_report of this FlexV1Configuration.
        :rtype: object
        """
        return self._flex_ui_status_report

    @flex_ui_status_report.setter
    def flex_ui_status_report(self, flex_ui_status_report):
        """Sets the flex_ui_status_report of this FlexV1Configuration.

        Configurable parameters for Flex UI Status report.

        :param flex_ui_status_report: The flex_ui_status_report of this FlexV1Configuration.
        :type flex_ui_status_report: object
        """

        self._flex_ui_status_report = flex_ui_status_report

    @property
    def flex_url(self):
        """Gets the flex_url of this FlexV1Configuration.

        URL to redirect to in case drilldown is enabled.

        :return: The flex_url of this FlexV1Configuration.
        :rtype: str
        """
        return self._flex_url

    @flex_url.setter
    def flex_url(self, flex_url):
        """Sets the flex_url of this FlexV1Configuration.

        URL to redirect to in case drilldown is enabled.

        :param flex_url: The flex_url of this FlexV1Configuration.
        :type flex_url: str
        """

        self._flex_url = flex_url

    @property
    def integrations(self):
        """Gets the integrations of this FlexV1Configuration.

        A list of objects that contain the configurations for the Integrations supported in this configuration.

        :return: The integrations of this FlexV1Configuration.
        :rtype: List[object]
        """
        return self._integrations

    @integrations.setter
    def integrations(self, integrations):
        """Sets the integrations of this FlexV1Configuration.

        A list of objects that contain the configurations for the Integrations supported in this configuration.

        :param integrations: The integrations of this FlexV1Configuration.
        :type integrations: List[object]
        """

        self._integrations = integrations

    @property
    def markdown(self):
        """Gets the markdown of this FlexV1Configuration.

        Configurable parameters for Markdown.

        :return: The markdown of this FlexV1Configuration.
        :rtype: object
        """
        return self._markdown

    @markdown.setter
    def markdown(self, markdown):
        """Sets the markdown of this FlexV1Configuration.

        Configurable parameters for Markdown.

        :param markdown: The markdown of this FlexV1Configuration.
        :type markdown: object
        """

        self._markdown = markdown

    @property
    def messaging_service_instance_sid(self):
        """Gets the messaging_service_instance_sid of this FlexV1Configuration.

        The SID of the Messaging service instance.

        :return: The messaging_service_instance_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._messaging_service_instance_sid

    @messaging_service_instance_sid.setter
    def messaging_service_instance_sid(self, messaging_service_instance_sid):
        """Sets the messaging_service_instance_sid of this FlexV1Configuration.

        The SID of the Messaging service instance.

        :param messaging_service_instance_sid: The messaging_service_instance_sid of this FlexV1Configuration.
        :type messaging_service_instance_sid: str
        """
        if messaging_service_instance_sid is not None and len(messaging_service_instance_sid) > 34:
            raise ValueError("Invalid value for `messaging_service_instance_sid`, length must be less than or equal to `34`")
        if messaging_service_instance_sid is not None and len(messaging_service_instance_sid) < 34:
            raise ValueError("Invalid value for `messaging_service_instance_sid`, length must be greater than or equal to `34`")
        if messaging_service_instance_sid is not None and not re.search(r'^MG[0-9a-fA-F]{32}$', messaging_service_instance_sid):
            raise ValueError("Invalid value for `messaging_service_instance_sid`, must be a follow pattern or equal to `/^MG[0-9a-fA-F]{32}$/`")

        self._messaging_service_instance_sid = messaging_service_instance_sid

    @property
    def notifications(self):
        """Gets the notifications of this FlexV1Configuration.

        Configurable parameters for Notifications.

        :return: The notifications of this FlexV1Configuration.
        :rtype: object
        """
        return self._notifications

    @notifications.setter
    def notifications(self, notifications):
        """Sets the notifications of this FlexV1Configuration.

        Configurable parameters for Notifications.

        :param notifications: The notifications of this FlexV1Configuration.
        :type notifications: object
        """

        self._notifications = notifications

    @property
    def offline_config(self):
        """Gets the offline_config of this FlexV1Configuration.

        Presence and presence ttl configuration

        :return: The offline_config of this FlexV1Configuration.
        :rtype: object
        """
        return self._offline_config

    @offline_config.setter
    def offline_config(self, offline_config):
        """Sets the offline_config of this FlexV1Configuration.

        Presence and presence ttl configuration

        :param offline_config: The offline_config of this FlexV1Configuration.
        :type offline_config: object
        """

        self._offline_config = offline_config

    @property
    def outbound_call_flows(self):
        """Gets the outbound_call_flows of this FlexV1Configuration.

        The list of outbound call flows.

        :return: The outbound_call_flows of this FlexV1Configuration.
        :rtype: object
        """
        return self._outbound_call_flows

    @outbound_call_flows.setter
    def outbound_call_flows(self, outbound_call_flows):
        """Sets the outbound_call_flows of this FlexV1Configuration.

        The list of outbound call flows.

        :param outbound_call_flows: The outbound_call_flows of this FlexV1Configuration.
        :type outbound_call_flows: object
        """

        self._outbound_call_flows = outbound_call_flows

    @property
    def plugin_service_attributes(self):
        """Gets the plugin_service_attributes of this FlexV1Configuration.

        The plugin service attributes.

        :return: The plugin_service_attributes of this FlexV1Configuration.
        :rtype: object
        """
        return self._plugin_service_attributes

    @plugin_service_attributes.setter
    def plugin_service_attributes(self, plugin_service_attributes):
        """Sets the plugin_service_attributes of this FlexV1Configuration.

        The plugin service attributes.

        :param plugin_service_attributes: The plugin_service_attributes of this FlexV1Configuration.
        :type plugin_service_attributes: object
        """

        self._plugin_service_attributes = plugin_service_attributes

    @property
    def plugin_service_enabled(self):
        """Gets the plugin_service_enabled of this FlexV1Configuration.

        Whether the plugin service enabled.

        :return: The plugin_service_enabled of this FlexV1Configuration.
        :rtype: bool
        """
        return self._plugin_service_enabled

    @plugin_service_enabled.setter
    def plugin_service_enabled(self, plugin_service_enabled):
        """Sets the plugin_service_enabled of this FlexV1Configuration.

        Whether the plugin service enabled.

        :param plugin_service_enabled: The plugin_service_enabled of this FlexV1Configuration.
        :type plugin_service_enabled: bool
        """

        self._plugin_service_enabled = plugin_service_enabled

    @property
    def public_attributes(self):
        """Gets the public_attributes of this FlexV1Configuration.

        The list of public attributes, which are visible to unauthenticated clients.

        :return: The public_attributes of this FlexV1Configuration.
        :rtype: object
        """
        return self._public_attributes

    @public_attributes.setter
    def public_attributes(self, public_attributes):
        """Sets the public_attributes of this FlexV1Configuration.

        The list of public attributes, which are visible to unauthenticated clients.

        :param public_attributes: The public_attributes of this FlexV1Configuration.
        :type public_attributes: object
        """

        self._public_attributes = public_attributes

    @property
    def queue_stats_configuration(self):
        """Gets the queue_stats_configuration of this FlexV1Configuration.

        Configurable parameters for Queues Statistics.

        :return: The queue_stats_configuration of this FlexV1Configuration.
        :rtype: object
        """
        return self._queue_stats_configuration

    @queue_stats_configuration.setter
    def queue_stats_configuration(self, queue_stats_configuration):
        """Sets the queue_stats_configuration of this FlexV1Configuration.

        Configurable parameters for Queues Statistics.

        :param queue_stats_configuration: The queue_stats_configuration of this FlexV1Configuration.
        :type queue_stats_configuration: object
        """

        self._queue_stats_configuration = queue_stats_configuration

    @property
    def runtime_domain(self):
        """Gets the runtime_domain of this FlexV1Configuration.

        The URL where the Flex instance is hosted.

        :return: The runtime_domain of this FlexV1Configuration.
        :rtype: str
        """
        return self._runtime_domain

    @runtime_domain.setter
    def runtime_domain(self, runtime_domain):
        """Sets the runtime_domain of this FlexV1Configuration.

        The URL where the Flex instance is hosted.

        :param runtime_domain: The runtime_domain of this FlexV1Configuration.
        :type runtime_domain: str
        """

        self._runtime_domain = runtime_domain

    @property
    def serverless_service_sids(self):
        """Gets the serverless_service_sids of this FlexV1Configuration.

        The list of serverless service SIDs.

        :return: The serverless_service_sids of this FlexV1Configuration.
        :rtype: List[str]
        """
        return self._serverless_service_sids

    @serverless_service_sids.setter
    def serverless_service_sids(self, serverless_service_sids):
        """Sets the serverless_service_sids of this FlexV1Configuration.

        The list of serverless service SIDs.

        :param serverless_service_sids: The serverless_service_sids of this FlexV1Configuration.
        :type serverless_service_sids: List[str]
        """

        self._serverless_service_sids = serverless_service_sids

    @property
    def service_version(self):
        """Gets the service_version of this FlexV1Configuration.

        The Flex Service version.

        :return: The service_version of this FlexV1Configuration.
        :rtype: str
        """
        return self._service_version

    @service_version.setter
    def service_version(self, service_version):
        """Sets the service_version of this FlexV1Configuration.

        The Flex Service version.

        :param service_version: The service_version of this FlexV1Configuration.
        :type service_version: str
        """

        self._service_version = service_version

    @property
    def status(self):
        """Gets the status of this FlexV1Configuration.


        :return: The status of this FlexV1Configuration.
        :rtype: ConfigurationEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FlexV1Configuration.


        :param status: The status of this FlexV1Configuration.
        :type status: ConfigurationEnumStatus
        """

        self._status = status

    @property
    def taskrouter_offline_activity_sid(self):
        """Gets the taskrouter_offline_activity_sid of this FlexV1Configuration.

        The TaskRouter SID of the offline activity.

        :return: The taskrouter_offline_activity_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._taskrouter_offline_activity_sid

    @taskrouter_offline_activity_sid.setter
    def taskrouter_offline_activity_sid(self, taskrouter_offline_activity_sid):
        """Sets the taskrouter_offline_activity_sid of this FlexV1Configuration.

        The TaskRouter SID of the offline activity.

        :param taskrouter_offline_activity_sid: The taskrouter_offline_activity_sid of this FlexV1Configuration.
        :type taskrouter_offline_activity_sid: str
        """
        if taskrouter_offline_activity_sid is not None and len(taskrouter_offline_activity_sid) > 34:
            raise ValueError("Invalid value for `taskrouter_offline_activity_sid`, length must be less than or equal to `34`")
        if taskrouter_offline_activity_sid is not None and len(taskrouter_offline_activity_sid) < 34:
            raise ValueError("Invalid value for `taskrouter_offline_activity_sid`, length must be greater than or equal to `34`")
        if taskrouter_offline_activity_sid is not None and not re.search(r'^WA[0-9a-fA-F]{32}$', taskrouter_offline_activity_sid):
            raise ValueError("Invalid value for `taskrouter_offline_activity_sid`, must be a follow pattern or equal to `/^WA[0-9a-fA-F]{32}$/`")

        self._taskrouter_offline_activity_sid = taskrouter_offline_activity_sid

    @property
    def taskrouter_skills(self):
        """Gets the taskrouter_skills of this FlexV1Configuration.

        The Skill description for TaskRouter workers.

        :return: The taskrouter_skills of this FlexV1Configuration.
        :rtype: List[object]
        """
        return self._taskrouter_skills

    @taskrouter_skills.setter
    def taskrouter_skills(self, taskrouter_skills):
        """Sets the taskrouter_skills of this FlexV1Configuration.

        The Skill description for TaskRouter workers.

        :param taskrouter_skills: The taskrouter_skills of this FlexV1Configuration.
        :type taskrouter_skills: List[object]
        """

        self._taskrouter_skills = taskrouter_skills

    @property
    def taskrouter_target_taskqueue_sid(self):
        """Gets the taskrouter_target_taskqueue_sid of this FlexV1Configuration.

        The SID of the TaskRouter Target TaskQueue.

        :return: The taskrouter_target_taskqueue_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._taskrouter_target_taskqueue_sid

    @taskrouter_target_taskqueue_sid.setter
    def taskrouter_target_taskqueue_sid(self, taskrouter_target_taskqueue_sid):
        """Sets the taskrouter_target_taskqueue_sid of this FlexV1Configuration.

        The SID of the TaskRouter Target TaskQueue.

        :param taskrouter_target_taskqueue_sid: The taskrouter_target_taskqueue_sid of this FlexV1Configuration.
        :type taskrouter_target_taskqueue_sid: str
        """
        if taskrouter_target_taskqueue_sid is not None and len(taskrouter_target_taskqueue_sid) > 34:
            raise ValueError("Invalid value for `taskrouter_target_taskqueue_sid`, length must be less than or equal to `34`")
        if taskrouter_target_taskqueue_sid is not None and len(taskrouter_target_taskqueue_sid) < 34:
            raise ValueError("Invalid value for `taskrouter_target_taskqueue_sid`, length must be greater than or equal to `34`")
        if taskrouter_target_taskqueue_sid is not None and not re.search(r'^WQ[0-9a-fA-F]{32}$', taskrouter_target_taskqueue_sid):
            raise ValueError("Invalid value for `taskrouter_target_taskqueue_sid`, must be a follow pattern or equal to `/^WQ[0-9a-fA-F]{32}$/`")

        self._taskrouter_target_taskqueue_sid = taskrouter_target_taskqueue_sid

    @property
    def taskrouter_target_workflow_sid(self):
        """Gets the taskrouter_target_workflow_sid of this FlexV1Configuration.

        The SID of the TaskRouter target Workflow.

        :return: The taskrouter_target_workflow_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._taskrouter_target_workflow_sid

    @taskrouter_target_workflow_sid.setter
    def taskrouter_target_workflow_sid(self, taskrouter_target_workflow_sid):
        """Sets the taskrouter_target_workflow_sid of this FlexV1Configuration.

        The SID of the TaskRouter target Workflow.

        :param taskrouter_target_workflow_sid: The taskrouter_target_workflow_sid of this FlexV1Configuration.
        :type taskrouter_target_workflow_sid: str
        """
        if taskrouter_target_workflow_sid is not None and len(taskrouter_target_workflow_sid) > 34:
            raise ValueError("Invalid value for `taskrouter_target_workflow_sid`, length must be less than or equal to `34`")
        if taskrouter_target_workflow_sid is not None and len(taskrouter_target_workflow_sid) < 34:
            raise ValueError("Invalid value for `taskrouter_target_workflow_sid`, length must be greater than or equal to `34`")
        if taskrouter_target_workflow_sid is not None and not re.search(r'^WW[0-9a-fA-F]{32}$', taskrouter_target_workflow_sid):
            raise ValueError("Invalid value for `taskrouter_target_workflow_sid`, must be a follow pattern or equal to `/^WW[0-9a-fA-F]{32}$/`")

        self._taskrouter_target_workflow_sid = taskrouter_target_workflow_sid

    @property
    def taskrouter_taskqueues(self):
        """Gets the taskrouter_taskqueues of this FlexV1Configuration.

        The list of TaskRouter TaskQueues.

        :return: The taskrouter_taskqueues of this FlexV1Configuration.
        :rtype: List[object]
        """
        return self._taskrouter_taskqueues

    @taskrouter_taskqueues.setter
    def taskrouter_taskqueues(self, taskrouter_taskqueues):
        """Sets the taskrouter_taskqueues of this FlexV1Configuration.

        The list of TaskRouter TaskQueues.

        :param taskrouter_taskqueues: The taskrouter_taskqueues of this FlexV1Configuration.
        :type taskrouter_taskqueues: List[object]
        """

        self._taskrouter_taskqueues = taskrouter_taskqueues

    @property
    def taskrouter_worker_attributes(self):
        """Gets the taskrouter_worker_attributes of this FlexV1Configuration.

        The TaskRouter Worker attributes.

        :return: The taskrouter_worker_attributes of this FlexV1Configuration.
        :rtype: object
        """
        return self._taskrouter_worker_attributes

    @taskrouter_worker_attributes.setter
    def taskrouter_worker_attributes(self, taskrouter_worker_attributes):
        """Sets the taskrouter_worker_attributes of this FlexV1Configuration.

        The TaskRouter Worker attributes.

        :param taskrouter_worker_attributes: The taskrouter_worker_attributes of this FlexV1Configuration.
        :type taskrouter_worker_attributes: object
        """

        self._taskrouter_worker_attributes = taskrouter_worker_attributes

    @property
    def taskrouter_worker_channels(self):
        """Gets the taskrouter_worker_channels of this FlexV1Configuration.

        The TaskRouter default channel capacities and availability for workers.

        :return: The taskrouter_worker_channels of this FlexV1Configuration.
        :rtype: object
        """
        return self._taskrouter_worker_channels

    @taskrouter_worker_channels.setter
    def taskrouter_worker_channels(self, taskrouter_worker_channels):
        """Sets the taskrouter_worker_channels of this FlexV1Configuration.

        The TaskRouter default channel capacities and availability for workers.

        :param taskrouter_worker_channels: The taskrouter_worker_channels of this FlexV1Configuration.
        :type taskrouter_worker_channels: object
        """

        self._taskrouter_worker_channels = taskrouter_worker_channels

    @property
    def taskrouter_workspace_sid(self):
        """Gets the taskrouter_workspace_sid of this FlexV1Configuration.

        The SID of the TaskRouter Workspace.

        :return: The taskrouter_workspace_sid of this FlexV1Configuration.
        :rtype: str
        """
        return self._taskrouter_workspace_sid

    @taskrouter_workspace_sid.setter
    def taskrouter_workspace_sid(self, taskrouter_workspace_sid):
        """Sets the taskrouter_workspace_sid of this FlexV1Configuration.

        The SID of the TaskRouter Workspace.

        :param taskrouter_workspace_sid: The taskrouter_workspace_sid of this FlexV1Configuration.
        :type taskrouter_workspace_sid: str
        """
        if taskrouter_workspace_sid is not None and len(taskrouter_workspace_sid) > 34:
            raise ValueError("Invalid value for `taskrouter_workspace_sid`, length must be less than or equal to `34`")
        if taskrouter_workspace_sid is not None and len(taskrouter_workspace_sid) < 34:
            raise ValueError("Invalid value for `taskrouter_workspace_sid`, length must be greater than or equal to `34`")
        if taskrouter_workspace_sid is not None and not re.search(r'^WS[0-9a-fA-F]{32}$', taskrouter_workspace_sid):
            raise ValueError("Invalid value for `taskrouter_workspace_sid`, must be a follow pattern or equal to `/^WS[0-9a-fA-F]{32}$/`")

        self._taskrouter_workspace_sid = taskrouter_workspace_sid

    @property
    def ui_attributes(self):
        """Gets the ui_attributes of this FlexV1Configuration.

        The object that describes Flex UI characteristics and settings.

        :return: The ui_attributes of this FlexV1Configuration.
        :rtype: object
        """
        return self._ui_attributes

    @ui_attributes.setter
    def ui_attributes(self, ui_attributes):
        """Sets the ui_attributes of this FlexV1Configuration.

        The object that describes Flex UI characteristics and settings.

        :param ui_attributes: The ui_attributes of this FlexV1Configuration.
        :type ui_attributes: object
        """

        self._ui_attributes = ui_attributes

    @property
    def ui_dependencies(self):
        """Gets the ui_dependencies of this FlexV1Configuration.

        The object that defines the NPM packages and versions to be used in Hosted Flex.

        :return: The ui_dependencies of this FlexV1Configuration.
        :rtype: object
        """
        return self._ui_dependencies

    @ui_dependencies.setter
    def ui_dependencies(self, ui_dependencies):
        """Sets the ui_dependencies of this FlexV1Configuration.

        The object that defines the NPM packages and versions to be used in Hosted Flex.

        :param ui_dependencies: The ui_dependencies of this FlexV1Configuration.
        :type ui_dependencies: object
        """

        self._ui_dependencies = ui_dependencies

    @property
    def ui_language(self):
        """Gets the ui_language of this FlexV1Configuration.

        The primary language of the Flex UI.

        :return: The ui_language of this FlexV1Configuration.
        :rtype: str
        """
        return self._ui_language

    @ui_language.setter
    def ui_language(self, ui_language):
        """Sets the ui_language of this FlexV1Configuration.

        The primary language of the Flex UI.

        :param ui_language: The ui_language of this FlexV1Configuration.
        :type ui_language: str
        """

        self._ui_language = ui_language

    @property
    def ui_version(self):
        """Gets the ui_version of this FlexV1Configuration.

        The Pinned UI version.

        :return: The ui_version of this FlexV1Configuration.
        :rtype: str
        """
        return self._ui_version

    @ui_version.setter
    def ui_version(self, ui_version):
        """Sets the ui_version of this FlexV1Configuration.

        The Pinned UI version.

        :param ui_version: The ui_version of this FlexV1Configuration.
        :type ui_version: str
        """

        self._ui_version = ui_version

    @property
    def url(self):
        """Gets the url of this FlexV1Configuration.

        The absolute URL of the Configuration resource.

        :return: The url of this FlexV1Configuration.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this FlexV1Configuration.

        The absolute URL of the Configuration resource.

        :param url: The url of this FlexV1Configuration.
        :type url: str
        """

        self._url = url
