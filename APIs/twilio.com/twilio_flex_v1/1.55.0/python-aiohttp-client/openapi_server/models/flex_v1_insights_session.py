# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlexV1InsightsSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_url: str=None, session_expiry: str=None, session_id: str=None, url: str=None, workspace_id: str=None):
        """FlexV1InsightsSession - a model defined in OpenAPI

        :param base_url: The base_url of this FlexV1InsightsSession.
        :param session_expiry: The session_expiry of this FlexV1InsightsSession.
        :param session_id: The session_id of this FlexV1InsightsSession.
        :param url: The url of this FlexV1InsightsSession.
        :param workspace_id: The workspace_id of this FlexV1InsightsSession.
        """
        self.openapi_types = {
            'base_url': str,
            'session_expiry': str,
            'session_id': str,
            'url': str,
            'workspace_id': str
        }

        self.attribute_map = {
            'base_url': 'base_url',
            'session_expiry': 'session_expiry',
            'session_id': 'session_id',
            'url': 'url',
            'workspace_id': 'workspace_id'
        }

        self._base_url = base_url
        self._session_expiry = session_expiry
        self._session_id = session_id
        self._url = url
        self._workspace_id = workspace_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlexV1InsightsSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The flex.v1.insights_session of this FlexV1InsightsSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_url(self):
        """Gets the base_url of this FlexV1InsightsSession.

        The base URL to fetch reports and dashboards

        :return: The base_url of this FlexV1InsightsSession.
        :rtype: str
        """
        return self._base_url

    @base_url.setter
    def base_url(self, base_url):
        """Sets the base_url of this FlexV1InsightsSession.

        The base URL to fetch reports and dashboards

        :param base_url: The base_url of this FlexV1InsightsSession.
        :type base_url: str
        """

        self._base_url = base_url

    @property
    def session_expiry(self):
        """Gets the session_expiry of this FlexV1InsightsSession.

        The session expiry date and time, given in ISO 8601 format.

        :return: The session_expiry of this FlexV1InsightsSession.
        :rtype: str
        """
        return self._session_expiry

    @session_expiry.setter
    def session_expiry(self, session_expiry):
        """Sets the session_expiry of this FlexV1InsightsSession.

        The session expiry date and time, given in ISO 8601 format.

        :param session_expiry: The session_expiry of this FlexV1InsightsSession.
        :type session_expiry: str
        """

        self._session_expiry = session_expiry

    @property
    def session_id(self):
        """Gets the session_id of this FlexV1InsightsSession.

        The unique ID for the session

        :return: The session_id of this FlexV1InsightsSession.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this FlexV1InsightsSession.

        The unique ID for the session

        :param session_id: The session_id of this FlexV1InsightsSession.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def url(self):
        """Gets the url of this FlexV1InsightsSession.

        The URL of this resource.

        :return: The url of this FlexV1InsightsSession.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this FlexV1InsightsSession.

        The URL of this resource.

        :param url: The url of this FlexV1InsightsSession.
        :type url: str
        """

        self._url = url

    @property
    def workspace_id(self):
        """Gets the workspace_id of this FlexV1InsightsSession.

        Unique ID to identify the user's workspace

        :return: The workspace_id of this FlexV1InsightsSession.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this FlexV1InsightsSession.

        Unique ID to identify the user's workspace

        :param workspace_id: The workspace_id of this FlexV1InsightsSession.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id
