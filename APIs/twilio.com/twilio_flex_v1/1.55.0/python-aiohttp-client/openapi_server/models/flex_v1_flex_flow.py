# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flex_flow_enum_channel_type import FlexFlowEnumChannelType
from openapi_server.models.flex_flow_enum_integration_type import FlexFlowEnumIntegrationType
import re
from openapi_server import util


class FlexV1FlexFlow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, channel_type: FlexFlowEnumChannelType=None, chat_service_sid: str=None, contact_identity: str=None, date_created: datetime=None, date_updated: datetime=None, enabled: bool=None, friendly_name: str=None, integration: object=None, integration_type: FlexFlowEnumIntegrationType=None, janitor_enabled: bool=None, long_lived: bool=None, sid: str=None, url: str=None):
        """FlexV1FlexFlow - a model defined in OpenAPI

        :param account_sid: The account_sid of this FlexV1FlexFlow.
        :param channel_type: The channel_type of this FlexV1FlexFlow.
        :param chat_service_sid: The chat_service_sid of this FlexV1FlexFlow.
        :param contact_identity: The contact_identity of this FlexV1FlexFlow.
        :param date_created: The date_created of this FlexV1FlexFlow.
        :param date_updated: The date_updated of this FlexV1FlexFlow.
        :param enabled: The enabled of this FlexV1FlexFlow.
        :param friendly_name: The friendly_name of this FlexV1FlexFlow.
        :param integration: The integration of this FlexV1FlexFlow.
        :param integration_type: The integration_type of this FlexV1FlexFlow.
        :param janitor_enabled: The janitor_enabled of this FlexV1FlexFlow.
        :param long_lived: The long_lived of this FlexV1FlexFlow.
        :param sid: The sid of this FlexV1FlexFlow.
        :param url: The url of this FlexV1FlexFlow.
        """
        self.openapi_types = {
            'account_sid': str,
            'channel_type': FlexFlowEnumChannelType,
            'chat_service_sid': str,
            'contact_identity': str,
            'date_created': datetime,
            'date_updated': datetime,
            'enabled': bool,
            'friendly_name': str,
            'integration': object,
            'integration_type': FlexFlowEnumIntegrationType,
            'janitor_enabled': bool,
            'long_lived': bool,
            'sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'channel_type': 'channel_type',
            'chat_service_sid': 'chat_service_sid',
            'contact_identity': 'contact_identity',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'enabled': 'enabled',
            'friendly_name': 'friendly_name',
            'integration': 'integration',
            'integration_type': 'integration_type',
            'janitor_enabled': 'janitor_enabled',
            'long_lived': 'long_lived',
            'sid': 'sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._channel_type = channel_type
        self._chat_service_sid = chat_service_sid
        self._contact_identity = contact_identity
        self._date_created = date_created
        self._date_updated = date_updated
        self._enabled = enabled
        self._friendly_name = friendly_name
        self._integration = integration
        self._integration_type = integration_type
        self._janitor_enabled = janitor_enabled
        self._long_lived = long_lived
        self._sid = sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlexV1FlexFlow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The flex.v1.flex_flow of this FlexV1FlexFlow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this FlexV1FlexFlow.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Flow resource and owns this Workflow.

        :return: The account_sid of this FlexV1FlexFlow.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this FlexV1FlexFlow.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Flow resource and owns this Workflow.

        :param account_sid: The account_sid of this FlexV1FlexFlow.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def channel_type(self):
        """Gets the channel_type of this FlexV1FlexFlow.


        :return: The channel_type of this FlexV1FlexFlow.
        :rtype: FlexFlowEnumChannelType
        """
        return self._channel_type

    @channel_type.setter
    def channel_type(self, channel_type):
        """Sets the channel_type of this FlexV1FlexFlow.


        :param channel_type: The channel_type of this FlexV1FlexFlow.
        :type channel_type: FlexFlowEnumChannelType
        """

        self._channel_type = channel_type

    @property
    def chat_service_sid(self):
        """Gets the chat_service_sid of this FlexV1FlexFlow.

        The SID of the chat service.

        :return: The chat_service_sid of this FlexV1FlexFlow.
        :rtype: str
        """
        return self._chat_service_sid

    @chat_service_sid.setter
    def chat_service_sid(self, chat_service_sid):
        """Sets the chat_service_sid of this FlexV1FlexFlow.

        The SID of the chat service.

        :param chat_service_sid: The chat_service_sid of this FlexV1FlexFlow.
        :type chat_service_sid: str
        """
        if chat_service_sid is not None and len(chat_service_sid) > 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be less than or equal to `34`")
        if chat_service_sid is not None and len(chat_service_sid) < 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be greater than or equal to `34`")
        if chat_service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_service_sid):
            raise ValueError("Invalid value for `chat_service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_service_sid = chat_service_sid

    @property
    def contact_identity(self):
        """Gets the contact_identity of this FlexV1FlexFlow.

        The channel contact's Identity.

        :return: The contact_identity of this FlexV1FlexFlow.
        :rtype: str
        """
        return self._contact_identity

    @contact_identity.setter
    def contact_identity(self, contact_identity):
        """Sets the contact_identity of this FlexV1FlexFlow.

        The channel contact's Identity.

        :param contact_identity: The contact_identity of this FlexV1FlexFlow.
        :type contact_identity: str
        """

        self._contact_identity = contact_identity

    @property
    def date_created(self):
        """Gets the date_created of this FlexV1FlexFlow.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this FlexV1FlexFlow.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this FlexV1FlexFlow.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this FlexV1FlexFlow.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this FlexV1FlexFlow.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this FlexV1FlexFlow.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this FlexV1FlexFlow.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this FlexV1FlexFlow.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def enabled(self):
        """Gets the enabled of this FlexV1FlexFlow.

        Whether the Flex Flow is enabled.

        :return: The enabled of this FlexV1FlexFlow.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this FlexV1FlexFlow.

        Whether the Flex Flow is enabled.

        :param enabled: The enabled of this FlexV1FlexFlow.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def friendly_name(self):
        """Gets the friendly_name of this FlexV1FlexFlow.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this FlexV1FlexFlow.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this FlexV1FlexFlow.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this FlexV1FlexFlow.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def integration(self):
        """Gets the integration of this FlexV1FlexFlow.

        An object that contains specific parameters for the integration.

        :return: The integration of this FlexV1FlexFlow.
        :rtype: object
        """
        return self._integration

    @integration.setter
    def integration(self, integration):
        """Sets the integration of this FlexV1FlexFlow.

        An object that contains specific parameters for the integration.

        :param integration: The integration of this FlexV1FlexFlow.
        :type integration: object
        """

        self._integration = integration

    @property
    def integration_type(self):
        """Gets the integration_type of this FlexV1FlexFlow.


        :return: The integration_type of this FlexV1FlexFlow.
        :rtype: FlexFlowEnumIntegrationType
        """
        return self._integration_type

    @integration_type.setter
    def integration_type(self, integration_type):
        """Sets the integration_type of this FlexV1FlexFlow.


        :param integration_type: The integration_type of this FlexV1FlexFlow.
        :type integration_type: FlexFlowEnumIntegrationType
        """

        self._integration_type = integration_type

    @property
    def janitor_enabled(self):
        """Gets the janitor_enabled of this FlexV1FlexFlow.

        When enabled, the Messaging Channel Janitor will remove active Proxy sessions if the associated Task is deleted outside of the Flex UI. Defaults to `false`.

        :return: The janitor_enabled of this FlexV1FlexFlow.
        :rtype: bool
        """
        return self._janitor_enabled

    @janitor_enabled.setter
    def janitor_enabled(self, janitor_enabled):
        """Sets the janitor_enabled of this FlexV1FlexFlow.

        When enabled, the Messaging Channel Janitor will remove active Proxy sessions if the associated Task is deleted outside of the Flex UI. Defaults to `false`.

        :param janitor_enabled: The janitor_enabled of this FlexV1FlexFlow.
        :type janitor_enabled: bool
        """

        self._janitor_enabled = janitor_enabled

    @property
    def long_lived(self):
        """Gets the long_lived of this FlexV1FlexFlow.

        When enabled, Flex will keep the chat channel active so that it may be used for subsequent interactions with a contact identity. Defaults to `false`.

        :return: The long_lived of this FlexV1FlexFlow.
        :rtype: bool
        """
        return self._long_lived

    @long_lived.setter
    def long_lived(self, long_lived):
        """Sets the long_lived of this FlexV1FlexFlow.

        When enabled, Flex will keep the chat channel active so that it may be used for subsequent interactions with a contact identity. Defaults to `false`.

        :param long_lived: The long_lived of this FlexV1FlexFlow.
        :type long_lived: bool
        """

        self._long_lived = long_lived

    @property
    def sid(self):
        """Gets the sid of this FlexV1FlexFlow.

        The unique string that we created to identify the Flex Flow resource.

        :return: The sid of this FlexV1FlexFlow.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this FlexV1FlexFlow.

        The unique string that we created to identify the Flex Flow resource.

        :param sid: The sid of this FlexV1FlexFlow.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^FO[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^FO[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this FlexV1FlexFlow.

        The absolute URL of the Flex Flow resource.

        :return: The url of this FlexV1FlexFlow.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this FlexV1FlexFlow.

        The absolute URL of the Flex Flow resource.

        :param url: The url of this FlexV1FlexFlow.
        :type url: str
        """

        self._url = url
