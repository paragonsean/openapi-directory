# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class FlexV1InsightsAssessmentsComment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, agent_id: str=None, assessment_sid: str=None, comment: object=None, offset: float=None, report: bool=None, segment_id: str=None, timestamp: float=None, url: str=None, user_email: str=None, user_name: str=None, weight: float=None):
        """FlexV1InsightsAssessmentsComment - a model defined in OpenAPI

        :param account_sid: The account_sid of this FlexV1InsightsAssessmentsComment.
        :param agent_id: The agent_id of this FlexV1InsightsAssessmentsComment.
        :param assessment_sid: The assessment_sid of this FlexV1InsightsAssessmentsComment.
        :param comment: The comment of this FlexV1InsightsAssessmentsComment.
        :param offset: The offset of this FlexV1InsightsAssessmentsComment.
        :param report: The report of this FlexV1InsightsAssessmentsComment.
        :param segment_id: The segment_id of this FlexV1InsightsAssessmentsComment.
        :param timestamp: The timestamp of this FlexV1InsightsAssessmentsComment.
        :param url: The url of this FlexV1InsightsAssessmentsComment.
        :param user_email: The user_email of this FlexV1InsightsAssessmentsComment.
        :param user_name: The user_name of this FlexV1InsightsAssessmentsComment.
        :param weight: The weight of this FlexV1InsightsAssessmentsComment.
        """
        self.openapi_types = {
            'account_sid': str,
            'agent_id': str,
            'assessment_sid': str,
            'comment': object,
            'offset': float,
            'report': bool,
            'segment_id': str,
            'timestamp': float,
            'url': str,
            'user_email': str,
            'user_name': str,
            'weight': float
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'agent_id': 'agent_id',
            'assessment_sid': 'assessment_sid',
            'comment': 'comment',
            'offset': 'offset',
            'report': 'report',
            'segment_id': 'segment_id',
            'timestamp': 'timestamp',
            'url': 'url',
            'user_email': 'user_email',
            'user_name': 'user_name',
            'weight': 'weight'
        }

        self._account_sid = account_sid
        self._agent_id = agent_id
        self._assessment_sid = assessment_sid
        self._comment = comment
        self._offset = offset
        self._report = report
        self._segment_id = segment_id
        self._timestamp = timestamp
        self._url = url
        self._user_email = user_email
        self._user_name = user_name
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlexV1InsightsAssessmentsComment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The flex.v1.insights_assessments_comment of this FlexV1InsightsAssessmentsComment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this FlexV1InsightsAssessmentsComment.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Insights resource and owns this resource.

        :return: The account_sid of this FlexV1InsightsAssessmentsComment.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this FlexV1InsightsAssessmentsComment.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Insights resource and owns this resource.

        :param account_sid: The account_sid of this FlexV1InsightsAssessmentsComment.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def agent_id(self):
        """Gets the agent_id of this FlexV1InsightsAssessmentsComment.

        The id of the agent.

        :return: The agent_id of this FlexV1InsightsAssessmentsComment.
        :rtype: str
        """
        return self._agent_id

    @agent_id.setter
    def agent_id(self, agent_id):
        """Sets the agent_id of this FlexV1InsightsAssessmentsComment.

        The id of the agent.

        :param agent_id: The agent_id of this FlexV1InsightsAssessmentsComment.
        :type agent_id: str
        """

        self._agent_id = agent_id

    @property
    def assessment_sid(self):
        """Gets the assessment_sid of this FlexV1InsightsAssessmentsComment.

        The SID of the assessment.

        :return: The assessment_sid of this FlexV1InsightsAssessmentsComment.
        :rtype: str
        """
        return self._assessment_sid

    @assessment_sid.setter
    def assessment_sid(self, assessment_sid):
        """Sets the assessment_sid of this FlexV1InsightsAssessmentsComment.

        The SID of the assessment.

        :param assessment_sid: The assessment_sid of this FlexV1InsightsAssessmentsComment.
        :type assessment_sid: str
        """
        if assessment_sid is not None and len(assessment_sid) > 34:
            raise ValueError("Invalid value for `assessment_sid`, length must be less than or equal to `34`")
        if assessment_sid is not None and len(assessment_sid) < 34:
            raise ValueError("Invalid value for `assessment_sid`, length must be greater than or equal to `34`")
        if assessment_sid is not None and not re.search(r'^FM[0-9a-fA-F]{32}$', assessment_sid):
            raise ValueError("Invalid value for `assessment_sid`, must be a follow pattern or equal to `/^FM[0-9a-fA-F]{32}$/`")

        self._assessment_sid = assessment_sid

    @property
    def comment(self):
        """Gets the comment of this FlexV1InsightsAssessmentsComment.

        The comment added for assessment.

        :return: The comment of this FlexV1InsightsAssessmentsComment.
        :rtype: object
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this FlexV1InsightsAssessmentsComment.

        The comment added for assessment.

        :param comment: The comment of this FlexV1InsightsAssessmentsComment.
        :type comment: object
        """

        self._comment = comment

    @property
    def offset(self):
        """Gets the offset of this FlexV1InsightsAssessmentsComment.

        The offset

        :return: The offset of this FlexV1InsightsAssessmentsComment.
        :rtype: float
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this FlexV1InsightsAssessmentsComment.

        The offset

        :param offset: The offset of this FlexV1InsightsAssessmentsComment.
        :type offset: float
        """

        self._offset = offset

    @property
    def report(self):
        """Gets the report of this FlexV1InsightsAssessmentsComment.

        The flag indicating if this assessment is part of report 

        :return: The report of this FlexV1InsightsAssessmentsComment.
        :rtype: bool
        """
        return self._report

    @report.setter
    def report(self, report):
        """Sets the report of this FlexV1InsightsAssessmentsComment.

        The flag indicating if this assessment is part of report 

        :param report: The report of this FlexV1InsightsAssessmentsComment.
        :type report: bool
        """

        self._report = report

    @property
    def segment_id(self):
        """Gets the segment_id of this FlexV1InsightsAssessmentsComment.

        The id of the segment.

        :return: The segment_id of this FlexV1InsightsAssessmentsComment.
        :rtype: str
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id):
        """Sets the segment_id of this FlexV1InsightsAssessmentsComment.

        The id of the segment.

        :param segment_id: The segment_id of this FlexV1InsightsAssessmentsComment.
        :type segment_id: str
        """

        self._segment_id = segment_id

    @property
    def timestamp(self):
        """Gets the timestamp of this FlexV1InsightsAssessmentsComment.

        The timestamp when the record is inserted

        :return: The timestamp of this FlexV1InsightsAssessmentsComment.
        :rtype: float
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this FlexV1InsightsAssessmentsComment.

        The timestamp when the record is inserted

        :param timestamp: The timestamp of this FlexV1InsightsAssessmentsComment.
        :type timestamp: float
        """

        self._timestamp = timestamp

    @property
    def url(self):
        """Gets the url of this FlexV1InsightsAssessmentsComment.


        :return: The url of this FlexV1InsightsAssessmentsComment.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this FlexV1InsightsAssessmentsComment.


        :param url: The url of this FlexV1InsightsAssessmentsComment.
        :type url: str
        """

        self._url = url

    @property
    def user_email(self):
        """Gets the user_email of this FlexV1InsightsAssessmentsComment.

        The email id of the user.

        :return: The user_email of this FlexV1InsightsAssessmentsComment.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email):
        """Sets the user_email of this FlexV1InsightsAssessmentsComment.

        The email id of the user.

        :param user_email: The user_email of this FlexV1InsightsAssessmentsComment.
        :type user_email: str
        """

        self._user_email = user_email

    @property
    def user_name(self):
        """Gets the user_name of this FlexV1InsightsAssessmentsComment.

        The name of the user.

        :return: The user_name of this FlexV1InsightsAssessmentsComment.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this FlexV1InsightsAssessmentsComment.

        The name of the user.

        :param user_name: The user_name of this FlexV1InsightsAssessmentsComment.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def weight(self):
        """Gets the weight of this FlexV1InsightsAssessmentsComment.

        The weightage given to this comment

        :return: The weight of this FlexV1InsightsAssessmentsComment.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this FlexV1InsightsAssessmentsComment.

        The weightage given to this comment

        :param weight: The weight of this FlexV1InsightsAssessmentsComment.
        :type weight: float
        """

        self._weight = weight
