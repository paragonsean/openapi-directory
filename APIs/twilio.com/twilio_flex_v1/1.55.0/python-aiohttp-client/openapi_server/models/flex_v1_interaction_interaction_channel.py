# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.interaction_channel_enum_channel_status import InteractionChannelEnumChannelStatus
from openapi_server.models.interaction_channel_enum_type import InteractionChannelEnumType
import re
from openapi_server import util


class FlexV1InteractionInteractionChannel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_code: int=None, error_message: str=None, interaction_sid: str=None, links: object=None, sid: str=None, status: InteractionChannelEnumChannelStatus=None, type: InteractionChannelEnumType=None, url: str=None):
        """FlexV1InteractionInteractionChannel - a model defined in OpenAPI

        :param error_code: The error_code of this FlexV1InteractionInteractionChannel.
        :param error_message: The error_message of this FlexV1InteractionInteractionChannel.
        :param interaction_sid: The interaction_sid of this FlexV1InteractionInteractionChannel.
        :param links: The links of this FlexV1InteractionInteractionChannel.
        :param sid: The sid of this FlexV1InteractionInteractionChannel.
        :param status: The status of this FlexV1InteractionInteractionChannel.
        :param type: The type of this FlexV1InteractionInteractionChannel.
        :param url: The url of this FlexV1InteractionInteractionChannel.
        """
        self.openapi_types = {
            'error_code': int,
            'error_message': str,
            'interaction_sid': str,
            'links': object,
            'sid': str,
            'status': InteractionChannelEnumChannelStatus,
            'type': InteractionChannelEnumType,
            'url': str
        }

        self.attribute_map = {
            'error_code': 'error_code',
            'error_message': 'error_message',
            'interaction_sid': 'interaction_sid',
            'links': 'links',
            'sid': 'sid',
            'status': 'status',
            'type': 'type',
            'url': 'url'
        }

        self._error_code = error_code
        self._error_message = error_message
        self._interaction_sid = interaction_sid
        self._links = links
        self._sid = sid
        self._status = status
        self._type = type
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlexV1InteractionInteractionChannel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The flex.v1.interaction.interaction_channel of this FlexV1InteractionInteractionChannel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_code(self):
        """Gets the error_code of this FlexV1InteractionInteractionChannel.

        The Twilio error code for a failed channel.

        :return: The error_code of this FlexV1InteractionInteractionChannel.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this FlexV1InteractionInteractionChannel.

        The Twilio error code for a failed channel.

        :param error_code: The error_code of this FlexV1InteractionInteractionChannel.
        :type error_code: int
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this FlexV1InteractionInteractionChannel.

        The error message for a failed channel.

        :return: The error_message of this FlexV1InteractionInteractionChannel.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this FlexV1InteractionInteractionChannel.

        The error message for a failed channel.

        :param error_message: The error_message of this FlexV1InteractionInteractionChannel.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def interaction_sid(self):
        """Gets the interaction_sid of this FlexV1InteractionInteractionChannel.

        The unique string created by Twilio to identify an Interaction resource, prefixed with KD.

        :return: The interaction_sid of this FlexV1InteractionInteractionChannel.
        :rtype: str
        """
        return self._interaction_sid

    @interaction_sid.setter
    def interaction_sid(self, interaction_sid):
        """Sets the interaction_sid of this FlexV1InteractionInteractionChannel.

        The unique string created by Twilio to identify an Interaction resource, prefixed with KD.

        :param interaction_sid: The interaction_sid of this FlexV1InteractionInteractionChannel.
        :type interaction_sid: str
        """
        if interaction_sid is not None and len(interaction_sid) > 34:
            raise ValueError("Invalid value for `interaction_sid`, length must be less than or equal to `34`")
        if interaction_sid is not None and len(interaction_sid) < 34:
            raise ValueError("Invalid value for `interaction_sid`, length must be greater than or equal to `34`")
        if interaction_sid is not None and not re.search(r'^KD[0-9a-fA-F]{32}$', interaction_sid):
            raise ValueError("Invalid value for `interaction_sid`, must be a follow pattern or equal to `/^KD[0-9a-fA-F]{32}$/`")

        self._interaction_sid = interaction_sid

    @property
    def links(self):
        """Gets the links of this FlexV1InteractionInteractionChannel.


        :return: The links of this FlexV1InteractionInteractionChannel.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this FlexV1InteractionInteractionChannel.


        :param links: The links of this FlexV1InteractionInteractionChannel.
        :type links: object
        """

        self._links = links

    @property
    def sid(self):
        """Gets the sid of this FlexV1InteractionInteractionChannel.

        The unique string created by Twilio to identify an Interaction Channel resource, prefixed with UO.

        :return: The sid of this FlexV1InteractionInteractionChannel.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this FlexV1InteractionInteractionChannel.

        The unique string created by Twilio to identify an Interaction Channel resource, prefixed with UO.

        :param sid: The sid of this FlexV1InteractionInteractionChannel.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^UO[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^UO[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this FlexV1InteractionInteractionChannel.


        :return: The status of this FlexV1InteractionInteractionChannel.
        :rtype: InteractionChannelEnumChannelStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FlexV1InteractionInteractionChannel.


        :param status: The status of this FlexV1InteractionInteractionChannel.
        :type status: InteractionChannelEnumChannelStatus
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this FlexV1InteractionInteractionChannel.


        :return: The type of this FlexV1InteractionInteractionChannel.
        :rtype: InteractionChannelEnumType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FlexV1InteractionInteractionChannel.


        :param type: The type of this FlexV1InteractionInteractionChannel.
        :type type: InteractionChannelEnumType
        """

        self._type = type

    @property
    def url(self):
        """Gets the url of this FlexV1InteractionInteractionChannel.


        :return: The url of this FlexV1InteractionInteractionChannel.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this FlexV1InteractionInteractionChannel.


        :param url: The url of this FlexV1InteractionInteractionChannel.
        :type url: str
        """

        self._url = url
