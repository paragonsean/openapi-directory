# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flex_v1_insights_assessments_comment import FlexV1InsightsAssessmentsComment
from openapi_server.models.list_channel_response_meta import ListChannelResponseMeta
from openapi_server import util


class ListInsightsAssessmentsCommentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comments: List[FlexV1InsightsAssessmentsComment]=None, meta: ListChannelResponseMeta=None):
        """ListInsightsAssessmentsCommentResponse - a model defined in OpenAPI

        :param comments: The comments of this ListInsightsAssessmentsCommentResponse.
        :param meta: The meta of this ListInsightsAssessmentsCommentResponse.
        """
        self.openapi_types = {
            'comments': List[FlexV1InsightsAssessmentsComment],
            'meta': ListChannelResponseMeta
        }

        self.attribute_map = {
            'comments': 'comments',
            'meta': 'meta'
        }

        self._comments = comments
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListInsightsAssessmentsCommentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListInsightsAssessmentsCommentResponse of this ListInsightsAssessmentsCommentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comments(self):
        """Gets the comments of this ListInsightsAssessmentsCommentResponse.


        :return: The comments of this ListInsightsAssessmentsCommentResponse.
        :rtype: List[FlexV1InsightsAssessmentsComment]
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this ListInsightsAssessmentsCommentResponse.


        :param comments: The comments of this ListInsightsAssessmentsCommentResponse.
        :type comments: List[FlexV1InsightsAssessmentsComment]
        """

        self._comments = comments

    @property
    def meta(self):
        """Gets the meta of this ListInsightsAssessmentsCommentResponse.


        :return: The meta of this ListInsightsAssessmentsCommentResponse.
        :rtype: ListChannelResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListInsightsAssessmentsCommentResponse.


        :param meta: The meta of this ListInsightsAssessmentsCommentResponse.
        :type meta: ListChannelResponseMeta
        """

        self._meta = meta
