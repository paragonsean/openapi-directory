# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlexV1InsightsConversations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, conversation_id: str=None, segment_count: int=None, segments: List[object]=None):
        """FlexV1InsightsConversations - a model defined in OpenAPI

        :param account_id: The account_id of this FlexV1InsightsConversations.
        :param conversation_id: The conversation_id of this FlexV1InsightsConversations.
        :param segment_count: The segment_count of this FlexV1InsightsConversations.
        :param segments: The segments of this FlexV1InsightsConversations.
        """
        self.openapi_types = {
            'account_id': str,
            'conversation_id': str,
            'segment_count': int,
            'segments': List[object]
        }

        self.attribute_map = {
            'account_id': 'account_id',
            'conversation_id': 'conversation_id',
            'segment_count': 'segment_count',
            'segments': 'segments'
        }

        self._account_id = account_id
        self._conversation_id = conversation_id
        self._segment_count = segment_count
        self._segments = segments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlexV1InsightsConversations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The flex.v1.insights_conversations of this FlexV1InsightsConversations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this FlexV1InsightsConversations.

        The id of the account.

        :return: The account_id of this FlexV1InsightsConversations.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this FlexV1InsightsConversations.

        The id of the account.

        :param account_id: The account_id of this FlexV1InsightsConversations.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def conversation_id(self):
        """Gets the conversation_id of this FlexV1InsightsConversations.

        The unique id of the conversation

        :return: The conversation_id of this FlexV1InsightsConversations.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id):
        """Sets the conversation_id of this FlexV1InsightsConversations.

        The unique id of the conversation

        :param conversation_id: The conversation_id of this FlexV1InsightsConversations.
        :type conversation_id: str
        """

        self._conversation_id = conversation_id

    @property
    def segment_count(self):
        """Gets the segment_count of this FlexV1InsightsConversations.

        The count of segments for a conversation

        :return: The segment_count of this FlexV1InsightsConversations.
        :rtype: int
        """
        return self._segment_count

    @segment_count.setter
    def segment_count(self, segment_count):
        """Sets the segment_count of this FlexV1InsightsConversations.

        The count of segments for a conversation

        :param segment_count: The segment_count of this FlexV1InsightsConversations.
        :type segment_count: int
        """

        self._segment_count = segment_count

    @property
    def segments(self):
        """Gets the segments of this FlexV1InsightsConversations.

        The Segments of a conversation

        :return: The segments of this FlexV1InsightsConversations.
        :rtype: List[object]
        """
        return self._segments

    @segments.setter
    def segments(self, segments):
        """Sets the segments of this FlexV1InsightsConversations.

        The Segments of a conversation

        :param segments: The segments of this FlexV1InsightsConversations.
        :type segments: List[object]
        """

        self._segments = segments
