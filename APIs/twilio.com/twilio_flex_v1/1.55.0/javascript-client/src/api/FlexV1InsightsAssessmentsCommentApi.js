/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FlexV1InsightsAssessmentsComment from '../model/FlexV1InsightsAssessmentsComment';
import ListInsightsAssessmentsCommentResponse from '../model/ListInsightsAssessmentsCommentResponse';

/**
* FlexV1InsightsAssessmentsComment service.
* @module api/FlexV1InsightsAssessmentsCommentApi
* @version 1.55.0
*/
export default class FlexV1InsightsAssessmentsCommentApi {

    /**
    * Constructs a new FlexV1InsightsAssessmentsCommentApi. 
    * @alias module:api/FlexV1InsightsAssessmentsCommentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createInsightsAssessmentsComment operation.
     * @callback module:api/FlexV1InsightsAssessmentsCommentApi~createInsightsAssessmentsCommentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlexV1InsightsAssessmentsComment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To create a comment assessment for a conversation
     * @param {String} agentId The id of the agent.
     * @param {String} categoryId The ID of the category
     * @param {String} categoryName The name of the category
     * @param {String} comment The Assessment comment.
     * @param {Number} offset The offset
     * @param {String} segmentId The id of the segment.
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {module:api/FlexV1InsightsAssessmentsCommentApi~createInsightsAssessmentsCommentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlexV1InsightsAssessmentsComment}
     */
    createInsightsAssessmentsComment(agentId, categoryId, categoryName, comment, offset, segmentId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'agentId' is set
      if (agentId === undefined || agentId === null) {
        throw new Error("Missing the required parameter 'agentId' when calling createInsightsAssessmentsComment");
      }
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling createInsightsAssessmentsComment");
      }
      // verify the required parameter 'categoryName' is set
      if (categoryName === undefined || categoryName === null) {
        throw new Error("Missing the required parameter 'categoryName' when calling createInsightsAssessmentsComment");
      }
      // verify the required parameter 'comment' is set
      if (comment === undefined || comment === null) {
        throw new Error("Missing the required parameter 'comment' when calling createInsightsAssessmentsComment");
      }
      // verify the required parameter 'offset' is set
      if (offset === undefined || offset === null) {
        throw new Error("Missing the required parameter 'offset' when calling createInsightsAssessmentsComment");
      }
      // verify the required parameter 'segmentId' is set
      if (segmentId === undefined || segmentId === null) {
        throw new Error("Missing the required parameter 'segmentId' when calling createInsightsAssessmentsComment");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
        'AgentId': agentId,
        'CategoryId': categoryId,
        'CategoryName': categoryName,
        'Comment': comment,
        'Offset': offset,
        'SegmentId': segmentId
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = FlexV1InsightsAssessmentsComment;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Assessments/Comments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listInsightsAssessmentsComment operation.
     * @callback module:api/FlexV1InsightsAssessmentsCommentApi~listInsightsAssessmentsCommentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListInsightsAssessmentsCommentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To create a comment assessment for a conversation
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {String} [segmentId] The id of the segment.
     * @param {String} [agentId] The id of the agent.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/FlexV1InsightsAssessmentsCommentApi~listInsightsAssessmentsCommentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListInsightsAssessmentsCommentResponse}
     */
    listInsightsAssessmentsComment(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'SegmentId': opts['segmentId'],
        'AgentId': opts['agentId'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListInsightsAssessmentsCommentResponse;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Assessments/Comments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
