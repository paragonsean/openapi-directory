/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FlexV1InsightsQuestionnairesCategory from '../model/FlexV1InsightsQuestionnairesCategory';
import ListInsightsQuestionnairesCategoryResponse from '../model/ListInsightsQuestionnairesCategoryResponse';

/**
* FlexV1InsightsQuestionnairesCategory service.
* @module api/FlexV1InsightsQuestionnairesCategoryApi
* @version 1.55.0
*/
export default class FlexV1InsightsQuestionnairesCategoryApi {

    /**
    * Constructs a new FlexV1InsightsQuestionnairesCategoryApi. 
    * @alias module:api/FlexV1InsightsQuestionnairesCategoryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createInsightsQuestionnairesCategory operation.
     * @callback module:api/FlexV1InsightsQuestionnairesCategoryApi~createInsightsQuestionnairesCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlexV1InsightsQuestionnairesCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To create a category for Questions
     * @param {String} name The name of this category.
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {module:api/FlexV1InsightsQuestionnairesCategoryApi~createInsightsQuestionnairesCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlexV1InsightsQuestionnairesCategory}
     */
    createInsightsQuestionnairesCategory(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling createInsightsQuestionnairesCategory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
        'Name': name
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = FlexV1InsightsQuestionnairesCategory;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Categories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteInsightsQuestionnairesCategory operation.
     * @callback module:api/FlexV1InsightsQuestionnairesCategoryApi~deleteInsightsQuestionnairesCategoryCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} categorySid The SID of the category to be deleted
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {module:api/FlexV1InsightsQuestionnairesCategoryApi~deleteInsightsQuestionnairesCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteInsightsQuestionnairesCategory(categorySid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'categorySid' is set
      if (categorySid === undefined || categorySid === null) {
        throw new Error("Missing the required parameter 'categorySid' when calling deleteInsightsQuestionnairesCategory");
      }

      let pathParams = {
        'CategorySid': categorySid
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Categories/{CategorySid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listInsightsQuestionnairesCategory operation.
     * @callback module:api/FlexV1InsightsQuestionnairesCategoryApi~listInsightsQuestionnairesCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListInsightsQuestionnairesCategoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To get all the categories
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/FlexV1InsightsQuestionnairesCategoryApi~listInsightsQuestionnairesCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListInsightsQuestionnairesCategoryResponse}
     */
    listInsightsQuestionnairesCategory(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListInsightsQuestionnairesCategoryResponse;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateInsightsQuestionnairesCategory operation.
     * @callback module:api/FlexV1InsightsQuestionnairesCategoryApi~updateInsightsQuestionnairesCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlexV1InsightsQuestionnairesCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To update the category for Questions
     * @param {String} categorySid The SID of the category to be updated
     * @param {String} name The name of this category.
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {module:api/FlexV1InsightsQuestionnairesCategoryApi~updateInsightsQuestionnairesCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlexV1InsightsQuestionnairesCategory}
     */
    updateInsightsQuestionnairesCategory(categorySid, name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'categorySid' is set
      if (categorySid === undefined || categorySid === null) {
        throw new Error("Missing the required parameter 'categorySid' when calling updateInsightsQuestionnairesCategory");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling updateInsightsQuestionnairesCategory");
      }

      let pathParams = {
        'CategorySid': categorySid
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
        'Name': name
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = FlexV1InsightsQuestionnairesCategory;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Categories/{CategorySid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
