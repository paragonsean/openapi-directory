/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FlexV1InsightsQuestionnaires from '../model/FlexV1InsightsQuestionnaires';
import ListInsightsQuestionnairesResponse from '../model/ListInsightsQuestionnairesResponse';

/**
* FlexV1InsightsQuestionnaires service.
* @module api/FlexV1InsightsQuestionnairesApi
* @version 1.55.0
*/
export default class FlexV1InsightsQuestionnairesApi {

    /**
    * Constructs a new FlexV1InsightsQuestionnairesApi. 
    * @alias module:api/FlexV1InsightsQuestionnairesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createInsightsQuestionnaires operation.
     * @callback module:api/FlexV1InsightsQuestionnairesApi~createInsightsQuestionnairesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlexV1InsightsQuestionnaires} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To create a Questionnaire
     * @param {String} name The name of this questionnaire
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {Boolean} [active] The flag to enable or disable questionnaire
     * @param {String} [description] The description of this questionnaire
     * @param {Array.<String>} [questionSids] The list of questions sids under a questionnaire
     * @param {module:api/FlexV1InsightsQuestionnairesApi~createInsightsQuestionnairesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlexV1InsightsQuestionnaires}
     */
    createInsightsQuestionnaires(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling createInsightsQuestionnaires");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
        'Active': opts['active'],
        'Description': opts['description'],
        'Name': name,
        'QuestionSids': this.apiClient.buildCollectionParam(opts['questionSids'], 'csv')
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = FlexV1InsightsQuestionnaires;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Questionnaires', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteInsightsQuestionnaires operation.
     * @callback module:api/FlexV1InsightsQuestionnairesApi~deleteInsightsQuestionnairesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To delete the questionnaire
     * @param {String} questionnaireSid The SID of the questionnaire
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {module:api/FlexV1InsightsQuestionnairesApi~deleteInsightsQuestionnairesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteInsightsQuestionnaires(questionnaireSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'questionnaireSid' is set
      if (questionnaireSid === undefined || questionnaireSid === null) {
        throw new Error("Missing the required parameter 'questionnaireSid' when calling deleteInsightsQuestionnaires");
      }

      let pathParams = {
        'QuestionnaireSid': questionnaireSid
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Questionnaires/{QuestionnaireSid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchInsightsQuestionnaires operation.
     * @callback module:api/FlexV1InsightsQuestionnairesApi~fetchInsightsQuestionnairesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlexV1InsightsQuestionnaires} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To get the Questionnaire Detail
     * @param {String} questionnaireSid The SID of the questionnaire
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {module:api/FlexV1InsightsQuestionnairesApi~fetchInsightsQuestionnairesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlexV1InsightsQuestionnaires}
     */
    fetchInsightsQuestionnaires(questionnaireSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'questionnaireSid' is set
      if (questionnaireSid === undefined || questionnaireSid === null) {
        throw new Error("Missing the required parameter 'questionnaireSid' when calling fetchInsightsQuestionnaires");
      }

      let pathParams = {
        'QuestionnaireSid': questionnaireSid
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FlexV1InsightsQuestionnaires;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Questionnaires/{QuestionnaireSid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listInsightsQuestionnaires operation.
     * @callback module:api/FlexV1InsightsQuestionnairesApi~listInsightsQuestionnairesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListInsightsQuestionnairesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To get all questionnaires with questions
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {Boolean} [includeInactive] Flag indicating whether to include inactive questionnaires or not
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/FlexV1InsightsQuestionnairesApi~listInsightsQuestionnairesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListInsightsQuestionnairesResponse}
     */
    listInsightsQuestionnaires(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'IncludeInactive': opts['includeInactive'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListInsightsQuestionnairesResponse;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Questionnaires', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateInsightsQuestionnaires operation.
     * @callback module:api/FlexV1InsightsQuestionnairesApi~updateInsightsQuestionnairesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlexV1InsightsQuestionnaires} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To update the questionnaire
     * @param {String} questionnaireSid The SID of the questionnaire
     * @param {Boolean} active The flag to enable or disable questionnaire
     * @param {Object} opts Optional parameters
     * @param {String} [authorization] The Authorization HTTP request header
     * @param {String} [description] The description of this questionnaire
     * @param {String} [name] The name of this questionnaire
     * @param {Array.<String>} [questionSids] The list of questions sids under a questionnaire
     * @param {module:api/FlexV1InsightsQuestionnairesApi~updateInsightsQuestionnairesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlexV1InsightsQuestionnaires}
     */
    updateInsightsQuestionnaires(questionnaireSid, active, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'questionnaireSid' is set
      if (questionnaireSid === undefined || questionnaireSid === null) {
        throw new Error("Missing the required parameter 'questionnaireSid' when calling updateInsightsQuestionnaires");
      }
      // verify the required parameter 'active' is set
      if (active === undefined || active === null) {
        throw new Error("Missing the required parameter 'active' when calling updateInsightsQuestionnaires");
      }

      let pathParams = {
        'QuestionnaireSid': questionnaireSid
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': opts['authorization']
      };
      let formParams = {
        'Active': active,
        'Description': opts['description'],
        'Name': opts['name'],
        'QuestionSids': this.apiClient.buildCollectionParam(opts['questionSids'], 'csv')
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = FlexV1InsightsQuestionnaires;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Insights/QualityManagement/Questionnaires/{QuestionnaireSid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
