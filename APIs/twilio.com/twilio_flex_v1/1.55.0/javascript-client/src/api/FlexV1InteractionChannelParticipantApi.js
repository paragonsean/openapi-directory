/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FlexV1InteractionInteractionChannelInteractionChannelParticipant from '../model/FlexV1InteractionInteractionChannelInteractionChannelParticipant';
import InteractionChannelParticipantEnumStatus from '../model/InteractionChannelParticipantEnumStatus';
import InteractionChannelParticipantEnumType from '../model/InteractionChannelParticipantEnumType';
import ListInteractionChannelParticipantResponse from '../model/ListInteractionChannelParticipantResponse';

/**
* FlexV1InteractionChannelParticipant service.
* @module api/FlexV1InteractionChannelParticipantApi
* @version 1.55.0
*/
export default class FlexV1InteractionChannelParticipantApi {

    /**
    * Constructs a new FlexV1InteractionChannelParticipantApi. 
    * @alias module:api/FlexV1InteractionChannelParticipantApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createInteractionChannelParticipant operation.
     * @callback module:api/FlexV1InteractionChannelParticipantApi~createInteractionChannelParticipantCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlexV1InteractionInteractionChannelInteractionChannelParticipant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a Participant to a Channel.
     * @param {String} interactionSid The Interaction Sid for the new Channel Participant.
     * @param {String} channelSid The Channel Sid for the new Channel Participant.
     * @param {Object} mediaProperties JSON representing the Media Properties for the new Participant.
     * @param {module:model/InteractionChannelParticipantEnumType} type 
     * @param {Object} opts Optional parameters
     * @param {Object} [routingProperties] Object representing the Routing Properties for the new Participant.
     * @param {module:api/FlexV1InteractionChannelParticipantApi~createInteractionChannelParticipantCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlexV1InteractionInteractionChannelInteractionChannelParticipant}
     */
    createInteractionChannelParticipant(interactionSid, channelSid, mediaProperties, type, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'interactionSid' is set
      if (interactionSid === undefined || interactionSid === null) {
        throw new Error("Missing the required parameter 'interactionSid' when calling createInteractionChannelParticipant");
      }
      // verify the required parameter 'channelSid' is set
      if (channelSid === undefined || channelSid === null) {
        throw new Error("Missing the required parameter 'channelSid' when calling createInteractionChannelParticipant");
      }
      // verify the required parameter 'mediaProperties' is set
      if (mediaProperties === undefined || mediaProperties === null) {
        throw new Error("Missing the required parameter 'mediaProperties' when calling createInteractionChannelParticipant");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling createInteractionChannelParticipant");
      }

      let pathParams = {
        'InteractionSid': interactionSid,
        'ChannelSid': channelSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'MediaProperties': mediaProperties,
        'RoutingProperties': opts['routingProperties'],
        'Type': type
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = FlexV1InteractionInteractionChannelInteractionChannelParticipant;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Interactions/{InteractionSid}/Channels/{ChannelSid}/Participants', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listInteractionChannelParticipant operation.
     * @callback module:api/FlexV1InteractionChannelParticipantApi~listInteractionChannelParticipantCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListInteractionChannelParticipantResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all Participants for a Channel.
     * @param {String} interactionSid The Interaction Sid for this channel.
     * @param {String} channelSid The Channel Sid for this Participant.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/FlexV1InteractionChannelParticipantApi~listInteractionChannelParticipantCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListInteractionChannelParticipantResponse}
     */
    listInteractionChannelParticipant(interactionSid, channelSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'interactionSid' is set
      if (interactionSid === undefined || interactionSid === null) {
        throw new Error("Missing the required parameter 'interactionSid' when calling listInteractionChannelParticipant");
      }
      // verify the required parameter 'channelSid' is set
      if (channelSid === undefined || channelSid === null) {
        throw new Error("Missing the required parameter 'channelSid' when calling listInteractionChannelParticipant");
      }

      let pathParams = {
        'InteractionSid': interactionSid,
        'ChannelSid': channelSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListInteractionChannelParticipantResponse;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Interactions/{InteractionSid}/Channels/{ChannelSid}/Participants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateInteractionChannelParticipant operation.
     * @callback module:api/FlexV1InteractionChannelParticipantApi~updateInteractionChannelParticipantCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlexV1InteractionInteractionChannelInteractionChannelParticipant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an existing Channel Participant.
     * @param {String} interactionSid The Interaction Sid for this channel.
     * @param {String} channelSid The Channel Sid for this Participant.
     * @param {String} sid The unique string created by Twilio to identify an Interaction Channel resource.
     * @param {module:model/InteractionChannelParticipantEnumStatus} status 
     * @param {module:api/FlexV1InteractionChannelParticipantApi~updateInteractionChannelParticipantCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlexV1InteractionInteractionChannelInteractionChannelParticipant}
     */
    updateInteractionChannelParticipant(interactionSid, channelSid, sid, status, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'interactionSid' is set
      if (interactionSid === undefined || interactionSid === null) {
        throw new Error("Missing the required parameter 'interactionSid' when calling updateInteractionChannelParticipant");
      }
      // verify the required parameter 'channelSid' is set
      if (channelSid === undefined || channelSid === null) {
        throw new Error("Missing the required parameter 'channelSid' when calling updateInteractionChannelParticipant");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateInteractionChannelParticipant");
      }
      // verify the required parameter 'status' is set
      if (status === undefined || status === null) {
        throw new Error("Missing the required parameter 'status' when calling updateInteractionChannelParticipant");
      }

      let pathParams = {
        'InteractionSid': interactionSid,
        'ChannelSid': channelSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Status': status
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = FlexV1InteractionInteractionChannelInteractionChannelParticipant;
      let basePaths = ['https://flex-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Interactions/{InteractionSid}/Channels/{ChannelSid}/Participants/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
