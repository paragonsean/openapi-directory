/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FlexFlowEnumChannelType from './FlexFlowEnumChannelType';
import FlexFlowEnumIntegrationType from './FlexFlowEnumIntegrationType';

/**
 * The FlexV1FlexFlow model module.
 * @module model/FlexV1FlexFlow
 * @version 1.55.0
 */
class FlexV1FlexFlow {
    /**
     * Constructs a new <code>FlexV1FlexFlow</code>.
     * @alias module:model/FlexV1FlexFlow
     */
    constructor() { 
        
        FlexV1FlexFlow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FlexV1FlexFlow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlexV1FlexFlow} obj Optional instance to populate.
     * @return {module:model/FlexV1FlexFlow} The populated <code>FlexV1FlexFlow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlexV1FlexFlow();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('channel_type')) {
                obj['channel_type'] = FlexFlowEnumChannelType.constructFromObject(data['channel_type']);
            }
            if (data.hasOwnProperty('chat_service_sid')) {
                obj['chat_service_sid'] = ApiClient.convertToType(data['chat_service_sid'], 'String');
            }
            if (data.hasOwnProperty('contact_identity')) {
                obj['contact_identity'] = ApiClient.convertToType(data['contact_identity'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('integration')) {
                obj['integration'] = ApiClient.convertToType(data['integration'], Object);
            }
            if (data.hasOwnProperty('integration_type')) {
                obj['integration_type'] = FlexFlowEnumIntegrationType.constructFromObject(data['integration_type']);
            }
            if (data.hasOwnProperty('janitor_enabled')) {
                obj['janitor_enabled'] = ApiClient.convertToType(data['janitor_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('long_lived')) {
                obj['long_lived'] = ApiClient.convertToType(data['long_lived'], 'Boolean');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlexV1FlexFlow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlexV1FlexFlow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['channel_type'] && !(typeof data['channel_type'] === 'string' || data['channel_type'] instanceof String)) {
            throw new Error("Expected the field `channel_type` to be a primitive type in the JSON string but got " + data['channel_type']);
        }
        // ensure the json data is a string
        if (data['chat_service_sid'] && !(typeof data['chat_service_sid'] === 'string' || data['chat_service_sid'] instanceof String)) {
            throw new Error("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got " + data['chat_service_sid']);
        }
        // ensure the json data is a string
        if (data['contact_identity'] && !(typeof data['contact_identity'] === 'string' || data['contact_identity'] instanceof String)) {
            throw new Error("Expected the field `contact_identity` to be a primitive type in the JSON string but got " + data['contact_identity']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['integration_type'] && !(typeof data['integration_type'] === 'string' || data['integration_type'] instanceof String)) {
            throw new Error("Expected the field `integration_type` to be a primitive type in the JSON string but got " + data['integration_type']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Flow resource and owns this Workflow.
 * @member {String} account_sid
 */
FlexV1FlexFlow.prototype['account_sid'] = undefined;

/**
 * @member {module:model/FlexFlowEnumChannelType} channel_type
 */
FlexV1FlexFlow.prototype['channel_type'] = undefined;

/**
 * The SID of the chat service.
 * @member {String} chat_service_sid
 */
FlexV1FlexFlow.prototype['chat_service_sid'] = undefined;

/**
 * The channel contact's Identity.
 * @member {String} contact_identity
 */
FlexV1FlexFlow.prototype['contact_identity'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
FlexV1FlexFlow.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
FlexV1FlexFlow.prototype['date_updated'] = undefined;

/**
 * Whether the Flex Flow is enabled.
 * @member {Boolean} enabled
 */
FlexV1FlexFlow.prototype['enabled'] = undefined;

/**
 * The string that you assigned to describe the resource.
 * @member {String} friendly_name
 */
FlexV1FlexFlow.prototype['friendly_name'] = undefined;

/**
 * An object that contains specific parameters for the integration.
 * @member {Object} integration
 */
FlexV1FlexFlow.prototype['integration'] = undefined;

/**
 * @member {module:model/FlexFlowEnumIntegrationType} integration_type
 */
FlexV1FlexFlow.prototype['integration_type'] = undefined;

/**
 * When enabled, the Messaging Channel Janitor will remove active Proxy sessions if the associated Task is deleted outside of the Flex UI. Defaults to `false`.
 * @member {Boolean} janitor_enabled
 */
FlexV1FlexFlow.prototype['janitor_enabled'] = undefined;

/**
 * When enabled, Flex will keep the chat channel active so that it may be used for subsequent interactions with a contact identity. Defaults to `false`.
 * @member {Boolean} long_lived
 */
FlexV1FlexFlow.prototype['long_lived'] = undefined;

/**
 * The unique string that we created to identify the Flex Flow resource.
 * @member {String} sid
 */
FlexV1FlexFlow.prototype['sid'] = undefined;

/**
 * The absolute URL of the Flex Flow resource.
 * @member {String} url
 */
FlexV1FlexFlow.prototype['url'] = undefined;






export default FlexV1FlexFlow;

