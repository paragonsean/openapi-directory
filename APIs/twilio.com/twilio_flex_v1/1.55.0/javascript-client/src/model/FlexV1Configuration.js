/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigurationEnumStatus from './ConfigurationEnumStatus';

/**
 * The FlexV1Configuration model module.
 * @module model/FlexV1Configuration
 * @version 1.55.0
 */
class FlexV1Configuration {
    /**
     * Constructs a new <code>FlexV1Configuration</code>.
     * @alias module:model/FlexV1Configuration
     */
    constructor() { 
        
        FlexV1Configuration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FlexV1Configuration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlexV1Configuration} obj Optional instance to populate.
     * @return {module:model/FlexV1Configuration} The populated <code>FlexV1Configuration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlexV1Configuration();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('agent_conv_end_methods')) {
                obj['agent_conv_end_methods'] = ApiClient.convertToType(data['agent_conv_end_methods'], Object);
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], Object);
            }
            if (data.hasOwnProperty('call_recording_enabled')) {
                obj['call_recording_enabled'] = ApiClient.convertToType(data['call_recording_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('call_recording_webhook_url')) {
                obj['call_recording_webhook_url'] = ApiClient.convertToType(data['call_recording_webhook_url'], 'String');
            }
            if (data.hasOwnProperty('channel_configs')) {
                obj['channel_configs'] = ApiClient.convertToType(data['channel_configs'], [Object]);
            }
            if (data.hasOwnProperty('chat_service_instance_sid')) {
                obj['chat_service_instance_sid'] = ApiClient.convertToType(data['chat_service_instance_sid'], 'String');
            }
            if (data.hasOwnProperty('citrix_voice_vdi')) {
                obj['citrix_voice_vdi'] = ApiClient.convertToType(data['citrix_voice_vdi'], Object);
            }
            if (data.hasOwnProperty('crm_attributes')) {
                obj['crm_attributes'] = ApiClient.convertToType(data['crm_attributes'], Object);
            }
            if (data.hasOwnProperty('crm_callback_url')) {
                obj['crm_callback_url'] = ApiClient.convertToType(data['crm_callback_url'], 'String');
            }
            if (data.hasOwnProperty('crm_enabled')) {
                obj['crm_enabled'] = ApiClient.convertToType(data['crm_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('crm_fallback_url')) {
                obj['crm_fallback_url'] = ApiClient.convertToType(data['crm_fallback_url'], 'String');
            }
            if (data.hasOwnProperty('crm_type')) {
                obj['crm_type'] = ApiClient.convertToType(data['crm_type'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('debugger_integration')) {
                obj['debugger_integration'] = ApiClient.convertToType(data['debugger_integration'], Object);
            }
            if (data.hasOwnProperty('flex_insights_drilldown')) {
                obj['flex_insights_drilldown'] = ApiClient.convertToType(data['flex_insights_drilldown'], 'Boolean');
            }
            if (data.hasOwnProperty('flex_insights_hr')) {
                obj['flex_insights_hr'] = ApiClient.convertToType(data['flex_insights_hr'], Object);
            }
            if (data.hasOwnProperty('flex_instance_sid')) {
                obj['flex_instance_sid'] = ApiClient.convertToType(data['flex_instance_sid'], 'String');
            }
            if (data.hasOwnProperty('flex_service_instance_sid')) {
                obj['flex_service_instance_sid'] = ApiClient.convertToType(data['flex_service_instance_sid'], 'String');
            }
            if (data.hasOwnProperty('flex_ui_status_report')) {
                obj['flex_ui_status_report'] = ApiClient.convertToType(data['flex_ui_status_report'], Object);
            }
            if (data.hasOwnProperty('flex_url')) {
                obj['flex_url'] = ApiClient.convertToType(data['flex_url'], 'String');
            }
            if (data.hasOwnProperty('integrations')) {
                obj['integrations'] = ApiClient.convertToType(data['integrations'], [Object]);
            }
            if (data.hasOwnProperty('markdown')) {
                obj['markdown'] = ApiClient.convertToType(data['markdown'], Object);
            }
            if (data.hasOwnProperty('messaging_service_instance_sid')) {
                obj['messaging_service_instance_sid'] = ApiClient.convertToType(data['messaging_service_instance_sid'], 'String');
            }
            if (data.hasOwnProperty('notifications')) {
                obj['notifications'] = ApiClient.convertToType(data['notifications'], Object);
            }
            if (data.hasOwnProperty('offline_config')) {
                obj['offline_config'] = ApiClient.convertToType(data['offline_config'], Object);
            }
            if (data.hasOwnProperty('outbound_call_flows')) {
                obj['outbound_call_flows'] = ApiClient.convertToType(data['outbound_call_flows'], Object);
            }
            if (data.hasOwnProperty('plugin_service_attributes')) {
                obj['plugin_service_attributes'] = ApiClient.convertToType(data['plugin_service_attributes'], Object);
            }
            if (data.hasOwnProperty('plugin_service_enabled')) {
                obj['plugin_service_enabled'] = ApiClient.convertToType(data['plugin_service_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('public_attributes')) {
                obj['public_attributes'] = ApiClient.convertToType(data['public_attributes'], Object);
            }
            if (data.hasOwnProperty('queue_stats_configuration')) {
                obj['queue_stats_configuration'] = ApiClient.convertToType(data['queue_stats_configuration'], Object);
            }
            if (data.hasOwnProperty('runtime_domain')) {
                obj['runtime_domain'] = ApiClient.convertToType(data['runtime_domain'], 'String');
            }
            if (data.hasOwnProperty('serverless_service_sids')) {
                obj['serverless_service_sids'] = ApiClient.convertToType(data['serverless_service_sids'], ['String']);
            }
            if (data.hasOwnProperty('service_version')) {
                obj['service_version'] = ApiClient.convertToType(data['service_version'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ConfigurationEnumStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('taskrouter_offline_activity_sid')) {
                obj['taskrouter_offline_activity_sid'] = ApiClient.convertToType(data['taskrouter_offline_activity_sid'], 'String');
            }
            if (data.hasOwnProperty('taskrouter_skills')) {
                obj['taskrouter_skills'] = ApiClient.convertToType(data['taskrouter_skills'], [Object]);
            }
            if (data.hasOwnProperty('taskrouter_target_taskqueue_sid')) {
                obj['taskrouter_target_taskqueue_sid'] = ApiClient.convertToType(data['taskrouter_target_taskqueue_sid'], 'String');
            }
            if (data.hasOwnProperty('taskrouter_target_workflow_sid')) {
                obj['taskrouter_target_workflow_sid'] = ApiClient.convertToType(data['taskrouter_target_workflow_sid'], 'String');
            }
            if (data.hasOwnProperty('taskrouter_taskqueues')) {
                obj['taskrouter_taskqueues'] = ApiClient.convertToType(data['taskrouter_taskqueues'], [Object]);
            }
            if (data.hasOwnProperty('taskrouter_worker_attributes')) {
                obj['taskrouter_worker_attributes'] = ApiClient.convertToType(data['taskrouter_worker_attributes'], Object);
            }
            if (data.hasOwnProperty('taskrouter_worker_channels')) {
                obj['taskrouter_worker_channels'] = ApiClient.convertToType(data['taskrouter_worker_channels'], Object);
            }
            if (data.hasOwnProperty('taskrouter_workspace_sid')) {
                obj['taskrouter_workspace_sid'] = ApiClient.convertToType(data['taskrouter_workspace_sid'], 'String');
            }
            if (data.hasOwnProperty('ui_attributes')) {
                obj['ui_attributes'] = ApiClient.convertToType(data['ui_attributes'], Object);
            }
            if (data.hasOwnProperty('ui_dependencies')) {
                obj['ui_dependencies'] = ApiClient.convertToType(data['ui_dependencies'], Object);
            }
            if (data.hasOwnProperty('ui_language')) {
                obj['ui_language'] = ApiClient.convertToType(data['ui_language'], 'String');
            }
            if (data.hasOwnProperty('ui_version')) {
                obj['ui_version'] = ApiClient.convertToType(data['ui_version'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlexV1Configuration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlexV1Configuration</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['call_recording_webhook_url'] && !(typeof data['call_recording_webhook_url'] === 'string' || data['call_recording_webhook_url'] instanceof String)) {
            throw new Error("Expected the field `call_recording_webhook_url` to be a primitive type in the JSON string but got " + data['call_recording_webhook_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['channel_configs'])) {
            throw new Error("Expected the field `channel_configs` to be an array in the JSON data but got " + data['channel_configs']);
        }
        // ensure the json data is a string
        if (data['chat_service_instance_sid'] && !(typeof data['chat_service_instance_sid'] === 'string' || data['chat_service_instance_sid'] instanceof String)) {
            throw new Error("Expected the field `chat_service_instance_sid` to be a primitive type in the JSON string but got " + data['chat_service_instance_sid']);
        }
        // ensure the json data is a string
        if (data['crm_callback_url'] && !(typeof data['crm_callback_url'] === 'string' || data['crm_callback_url'] instanceof String)) {
            throw new Error("Expected the field `crm_callback_url` to be a primitive type in the JSON string but got " + data['crm_callback_url']);
        }
        // ensure the json data is a string
        if (data['crm_fallback_url'] && !(typeof data['crm_fallback_url'] === 'string' || data['crm_fallback_url'] instanceof String)) {
            throw new Error("Expected the field `crm_fallback_url` to be a primitive type in the JSON string but got " + data['crm_fallback_url']);
        }
        // ensure the json data is a string
        if (data['crm_type'] && !(typeof data['crm_type'] === 'string' || data['crm_type'] instanceof String)) {
            throw new Error("Expected the field `crm_type` to be a primitive type in the JSON string but got " + data['crm_type']);
        }
        // ensure the json data is a string
        if (data['flex_instance_sid'] && !(typeof data['flex_instance_sid'] === 'string' || data['flex_instance_sid'] instanceof String)) {
            throw new Error("Expected the field `flex_instance_sid` to be a primitive type in the JSON string but got " + data['flex_instance_sid']);
        }
        // ensure the json data is a string
        if (data['flex_service_instance_sid'] && !(typeof data['flex_service_instance_sid'] === 'string' || data['flex_service_instance_sid'] instanceof String)) {
            throw new Error("Expected the field `flex_service_instance_sid` to be a primitive type in the JSON string but got " + data['flex_service_instance_sid']);
        }
        // ensure the json data is a string
        if (data['flex_url'] && !(typeof data['flex_url'] === 'string' || data['flex_url'] instanceof String)) {
            throw new Error("Expected the field `flex_url` to be a primitive type in the JSON string but got " + data['flex_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['integrations'])) {
            throw new Error("Expected the field `integrations` to be an array in the JSON data but got " + data['integrations']);
        }
        // ensure the json data is a string
        if (data['messaging_service_instance_sid'] && !(typeof data['messaging_service_instance_sid'] === 'string' || data['messaging_service_instance_sid'] instanceof String)) {
            throw new Error("Expected the field `messaging_service_instance_sid` to be a primitive type in the JSON string but got " + data['messaging_service_instance_sid']);
        }
        // ensure the json data is a string
        if (data['runtime_domain'] && !(typeof data['runtime_domain'] === 'string' || data['runtime_domain'] instanceof String)) {
            throw new Error("Expected the field `runtime_domain` to be a primitive type in the JSON string but got " + data['runtime_domain']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['serverless_service_sids'])) {
            throw new Error("Expected the field `serverless_service_sids` to be an array in the JSON data but got " + data['serverless_service_sids']);
        }
        // ensure the json data is a string
        if (data['service_version'] && !(typeof data['service_version'] === 'string' || data['service_version'] instanceof String)) {
            throw new Error("Expected the field `service_version` to be a primitive type in the JSON string but got " + data['service_version']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['taskrouter_offline_activity_sid'] && !(typeof data['taskrouter_offline_activity_sid'] === 'string' || data['taskrouter_offline_activity_sid'] instanceof String)) {
            throw new Error("Expected the field `taskrouter_offline_activity_sid` to be a primitive type in the JSON string but got " + data['taskrouter_offline_activity_sid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['taskrouter_skills'])) {
            throw new Error("Expected the field `taskrouter_skills` to be an array in the JSON data but got " + data['taskrouter_skills']);
        }
        // ensure the json data is a string
        if (data['taskrouter_target_taskqueue_sid'] && !(typeof data['taskrouter_target_taskqueue_sid'] === 'string' || data['taskrouter_target_taskqueue_sid'] instanceof String)) {
            throw new Error("Expected the field `taskrouter_target_taskqueue_sid` to be a primitive type in the JSON string but got " + data['taskrouter_target_taskqueue_sid']);
        }
        // ensure the json data is a string
        if (data['taskrouter_target_workflow_sid'] && !(typeof data['taskrouter_target_workflow_sid'] === 'string' || data['taskrouter_target_workflow_sid'] instanceof String)) {
            throw new Error("Expected the field `taskrouter_target_workflow_sid` to be a primitive type in the JSON string but got " + data['taskrouter_target_workflow_sid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['taskrouter_taskqueues'])) {
            throw new Error("Expected the field `taskrouter_taskqueues` to be an array in the JSON data but got " + data['taskrouter_taskqueues']);
        }
        // ensure the json data is a string
        if (data['taskrouter_workspace_sid'] && !(typeof data['taskrouter_workspace_sid'] === 'string' || data['taskrouter_workspace_sid'] instanceof String)) {
            throw new Error("Expected the field `taskrouter_workspace_sid` to be a primitive type in the JSON string but got " + data['taskrouter_workspace_sid']);
        }
        // ensure the json data is a string
        if (data['ui_language'] && !(typeof data['ui_language'] === 'string' || data['ui_language'] instanceof String)) {
            throw new Error("Expected the field `ui_language` to be a primitive type in the JSON string but got " + data['ui_language']);
        }
        // ensure the json data is a string
        if (data['ui_version'] && !(typeof data['ui_version'] === 'string' || data['ui_version'] instanceof String)) {
            throw new Error("Expected the field `ui_version` to be a primitive type in the JSON string but got " + data['ui_version']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Configuration resource.
 * @member {String} account_sid
 */
FlexV1Configuration.prototype['account_sid'] = undefined;

/**
 * Agent conversation end methods.
 * @member {Object} agent_conv_end_methods
 */
FlexV1Configuration.prototype['agent_conv_end_methods'] = undefined;

/**
 * An object that contains application-specific data.
 * @member {Object} attributes
 */
FlexV1Configuration.prototype['attributes'] = undefined;

/**
 * Whether call recording is enabled.
 * @member {Boolean} call_recording_enabled
 */
FlexV1Configuration.prototype['call_recording_enabled'] = undefined;

/**
 * The call recording webhook URL.
 * @member {String} call_recording_webhook_url
 */
FlexV1Configuration.prototype['call_recording_webhook_url'] = undefined;

/**
 * Settings for different limits for Flex Conversations channels attachments.
 * @member {Array.<Object>} channel_configs
 */
FlexV1Configuration.prototype['channel_configs'] = undefined;

/**
 * The SID of the chat service this user belongs to.
 * @member {String} chat_service_instance_sid
 */
FlexV1Configuration.prototype['chat_service_instance_sid'] = undefined;

/**
 * Citrix voice vdi configuration and settings.
 * @member {Object} citrix_voice_vdi
 */
FlexV1Configuration.prototype['citrix_voice_vdi'] = undefined;

/**
 * An object that contains the CRM attributes.
 * @member {Object} crm_attributes
 */
FlexV1Configuration.prototype['crm_attributes'] = undefined;

/**
 * The CRM Callback URL.
 * @member {String} crm_callback_url
 */
FlexV1Configuration.prototype['crm_callback_url'] = undefined;

/**
 * Whether CRM is present for Flex.
 * @member {Boolean} crm_enabled
 */
FlexV1Configuration.prototype['crm_enabled'] = undefined;

/**
 * The CRM Fallback URL.
 * @member {String} crm_fallback_url
 */
FlexV1Configuration.prototype['crm_fallback_url'] = undefined;

/**
 * The CRM type.
 * @member {String} crm_type
 */
FlexV1Configuration.prototype['crm_type'] = undefined;

/**
 * The date and time in GMT when the Configuration resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
FlexV1Configuration.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the Configuration resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
FlexV1Configuration.prototype['date_updated'] = undefined;

/**
 * Configurable parameters for Debugger Integration.
 * @member {Object} debugger_integration
 */
FlexV1Configuration.prototype['debugger_integration'] = undefined;

/**
 * Setting this to true will redirect Flex UI to the URL set in flex_url
 * @member {Boolean} flex_insights_drilldown
 */
FlexV1Configuration.prototype['flex_insights_drilldown'] = undefined;

/**
 * Object with enabled/disabled flag with list of workspaces.
 * @member {Object} flex_insights_hr
 */
FlexV1Configuration.prototype['flex_insights_hr'] = undefined;

/**
 * The SID of the Flex instance.
 * @member {String} flex_instance_sid
 */
FlexV1Configuration.prototype['flex_instance_sid'] = undefined;

/**
 * The SID of the Flex service instance.
 * @member {String} flex_service_instance_sid
 */
FlexV1Configuration.prototype['flex_service_instance_sid'] = undefined;

/**
 * Configurable parameters for Flex UI Status report.
 * @member {Object} flex_ui_status_report
 */
FlexV1Configuration.prototype['flex_ui_status_report'] = undefined;

/**
 * URL to redirect to in case drilldown is enabled.
 * @member {String} flex_url
 */
FlexV1Configuration.prototype['flex_url'] = undefined;

/**
 * A list of objects that contain the configurations for the Integrations supported in this configuration.
 * @member {Array.<Object>} integrations
 */
FlexV1Configuration.prototype['integrations'] = undefined;

/**
 * Configurable parameters for Markdown.
 * @member {Object} markdown
 */
FlexV1Configuration.prototype['markdown'] = undefined;

/**
 * The SID of the Messaging service instance.
 * @member {String} messaging_service_instance_sid
 */
FlexV1Configuration.prototype['messaging_service_instance_sid'] = undefined;

/**
 * Configurable parameters for Notifications.
 * @member {Object} notifications
 */
FlexV1Configuration.prototype['notifications'] = undefined;

/**
 * Presence and presence ttl configuration
 * @member {Object} offline_config
 */
FlexV1Configuration.prototype['offline_config'] = undefined;

/**
 * The list of outbound call flows.
 * @member {Object} outbound_call_flows
 */
FlexV1Configuration.prototype['outbound_call_flows'] = undefined;

/**
 * The plugin service attributes.
 * @member {Object} plugin_service_attributes
 */
FlexV1Configuration.prototype['plugin_service_attributes'] = undefined;

/**
 * Whether the plugin service enabled.
 * @member {Boolean} plugin_service_enabled
 */
FlexV1Configuration.prototype['plugin_service_enabled'] = undefined;

/**
 * The list of public attributes, which are visible to unauthenticated clients.
 * @member {Object} public_attributes
 */
FlexV1Configuration.prototype['public_attributes'] = undefined;

/**
 * Configurable parameters for Queues Statistics.
 * @member {Object} queue_stats_configuration
 */
FlexV1Configuration.prototype['queue_stats_configuration'] = undefined;

/**
 * The URL where the Flex instance is hosted.
 * @member {String} runtime_domain
 */
FlexV1Configuration.prototype['runtime_domain'] = undefined;

/**
 * The list of serverless service SIDs.
 * @member {Array.<String>} serverless_service_sids
 */
FlexV1Configuration.prototype['serverless_service_sids'] = undefined;

/**
 * The Flex Service version.
 * @member {String} service_version
 */
FlexV1Configuration.prototype['service_version'] = undefined;

/**
 * @member {module:model/ConfigurationEnumStatus} status
 */
FlexV1Configuration.prototype['status'] = undefined;

/**
 * The TaskRouter SID of the offline activity.
 * @member {String} taskrouter_offline_activity_sid
 */
FlexV1Configuration.prototype['taskrouter_offline_activity_sid'] = undefined;

/**
 * The Skill description for TaskRouter workers.
 * @member {Array.<Object>} taskrouter_skills
 */
FlexV1Configuration.prototype['taskrouter_skills'] = undefined;

/**
 * The SID of the TaskRouter Target TaskQueue.
 * @member {String} taskrouter_target_taskqueue_sid
 */
FlexV1Configuration.prototype['taskrouter_target_taskqueue_sid'] = undefined;

/**
 * The SID of the TaskRouter target Workflow.
 * @member {String} taskrouter_target_workflow_sid
 */
FlexV1Configuration.prototype['taskrouter_target_workflow_sid'] = undefined;

/**
 * The list of TaskRouter TaskQueues.
 * @member {Array.<Object>} taskrouter_taskqueues
 */
FlexV1Configuration.prototype['taskrouter_taskqueues'] = undefined;

/**
 * The TaskRouter Worker attributes.
 * @member {Object} taskrouter_worker_attributes
 */
FlexV1Configuration.prototype['taskrouter_worker_attributes'] = undefined;

/**
 * The TaskRouter default channel capacities and availability for workers.
 * @member {Object} taskrouter_worker_channels
 */
FlexV1Configuration.prototype['taskrouter_worker_channels'] = undefined;

/**
 * The SID of the TaskRouter Workspace.
 * @member {String} taskrouter_workspace_sid
 */
FlexV1Configuration.prototype['taskrouter_workspace_sid'] = undefined;

/**
 * The object that describes Flex UI characteristics and settings.
 * @member {Object} ui_attributes
 */
FlexV1Configuration.prototype['ui_attributes'] = undefined;

/**
 * The object that defines the NPM packages and versions to be used in Hosted Flex.
 * @member {Object} ui_dependencies
 */
FlexV1Configuration.prototype['ui_dependencies'] = undefined;

/**
 * The primary language of the Flex UI.
 * @member {String} ui_language
 */
FlexV1Configuration.prototype['ui_language'] = undefined;

/**
 * The Pinned UI version.
 * @member {String} ui_version
 */
FlexV1Configuration.prototype['ui_version'] = undefined;

/**
 * The absolute URL of the Configuration resource.
 * @member {String} url
 */
FlexV1Configuration.prototype['url'] = undefined;






export default FlexV1Configuration;

