/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioFlex);
  }
}(this, function(expect, TwilioFlex) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioFlex.FlexV1Configuration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FlexV1Configuration', function() {
    it('should create an instance of FlexV1Configuration', function() {
      // uncomment below and update the code to test FlexV1Configuration
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be.a(TwilioFlex.FlexV1Configuration);
    });

    it('should have the property accountSid (base name: "account_sid")', function() {
      // uncomment below and update the code to test the property accountSid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property agentConvEndMethods (base name: "agent_conv_end_methods")', function() {
      // uncomment below and update the code to test the property agentConvEndMethods
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property callRecordingEnabled (base name: "call_recording_enabled")', function() {
      // uncomment below and update the code to test the property callRecordingEnabled
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property callRecordingWebhookUrl (base name: "call_recording_webhook_url")', function() {
      // uncomment below and update the code to test the property callRecordingWebhookUrl
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property channelConfigs (base name: "channel_configs")', function() {
      // uncomment below and update the code to test the property channelConfigs
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property chatServiceInstanceSid (base name: "chat_service_instance_sid")', function() {
      // uncomment below and update the code to test the property chatServiceInstanceSid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property citrixVoiceVdi (base name: "citrix_voice_vdi")', function() {
      // uncomment below and update the code to test the property citrixVoiceVdi
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property crmAttributes (base name: "crm_attributes")', function() {
      // uncomment below and update the code to test the property crmAttributes
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property crmCallbackUrl (base name: "crm_callback_url")', function() {
      // uncomment below and update the code to test the property crmCallbackUrl
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property crmEnabled (base name: "crm_enabled")', function() {
      // uncomment below and update the code to test the property crmEnabled
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property crmFallbackUrl (base name: "crm_fallback_url")', function() {
      // uncomment below and update the code to test the property crmFallbackUrl
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property crmType (base name: "crm_type")', function() {
      // uncomment below and update the code to test the property crmType
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "date_created")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property dateUpdated (base name: "date_updated")', function() {
      // uncomment below and update the code to test the property dateUpdated
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property debuggerIntegration (base name: "debugger_integration")', function() {
      // uncomment below and update the code to test the property debuggerIntegration
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property flexInsightsDrilldown (base name: "flex_insights_drilldown")', function() {
      // uncomment below and update the code to test the property flexInsightsDrilldown
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property flexInsightsHr (base name: "flex_insights_hr")', function() {
      // uncomment below and update the code to test the property flexInsightsHr
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property flexInstanceSid (base name: "flex_instance_sid")', function() {
      // uncomment below and update the code to test the property flexInstanceSid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property flexServiceInstanceSid (base name: "flex_service_instance_sid")', function() {
      // uncomment below and update the code to test the property flexServiceInstanceSid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property flexUiStatusReport (base name: "flex_ui_status_report")', function() {
      // uncomment below and update the code to test the property flexUiStatusReport
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property flexUrl (base name: "flex_url")', function() {
      // uncomment below and update the code to test the property flexUrl
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property integrations (base name: "integrations")', function() {
      // uncomment below and update the code to test the property integrations
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property markdown (base name: "markdown")', function() {
      // uncomment below and update the code to test the property markdown
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property messagingServiceInstanceSid (base name: "messaging_service_instance_sid")', function() {
      // uncomment below and update the code to test the property messagingServiceInstanceSid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property notifications (base name: "notifications")', function() {
      // uncomment below and update the code to test the property notifications
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property offlineConfig (base name: "offline_config")', function() {
      // uncomment below and update the code to test the property offlineConfig
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property outboundCallFlows (base name: "outbound_call_flows")', function() {
      // uncomment below and update the code to test the property outboundCallFlows
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property pluginServiceAttributes (base name: "plugin_service_attributes")', function() {
      // uncomment below and update the code to test the property pluginServiceAttributes
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property pluginServiceEnabled (base name: "plugin_service_enabled")', function() {
      // uncomment below and update the code to test the property pluginServiceEnabled
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property publicAttributes (base name: "public_attributes")', function() {
      // uncomment below and update the code to test the property publicAttributes
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property queueStatsConfiguration (base name: "queue_stats_configuration")', function() {
      // uncomment below and update the code to test the property queueStatsConfiguration
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property runtimeDomain (base name: "runtime_domain")', function() {
      // uncomment below and update the code to test the property runtimeDomain
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property serverlessServiceSids (base name: "serverless_service_sids")', function() {
      // uncomment below and update the code to test the property serverlessServiceSids
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property serviceVersion (base name: "service_version")', function() {
      // uncomment below and update the code to test the property serviceVersion
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property taskrouterOfflineActivitySid (base name: "taskrouter_offline_activity_sid")', function() {
      // uncomment below and update the code to test the property taskrouterOfflineActivitySid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property taskrouterSkills (base name: "taskrouter_skills")', function() {
      // uncomment below and update the code to test the property taskrouterSkills
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property taskrouterTargetTaskqueueSid (base name: "taskrouter_target_taskqueue_sid")', function() {
      // uncomment below and update the code to test the property taskrouterTargetTaskqueueSid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property taskrouterTargetWorkflowSid (base name: "taskrouter_target_workflow_sid")', function() {
      // uncomment below and update the code to test the property taskrouterTargetWorkflowSid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property taskrouterTaskqueues (base name: "taskrouter_taskqueues")', function() {
      // uncomment below and update the code to test the property taskrouterTaskqueues
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property taskrouterWorkerAttributes (base name: "taskrouter_worker_attributes")', function() {
      // uncomment below and update the code to test the property taskrouterWorkerAttributes
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property taskrouterWorkerChannels (base name: "taskrouter_worker_channels")', function() {
      // uncomment below and update the code to test the property taskrouterWorkerChannels
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property taskrouterWorkspaceSid (base name: "taskrouter_workspace_sid")', function() {
      // uncomment below and update the code to test the property taskrouterWorkspaceSid
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property uiAttributes (base name: "ui_attributes")', function() {
      // uncomment below and update the code to test the property uiAttributes
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property uiDependencies (base name: "ui_dependencies")', function() {
      // uncomment below and update the code to test the property uiDependencies
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property uiLanguage (base name: "ui_language")', function() {
      // uncomment below and update the code to test the property uiLanguage
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property uiVersion (base name: "ui_version")', function() {
      // uncomment below and update the code to test the property uiVersion
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TwilioFlex.FlexV1Configuration();
      //expect(instance).to.be();
    });

  });

}));
