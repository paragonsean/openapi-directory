/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlex_v1_insights_conversations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlex_v1_insights_conversations::OAIFlex_v1_insights_conversations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlex_v1_insights_conversations::OAIFlex_v1_insights_conversations() {
    this->initializeModel();
}

OAIFlex_v1_insights_conversations::~OAIFlex_v1_insights_conversations() {}

void OAIFlex_v1_insights_conversations::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_conversation_id_isSet = false;
    m_conversation_id_isValid = false;

    m_segment_count_isSet = false;
    m_segment_count_isValid = false;

    m_segments_isSet = false;
    m_segments_isValid = false;
}

void OAIFlex_v1_insights_conversations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlex_v1_insights_conversations::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_conversation_id_isValid = ::OpenAPI::fromJsonValue(m_conversation_id, json[QString("conversation_id")]);
    m_conversation_id_isSet = !json[QString("conversation_id")].isNull() && m_conversation_id_isValid;

    m_segment_count_isValid = ::OpenAPI::fromJsonValue(m_segment_count, json[QString("segment_count")]);
    m_segment_count_isSet = !json[QString("segment_count")].isNull() && m_segment_count_isValid;

    m_segments_isValid = ::OpenAPI::fromJsonValue(m_segments, json[QString("segments")]);
    m_segments_isSet = !json[QString("segments")].isNull() && m_segments_isValid;
}

QString OAIFlex_v1_insights_conversations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlex_v1_insights_conversations::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_conversation_id_isSet) {
        obj.insert(QString("conversation_id"), ::OpenAPI::toJsonValue(m_conversation_id));
    }
    if (m_segment_count_isSet) {
        obj.insert(QString("segment_count"), ::OpenAPI::toJsonValue(m_segment_count));
    }
    if (m_segments.size() > 0) {
        obj.insert(QString("segments"), ::OpenAPI::toJsonValue(m_segments));
    }
    return obj;
}

QString OAIFlex_v1_insights_conversations::getAccountId() const {
    return m_account_id;
}
void OAIFlex_v1_insights_conversations::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIFlex_v1_insights_conversations::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIFlex_v1_insights_conversations::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIFlex_v1_insights_conversations::getConversationId() const {
    return m_conversation_id;
}
void OAIFlex_v1_insights_conversations::setConversationId(const QString &conversation_id) {
    m_conversation_id = conversation_id;
    m_conversation_id_isSet = true;
}

bool OAIFlex_v1_insights_conversations::is_conversation_id_Set() const{
    return m_conversation_id_isSet;
}

bool OAIFlex_v1_insights_conversations::is_conversation_id_Valid() const{
    return m_conversation_id_isValid;
}

qint32 OAIFlex_v1_insights_conversations::getSegmentCount() const {
    return m_segment_count;
}
void OAIFlex_v1_insights_conversations::setSegmentCount(const qint32 &segment_count) {
    m_segment_count = segment_count;
    m_segment_count_isSet = true;
}

bool OAIFlex_v1_insights_conversations::is_segment_count_Set() const{
    return m_segment_count_isSet;
}

bool OAIFlex_v1_insights_conversations::is_segment_count_Valid() const{
    return m_segment_count_isValid;
}

QList<QJsonValue> OAIFlex_v1_insights_conversations::getSegments() const {
    return m_segments;
}
void OAIFlex_v1_insights_conversations::setSegments(const QList<QJsonValue> &segments) {
    m_segments = segments;
    m_segments_isSet = true;
}

bool OAIFlex_v1_insights_conversations::is_segments_Set() const{
    return m_segments_isSet;
}

bool OAIFlex_v1_insights_conversations::is_segments_Valid() const{
    return m_segments_isValid;
}

bool OAIFlex_v1_insights_conversations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlex_v1_insights_conversations::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
