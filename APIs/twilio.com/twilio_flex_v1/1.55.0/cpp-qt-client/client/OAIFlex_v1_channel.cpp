/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlex_v1_channel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlex_v1_channel::OAIFlex_v1_channel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlex_v1_channel::OAIFlex_v1_channel() {
    this->initializeModel();
}

OAIFlex_v1_channel::~OAIFlex_v1_channel() {}

void OAIFlex_v1_channel::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_flex_flow_sid_isSet = false;
    m_flex_flow_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_task_sid_isSet = false;
    m_task_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_user_sid_isSet = false;
    m_user_sid_isValid = false;
}

void OAIFlex_v1_channel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlex_v1_channel::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_flex_flow_sid_isValid = ::OpenAPI::fromJsonValue(m_flex_flow_sid, json[QString("flex_flow_sid")]);
    m_flex_flow_sid_isSet = !json[QString("flex_flow_sid")].isNull() && m_flex_flow_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_task_sid_isValid = ::OpenAPI::fromJsonValue(m_task_sid, json[QString("task_sid")]);
    m_task_sid_isSet = !json[QString("task_sid")].isNull() && m_task_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_user_sid_isValid = ::OpenAPI::fromJsonValue(m_user_sid, json[QString("user_sid")]);
    m_user_sid_isSet = !json[QString("user_sid")].isNull() && m_user_sid_isValid;
}

QString OAIFlex_v1_channel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlex_v1_channel::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_flex_flow_sid_isSet) {
        obj.insert(QString("flex_flow_sid"), ::OpenAPI::toJsonValue(m_flex_flow_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_task_sid_isSet) {
        obj.insert(QString("task_sid"), ::OpenAPI::toJsonValue(m_task_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_user_sid_isSet) {
        obj.insert(QString("user_sid"), ::OpenAPI::toJsonValue(m_user_sid));
    }
    return obj;
}

QString OAIFlex_v1_channel::getAccountSid() const {
    return m_account_sid;
}
void OAIFlex_v1_channel::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIFlex_v1_channel::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIFlex_v1_channel::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QDateTime OAIFlex_v1_channel::getDateCreated() const {
    return m_date_created;
}
void OAIFlex_v1_channel::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIFlex_v1_channel::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIFlex_v1_channel::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIFlex_v1_channel::getDateUpdated() const {
    return m_date_updated;
}
void OAIFlex_v1_channel::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIFlex_v1_channel::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIFlex_v1_channel::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIFlex_v1_channel::getFlexFlowSid() const {
    return m_flex_flow_sid;
}
void OAIFlex_v1_channel::setFlexFlowSid(const QString &flex_flow_sid) {
    m_flex_flow_sid = flex_flow_sid;
    m_flex_flow_sid_isSet = true;
}

bool OAIFlex_v1_channel::is_flex_flow_sid_Set() const{
    return m_flex_flow_sid_isSet;
}

bool OAIFlex_v1_channel::is_flex_flow_sid_Valid() const{
    return m_flex_flow_sid_isValid;
}

QString OAIFlex_v1_channel::getSid() const {
    return m_sid;
}
void OAIFlex_v1_channel::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIFlex_v1_channel::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIFlex_v1_channel::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIFlex_v1_channel::getTaskSid() const {
    return m_task_sid;
}
void OAIFlex_v1_channel::setTaskSid(const QString &task_sid) {
    m_task_sid = task_sid;
    m_task_sid_isSet = true;
}

bool OAIFlex_v1_channel::is_task_sid_Set() const{
    return m_task_sid_isSet;
}

bool OAIFlex_v1_channel::is_task_sid_Valid() const{
    return m_task_sid_isValid;
}

QString OAIFlex_v1_channel::getUrl() const {
    return m_url;
}
void OAIFlex_v1_channel::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFlex_v1_channel::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFlex_v1_channel::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIFlex_v1_channel::getUserSid() const {
    return m_user_sid;
}
void OAIFlex_v1_channel::setUserSid(const QString &user_sid) {
    m_user_sid = user_sid;
    m_user_sid_isSet = true;
}

bool OAIFlex_v1_channel::is_user_sid_Set() const{
    return m_user_sid_isSet;
}

bool OAIFlex_v1_channel::is_user_sid_Valid() const{
    return m_user_sid_isValid;
}

bool OAIFlex_v1_channel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flex_flow_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_sid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlex_v1_channel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
