/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlex_v1_insights_questionnaires_category.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlex_v1_insights_questionnaires_category::OAIFlex_v1_insights_questionnaires_category(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlex_v1_insights_questionnaires_category::OAIFlex_v1_insights_questionnaires_category() {
    this->initializeModel();
}

OAIFlex_v1_insights_questionnaires_category::~OAIFlex_v1_insights_questionnaires_category() {}

void OAIFlex_v1_insights_questionnaires_category::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_category_sid_isSet = false;
    m_category_sid_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIFlex_v1_insights_questionnaires_category::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlex_v1_insights_questionnaires_category::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_category_sid_isValid = ::OpenAPI::fromJsonValue(m_category_sid, json[QString("category_sid")]);
    m_category_sid_isSet = !json[QString("category_sid")].isNull() && m_category_sid_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIFlex_v1_insights_questionnaires_category::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlex_v1_insights_questionnaires_category::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_category_sid_isSet) {
        obj.insert(QString("category_sid"), ::OpenAPI::toJsonValue(m_category_sid));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIFlex_v1_insights_questionnaires_category::getAccountSid() const {
    return m_account_sid;
}
void OAIFlex_v1_insights_questionnaires_category::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIFlex_v1_insights_questionnaires_category::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIFlex_v1_insights_questionnaires_category::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIFlex_v1_insights_questionnaires_category::getCategorySid() const {
    return m_category_sid;
}
void OAIFlex_v1_insights_questionnaires_category::setCategorySid(const QString &category_sid) {
    m_category_sid = category_sid;
    m_category_sid_isSet = true;
}

bool OAIFlex_v1_insights_questionnaires_category::is_category_sid_Set() const{
    return m_category_sid_isSet;
}

bool OAIFlex_v1_insights_questionnaires_category::is_category_sid_Valid() const{
    return m_category_sid_isValid;
}

QString OAIFlex_v1_insights_questionnaires_category::getName() const {
    return m_name;
}
void OAIFlex_v1_insights_questionnaires_category::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFlex_v1_insights_questionnaires_category::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFlex_v1_insights_questionnaires_category::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIFlex_v1_insights_questionnaires_category::getUrl() const {
    return m_url;
}
void OAIFlex_v1_insights_questionnaires_category::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFlex_v1_insights_questionnaires_category::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFlex_v1_insights_questionnaires_category::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIFlex_v1_insights_questionnaires_category::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlex_v1_insights_questionnaires_category::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
