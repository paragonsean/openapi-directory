/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlex_v1_flex_flow.h
 *
 * 
 */

#ifndef OAIFlex_v1_flex_flow_H
#define OAIFlex_v1_flex_flow_H

#include <QJsonObject>

#include "OAIFlex_flow_enum_channel_type.h"
#include "OAIFlex_flow_enum_integration_type.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFlex_v1_flex_flow : public OAIObject {
public:
    OAIFlex_v1_flex_flow();
    OAIFlex_v1_flex_flow(QString json);
    ~OAIFlex_v1_flex_flow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    OAIFlex_flow_enum_channel_type getChannelType() const;
    void setChannelType(const OAIFlex_flow_enum_channel_type &channel_type);
    bool is_channel_type_Set() const;
    bool is_channel_type_Valid() const;

    QString getChatServiceSid() const;
    void setChatServiceSid(const QString &chat_service_sid);
    bool is_chat_service_sid_Set() const;
    bool is_chat_service_sid_Valid() const;

    QString getContactIdentity() const;
    void setContactIdentity(const QString &contact_identity);
    bool is_contact_identity_Set() const;
    bool is_contact_identity_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QJsonValue getIntegration() const;
    void setIntegration(const QJsonValue &integration);
    bool is_integration_Set() const;
    bool is_integration_Valid() const;

    OAIFlex_flow_enum_integration_type getIntegrationType() const;
    void setIntegrationType(const OAIFlex_flow_enum_integration_type &integration_type);
    bool is_integration_type_Set() const;
    bool is_integration_type_Valid() const;

    bool isJanitorEnabled() const;
    void setJanitorEnabled(const bool &janitor_enabled);
    bool is_janitor_enabled_Set() const;
    bool is_janitor_enabled_Valid() const;

    bool isLongLived() const;
    void setLongLived(const bool &long_lived);
    bool is_long_lived_Set() const;
    bool is_long_lived_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    OAIFlex_flow_enum_channel_type m_channel_type;
    bool m_channel_type_isSet;
    bool m_channel_type_isValid;

    QString m_chat_service_sid;
    bool m_chat_service_sid_isSet;
    bool m_chat_service_sid_isValid;

    QString m_contact_identity;
    bool m_contact_identity_isSet;
    bool m_contact_identity_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QJsonValue m_integration;
    bool m_integration_isSet;
    bool m_integration_isValid;

    OAIFlex_flow_enum_integration_type m_integration_type;
    bool m_integration_type_isSet;
    bool m_integration_type_isValid;

    bool m_janitor_enabled;
    bool m_janitor_enabled_isSet;
    bool m_janitor_enabled_isValid;

    bool m_long_lived;
    bool m_long_lived_isSet;
    bool m_long_lived_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlex_v1_flex_flow)

#endif // OAIFlex_v1_flex_flow_H
