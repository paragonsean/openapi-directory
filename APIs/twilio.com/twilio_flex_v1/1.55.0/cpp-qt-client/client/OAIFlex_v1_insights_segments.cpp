/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlex_v1_insights_segments.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlex_v1_insights_segments::OAIFlex_v1_insights_segments(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlex_v1_insights_segments::OAIFlex_v1_insights_segments() {
    this->initializeModel();
}

OAIFlex_v1_insights_segments::~OAIFlex_v1_insights_segments() {}

void OAIFlex_v1_insights_segments::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_agent_id_isSet = false;
    m_agent_id_isValid = false;

    m_agent_link_isSet = false;
    m_agent_link_isValid = false;

    m_agent_name_isSet = false;
    m_agent_name_isValid = false;

    m_agent_phone_isSet = false;
    m_agent_phone_isValid = false;

    m_agent_team_name_isSet = false;
    m_agent_team_name_isValid = false;

    m_agent_team_name_in_hierarchy_isSet = false;
    m_agent_team_name_in_hierarchy_isValid = false;

    m_assessment_percentage_isSet = false;
    m_assessment_percentage_isValid = false;

    m_assessment_type_isSet = false;
    m_assessment_type_isValid = false;

    m_customer_link_isSet = false;
    m_customer_link_isValid = false;

    m_customer_name_isSet = false;
    m_customer_name_isValid = false;

    m_customer_phone_isSet = false;
    m_customer_phone_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_external_contact_isSet = false;
    m_external_contact_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_external_segment_link_isSet = false;
    m_external_segment_link_isValid = false;

    m_external_segment_link_id_isSet = false;
    m_external_segment_link_id_isValid = false;

    m_media_isSet = false;
    m_media_isValid = false;

    m_queue_isSet = false;
    m_queue_isValid = false;

    m_segment_id_isSet = false;
    m_segment_id_isValid = false;

    m_segment_recording_offset_isSet = false;
    m_segment_recording_offset_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIFlex_v1_insights_segments::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlex_v1_insights_segments::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_agent_id_isValid = ::OpenAPI::fromJsonValue(m_agent_id, json[QString("agent_id")]);
    m_agent_id_isSet = !json[QString("agent_id")].isNull() && m_agent_id_isValid;

    m_agent_link_isValid = ::OpenAPI::fromJsonValue(m_agent_link, json[QString("agent_link")]);
    m_agent_link_isSet = !json[QString("agent_link")].isNull() && m_agent_link_isValid;

    m_agent_name_isValid = ::OpenAPI::fromJsonValue(m_agent_name, json[QString("agent_name")]);
    m_agent_name_isSet = !json[QString("agent_name")].isNull() && m_agent_name_isValid;

    m_agent_phone_isValid = ::OpenAPI::fromJsonValue(m_agent_phone, json[QString("agent_phone")]);
    m_agent_phone_isSet = !json[QString("agent_phone")].isNull() && m_agent_phone_isValid;

    m_agent_team_name_isValid = ::OpenAPI::fromJsonValue(m_agent_team_name, json[QString("agent_team_name")]);
    m_agent_team_name_isSet = !json[QString("agent_team_name")].isNull() && m_agent_team_name_isValid;

    m_agent_team_name_in_hierarchy_isValid = ::OpenAPI::fromJsonValue(m_agent_team_name_in_hierarchy, json[QString("agent_team_name_in_hierarchy")]);
    m_agent_team_name_in_hierarchy_isSet = !json[QString("agent_team_name_in_hierarchy")].isNull() && m_agent_team_name_in_hierarchy_isValid;

    m_assessment_percentage_isValid = ::OpenAPI::fromJsonValue(m_assessment_percentage, json[QString("assessment_percentage")]);
    m_assessment_percentage_isSet = !json[QString("assessment_percentage")].isNull() && m_assessment_percentage_isValid;

    m_assessment_type_isValid = ::OpenAPI::fromJsonValue(m_assessment_type, json[QString("assessment_type")]);
    m_assessment_type_isSet = !json[QString("assessment_type")].isNull() && m_assessment_type_isValid;

    m_customer_link_isValid = ::OpenAPI::fromJsonValue(m_customer_link, json[QString("customer_link")]);
    m_customer_link_isSet = !json[QString("customer_link")].isNull() && m_customer_link_isValid;

    m_customer_name_isValid = ::OpenAPI::fromJsonValue(m_customer_name, json[QString("customer_name")]);
    m_customer_name_isSet = !json[QString("customer_name")].isNull() && m_customer_name_isValid;

    m_customer_phone_isValid = ::OpenAPI::fromJsonValue(m_customer_phone, json[QString("customer_phone")]);
    m_customer_phone_isSet = !json[QString("customer_phone")].isNull() && m_customer_phone_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_external_contact_isValid = ::OpenAPI::fromJsonValue(m_external_contact, json[QString("external_contact")]);
    m_external_contact_isSet = !json[QString("external_contact")].isNull() && m_external_contact_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("external_id")]);
    m_external_id_isSet = !json[QString("external_id")].isNull() && m_external_id_isValid;

    m_external_segment_link_isValid = ::OpenAPI::fromJsonValue(m_external_segment_link, json[QString("external_segment_link")]);
    m_external_segment_link_isSet = !json[QString("external_segment_link")].isNull() && m_external_segment_link_isValid;

    m_external_segment_link_id_isValid = ::OpenAPI::fromJsonValue(m_external_segment_link_id, json[QString("external_segment_link_id")]);
    m_external_segment_link_id_isSet = !json[QString("external_segment_link_id")].isNull() && m_external_segment_link_id_isValid;

    m_media_isValid = ::OpenAPI::fromJsonValue(m_media, json[QString("media")]);
    m_media_isSet = !json[QString("media")].isNull() && m_media_isValid;

    m_queue_isValid = ::OpenAPI::fromJsonValue(m_queue, json[QString("queue")]);
    m_queue_isSet = !json[QString("queue")].isNull() && m_queue_isValid;

    m_segment_id_isValid = ::OpenAPI::fromJsonValue(m_segment_id, json[QString("segment_id")]);
    m_segment_id_isSet = !json[QString("segment_id")].isNull() && m_segment_id_isValid;

    m_segment_recording_offset_isValid = ::OpenAPI::fromJsonValue(m_segment_recording_offset, json[QString("segment_recording_offset")]);
    m_segment_recording_offset_isSet = !json[QString("segment_recording_offset")].isNull() && m_segment_recording_offset_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIFlex_v1_insights_segments::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlex_v1_insights_segments::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_agent_id_isSet) {
        obj.insert(QString("agent_id"), ::OpenAPI::toJsonValue(m_agent_id));
    }
    if (m_agent_link_isSet) {
        obj.insert(QString("agent_link"), ::OpenAPI::toJsonValue(m_agent_link));
    }
    if (m_agent_name_isSet) {
        obj.insert(QString("agent_name"), ::OpenAPI::toJsonValue(m_agent_name));
    }
    if (m_agent_phone_isSet) {
        obj.insert(QString("agent_phone"), ::OpenAPI::toJsonValue(m_agent_phone));
    }
    if (m_agent_team_name_isSet) {
        obj.insert(QString("agent_team_name"), ::OpenAPI::toJsonValue(m_agent_team_name));
    }
    if (m_agent_team_name_in_hierarchy_isSet) {
        obj.insert(QString("agent_team_name_in_hierarchy"), ::OpenAPI::toJsonValue(m_agent_team_name_in_hierarchy));
    }
    if (m_assessment_percentage_isSet) {
        obj.insert(QString("assessment_percentage"), ::OpenAPI::toJsonValue(m_assessment_percentage));
    }
    if (m_assessment_type_isSet) {
        obj.insert(QString("assessment_type"), ::OpenAPI::toJsonValue(m_assessment_type));
    }
    if (m_customer_link_isSet) {
        obj.insert(QString("customer_link"), ::OpenAPI::toJsonValue(m_customer_link));
    }
    if (m_customer_name_isSet) {
        obj.insert(QString("customer_name"), ::OpenAPI::toJsonValue(m_customer_name));
    }
    if (m_customer_phone_isSet) {
        obj.insert(QString("customer_phone"), ::OpenAPI::toJsonValue(m_customer_phone));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_external_contact_isSet) {
        obj.insert(QString("external_contact"), ::OpenAPI::toJsonValue(m_external_contact));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("external_id"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_external_segment_link_isSet) {
        obj.insert(QString("external_segment_link"), ::OpenAPI::toJsonValue(m_external_segment_link));
    }
    if (m_external_segment_link_id_isSet) {
        obj.insert(QString("external_segment_link_id"), ::OpenAPI::toJsonValue(m_external_segment_link_id));
    }
    if (m_media_isSet) {
        obj.insert(QString("media"), ::OpenAPI::toJsonValue(m_media));
    }
    if (m_queue_isSet) {
        obj.insert(QString("queue"), ::OpenAPI::toJsonValue(m_queue));
    }
    if (m_segment_id_isSet) {
        obj.insert(QString("segment_id"), ::OpenAPI::toJsonValue(m_segment_id));
    }
    if (m_segment_recording_offset_isSet) {
        obj.insert(QString("segment_recording_offset"), ::OpenAPI::toJsonValue(m_segment_recording_offset));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIFlex_v1_insights_segments::getAccountId() const {
    return m_account_id;
}
void OAIFlex_v1_insights_segments::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIFlex_v1_insights_segments::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIFlex_v1_insights_segments::getAgentId() const {
    return m_agent_id;
}
void OAIFlex_v1_insights_segments::setAgentId(const QString &agent_id) {
    m_agent_id = agent_id;
    m_agent_id_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_agent_id_Set() const{
    return m_agent_id_isSet;
}

bool OAIFlex_v1_insights_segments::is_agent_id_Valid() const{
    return m_agent_id_isValid;
}

QString OAIFlex_v1_insights_segments::getAgentLink() const {
    return m_agent_link;
}
void OAIFlex_v1_insights_segments::setAgentLink(const QString &agent_link) {
    m_agent_link = agent_link;
    m_agent_link_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_agent_link_Set() const{
    return m_agent_link_isSet;
}

bool OAIFlex_v1_insights_segments::is_agent_link_Valid() const{
    return m_agent_link_isValid;
}

QString OAIFlex_v1_insights_segments::getAgentName() const {
    return m_agent_name;
}
void OAIFlex_v1_insights_segments::setAgentName(const QString &agent_name) {
    m_agent_name = agent_name;
    m_agent_name_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_agent_name_Set() const{
    return m_agent_name_isSet;
}

bool OAIFlex_v1_insights_segments::is_agent_name_Valid() const{
    return m_agent_name_isValid;
}

QString OAIFlex_v1_insights_segments::getAgentPhone() const {
    return m_agent_phone;
}
void OAIFlex_v1_insights_segments::setAgentPhone(const QString &agent_phone) {
    m_agent_phone = agent_phone;
    m_agent_phone_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_agent_phone_Set() const{
    return m_agent_phone_isSet;
}

bool OAIFlex_v1_insights_segments::is_agent_phone_Valid() const{
    return m_agent_phone_isValid;
}

QString OAIFlex_v1_insights_segments::getAgentTeamName() const {
    return m_agent_team_name;
}
void OAIFlex_v1_insights_segments::setAgentTeamName(const QString &agent_team_name) {
    m_agent_team_name = agent_team_name;
    m_agent_team_name_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_agent_team_name_Set() const{
    return m_agent_team_name_isSet;
}

bool OAIFlex_v1_insights_segments::is_agent_team_name_Valid() const{
    return m_agent_team_name_isValid;
}

QString OAIFlex_v1_insights_segments::getAgentTeamNameInHierarchy() const {
    return m_agent_team_name_in_hierarchy;
}
void OAIFlex_v1_insights_segments::setAgentTeamNameInHierarchy(const QString &agent_team_name_in_hierarchy) {
    m_agent_team_name_in_hierarchy = agent_team_name_in_hierarchy;
    m_agent_team_name_in_hierarchy_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_agent_team_name_in_hierarchy_Set() const{
    return m_agent_team_name_in_hierarchy_isSet;
}

bool OAIFlex_v1_insights_segments::is_agent_team_name_in_hierarchy_Valid() const{
    return m_agent_team_name_in_hierarchy_isValid;
}

QJsonValue OAIFlex_v1_insights_segments::getAssessmentPercentage() const {
    return m_assessment_percentage;
}
void OAIFlex_v1_insights_segments::setAssessmentPercentage(const QJsonValue &assessment_percentage) {
    m_assessment_percentage = assessment_percentage;
    m_assessment_percentage_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_assessment_percentage_Set() const{
    return m_assessment_percentage_isSet;
}

bool OAIFlex_v1_insights_segments::is_assessment_percentage_Valid() const{
    return m_assessment_percentage_isValid;
}

QJsonValue OAIFlex_v1_insights_segments::getAssessmentType() const {
    return m_assessment_type;
}
void OAIFlex_v1_insights_segments::setAssessmentType(const QJsonValue &assessment_type) {
    m_assessment_type = assessment_type;
    m_assessment_type_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_assessment_type_Set() const{
    return m_assessment_type_isSet;
}

bool OAIFlex_v1_insights_segments::is_assessment_type_Valid() const{
    return m_assessment_type_isValid;
}

QString OAIFlex_v1_insights_segments::getCustomerLink() const {
    return m_customer_link;
}
void OAIFlex_v1_insights_segments::setCustomerLink(const QString &customer_link) {
    m_customer_link = customer_link;
    m_customer_link_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_customer_link_Set() const{
    return m_customer_link_isSet;
}

bool OAIFlex_v1_insights_segments::is_customer_link_Valid() const{
    return m_customer_link_isValid;
}

QString OAIFlex_v1_insights_segments::getCustomerName() const {
    return m_customer_name;
}
void OAIFlex_v1_insights_segments::setCustomerName(const QString &customer_name) {
    m_customer_name = customer_name;
    m_customer_name_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_customer_name_Set() const{
    return m_customer_name_isSet;
}

bool OAIFlex_v1_insights_segments::is_customer_name_Valid() const{
    return m_customer_name_isValid;
}

QString OAIFlex_v1_insights_segments::getCustomerPhone() const {
    return m_customer_phone;
}
void OAIFlex_v1_insights_segments::setCustomerPhone(const QString &customer_phone) {
    m_customer_phone = customer_phone;
    m_customer_phone_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_customer_phone_Set() const{
    return m_customer_phone_isSet;
}

bool OAIFlex_v1_insights_segments::is_customer_phone_Valid() const{
    return m_customer_phone_isValid;
}

QString OAIFlex_v1_insights_segments::getDate() const {
    return m_date;
}
void OAIFlex_v1_insights_segments::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_date_Set() const{
    return m_date_isSet;
}

bool OAIFlex_v1_insights_segments::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIFlex_v1_insights_segments::getExternalContact() const {
    return m_external_contact;
}
void OAIFlex_v1_insights_segments::setExternalContact(const QString &external_contact) {
    m_external_contact = external_contact;
    m_external_contact_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_external_contact_Set() const{
    return m_external_contact_isSet;
}

bool OAIFlex_v1_insights_segments::is_external_contact_Valid() const{
    return m_external_contact_isValid;
}

QString OAIFlex_v1_insights_segments::getExternalId() const {
    return m_external_id;
}
void OAIFlex_v1_insights_segments::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIFlex_v1_insights_segments::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QString OAIFlex_v1_insights_segments::getExternalSegmentLink() const {
    return m_external_segment_link;
}
void OAIFlex_v1_insights_segments::setExternalSegmentLink(const QString &external_segment_link) {
    m_external_segment_link = external_segment_link;
    m_external_segment_link_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_external_segment_link_Set() const{
    return m_external_segment_link_isSet;
}

bool OAIFlex_v1_insights_segments::is_external_segment_link_Valid() const{
    return m_external_segment_link_isValid;
}

QString OAIFlex_v1_insights_segments::getExternalSegmentLinkId() const {
    return m_external_segment_link_id;
}
void OAIFlex_v1_insights_segments::setExternalSegmentLinkId(const QString &external_segment_link_id) {
    m_external_segment_link_id = external_segment_link_id;
    m_external_segment_link_id_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_external_segment_link_id_Set() const{
    return m_external_segment_link_id_isSet;
}

bool OAIFlex_v1_insights_segments::is_external_segment_link_id_Valid() const{
    return m_external_segment_link_id_isValid;
}

QJsonValue OAIFlex_v1_insights_segments::getMedia() const {
    return m_media;
}
void OAIFlex_v1_insights_segments::setMedia(const QJsonValue &media) {
    m_media = media;
    m_media_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_media_Set() const{
    return m_media_isSet;
}

bool OAIFlex_v1_insights_segments::is_media_Valid() const{
    return m_media_isValid;
}

QString OAIFlex_v1_insights_segments::getQueue() const {
    return m_queue;
}
void OAIFlex_v1_insights_segments::setQueue(const QString &queue) {
    m_queue = queue;
    m_queue_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_queue_Set() const{
    return m_queue_isSet;
}

bool OAIFlex_v1_insights_segments::is_queue_Valid() const{
    return m_queue_isValid;
}

QString OAIFlex_v1_insights_segments::getSegmentId() const {
    return m_segment_id;
}
void OAIFlex_v1_insights_segments::setSegmentId(const QString &segment_id) {
    m_segment_id = segment_id;
    m_segment_id_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_segment_id_Set() const{
    return m_segment_id_isSet;
}

bool OAIFlex_v1_insights_segments::is_segment_id_Valid() const{
    return m_segment_id_isValid;
}

QString OAIFlex_v1_insights_segments::getSegmentRecordingOffset() const {
    return m_segment_recording_offset;
}
void OAIFlex_v1_insights_segments::setSegmentRecordingOffset(const QString &segment_recording_offset) {
    m_segment_recording_offset = segment_recording_offset;
    m_segment_recording_offset_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_segment_recording_offset_Set() const{
    return m_segment_recording_offset_isSet;
}

bool OAIFlex_v1_insights_segments::is_segment_recording_offset_Valid() const{
    return m_segment_recording_offset_isValid;
}

QString OAIFlex_v1_insights_segments::getUrl() const {
    return m_url;
}
void OAIFlex_v1_insights_segments::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFlex_v1_insights_segments::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFlex_v1_insights_segments::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIFlex_v1_insights_segments::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_team_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_team_name_in_hierarchy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assessment_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assessment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_segment_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_segment_link_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_recording_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlex_v1_insights_segments::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
