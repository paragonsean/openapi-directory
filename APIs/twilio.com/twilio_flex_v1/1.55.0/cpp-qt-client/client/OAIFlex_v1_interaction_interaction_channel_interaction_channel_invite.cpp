/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite() {
    this->initializeModel();
}

OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::~OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite() {}

void OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::initializeModel() {

    m_channel_sid_isSet = false;
    m_channel_sid_isValid = false;

    m_interaction_sid_isSet = false;
    m_interaction_sid_isValid = false;

    m_routing_isSet = false;
    m_routing_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::fromJsonObject(QJsonObject json) {

    m_channel_sid_isValid = ::OpenAPI::fromJsonValue(m_channel_sid, json[QString("channel_sid")]);
    m_channel_sid_isSet = !json[QString("channel_sid")].isNull() && m_channel_sid_isValid;

    m_interaction_sid_isValid = ::OpenAPI::fromJsonValue(m_interaction_sid, json[QString("interaction_sid")]);
    m_interaction_sid_isSet = !json[QString("interaction_sid")].isNull() && m_interaction_sid_isValid;

    m_routing_isValid = ::OpenAPI::fromJsonValue(m_routing, json[QString("routing")]);
    m_routing_isSet = !json[QString("routing")].isNull() && m_routing_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_sid_isSet) {
        obj.insert(QString("channel_sid"), ::OpenAPI::toJsonValue(m_channel_sid));
    }
    if (m_interaction_sid_isSet) {
        obj.insert(QString("interaction_sid"), ::OpenAPI::toJsonValue(m_interaction_sid));
    }
    if (m_routing_isSet) {
        obj.insert(QString("routing"), ::OpenAPI::toJsonValue(m_routing));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::getChannelSid() const {
    return m_channel_sid;
}
void OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::setChannelSid(const QString &channel_sid) {
    m_channel_sid = channel_sid;
    m_channel_sid_isSet = true;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_channel_sid_Set() const{
    return m_channel_sid_isSet;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_channel_sid_Valid() const{
    return m_channel_sid_isValid;
}

QString OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::getInteractionSid() const {
    return m_interaction_sid;
}
void OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::setInteractionSid(const QString &interaction_sid) {
    m_interaction_sid = interaction_sid;
    m_interaction_sid_isSet = true;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_interaction_sid_Set() const{
    return m_interaction_sid_isSet;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_interaction_sid_Valid() const{
    return m_interaction_sid_isValid;
}

QJsonValue OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::getRouting() const {
    return m_routing;
}
void OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::setRouting(const QJsonValue &routing) {
    m_routing = routing;
    m_routing_isSet = true;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_routing_Set() const{
    return m_routing_isSet;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_routing_Valid() const{
    return m_routing_isValid;
}

QString OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::getSid() const {
    return m_sid;
}
void OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::getUrl() const {
    return m_url;
}
void OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interaction_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlex_v1_interaction_interaction_channel_interaction_channel_invite::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
