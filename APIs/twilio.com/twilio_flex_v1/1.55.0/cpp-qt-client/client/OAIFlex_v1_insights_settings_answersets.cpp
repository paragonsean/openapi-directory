/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlex_v1_insights_settings_answersets.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlex_v1_insights_settings_answersets::OAIFlex_v1_insights_settings_answersets(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlex_v1_insights_settings_answersets::OAIFlex_v1_insights_settings_answersets() {
    this->initializeModel();
}

OAIFlex_v1_insights_settings_answersets::~OAIFlex_v1_insights_settings_answersets() {}

void OAIFlex_v1_insights_settings_answersets::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_answer_set_categories_isSet = false;
    m_answer_set_categories_isValid = false;

    m_answer_sets_isSet = false;
    m_answer_sets_isValid = false;

    m_not_applicable_isSet = false;
    m_not_applicable_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIFlex_v1_insights_settings_answersets::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlex_v1_insights_settings_answersets::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_answer_set_categories_isValid = ::OpenAPI::fromJsonValue(m_answer_set_categories, json[QString("answer_set_categories")]);
    m_answer_set_categories_isSet = !json[QString("answer_set_categories")].isNull() && m_answer_set_categories_isValid;

    m_answer_sets_isValid = ::OpenAPI::fromJsonValue(m_answer_sets, json[QString("answer_sets")]);
    m_answer_sets_isSet = !json[QString("answer_sets")].isNull() && m_answer_sets_isValid;

    m_not_applicable_isValid = ::OpenAPI::fromJsonValue(m_not_applicable, json[QString("not_applicable")]);
    m_not_applicable_isSet = !json[QString("not_applicable")].isNull() && m_not_applicable_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIFlex_v1_insights_settings_answersets::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlex_v1_insights_settings_answersets::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_answer_set_categories_isSet) {
        obj.insert(QString("answer_set_categories"), ::OpenAPI::toJsonValue(m_answer_set_categories));
    }
    if (m_answer_sets_isSet) {
        obj.insert(QString("answer_sets"), ::OpenAPI::toJsonValue(m_answer_sets));
    }
    if (m_not_applicable_isSet) {
        obj.insert(QString("not_applicable"), ::OpenAPI::toJsonValue(m_not_applicable));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIFlex_v1_insights_settings_answersets::getAccountSid() const {
    return m_account_sid;
}
void OAIFlex_v1_insights_settings_answersets::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIFlex_v1_insights_settings_answersets::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIFlex_v1_insights_settings_answersets::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QJsonValue OAIFlex_v1_insights_settings_answersets::getAnswerSetCategories() const {
    return m_answer_set_categories;
}
void OAIFlex_v1_insights_settings_answersets::setAnswerSetCategories(const QJsonValue &answer_set_categories) {
    m_answer_set_categories = answer_set_categories;
    m_answer_set_categories_isSet = true;
}

bool OAIFlex_v1_insights_settings_answersets::is_answer_set_categories_Set() const{
    return m_answer_set_categories_isSet;
}

bool OAIFlex_v1_insights_settings_answersets::is_answer_set_categories_Valid() const{
    return m_answer_set_categories_isValid;
}

QJsonValue OAIFlex_v1_insights_settings_answersets::getAnswerSets() const {
    return m_answer_sets;
}
void OAIFlex_v1_insights_settings_answersets::setAnswerSets(const QJsonValue &answer_sets) {
    m_answer_sets = answer_sets;
    m_answer_sets_isSet = true;
}

bool OAIFlex_v1_insights_settings_answersets::is_answer_sets_Set() const{
    return m_answer_sets_isSet;
}

bool OAIFlex_v1_insights_settings_answersets::is_answer_sets_Valid() const{
    return m_answer_sets_isValid;
}

QJsonValue OAIFlex_v1_insights_settings_answersets::getNotApplicable() const {
    return m_not_applicable;
}
void OAIFlex_v1_insights_settings_answersets::setNotApplicable(const QJsonValue &not_applicable) {
    m_not_applicable = not_applicable;
    m_not_applicable_isSet = true;
}

bool OAIFlex_v1_insights_settings_answersets::is_not_applicable_Set() const{
    return m_not_applicable_isSet;
}

bool OAIFlex_v1_insights_settings_answersets::is_not_applicable_Valid() const{
    return m_not_applicable_isValid;
}

QString OAIFlex_v1_insights_settings_answersets::getUrl() const {
    return m_url;
}
void OAIFlex_v1_insights_settings_answersets::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFlex_v1_insights_settings_answersets::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFlex_v1_insights_settings_answersets::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIFlex_v1_insights_settings_answersets::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_set_categories_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_sets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_not_applicable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlex_v1_insights_settings_answersets::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
