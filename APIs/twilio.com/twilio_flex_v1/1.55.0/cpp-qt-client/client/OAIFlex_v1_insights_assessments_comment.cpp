/**
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlex_v1_insights_assessments_comment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlex_v1_insights_assessments_comment::OAIFlex_v1_insights_assessments_comment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlex_v1_insights_assessments_comment::OAIFlex_v1_insights_assessments_comment() {
    this->initializeModel();
}

OAIFlex_v1_insights_assessments_comment::~OAIFlex_v1_insights_assessments_comment() {}

void OAIFlex_v1_insights_assessments_comment::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_agent_id_isSet = false;
    m_agent_id_isValid = false;

    m_assessment_sid_isSet = false;
    m_assessment_sid_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_offset_isSet = false;
    m_offset_isValid = false;

    m_report_isSet = false;
    m_report_isValid = false;

    m_segment_id_isSet = false;
    m_segment_id_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_user_email_isSet = false;
    m_user_email_isValid = false;

    m_user_name_isSet = false;
    m_user_name_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIFlex_v1_insights_assessments_comment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlex_v1_insights_assessments_comment::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_agent_id_isValid = ::OpenAPI::fromJsonValue(m_agent_id, json[QString("agent_id")]);
    m_agent_id_isSet = !json[QString("agent_id")].isNull() && m_agent_id_isValid;

    m_assessment_sid_isValid = ::OpenAPI::fromJsonValue(m_assessment_sid, json[QString("assessment_sid")]);
    m_assessment_sid_isSet = !json[QString("assessment_sid")].isNull() && m_assessment_sid_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_offset_isValid = ::OpenAPI::fromJsonValue(m_offset, json[QString("offset")]);
    m_offset_isSet = !json[QString("offset")].isNull() && m_offset_isValid;

    m_report_isValid = ::OpenAPI::fromJsonValue(m_report, json[QString("report")]);
    m_report_isSet = !json[QString("report")].isNull() && m_report_isValid;

    m_segment_id_isValid = ::OpenAPI::fromJsonValue(m_segment_id, json[QString("segment_id")]);
    m_segment_id_isSet = !json[QString("segment_id")].isNull() && m_segment_id_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_user_email_isValid = ::OpenAPI::fromJsonValue(m_user_email, json[QString("user_email")]);
    m_user_email_isSet = !json[QString("user_email")].isNull() && m_user_email_isValid;

    m_user_name_isValid = ::OpenAPI::fromJsonValue(m_user_name, json[QString("user_name")]);
    m_user_name_isSet = !json[QString("user_name")].isNull() && m_user_name_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAIFlex_v1_insights_assessments_comment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlex_v1_insights_assessments_comment::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_agent_id_isSet) {
        obj.insert(QString("agent_id"), ::OpenAPI::toJsonValue(m_agent_id));
    }
    if (m_assessment_sid_isSet) {
        obj.insert(QString("assessment_sid"), ::OpenAPI::toJsonValue(m_assessment_sid));
    }
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_offset_isSet) {
        obj.insert(QString("offset"), ::OpenAPI::toJsonValue(m_offset));
    }
    if (m_report_isSet) {
        obj.insert(QString("report"), ::OpenAPI::toJsonValue(m_report));
    }
    if (m_segment_id_isSet) {
        obj.insert(QString("segment_id"), ::OpenAPI::toJsonValue(m_segment_id));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_user_email_isSet) {
        obj.insert(QString("user_email"), ::OpenAPI::toJsonValue(m_user_email));
    }
    if (m_user_name_isSet) {
        obj.insert(QString("user_name"), ::OpenAPI::toJsonValue(m_user_name));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAIFlex_v1_insights_assessments_comment::getAccountSid() const {
    return m_account_sid;
}
void OAIFlex_v1_insights_assessments_comment::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIFlex_v1_insights_assessments_comment::getAgentId() const {
    return m_agent_id;
}
void OAIFlex_v1_insights_assessments_comment::setAgentId(const QString &agent_id) {
    m_agent_id = agent_id;
    m_agent_id_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_agent_id_Set() const{
    return m_agent_id_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_agent_id_Valid() const{
    return m_agent_id_isValid;
}

QString OAIFlex_v1_insights_assessments_comment::getAssessmentSid() const {
    return m_assessment_sid;
}
void OAIFlex_v1_insights_assessments_comment::setAssessmentSid(const QString &assessment_sid) {
    m_assessment_sid = assessment_sid;
    m_assessment_sid_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_assessment_sid_Set() const{
    return m_assessment_sid_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_assessment_sid_Valid() const{
    return m_assessment_sid_isValid;
}

QJsonValue OAIFlex_v1_insights_assessments_comment::getComment() const {
    return m_comment;
}
void OAIFlex_v1_insights_assessments_comment::setComment(const QJsonValue &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_comment_Valid() const{
    return m_comment_isValid;
}

double OAIFlex_v1_insights_assessments_comment::getOffset() const {
    return m_offset;
}
void OAIFlex_v1_insights_assessments_comment::setOffset(const double &offset) {
    m_offset = offset;
    m_offset_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_offset_Set() const{
    return m_offset_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_offset_Valid() const{
    return m_offset_isValid;
}

bool OAIFlex_v1_insights_assessments_comment::isReport() const {
    return m_report;
}
void OAIFlex_v1_insights_assessments_comment::setReport(const bool &report) {
    m_report = report;
    m_report_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_report_Set() const{
    return m_report_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_report_Valid() const{
    return m_report_isValid;
}

QString OAIFlex_v1_insights_assessments_comment::getSegmentId() const {
    return m_segment_id;
}
void OAIFlex_v1_insights_assessments_comment::setSegmentId(const QString &segment_id) {
    m_segment_id = segment_id;
    m_segment_id_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_segment_id_Set() const{
    return m_segment_id_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_segment_id_Valid() const{
    return m_segment_id_isValid;
}

double OAIFlex_v1_insights_assessments_comment::getTimestamp() const {
    return m_timestamp;
}
void OAIFlex_v1_insights_assessments_comment::setTimestamp(const double &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

QString OAIFlex_v1_insights_assessments_comment::getUrl() const {
    return m_url;
}
void OAIFlex_v1_insights_assessments_comment::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIFlex_v1_insights_assessments_comment::getUserEmail() const {
    return m_user_email;
}
void OAIFlex_v1_insights_assessments_comment::setUserEmail(const QString &user_email) {
    m_user_email = user_email;
    m_user_email_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_user_email_Set() const{
    return m_user_email_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_user_email_Valid() const{
    return m_user_email_isValid;
}

QString OAIFlex_v1_insights_assessments_comment::getUserName() const {
    return m_user_name;
}
void OAIFlex_v1_insights_assessments_comment::setUserName(const QString &user_name) {
    m_user_name = user_name;
    m_user_name_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_user_name_Set() const{
    return m_user_name_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_user_name_Valid() const{
    return m_user_name_isValid;
}

double OAIFlex_v1_insights_assessments_comment::getWeight() const {
    return m_weight;
}
void OAIFlex_v1_insights_assessments_comment::setWeight(const double &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIFlex_v1_insights_assessments_comment::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIFlex_v1_insights_assessments_comment::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIFlex_v1_insights_assessments_comment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assessment_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlex_v1_insights_assessments_comment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
