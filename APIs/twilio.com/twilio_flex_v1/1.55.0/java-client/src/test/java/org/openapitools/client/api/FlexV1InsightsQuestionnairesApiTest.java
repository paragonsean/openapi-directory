/*
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FlexV1InsightsQuestionnaires;
import org.openapitools.client.model.ListInsightsQuestionnairesResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FlexV1InsightsQuestionnairesApi
 */
@Disabled
public class FlexV1InsightsQuestionnairesApiTest {

    private final FlexV1InsightsQuestionnairesApi api = new FlexV1InsightsQuestionnairesApi();

    /**
     * To create a Questionnaire
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInsightsQuestionnairesTest() throws ApiException {
        String name = null;
        String authorization = null;
        Boolean active = null;
        String description = null;
        List<String> questionSids = null;
        FlexV1InsightsQuestionnaires response = api.createInsightsQuestionnaires(name, authorization, active, description, questionSids);
        // TODO: test validations
    }

    /**
     * To delete the questionnaire
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteInsightsQuestionnairesTest() throws ApiException {
        String questionnaireSid = null;
        String authorization = null;
        api.deleteInsightsQuestionnaires(questionnaireSid, authorization);
        // TODO: test validations
    }

    /**
     * To get the Questionnaire Detail
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchInsightsQuestionnairesTest() throws ApiException {
        String questionnaireSid = null;
        String authorization = null;
        FlexV1InsightsQuestionnaires response = api.fetchInsightsQuestionnaires(questionnaireSid, authorization);
        // TODO: test validations
    }

    /**
     * To get all questionnaires with questions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInsightsQuestionnairesTest() throws ApiException {
        String authorization = null;
        Boolean includeInactive = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListInsightsQuestionnairesResponse response = api.listInsightsQuestionnaires(authorization, includeInactive, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * To update the questionnaire
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateInsightsQuestionnairesTest() throws ApiException {
        String questionnaireSid = null;
        Boolean active = null;
        String authorization = null;
        String description = null;
        String name = null;
        List<String> questionSids = null;
        FlexV1InsightsQuestionnaires response = api.updateInsightsQuestionnaires(questionnaireSid, active, authorization, description, name, questionSids);
        // TODO: test validations
    }

}
