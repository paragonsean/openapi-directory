/*
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FlexV1Interaction
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:36.090607-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FlexV1Interaction {
  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private Object channel = null;

  public static final String SERIALIZED_NAME_INTERACTION_CONTEXT_SID = "interaction_context_sid";
  @SerializedName(SERIALIZED_NAME_INTERACTION_CONTEXT_SID)
  private String interactionContextSid;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_ROUTING = "routing";
  @SerializedName(SERIALIZED_NAME_ROUTING)
  private Object routing = null;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public FlexV1Interaction() {
  }

  public FlexV1Interaction channel(Object channel) {
    this.channel = channel;
    return this;
  }

  /**
   * A JSON object that defines the Interaction’s communication channel and includes details about the channel. See the [Outbound SMS](https://www.twilio.com/docs/flex/developer/conversations/interactions-api/interactions#agent-initiated-outbound-interactions) and [inbound (API-initiated)](https://www.twilio.com/docs/flex/developer/conversations/interactions-api/interactions#api-initiated-contact) Channel object examples.
   * @return channel
   */
  @javax.annotation.Nullable
  public Object getChannel() {
    return channel;
  }

  public void setChannel(Object channel) {
    this.channel = channel;
  }


  public FlexV1Interaction interactionContextSid(String interactionContextSid) {
    this.interactionContextSid = interactionContextSid;
    return this;
  }

  /**
   * Get interactionContextSid
   * @return interactionContextSid
   */
  @javax.annotation.Nullable
  public String getInteractionContextSid() {
    return interactionContextSid;
  }

  public void setInteractionContextSid(String interactionContextSid) {
    this.interactionContextSid = interactionContextSid;
  }


  public FlexV1Interaction links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public FlexV1Interaction routing(Object routing) {
    this.routing = routing;
    return this;
  }

  /**
   * A JSON Object representing the routing rules for the Interaction Channel. See [Outbound SMS Example](https://www.twilio.com/docs/flex/developer/conversations/interactions-api/interactions#agent-initiated-outbound-interactions) for an example Routing object. The Interactions resource uses TaskRouter for all routing functionality.   All attributes in the Routing object on your Interaction request body are added “as is” to the task. For a list of known attributes consumed by the Flex UI and/or Flex Insights, see [Known Task Attributes](https://www.twilio.com/docs/flex/developer/conversations/interactions-api#task-attributes).
   * @return routing
   */
  @javax.annotation.Nullable
  public Object getRouting() {
    return routing;
  }

  public void setRouting(Object routing) {
    this.routing = routing;
  }


  public FlexV1Interaction sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string created by Twilio to identify an Interaction resource, prefixed with KD.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public FlexV1Interaction url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlexV1Interaction flexV1Interaction = (FlexV1Interaction) o;
    return Objects.equals(this.channel, flexV1Interaction.channel) &&
        Objects.equals(this.interactionContextSid, flexV1Interaction.interactionContextSid) &&
        Objects.equals(this.links, flexV1Interaction.links) &&
        Objects.equals(this.routing, flexV1Interaction.routing) &&
        Objects.equals(this.sid, flexV1Interaction.sid) &&
        Objects.equals(this.url, flexV1Interaction.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(channel, interactionContextSid, links, routing, sid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlexV1Interaction {\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    interactionContextSid: ").append(toIndentedString(interactionContextSid)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    routing: ").append(toIndentedString(routing)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("channel");
    openapiFields.add("interaction_context_sid");
    openapiFields.add("links");
    openapiFields.add("routing");
    openapiFields.add("sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlexV1Interaction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlexV1Interaction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlexV1Interaction is not found in the empty JSON string", FlexV1Interaction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlexV1Interaction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlexV1Interaction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("interaction_context_sid") != null && !jsonObj.get("interaction_context_sid").isJsonNull()) && !jsonObj.get("interaction_context_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interaction_context_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interaction_context_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlexV1Interaction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlexV1Interaction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlexV1Interaction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlexV1Interaction.class));

       return (TypeAdapter<T>) new TypeAdapter<FlexV1Interaction>() {
           @Override
           public void write(JsonWriter out, FlexV1Interaction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlexV1Interaction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlexV1Interaction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlexV1Interaction
   * @throws IOException if the JSON string is invalid with respect to FlexV1Interaction
   */
  public static FlexV1Interaction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlexV1Interaction.class);
  }

  /**
   * Convert an instance of FlexV1Interaction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

