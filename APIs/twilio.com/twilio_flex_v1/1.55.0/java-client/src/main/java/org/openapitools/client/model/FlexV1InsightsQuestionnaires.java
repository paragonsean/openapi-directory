/*
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FlexV1InsightsQuestionnaires
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:36.090607-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FlexV1InsightsQuestionnaires {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_QUESTIONNAIRE_SID = "questionnaire_sid";
  @SerializedName(SERIALIZED_NAME_QUESTIONNAIRE_SID)
  private String questionnaireSid;

  public static final String SERIALIZED_NAME_QUESTIONS = "questions";
  @SerializedName(SERIALIZED_NAME_QUESTIONS)
  private List<Object> questions;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public FlexV1InsightsQuestionnaires() {
  }

  public FlexV1InsightsQuestionnaires accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Insights resource and owns this resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public FlexV1InsightsQuestionnaires active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * The flag to enable or disable questionnaire
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public FlexV1InsightsQuestionnaires description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of this questionnaire
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public FlexV1InsightsQuestionnaires name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of this category.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public FlexV1InsightsQuestionnaires questionnaireSid(String questionnaireSid) {
    this.questionnaireSid = questionnaireSid;
    return this;
  }

  /**
   * The sid of this questionnaire
   * @return questionnaireSid
   */
  @javax.annotation.Nullable
  public String getQuestionnaireSid() {
    return questionnaireSid;
  }

  public void setQuestionnaireSid(String questionnaireSid) {
    this.questionnaireSid = questionnaireSid;
  }


  public FlexV1InsightsQuestionnaires questions(List<Object> questions) {
    this.questions = questions;
    return this;
  }

  public FlexV1InsightsQuestionnaires addQuestionsItem(Object questionsItem) {
    if (this.questions == null) {
      this.questions = new ArrayList<>();
    }
    this.questions.add(questionsItem);
    return this;
  }

  /**
   * The list of questions with category for a questionnaire
   * @return questions
   */
  @javax.annotation.Nullable
  public List<Object> getQuestions() {
    return questions;
  }

  public void setQuestions(List<Object> questions) {
    this.questions = questions;
  }


  public FlexV1InsightsQuestionnaires url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlexV1InsightsQuestionnaires flexV1InsightsQuestionnaires = (FlexV1InsightsQuestionnaires) o;
    return Objects.equals(this.accountSid, flexV1InsightsQuestionnaires.accountSid) &&
        Objects.equals(this.active, flexV1InsightsQuestionnaires.active) &&
        Objects.equals(this.description, flexV1InsightsQuestionnaires.description) &&
        Objects.equals(this.name, flexV1InsightsQuestionnaires.name) &&
        Objects.equals(this.questionnaireSid, flexV1InsightsQuestionnaires.questionnaireSid) &&
        Objects.equals(this.questions, flexV1InsightsQuestionnaires.questions) &&
        Objects.equals(this.url, flexV1InsightsQuestionnaires.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, active, description, name, questionnaireSid, questions, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlexV1InsightsQuestionnaires {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    questionnaireSid: ").append(toIndentedString(questionnaireSid)).append("\n");
    sb.append("    questions: ").append(toIndentedString(questions)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("active");
    openapiFields.add("description");
    openapiFields.add("name");
    openapiFields.add("questionnaire_sid");
    openapiFields.add("questions");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlexV1InsightsQuestionnaires
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlexV1InsightsQuestionnaires.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlexV1InsightsQuestionnaires is not found in the empty JSON string", FlexV1InsightsQuestionnaires.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlexV1InsightsQuestionnaires.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlexV1InsightsQuestionnaires` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("questionnaire_sid") != null && !jsonObj.get("questionnaire_sid").isJsonNull()) && !jsonObj.get("questionnaire_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `questionnaire_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("questionnaire_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("questions") != null && !jsonObj.get("questions").isJsonNull() && !jsonObj.get("questions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `questions` to be an array in the JSON string but got `%s`", jsonObj.get("questions").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlexV1InsightsQuestionnaires.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlexV1InsightsQuestionnaires' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlexV1InsightsQuestionnaires> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlexV1InsightsQuestionnaires.class));

       return (TypeAdapter<T>) new TypeAdapter<FlexV1InsightsQuestionnaires>() {
           @Override
           public void write(JsonWriter out, FlexV1InsightsQuestionnaires value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlexV1InsightsQuestionnaires read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlexV1InsightsQuestionnaires given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlexV1InsightsQuestionnaires
   * @throws IOException if the JSON string is invalid with respect to FlexV1InsightsQuestionnaires
   */
  public static FlexV1InsightsQuestionnaires fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlexV1InsightsQuestionnaires.class);
  }

  /**
   * Convert an instance of FlexV1InsightsQuestionnaires to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

