/*
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.FlexFlowEnumChannelType;
import org.openapitools.client.model.FlexFlowEnumIntegrationType;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FlexV1FlexFlow
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:36.090607-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FlexV1FlexFlow {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_CHANNEL_TYPE = "channel_type";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TYPE)
  private FlexFlowEnumChannelType channelType;

  public static final String SERIALIZED_NAME_CHAT_SERVICE_SID = "chat_service_sid";
  @SerializedName(SERIALIZED_NAME_CHAT_SERVICE_SID)
  private String chatServiceSid;

  public static final String SERIALIZED_NAME_CONTACT_IDENTITY = "contact_identity";
  @SerializedName(SERIALIZED_NAME_CONTACT_IDENTITY)
  private String contactIdentity;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_INTEGRATION = "integration";
  @SerializedName(SERIALIZED_NAME_INTEGRATION)
  private Object integration = null;

  public static final String SERIALIZED_NAME_INTEGRATION_TYPE = "integration_type";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_TYPE)
  private FlexFlowEnumIntegrationType integrationType;

  public static final String SERIALIZED_NAME_JANITOR_ENABLED = "janitor_enabled";
  @SerializedName(SERIALIZED_NAME_JANITOR_ENABLED)
  private Boolean janitorEnabled;

  public static final String SERIALIZED_NAME_LONG_LIVED = "long_lived";
  @SerializedName(SERIALIZED_NAME_LONG_LIVED)
  private Boolean longLived;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public FlexV1FlexFlow() {
  }

  public FlexV1FlexFlow accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Flow resource and owns this Workflow.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public FlexV1FlexFlow channelType(FlexFlowEnumChannelType channelType) {
    this.channelType = channelType;
    return this;
  }

  /**
   * Get channelType
   * @return channelType
   */
  @javax.annotation.Nullable
  public FlexFlowEnumChannelType getChannelType() {
    return channelType;
  }

  public void setChannelType(FlexFlowEnumChannelType channelType) {
    this.channelType = channelType;
  }


  public FlexV1FlexFlow chatServiceSid(String chatServiceSid) {
    this.chatServiceSid = chatServiceSid;
    return this;
  }

  /**
   * The SID of the chat service.
   * @return chatServiceSid
   */
  @javax.annotation.Nullable
  public String getChatServiceSid() {
    return chatServiceSid;
  }

  public void setChatServiceSid(String chatServiceSid) {
    this.chatServiceSid = chatServiceSid;
  }


  public FlexV1FlexFlow contactIdentity(String contactIdentity) {
    this.contactIdentity = contactIdentity;
    return this;
  }

  /**
   * The channel contact&#39;s Identity.
   * @return contactIdentity
   */
  @javax.annotation.Nullable
  public String getContactIdentity() {
    return contactIdentity;
  }

  public void setContactIdentity(String contactIdentity) {
    this.contactIdentity = contactIdentity;
  }


  public FlexV1FlexFlow dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public FlexV1FlexFlow dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public FlexV1FlexFlow enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Whether the Flex Flow is enabled.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public FlexV1FlexFlow friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the resource.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public FlexV1FlexFlow integration(Object integration) {
    this.integration = integration;
    return this;
  }

  /**
   * An object that contains specific parameters for the integration.
   * @return integration
   */
  @javax.annotation.Nullable
  public Object getIntegration() {
    return integration;
  }

  public void setIntegration(Object integration) {
    this.integration = integration;
  }


  public FlexV1FlexFlow integrationType(FlexFlowEnumIntegrationType integrationType) {
    this.integrationType = integrationType;
    return this;
  }

  /**
   * Get integrationType
   * @return integrationType
   */
  @javax.annotation.Nullable
  public FlexFlowEnumIntegrationType getIntegrationType() {
    return integrationType;
  }

  public void setIntegrationType(FlexFlowEnumIntegrationType integrationType) {
    this.integrationType = integrationType;
  }


  public FlexV1FlexFlow janitorEnabled(Boolean janitorEnabled) {
    this.janitorEnabled = janitorEnabled;
    return this;
  }

  /**
   * When enabled, the Messaging Channel Janitor will remove active Proxy sessions if the associated Task is deleted outside of the Flex UI. Defaults to &#x60;false&#x60;.
   * @return janitorEnabled
   */
  @javax.annotation.Nullable
  public Boolean getJanitorEnabled() {
    return janitorEnabled;
  }

  public void setJanitorEnabled(Boolean janitorEnabled) {
    this.janitorEnabled = janitorEnabled;
  }


  public FlexV1FlexFlow longLived(Boolean longLived) {
    this.longLived = longLived;
    return this;
  }

  /**
   * When enabled, Flex will keep the chat channel active so that it may be used for subsequent interactions with a contact identity. Defaults to &#x60;false&#x60;.
   * @return longLived
   */
  @javax.annotation.Nullable
  public Boolean getLongLived() {
    return longLived;
  }

  public void setLongLived(Boolean longLived) {
    this.longLived = longLived;
  }


  public FlexV1FlexFlow sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Flex Flow resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public FlexV1FlexFlow url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Flex Flow resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlexV1FlexFlow flexV1FlexFlow = (FlexV1FlexFlow) o;
    return Objects.equals(this.accountSid, flexV1FlexFlow.accountSid) &&
        Objects.equals(this.channelType, flexV1FlexFlow.channelType) &&
        Objects.equals(this.chatServiceSid, flexV1FlexFlow.chatServiceSid) &&
        Objects.equals(this.contactIdentity, flexV1FlexFlow.contactIdentity) &&
        Objects.equals(this.dateCreated, flexV1FlexFlow.dateCreated) &&
        Objects.equals(this.dateUpdated, flexV1FlexFlow.dateUpdated) &&
        Objects.equals(this.enabled, flexV1FlexFlow.enabled) &&
        Objects.equals(this.friendlyName, flexV1FlexFlow.friendlyName) &&
        Objects.equals(this.integration, flexV1FlexFlow.integration) &&
        Objects.equals(this.integrationType, flexV1FlexFlow.integrationType) &&
        Objects.equals(this.janitorEnabled, flexV1FlexFlow.janitorEnabled) &&
        Objects.equals(this.longLived, flexV1FlexFlow.longLived) &&
        Objects.equals(this.sid, flexV1FlexFlow.sid) &&
        Objects.equals(this.url, flexV1FlexFlow.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, channelType, chatServiceSid, contactIdentity, dateCreated, dateUpdated, enabled, friendlyName, integration, integrationType, janitorEnabled, longLived, sid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlexV1FlexFlow {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    channelType: ").append(toIndentedString(channelType)).append("\n");
    sb.append("    chatServiceSid: ").append(toIndentedString(chatServiceSid)).append("\n");
    sb.append("    contactIdentity: ").append(toIndentedString(contactIdentity)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    integration: ").append(toIndentedString(integration)).append("\n");
    sb.append("    integrationType: ").append(toIndentedString(integrationType)).append("\n");
    sb.append("    janitorEnabled: ").append(toIndentedString(janitorEnabled)).append("\n");
    sb.append("    longLived: ").append(toIndentedString(longLived)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("channel_type");
    openapiFields.add("chat_service_sid");
    openapiFields.add("contact_identity");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("enabled");
    openapiFields.add("friendly_name");
    openapiFields.add("integration");
    openapiFields.add("integration_type");
    openapiFields.add("janitor_enabled");
    openapiFields.add("long_lived");
    openapiFields.add("sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlexV1FlexFlow
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlexV1FlexFlow.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlexV1FlexFlow is not found in the empty JSON string", FlexV1FlexFlow.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlexV1FlexFlow.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlexV1FlexFlow` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("channel_type") != null && !jsonObj.get("channel_type").isJsonNull()) && !jsonObj.get("channel_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel_type").toString()));
      }
      // validate the optional field `channel_type`
      if (jsonObj.get("channel_type") != null && !jsonObj.get("channel_type").isJsonNull()) {
        FlexFlowEnumChannelType.validateJsonElement(jsonObj.get("channel_type"));
      }
      if ((jsonObj.get("chat_service_sid") != null && !jsonObj.get("chat_service_sid").isJsonNull()) && !jsonObj.get("chat_service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chat_service_sid").toString()));
      }
      if ((jsonObj.get("contact_identity") != null && !jsonObj.get("contact_identity").isJsonNull()) && !jsonObj.get("contact_identity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_identity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact_identity").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("integration_type") != null && !jsonObj.get("integration_type").isJsonNull()) && !jsonObj.get("integration_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integration_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integration_type").toString()));
      }
      // validate the optional field `integration_type`
      if (jsonObj.get("integration_type") != null && !jsonObj.get("integration_type").isJsonNull()) {
        FlexFlowEnumIntegrationType.validateJsonElement(jsonObj.get("integration_type"));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlexV1FlexFlow.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlexV1FlexFlow' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlexV1FlexFlow> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlexV1FlexFlow.class));

       return (TypeAdapter<T>) new TypeAdapter<FlexV1FlexFlow>() {
           @Override
           public void write(JsonWriter out, FlexV1FlexFlow value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlexV1FlexFlow read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlexV1FlexFlow given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlexV1FlexFlow
   * @throws IOException if the JSON string is invalid with respect to FlexV1FlexFlow
   */
  public static FlexV1FlexFlow fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlexV1FlexFlow.class);
  }

  /**
   * Convert an instance of FlexV1FlexFlow to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

